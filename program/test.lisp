#+NO
(defun sta-test-schule ()
  (WISSENSBASIS_LADEN "schablone-neu2.kb")
  (sta-load-schule)
  (WISSENSBASIS_LADEN "kant-neu-instanzen.ib" nil t)
  (CWR=LADE_ES_ES_LOKAL (FALLNAME "e-nachmittag-ober1.case"))
  (SB-SPROF:WITH-PROFILING (:MAX-SAMPLES 1000 :REPORT :GRAPH :LOOP NIL :MODE  :CPU #+no :alloc :sample-interval 0.001)
    (RECHNEN nil))
  (PRO=NACHOPTIMIERUNG)
  )

(defun sta-test-schule ()
  (WISSENSBASIS_LADEN "schablone-neu2.kb")
  (sta-load-schule)
  (WISSENSBASIS_LADEN "kant-neu-instanzen.ib" nil t)
  (CWR=LADE_ES_ES_LOKAL (FALLNAME "e-nachmittag-ober1.case"))
  (RECHNEN nil)
  (PRO=NACHOPTIMIERUNG)
  )

(defun sta-test-schule-2 ()
  (WISSENSBASIS_LADEN "schablone-neu2.kb")
  (sta-load-schule)
  (WISSENSBASIS_LADEN "kant-neu-instanzen.ib" nil t)
  (CWR=LADE_ES_ES_LOKAL (FALLNAME "rooms.case"))
  (RECHNEN nil)
  (PRO=NACHOPTIMIERUNG)
  )

(defun sta-test-nqueens (&optional (size 8))
  (ueber-hilf)
  (WISSENSBASIS_LADEN "N Damen Scheduling 5.txt")
  (yas=schreibe_wert (cwr=die_wurzel) `dateien (list "n-queens-scheduling"))
  (hilfsdateien_laden)
  (nd=objekte-erzeugen size)
  (RECHNEN nil)
  (PRO=NACHOPTIMIERUNG)
  (nd=ausgabe)
  )

(defun sta-test-school-prepare ()
  (let ((*package* (find-package :cl-user)))
    (WISSENSBASIS_LADEN "schablone-neu2.kb")
    (sta-load-schule)
    (WISSENSBASIS_LADEN "kant-neu-instanzen.ib" nil t)
    (CWR=LADE_ES_ES_LOKAL (FALLNAME "e-nachmittag-ober1.case"))))

(defun sta-test-school-execute ()
  (let ((*package* (find-package :cl-user))
	(pro_korrekturstatistik_merken nil)
	(*pro_print-in-correction* nil)
	(cwr_zeitmessung_debug nil))
    (setq *pro_print-in-correction* nil)
    (RECHNEN nil)
    (PRO=NACHOPTIMIERUNG nil)))
  
(defun sta-test-nqueens-prepare (&optional (size 8))
  (let ((*package* (find-package :cl-user)))
    (ueber-hilf)
    (WISSENSBASIS_LADEN "N Damen Scheduling 5.txt")
    (yas=schreibe_wert (cwr=die_wurzel) `dateien (list "n-queens-scheduling"))
    (hilfsdateien_laden)
    (nd=objekte-erzeugen size)))

(defun sta-test-nqueens-execute ()
  (sta-test-school-execute))
