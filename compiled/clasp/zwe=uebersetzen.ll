; ModuleID = '/Users/karstenpoeck/lisp/coke/program/zwe=uebersetzen.lisp'
source_filename = "/Users/karstenpoeck/lisp/coke/program/zwe=uebersetzen.lisp"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

%0 = type { i8*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }

@":::global-str-/Users/karstenpoeck/lisp/coke/program/zwe=uebersetzen.lisp" = private unnamed_addr constant [59 x i8] c"/Users/karstenpoeck/lisp/coke/program/zwe=uebersetzen.lisp\00"
@source-file-info-handle = internal global i32 -1
@constants-table = internal global { i8*, i8*, i64 } undef
@"zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 41, i64 61, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE" = private unnamed_addr constant [40 x i8] c"zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 113, i64 121, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 122, i64 127, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [53 x i8] c"ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^\00"
@"ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 153, i64 167, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 181, i64 185, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [52 x i8] c"ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^\00"
@"ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 132, i64 208, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [54 x i8] c"ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^\00"
@"ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 218, i64 231, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 239, i64 245, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [53 x i8] c"ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^\00"
@"ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 213, i64 253, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [54 x i8] c"ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^\00"
@"ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 264, i64 280, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [53 x i8] c"ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^\00"
@"ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 254, i64 306, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 329, i64 333, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 283, i64 341, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 108, i64 367, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 373, i64 377, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 379, i64 383, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 386, i64 390, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 394, i64 398, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 406, i64 412, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 438, i64 444, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE\00"
@"zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 59, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"ZWE=ALLES_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ZWE=ALLES_UEBERSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 464, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 421, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"str-zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE\00"
@str-MACROEXPAND = private unnamed_addr constant [12 x i8] c"MACROEXPAND\00"
@str-COMMON-LISP = private unnamed_addr constant [12 x i8] c"COMMON-LISP\00"
@"str-CWR=UEBERSETZEN_DEBUG" = private unnamed_addr constant [22 x i8] c"CWR=UEBERSETZEN_DEBUG\00"
@str-COMMON-LISP-USER = private unnamed_addr constant [17 x i8] c"COMMON-LISP-USER\00"
@str-PPRINT = private unnamed_addr constant [7 x i8] c"PPRINT\00"
@str-EVAL = private unnamed_addr constant [5 x i8] c"EVAL\00"
@str-COMPILE = private unnamed_addr constant [8 x i8] c"COMPILE\00"
@str-CONS = private unnamed_addr constant [5 x i8] c"CONS\00"
@str-ERROR = private unnamed_addr constant [6 x i8] c"ERROR\00"
@str-TYPE-ERROR = private unnamed_addr constant [11 x i8] c"TYPE-ERROR\00"
@str-DATUM = private unnamed_addr constant [6 x i8] c"DATUM\00"
@str-KEYWORD = private unnamed_addr constant [8 x i8] c"KEYWORD\00"
@str-EXPECTED-TYPE = private unnamed_addr constant [14 x i8] c"EXPECTED-TYPE\00"
@str-LIST = private unnamed_addr constant [5 x i8] c"LIST\00"
@str-FDEFINITION = private unnamed_addr constant [12 x i8] c"FDEFINITION\00"
@str-FUNCTION = private unnamed_addr constant [9 x i8] c"FUNCTION\00"
@str-SYMBOL = private unnamed_addr constant [7 x i8] c"SYMBOL\00"
@str-SYMBOL-FUNCTION = private unnamed_addr constant [16 x i8] c"SYMBOL-FUNCTION\00"
@str-OR = private unnamed_addr constant [3 x i8] c"OR\00"
@"str-ZWE=UEBERSETZEN_LISTE" = private unnamed_addr constant [22 x i8] c"ZWE=UEBERSETZEN_LISTE\00"
@str-SETF-LAMBDA-LIST = private unnamed_addr constant [17 x i8] c"SETF-LAMBDA-LIST\00"
@str-CORE = private unnamed_addr constant [5 x i8] c"CORE\00"
@str-LISTE = private unnamed_addr constant [6 x i8] c"LISTE\00"
@str-SET-SOURCE-INFO = private unnamed_addr constant [16 x i8] c"SET-SOURCE-INFO\00"
@str-CURRENT-SOURCE-FILE = private unnamed_addr constant [20 x i8] c"CURRENT-SOURCE-FILE\00"
@"str-*CURRENT-FORM-LINENO*" = private unnamed_addr constant [22 x i8] c"*CURRENT-FORM-LINENO*\00"
@str-COMPILER = private unnamed_addr constant [9 x i8] c"COMPILER\00"
@str-TOP-LEVEL = private unnamed_addr constant [10 x i8] c"TOP-LEVEL\00"
@str-VECTOR = private unnamed_addr constant [7 x i8] c"VECTOR\00"
@str-NULL = private unnamed_addr constant [5 x i8] c"NULL\00"
@str-ETYPECASE-ERROR = private unnamed_addr constant [16 x i8] c"ETYPECASE-ERROR\00"
@str-FIXNUM = private unnamed_addr constant [7 x i8] c"FIXNUM\00"
@str-SINGLE-FLOAT = private unnamed_addr constant [13 x i8] c"SINGLE-FLOAT\00"
@str-DOUBLE-FLOAT = private unnamed_addr constant [13 x i8] c"DOUBLE-FLOAT\00"
@str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM = private unnamed_addr constant [34 x i8] c"CONVERT-OVERFLOW-RESULT-TO-BIGNUM\00"
@"str-TWO-ARG-+" = private unnamed_addr constant [10 x i8] c"TWO-ARG-+\00"
@"str-TWO-ARG-=" = private unnamed_addr constant [10 x i8] c"TWO-ARG-=\00"
@str-ODDP = private unnamed_addr constant [5 x i8] c"ODDP\00"
@str-GETF = private unnamed_addr constant [5 x i8] c"GETF\00"
@str-FALLS = private unnamed_addr constant [6 x i8] c"FALLS\00"
@str-AKTIVIERE = private unnamed_addr constant [10 x i8] c"AKTIVIERE\00"
@str-VON = private unnamed_addr constant [4 x i8] c"VON\00"
@str-MIT = private unnamed_addr constant [4 x i8] c"MIT\00"
@"str-YAS=SCHREIBE_WERT" = private unnamed_addr constant [18 x i8] c"YAS=SCHREIBE_WERT\00"
@str-CODE = private unnamed_addr constant [5 x i8] c"CODE\00"
@str-BACKQUOTE-APPEND = private unnamed_addr constant [17 x i8] c"BACKQUOTE-APPEND\00"
@"str-$AGENDASTEUERUNG" = private unnamed_addr constant [17 x i8] c"$AGENDASTEUERUNG\00"
@str-INFORMANT = private unnamed_addr constant [10 x i8] c"INFORMANT\00"
@str-EINGABE = private unnamed_addr constant [8 x i8] c"EINGABE\00"
@str-ZWE-UEBERSETZUNGS_FEHLER = private unnamed_addr constant [25 x i8] c"ZWE-UEBERSETZUNGS_FEHLER\00"
@str-UEBERWACHUNG = private unnamed_addr constant [13 x i8] c"UEBERWACHUNG\00"
@"str-ZWE=UEBERWACHUNG_UEBERSETZEN" = private unnamed_addr constant [29 x i8] c"ZWE=UEBERWACHUNG_UEBERSETZEN\00"
@str-DEFINITION = private unnamed_addr constant [11 x i8] c"DEFINITION\00"
@str-ARRAY-RANK = private unnamed_addr constant [11 x i8] c"ARRAY-RANK\00"
@str-ZWE-NIL-PROPERTIES-LOESCHEN = private unnamed_addr constant [28 x i8] c"ZWE-NIL-PROPERTIES-LOESCHEN\00"
@"str-B=LESE-VON-STRING" = private unnamed_addr constant [18 x i8] c"B=LESE-VON-STRING\00"
@str-APPLY = private unnamed_addr constant [6 x i8] c"APPLY\00"
@"str-ZWE=VORSCHLAG_UEBERSETZEN_NEU" = private unnamed_addr constant [30 x i8] c"ZWE=VORSCHLAG_UEBERSETZEN_NEU\00"
@str-VORBEDINGUNG = private unnamed_addr constant [13 x i8] c"VORBEDINGUNG\00"
@str-OBJEKTKLASSE = private unnamed_addr constant [13 x i8] c"OBJEKTKLASSE\00"
@str-FILTERBEDINGUNG = private unnamed_addr constant [16 x i8] c"FILTERBEDINGUNG\00"
@str-SORTIERFUNKTION = private unnamed_addr constant [16 x i8] c"SORTIERFUNKTION\00"
@str-FEHLER = private unnamed_addr constant [7 x i8] c"FEHLER\00"
@str-EQ-INCOMPARABLE = private unnamed_addr constant [16 x i8] c"EQ-INCOMPARABLE\00"
@str-CLASP-CLEAVIR = private unnamed_addr constant [14 x i8] c"CLASP-CLEAVIR\00"
@str-EQL-UNDERLYING = private unnamed_addr constant [15 x i8] c"EQL-UNDERLYING\00"
@"str-B=NACHRICHT" = private unnamed_addr constant [12 x i8] c"B=NACHRICHT\00"
@"str-ZWE=VORSCHLAG_UEBERSETZEN_TEXT" = private unnamed_addr constant [31 x i8] c"ZWE=VORSCHLAG_UEBERSETZEN_TEXT\00"
@str-VORSCHLAGSOBJEKT = private unnamed_addr constant [17 x i8] c"VORSCHLAGSOBJEKT\00"
@str-VORBEDINGUNGSTEXT = private unnamed_addr constant [18 x i8] c"VORBEDINGUNGSTEXT\00"
@str-FILTERBEDINGUNGSTEXT = private unnamed_addr constant [21 x i8] c"FILTERBEDINGUNGSTEXT\00"
@str-SORTIERFUNKTIONSTEXT = private unnamed_addr constant [21 x i8] c"SORTIERFUNKTIONSTEXT\00"
@str-AUS = private unnamed_addr constant [4 x i8] c"AUS\00"
@str-SORTIERT = private unnamed_addr constant [9 x i8] c"SORTIERT\00"
@str-VORSCHLAG = private unnamed_addr constant [10 x i8] c"VORSCHLAG\00"
@str-LISPFUNKTIONSNAME = private unnamed_addr constant [18 x i8] c"LISPFUNKTIONSNAME\00"
@"str-ZWE=VORSCHLAG_UEBERSETZEN" = private unnamed_addr constant [26 x i8] c"ZWE=VORSCHLAG_UEBERSETZEN\00"
@"str-$VORSCHLAG" = private unnamed_addr constant [11 x i8] c"$VORSCHLAG\00"
@str-SORTIERSCHLUESSEL = private unnamed_addr constant [18 x i8] c"SORTIERSCHLUESSEL\00"
@str-MACROCODE = private unnamed_addr constant [10 x i8] c"MACROCODE\00"
@str- = private unnamed_addr constant [1 x i8] zeroinitializer
@"str-&KEY" = private unnamed_addr constant [5 x i8] c"&KEY\00"
@str-ALLOW-OTHER-KEYS = private unnamed_addr constant [17 x i8] c"ALLOW-OTHER-KEYS\00"
@"str-ZWE=CONSTRAINT_UEBERSETZEN_NEU" = private unnamed_addr constant [31 x i8] c"ZWE=CONSTRAINT_UEBERSETZEN_NEU\00"
@str-ANZAHL = private unnamed_addr constant [7 x i8] c"ANZAHL\00"
@"str-ZWE=CONSTRAINT_UEBERSETZEN_TEXT" = private unnamed_addr constant [32 x i8] c"ZWE=CONSTRAINT_UEBERSETZEN_TEXT\00"
@str-OBJEKT = private unnamed_addr constant [7 x i8] c"OBJEKT\00"
@str-ATTRIBUT = private unnamed_addr constant [9 x i8] c"ATTRIBUT\00"
@str-BEDINGUNGSTEXT = private unnamed_addr constant [15 x i8] c"BEDINGUNGSTEXT\00"
@"str-&OPTIONAL" = private unnamed_addr constant [10 x i8] c"&OPTIONAL\00"
@str-CONSTRAINT = private unnamed_addr constant [11 x i8] c"CONSTRAINT\00"
@"str-ZWE=CONSTRAINT_UEBERSETZEN" = private unnamed_addr constant [27 x i8] c"ZWE=CONSTRAINT_UEBERSETZEN\00"
@str-CONSTRAINT_OBJEKT = private unnamed_addr constant [18 x i8] c"CONSTRAINT_OBJEKT\00"
@"str-$CONSTRAINT" = private unnamed_addr constant [12 x i8] c"$CONSTRAINT\00"
@"str-YAS=LESE_WERT" = private unnamed_addr constant [14 x i8] c"YAS=LESE_WERT\00"
@"str-ZWE=HEILMITTEL_UEBERSETZEN_NEU" = private unnamed_addr constant [31 x i8] c"ZWE=HEILMITTEL_UEBERSETZEN_NEU\00"
@str-WERTEBEREICHKLASSE = private unnamed_addr constant [19 x i8] c"WERTEBEREICHKLASSE\00"
@str-KLASSE2 = private unnamed_addr constant [8 x i8] c"KLASSE2\00"
@str-BEDINGUNG2 = private unnamed_addr constant [11 x i8] c"BEDINGUNG2\00"
@"str-ZWE=HEILMITTEL_UEBERSETZEN_TEXT" = private unnamed_addr constant [32 x i8] c"ZWE=HEILMITTEL_UEBERSETZEN_TEXT\00"
@str-HEILMITTEL_OBJEKT = private unnamed_addr constant [18 x i8] c"HEILMITTEL_OBJEKT\00"
@str-MACRO = private unnamed_addr constant [6 x i8] c"MACRO\00"
@str-BEDINGUNG1_TEXT = private unnamed_addr constant [16 x i8] c"BEDINGUNG1_TEXT\00"
@str-BEDINGUNG2_TEXT = private unnamed_addr constant [16 x i8] c"BEDINGUNG2_TEXT\00"
@str-LISPFUNKTIONSTEXT = private unnamed_addr constant [18 x i8] c"LISPFUNKTIONSTEXT\00"
@"str-$LISP" = private unnamed_addr constant [6 x i8] c"$LISP\00"
@"str-ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P" = private unnamed_addr constant [37 x i8] c"ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P\00"
@"str-$ERSETZEN" = private unnamed_addr constant [10 x i8] c"$ERSETZEN\00"
@"str-$AUSTAUSCHEN" = private unnamed_addr constant [13 x i8] c"$AUSTAUSCHEN\00"
@"str-$WEITERTAUSCHEN" = private unnamed_addr constant [16 x i8] c"$WEITERTAUSCHEN\00"
@"str-$DREIER_AUSTAUSCHEN" = private unnamed_addr constant [20 x i8] c"$DREIER_AUSTAUSCHEN\00"
@str-HEILMITTEL = private unnamed_addr constant [11 x i8] c"HEILMITTEL\00"
@str-ERSETZE = private unnamed_addr constant [8 x i8] c"ERSETZE\00"
@str-AUSTAUSCHE = private unnamed_addr constant [11 x i8] c"AUSTAUSCHE\00"
@str-WEITERTAUSCHE = private unnamed_addr constant [14 x i8] c"WEITERTAUSCHE\00"
@str-DREIERTAUSCHE = private unnamed_addr constant [14 x i8] c"DREIERTAUSCHE\00"
@str-DURCH = private unnamed_addr constant [6 x i8] c"DURCH\00"
@str-NACH = private unnamed_addr constant [5 x i8] c"NACH\00"
@str-WOBEI = private unnamed_addr constant [6 x i8] c"WOBEI\00"
@"str-ZWE=HEILMITTEL_UEBERSETZEN" = private unnamed_addr constant [27 x i8] c"ZWE=HEILMITTEL_UEBERSETZEN\00"
@str-ART = private unnamed_addr constant [4 x i8] c"ART\00"
@str-WERTEKLASSE = private unnamed_addr constant [12 x i8] c"WERTEKLASSE\00"
@"str-[Falls <VorBedingung>] aktiviere <Attribut> von <Objektklasse> mit <Filterfunktion> " = private unnamed_addr constant [85 x i8] c"[Falls <VorBedingung>] aktiviere <Attribut> von <Objektklasse> mit <Filterfunktion> \00"
@"str-[Falls <VorBedingung>] schlage alle aus <Objektklasse> vor [mit <Bedingung>] [sortiert sortierfunktion]" = private unnamed_addr constant [104 x i8] c"[Falls <VorBedingung>] schlage alle aus <Objektklasse> vor [mit <Bedingung>] [sortiert sortierfunktion]\00"
@"str-[Falls <VorBedingung>] melde Konflikt" = private unnamed_addr constant [38 x i8] c"[Falls <VorBedingung>] melde Konflikt\00"
@"str-[Falls <VorBedingung>] ersetze <Attribut> durch <Objektklasse> [mit <Bedingungen>]" = private unnamed_addr constant [83 x i8] c"[Falls <VorBedingung>] ersetze <Attribut> durch <Objektklasse> [mit <Bedingungen>]\00"
@"str-KOB=MESSAGE_DIALOG" = private unnamed_addr constant [19 x i8] c"KOB=MESSAGE_DIALOG\00"
@"str-B=KONKATENIERE-NACH-STRING" = private unnamed_addr constant [27 x i8] c"B=KONKATENIERE-NACH-STRING\00"
@"str-COKE=S" = private unnamed_addr constant [7 x i8] c"COKE=S\00"
@str-FALSCHE_SYNTAX = private unnamed_addr constant [15 x i8] c"FALSCHE_SYNTAX\00"
@str-RICHTIGE_SYNTAX = private unnamed_addr constant [16 x i8] c"RICHTIGE_SYNTAX\00"
@str-IHRE_EINGABE = private unnamed_addr constant [13 x i8] c"IHRE_EINGABE\00"
@str-ZEILEN = private unnamed_addr constant [7 x i8] c"ZEILEN\00"
@str-DEF = private unnamed_addr constant [4 x i8] c"DEF\00"
@str-TYP = private unnamed_addr constant [4 x i8] c"TYP\00"
@str-ATOM = private unnamed_addr constant [5 x i8] c"ATOM\00"
@"str-KLH=LESE_LISP_AUS_STRING" = private unnamed_addr constant [25 x i8] c"KLH=LESE_LISP_AUS_STRING\00"
@str-ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN = private unnamed_addr constant [39 x i8] c"ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN\00"
@str-ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN = private unnamed_addr constant [40 x i8] c"ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN\00"
@str-ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN = private unnamed_addr constant [40 x i8] c"ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN\00"
@str-YAS_COMPILIERTE_FUNKTION = private unnamed_addr constant [25 x i8] c"YAS_COMPILIERTE_FUNKTION\00"
@str-ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN = private unnamed_addr constant [41 x i8] c"ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN\00"
@str-KOMPILIERTE_BEDINGUNG = private unnamed_addr constant [22 x i8] c"KOMPILIERTE_BEDINGUNG\00"
@"str-$KORREKTUROBJEKT" = private unnamed_addr constant [17 x i8] c"$KORREKTUROBJEKT\00"
@str-BEDINGUNG = private unnamed_addr constant [10 x i8] c"BEDINGUNG\00"
@str-ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT = private unnamed_addr constant [41 x i8] c"ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT\00"
@str-STARTKORREKTUROBJEKT = private unnamed_addr constant [21 x i8] c"STARTKORREKTUROBJEKT\00"
@str-ZUORDNUNGSKLASSE = private unnamed_addr constant [17 x i8] c"ZUORDNUNGSKLASSE\00"
@str-WERTEBEREICHSKLASSE = private unnamed_addr constant [20 x i8] c"WERTEBEREICHSKLASSE\00"
@str-MACROCODE_BEWERTUNG_DES_STOERENFRIEDS = private unnamed_addr constant [38 x i8] c"MACROCODE_BEWERTUNG_DES_STOERENFRIEDS\00"
@str-BEWERTUNG_DES_STOERENFRIEDS = private unnamed_addr constant [28 x i8] c"BEWERTUNG_DES_STOERENFRIEDS\00"
@str-LAMBDA = private unnamed_addr constant [7 x i8] c"LAMBDA\00"
@str-EGAL = private unnamed_addr constant [5 x i8] c"EGAL\00"
@str-DECLARE = private unnamed_addr constant [8 x i8] c"DECLARE\00"
@str-IGNORE = private unnamed_addr constant [7 x i8] c"IGNORE\00"
@str-MACROCODE_STOERENFRIEDE = private unnamed_addr constant [24 x i8] c"MACROCODE_STOERENFRIEDE\00"
@str-STOERENFRIEDE = private unnamed_addr constant [14 x i8] c"STOERENFRIEDE\00"
@"str-YAS=ALLE" = private unnamed_addr constant [9 x i8] c"YAS=ALLE\00"
@str-QUOTE = private unnamed_addr constant [6 x i8] c"QUOTE\00"
@str-ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE = private unnamed_addr constant [41 x i8] c"ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE\00"
@str-ID = private unnamed_addr constant [3 x i8] c"ID\00"
@"str-KOB=AUSGABE_NACHRICHT" = private unnamed_addr constant [22 x i8] c"KOB=AUSGABE_NACHRICHT\00"
@str-REGELN_WERDEN_UEBERSETZT = private unnamed_addr constant [25 x i8] c"REGELN_WERDEN_UEBERSETZT\00"
@str-DO-COMPILATION-UNIT = private unnamed_addr constant [20 x i8] c"DO-COMPILATION-UNIT\00"
@"str-YAS=HAT_OBJEKT_SLOT_P" = private unnamed_addr constant [22 x i8] c"YAS=HAT_OBJEKT_SLOT_P\00"
@"str-YAS=NEUER_SLOT" = private unnamed_addr constant [15 x i8] c"YAS=NEUER_SLOT\00"
@str-UEBERWACHEN = private unnamed_addr constant [12 x i8] c"UEBERWACHEN\00"
@str-STARTKORREKTUROBJEKTE = private unnamed_addr constant [22 x i8] c"STARTKORREKTUROBJEKTE\00"
@str-METAKORREKTUROBJEKTE = private unnamed_addr constant [21 x i8] c"METAKORREKTUROBJEKTE\00"
@"str-KOB=SCHLIESSE_AUSGABE_FENSTER" = private unnamed_addr constant [30 x i8] c"KOB=SCHLIESSE_AUSGABE_FENSTER\00"
@"str-ZWE=ALLES_UEBERSETZEN" = private unnamed_addr constant [22 x i8] c"ZWE=ALLES_UEBERSETZEN\00"
@CONTAB4420 = internal global [467 x {}*] undef
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 18, void ()* @CLASP-CTOR, i8* null }]

; Function Attrs: uwtable
define internal void @RUN-ALL() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !9 {
entry:
  tail call void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }* nonnull @constants-table, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), i64 467, {}* null)
  tail call void @ltvc_assign_source_file_info_handle(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/program/zwe=uebersetzen.lisp", i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/program/zwe=uebersetzen.lisp", i64 0, i64 0), i64 0, i32 1, i32* nonnull @source-file-info-handle)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.11)
  ret void
}

; Function Attrs: nounwind
declare i32 @__gxx_personality_v0(...) #1

; Function Attrs: nounwind
declare void @ltvc_assign_source_file_info_handle(i8*, i8*, i64, i32, i32*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !13 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G154530.0 = phi {}* [ %18, %header-check-br ], [ %G154530.1, %normal-dest26 ], [ %G154530.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %ptrtoint43 = ptrtoint {}* %G154530.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G154530.0, i64 2, {}* %"closure->ZWE=UEBERSETZEN_LISTE", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %"closure->ZWE=UEBERSETZEN_LISTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 0, i64 1, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag2

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154530.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag4

normal-dest30:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 38), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154530.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 47), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ZWE=UEBERSETZEN_LISTE", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 52), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ZWE=UEBERSETZEN_LISTE", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 100 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #1

; Function Attrs: nounwind
declare void @cc_pop_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @cc_push_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*, { i32, i32, i8*, i8* }*, i64) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !23 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc142 unwind label %cleanup-lpad

.noexc142:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag23
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest36 unwind label %cleanup-lpad

tag1:                                             ; preds = %tag8
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 12), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest50 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest50, %tag14
  %.sink141 = phi { {}*, i64 } [ %24, %tag14 ], [ %52, %normal-dest50 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink141

tag4:                                             ; preds = %normal-dest34
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 9), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest59 unwind label %cleanup-lpad

tag7:                                             ; preds = %tag23, %normal-dest43, %tag22
  %.val149 = phi {}* [ %60, %tag22 ], [ %51, %normal-dest43 ], [ %60, %tag23 ]
  %x.0 = phi {}* [ %34, %tag22 ], [ %x.1, %normal-dest43 ], [ %60, %tag23 ]
  %17 = ptrtoint {}* %x.0 to i64
  %tag-only121 = and i64 %17, 7
  %consp-test = icmp eq i64 %tag-only121, 3
  %.val146 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154570.0 = select i1 %consp-test, {}* %.val146, {}* %.val149
  %18 = icmp eq {}* %G154570.0, %.val149
  br i1 %18, label %tag18, label %tag15

tag8:                                             ; preds = %normal-dest59.tag8_crit_edge, %normal-dest34
  %19 = phi {}* [ %.pre, %normal-dest59.tag8_crit_edge ], [ %43, %normal-dest34 ]
  %20 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %21 = icmp eq {}* %20, %19
  br i1 %21, label %tag1, label %tag19

tag13:                                            ; preds = %tag18
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest75 unwind label %cleanup-lpad

tag14:                                            ; preds = %tag18, %normal-dest82, %tag15
  %G154553.0 = phi {}* [ %27, %tag15 ], [ %G154553.1, %normal-dest82 ], [ %.val149, %tag18 ]
  %ptrtoint88 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint89 = add i64 %ptrtoint88, 7
  %entry-point-addr90 = inttoptr i64 %entry-point-addr-uint89 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point91 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr90, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point91({}* %31, i64 2, {}* %60, {}* %G154553.0, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad

tag15:                                            ; preds = %tag7
  %25 = add i64 %17, -3
  %26 = inttoptr i64 %25 to {}**
  %27 = load {}*, {}** %26, align 8
  br label %tag14

tag18:                                            ; preds = %tag7
  %28 = icmp eq {}* %x.0, %.val149
  %G154563.0 = select i1 %28, {}* %.val146, {}* %.val149
  %29 = icmp eq {}* %G154563.0, %.val149
  br i1 %29, label %tag13, label %tag14

tag19:                                            ; preds = %tag8
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 14), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest100 unwind label %cleanup-lpad

tag22:                                            ; preds = %normal-dest100
  %32 = add i64 %61, 5
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8
  br label %tag7

tag23:                                            ; preds = %normal-dest100
  %35 = icmp eq {}* %G154514.0, %60
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154583.0 = select i1 %35, {}* %.val, {}* %60
  %36 = icmp eq {}* %G154583.0, %60
  br i1 %36, label %tag, label %tag7

cleanup-lpad:                                     ; preds = %10, %9, %tag19, %tag14, %normal-dest75, %tag13, %normal-dest59, %tag4, %normal-dest50, %tag1, %normal-dest36, %tag, %normal-dest31, %normal-dest28, %normal-dest
  %37 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %37

normal-dest:                                      ; preds = %entry
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 1), align 8
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %39 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %39, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest28
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt115 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt115, 0
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154514.0 = select i1 %cond, {}* %41, {}* %.elt
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 5), align 8
  %43 = invoke {}* @cc_safe_symbol_value({}* %42)
          to label %normal-dest34 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %normal-dest31
  %44 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %45 = icmp eq {}* %43, %44
  br i1 %45, label %tag8, label %tag4

normal-dest36:                                    ; preds = %tag
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %47 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %49 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint37 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint38 = add i64 %ptrtoint37, 7
  %entry-point-addr39 = inttoptr i64 %entry-point-addr-uint38 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point40 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr39, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point40({}* %12, i64 5, {}* %46, {}* %47, {}* %G154514.0, {}* %48, {}* %49)
          to label %normal-dest43 unwind label %cleanup-lpad

normal-dest43:                                    ; preds = %normal-dest36
  %.elt134 = extractvalue { {}*, i64 } %50, 0
  %.elt136 = extractvalue { {}*, i64 } %50, 1
  %cond113 = icmp eq i64 %.elt136, 0
  %51 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %x.1 = select i1 %cond113, {}* %51, {}* %.elt134
  br label %tag7

normal-dest50:                                    ; preds = %tag1
  %ptrtoint51 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint52 = add i64 %ptrtoint51, 7
  %entry-point-addr53 = inttoptr i64 %entry-point-addr-uint52 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point54 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr53, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point54({}* %14, i64 1, {}* %G154514.0, {}* null, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %tag4
  %ptrtoint60 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %16, i64 1, {}* %G154514.0, {}* null, {}* null, {}* null)
          to label %normal-dest59.tag8_crit_edge unwind label %cleanup-lpad

normal-dest59.tag8_crit_edge:                     ; preds = %normal-dest59
  %.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag8

normal-dest75:                                    ; preds = %tag13
  %54 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %56 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint76 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint77 = add i64 %ptrtoint76, 7
  %entry-point-addr78 = inttoptr i64 %entry-point-addr-uint77 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point79 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr78, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point79({}* %23, i64 5, {}* %54, {}* %55, {}* %x.0, {}* %56, {}* %57)
          to label %normal-dest82 unwind label %cleanup-lpad

normal-dest82:                                    ; preds = %normal-dest75
  %.elt130 = extractvalue { {}*, i64 } %58, 0
  %.elt132 = extractvalue { {}*, i64 } %58, 1
  %cond112 = icmp eq i64 %.elt132, 0
  %59 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154553.1 = select i1 %cond112, {}* %59, {}* %.elt130
  br label %tag14

normal-dest100:                                   ; preds = %tag19
  %60 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %61 = ptrtoint {}* %G154514.0 to i64
  %tag-only104120 = and i64 %61, 7
  %consp-test105 = icmp eq i64 %tag-only104120, 3
  br i1 %consp-test105, label %tag22, label %tag23
}

declare {}* @cc_safe_fdefinition({}*) local_unnamed_addr #3

declare {}* @cc_safe_symbol_value({}*) local_unnamed_addr #3

declare {}* @cc_enclose({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) local_unnamed_addr #3

declare {}* @cc_safe_setfdefinition({}*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_setSymbolValue({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !24 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G154627.0 = phi {}* [ %18, %header-check-br ], [ %G154627.1, %normal-dest54 ], [ %G154627.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 113), align 8
  %ptrtoint13 = ptrtoint {}* %G154627.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G154627.0, i64 2, {}* %"closure->ZWE=UEBERWACHUNG_UEBERSETZEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag2, %normal-dest47, %maybe-more-tests81, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 113), align 8
  %"closure->ZWE=UEBERWACHUNG_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1186, i64 37, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 115), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ZWE=UEBERWACHUNG_UEBERSETZEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 118), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ZWE=UEBERWACHUNG_UEBERSETZEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 148 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 113), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests81
  %ptrtoint48 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154627.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag

normal-dest60:                                    ; preds = %tag2
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 112), align 16
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154627.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest47 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !25 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc905 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc905:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %tag141
  %14 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag2:                                             ; preds = %tag47
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 78), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest681 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag7:                                             ; preds = %normal-dest699
  %18 = add i64 %116, -3
  %19 = inttoptr i64 %18 to {}**
  %20 = load {}*, {}** %19, align 8
  br label %tag21

tag8:                                             ; preds = %tag69, %header-check-br182, %normal-dest241, %tag14
  %.val951978 = phi {}* [ %25, %tag14 ], [ %G154914.0, %tag69 ], [ %G154914.0, %header-check-br182 ], [ %133, %normal-dest241 ]
  %21 = icmp eq {}* %.val951978, %farg1
  %.val950 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154854.0 = select i1 %21, {}* %.val950, {}* %.val951978
  %22 = icmp eq {}* %G154854.0, %.val951978
  br i1 %22, label %tag45, label %tag58

tag11:                                            ; preds = %normal-dest213, %header-check-br716
  %23 = phi {}* [ %G154794.0, %header-check-br716 ], [ %130, %normal-dest213 ]
  %G154738.0.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %24 = icmp eq {}* %G154738.0.pre, %23
  br i1 %24, label %tag111, label %tag50

tag14:                                            ; preds = %normal-dest241, %header-check-br468
  %25 = phi {}* [ %G154914.0, %header-check-br468 ], [ %133, %normal-dest241 ]
  %G154858.0.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %26 = icmp eq {}* %G154858.0.pre, %25
  br i1 %26, label %tag8, label %tag121

tag15:                                            ; preds = %tag111
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest190 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag16:                                            ; preds = %tag106
  %29 = load {}*, {}** %87, align 8
  %.val940.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag116

tag21:                                            ; preds = %tag101, %normal-dest739, %tag7
  %G154802.0 = phi {}* [ %20, %tag7 ], [ %G154802.1, %normal-dest739 ], [ %G154821.0, %tag101 ]
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint219 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint220 = add i64 %ptrtoint219, 7
  %entry-point-addr221 = inttoptr i64 %entry-point-addr-uint220 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point222 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr221, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point222({}* %101, i64 5, {}* %farg0, {}* %228, {}* %G154802.0, {}* %30, {}* %31)
          to label %tag39 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag22:                                            ; preds = %tag108
  %33 = icmp eq {}* %G2095854275.0, %.val933
  %G154866.0 = select i1 %33, {}* %.val930, {}* %.val933
  %34 = icmp eq {}* %G154866.0, %.val933
  br i1 %34, label %tag46, label %tag58

tag23:                                            ; preds = %tag54
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 78), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest161 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag89.outer:                                      ; preds = %tag89.outer.backedge, %tag89.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag89.outer.preheader ], [ %LENGTH.0.ph.be, %tag89.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %farg1, %tag89.outer.preheader ], [ %G2095854275.0, %tag89.outer.backedge ]
  %37 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only575769 = and i64 %37, 7
  %consp-test576 = icmp eq i64 %tag-only575769, 3
  %38 = add i64 %37, 5
  %39 = inttoptr i64 %38 to {}**
  br label %tag89

tag39:                                            ; preds = %normal-dest663, %normal-dest433, %tag21, %normal-dest150
  %40 = phi {}** [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), %normal-dest150 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %tag21 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %normal-dest433 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), %normal-dest663 ]
  %.sink934 = load {}*, {}** %40, align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %41 = insertvalue { {}*, i64 } undef, {}* %.sink934, 0
  %42 = insertvalue { {}*, i64 } %41, i64 1, 1
  ret { {}*, i64 } %42

tag41:                                            ; preds = %tag130, %tag51
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 82), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest268 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag42:                                            ; preds = %tag89
  %45 = load {}*, {}** %39, align 8
  %.val931.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag108

tag44:                                            ; preds = %tag95
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 76), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest277 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag45:                                            ; preds = %tag8
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest291 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag46:                                            ; preds = %tag22
  %50 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest305 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag47:                                            ; preds = %tag116
  %52 = ptrtoint {}* %LENGTH250.0.ph to i64
  %fixnum-tag-only319798 = and i64 %52, 3
  %fixnump-test320 = icmp eq i64 %fixnum-tag-only319798, 0
  br i1 %fixnump-test320, label %tag95, label %tag2

tag50:                                            ; preds = %tag11
  %53 = add i64 %116, 7
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %"tag fixnum" = shl nuw i64 %55, 2
  %56 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag94

tag51:                                            ; preds = %normal-dest462, %tag127
  %57 = phi {}* [ %60, %tag127 ], [ %178, %normal-dest462 ]
  %G154826.0 = phi {}* [ %110, %tag127 ], [ %G154826.1, %normal-dest462 ]
  %58 = icmp eq {}* %G154826.0, %57
  br i1 %58, label %tag41, label %tag118

tag54:                                            ; preds = %tag108
  %59 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only327771 = and i64 %59, 3
  %fixnump-test328 = icmp eq i64 %fixnum-tag-only327771, 0
  br i1 %fixnump-test328, label %tag125, label %tag23

tag58:                                            ; preds = %tag22, %normal-dest298, %tag8, %tag121
  %60 = phi {}* [ %25, %tag121 ], [ %.val951978, %tag8 ], [ %141, %normal-dest298 ], [ %.val933, %tag22 ]
  %y.0 = phi {}* [ %105, %tag121 ], [ null, %tag8 ], [ %y.1, %normal-dest298 ], [ %LENGTH.0.ph, %tag22 ]
  %61 = ptrtoint {}* %y.0 to i64
  %fixnum-tag-only322778 = and i64 %61, 3
  %fixnump-test323 = icmp eq i64 %fixnum-tag-only322778, 0
  br i1 %fixnump-test323, label %tag130, label %tag68

tag65:                                            ; preds = %tag89
  %62 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %63 = icmp eq {}* %SEQUENCE.0.ph, %62
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154907.0 = select i1 %63, {}* %.val, {}* %62
  %64 = icmp eq {}* %G154907.0, %62
  br i1 %64, label %tag105, label %tag108

tag66:                                            ; preds = %tag137, %tag141
  %65 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest340 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag68:                                            ; preds = %tag58
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 80), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest455 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag69:                                            ; preds = %normal-dest
  %test471 = icmp eq i64 %tag-only768, 1
  br i1 %test471, label %header-check-br468, label %tag8

tag71:                                            ; preds = %normal-dest590
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest478 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag76:                                            ; preds = %tag106
  %71 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %72 = icmp eq {}* %SEQUENCE270.0.ph, %71
  %.val937 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154787.0 = select i1 %72, {}* %.val937, {}* %71
  %73 = icmp eq {}* %G154787.0, %71
  br i1 %73, label %tag107, label %tag116

tag77:                                            ; preds = %tag123
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest546 unwind label %cleanup-lpad.loopexit.loopexit

tag82:                                            ; preds = %tag125
  %76 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 76), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest560 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag89:                                            ; preds = %normal-dest305, %tag89.outer
  br i1 %consp-test576, label %tag42, label %tag65

tag94:                                            ; preds = %tag123, %normal-dest198, %tag111, %tag50
  %G154728.0 = phi {}* [ %56, %tag50 ], [ null, %tag111 ], [ %G154728.1, %normal-dest198 ], [ %LENGTH250.0.ph, %tag123 ]
  %ptrtoint584 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint585 = add i64 %ptrtoint584, 7
  %entry-point-addr586 = inttoptr i64 %entry-point-addr-uint585 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point587 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr586, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point587({}* %44, i64 1, {}* %G154728.0, {}* null, {}* null, {}* null)
          to label %normal-dest590 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag95:                                            ; preds = %tag47
  %79 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %52, i64 4)
  %result = extractvalue { i64, i1 } %79, 0
  %overflow = extractvalue { i64, i1 } %79, 1
  %80 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag44, label %tag106.outer.backedge

tag106.outer.backedge:                            ; preds = %tag95, %normal-dest284, %normal-dest688
  %LENGTH250.0.ph.be = phi {}* [ %LENGTH250.2, %normal-dest688 ], [ %LENGTH250.1, %normal-dest284 ], [ %80, %tag95 ]
  br label %tag106.outer

tag101:                                           ; preds = %normal-dest699
  %81 = icmp eq {}* %G154821.0, %farg1
  %.val935 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154814.0 = select i1 %81, {}* %.val935, {}* %G154821.0
  %82 = icmp eq {}* %G154814.0, %G154821.0
  br i1 %82, label %tag140, label %tag21

tag102:                                           ; preds = %normal-dest527
  %83 = icmp eq {}* %G154606.0, %200
  %G154611.0 = select i1 %83, {}* %.val943, {}* %200
  %84 = icmp eq {}* %G154611.0, %200
  br i1 %84, label %tag137, label %tag141

tag106.outer:                                     ; preds = %tag106.outer.backedge, %tag106.outer.preheader
  %LENGTH250.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag106.outer.preheader ], [ %LENGTH250.0.ph.be, %tag106.outer.backedge ]
  %SEQUENCE270.0.ph = phi {}* [ %farg1, %tag106.outer.preheader ], [ %G2095854.0, %tag106.outer.backedge ]
  %85 = ptrtoint {}* %SEQUENCE270.0.ph to i64
  %tag-only644796 = and i64 %85, 7
  %consp-test645 = icmp eq i64 %tag-only644796, 3
  %86 = add i64 %85, 5
  %87 = inttoptr i64 %86 to {}**
  br label %tag106

tag105:                                           ; preds = %tag65
  %88 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest630 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag106:                                           ; preds = %normal-dest546, %tag106.outer
  br i1 %consp-test645, label %tag16, label %tag76

tag107:                                           ; preds = %tag76
  %90 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest647 unwind label %cleanup-lpad.loopexit.loopexit

tag108:                                           ; preds = %tag65, %normal-dest637, %tag42
  %.val933 = phi {}* [ %.val931.pre, %tag42 ], [ %217, %normal-dest637 ], [ %62, %tag65 ]
  %G2095854275.0 = phi {}* [ %45, %tag42 ], [ %G2095854275.1, %normal-dest637 ], [ %62, %tag65 ]
  %92 = ptrtoint {}* %G2095854275.0 to i64
  %tag-only660770 = and i64 %92, 7
  %consp-test661 = icmp eq i64 %tag-only660770, 3
  %.val930 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154895.0 = select i1 %consp-test661, {}* %.val930, {}* %.val933
  %93 = icmp eq {}* %G154895.0, %.val933
  br i1 %93, label %tag22, label %tag54

tag109:                                           ; preds = %normal-dest590
  %94 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %95 = invoke {}* @cc_safe_fdefinition({}* %94)
          to label %normal-dest663 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag111:                                           ; preds = %tag128, %normal-dest213, %header-check-br598, %tag11
  %.val948977 = phi {}* [ %23, %tag11 ], [ %G154794.0, %tag128 ], [ %130, %normal-dest213 ], [ %G154794.0, %header-check-br598 ]
  %96 = icmp eq {}* %.val948977, %farg1
  %.val947 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154734.0 = select i1 %96, {}* %.val947, {}* %.val948977
  %97 = icmp eq {}* %G154734.0, %.val948977
  br i1 %97, label %tag15, label %tag94

tag116:                                           ; preds = %tag76, %normal-dest654, %tag16
  %.val942 = phi {}* [ %.val940.pre, %tag16 ], [ %223, %normal-dest654 ], [ %71, %tag76 ]
  %G2095854.0 = phi {}* [ %29, %tag16 ], [ %G2095854.1, %normal-dest654 ], [ %71, %tag76 ]
  %98 = ptrtoint {}* %G2095854.0 to i64
  %tag-only696797 = and i64 %98, 7
  %consp-test697 = icmp eq i64 %tag-only696797, 3
  %.val939 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154775.0 = select i1 %consp-test697, {}* %.val939, {}* %.val942
  %99 = icmp eq {}* %G154775.0, %.val942
  br i1 %99, label %tag123, label %tag47

tag118:                                           ; preds = %tag51
  %100 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest699 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag121:                                           ; preds = %tag14
  %102 = add i64 %116, 7
  %103 = inttoptr i64 %102 to i64*
  %104 = load i64, i64* %103, align 8
  %"tag fixnum707" = shl nuw i64 %104, 2
  %105 = inttoptr i64 %"tag fixnum707" to {}*
  br label %tag58

tag123:                                           ; preds = %tag116
  %106 = icmp eq {}* %G2095854.0, %.val942
  %G154746.0 = select i1 %106, {}* %.val939, {}* %.val942
  %107 = icmp eq {}* %G154746.0, %.val942
  br i1 %107, label %tag77, label %tag94

tag125:                                           ; preds = %tag54
  %108 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %59, i64 4)
  %result711 = extractvalue { i64, i1 } %108, 0
  %overflow712 = extractvalue { i64, i1 } %108, 1
  %109 = inttoptr i64 %result711 to {}*
  br i1 %overflow712, label %tag82, label %tag89.outer.backedge

tag89.outer.backedge:                             ; preds = %tag125, %normal-dest568, %normal-dest169
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.1, %normal-dest169 ], [ %LENGTH.2, %normal-dest568 ], [ %109, %tag125 ]
  br label %tag89.outer

tag127:                                           ; preds = %tag130
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag51

tag128:                                           ; preds = %normal-dest268
  %test719 = icmp eq i64 %tag-only768, 1
  br i1 %test719, label %header-check-br716, label %tag111

tag130:                                           ; preds = %tag58
  %111 = icmp eq {}* %y.0, inttoptr (i64 4 to {}*)
  br i1 %111, label %tag127, label %tag41

tag137:                                           ; preds = %tag102
  %112 = icmp eq {}* %G154607.0, %200
  br i1 %112, label %tag141, label %tag66

tag140:                                           ; preds = %tag101
  %113 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %114 = invoke {}* @cc_safe_fdefinition({}* %113)
          to label %normal-dest732 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag141:                                           ; preds = %tag137, %normal-dest527, %tag102
  %G154684.0 = phi {}* [ %G154611.0, %tag102 ], [ %G154609.0, %normal-dest527 ], [ %.val943, %tag137 ]
  %115 = icmp eq {}* %G154684.0, %200
  br i1 %115, label %tag66, label %tag1

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest647, %tag107, %normal-dest546, %tag77
  %lpad.loopexit954 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest681, %tag2, %normal-dest277, %tag44
  %lpad.loopexit.split-lp955 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag46, %normal-dest305, %tag105, %normal-dest630
  %lpad.loopexit959 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag23, %normal-dest161, %tag82, %normal-dest560
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10, %normal-dest732, %tag140, %tag118, %normal-dest663, %tag109, %tag94, %normal-dest520, %normal-dest513, %normal-dest506, %normal-dest499, %normal-dest492, %normal-dest485, %normal-dest478, %tag71, %normal-dest455, %tag68, %normal-dest433, %normal-dest421, %normal-dest409, %normal-dest402, %normal-dest395, %normal-dest388, %normal-dest381, %normal-dest374, %normal-dest367, %normal-dest360, %normal-dest353, %normal-dest346, %normal-dest344, %normal-dest342, %normal-dest340, %tag66, %normal-dest291, %tag45, %tag41, %normal-dest234, %maybe-more-tests, %tag21, %normal-dest206, %maybe-more-tests606, %normal-dest190, %tag15, %normal-dest150, %tag1
  %lpad.loopexit.split-lp957 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit954, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp955, %cleanup-lpad.loopexit.loopexit.split-lp ], [ %lpad.loopexit.split-lp957, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit959, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %116 = ptrtoint {}* %farg1 to i64
  %tag-only768 = and i64 %116, 7
  %consp-test = icmp eq i64 %tag-only768, 3
  %G154914.0.in = select i1 %consp-test, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0)
  %G154914.0 = load {}*, {}** %G154914.0.in, align 8
  %117 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %118 = icmp eq {}* %G154914.0, %117
  br i1 %118, label %tag69, label %tag89.outer.preheader

tag89.outer.preheader:                            ; preds = %normal-dest
  br label %tag89.outer

normal-dest150:                                   ; preds = %tag1
  %119 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 110), align 16
  %ptrtoint151 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint151, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %120 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %farg1, {}* %119, {}* null, {}* null)
          to label %tag39 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest161:                                   ; preds = %tag23
  %ptrtoint163 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint164 = add i64 %ptrtoint163, 7
  %entry-point-addr165 = inttoptr i64 %entry-point-addr-uint164 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point166 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr165, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point166({}* %36, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest169:                                   ; preds = %normal-dest161
  %.elt = extractvalue { {}*, i64 } %121, 0
  %.elt773 = extractvalue { {}*, i64 } %121, 1
  %cond = icmp eq i64 %.elt773, 0
  %122 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond, {}* %122, {}* %.elt
  br label %tag89.outer.backedge

header-check-br182:                               ; preds = %header-check-br468
  %.off953 = add i64 %179, -1153
  %123 = icmp ult i64 %.off953, 149
  br i1 %123, label %maybe-more-tests, label %tag8

maybe-more-tests:                                 ; preds = %header-check-br182
  %124 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 119), align 8
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest234 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest190:                                   ; preds = %tag15
  %126 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 84), align 16
  %ptrtoint192 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint193 = add i64 %ptrtoint192, 7
  %entry-point-addr194 = inttoptr i64 %entry-point-addr-uint193 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point195 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr194, align 8
  %127 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point195({}* %28, i64 2, {}* %farg1, {}* %126, {}* null, {}* null)
          to label %normal-dest198 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest198:                                   ; preds = %normal-dest190
  %.elt876 = extractvalue { {}*, i64 } %127, 0
  %.elt878 = extractvalue { {}*, i64 } %127, 1
  %cond763 = icmp eq i64 %.elt878, 0
  %128 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154728.1 = select i1 %cond763, {}* %128, {}* %.elt876
  br label %tag94

normal-dest206:                                   ; preds = %maybe-more-tests606
  %ptrtoint207 = ptrtoint {}* %211 to i64
  %entry-point-addr-uint208 = add i64 %ptrtoint207, 7
  %entry-point-addr209 = inttoptr i64 %entry-point-addr-uint208 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point210 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr209, align 8
  %129 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point210({}* %211, i64 1, {}* nonnull %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest213 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest213:                                   ; preds = %normal-dest206
  %.elt880 = extractvalue { {}*, i64 } %129, 0
  %.elt882 = extractvalue { {}*, i64 } %129, 1
  %cond764 = icmp eq i64 %.elt882, 0
  %130 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154919.0 = select i1 %cond764, {}* %130, {}* %.elt880
  %131 = icmp eq {}* %G154919.0, inttoptr (i64 4 to {}*)
  br i1 %131, label %tag11, label %tag111

normal-dest234:                                   ; preds = %maybe-more-tests
  %ptrtoint235 = ptrtoint {}* %125 to i64
  %entry-point-addr-uint236 = add i64 %ptrtoint235, 7
  %entry-point-addr237 = inttoptr i64 %entry-point-addr-uint236 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point238 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr237, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point238({}* %125, i64 1, {}* nonnull %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest241 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest241:                                   ; preds = %normal-dest234
  %.elt896 = extractvalue { {}*, i64 } %132, 0
  %.elt898 = extractvalue { {}*, i64 } %132, 1
  %cond767 = icmp eq i64 %.elt898, 0
  %133 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154923.0 = select i1 %cond767, {}* %133, {}* %.elt896
  %134 = icmp eq {}* %G154923.0, inttoptr (i64 4 to {}*)
  br i1 %134, label %tag14, label %tag8

normal-dest268:                                   ; preds = %tag41
  %G154794.0 = load {}*, {}** %G154914.0.in, align 8
  %135 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %136 = icmp eq {}* %G154794.0, %135
  br i1 %136, label %tag128, label %tag106.outer.preheader

tag106.outer.preheader:                           ; preds = %normal-dest268
  br label %tag106.outer

normal-dest277:                                   ; preds = %tag44
  %ptrtoint278 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint279 = add i64 %ptrtoint278, 7
  %entry-point-addr280 = inttoptr i64 %entry-point-addr-uint279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr280, align 8
  %137 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point281({}* %47, i64 1, {}* %80, {}* null, {}* null, {}* null)
          to label %normal-dest284 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest284:                                   ; preds = %normal-dest277
  %.elt804 = extractvalue { {}*, i64 } %137, 0
  %.elt806 = extractvalue { {}*, i64 } %137, 1
  %cond749 = icmp eq i64 %.elt806, 0
  %138 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH250.1 = select i1 %cond749, {}* %138, {}* %.elt804
  br label %tag106.outer.backedge

normal-dest291:                                   ; preds = %tag45
  %139 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 68), align 16
  %ptrtoint292 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint293 = add i64 %ptrtoint292, 7
  %entry-point-addr294 = inttoptr i64 %entry-point-addr-uint293 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point295 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr294, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point295({}* %49, i64 2, {}* %farg1, {}* %139, {}* null, {}* null)
          to label %normal-dest298 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest298:                                   ; preds = %normal-dest291
  %.elt892 = extractvalue { {}*, i64 } %140, 0
  %.elt894 = extractvalue { {}*, i64 } %140, 1
  %cond766 = icmp eq i64 %.elt894, 0
  %141 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %y.1 = select i1 %cond766, {}* %141, {}* %.elt892
  br label %tag58

normal-dest305:                                   ; preds = %tag46
  %142 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 69), align 8
  %ptrtoint306 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint307 = add i64 %ptrtoint306, 7
  %entry-point-addr308 = inttoptr i64 %entry-point-addr-uint307 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point309 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr308, align 8
  %143 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point309({}* %51, i64 2, {}* %G2095854275.0, {}* %142, {}* null, {}* null)
          to label %tag89 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest340:                                   ; preds = %tag66
  %144 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %145 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %146 = invoke {}* @cc_safe_fdefinition({}* %145)
          to label %normal-dest342 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest342:                                   ; preds = %normal-dest340
  %147 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %148 = invoke {}* @cc_safe_fdefinition({}* %147)
          to label %normal-dest344 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest344:                                   ; preds = %normal-dest342
  %149 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %150 = invoke {}* @cc_safe_fdefinition({}* %149)
          to label %normal-dest346 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest346:                                   ; preds = %normal-dest344
  %151 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 102), align 16
  %ptrtoint347 = ptrtoint {}* %150 to i64
  %entry-point-addr-uint348 = add i64 %ptrtoint347, 7
  %entry-point-addr349 = inttoptr i64 %entry-point-addr-uint348 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point350 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr349, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point350({}* %150, i64 1, {}* %151, {}* null, {}* null, {}* null)
          to label %normal-dest353 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest353:                                   ; preds = %normal-dest346
  %.elt836 = extractvalue { {}*, i64 } %152, 0
  %.elt838 = extractvalue { {}*, i64 } %152, 1
  %cond755 = icmp eq i64 %.elt838, 0
  %153 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154655.0 = select i1 %cond755, {}* %153, {}* %.elt836
  %154 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %155 = invoke {}* @cc_safe_fdefinition({}* %154)
          to label %normal-dest360 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest360:                                   ; preds = %normal-dest353
  %ptrtoint361 = ptrtoint {}* %155 to i64
  %entry-point-addr-uint362 = add i64 %ptrtoint361, 7
  %entry-point-addr363 = inttoptr i64 %entry-point-addr-uint362 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point364 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr363, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point364({}* %155, i64 1, {}* %G154606.0, {}* null, {}* null, {}* null)
          to label %normal-dest367 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest367:                                   ; preds = %normal-dest360
  %.elt840 = extractvalue { {}*, i64 } %156, 0
  %.elt842 = extractvalue { {}*, i64 } %156, 1
  %cond756 = icmp eq i64 %.elt842, 0
  %157 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154656.0 = select i1 %cond756, {}* %157, {}* %.elt840
  %158 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %159 = invoke {}* @cc_safe_fdefinition({}* %158)
          to label %normal-dest374 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest374:                                   ; preds = %normal-dest367
  %ptrtoint375 = ptrtoint {}* %159 to i64
  %entry-point-addr-uint376 = add i64 %ptrtoint375, 7
  %entry-point-addr377 = inttoptr i64 %entry-point-addr-uint376 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point378 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr377, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point378({}* %159, i64 1, {}* %G154605.0, {}* null, {}* null, {}* null)
          to label %normal-dest381 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest381:                                   ; preds = %normal-dest374
  %.elt844 = extractvalue { {}*, i64 } %160, 0
  %.elt846 = extractvalue { {}*, i64 } %160, 1
  %cond757 = icmp eq i64 %.elt846, 0
  %161 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154657.0 = select i1 %cond757, {}* %161, {}* %.elt844
  %162 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %163 = invoke {}* @cc_safe_fdefinition({}* %162)
          to label %normal-dest388 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest388:                                   ; preds = %normal-dest381
  %ptrtoint389 = ptrtoint {}* %163 to i64
  %entry-point-addr-uint390 = add i64 %ptrtoint389, 7
  %entry-point-addr391 = inttoptr i64 %entry-point-addr-uint390 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point392 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr391, align 8
  %164 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point392({}* %163, i64 1, {}* %G154604.0, {}* null, {}* null, {}* null)
          to label %normal-dest395 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest395:                                   ; preds = %normal-dest388
  %.elt848 = extractvalue { {}*, i64 } %164, 0
  %.elt850 = extractvalue { {}*, i64 } %164, 1
  %cond758 = icmp eq i64 %.elt850, 0
  %165 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154658.0 = select i1 %cond758, {}* %165, {}* %.elt848
  %166 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %167 = invoke {}* @cc_safe_fdefinition({}* %166)
          to label %normal-dest402 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest402:                                   ; preds = %normal-dest395
  %ptrtoint403 = ptrtoint {}* %167 to i64
  %entry-point-addr-uint404 = add i64 %ptrtoint403, 7
  %entry-point-addr405 = inttoptr i64 %entry-point-addr-uint404 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point406 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr405, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point406({}* %167, i64 1, {}* %G154607.0, {}* null, {}* null, {}* null)
          to label %normal-dest409 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest409:                                   ; preds = %normal-dest402
  %.elt852 = extractvalue { {}*, i64 } %168, 0
  %.elt854 = extractvalue { {}*, i64 } %168, 1
  %cond759 = icmp eq i64 %.elt854, 0
  %169 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154659.0 = select i1 %cond759, {}* %169, {}* %.elt852
  %ptrtoint415 = ptrtoint {}* %148 to i64
  %entry-point-addr-uint416 = add i64 %ptrtoint415, 7
  %entry-point-addr417 = inttoptr i64 %entry-point-addr-uint416 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point418 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr417, align 8
  %170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point418({}* %148, i64 6, {}* %G154655.0, {}* %G154656.0, {}* %G154657.0, {}* %G154658.0, {}* %G154659.0, {}* %169)
          to label %normal-dest421 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest421:                                   ; preds = %normal-dest409
  %.elt856 = extractvalue { {}*, i64 } %170, 0
  %.elt858 = extractvalue { {}*, i64 } %170, 1
  %cond760 = icmp eq i64 %.elt858, 0
  %171 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154653.0 = select i1 %cond760, {}* %171, {}* %.elt856
  %ptrtoint427 = ptrtoint {}* %146 to i64
  %entry-point-addr-uint428 = add i64 %ptrtoint427, 7
  %entry-point-addr429 = inttoptr i64 %entry-point-addr-uint428 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point430 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr429, align 8
  %172 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point430({}* %146, i64 1, {}* %G154653.0, {}* null, {}* null, {}* null)
          to label %normal-dest433 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest433:                                   ; preds = %normal-dest421
  %.elt860 = extractvalue { {}*, i64 } %172, 0
  %.elt862 = extractvalue { {}*, i64 } %172, 1
  %cond761 = icmp eq i64 %.elt862, 0
  %173 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154649.0 = select i1 %cond761, {}* %173, {}* %.elt860
  %174 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %175 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint439 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint440 = add i64 %ptrtoint439, 7
  %entry-point-addr441 = inttoptr i64 %entry-point-addr-uint440 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point442 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr441, align 8
  %176 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point442({}* %66, i64 5, {}* %farg0, {}* %144, {}* %G154649.0, {}* %174, {}* %175)
          to label %tag39 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest455:                                   ; preds = %tag68
  %ptrtoint456 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint457 = add i64 %ptrtoint456, 7
  %entry-point-addr458 = inttoptr i64 %entry-point-addr-uint457 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point459 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr458, align 8
  %177 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point459({}* %68, i64 2, {}* inttoptr (i64 4 to {}*), {}* %y.0, {}* null, {}* null)
          to label %normal-dest462 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest462:                                   ; preds = %normal-dest455
  %.elt780 = extractvalue { {}*, i64 } %177, 0
  %.elt782 = extractvalue { {}*, i64 } %177, 1
  %cond746 = icmp eq i64 %.elt782, 0
  %178 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154826.1 = select i1 %cond746, {}* %178, {}* %.elt780
  br label %tag51

header-check-br468:                               ; preds = %tag69
  %irc-bit-cast472 = bitcast {}* %farg1 to i8*
  %gep473 = getelementptr inbounds i8, i8* %irc-bit-cast472, i64 -9
  %irc-bit-cast474 = bitcast i8* %gep473 to i64*
  %179 = load i64, i64* %irc-bit-cast474, align 8
  %.off952 = add i64 %179, -1081
  %180 = icmp ult i64 %.off952, 69
  br i1 %180, label %tag14, label %header-check-br182

normal-dest478:                                   ; preds = %tag71
  %181 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 88), align 16
  %182 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %ptrtoint479 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint480 = add i64 %ptrtoint479, 7
  %entry-point-addr481 = inttoptr i64 %entry-point-addr-uint480 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point482 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr481, align 8
  %183 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point482({}* %70, i64 3, {}* %farg1, {}* %181, {}* %182, {}* null)
          to label %normal-dest485 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest485:                                   ; preds = %normal-dest478
  %.elt816 = extractvalue { {}*, i64 } %183, 0
  %.elt818 = extractvalue { {}*, i64 } %183, 1
  %cond751 = icmp eq i64 %.elt818, 0
  %184 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154604.0 = select i1 %cond751, {}* %184, {}* %.elt816
  %185 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %186 = invoke {}* @cc_safe_fdefinition({}* %185)
          to label %normal-dest492 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest492:                                   ; preds = %normal-dest485
  %187 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 90), align 16
  %ptrtoint493 = ptrtoint {}* %186 to i64
  %entry-point-addr-uint494 = add i64 %ptrtoint493, 7
  %entry-point-addr495 = inttoptr i64 %entry-point-addr-uint494 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point496 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr495, align 8
  %188 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point496({}* %186, i64 2, {}* %farg1, {}* %187, {}* null, {}* null)
          to label %normal-dest499 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest499:                                   ; preds = %normal-dest492
  %.elt820 = extractvalue { {}*, i64 } %188, 0
  %.elt822 = extractvalue { {}*, i64 } %188, 1
  %cond752 = icmp eq i64 %.elt822, 0
  %189 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154605.0 = select i1 %cond752, {}* %189, {}* %.elt820
  %190 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %191 = invoke {}* @cc_safe_fdefinition({}* %190)
          to label %normal-dest506 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest506:                                   ; preds = %normal-dest499
  %192 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 92), align 16
  %ptrtoint507 = ptrtoint {}* %191 to i64
  %entry-point-addr-uint508 = add i64 %ptrtoint507, 7
  %entry-point-addr509 = inttoptr i64 %entry-point-addr-uint508 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point510 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr509, align 8
  %193 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point510({}* %191, i64 2, {}* %farg1, {}* %192, {}* null, {}* null)
          to label %normal-dest513 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest513:                                   ; preds = %normal-dest506
  %.elt824 = extractvalue { {}*, i64 } %193, 0
  %.elt826 = extractvalue { {}*, i64 } %193, 1
  %cond753 = icmp eq i64 %.elt826, 0
  %194 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154606.0 = select i1 %cond753, {}* %194, {}* %.elt824
  %195 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %196 = invoke {}* @cc_safe_fdefinition({}* %195)
          to label %normal-dest520 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest520:                                   ; preds = %normal-dest513
  %197 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 94), align 16
  %198 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %ptrtoint521 = ptrtoint {}* %196 to i64
  %entry-point-addr-uint522 = add i64 %ptrtoint521, 7
  %entry-point-addr523 = inttoptr i64 %entry-point-addr-uint522 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point524 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr523, align 8
  %199 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point524({}* %196, i64 3, {}* %farg1, {}* %197, {}* %198, {}* null)
          to label %normal-dest527 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest527:                                   ; preds = %normal-dest520
  %.elt828 = extractvalue { {}*, i64 } %199, 0
  %.elt830 = extractvalue { {}*, i64 } %199, 1
  %cond754 = icmp eq i64 %.elt830, 0
  %200 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154607.0 = select i1 %cond754, {}* %200, {}* %.elt828
  %201 = icmp eq {}* %G154605.0, %200
  %.val943 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154609.0 = select i1 %201, {}* %.val943, {}* %200
  %202 = icmp eq {}* %G154609.0, %200
  br i1 %202, label %tag102, label %tag141

normal-dest546:                                   ; preds = %tag77
  %203 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 85), align 8
  %ptrtoint548 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint549 = add i64 %ptrtoint548, 7
  %entry-point-addr550 = inttoptr i64 %entry-point-addr-uint549 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point551 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr550, align 8
  %204 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point551({}* %75, i64 2, {}* %G2095854.0, {}* %203, {}* null, {}* null)
          to label %tag106 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest560:                                   ; preds = %tag82
  %ptrtoint562 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint563 = add i64 %ptrtoint562, 7
  %entry-point-addr564 = inttoptr i64 %entry-point-addr-uint563 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point565 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr564, align 8
  %205 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point565({}* %77, i64 1, {}* %109, {}* null, {}* null, {}* null)
          to label %normal-dest568 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest568:                                   ; preds = %normal-dest560
  %.elt775 = extractvalue { {}*, i64 } %205, 0
  %.elt777 = extractvalue { {}*, i64 } %205, 1
  %cond745 = icmp eq i64 %.elt777, 0
  %206 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond745, {}* %206, {}* %.elt775
  br label %tag89.outer.backedge

normal-dest590:                                   ; preds = %tag94
  %.elt808 = extractvalue { {}*, i64 } %78, 0
  %.elt810 = extractvalue { {}*, i64 } %78, 1
  %cond750 = icmp eq i64 %.elt810, 0
  %207 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154725.0 = select i1 %cond750, {}* %207, {}* %.elt808
  %208 = icmp eq {}* %G154725.0, %207
  br i1 %208, label %tag71, label %tag109

header-check-br598:                               ; preds = %header-check-br716
  %.off949 = add i64 %231, -1153
  %209 = icmp ult i64 %.off949, 149
  br i1 %209, label %maybe-more-tests606, label %tag111

maybe-more-tests606:                              ; preds = %header-check-br598
  %210 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 119), align 8
  %211 = invoke {}* @cc_safe_fdefinition({}* %210)
          to label %normal-dest206 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest630:                                   ; preds = %tag105
  %212 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %213 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %214 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %215 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint631 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint632 = add i64 %ptrtoint631, 7
  %entry-point-addr633 = inttoptr i64 %entry-point-addr-uint632 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point634 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr633, align 8
  %216 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point634({}* %89, i64 5, {}* %212, {}* %213, {}* %SEQUENCE.0.ph, {}* %214, {}* %215)
          to label %normal-dest637 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest637:                                   ; preds = %normal-dest630
  %.elt888 = extractvalue { {}*, i64 } %216, 0
  %.elt890 = extractvalue { {}*, i64 } %216, 1
  %cond765 = icmp eq i64 %.elt890, 0
  %217 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G2095854275.1 = select i1 %cond765, {}* %217, {}* %.elt888
  br label %tag108

normal-dest647:                                   ; preds = %tag107
  %218 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %219 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %220 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %221 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint648 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint649 = add i64 %ptrtoint648, 7
  %entry-point-addr650 = inttoptr i64 %entry-point-addr-uint649 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point651 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr650, align 8
  %222 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point651({}* %91, i64 5, {}* %218, {}* %219, {}* %SEQUENCE270.0.ph, {}* %220, {}* %221)
          to label %normal-dest654 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest654:                                   ; preds = %normal-dest647
  %.elt872 = extractvalue { {}*, i64 } %222, 0
  %.elt874 = extractvalue { {}*, i64 } %222, 1
  %cond762 = icmp eq i64 %.elt874, 0
  %223 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond762, {}* %223, {}* %.elt872
  br label %tag116

normal-dest663:                                   ; preds = %tag109
  %224 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 110), align 16
  %ptrtoint664 = ptrtoint {}* %95 to i64
  %entry-point-addr-uint665 = add i64 %ptrtoint664, 7
  %entry-point-addr666 = inttoptr i64 %entry-point-addr-uint665 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point667 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr666, align 8
  %225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point667({}* %95, i64 2, {}* %farg1, {}* %224, {}* null, {}* null)
          to label %tag39 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest681:                                   ; preds = %tag2
  %ptrtoint682 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint683 = add i64 %ptrtoint682, 7
  %entry-point-addr684 = inttoptr i64 %entry-point-addr-uint683 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point685 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr684, align 8
  %226 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point685({}* %17, i64 2, {}* %LENGTH250.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest688 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest688:                                   ; preds = %normal-dest681
  %.elt800 = extractvalue { {}*, i64 } %226, 0
  %.elt802 = extractvalue { {}*, i64 } %226, 1
  %cond748 = icmp eq i64 %.elt802, 0
  %227 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH250.2 = select i1 %cond748, {}* %227, {}* %.elt800
  br label %tag106.outer.backedge

normal-dest699:                                   ; preds = %tag118
  %228 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %G154821.0 = load {}*, {}** %G154914.0.in, align 8
  %229 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %230 = icmp eq {}* %G154821.0, %229
  br i1 %230, label %tag101, label %tag7

header-check-br716:                               ; preds = %tag128
  %irc-bit-cast720 = bitcast {}* %farg1 to i8*
  %gep721 = getelementptr inbounds i8, i8* %irc-bit-cast720, i64 -9
  %irc-bit-cast722 = bitcast i8* %gep721 to i64*
  %231 = load i64, i64* %irc-bit-cast722, align 8
  %.off = add i64 %231, -1081
  %232 = icmp ult i64 %.off, 69
  br i1 %232, label %tag11, label %header-check-br598

normal-dest732:                                   ; preds = %tag140
  %233 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %234 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %235 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %236 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint733 = ptrtoint {}* %114 to i64
  %entry-point-addr-uint734 = add i64 %ptrtoint733, 7
  %entry-point-addr735 = inttoptr i64 %entry-point-addr-uint734 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point736 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr735, align 8
  %237 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point736({}* %114, i64 5, {}* %233, {}* %234, {}* %farg1, {}* %235, {}* %236)
          to label %normal-dest739 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest739:                                   ; preds = %normal-dest732
  %.elt792 = extractvalue { {}*, i64 } %237, 0
  %.elt794 = extractvalue { {}*, i64 } %237, 1
  %cond747 = icmp eq i64 %.elt794, 0
  %238 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154802.1 = select i1 %cond747, {}* %238, {}* %.elt792
  br label %tag21
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !26 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G154952.0 = phi {}* [ %18, %header-check-br ], [ %G154952.1, %normal-dest17 ], [ %G154952.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 122), align 16
  %ptrtoint43 = ptrtoint {}* %G154952.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G154952.0, i64 2, {}* %"closure->ZWE-NIL-PROPERTIES-LOESCHEN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %maybe-more-tests28, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 122), align 16
  %"closure->ZWE-NIL-PROPERTIES-LOESCHEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2454, i64 69, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 124), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154952.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %27 = icmp ult i64 %.off106, 5
  br i1 %27, label %maybe-more-tests28, label %tag

maybe-more-tests28:                               ; preds = %header-check-br20
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %maybe-more-tests28
  %ptrtoint31 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %29, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt101 = extractvalue { {}*, i64 } %30, 0
  %.elt103 = extractvalue { {}*, i64 } %30, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154952.2 = select i1 %cond82, {}* %31, {}* %.elt101
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 125), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ZWE-NIL-PROPERTIES-LOESCHEN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 126), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ZWE-NIL-PROPERTIES-LOESCHEN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 276 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 122), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !27 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc359 unwind label %cleanup-lpad

.noexc359:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag2, %normal-dest249, %tag64
  %x76.0 = phi {}* [ %67, %tag64 ], [ %x76.1, %normal-dest249 ], [ %15, %tag2 ]
  %11 = ptrtoint {}* %x76.0 to i64
  %tag-only329 = and i64 %11, 7
  %consp-test = icmp eq i64 %tag-only329, 3
  br i1 %consp-test, label %tag66, label %tag13

tag1:                                             ; preds = %tag18
  %12 = add i64 %27, -3
  %13 = inttoptr i64 %12 to {}**
  %14 = load {}*, {}** %13, align 8
  br label %tag69

tag2:                                             ; preds = %normal-dest130
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %16 = icmp eq {}* %15, %farg0
  %.val379 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154998.0 = select i1 %16, {}* %.val379, {}* %15
  %17 = icmp eq {}* %G154998.0, %15
  br i1 %17, label %tag63, label %tag

tag4:                                             ; preds = %normal-dest187
  %18 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %19 = icmp eq {}* %18, %farg0
  %.val375 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155040.0 = select i1 %19, {}* %.val375, {}* %18
  %20 = icmp eq {}* %G155040.0, %18
  br i1 %20, label %tag68, label %tag5

tag5:                                             ; preds = %tag4, %normal-dest283, %tag38
  %x93.0 = phi {}* [ %49, %tag38 ], [ %x93.1, %normal-dest283 ], [ %18, %tag4 ]
  %21 = ptrtoint {}* %x93.0 to i64
  %tag-only95308 = and i64 %21, 7
  %consp-test96 = icmp eq i64 %tag-only95308, 3
  br i1 %consp-test96, label %tag42, label %tag65

tag7:                                             ; preds = %tag19
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest97 unwind label %cleanup-lpad

tag13:                                            ; preds = %tag
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %25 = icmp eq {}* %x76.0, %24
  %.val381 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G154982.0 = select i1 %25, {}* %.val381, {}* %24
  %26 = icmp eq {}* %G154982.0, %24
  br i1 %26, label %tag61, label %tag28

tag18:                                            ; preds = %normal-dest
  %27 = ptrtoint {}* %farg0 to i64
  %tag-only116304 = and i64 %27, 7
  %consp-test117 = icmp eq i64 %tag-only116304, 3
  %G155104.0 = select i1 %consp-test117, {}* %.val, {}* %80
  %28 = icmp eq {}* %G155104.0, %80
  br i1 %28, label %tag67, label %tag1

tag19:                                            ; preds = %tag69
  %29 = icmp eq {}* %78, %farg0
  %.val371 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155081.0 = select i1 %29, {}* %.val371, {}* %78
  %30 = icmp eq {}* %G155081.0, %78
  br i1 %30, label %tag7, label %tag21

tag21:                                            ; preds = %tag19, %normal-dest101, %tag22
  %.val384 = phi {}* [ %78, %tag22 ], [ %88, %normal-dest101 ], [ %78, %tag19 ]
  %x102.0 = phi {}* [ %35, %tag22 ], [ %x102.1, %normal-dest101 ], [ %78, %tag19 ]
  %31 = ptrtoint {}* %x102.0 to i64
  %tag-only127306 = and i64 %31, 7
  %consp-test128 = icmp eq i64 %tag-only127306, 3
  %.val373 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155068.0 = select i1 %consp-test128, {}* %.val373, {}* %.val384
  %32 = icmp eq {}* %G155068.0, %.val384
  br i1 %32, label %tag60, label %tag31

tag22:                                            ; preds = %tag69
  %33 = add i64 %27, 5
  %34 = inttoptr i64 %33 to {}**
  %35 = load {}*, {}** %34, align 8
  br label %tag21

tag23:                                            ; preds = %tag60, %tag34
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 122), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest130 unwind label %cleanup-lpad

tag26:                                            ; preds = %tag65, %normal-dest201, %tag42
  %G155013.0 = phi {}* [ %52, %tag42 ], [ %G155013.1, %normal-dest201 ], [ %68, %tag65 ]
  %ptrtoint136 = ptrtoint {}* %96 to i64
  %entry-point-addr-uint137 = add i64 %ptrtoint136, 7
  %entry-point-addr138 = inttoptr i64 %entry-point-addr-uint137 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point139 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr138, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point139({}* %96, i64 1, {}* %G155013.0, {}* null, {}* null, {}* null)
          to label %normal-dest142 unwind label %cleanup-lpad

tag28:                                            ; preds = %tag13, %normal-dest235, %tag66
  %G154971.0 = phi {}* [ %73, %tag66 ], [ %G154971.1, %normal-dest235 ], [ %24, %tag13 ]
  %ptrtoint167 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint168 = add i64 %ptrtoint167, 7
  %entry-point-addr169 = inttoptr i64 %entry-point-addr-uint168 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point170 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr169, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point170({}* %37, i64 1, {}* %G154971.0, {}* null, {}* null, {}* null)
          to label %normal-dest173 unwind label %cleanup-lpad

tag31:                                            ; preds = %tag21
  %40 = add i64 %31, -3
  %41 = inttoptr i64 %40 to {}**
  %42 = load {}*, {}** %41, align 8
  br label %tag34

tag34:                                            ; preds = %normal-dest215, %tag31
  %43 = phi {}* [ %.val384, %tag31 ], [ %108, %normal-dest215 ]
  %G154936.0 = phi {}* [ %42, %tag31 ], [ %G154936.1, %normal-dest215 ]
  %44 = icmp eq {}* %G154936.0, %43
  br i1 %44, label %tag23, label %tag35

tag35:                                            ; preds = %tag34
  %45 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest183 unwind label %cleanup-lpad

tag38:                                            ; preds = %normal-dest187
  %47 = add i64 %27, 5
  %48 = inttoptr i64 %47 to {}**
  %49 = load {}*, {}** %48, align 8
  br label %tag5

tag42:                                            ; preds = %tag5
  %50 = add i64 %21, 5
  %51 = inttoptr i64 %50 to {}**
  %52 = load {}*, {}** %51, align 8
  br label %tag26

tag45:                                            ; preds = %normal-dest, %normal-dest173, %normal-dest166
  %return-value.sroa.22.0 = phi i64 [ %.elt333, %normal-dest173 ], [ %.elt319, %normal-dest166 ], [ 1, %normal-dest ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt331, %normal-dest173 ], [ %.elt317, %normal-dest166 ], [ %80, %normal-dest ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %53 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %54 = insertvalue { {}*, i64 } %53, i64 %return-value.sroa.22.0, 1
  ret { {}*, i64 } %54

tag46:                                            ; preds = %tag65
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest194 unwind label %cleanup-lpad

tag47:                                            ; preds = %tag60
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest208 unwind label %cleanup-lpad

tag60:                                            ; preds = %tag21
  %59 = icmp eq {}* %x102.0, %.val384
  %G155061.0 = select i1 %59, {}* %.val373, {}* %.val384
  %60 = icmp eq {}* %G155061.0, %.val384
  br i1 %60, label %tag47, label %tag23

tag61:                                            ; preds = %tag13
  %61 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest228 unwind label %cleanup-lpad

tag63:                                            ; preds = %tag2
  %63 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest242 unwind label %cleanup-lpad

tag64:                                            ; preds = %normal-dest130
  %65 = add i64 %27, 5
  %66 = inttoptr i64 %65 to {}**
  %67 = load {}*, {}** %66, align 8
  br label %tag

tag65:                                            ; preds = %tag5
  %68 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %69 = icmp eq {}* %x93.0, %68
  %.val377 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155024.0 = select i1 %69, {}* %.val377, {}* %68
  %70 = icmp eq {}* %G155024.0, %68
  br i1 %70, label %tag46, label %tag26

tag66:                                            ; preds = %tag
  %71 = add i64 %11, 5
  %72 = inttoptr i64 %71 to {}**
  %73 = load {}*, {}** %72, align 8
  br label %tag28

tag67:                                            ; preds = %tag18
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest262 unwind label %cleanup-lpad

tag68:                                            ; preds = %tag4
  %76 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest276 unwind label %cleanup-lpad

tag69:                                            ; preds = %normal-dest269, %tag1
  %78 = phi {}* [ %80, %tag1 ], [ %126, %normal-dest269 ]
  %G154935.0 = phi {}* [ %14, %tag1 ], [ %G154935.1, %normal-dest269 ]
  br i1 %consp-test117, label %tag22, label %tag19

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest276, %tag68, %normal-dest262, %tag67, %normal-dest242, %tag63, %normal-dest228, %tag61, %normal-dest208, %tag47, %normal-dest194, %tag46, %normal-dest185, %normal-dest183, %tag35, %tag28, %normal-dest154, %normal-dest142, %tag26, %tag23, %normal-dest97, %tag7
  %79 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %79

normal-dest:                                      ; preds = %entry
  %80 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %81 = icmp eq {}* %80, %farg0
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155109.0 = select i1 %81, {}* %.val, {}* %80
  %82 = icmp eq {}* %G155109.0, %80
  br i1 %82, label %tag18, label %tag45

normal-dest97:                                    ; preds = %tag7
  %83 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %84 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %85 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %86 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 5, {}* %83, {}* %84, {}* %farg0, {}* %85, {}* %86)
          to label %normal-dest101 unwind label %cleanup-lpad

normal-dest101:                                   ; preds = %normal-dest97
  %.elt347 = extractvalue { {}*, i64 } %87, 0
  %.elt349 = extractvalue { {}*, i64 } %87, 1
  %cond300 = icmp eq i64 %.elt349, 0
  %88 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %x102.1 = select i1 %cond300, {}* %88, {}* %.elt347
  br label %tag21

normal-dest130:                                   ; preds = %tag23
  br i1 %consp-test117, label %tag64, label %tag2

normal-dest142:                                   ; preds = %tag26
  %.elt309 = extractvalue { {}*, i64 } %38, 0
  %.elt311 = extractvalue { {}*, i64 } %38, 1
  %cond = icmp eq i64 %.elt311, 0
  %89 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155011.0 = select i1 %cond, {}* %89, {}* %.elt309
  %ptrtoint148 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint149 = add i64 %ptrtoint148, 7
  %entry-point-addr150 = inttoptr i64 %entry-point-addr-uint149 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point151 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr150, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point151({}* %94, i64 2, {}* %G154936.0, {}* %G155011.0, {}* null, {}* null)
          to label %normal-dest154 unwind label %cleanup-lpad

normal-dest154:                                   ; preds = %normal-dest142
  %.elt313 = extractvalue { {}*, i64 } %90, 0
  %.elt315 = extractvalue { {}*, i64 } %90, 1
  %cond294 = icmp eq i64 %.elt315, 0
  %91 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155008.0 = select i1 %cond294, {}* %91, {}* %.elt313
  %ptrtoint160 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint161 = add i64 %ptrtoint160, 7
  %entry-point-addr162 = inttoptr i64 %entry-point-addr-uint161 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point163 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr162, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point163({}* %46, i64 2, {}* %G154935.0, {}* %G155008.0, {}* null, {}* null)
          to label %normal-dest166 unwind label %cleanup-lpad

normal-dest166:                                   ; preds = %normal-dest154
  %.elt317 = extractvalue { {}*, i64 } %92, 0
  %.elt319 = extractvalue { {}*, i64 } %92, 1
  br label %tag45

normal-dest173:                                   ; preds = %tag28
  %.elt331 = extractvalue { {}*, i64 } %39, 0
  %.elt333 = extractvalue { {}*, i64 } %39, 1
  br label %tag45

normal-dest183:                                   ; preds = %tag35
  %93 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest185 unwind label %cleanup-lpad

normal-dest185:                                   ; preds = %normal-dest183
  %95 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 122), align 16
  %96 = invoke {}* @cc_safe_fdefinition({}* %95)
          to label %normal-dest187 unwind label %cleanup-lpad

normal-dest187:                                   ; preds = %normal-dest185
  br i1 %consp-test117, label %tag38, label %tag4

normal-dest194:                                   ; preds = %tag46
  %97 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %98 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %99 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %100 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint195 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint196 = add i64 %ptrtoint195, 7
  %entry-point-addr197 = inttoptr i64 %entry-point-addr-uint196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr197, align 8
  %101 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point198({}* %56, i64 5, {}* %97, {}* %98, {}* %x93.0, {}* %99, {}* %100)
          to label %normal-dest201 unwind label %cleanup-lpad

normal-dest201:                                   ; preds = %normal-dest194
  %.elt321 = extractvalue { {}*, i64 } %101, 0
  %.elt323 = extractvalue { {}*, i64 } %101, 1
  %cond295 = icmp eq i64 %.elt323, 0
  %102 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155013.1 = select i1 %cond295, {}* %102, {}* %.elt321
  br label %tag26

normal-dest208:                                   ; preds = %tag47
  %103 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %104 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %105 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %106 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint209 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint210 = add i64 %ptrtoint209, 7
  %entry-point-addr211 = inttoptr i64 %entry-point-addr-uint210 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point212 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr211, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point212({}* %58, i64 5, {}* %103, {}* %104, {}* %x102.0, {}* %105, {}* %106)
          to label %normal-dest215 unwind label %cleanup-lpad

normal-dest215:                                   ; preds = %normal-dest208
  %.elt343 = extractvalue { {}*, i64 } %107, 0
  %.elt345 = extractvalue { {}*, i64 } %107, 1
  %cond299 = icmp eq i64 %.elt345, 0
  %108 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154936.1 = select i1 %cond299, {}* %108, {}* %.elt343
  br label %tag34

normal-dest228:                                   ; preds = %tag61
  %109 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %111 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %112 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint229 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint230 = add i64 %ptrtoint229, 7
  %entry-point-addr231 = inttoptr i64 %entry-point-addr-uint230 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point232 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr231, align 8
  %113 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point232({}* %62, i64 5, {}* %109, {}* %110, {}* %x76.0, {}* %111, {}* %112)
          to label %normal-dest235 unwind label %cleanup-lpad

normal-dest235:                                   ; preds = %normal-dest228
  %.elt335 = extractvalue { {}*, i64 } %113, 0
  %.elt337 = extractvalue { {}*, i64 } %113, 1
  %cond297 = icmp eq i64 %.elt337, 0
  %114 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154971.1 = select i1 %cond297, {}* %114, {}* %.elt335
  br label %tag28

normal-dest242:                                   ; preds = %tag63
  %115 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %116 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %117 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %118 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint243 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint244 = add i64 %ptrtoint243, 7
  %entry-point-addr245 = inttoptr i64 %entry-point-addr-uint244 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point246 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr245, align 8
  %119 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point246({}* %64, i64 5, {}* %115, {}* %116, {}* %farg0, {}* %117, {}* %118)
          to label %normal-dest249 unwind label %cleanup-lpad

normal-dest249:                                   ; preds = %normal-dest242
  %.elt339 = extractvalue { {}*, i64 } %119, 0
  %.elt341 = extractvalue { {}*, i64 } %119, 1
  %cond298 = icmp eq i64 %.elt341, 0
  %120 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %x76.1 = select i1 %cond298, {}* %120, {}* %.elt339
  br label %tag

normal-dest262:                                   ; preds = %tag67
  %121 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %122 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %123 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %124 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint263 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint264 = add i64 %ptrtoint263, 7
  %entry-point-addr265 = inttoptr i64 %entry-point-addr-uint264 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point266 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr265, align 8
  %125 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point266({}* %75, i64 5, {}* %121, {}* %122, {}* %farg0, {}* %123, {}* %124)
          to label %normal-dest269 unwind label %cleanup-lpad

normal-dest269:                                   ; preds = %normal-dest262
  %.elt351 = extractvalue { {}*, i64 } %125, 0
  %.elt353 = extractvalue { {}*, i64 } %125, 1
  %cond301 = icmp eq i64 %.elt353, 0
  %126 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G154935.1 = select i1 %cond301, {}* %126, {}* %.elt351
  br label %tag69

normal-dest276:                                   ; preds = %tag68
  %127 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %128 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %129 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %130 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint277 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint278 = add i64 %ptrtoint277, 7
  %entry-point-addr279 = inttoptr i64 %entry-point-addr-uint278 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point280 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr279, align 8
  %131 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point280({}* %77, i64 5, {}* %127, {}* %128, {}* %farg0, {}* %129, {}* %130)
          to label %normal-dest283 unwind label %cleanup-lpad

normal-dest283:                                   ; preds = %normal-dest276
  %.elt325 = extractvalue { {}*, i64 } %131, 0
  %.elt327 = extractvalue { {}*, i64 } %131, 1
  %cond296 = icmp eq i64 %.elt327, 0
  %132 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %x93.1 = select i1 %cond296, {}* %132, {}* %.elt325
  br label %tag5
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !28 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G155139.0 = phi {}* [ %18, %header-check-br ], [ %G155139.1, %normal-dest17 ], [ %G155139.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 153), align 8
  %ptrtoint43 = ptrtoint {}* %G155139.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G155139.0, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN_TEXT", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 153), align 8
  %"closure->ZWE=VORSCHLAG_UEBERSETZEN_TEXT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2791, i64 80, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 152), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155139.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155139.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 155), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN_TEXT", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 166), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN_TEXT", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 320 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 153), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !29 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %enough-args = icmp slt i64 %nargs, 5
  br i1 %enough-args, label %error, label %continue

tag11:                                            ; preds = %mvn-final139
  %11 = ptrtoint {}* %.in to i64
  %single-float-tag-only171 = and i64 %11, 7
  %fixnum-tag-only208270 = and i64 %11, 3
  %fixnump-test209 = icmp ne i64 %fixnum-tag-only208270, 0
  %test227 = icmp eq i64 %single-float-tag-only171, 1
  %or.cond288 = and i1 %fixnump-test209, %test227
  br i1 %or.cond288, label %header-check-br224, label %tag15

tag13:                                            ; preds = %tag24
  %12 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 150), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest175 unwind label %cleanup-lpad

tag14:                                            ; preds = %header-check-br, %header-check-br, %header-check-br, %header-check-br
  %14 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest184 unwind label %cleanup-lpad

tag15:                                            ; preds = %header-check-br224, %header-check-br, %tag11, %tag19, %tag24, %normal-dest182
  %return-value.sroa.20.0 = phi i64 [ %.elt266, %normal-dest182 ], [ 1, %tag24 ], [ 1, %tag19 ], [ 1, %tag11 ], [ 1, %header-check-br ], [ 1, %header-check-br224 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt264, %normal-dest182 ], [ %.in, %tag24 ], [ %.in, %tag19 ], [ %.in, %tag11 ], [ %.in, %header-check-br ], [ %.in, %header-check-br224 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %16 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %17 = insertvalue { {}*, i64 } %16, i64 %return-value.sroa.20.0, 1
  ret { {}*, i64 } %17

tag19:                                            ; preds = %header-check-br224, %header-check-br224, %header-check-br224, %header-check-br224
  %18 = ptrtoint {}* %58 to i64
  %single-float-tag-only206 = and i64 %18, 7
  %fixnum-tag-only272 = and i64 %18, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only272, 0
  %test = icmp eq i64 %single-float-tag-only206, 1
  %or.cond286 = and i1 %fixnump-test, %test
  br i1 %or.cond286, label %header-check-br, label %tag15

tag24:                                            ; preds = %mvn-final139, %normal-dest191
  %19 = phi {}* [ %68, %normal-dest191 ], [ %.val289, %mvn-final139 ]
  %G155161.0 = phi {}* [ %G155161.1, %normal-dest191 ], [ %.val, %mvn-final139 ]
  %20 = icmp eq {}* %G155161.0, %19
  br i1 %20, label %tag15, label %tag13

cleanup-lpad:                                     ; preds = %normal-dest184, %tag14, %normal-dest175, %tag13, %normal-dest122, %normal-dest110, %normal-dest98, %normal-dest91, %normal-dest89, %normal-dest87, %normal-dest85, %normal-dest78, %normal-dest71, %normal-dest64, %normal-dest57, %normal-dest53, %normal-dest50, %continue48, %error47, %error
  %21 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %21

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @":::global-str-ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 5)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs31 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-132 = add i64 %rem-nargs31, -1
  store i64 %rem-nargs-132, i64* %"remaining-nargs*", align 8
  %vaarg33 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs35 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-136 = add i64 %rem-nargs35, -1
  store i64 %rem-nargs-136, i64* %"remaining-nargs*", align 8
  %vaarg37 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs39 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-140 = add i64 %rem-nargs39, -1
  store i64 %rem-nargs-140, i64* %"remaining-nargs*", align 8
  %vaarg41 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs43 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-144 = add i64 %rem-nargs43, -1
  store i64 %rem-nargs-144, i64* %"remaining-nargs*", align 8
  %vaarg45 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %max-num-args = icmp eq i64 %nargs, 5
  br i1 %max-num-args, label %continue48, label %error47

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

error47:                                          ; preds = %continue
  invoke void @va_tooManyArgumentsException(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @":::global-str-ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 5)
          to label %normal-dest49 unwind label %cleanup-lpad

continue48:                                       ; preds = %continue
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 128), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %error47
  call void @unreachableError()
  unreachable

normal-dest50:                                    ; preds = %continue48
  %ptrtoint = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* %vaarg33, {}* null, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest50
  %.elt = extractvalue { {}*, i64 } %24, 0
  %.elt238 = extractvalue { {}*, i64 } %24, 1
  %cond = icmp eq i64 %.elt238, 0
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155119.0 = select i1 %cond, {}* %25, {}* %.elt
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 128), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest53
  %ptrtoint58 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint59 = add i64 %ptrtoint58, 7
  %entry-point-addr60 = inttoptr i64 %entry-point-addr-uint59 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point61 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr60, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point61({}* %27, i64 1, {}* %vaarg41, {}* null, {}* null, {}* null)
          to label %normal-dest64 unwind label %cleanup-lpad

normal-dest64:                                    ; preds = %normal-dest57
  %.elt240 = extractvalue { {}*, i64 } %28, 0
  %.elt242 = extractvalue { {}*, i64 } %28, 1
  %cond231 = icmp eq i64 %.elt242, 0
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155120.0 = select i1 %cond231, {}* %29, {}* %.elt240
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 128), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest71 unwind label %cleanup-lpad

normal-dest71:                                    ; preds = %normal-dest64
  %ptrtoint72 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint73 = add i64 %ptrtoint72, 7
  %entry-point-addr74 = inttoptr i64 %entry-point-addr-uint73 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point75 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr74, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point75({}* %31, i64 1, {}* %vaarg45, {}* null, {}* null, {}* null)
          to label %normal-dest78 unwind label %cleanup-lpad

normal-dest78:                                    ; preds = %normal-dest71
  %.elt244 = extractvalue { {}*, i64 } %32, 0
  %.elt246 = extractvalue { {}*, i64 } %32, 1
  %cond232 = icmp eq i64 %.elt246, 0
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155121.0 = select i1 %cond232, {}* %33, {}* %.elt244
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 130), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest85 unwind label %cleanup-lpad

normal-dest85:                                    ; preds = %normal-dest78
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 132), align 16
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest87 unwind label %cleanup-lpad

normal-dest87:                                    ; preds = %normal-dest85
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 122), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest89 unwind label %cleanup-lpad

normal-dest89:                                    ; preds = %normal-dest87
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest91 unwind label %cleanup-lpad

normal-dest91:                                    ; preds = %normal-dest89
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %44 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 136), align 16
  %45 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 138), align 16
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 140), align 16
  %ptrtoint92 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %42, i64 8, {}* %43, {}* %G155119.0, {}* %44, {}* %vaarg37, {}* %45, {}* %G155120.0, {}* %46, {}* %G155121.0)
          to label %normal-dest98 unwind label %cleanup-lpad

normal-dest98:                                    ; preds = %normal-dest91
  %.elt248 = extractvalue { {}*, i64 } %47, 0
  %.elt250 = extractvalue { {}*, i64 } %47, 1
  %cond233 = icmp eq i64 %.elt250, 0
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155182.0 = select i1 %cond233, {}* %48, {}* %.elt248
  %ptrtoint104 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint105 = add i64 %ptrtoint104, 7
  %entry-point-addr106 = inttoptr i64 %entry-point-addr-uint105 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point107 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr106, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point107({}* %40, i64 1, {}* %G155182.0, {}* null, {}* null, {}* null)
          to label %normal-dest110 unwind label %cleanup-lpad

normal-dest110:                                   ; preds = %normal-dest98
  %.elt252 = extractvalue { {}*, i64 } %49, 0
  %.elt254 = extractvalue { {}*, i64 } %49, 1
  %cond234 = icmp eq i64 %.elt254, 0
  %50 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155180.0 = select i1 %cond234, {}* %50, {}* %.elt252
  %ptrtoint116 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint117 = add i64 %ptrtoint116, 7
  %entry-point-addr118 = inttoptr i64 %entry-point-addr-uint117 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point119 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr118, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point119({}* %38, i64 2, {}* %vaarg, {}* %G155180.0, {}* null, {}* null)
          to label %normal-dest122 unwind label %cleanup-lpad

normal-dest122:                                   ; preds = %normal-dest110
  %.elt256 = extractvalue { {}*, i64 } %51, 0
  %.elt258 = extractvalue { {}*, i64 } %51, 1
  %cond235 = icmp eq i64 %.elt258, 0
  %52 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155177.0 = select i1 %cond235, {}* %52, {}* %.elt256
  %ptrtoint128 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint129 = add i64 %ptrtoint128, 7
  %entry-point-addr130 = inttoptr i64 %entry-point-addr-uint129 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point131 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr130, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point131({}* %35, i64 2, {}* %36, {}* %G155177.0, {}* null, {}* null)
          to label %normal-dest134 unwind label %cleanup-lpad

normal-dest134:                                   ; preds = %normal-dest122
  %.elt260 = extractvalue { {}*, i64 } %53, 0
  %.elt262 = extractvalue { {}*, i64 } %53, 1
  switch i64 %.elt262, label %mvn2- [
    i64 0, label %mvn0-137
    i64 1, label %mvn1-138
  ]

mvn0-137:                                         ; preds = %normal-dest134
  %54 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final139

mvn1-138:                                         ; preds = %normal-dest134
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final139

mvn2-:                                            ; preds = %normal-dest134
  %gep = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  %56 = load {}*, {}** %gep, align 8
  %.val289.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final139

mvn-final139:                                     ; preds = %mvn2-, %mvn1-138, %mvn0-137
  %.val289 = phi {}* [ %.val289.pre, %mvn2- ], [ %55, %mvn1-138 ], [ %54, %mvn0-137 ]
  %.in = phi {}* [ %.elt260, %mvn2- ], [ %.elt260, %mvn1-138 ], [ %54, %mvn0-137 ]
  %FEHLERMELDUNG155118.0 = phi {}* [ %56, %mvn2- ], [ %55, %mvn1-138 ], [ %54, %mvn0-137 ]
  %57 = bitcast {}* %.in to i8*
  %58 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 142), align 16
  %59 = icmp eq {}* %.in, %58
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155170.0 = select i1 %59, {}* %.val, {}* %.val289
  %60 = icmp eq {}* %G155170.0, %.val289
  br i1 %60, label %tag11, label %tag24

header-check-br:                                  ; preds = %tag19
  %irc-bit-cast145 = bitcast {}* %58 to i8*
  %gep146 = getelementptr inbounds i8, i8* %irc-bit-cast145, i64 -9
  %irc-bit-cast147 = bitcast i8* %gep146 to i64*
  %61 = load i64, i64* %irc-bit-cast147, align 8
  %62 = add i64 %61, -1309
  %63 = lshr i64 %62, 3
  %64 = shl i64 %62, 61
  %65 = or i64 %63, %64
  switch i64 %65, label %tag15 [
    i64 2, label %tag14
    i64 4, label %tag14
    i64 5, label %tag14
    i64 0, label %tag14
  ]

normal-dest175:                                   ; preds = %tag13
  %ptrtoint176 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint177 = add i64 %ptrtoint176, 7
  %entry-point-addr178 = inttoptr i64 %entry-point-addr-uint177 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point179 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr178, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point179({}* %13, i64 1, {}* %FEHLERMELDUNG155118.0, {}* null, {}* null, {}* null)
          to label %normal-dest182 unwind label %cleanup-lpad

normal-dest182:                                   ; preds = %normal-dest175
  %.elt264 = extractvalue { {}*, i64 } %66, 0
  %.elt266 = extractvalue { {}*, i64 } %66, 1
  br label %tag15

normal-dest184:                                   ; preds = %tag14
  %ptrtoint185 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %15, i64 2, {}* nonnull %.in, {}* nonnull %58, {}* null, {}* null)
          to label %normal-dest191 unwind label %cleanup-lpad

normal-dest191:                                   ; preds = %normal-dest184
  %.elt275 = extractvalue { {}*, i64 } %67, 0
  %.elt277 = extractvalue { {}*, i64 } %67, 1
  %cond236 = icmp eq i64 %.elt277, 0
  %68 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155161.1 = select i1 %cond236, {}* %68, {}* %.elt275
  br label %tag24

header-check-br224:                               ; preds = %tag11
  %gep229 = getelementptr inbounds i8, i8* %57, i64 -9
  %irc-bit-cast230 = bitcast i8* %gep229 to i64*
  %69 = load i64, i64* %irc-bit-cast230, align 8
  %70 = add i64 %69, -1309
  %71 = lshr i64 %70, 3
  %72 = shl i64 %70, 61
  %73 = or i64 %71, %72
  switch i64 %73, label %tag15 [
    i64 2, label %tag19
    i64 4, label %tag19
    i64 5, label %tag19
    i64 0, label %tag19
  ]
}

declare void @va_notEnoughArgumentsException(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @unreachableError() local_unnamed_addr #1

declare void @va_tooManyArgumentsException(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare [0 x {}*]* @cc_multipleValuesArrayAddress() local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !30 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G155226.0 = phi {}* [ %18, %header-check-br ], [ %G155226.1, %normal-dest17 ], [ %G155226.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 181), align 8
  %ptrtoint34 = ptrtoint {}* %G155226.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G155226.0, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag2, %normal-dest21, %tag1, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 181), align 8
  %"closure->ZWE=VORSCHLAG_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 3634, i64 96, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155226.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

normal-dest21:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 180), align 16
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155226.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag2

normal-dest40:                                    ; preds = %tag2
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 183), align 8
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 184), align 16
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 384 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 181), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !31 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc766 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc766:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %normal-dest452
  %14 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest132 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag2:                                             ; preds = %tag53
  %16 = icmp eq {}* %.val800, %farg1
  %.val799 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155295.0 = select i1 %16, {}* %.val799, {}* %.val800
  %17 = icmp eq {}* %G155295.0, %.val800
  br i1 %17, label %tag74, label %tag65

tag7:                                             ; preds = %tag94
  %18 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 76), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest233 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag10:                                            ; preds = %tag13
  %20 = ptrtoint {}* %LENGTH241.0.ph to i64
  %fixnum-tag-only249651 = and i64 %20, 3
  %fixnump-test250 = icmp eq i64 %fixnum-tag-only249651, 0
  br i1 %fixnump-test250, label %tag94, label %tag42

tag11:                                            ; preds = %normal-dest
  %test = icmp eq i64 %tag-only648, 1
  br i1 %test, label %header-check-br, label %tag21

tag13:                                            ; preds = %tag91, %normal-dest466, %tag102
  %.val790 = phi {}* [ %.val788.pre, %tag102 ], [ %185, %normal-dest466 ], [ %76, %tag91 ]
  %G2095854.0 = phi {}* [ %90, %tag102 ], [ %G2095854.1, %normal-dest466 ], [ %76, %tag91 ]
  %21 = ptrtoint {}* %G2095854.0 to i64
  %tag-only255650 = and i64 %21, 7
  %consp-test256 = icmp eq i64 %tag-only255650, 3
  %.val787 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155453.0 = select i1 %consp-test256, {}* %.val787, {}* %.val790
  %22 = icmp eq {}* %G155453.0, %.val790
  br i1 %22, label %tag116, label %tag10

tag14:                                            ; preds = %tag21
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest258 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag16:                                            ; preds = %tag106
  %25 = add i64 %102, 7
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 8
  %"tag fixnum" = shl nuw i64 %27, 2
  %28 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag59

tag17:                                            ; preds = %tag59
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 80), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest273 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag21:                                            ; preds = %tag11, %normal-dest313, %header-check-br532, %tag106
  %.val803829 = phi {}* [ %94, %tag106 ], [ %G155472.0, %tag11 ], [ %157, %normal-dest313 ], [ %G155472.0, %header-check-br532 ]
  %31 = icmp eq {}* %.val803829, %farg1
  %.val802 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155412.0 = select i1 %31, {}* %.val802, {}* %.val803829
  %32 = icmp eq {}* %G155412.0, %.val803829
  br i1 %32, label %tag14, label %tag59

tag22:                                            ; preds = %tag104, %normal-dest609, %tag38
  %.val798 = phi {}* [ %.val796.pre, %tag38 ], [ %211, %normal-dest609 ], [ %91, %tag104 ]
  %G2095854297.0 = phi {}* [ %43, %tag38 ], [ %G2095854297.1, %normal-dest609 ], [ %91, %tag104 ]
  %33 = ptrtoint {}* %G2095854297.0 to i64
  %tag-only301677 = and i64 %33, 7
  %consp-test302 = icmp eq i64 %tag-only301677, 3
  %.val795 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155336.0 = select i1 %consp-test302, {}* %.val795, {}* %.val798
  %34 = icmp eq {}* %G155336.0, %.val798
  br i1 %34, label %tag35, label %tag86

tag23:                                            ; preds = %tag53
  %35 = add i64 %102, 7
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %"tag fixnum304" = shl nuw i64 %37, 2
  %38 = inttoptr i64 %"tag fixnum304" to {}*
  br label %tag65

tag25:                                            ; preds = %tag35
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest320 unwind label %cleanup-lpad.loopexit.loopexit

tag28:                                            ; preds = %normal-dest505, %tag28.outer
  br i1 %consp-test337, label %tag102, label %tag91

tag31:                                            ; preds = %normal-dest320, %tag31.outer
  br i1 %consp-test341, label %tag38, label %tag104

tag35:                                            ; preds = %tag22
  %41 = icmp eq {}* %G2095854297.0, %.val798
  %G155307.0 = select i1 %41, {}* %.val795, {}* %.val798
  %42 = icmp eq {}* %G155307.0, %.val798
  br i1 %42, label %tag25, label %tag65

tag38:                                            ; preds = %tag31
  %43 = load {}*, {}** %205, align 8
  %.val796.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag22

tag40:                                            ; preds = %tag127
  %44 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest347 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag42:                                            ; preds = %tag10
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 78), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest543 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag43:                                            ; preds = %tag86
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 78), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest581 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag46:                                            ; preds = %tag67, %tag56
  %50 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 82), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest370 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag47:                                            ; preds = %tag127, %normal-dest355, %tag92
  %G155362.0 = phi {}* [ %81, %tag92 ], [ %G155362.1, %normal-dest355 ], [ %G155379.0, %tag127 ]
  %ptrtoint375 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint376 = add i64 %ptrtoint375, 7
  %entry-point-addr377 = inttoptr i64 %entry-point-addr-uint376 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point378 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr377, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point378({}* %70, i64 3, {}* %farg0, {}* %189, {}* %G155362.0, {}* null)
          to label %normal-dest381 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag48:                                            ; preds = %tag80
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 76), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest383 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag51:                                            ; preds = %normal-dest452
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest398 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag53:                                            ; preds = %header-check-br563, %normal-dest420, %tag57
  %.val800 = phi {}* [ %.pre, %tag57 ], [ %176, %normal-dest420 ], [ %G155355.0, %header-check-br563 ]
  %G155299.0.in = phi {}** [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), %tag57 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %normal-dest420 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %header-check-br563 ]
  %G155299.0 = load {}*, {}** %G155299.0.in, align 8
  %57 = icmp eq {}* %G155299.0, %.val800
  br i1 %57, label %tag2, label %tag23

tag56:                                            ; preds = %normal-dest282, %tag73
  %58 = phi {}* [ %60, %tag73 ], [ %152, %normal-dest282 ]
  %G155384.0 = phi {}* [ %66, %tag73 ], [ %G155384.1, %normal-dest282 ]
  %59 = icmp eq {}* %G155384.0, %58
  br i1 %59, label %tag46, label %tag76

tag57:                                            ; preds = %tag108, %normal-dest420, %header-check-br288
  %.pre = phi {}* [ %G155355.0, %tag108 ], [ %176, %normal-dest420 ], [ %G155355.0, %header-check-br288 ]
  br label %tag53

tag59:                                            ; preds = %tag116, %normal-dest265, %tag21, %tag16
  %60 = phi {}* [ %94, %tag16 ], [ %.val803829, %tag21 ], [ %150, %normal-dest265 ], [ %.val790, %tag116 ]
  %y266.0 = phi {}* [ %28, %tag16 ], [ null, %tag21 ], [ %y266.1, %normal-dest265 ], [ %LENGTH241.0.ph, %tag116 ]
  %61 = ptrtoint {}* %y266.0 to i64
  %fixnum-tag-only426658 = and i64 %61, 3
  %fixnump-test427 = icmp eq i64 %fixnum-tag-only426658, 0
  br i1 %fixnump-test427, label %tag67, label %tag17

tag65:                                            ; preds = %tag35, %normal-dest487, %tag2, %tag23
  %G155289.0 = phi {}* [ %38, %tag23 ], [ null, %tag2 ], [ %G155289.1, %normal-dest487 ], [ %LENGTH.0.ph, %tag35 ]
  %ptrtoint446 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint447 = add i64 %ptrtoint446, 7
  %entry-point-addr448 = inttoptr i64 %entry-point-addr-uint447 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point449 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr448, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point449({}* %51, i64 1, {}* %G155289.0, {}* null, {}* null, {}* null)
          to label %normal-dest452 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag67:                                            ; preds = %tag59
  %63 = icmp eq {}* %y266.0, inttoptr (i64 4 to {}*)
  br i1 %63, label %tag73, label %tag46

tag69:                                            ; preds = %tag91
  %64 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest459 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag73:                                            ; preds = %tag67
  %66 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag56

tag74:                                            ; preds = %tag2
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest480 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag76:                                            ; preds = %tag56
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 132), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest494 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag80:                                            ; preds = %tag86
  %71 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %75, i64 4)
  %result = extractvalue { i64, i1 } %71, 0
  %overflow = extractvalue { i64, i1 } %71, 1
  %72 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag48, label %tag31.outer.backedge

tag31.outer.backedge:                             ; preds = %tag80, %normal-dest391, %normal-dest588
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest588 ], [ %LENGTH.1, %normal-dest391 ], [ %72, %tag80 ]
  br label %tag31.outer

tag85:                                            ; preds = %tag116
  %73 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest505 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag86:                                            ; preds = %tag22
  %75 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only519678 = and i64 %75, 3
  %fixnump-test520 = icmp eq i64 %fixnum-tag-only519678, 0
  br i1 %fixnump-test520, label %tag80, label %tag43

tag91:                                            ; preds = %tag28
  %76 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %77 = icmp eq {}* %SEQUENCE.0.ph, %76
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155465.0 = select i1 %77, {}* %.val, {}* %76
  %78 = icmp eq {}* %G155465.0, %76
  br i1 %78, label %tag69, label %tag13

tag92:                                            ; preds = %normal-dest494
  %79 = add i64 %102, -3
  %80 = inttoptr i64 %79 to {}**
  %81 = load {}*, {}** %80, align 8
  br label %tag47

tag94:                                            ; preds = %tag10
  %82 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %20, i64 4)
  %result530 = extractvalue { i64, i1 } %82, 0
  %overflow531 = extractvalue { i64, i1 } %82, 1
  %83 = inttoptr i64 %result530 to {}*
  br i1 %overflow531, label %tag7, label %tag28.outer.backedge

tag28.outer.backedge:                             ; preds = %tag94, %normal-dest240, %normal-dest550
  %LENGTH241.0.ph.be = phi {}* [ %LENGTH241.2, %normal-dest550 ], [ %LENGTH241.1, %normal-dest240 ], [ %83, %tag94 ]
  br label %tag28.outer

tag96:                                            ; preds = %normal-dest405, %normal-dest381, %normal-dest230
  %return-value.sroa.47.0 = phi i64 [ %.elt726, %normal-dest230 ], [ 1, %normal-dest405 ], [ %.elt667, %normal-dest381 ]
  %return-value.sroa.0.0 = phi i64 [ %143, %normal-dest230 ], [ %174, %normal-dest405 ], [ %169, %normal-dest381 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %84 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %85 = insertvalue { {}*, i64 } undef, {}* %84, 0
  %86 = insertvalue { {}*, i64 } %85, i64 %return-value.sroa.47.0, 1
  ret { {}*, i64 } %86

tag28.outer:                                      ; preds = %tag28.outer.backedge, %tag28.outer.preheader
  %LENGTH241.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag28.outer.preheader ], [ %LENGTH241.0.ph.be, %tag28.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %farg1, %tag28.outer.preheader ], [ %G2095854.0, %tag28.outer.backedge ]
  %87 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only336649 = and i64 %87, 7
  %consp-test337 = icmp eq i64 %tag-only336649, 3
  %88 = add i64 %87, 5
  %89 = inttoptr i64 %88 to {}**
  br label %tag28

tag102:                                           ; preds = %tag28
  %90 = load {}*, {}** %89, align 8
  %.val788.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag13

tag104:                                           ; preds = %tag31
  %91 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %92 = icmp eq {}* %SEQUENCE303.0.ph, %91
  %.val793 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155348.0 = select i1 %92, {}* %.val793, {}* %91
  %93 = icmp eq {}* %G155348.0, %91
  br i1 %93, label %tag121, label %tag22

tag106:                                           ; preds = %normal-dest313, %header-check-br
  %94 = phi {}* [ %G155472.0, %header-check-br ], [ %157, %normal-dest313 ]
  %G155416.0.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %95 = icmp eq {}* %G155416.0.pre, %94
  br i1 %95, label %tag21, label %tag16

tag108:                                           ; preds = %normal-dest370
  %test566 = icmp eq i64 %tag-only648, 1
  br i1 %test566, label %header-check-br563, label %tag57

tag116:                                           ; preds = %tag13
  %96 = icmp eq {}* %G2095854.0, %.val790
  %G155424.0 = select i1 %96, {}* %.val787, {}* %.val790
  %97 = icmp eq {}* %G155424.0, %.val790
  br i1 %97, label %tag85, label %tag59

tag121:                                           ; preds = %tag104
  %98 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest602 unwind label %cleanup-lpad.loopexit.loopexit

tag127:                                           ; preds = %normal-dest494
  %100 = icmp eq {}* %G155379.0, %farg1
  %.val791 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155372.0 = select i1 %100, {}* %.val791, {}* %G155379.0
  %101 = icmp eq {}* %G155372.0, %G155379.0
  br i1 %101, label %tag40, label %tag47

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest602, %tag121, %normal-dest320, %tag25
  %lpad.loopexit806 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest581, %tag43, %normal-dest383, %tag48
  %lpad.loopexit.split-lp807 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag69, %normal-dest459, %tag85, %normal-dest505
  %lpad.loopexit811 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag7, %normal-dest233, %tag42, %normal-dest543
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10, %tag76, %normal-dest480, %tag74, %tag65, %normal-dest413, %maybe-more-tests296, %normal-dest398, %tag51, %tag47, %tag46, %normal-dest347, %tag40, %normal-dest306, %maybe-more-tests540, %normal-dest273, %tag17, %normal-dest258, %tag14, %normal-dest218, %normal-dest206, %normal-dest194, %normal-dest187, %normal-dest185, %normal-dest183, %normal-dest181, %normal-dest174, %normal-dest167, %normal-dest160, %normal-dest153, %normal-dest146, %normal-dest139, %normal-dest135, %normal-dest132, %tag1
  %lpad.loopexit.split-lp809 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit806, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp807, %cleanup-lpad.loopexit.loopexit.split-lp ], [ %lpad.loopexit.split-lp809, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit811, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %102 = ptrtoint {}* %farg1 to i64
  %tag-only648 = and i64 %102, 7
  %consp-test = icmp eq i64 %tag-only648, 3
  %G155472.0.in = select i1 %consp-test, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0)
  %G155472.0 = load {}*, {}** %G155472.0.in, align 8
  %103 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %104 = icmp eq {}* %G155472.0, %103
  br i1 %104, label %tag11, label %tag28.outer.preheader

tag28.outer.preheader:                            ; preds = %normal-dest
  br label %tag28.outer

normal-dest132:                                   ; preds = %tag1
  %105 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 88), align 16
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %106 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %farg1, {}* %105, {}* null, {}* null)
          to label %normal-dest135 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest135:                                   ; preds = %normal-dest132
  %.elt696 = extractvalue { {}*, i64 } %106, 0
  %.elt698 = extractvalue { {}*, i64 } %106, 1
  %cond635 = icmp eq i64 %.elt698, 0
  %107 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155207.0 = select i1 %cond635, {}* %107, {}* %.elt696
  %108 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest139 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest139:                                   ; preds = %normal-dest135
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 172), align 16
  %ptrtoint140 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint141 = add i64 %ptrtoint140, 7
  %entry-point-addr142 = inttoptr i64 %entry-point-addr-uint141 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point143 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr142, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point143({}* %109, i64 2, {}* %farg1, {}* %110, {}* null, {}* null)
          to label %normal-dest146 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest146:                                   ; preds = %normal-dest139
  %.elt700 = extractvalue { {}*, i64 } %111, 0
  %.elt702 = extractvalue { {}*, i64 } %111, 1
  %cond636 = icmp eq i64 %.elt702, 0
  %112 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155208.0 = select i1 %cond636, {}* %112, {}* %.elt700
  %113 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %114 = invoke {}* @cc_safe_fdefinition({}* %113)
          to label %normal-dest153 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest153:                                   ; preds = %normal-dest146
  %115 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 94), align 16
  %ptrtoint154 = ptrtoint {}* %114 to i64
  %entry-point-addr-uint155 = add i64 %ptrtoint154, 7
  %entry-point-addr156 = inttoptr i64 %entry-point-addr-uint155 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point157 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr156, align 8
  %116 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point157({}* %114, i64 2, {}* %farg1, {}* %115, {}* null, {}* null)
          to label %normal-dest160 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest160:                                   ; preds = %normal-dest153
  %.elt704 = extractvalue { {}*, i64 } %116, 0
  %.elt706 = extractvalue { {}*, i64 } %116, 1
  %cond637 = icmp eq i64 %.elt706, 0
  %117 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155209.0 = select i1 %cond637, {}* %117, {}* %.elt704
  %118 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %119 = invoke {}* @cc_safe_fdefinition({}* %118)
          to label %normal-dest167 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest167:                                   ; preds = %normal-dest160
  %120 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 174), align 16
  %ptrtoint168 = ptrtoint {}* %119 to i64
  %entry-point-addr-uint169 = add i64 %ptrtoint168, 7
  %entry-point-addr170 = inttoptr i64 %entry-point-addr-uint169 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point171 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr170, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point171({}* %119, i64 2, {}* %farg1, {}* %120, {}* null, {}* null)
          to label %normal-dest174 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest174:                                   ; preds = %normal-dest167
  %.elt708 = extractvalue { {}*, i64 } %121, 0
  %.elt710 = extractvalue { {}*, i64 } %121, 1
  %cond638 = icmp eq i64 %.elt710, 0
  %122 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155210.0 = select i1 %cond638, {}* %122, {}* %.elt708
  %123 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 130), align 16
  %124 = invoke {}* @cc_safe_fdefinition({}* %123)
          to label %normal-dest181 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest181:                                   ; preds = %normal-dest174
  %125 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 132), align 16
  %126 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest183 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest183:                                   ; preds = %normal-dest181
  %128 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 122), align 16
  %129 = invoke {}* @cc_safe_fdefinition({}* %128)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest185:                                   ; preds = %normal-dest183
  %130 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %131 = invoke {}* @cc_safe_fdefinition({}* %130)
          to label %normal-dest187 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest187:                                   ; preds = %normal-dest185
  %132 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %133 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 136), align 16
  %134 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 138), align 16
  %135 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 140), align 16
  %ptrtoint188 = ptrtoint {}* %131 to i64
  %entry-point-addr-uint189 = add i64 %ptrtoint188, 7
  %entry-point-addr190 = inttoptr i64 %entry-point-addr-uint189 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point191 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr190, align 8
  %136 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point191({}* %131, i64 8, {}* %132, {}* %G155207.0, {}* %133, {}* %G155208.0, {}* %134, {}* %G155209.0, {}* %135, {}* %G155210.0)
          to label %normal-dest194 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest194:                                   ; preds = %normal-dest187
  %.elt712 = extractvalue { {}*, i64 } %136, 0
  %.elt714 = extractvalue { {}*, i64 } %136, 1
  %cond639 = icmp eq i64 %.elt714, 0
  %137 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155251.0 = select i1 %cond639, {}* %137, {}* %.elt712
  %ptrtoint200 = ptrtoint {}* %129 to i64
  %entry-point-addr-uint201 = add i64 %ptrtoint200, 7
  %entry-point-addr202 = inttoptr i64 %entry-point-addr-uint201 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point203 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr202, align 8
  %138 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point203({}* %129, i64 1, {}* %G155251.0, {}* null, {}* null, {}* null)
          to label %normal-dest206 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest206:                                   ; preds = %normal-dest194
  %.elt716 = extractvalue { {}*, i64 } %138, 0
  %.elt718 = extractvalue { {}*, i64 } %138, 1
  %cond640 = icmp eq i64 %.elt718, 0
  %139 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155249.0 = select i1 %cond640, {}* %139, {}* %.elt716
  %ptrtoint212 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint213 = add i64 %ptrtoint212, 7
  %entry-point-addr214 = inttoptr i64 %entry-point-addr-uint213 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point215 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr214, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point215({}* %127, i64 2, {}* %farg0, {}* %G155249.0, {}* null, {}* null)
          to label %normal-dest218 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest218:                                   ; preds = %normal-dest206
  %.elt720 = extractvalue { {}*, i64 } %140, 0
  %.elt722 = extractvalue { {}*, i64 } %140, 1
  %cond641 = icmp eq i64 %.elt722, 0
  %141 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155246.0 = select i1 %cond641, {}* %141, {}* %.elt720
  %ptrtoint224 = ptrtoint {}* %124 to i64
  %entry-point-addr-uint225 = add i64 %ptrtoint224, 7
  %entry-point-addr226 = inttoptr i64 %entry-point-addr-uint225 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point227 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr226, align 8
  %142 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point227({}* %124, i64 2, {}* %125, {}* %G155246.0, {}* null, {}* null)
          to label %normal-dest230 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest230:                                   ; preds = %normal-dest218
  %.elt724 = extractvalue { {}*, i64 } %142, 0
  %143 = ptrtoint {}* %.elt724 to i64
  %.elt726 = extractvalue { {}*, i64 } %142, 1
  br label %tag96

normal-dest233:                                   ; preds = %tag7
  %ptrtoint234 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint235 = add i64 %ptrtoint234, 7
  %entry-point-addr236 = inttoptr i64 %entry-point-addr-uint235 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point237 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr236, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point237({}* %19, i64 1, {}* %83, {}* null, {}* null, {}* null)
          to label %normal-dest240 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest240:                                   ; preds = %normal-dest233
  %.elt655 = extractvalue { {}*, i64 } %144, 0
  %.elt657 = extractvalue { {}*, i64 } %144, 1
  %cond629 = icmp eq i64 %.elt657, 0
  %145 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH241.1 = select i1 %cond629, {}* %145, {}* %.elt655
  br label %tag28.outer.backedge

header-check-br:                                  ; preds = %tag11
  %irc-bit-cast253 = bitcast {}* %farg1 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast253, i64 -9
  %irc-bit-cast254 = bitcast i8* %gep to i64*
  %146 = load i64, i64* %irc-bit-cast254, align 8
  %.off804 = add i64 %146, -1081
  %147 = icmp ult i64 %.off804, 69
  br i1 %147, label %tag106, label %header-check-br532

normal-dest258:                                   ; preds = %tag14
  %148 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 168), align 16
  %ptrtoint259 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint260 = add i64 %ptrtoint259, 7
  %entry-point-addr261 = inttoptr i64 %entry-point-addr-uint260 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point262 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr261, align 8
  %149 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point262({}* %24, i64 2, {}* %farg1, {}* %148, {}* null, {}* null)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest265:                                   ; preds = %normal-dest258
  %.elt752 = extractvalue { {}*, i64 } %149, 0
  %.elt754 = extractvalue { {}*, i64 } %149, 1
  %cond646 = icmp eq i64 %.elt754, 0
  %150 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %y266.1 = select i1 %cond646, {}* %150, {}* %.elt752
  br label %tag59

normal-dest273:                                   ; preds = %tag17
  %ptrtoint276 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint277 = add i64 %ptrtoint276, 7
  %entry-point-addr278 = inttoptr i64 %entry-point-addr-uint277 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point279 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr278, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point279({}* %30, i64 2, {}* inttoptr (i64 4 to {}*), {}* %y266.0, {}* null, {}* null)
          to label %normal-dest282 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest282:                                   ; preds = %normal-dest273
  %.elt660 = extractvalue { {}*, i64 } %151, 0
  %.elt662 = extractvalue { {}*, i64 } %151, 1
  %cond630 = icmp eq i64 %.elt662, 0
  %152 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155384.1 = select i1 %cond630, {}* %152, {}* %.elt660
  br label %tag56

header-check-br288:                               ; preds = %header-check-br563
  %.off801 = add i64 %199, -1153
  %153 = icmp ult i64 %.off801, 149
  br i1 %153, label %maybe-more-tests296, label %tag57

maybe-more-tests296:                              ; preds = %header-check-br288
  %154 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 119), align 8
  %155 = invoke {}* @cc_safe_fdefinition({}* %154)
          to label %normal-dest413 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest306:                                   ; preds = %maybe-more-tests540
  %ptrtoint307 = ptrtoint {}* %196 to i64
  %entry-point-addr-uint308 = add i64 %ptrtoint307, 7
  %entry-point-addr309 = inttoptr i64 %entry-point-addr-uint308 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point310 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr309, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point310({}* %196, i64 1, {}* nonnull %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest313 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest313:                                   ; preds = %normal-dest306
  %.elt756 = extractvalue { {}*, i64 } %156, 0
  %.elt758 = extractvalue { {}*, i64 } %156, 1
  %cond647 = icmp eq i64 %.elt758, 0
  %157 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155481.0 = select i1 %cond647, {}* %157, {}* %.elt756
  %158 = icmp eq {}* %G155481.0, inttoptr (i64 4 to {}*)
  br i1 %158, label %tag106, label %tag21

normal-dest320:                                   ; preds = %tag25
  %159 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 171), align 8
  %ptrtoint321 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint322 = add i64 %ptrtoint321, 7
  %entry-point-addr323 = inttoptr i64 %entry-point-addr-uint322 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point324 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr323, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point324({}* %40, i64 2, {}* %G2095854297.0, {}* %159, {}* null, {}* null)
          to label %tag31 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest347:                                   ; preds = %tag40
  %161 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %162 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %163 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %164 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint349 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint350 = add i64 %ptrtoint349, 7
  %entry-point-addr351 = inttoptr i64 %entry-point-addr-uint350 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point352 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr351, align 8
  %165 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point352({}* %45, i64 5, {}* %161, {}* %162, {}* %farg1, {}* %163, {}* %164)
          to label %normal-dest355 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest355:                                   ; preds = %normal-dest347
  %.elt672 = extractvalue { {}*, i64 } %165, 0
  %.elt674 = extractvalue { {}*, i64 } %165, 1
  %cond631 = icmp eq i64 %.elt674, 0
  %166 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155362.1 = select i1 %cond631, {}* %166, {}* %.elt672
  br label %tag47

normal-dest370:                                   ; preds = %tag46
  %G155355.0 = load {}*, {}** %G155472.0.in, align 8
  %167 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %168 = icmp eq {}* %G155355.0, %167
  br i1 %168, label %tag108, label %tag31.outer.preheader

tag31.outer.preheader:                            ; preds = %normal-dest370
  br label %tag31.outer

normal-dest381:                                   ; preds = %tag47
  %.elt665 = extractvalue { {}*, i64 } %52, 0
  %169 = ptrtoint {}* %.elt665 to i64
  %.elt667 = extractvalue { {}*, i64 } %52, 1
  br label %tag96

normal-dest383:                                   ; preds = %tag48
  %ptrtoint385 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint386 = add i64 %ptrtoint385, 7
  %entry-point-addr387 = inttoptr i64 %entry-point-addr-uint386 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point388 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr387, align 8
  %170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point388({}* %54, i64 1, {}* %72, {}* null, {}* null, {}* null)
          to label %normal-dest391 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest391:                                   ; preds = %normal-dest383
  %.elt684 = extractvalue { {}*, i64 } %170, 0
  %.elt686 = extractvalue { {}*, i64 } %170, 1
  %cond633 = icmp eq i64 %.elt686, 0
  %171 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond633, {}* %171, {}* %.elt684
  br label %tag31.outer.backedge

normal-dest398:                                   ; preds = %tag51
  %172 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 176), align 16
  %ptrtoint399 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint400 = add i64 %ptrtoint399, 7
  %entry-point-addr401 = inttoptr i64 %entry-point-addr-uint400 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point402 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr401, align 8
  %173 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point402({}* %56, i64 2, {}* %farg1, {}* %172, {}* null, {}* null)
          to label %normal-dest405 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest405:                                   ; preds = %normal-dest398
  %174 = load i64, i64* bitcast ([467 x {}*]* @CONTAB4420 to i64*), align 16
  br label %tag96

normal-dest413:                                   ; preds = %maybe-more-tests296
  %ptrtoint414 = ptrtoint {}* %155 to i64
  %entry-point-addr-uint415 = add i64 %ptrtoint414, 7
  %entry-point-addr416 = inttoptr i64 %entry-point-addr-uint415 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point417 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr416, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point417({}* %155, i64 1, {}* nonnull %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest420 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest420:                                   ; preds = %normal-dest413
  %.elt740 = extractvalue { {}*, i64 } %175, 0
  %.elt742 = extractvalue { {}*, i64 } %175, 1
  %cond644 = icmp eq i64 %.elt742, 0
  %176 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155477.0 = select i1 %cond644, {}* %176, {}* %.elt740
  %177 = icmp eq {}* %G155477.0, inttoptr (i64 4 to {}*)
  br i1 %177, label %tag53, label %tag57

normal-dest452:                                   ; preds = %tag65
  %.elt688 = extractvalue { {}*, i64 } %62, 0
  %.elt690 = extractvalue { {}*, i64 } %62, 1
  %cond634 = icmp eq i64 %.elt690, 0
  %178 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155286.0 = select i1 %cond634, {}* %178, {}* %.elt688
  %179 = icmp eq {}* %G155286.0, %178
  br i1 %179, label %tag1, label %tag51

normal-dest459:                                   ; preds = %tag69
  %180 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %181 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %182 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %183 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint460 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint461 = add i64 %ptrtoint460, 7
  %entry-point-addr462 = inttoptr i64 %entry-point-addr-uint461 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point463 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr462, align 8
  %184 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point463({}* %65, i64 5, {}* %180, {}* %181, {}* %SEQUENCE.0.ph, {}* %182, {}* %183)
          to label %normal-dest466 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest466:                                   ; preds = %normal-dest459
  %.elt748 = extractvalue { {}*, i64 } %184, 0
  %.elt750 = extractvalue { {}*, i64 } %184, 1
  %cond645 = icmp eq i64 %.elt750, 0
  %185 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond645, {}* %185, {}* %.elt748
  br label %tag13

normal-dest480:                                   ; preds = %tag74
  %186 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 170), align 16
  %ptrtoint481 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint482 = add i64 %ptrtoint481, 7
  %entry-point-addr483 = inttoptr i64 %entry-point-addr-uint482 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point484 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr483, align 8
  %187 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point484({}* %68, i64 2, {}* %farg1, {}* %186, {}* null, {}* null)
          to label %normal-dest487 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest487:                                   ; preds = %normal-dest480
  %.elt736 = extractvalue { {}*, i64 } %187, 0
  %.elt738 = extractvalue { {}*, i64 } %187, 1
  %cond643 = icmp eq i64 %.elt738, 0
  %188 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155289.1 = select i1 %cond643, {}* %188, {}* %.elt736
  br label %tag65

normal-dest494:                                   ; preds = %tag76
  %189 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 178), align 16
  %G155379.0 = load {}*, {}** %G155472.0.in, align 8
  %190 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %191 = icmp eq {}* %G155379.0, %190
  br i1 %191, label %tag127, label %tag92

normal-dest505:                                   ; preds = %tag85
  %192 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 169), align 8
  %ptrtoint506 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint507 = add i64 %ptrtoint506, 7
  %entry-point-addr508 = inttoptr i64 %entry-point-addr-uint507 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point509 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr508, align 8
  %193 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point509({}* %74, i64 2, {}* %G2095854.0, {}* %192, {}* null, {}* null)
          to label %tag28 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

header-check-br532:                               ; preds = %header-check-br
  %.off805 = add i64 %146, -1153
  %194 = icmp ult i64 %.off805, 149
  br i1 %194, label %maybe-more-tests540, label %tag21

maybe-more-tests540:                              ; preds = %header-check-br532
  %195 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 119), align 8
  %196 = invoke {}* @cc_safe_fdefinition({}* %195)
          to label %normal-dest306 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest543:                                   ; preds = %tag42
  %ptrtoint544 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint545 = add i64 %ptrtoint544, 7
  %entry-point-addr546 = inttoptr i64 %entry-point-addr-uint545 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point547 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr546, align 8
  %197 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point547({}* %47, i64 2, {}* %LENGTH241.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest550 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest550:                                   ; preds = %normal-dest543
  %.elt = extractvalue { {}*, i64 } %197, 0
  %.elt653 = extractvalue { {}*, i64 } %197, 1
  %cond = icmp eq i64 %.elt653, 0
  %198 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH241.2 = select i1 %cond, {}* %198, {}* %.elt
  br label %tag28.outer.backedge

header-check-br563:                               ; preds = %tag108
  %irc-bit-cast567 = bitcast {}* %farg1 to i8*
  %gep568 = getelementptr inbounds i8, i8* %irc-bit-cast567, i64 -9
  %irc-bit-cast569 = bitcast i8* %gep568 to i64*
  %199 = load i64, i64* %irc-bit-cast569, align 8
  %.off = add i64 %199, -1081
  %200 = icmp ult i64 %.off, 69
  br i1 %200, label %tag53, label %header-check-br288

normal-dest581:                                   ; preds = %tag43
  %ptrtoint582 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint583 = add i64 %ptrtoint582, 7
  %entry-point-addr584 = inttoptr i64 %entry-point-addr-uint583 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point585 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr584, align 8
  %201 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point585({}* %49, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest588 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest588:                                   ; preds = %normal-dest581
  %.elt680 = extractvalue { {}*, i64 } %201, 0
  %.elt682 = extractvalue { {}*, i64 } %201, 1
  %cond632 = icmp eq i64 %.elt682, 0
  %202 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond632, {}* %202, {}* %.elt680
  br label %tag31.outer.backedge

tag31.outer:                                      ; preds = %tag31.outer.backedge, %tag31.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag31.outer.preheader ], [ %LENGTH.0.ph.be, %tag31.outer.backedge ]
  %SEQUENCE303.0.ph = phi {}* [ %farg1, %tag31.outer.preheader ], [ %G2095854297.0, %tag31.outer.backedge ]
  %203 = ptrtoint {}* %SEQUENCE303.0.ph to i64
  %tag-only340676 = and i64 %203, 7
  %consp-test341 = icmp eq i64 %tag-only340676, 3
  %204 = add i64 %203, 5
  %205 = inttoptr i64 %204 to {}**
  br label %tag31

normal-dest602:                                   ; preds = %tag121
  %206 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %207 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %208 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %209 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint603 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint604 = add i64 %ptrtoint603, 7
  %entry-point-addr605 = inttoptr i64 %entry-point-addr-uint604 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point606 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr605, align 8
  %210 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point606({}* %99, i64 5, {}* %206, {}* %207, {}* %SEQUENCE303.0.ph, {}* %208, {}* %209)
          to label %normal-dest609 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest609:                                   ; preds = %normal-dest602
  %.elt732 = extractvalue { {}*, i64 } %210, 0
  %.elt734 = extractvalue { {}*, i64 } %210, 1
  %cond642 = icmp eq i64 %.elt734, 0
  %211 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G2095854297.1 = select i1 %cond642, {}* %211, {}* %.elt732
  br label %tag22
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !32 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G155513.0 = phi {}* [ %18, %header-check-br ], [ %G155513.1, %normal-dest17 ], [ %G155513.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 132), align 16
  %ptrtoint29 = ptrtoint {}* %G155513.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G155513.0, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN_NEU", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests28, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 132), align 16
  %"closure->ZWE=VORSCHLAG_UEBERSETZEN_NEU" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4744, i64 118, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br20

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 193), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155513.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag3

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %27 = icmp ult i64 %.off106, 5
  br i1 %27, label %maybe-more-tests28, label %tag

maybe-more-tests28:                               ; preds = %header-check-br20
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag3
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 194), align 16
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN_NEU", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 207), align 8
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->ZWE=VORSCHLAG_UEBERSETZEN_NEU", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 472 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 132), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests28
  %ptrtoint70 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %29, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155513.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !33 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag8:                                             ; preds = %tag14
  %9 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit.split-lp

tag9:                                             ; preds = %tag14
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest274 unwind label %cleanup-lpad.loopexit.split-lp

tag14:                                            ; preds = %kw-exit-block
  %13 = icmp eq {}* %objektklasse.0, %.val429
  %G155608.0 = select i1 %13, {}* %.val, {}* %.val429
  %14 = icmp eq {}* %G155608.0, %.val429
  br i1 %14, label %tag8, label %tag9

tag15:                                            ; preds = %kw-exit-block
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest291 unwind label %cleanup-lpad.loopexit.split-lp

tag17:                                            ; preds = %normal-dest304, %normal-dest274, %normal-dest254
  %17 = phi {}** [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %normal-dest254 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), %normal-dest274 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %normal-dest304 ]
  %.sink428 = load {}*, {}** %17, align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %18 = insertvalue { {}*, i64 } undef, {}* %.sink428, 0
  %19 = insertvalue { {}*, i64 } %18, i64 1, 1
  ret { {}*, i64 } %19

cleanup-lpad.loopexit:                            ; preds = %loop-kw-args
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %loop-cont, %tag8, %normal-dest43, %normal-dest45, %normal-dest47, %normal-dest49, %normal-dest52, %normal-dest56, %normal-dest63, %normal-dest70, %normal-dest77, %normal-dest84, %normal-dest91, %normal-dest98, %normal-dest105, %normal-dest112, %normal-dest119, %normal-dest131, %normal-dest143, %normal-dest155, %normal-dest161, %normal-dest163, %normal-dest165, %normal-dest172, %normal-dest179, %normal-dest186, %normal-dest193, %normal-dest200, %normal-dest207, %normal-dest214, %normal-dest221, %normal-dest228, %normal-dest235, %normal-dest242, %normal-dest254, %tag9, %normal-dest274, %tag15, %normal-dest291, %normal-dest298, %normal-dest304
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @":::global-str-ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %20 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 211), align 8
  %23 = icmp eq i64 %nargs, 1
  br i1 %23, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G155493.0 = phi {}* [ %G155493.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %lispfunktionsname.1 = phi {}* [ %lispfunktionsname.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G155494.0 = phi {}* [ %G155494.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %sortierfunktion.1 = phi {}* [ %sortierfunktion.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G155495.0 = phi {}* [ %G155495.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %filterbedingung.1 = phi {}* [ %filterbedingung.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G155496.0 = phi {}* [ %G155496.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %objektklasse.1 = phi {}* [ %objektklasse.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G155497.0 = phi {}* [ %G155497.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %vorbedingung.1 = phi {}* [ %vorbedingung.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %32, %advance-arg-idx-block ], [ 1, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs23 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-124 = add i64 %rem-nargs23, -1
  store i64 %rem-nargs-124, i64* %"remaining-nargs*", align 8
  %vaarg25 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs26 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-127 = add i64 %rem-nargs26, -1
  store i64 %rem-nargs-127, i64* %"remaining-nargs*", align 8
  %vaarg28 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg25, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest29 unwind label %cleanup-lpad.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %.val = phi {}* [ %20, %continue ], [ %.pre432, %loop-cont.kw-exit-block_crit_edge ]
  %.val429 = phi {}* [ %21, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G155493.1 = phi {}* [ %21, %continue ], [ %G155493.2, %loop-cont.kw-exit-block_crit_edge ]
  %lispfunktionsname.2 = phi {}* [ undef, %continue ], [ %lispfunktionsname.3, %loop-cont.kw-exit-block_crit_edge ]
  %G155494.1 = phi {}* [ %21, %continue ], [ %G155494.2, %loop-cont.kw-exit-block_crit_edge ]
  %sortierfunktion.2 = phi {}* [ undef, %continue ], [ %sortierfunktion.3, %loop-cont.kw-exit-block_crit_edge ]
  %G155495.1 = phi {}* [ %21, %continue ], [ %G155495.2, %loop-cont.kw-exit-block_crit_edge ]
  %filterbedingung.2 = phi {}* [ undef, %continue ], [ %filterbedingung.3, %loop-cont.kw-exit-block_crit_edge ]
  %G155496.1 = phi {}* [ %21, %continue ], [ %G155496.2, %loop-cont.kw-exit-block_crit_edge ]
  %objektklasse.2 = phi {}* [ undef, %continue ], [ %objektklasse.3, %loop-cont.kw-exit-block_crit_edge ]
  %G155497.1 = phi {}* [ %21, %continue ], [ %G155497.2, %loop-cont.kw-exit-block_crit_edge ]
  %vorbedingung.2 = phi {}* [ undef, %continue ], [ %vorbedingung.3, %loop-cont.kw-exit-block_crit_edge ]
  %24 = icmp eq {}* %G155497.1, %.val429
  %vorbedingung.0 = select i1 %24, {}* %.val, {}* %vorbedingung.2
  %25 = icmp eq {}* %G155496.1, %.val429
  %objektklasse.0 = select i1 %25, {}* %.val429, {}* %objektklasse.2
  %26 = icmp eq {}* %G155495.1, %.val429
  %filterbedingung.0 = select i1 %26, {}* %.val, {}* %filterbedingung.2
  %27 = icmp eq {}* %G155494.1, %.val429
  %.sortierfunktion.2 = select i1 %27, {}* %.val429, {}* %sortierfunktion.2
  %28 = icmp eq {}* %G155493.1, %.val429
  %.lispfunktionsname.2 = select i1 %28, {}* %.val429, {}* %lispfunktionsname.2
  %29 = icmp eq {}* %.lispfunktionsname.2, %.val429
  br i1 %29, label %tag14, label %tag15

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg25, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.pre432 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %kw-exit-block

normal-dest29:                                    ; preds = %loop-kw-args
  %30 = icmp eq {}* %22, %vaarg25
  br i1 %30, label %aok-block, label %"kw-:VORBEDINGUNG-test"

aok-block:                                        ; preds = %normal-dest29
  %31 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg28)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %"kw-:LISPFUNKTIONSNAME-test", %"kw-:SORTIERFUNKTION-test", %"kw-:FILTERBEDINGUNG-test", %"kw-:OBJEKTKLASSE-test", %"kw-:VORBEDINGUNG-test", %not-seen-before-kw-block, %not-seen-before-kw-block31, %not-seen-before-kw-block34, %not-seen-before-kw-block37, %not-seen-before-kw-block40, %next-kw-block41, %aok-block
  %G155493.2 = phi {}* [ %G155493.0, %aok-block ], [ %G155493.0, %next-kw-block41 ], [ %20, %not-seen-before-kw-block40 ], [ %G155493.0, %not-seen-before-kw-block37 ], [ %G155493.0, %not-seen-before-kw-block34 ], [ %G155493.0, %not-seen-before-kw-block31 ], [ %G155493.0, %not-seen-before-kw-block ], [ %G155493.0, %"kw-:VORBEDINGUNG-test" ], [ %G155493.0, %"kw-:OBJEKTKLASSE-test" ], [ %G155493.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G155493.0, %"kw-:SORTIERFUNKTION-test" ], [ %G155493.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %lispfunktionsname.3 = phi {}* [ %lispfunktionsname.1, %aok-block ], [ %lispfunktionsname.1, %next-kw-block41 ], [ %vaarg28, %not-seen-before-kw-block40 ], [ %lispfunktionsname.1, %not-seen-before-kw-block37 ], [ %lispfunktionsname.1, %not-seen-before-kw-block34 ], [ %lispfunktionsname.1, %not-seen-before-kw-block31 ], [ %lispfunktionsname.1, %not-seen-before-kw-block ], [ %lispfunktionsname.1, %"kw-:VORBEDINGUNG-test" ], [ %lispfunktionsname.1, %"kw-:OBJEKTKLASSE-test" ], [ %lispfunktionsname.1, %"kw-:FILTERBEDINGUNG-test" ], [ %lispfunktionsname.1, %"kw-:SORTIERFUNKTION-test" ], [ %lispfunktionsname.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G155494.2 = phi {}* [ %G155494.0, %aok-block ], [ %G155494.0, %next-kw-block41 ], [ %G155494.0, %not-seen-before-kw-block40 ], [ %20, %not-seen-before-kw-block37 ], [ %G155494.0, %not-seen-before-kw-block34 ], [ %G155494.0, %not-seen-before-kw-block31 ], [ %G155494.0, %not-seen-before-kw-block ], [ %G155494.0, %"kw-:VORBEDINGUNG-test" ], [ %G155494.0, %"kw-:OBJEKTKLASSE-test" ], [ %G155494.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G155494.0, %"kw-:SORTIERFUNKTION-test" ], [ %G155494.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %sortierfunktion.3 = phi {}* [ %sortierfunktion.1, %aok-block ], [ %sortierfunktion.1, %next-kw-block41 ], [ %sortierfunktion.1, %not-seen-before-kw-block40 ], [ %vaarg28, %not-seen-before-kw-block37 ], [ %sortierfunktion.1, %not-seen-before-kw-block34 ], [ %sortierfunktion.1, %not-seen-before-kw-block31 ], [ %sortierfunktion.1, %not-seen-before-kw-block ], [ %sortierfunktion.1, %"kw-:VORBEDINGUNG-test" ], [ %sortierfunktion.1, %"kw-:OBJEKTKLASSE-test" ], [ %sortierfunktion.1, %"kw-:FILTERBEDINGUNG-test" ], [ %sortierfunktion.1, %"kw-:SORTIERFUNKTION-test" ], [ %sortierfunktion.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G155495.2 = phi {}* [ %G155495.0, %aok-block ], [ %G155495.0, %next-kw-block41 ], [ %G155495.0, %not-seen-before-kw-block40 ], [ %G155495.0, %not-seen-before-kw-block37 ], [ %20, %not-seen-before-kw-block34 ], [ %G155495.0, %not-seen-before-kw-block31 ], [ %G155495.0, %not-seen-before-kw-block ], [ %G155495.0, %"kw-:VORBEDINGUNG-test" ], [ %G155495.0, %"kw-:OBJEKTKLASSE-test" ], [ %G155495.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G155495.0, %"kw-:SORTIERFUNKTION-test" ], [ %G155495.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %filterbedingung.3 = phi {}* [ %filterbedingung.1, %aok-block ], [ %filterbedingung.1, %next-kw-block41 ], [ %filterbedingung.1, %not-seen-before-kw-block40 ], [ %filterbedingung.1, %not-seen-before-kw-block37 ], [ %vaarg28, %not-seen-before-kw-block34 ], [ %filterbedingung.1, %not-seen-before-kw-block31 ], [ %filterbedingung.1, %not-seen-before-kw-block ], [ %filterbedingung.1, %"kw-:VORBEDINGUNG-test" ], [ %filterbedingung.1, %"kw-:OBJEKTKLASSE-test" ], [ %filterbedingung.1, %"kw-:FILTERBEDINGUNG-test" ], [ %filterbedingung.1, %"kw-:SORTIERFUNKTION-test" ], [ %filterbedingung.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G155496.2 = phi {}* [ %G155496.0, %aok-block ], [ %G155496.0, %next-kw-block41 ], [ %G155496.0, %not-seen-before-kw-block40 ], [ %G155496.0, %not-seen-before-kw-block37 ], [ %G155496.0, %not-seen-before-kw-block34 ], [ %20, %not-seen-before-kw-block31 ], [ %G155496.0, %not-seen-before-kw-block ], [ %G155496.0, %"kw-:VORBEDINGUNG-test" ], [ %G155496.0, %"kw-:OBJEKTKLASSE-test" ], [ %G155496.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G155496.0, %"kw-:SORTIERFUNKTION-test" ], [ %G155496.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %objektklasse.3 = phi {}* [ %objektklasse.1, %aok-block ], [ %objektklasse.1, %next-kw-block41 ], [ %objektklasse.1, %not-seen-before-kw-block40 ], [ %objektklasse.1, %not-seen-before-kw-block37 ], [ %objektklasse.1, %not-seen-before-kw-block34 ], [ %vaarg28, %not-seen-before-kw-block31 ], [ %objektklasse.1, %not-seen-before-kw-block ], [ %objektklasse.1, %"kw-:VORBEDINGUNG-test" ], [ %objektklasse.1, %"kw-:OBJEKTKLASSE-test" ], [ %objektklasse.1, %"kw-:FILTERBEDINGUNG-test" ], [ %objektklasse.1, %"kw-:SORTIERFUNKTION-test" ], [ %objektklasse.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G155497.2 = phi {}* [ %G155497.0, %aok-block ], [ %G155497.0, %next-kw-block41 ], [ %G155497.0, %not-seen-before-kw-block40 ], [ %G155497.0, %not-seen-before-kw-block37 ], [ %G155497.0, %not-seen-before-kw-block34 ], [ %G155497.0, %not-seen-before-kw-block31 ], [ %20, %not-seen-before-kw-block ], [ %G155497.0, %"kw-:VORBEDINGUNG-test" ], [ %G155497.0, %"kw-:OBJEKTKLASSE-test" ], [ %G155497.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G155497.0, %"kw-:SORTIERFUNKTION-test" ], [ %G155497.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %vorbedingung.3 = phi {}* [ %vorbedingung.1, %aok-block ], [ %vorbedingung.1, %next-kw-block41 ], [ %vorbedingung.1, %not-seen-before-kw-block40 ], [ %vorbedingung.1, %not-seen-before-kw-block37 ], [ %vorbedingung.1, %not-seen-before-kw-block34 ], [ %vorbedingung.1, %not-seen-before-kw-block31 ], [ %vaarg28, %not-seen-before-kw-block ], [ %vorbedingung.1, %"kw-:VORBEDINGUNG-test" ], [ %vorbedingung.1, %"kw-:OBJEKTKLASSE-test" ], [ %vorbedingung.1, %"kw-:FILTERBEDINGUNG-test" ], [ %vorbedingung.1, %"kw-:SORTIERFUNKTION-test" ], [ %vorbedingung.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %phi-this-was-aok = phi i64 [ %31, %aok-block ], [ %phi-saw-aok, %next-kw-block41 ], [ %phi-saw-aok, %not-seen-before-kw-block40 ], [ %phi-saw-aok, %not-seen-before-kw-block37 ], [ %phi-saw-aok, %not-seen-before-kw-block34 ], [ %phi-saw-aok, %not-seen-before-kw-block31 ], [ %phi-saw-aok, %not-seen-before-kw-block ], [ %phi-saw-aok, %"kw-:VORBEDINGUNG-test" ], [ %phi-saw-aok, %"kw-:OBJEKTKLASSE-test" ], [ %phi-saw-aok, %"kw-:FILTERBEDINGUNG-test" ], [ %phi-saw-aok, %"kw-:SORTIERFUNKTION-test" ], [ %phi-saw-aok, %"kw-:LISPFUNKTIONSNAME-test" ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %44, %next-kw-block41 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block40 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block37 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block34 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block31 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block ], [ %phi-bad-kw-idx, %"kw-:VORBEDINGUNG-test" ], [ %phi-bad-kw-idx, %"kw-:OBJEKTKLASSE-test" ], [ %phi-bad-kw-idx, %"kw-:FILTERBEDINGUNG-test" ], [ %phi-bad-kw-idx, %"kw-:SORTIERFUNKTION-test" ], [ %phi-bad-kw-idx, %"kw-:LISPFUNKTIONSNAME-test" ]
  %32 = add i64 %phi-reg-arg-idx, 2
  %33 = icmp slt i64 %32, %nargs
  br i1 %33, label %loop-kw-args, label %loop-cont

"kw-:VORBEDINGUNG-test":                          ; preds = %normal-dest29
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %35 = call i64 @cc_matchKeywordOnce({}* %34, {}* %vaarg25, {}* %G155497.0)
  switch i64 %35, label %not-seen-before-kw-block [
    i64 0, label %"kw-:OBJEKTKLASSE-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block:                         ; preds = %"kw-:VORBEDINGUNG-test"
  br label %advance-arg-idx-block

"kw-:OBJEKTKLASSE-test":                          ; preds = %"kw-:VORBEDINGUNG-test"
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 136), align 16
  %37 = call i64 @cc_matchKeywordOnce({}* %36, {}* %vaarg25, {}* %G155496.0)
  switch i64 %37, label %not-seen-before-kw-block31 [
    i64 0, label %"kw-:FILTERBEDINGUNG-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block31:                       ; preds = %"kw-:OBJEKTKLASSE-test"
  br label %advance-arg-idx-block

"kw-:FILTERBEDINGUNG-test":                       ; preds = %"kw-:OBJEKTKLASSE-test"
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 138), align 16
  %39 = call i64 @cc_matchKeywordOnce({}* %38, {}* %vaarg25, {}* %G155495.0)
  switch i64 %39, label %not-seen-before-kw-block34 [
    i64 0, label %"kw-:SORTIERFUNKTION-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block34:                       ; preds = %"kw-:FILTERBEDINGUNG-test"
  br label %advance-arg-idx-block

"kw-:SORTIERFUNKTION-test":                       ; preds = %"kw-:FILTERBEDINGUNG-test"
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 140), align 16
  %41 = call i64 @cc_matchKeywordOnce({}* %40, {}* %vaarg25, {}* %G155494.0)
  switch i64 %41, label %not-seen-before-kw-block37 [
    i64 0, label %"kw-:LISPFUNKTIONSNAME-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block37:                       ; preds = %"kw-:SORTIERFUNKTION-test"
  br label %advance-arg-idx-block

"kw-:LISPFUNKTIONSNAME-test":                     ; preds = %"kw-:SORTIERFUNKTION-test"
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 178), align 16
  %43 = call i64 @cc_matchKeywordOnce({}* %42, {}* %vaarg25, {}* %G155493.0)
  switch i64 %43, label %not-seen-before-kw-block40 [
    i64 0, label %next-kw-block41
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block40:                       ; preds = %"kw-:LISPFUNKTIONSNAME-test"
  br label %advance-arg-idx-block

next-kw-block41:                                  ; preds = %"kw-:LISPFUNKTIONSNAME-test"
  %44 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest43:                                    ; preds = %tag8
  %45 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest45 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest45:                                    ; preds = %normal-dest43
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest47 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest47:                                    ; preds = %normal-dest45
  %50 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest49:                                    ; preds = %normal-dest47
  %52 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 186), align 16
  %ptrtoint = ptrtoint {}* %51 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %51, i64 1, {}* %52, {}* null, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest52:                                    ; preds = %normal-dest49
  %.elt346 = extractvalue { {}*, i64 } %53, 0
  %.elt348 = extractvalue { {}*, i64 } %53, 1
  %cond = icmp eq i64 %.elt348, 0
  %54 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155575.0 = select i1 %cond, {}* %54, {}* %.elt346
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest56 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest56:                                    ; preds = %normal-dest52
  %ptrtoint57 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %56, i64 1, {}* %vorbedingung.0, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest63:                                    ; preds = %normal-dest56
  %.elt350 = extractvalue { {}*, i64 } %57, 0
  %.elt352 = extractvalue { {}*, i64 } %57, 1
  %cond318 = icmp eq i64 %.elt352, 0
  %58 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155576.0 = select i1 %cond318, {}* %58, {}* %.elt350
  %59 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest70 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest70:                                    ; preds = %normal-dest63
  %ptrtoint71 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %60, i64 1, {}* %objektklasse.0, {}* null, {}* null, {}* null)
          to label %normal-dest77 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest77:                                    ; preds = %normal-dest70
  %.elt354 = extractvalue { {}*, i64 } %61, 0
  %.elt356 = extractvalue { {}*, i64 } %61, 1
  %cond319 = icmp eq i64 %.elt356, 0
  %62 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155577.0 = select i1 %cond319, {}* %62, {}* %.elt354
  %63 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest84 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest84:                                    ; preds = %normal-dest77
  %ptrtoint85 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint86 = add i64 %ptrtoint85, 7
  %entry-point-addr87 = inttoptr i64 %entry-point-addr-uint86 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point88 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr87, align 8
  %65 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point88({}* %64, i64 1, {}* %filterbedingung.0, {}* null, {}* null, {}* null)
          to label %normal-dest91 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest91:                                    ; preds = %normal-dest84
  %.elt358 = extractvalue { {}*, i64 } %65, 0
  %.elt360 = extractvalue { {}*, i64 } %65, 1
  %cond320 = icmp eq i64 %.elt360, 0
  %66 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155578.0 = select i1 %cond320, {}* %66, {}* %.elt358
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest98:                                    ; preds = %normal-dest91
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 188), align 16
  %ptrtoint99 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %68, i64 1, {}* %69, {}* null, {}* null, {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest105:                                   ; preds = %normal-dest98
  %.elt362 = extractvalue { {}*, i64 } %70, 0
  %.elt364 = extractvalue { {}*, i64 } %70, 1
  %cond321 = icmp eq i64 %.elt364, 0
  %71 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155579.0 = select i1 %cond321, {}* %71, {}* %.elt362
  %72 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %73 = invoke {}* @cc_safe_fdefinition({}* %72)
          to label %normal-dest112 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest112:                                   ; preds = %normal-dest105
  %ptrtoint113 = ptrtoint {}* %73 to i64
  %entry-point-addr-uint114 = add i64 %ptrtoint113, 7
  %entry-point-addr115 = inttoptr i64 %entry-point-addr-uint114 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point116 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr115, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point116({}* %73, i64 1, {}* %.sortierfunktion.2, {}* null, {}* null, {}* null)
          to label %normal-dest119 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest119:                                   ; preds = %normal-dest112
  %.elt366 = extractvalue { {}*, i64 } %74, 0
  %.elt368 = extractvalue { {}*, i64 } %74, 1
  %cond322 = icmp eq i64 %.elt368, 0
  %75 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155580.0 = select i1 %cond322, {}* %75, {}* %.elt366
  %ptrtoint125 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint126 = add i64 %ptrtoint125, 7
  %entry-point-addr127 = inttoptr i64 %entry-point-addr-uint126 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point128 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr127, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point128({}* %49, i64 7, {}* %G155575.0, {}* %G155576.0, {}* %G155577.0, {}* %G155578.0, {}* %G155579.0, {}* %G155580.0, {}* %75)
          to label %normal-dest131 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest131:                                   ; preds = %normal-dest119
  %.elt370 = extractvalue { {}*, i64 } %76, 0
  %.elt372 = extractvalue { {}*, i64 } %76, 1
  %cond323 = icmp eq i64 %.elt372, 0
  %77 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155573.0 = select i1 %cond323, {}* %77, {}* %.elt370
  %ptrtoint137 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint138 = add i64 %ptrtoint137, 7
  %entry-point-addr139 = inttoptr i64 %entry-point-addr-uint138 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point140 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr139, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point140({}* %47, i64 1, {}* %G155573.0, {}* null, {}* null, {}* null)
          to label %normal-dest143 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest143:                                   ; preds = %normal-dest131
  %.elt374 = extractvalue { {}*, i64 } %78, 0
  %.elt376 = extractvalue { {}*, i64 } %78, 1
  %cond324 = icmp eq i64 %.elt376, 0
  %79 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155569.0 = select i1 %cond324, {}* %79, {}* %.elt374
  %80 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %81 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint149 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint150 = add i64 %ptrtoint149, 7
  %entry-point-addr151 = inttoptr i64 %entry-point-addr-uint150 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point152 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr151, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point152({}* %10, i64 5, {}* %vaarg, {}* %45, {}* %G155569.0, {}* %80, {}* %81)
          to label %normal-dest155 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest155:                                   ; preds = %normal-dest143
  %83 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest161 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest161:                                   ; preds = %normal-dest155
  %85 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %86 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest163 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest163:                                   ; preds = %normal-dest161
  %88 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest165 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest165:                                   ; preds = %normal-dest163
  %90 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 186), align 16
  %ptrtoint166 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint167 = add i64 %ptrtoint166, 7
  %entry-point-addr168 = inttoptr i64 %entry-point-addr-uint167 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point169 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr168, align 8
  %91 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point169({}* %89, i64 1, {}* %90, {}* null, {}* null, {}* null)
          to label %normal-dest172 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest172:                                   ; preds = %normal-dest165
  %.elt382 = extractvalue { {}*, i64 } %91, 0
  %.elt384 = extractvalue { {}*, i64 } %91, 1
  %cond325 = icmp eq i64 %.elt384, 0
  %92 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155539.0 = select i1 %cond325, {}* %92, {}* %.elt382
  %93 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest179 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest179:                                   ; preds = %normal-dest172
  %ptrtoint180 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint181 = add i64 %ptrtoint180, 7
  %entry-point-addr182 = inttoptr i64 %entry-point-addr-uint181 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point183 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr182, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point183({}* %94, i64 1, {}* %vorbedingung.0, {}* null, {}* null, {}* null)
          to label %normal-dest186 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest186:                                   ; preds = %normal-dest179
  %.elt386 = extractvalue { {}*, i64 } %95, 0
  %.elt388 = extractvalue { {}*, i64 } %95, 1
  %cond326 = icmp eq i64 %.elt388, 0
  %96 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155540.0 = select i1 %cond326, {}* %96, {}* %.elt386
  %97 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %98 = invoke {}* @cc_safe_fdefinition({}* %97)
          to label %normal-dest193 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest193:                                   ; preds = %normal-dest186
  %ptrtoint194 = ptrtoint {}* %98 to i64
  %entry-point-addr-uint195 = add i64 %ptrtoint194, 7
  %entry-point-addr196 = inttoptr i64 %entry-point-addr-uint195 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point197 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr196, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point197({}* %98, i64 1, {}* %objektklasse.0, {}* null, {}* null, {}* null)
          to label %normal-dest200 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest200:                                   ; preds = %normal-dest193
  %.elt390 = extractvalue { {}*, i64 } %99, 0
  %.elt392 = extractvalue { {}*, i64 } %99, 1
  %cond327 = icmp eq i64 %.elt392, 0
  %100 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155541.0 = select i1 %cond327, {}* %100, {}* %.elt390
  %101 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest207:                                   ; preds = %normal-dest200
  %ptrtoint208 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint209 = add i64 %ptrtoint208, 7
  %entry-point-addr210 = inttoptr i64 %entry-point-addr-uint209 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point211 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr210, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point211({}* %102, i64 1, {}* %filterbedingung.0, {}* null, {}* null, {}* null)
          to label %normal-dest214 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest214:                                   ; preds = %normal-dest207
  %.elt394 = extractvalue { {}*, i64 } %103, 0
  %.elt396 = extractvalue { {}*, i64 } %103, 1
  %cond328 = icmp eq i64 %.elt396, 0
  %104 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155542.0 = select i1 %cond328, {}* %104, {}* %.elt394
  %105 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %106 = invoke {}* @cc_safe_fdefinition({}* %105)
          to label %normal-dest221 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest221:                                   ; preds = %normal-dest214
  %107 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 188), align 16
  %ptrtoint222 = ptrtoint {}* %106 to i64
  %entry-point-addr-uint223 = add i64 %ptrtoint222, 7
  %entry-point-addr224 = inttoptr i64 %entry-point-addr-uint223 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point225 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr224, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point225({}* %106, i64 1, {}* %107, {}* null, {}* null, {}* null)
          to label %normal-dest228 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest228:                                   ; preds = %normal-dest221
  %.elt398 = extractvalue { {}*, i64 } %108, 0
  %.elt400 = extractvalue { {}*, i64 } %108, 1
  %cond329 = icmp eq i64 %.elt400, 0
  %109 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155543.0 = select i1 %cond329, {}* %109, {}* %.elt398
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %111 = invoke {}* @cc_safe_fdefinition({}* %110)
          to label %normal-dest235 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest235:                                   ; preds = %normal-dest228
  %ptrtoint236 = ptrtoint {}* %111 to i64
  %entry-point-addr-uint237 = add i64 %ptrtoint236, 7
  %entry-point-addr238 = inttoptr i64 %entry-point-addr-uint237 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point239 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr238, align 8
  %112 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point239({}* %111, i64 1, {}* %.sortierfunktion.2, {}* null, {}* null, {}* null)
          to label %normal-dest242 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest242:                                   ; preds = %normal-dest235
  %.elt402 = extractvalue { {}*, i64 } %112, 0
  %.elt404 = extractvalue { {}*, i64 } %112, 1
  %cond330 = icmp eq i64 %.elt404, 0
  %113 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155544.0 = select i1 %cond330, {}* %113, {}* %.elt402
  %ptrtoint248 = ptrtoint {}* %87 to i64
  %entry-point-addr-uint249 = add i64 %ptrtoint248, 7
  %entry-point-addr250 = inttoptr i64 %entry-point-addr-uint249 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point251 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr250, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point251({}* %87, i64 7, {}* %G155539.0, {}* %G155540.0, {}* %G155541.0, {}* %G155542.0, {}* %G155543.0, {}* %G155544.0, {}* %113)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest254:                                   ; preds = %normal-dest242
  %.elt406 = extractvalue { {}*, i64 } %114, 0
  %.elt408 = extractvalue { {}*, i64 } %114, 1
  %cond331 = icmp eq i64 %.elt408, 0
  %115 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155535.0 = select i1 %cond331, {}* %115, {}* %.elt406
  %116 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %117 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint260 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint261 = add i64 %ptrtoint260, 7
  %entry-point-addr262 = inttoptr i64 %entry-point-addr-uint261 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point263 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr262, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point263({}* %84, i64 5, {}* %vaarg, {}* %85, {}* %G155535.0, {}* %116, {}* %117)
          to label %tag17 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest274:                                   ; preds = %tag9
  %119 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 192), align 16
  %120 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 176), align 16
  %ptrtoint275 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint276 = add i64 %ptrtoint275, 7
  %entry-point-addr277 = inttoptr i64 %entry-point-addr-uint276 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point278 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr277, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point278({}* %12, i64 2, {}* %119, {}* %120, {}* null, {}* null)
          to label %tag17 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest291:                                   ; preds = %tag15
  %122 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %123 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %124 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint292 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint293 = add i64 %ptrtoint292, 7
  %entry-point-addr294 = inttoptr i64 %entry-point-addr-uint293 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point295 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr294, align 8
  %125 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point295({}* %16, i64 5, {}* %vaarg, {}* %122, {}* %.lispfunktionsname.2, {}* %123, {}* %124)
          to label %normal-dest298 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest298:                                   ; preds = %normal-dest291
  %126 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest304 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest304:                                   ; preds = %normal-dest298
  %128 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %129 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %130 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint305 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint306 = add i64 %ptrtoint305, 7
  %entry-point-addr307 = inttoptr i64 %entry-point-addr-uint306 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point308 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr307, align 8
  %131 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point308({}* %127, i64 5, {}* %vaarg, {}* %128, {}* %.lispfunktionsname.2, {}* %129, {}* %130)
          to label %tag17 unwind label %cleanup-lpad.loopexit.split-lp
}

declare void @cc_ifNotKeywordException({}*, i64, { i32, i32, i8*, i8* }*, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @cc_allowOtherKeywords(i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @cc_matchKeywordOnce({}*, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @cc_trackFirstUnexpectedKeyword(i64, i64) local_unnamed_addr #1

declare void @cc_ifBadKeywordArgumentException(i64, i64, {}*, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !34 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G155664.0 = phi {}* [ %18, %header-check-br ], [ %G155664.1, %normal-dest54 ], [ %G155664.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 218), align 16
  %ptrtoint13 = ptrtoint {}* %G155664.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G155664.0, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN_TEXT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 218), align 16
  %"closure->ZWE=CONSTRAINT_UEBERSETZEN_TEXT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5901, i64 139, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 220), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN_TEXT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 230), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN_TEXT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 564 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 218), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 217), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155664.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155664.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !35 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %enough-args = icmp slt i64 %nargs, 4
  br i1 %enough-args, label %error, label %continue

tag9:                                             ; preds = %mvn-final104
  %11 = ptrtoint {}* %.in to i64
  %single-float-tag-only67 = and i64 %11, 7
  %fixnum-tag-only190 = and i64 %11, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only190, 0
  %test142 = icmp eq i64 %single-float-tag-only67, 1
  %or.cond212 = and i1 %fixnump-test, %test142
  br i1 %or.cond212, label %header-check-br139, label %tag14

tag11:                                            ; preds = %normal-dest83
  %12 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest70 unwind label %cleanup-lpad

tag14:                                            ; preds = %header-check-br119, %header-check-br139, %tag19, %tag9, %tag26, %normal-dest118
  %return-value.sroa.10.0 = phi i64 [ %.elt186, %normal-dest118 ], [ 1, %tag26 ], [ 1, %tag9 ], [ 1, %tag19 ], [ 1, %header-check-br139 ], [ 1, %header-check-br119 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt184, %normal-dest118 ], [ %.in, %tag26 ], [ %.in, %tag9 ], [ %.in, %tag19 ], [ %.in, %header-check-br139 ], [ %.in, %header-check-br119 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %14 = insertvalue { {}*, i64 } %13, i64 %return-value.sroa.10.0, 1
  ret { {}*, i64 } %14

tag16:                                            ; preds = %normal-dest70, %normal-dest147
  %.sink202 = phi { {}*, i64 } [ %56, %normal-dest147 ], [ %31, %normal-dest70 ]
  %.elt180 = extractvalue { {}*, i64 } %.sink202, 0
  %.elt182 = extractvalue { {}*, i64 } %.sink202, 1
  switch i64 %.elt182, label %mvn2- [
    i64 0, label %mvn0-102
    i64 1, label %mvn1-103
  ]

tag17:                                            ; preds = %tag26
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 150), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest111 unwind label %cleanup-lpad

tag19:                                            ; preds = %header-check-br139, %header-check-br139, %header-check-br139, %header-check-br139
  %17 = ptrtoint {}* %40 to i64
  %single-float-tag-only126 = and i64 %17, 7
  %fixnum-tag-only68192 = and i64 %17, 3
  %fixnump-test69 = icmp ne i64 %fixnum-tag-only68192, 0
  %test122 = icmp eq i64 %single-float-tag-only126, 1
  %or.cond211 = and i1 %fixnump-test69, %test122
  br i1 %or.cond211, label %header-check-br119, label %tag14

tag26:                                            ; preds = %mvn-final104, %normal-dest163
  %18 = phi {}* [ %58, %normal-dest163 ], [ %.val213, %mvn-final104 ]
  %G155686.0 = phi {}* [ %G155686.1, %normal-dest163 ], [ %.val, %mvn-final104 ]
  %19 = icmp eq {}* %G155686.0, %18
  br i1 %19, label %tag14, label %tag17

tag28:                                            ; preds = %normal-dest83
  %20 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest147 unwind label %cleanup-lpad

tag30:                                            ; preds = %header-check-br119, %header-check-br119, %header-check-br119, %header-check-br119
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest156 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest156, %tag30, %normal-dest147, %tag28, %normal-dest111, %tag17, %normal-dest76, %continue54, %normal-dest70, %tag11, %error53, %error
  %23 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %23

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @":::global-str-ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 4)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs36 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-137 = add i64 %rem-nargs36, -1
  store i64 %rem-nargs-137, i64* %"remaining-nargs*", align 8
  %vaarg38 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs40 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-141 = add i64 %rem-nargs40, -1
  store i64 %rem-nargs-141, i64* %"remaining-nargs*", align 8
  %vaarg42 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs44 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-145 = add i64 %rem-nargs44, -1
  store i64 %rem-nargs-145, i64* %"remaining-nargs*", align 8
  %vaarg46 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 4
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %continue54

opt-cont:                                         ; preds = %continue
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %rem-nargs48 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-149 = add i64 %rem-nargs48, -1
  store i64 %rem-nargs-149, i64* %"remaining-nargs*", align 8
  %vaarg50 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %max-num-args = icmp sgt i64 %nargs, 5
  br i1 %max-num-args, label %error53, label %opt-cont.continue54_crit_edge

opt-cont.continue54_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %continue54

error53:                                          ; preds = %opt-cont
  invoke void @va_tooManyArgumentsException(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @":::global-str-ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 5)
          to label %normal-dest55 unwind label %cleanup-lpad

continue54:                                       ; preds = %opt-cont.continue54_crit_edge, %opt-cont.thread
  %26 = phi {}* [ %24, %opt-cont.thread ], [ %.pre, %opt-cont.continue54_crit_edge ]
  %anzahl.1209 = phi {}* [ undef, %opt-cont.thread ], [ %vaarg50, %opt-cont.continue54_crit_edge ]
  %G155648.0208 = phi {}* [ %24, %opt-cont.thread ], [ %25, %opt-cont.continue54_crit_edge ]
  %27 = icmp eq {}* %G155648.0208, %26
  %anzahl.0 = select i1 %27, {}* %26, {}* %anzahl.1209
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 128), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %error53
  call void @unreachableError()
  unreachable

normal-dest70:                                    ; preds = %tag11
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 215), align 8
  %ptrtoint71 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint71, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 4, {}* %vaarg, {}* %vaarg42, {}* %30, {}* %anzahl.0)
          to label %tag16 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %continue54
  %ptrtoint77 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint78 = add i64 %ptrtoint77, 7
  %entry-point-addr79 = inttoptr i64 %entry-point-addr-uint78 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point80 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr79, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point80({}* %29, i64 1, {}* %vaarg46, {}* null, {}* null, {}* null)
          to label %normal-dest83 unwind label %cleanup-lpad

normal-dest83:                                    ; preds = %normal-dest76
  %.elt = extractvalue { {}*, i64 } %32, 0
  %.elt178 = extractvalue { {}*, i64 } %32, 1
  %cond = icmp eq i64 %.elt178, 0
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155645.0 = select i1 %cond, {}* %33, {}* %.elt
  %34 = icmp eq {}* %G155645.0, %33
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 213), align 8
  br i1 %34, label %tag11, label %tag28

mvn0-102:                                         ; preds = %tag16
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final104

mvn1-103:                                         ; preds = %tag16
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final104

mvn2-:                                            ; preds = %tag16
  %gep105 = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  %38 = load {}*, {}** %gep105, align 8
  %.val213.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final104

mvn-final104:                                     ; preds = %mvn2-, %mvn1-103, %mvn0-102
  %.val213 = phi {}* [ %.val213.pre, %mvn2- ], [ %37, %mvn1-103 ], [ %36, %mvn0-102 ]
  %.in = phi {}* [ %.elt180, %mvn2- ], [ %.elt180, %mvn1-103 ], [ %36, %mvn0-102 ]
  %FEHLERMELDUNG155644.0 = phi {}* [ %38, %mvn2- ], [ %37, %mvn1-103 ], [ %36, %mvn0-102 ]
  %39 = bitcast {}* %.in to i8*
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 142), align 16
  %41 = icmp eq {}* %.in, %40
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155695.0 = select i1 %41, {}* %.val, {}* %.val213
  %42 = icmp eq {}* %G155695.0, %.val213
  br i1 %42, label %tag9, label %tag26

normal-dest111:                                   ; preds = %tag17
  %ptrtoint112 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint113 = add i64 %ptrtoint112, 7
  %entry-point-addr114 = inttoptr i64 %entry-point-addr-uint113 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point115 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr114, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point115({}* %16, i64 1, {}* %FEHLERMELDUNG155644.0, {}* null, {}* null, {}* null)
          to label %normal-dest118 unwind label %cleanup-lpad

normal-dest118:                                   ; preds = %normal-dest111
  %.elt184 = extractvalue { {}*, i64 } %43, 0
  %.elt186 = extractvalue { {}*, i64 } %43, 1
  br label %tag14

header-check-br119:                               ; preds = %tag19
  %irc-bit-cast123 = bitcast {}* %40 to i8*
  %gep124 = getelementptr inbounds i8, i8* %irc-bit-cast123, i64 -9
  %irc-bit-cast125 = bitcast i8* %gep124 to i64*
  %44 = load i64, i64* %irc-bit-cast125, align 8
  %45 = add i64 %44, -1309
  %46 = lshr i64 %45, 3
  %47 = shl i64 %45, 61
  %48 = or i64 %46, %47
  switch i64 %48, label %tag14 [
    i64 2, label %tag30
    i64 4, label %tag30
    i64 5, label %tag30
    i64 0, label %tag30
  ]

header-check-br139:                               ; preds = %tag9
  %gep144 = getelementptr inbounds i8, i8* %39, i64 -9
  %irc-bit-cast145 = bitcast i8* %gep144 to i64*
  %49 = load i64, i64* %irc-bit-cast145, align 8
  %50 = add i64 %49, -1309
  %51 = lshr i64 %50, 3
  %52 = shl i64 %50, 61
  %53 = or i64 %51, %52
  switch i64 %53, label %tag14 [
    i64 2, label %tag19
    i64 4, label %tag19
    i64 5, label %tag19
    i64 0, label %tag19
  ]

normal-dest147:                                   ; preds = %tag28
  %54 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 215), align 8
  %ptrtoint148 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint149 = add i64 %ptrtoint148, 7
  %entry-point-addr150 = inttoptr i64 %entry-point-addr-uint149 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point151 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr150, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point151({}* %20, i64 6, {}* %vaarg, {}* %vaarg42, {}* %54, {}* %G155645.0, {}* %55, {}* %anzahl.0)
          to label %tag16 unwind label %cleanup-lpad

normal-dest156:                                   ; preds = %tag30
  %ptrtoint157 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint158 = add i64 %ptrtoint157, 7
  %entry-point-addr159 = inttoptr i64 %entry-point-addr-uint158 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point160 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr159, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point160({}* %22, i64 2, {}* nonnull %.in, {}* nonnull %40, {}* null, {}* null)
          to label %normal-dest163 unwind label %cleanup-lpad

normal-dest163:                                   ; preds = %normal-dest156
  %.elt195 = extractvalue { {}*, i64 } %57, 0
  %.elt197 = extractvalue { {}*, i64 } %57, 1
  %cond176 = icmp eq i64 %.elt197, 0
  %58 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155686.1 = select i1 %cond176, {}* %58, {}* %.elt195
  br label %tag26
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !36 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G155738.0 = phi {}* [ %18, %header-check-br ], [ %G155738.1, %normal-dest17 ], [ %G155738.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 239), align 8
  %ptrtoint20 = ptrtoint {}* %G155738.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G155738.0, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 239), align 8
  %"closure->ZWE=CONSTRAINT_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6617, i64 154, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 238), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155738.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 241), align 8
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 244), align 16
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 616 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 239), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155738.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !37 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc649 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc649:                                        ; preds = %13
  unreachable

tag9:                                             ; preds = %tag74, %normal-dest522, %tag104, %tag114
  %G155775.0 = phi {}* [ %102, %tag114 ], [ null, %tag104 ], [ %G155775.1, %normal-dest522 ], [ %LENGTH262.0.ph, %tag74 ]
  %ptrtoint136 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint = add i64 %ptrtoint136, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %50, i64 1, {}* %G155775.0, {}* null, {}* null, {}* null)
          to label %normal-dest139 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag11:                                            ; preds = %tag110
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest142 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag13:                                            ; preds = %tag28
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %18 = icmp eq {}* %SEQUENCE196.0.ph, %17
  %.val670 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155834.0 = select i1 %18, {}* %.val670, {}* %17
  %19 = icmp eq {}* %G155834.0, %17
  br i1 %19, label %tag18, label %tag77

tag18:                                            ; preds = %tag13
  %20 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest164 unwind label %cleanup-lpad.loopexit.loopexit

tag21:                                            ; preds = %tag86, %normal-dest422, %tag99
  %.val667 = phi {}* [ %.val665.pre, %tag99 ], [ %159, %normal-dest422 ], [ %65, %tag86 ]
  %G2095854179.0 = phi {}* [ %83, %tag99 ], [ %G2095854179.1, %normal-dest422 ], [ %65, %tag86 ]
  %22 = ptrtoint {}* %G2095854179.0 to i64
  %tag-only180560 = and i64 %22, 7
  %consp-test181 = icmp eq i64 %tag-only180560, 3
  %.val664 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155940.0 = select i1 %consp-test181, {}* %.val664, {}* %.val667
  %23 = icmp eq {}* %G155940.0, %.val667
  br i1 %23, label %tag110, label %tag63

tag22:                                            ; preds = %tag24
  %24 = icmp eq {}* %.val680, %farg2
  %.val679 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155899.0 = select i1 %24, {}* %.val679, {}* %.val680
  %25 = icmp eq {}* %G155899.0, %.val680
  br i1 %25, label %tag89, label %tag107

tag24:                                            ; preds = %header-check-br535, %normal-dest288, %tag81
  %.val680 = phi {}* [ %.pre, %tag81 ], [ %129, %normal-dest288 ], [ %G155959.0, %header-check-br535 ]
  %G155903.0.in = phi {}** [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), %tag81 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %normal-dest288 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %header-check-br535 ]
  %G155903.0 = load {}*, {}** %G155903.0.in, align 8
  %26 = icmp eq {}* %G155903.0, %.val680
  br i1 %26, label %tag22, label %tag64

tag25:                                            ; preds = %tag96
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 76), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest183 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag28:                                            ; preds = %normal-dest218, %tag28.outer
  br i1 %consp-test199, label %tag112, label %tag13

tag30:                                            ; preds = %tag107
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 80), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest201 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag33:                                            ; preds = %tag74
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest218 unwind label %cleanup-lpad.loopexit.loopexit

tag36:                                            ; preds = %tag63
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 78), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest232 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag41:                                            ; preds = %normal-dest464
  %35 = add i64 %105, -3
  %36 = inttoptr i64 %35 to {}**
  %37 = load {}*, {}** %36, align 8
  br label %tag65

tag45:                                            ; preds = %tag77
  %38 = ptrtoint {}* %LENGTH262.0.ph to i64
  %fixnum-tag-only278588 = and i64 %38, 3
  %fixnump-test279 = icmp eq i64 %fixnum-tag-only278588, 0
  br i1 %fixnump-test279, label %tag91, label %tag92

tag28.outer:                                      ; preds = %tag28.outer.backedge, %tag28.outer.preheader
  %SEQUENCE196.0.ph = phi {}* [ %farg2, %tag28.outer.preheader ], [ %G2095854.0, %tag28.outer.backedge ]
  %LENGTH262.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag28.outer.preheader ], [ %LENGTH262.0.ph.be, %tag28.outer.backedge ]
  %39 = ptrtoint {}* %SEQUENCE196.0.ph to i64
  %tag-only198586 = and i64 %39, 7
  %consp-test199 = icmp eq i64 %tag-only198586, 3
  %40 = add i64 %39, 5
  %41 = inttoptr i64 %40 to {}**
  br label %tag28

tag58:                                            ; preds = %tag107
  %42 = icmp eq {}* %y.0, inttoptr (i64 4 to {}*)
  br i1 %42, label %tag71, label %tag68

tag63:                                            ; preds = %tag21
  %43 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only307561 = and i64 %43, 3
  %fixnump-test308 = icmp eq i64 %fixnum-tag-only307561, 0
  br i1 %fixnump-test308, label %tag96, label %tag36

tag64:                                            ; preds = %tag24
  %44 = add i64 %105, 7
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %"tag fixnum" = shl nuw i64 %46, 2
  %47 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag107

tag65:                                            ; preds = %tag93, %normal-dest347, %tag41
  %G155849.0 = phi {}* [ %37, %tag41 ], [ %G155849.1, %normal-dest347 ], [ %G155866.0, %tag93 ]
  %ptrtoint309 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint310 = add i64 %ptrtoint309, 7
  %entry-point-addr311 = inttoptr i64 %entry-point-addr-uint310 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point312 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr311, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point312({}* %89, i64 4, {}* %farg0, {}* %farg1, {}* %162, {}* %G155849.0)
          to label %normal-dest315 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag67:                                            ; preds = %normal-dest334
  %test327 = icmp eq i64 %tag-only558, 1
  br i1 %test327, label %header-check-br324, label %tag104

tag68:                                            ; preds = %tag58, %tag69
  %49 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 82), align 16
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest334 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag69:                                            ; preds = %normal-dest208, %tag71
  %51 = phi {}* [ %92, %tag71 ], [ %121, %normal-dest208 ]
  %G155871.0 = phi {}* [ %53, %tag71 ], [ %G155871.1, %normal-dest208 ]
  %52 = icmp eq {}* %G155871.0, %51
  br i1 %52, label %tag68, label %tag103

tag71:                                            ; preds = %tag58
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag69

tag74:                                            ; preds = %tag77
  %54 = icmp eq {}* %G2095854.0, %.val675
  %G155793.0 = select i1 %54, {}* %.val672, {}* %.val675
  %55 = icmp eq {}* %G155793.0, %.val675
  br i1 %55, label %tag33, label %tag9

tag75:                                            ; preds = %tag93
  %56 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest340 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag77:                                            ; preds = %tag13, %normal-dest171, %tag112
  %.val675 = phi {}* [ %.val673.pre, %tag112 ], [ %117, %normal-dest171 ], [ %17, %tag13 ]
  %G2095854.0 = phi {}* [ %98, %tag112 ], [ %G2095854.1, %normal-dest171 ], [ %17, %tag13 ]
  %58 = ptrtoint {}* %G2095854.0 to i64
  %tag-only354587 = and i64 %58, 7
  %consp-test355 = icmp eq i64 %tag-only354587, 3
  %.val672 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155822.0 = select i1 %consp-test355, {}* %.val672, {}* %.val675
  %59 = icmp eq {}* %G155822.0, %.val675
  br i1 %59, label %tag74, label %tag45

tag79:                                            ; preds = %normal-dest139
  %60 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest371 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag81:                                            ; preds = %tag125, %header-check-br505, %normal-dest288
  %.pre = phi {}* [ %G155959.0, %tag125 ], [ %G155959.0, %header-check-br505 ], [ %129, %normal-dest288 ]
  br label %tag24

tag97.outer:                                      ; preds = %tag97.outer.backedge, %tag97.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag97.outer.preheader ], [ %LENGTH.0.ph.be, %tag97.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %farg2, %tag97.outer.preheader ], [ %G2095854179.0, %tag97.outer.backedge ]
  %62 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only440559 = and i64 %62, 7
  %consp-test441 = icmp eq i64 %tag-only440559, 3
  %63 = add i64 %62, 5
  %64 = inttoptr i64 %63 to {}**
  br label %tag97

tag86:                                            ; preds = %tag97
  %65 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %66 = icmp eq {}* %SEQUENCE.0.ph, %65
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155952.0 = select i1 %66, {}* %.val, {}* %65
  %67 = icmp eq {}* %G155952.0, %65
  br i1 %67, label %tag90, label %tag21

tag89:                                            ; preds = %tag22
  %68 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %69 = invoke {}* @cc_safe_fdefinition({}* %68)
          to label %normal-dest401 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag90:                                            ; preds = %tag86
  %70 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %71 = invoke {}* @cc_safe_fdefinition({}* %70)
          to label %normal-dest415 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag91:                                            ; preds = %tag45
  %72 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %38, i64 4)
  %result270 = extractvalue { i64, i1 } %72, 0
  %overflow271 = extractvalue { i64, i1 } %72, 1
  %73 = inttoptr i64 %result270 to {}*
  br i1 %overflow271, label %tag102, label %tag28.outer.backedge

tag28.outer.backedge:                             ; preds = %tag91, %normal-dest457, %normal-dest261
  %LENGTH262.0.ph.be = phi {}* [ %73, %tag91 ], [ %LENGTH262.2, %normal-dest457 ], [ %LENGTH262.1, %normal-dest261 ]
  br label %tag28.outer

tag92:                                            ; preds = %tag45
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 78), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest253 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag93:                                            ; preds = %normal-dest464
  %76 = icmp eq {}* %G155866.0, %farg2
  %.val668 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155859.0 = select i1 %76, {}* %.val668, {}* %G155866.0
  %77 = icmp eq {}* %G155859.0, %G155866.0
  br i1 %77, label %tag75, label %tag65

tag95:                                            ; preds = %normal-dest497, %normal-dest378, %normal-dest315
  %return-value.sroa.35.0 = phi i64 [ %.elt612, %normal-dest497 ], [ 1, %normal-dest378 ], [ %.elt577, %normal-dest315 ]
  %return-value.sroa.0.0 = phi i64 [ %173, %normal-dest497 ], [ %150, %normal-dest378 ], [ %131, %normal-dest315 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %78 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %79 = insertvalue { {}*, i64 } undef, {}* %78, 0
  %80 = insertvalue { {}*, i64 } %79, i64 %return-value.sroa.35.0, 1
  ret { {}*, i64 } %80

tag96:                                            ; preds = %tag63
  %81 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %43, i64 4)
  %result = extractvalue { i64, i1 } %81, 0
  %overflow = extractvalue { i64, i1 } %81, 1
  %82 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag25, label %tag97.outer.backedge

tag97.outer.backedge:                             ; preds = %tag96, %normal-dest190, %normal-dest239
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest239 ], [ %LENGTH.1, %normal-dest190 ], [ %82, %tag96 ]
  br label %tag97.outer

tag97:                                            ; preds = %normal-dest142, %tag97.outer
  br i1 %consp-test441, label %tag99, label %tag86

tag99:                                            ; preds = %tag97
  %83 = load {}*, {}** %64, align 8
  %.val665.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag21

tag101:                                           ; preds = %normal-dest364, %header-check-br324
  %84 = phi {}* [ %G155841.0, %header-check-br324 ], [ %146, %normal-dest364 ]
  %G155785.0.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %85 = icmp eq {}* %G155785.0.pre, %84
  br i1 %85, label %tag104, label %tag114

tag102:                                           ; preds = %tag91
  %86 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 76), align 16
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest450 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag103:                                           ; preds = %tag69
  %88 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 213), align 8
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest464 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag104:                                           ; preds = %tag67, %header-check-br316, %normal-dest364, %tag101
  %.val677706 = phi {}* [ %84, %tag101 ], [ %G155841.0, %tag67 ], [ %G155841.0, %header-check-br316 ], [ %146, %normal-dest364 ]
  %90 = icmp eq {}* %.val677706, %farg2
  %.val676 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G155781.0 = select i1 %90, {}* %.val676, {}* %.val677706
  %91 = icmp eq {}* %G155781.0, %.val677706
  br i1 %91, label %tag122, label %tag9

tag107:                                           ; preds = %tag110, %normal-dest408, %tag22, %tag64
  %92 = phi {}* [ %.val680, %tag64 ], [ %.val680, %tag22 ], [ %153, %normal-dest408 ], [ %.val667, %tag110 ]
  %y.0 = phi {}* [ %47, %tag64 ], [ null, %tag22 ], [ %y.1, %normal-dest408 ], [ %LENGTH.0.ph, %tag110 ]
  %93 = ptrtoint {}* %y.0 to i64
  %fixnum-tag-only472568 = and i64 %93, 3
  %fixnump-test473 = icmp eq i64 %fixnum-tag-only472568, 0
  br i1 %fixnump-test473, label %tag58, label %tag30

tag109:                                           ; preds = %normal-dest139
  %94 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 213), align 8
  %95 = invoke {}* @cc_safe_fdefinition({}* %94)
          to label %normal-dest476 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag110:                                           ; preds = %tag21
  %96 = icmp eq {}* %G2095854179.0, %.val667
  %G155911.0 = select i1 %96, {}* %.val664, {}* %.val667
  %97 = icmp eq {}* %G155911.0, %.val667
  br i1 %97, label %tag11, label %tag107

tag112:                                           ; preds = %tag28
  %98 = load {}*, {}** %41, align 8
  %.val673.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag77

tag114:                                           ; preds = %tag101
  %99 = add i64 %105, 7
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %"tag fixnum498" = shl nuw i64 %101, 2
  %102 = inttoptr i64 %"tag fixnum498" to {}*
  br label %tag9

tag122:                                           ; preds = %tag104
  %103 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest515 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag125:                                           ; preds = %normal-dest
  %test538 = icmp eq i64 %tag-only558, 1
  br i1 %test538, label %header-check-br535, label %tag81

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest218, %tag33, %normal-dest164, %tag18
  %lpad.loopexit683 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest450, %tag102, %normal-dest253, %tag92
  %lpad.loopexit.split-lp684 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag11, %normal-dest142, %tag90, %normal-dest415
  %lpad.loopexit688 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag25, %normal-dest183, %tag36, %normal-dest232
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10, %normal-dest515, %tag122, %normal-dest485, %normal-dest478, %normal-dest476, %tag109, %tag103, %normal-dest401, %tag89, %normal-dest371, %tag79, %normal-dest357, %maybe-more-tests, %normal-dest340, %tag75, %tag68, %tag65, %normal-dest281, %maybe-more-tests513, %normal-dest201, %tag30, %tag9
  %lpad.loopexit.split-lp686 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit683, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp684, %cleanup-lpad.loopexit.loopexit.split-lp ], [ %lpad.loopexit.split-lp686, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit688, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %105 = ptrtoint {}* %farg2 to i64
  %tag-only558 = and i64 %105, 7
  %consp-test = icmp eq i64 %tag-only558, 3
  %G155959.0.in = select i1 %consp-test, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0)
  %G155959.0 = load {}*, {}** %G155959.0.in, align 8
  %106 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %107 = icmp eq {}* %G155959.0, %106
  br i1 %107, label %tag125, label %tag97.outer.preheader

tag97.outer.preheader:                            ; preds = %normal-dest
  br label %tag97.outer

normal-dest139:                                   ; preds = %tag9
  %.elt598 = extractvalue { {}*, i64 } %14, 0
  %.elt600 = extractvalue { {}*, i64 } %14, 1
  %cond550 = icmp eq i64 %.elt600, 0
  %108 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155772.0 = select i1 %cond550, {}* %108, {}* %.elt598
  %109 = icmp eq {}* %G155772.0, %108
  br i1 %109, label %tag109, label %tag79

normal-dest142:                                   ; preds = %tag11
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 233), align 8
  %ptrtoint143 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint144 = add i64 %ptrtoint143, 7
  %entry-point-addr145 = inttoptr i64 %entry-point-addr-uint144 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point146 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr145, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point146({}* %16, i64 2, {}* %G2095854179.0, {}* %110, {}* null, {}* null)
          to label %tag97 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest164:                                   ; preds = %tag18
  %112 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %113 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %114 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %115 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint165 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint166 = add i64 %ptrtoint165, 7
  %entry-point-addr167 = inttoptr i64 %entry-point-addr-uint166 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point168 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr167, align 8
  %116 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point168({}* %21, i64 5, {}* %112, {}* %113, {}* %SEQUENCE196.0.ph, {}* %114, {}* %115)
          to label %normal-dest171 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest171:                                   ; preds = %normal-dest164
  %.elt618 = extractvalue { {}*, i64 } %116, 0
  %.elt620 = extractvalue { {}*, i64 } %116, 1
  %cond552 = icmp eq i64 %.elt620, 0
  %117 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond552, {}* %117, {}* %.elt618
  br label %tag77

normal-dest183:                                   ; preds = %tag25
  %ptrtoint184 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint185 = add i64 %ptrtoint184, 7
  %entry-point-addr186 = inttoptr i64 %entry-point-addr-uint185 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point187 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr186, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point187({}* %28, i64 1, {}* %82, {}* null, {}* null, {}* null)
          to label %normal-dest190 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest190:                                   ; preds = %normal-dest183
  %.elt565 = extractvalue { {}*, i64 } %118, 0
  %.elt567 = extractvalue { {}*, i64 } %118, 1
  %cond545 = icmp eq i64 %.elt567, 0
  %119 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond545, {}* %119, {}* %.elt565
  br label %tag97.outer.backedge

normal-dest201:                                   ; preds = %tag30
  %ptrtoint202 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint203 = add i64 %ptrtoint202, 7
  %entry-point-addr204 = inttoptr i64 %entry-point-addr-uint203 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point205 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr204, align 8
  %120 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point205({}* %30, i64 2, {}* inttoptr (i64 4 to {}*), {}* %y.0, {}* null, {}* null)
          to label %normal-dest208 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest208:                                   ; preds = %normal-dest201
  %.elt570 = extractvalue { {}*, i64 } %120, 0
  %.elt572 = extractvalue { {}*, i64 } %120, 1
  %cond546 = icmp eq i64 %.elt572, 0
  %121 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155871.1 = select i1 %cond546, {}* %121, {}* %.elt570
  br label %tag69

normal-dest218:                                   ; preds = %tag33
  %122 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 235), align 8
  %ptrtoint220 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint221 = add i64 %ptrtoint220, 7
  %entry-point-addr222 = inttoptr i64 %entry-point-addr-uint221 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point223 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr222, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point223({}* %32, i64 2, {}* %G2095854.0, {}* %122, {}* null, {}* null)
          to label %tag28 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest232:                                   ; preds = %tag36
  %ptrtoint233 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint234 = add i64 %ptrtoint233, 7
  %entry-point-addr235 = inttoptr i64 %entry-point-addr-uint234 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point236 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr235, align 8
  %124 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point236({}* %34, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest239 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest239:                                   ; preds = %normal-dest232
  %.elt = extractvalue { {}*, i64 } %124, 0
  %.elt563 = extractvalue { {}*, i64 } %124, 1
  %cond = icmp eq i64 %.elt563, 0
  %125 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond, {}* %125, {}* %.elt
  br label %tag97.outer.backedge

normal-dest253:                                   ; preds = %tag92
  %ptrtoint255 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint256 = add i64 %ptrtoint255, 7
  %entry-point-addr257 = inttoptr i64 %entry-point-addr-uint256 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point258 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr257, align 8
  %126 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point258({}* %75, i64 2, {}* %LENGTH262.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest261 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest261:                                   ; preds = %normal-dest253
  %.elt590 = extractvalue { {}*, i64 } %126, 0
  %.elt592 = extractvalue { {}*, i64 } %126, 1
  %cond548 = icmp eq i64 %.elt592, 0
  %127 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH262.1 = select i1 %cond548, {}* %127, {}* %.elt590
  br label %tag28.outer.backedge

normal-dest281:                                   ; preds = %maybe-more-tests513
  %ptrtoint282 = ptrtoint {}* %176 to i64
  %entry-point-addr-uint283 = add i64 %ptrtoint282, 7
  %entry-point-addr284 = inttoptr i64 %entry-point-addr-uint283 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point285 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr284, align 8
  %128 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point285({}* %176, i64 1, {}* nonnull %farg2, {}* null, {}* null, {}* null)
          to label %normal-dest288 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest288:                                   ; preds = %normal-dest281
  %.elt642 = extractvalue { {}*, i64 } %128, 0
  %.elt644 = extractvalue { {}*, i64 } %128, 1
  %cond557 = icmp eq i64 %.elt644, 0
  %129 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155968.0 = select i1 %cond557, {}* %129, {}* %.elt642
  %130 = icmp eq {}* %G155968.0, inttoptr (i64 4 to {}*)
  br i1 %130, label %tag24, label %tag81

normal-dest315:                                   ; preds = %tag65
  %.elt575 = extractvalue { {}*, i64 } %48, 0
  %131 = ptrtoint {}* %.elt575 to i64
  %.elt577 = extractvalue { {}*, i64 } %48, 1
  br label %tag95

header-check-br316:                               ; preds = %header-check-br324
  %.off678 = add i64 %135, -1153
  %132 = icmp ult i64 %.off678, 149
  br i1 %132, label %maybe-more-tests, label %tag104

maybe-more-tests:                                 ; preds = %header-check-br316
  %133 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 119), align 8
  %134 = invoke {}* @cc_safe_fdefinition({}* %133)
          to label %normal-dest357 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br324:                               ; preds = %tag67
  %irc-bit-cast328 = bitcast {}* %farg2 to i8*
  %gep329 = getelementptr inbounds i8, i8* %irc-bit-cast328, i64 -9
  %irc-bit-cast330 = bitcast i8* %gep329 to i64*
  %135 = load i64, i64* %irc-bit-cast330, align 8
  %.off = add i64 %135, -1081
  %136 = icmp ult i64 %.off, 69
  br i1 %136, label %tag101, label %header-check-br316

normal-dest334:                                   ; preds = %tag68
  %G155841.0 = load {}*, {}** %G155959.0.in, align 8
  %137 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %138 = icmp eq {}* %G155841.0, %137
  br i1 %138, label %tag67, label %tag28.outer.preheader

tag28.outer.preheader:                            ; preds = %normal-dest334
  br label %tag28.outer

normal-dest340:                                   ; preds = %tag75
  %139 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %140 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %141 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %142 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint341 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint342 = add i64 %ptrtoint341, 7
  %entry-point-addr343 = inttoptr i64 %entry-point-addr-uint342 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point344 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr343, align 8
  %143 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point344({}* %57, i64 5, {}* %139, {}* %140, {}* %farg2, {}* %141, {}* %142)
          to label %normal-dest347 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest347:                                   ; preds = %normal-dest340
  %.elt582 = extractvalue { {}*, i64 } %143, 0
  %.elt584 = extractvalue { {}*, i64 } %143, 1
  %cond547 = icmp eq i64 %.elt584, 0
  %144 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155849.1 = select i1 %cond547, {}* %144, {}* %.elt582
  br label %tag65

normal-dest357:                                   ; preds = %maybe-more-tests
  %ptrtoint358 = ptrtoint {}* %134 to i64
  %entry-point-addr-uint359 = add i64 %ptrtoint358, 7
  %entry-point-addr360 = inttoptr i64 %entry-point-addr-uint359 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point361 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr360, align 8
  %145 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point361({}* %134, i64 1, {}* nonnull %farg2, {}* null, {}* null, {}* null)
          to label %normal-dest364 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest364:                                   ; preds = %normal-dest357
  %.elt626 = extractvalue { {}*, i64 } %145, 0
  %.elt628 = extractvalue { {}*, i64 } %145, 1
  %cond554 = icmp eq i64 %.elt628, 0
  %146 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155964.0 = select i1 %cond554, {}* %146, {}* %.elt626
  %147 = icmp eq {}* %G155964.0, inttoptr (i64 4 to {}*)
  br i1 %147, label %tag101, label %tag104

normal-dest371:                                   ; preds = %tag79
  %148 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 236), align 16
  %ptrtoint372 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint373 = add i64 %ptrtoint372, 7
  %entry-point-addr374 = inttoptr i64 %entry-point-addr-uint373 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point375 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr374, align 8
  %149 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point375({}* %61, i64 2, {}* %farg2, {}* %148, {}* null, {}* null)
          to label %normal-dest378 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest378:                                   ; preds = %normal-dest371
  %150 = load i64, i64* bitcast ([467 x {}*]* @CONTAB4420 to i64*), align 16
  br label %tag95

normal-dest401:                                   ; preds = %tag89
  %151 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 232), align 16
  %ptrtoint402 = ptrtoint {}* %69 to i64
  %entry-point-addr-uint403 = add i64 %ptrtoint402, 7
  %entry-point-addr404 = inttoptr i64 %entry-point-addr-uint403 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point405 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr404, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point405({}* %69, i64 2, {}* %farg2, {}* %151, {}* null, {}* null)
          to label %normal-dest408 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest408:                                   ; preds = %normal-dest401
  %.elt638 = extractvalue { {}*, i64 } %152, 0
  %.elt640 = extractvalue { {}*, i64 } %152, 1
  %cond556 = icmp eq i64 %.elt640, 0
  %153 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %y.1 = select i1 %cond556, {}* %153, {}* %.elt638
  br label %tag107

normal-dest415:                                   ; preds = %tag90
  %154 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %155 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %156 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %157 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint416 = ptrtoint {}* %71 to i64
  %entry-point-addr-uint417 = add i64 %ptrtoint416, 7
  %entry-point-addr418 = inttoptr i64 %entry-point-addr-uint417 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point419 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr418, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point419({}* %71, i64 5, {}* %154, {}* %155, {}* %SEQUENCE.0.ph, {}* %156, {}* %157)
          to label %normal-dest422 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest422:                                   ; preds = %normal-dest415
  %.elt634 = extractvalue { {}*, i64 } %158, 0
  %.elt636 = extractvalue { {}*, i64 } %158, 1
  %cond555 = icmp eq i64 %.elt636, 0
  %159 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G2095854179.1 = select i1 %cond555, {}* %159, {}* %.elt634
  br label %tag21

normal-dest450:                                   ; preds = %tag102
  %ptrtoint451 = ptrtoint {}* %87 to i64
  %entry-point-addr-uint452 = add i64 %ptrtoint451, 7
  %entry-point-addr453 = inttoptr i64 %entry-point-addr-uint452 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point454 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr453, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point454({}* %87, i64 1, {}* %73, {}* null, {}* null, {}* null)
          to label %normal-dest457 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest457:                                   ; preds = %normal-dest450
  %.elt594 = extractvalue { {}*, i64 } %160, 0
  %.elt596 = extractvalue { {}*, i64 } %160, 1
  %cond549 = icmp eq i64 %.elt596, 0
  %161 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH262.2 = select i1 %cond549, {}* %161, {}* %.elt594
  br label %tag28.outer.backedge

normal-dest464:                                   ; preds = %tag103
  %162 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 178), align 16
  %G155866.0 = load {}*, {}** %G155959.0.in, align 8
  %163 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %164 = icmp eq {}* %G155866.0, %163
  br i1 %164, label %tag93, label %tag41

normal-dest476:                                   ; preds = %tag109
  %165 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %166 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %167 = invoke {}* @cc_safe_fdefinition({}* %166)
          to label %normal-dest478 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest478:                                   ; preds = %normal-dest476
  %168 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 88), align 16
  %169 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %ptrtoint479 = ptrtoint {}* %167 to i64
  %entry-point-addr-uint480 = add i64 %ptrtoint479, 7
  %entry-point-addr481 = inttoptr i64 %entry-point-addr-uint480 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point482 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr481, align 8
  %170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point482({}* %167, i64 3, {}* %farg2, {}* %168, {}* %169, {}* null)
          to label %normal-dest485 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest485:                                   ; preds = %normal-dest478
  %.elt606 = extractvalue { {}*, i64 } %170, 0
  %.elt608 = extractvalue { {}*, i64 } %170, 1
  %cond551 = icmp eq i64 %.elt608, 0
  %171 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155760.0 = select i1 %cond551, {}* %171, {}* %.elt606
  %ptrtoint491 = ptrtoint {}* %95 to i64
  %entry-point-addr-uint492 = add i64 %ptrtoint491, 7
  %entry-point-addr493 = inttoptr i64 %entry-point-addr-uint492 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point494 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr493, align 8
  %172 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point494({}* %95, i64 4, {}* %farg0, {}* %farg1, {}* %165, {}* %G155760.0)
          to label %normal-dest497 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest497:                                   ; preds = %normal-dest485
  %.elt610 = extractvalue { {}*, i64 } %172, 0
  %173 = ptrtoint {}* %.elt610 to i64
  %.elt612 = extractvalue { {}*, i64 } %172, 1
  br label %tag95

header-check-br505:                               ; preds = %header-check-br535
  %.off682 = add i64 %180, -1153
  %174 = icmp ult i64 %.off682, 149
  br i1 %174, label %maybe-more-tests513, label %tag81

maybe-more-tests513:                              ; preds = %header-check-br505
  %175 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 119), align 8
  %176 = invoke {}* @cc_safe_fdefinition({}* %175)
          to label %normal-dest281 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest515:                                   ; preds = %tag122
  %177 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 234), align 16
  %ptrtoint516 = ptrtoint {}* %104 to i64
  %entry-point-addr-uint517 = add i64 %ptrtoint516, 7
  %entry-point-addr518 = inttoptr i64 %entry-point-addr-uint517 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point519 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr518, align 8
  %178 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point519({}* %104, i64 2, {}* %farg2, {}* %177, {}* null, {}* null)
          to label %normal-dest522 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest522:                                   ; preds = %normal-dest515
  %.elt622 = extractvalue { {}*, i64 } %178, 0
  %.elt624 = extractvalue { {}*, i64 } %178, 1
  %cond553 = icmp eq i64 %.elt624, 0
  %179 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155775.1 = select i1 %cond553, {}* %179, {}* %.elt622
  br label %tag9

header-check-br535:                               ; preds = %tag125
  %irc-bit-cast539 = bitcast {}* %farg2 to i8*
  %gep540 = getelementptr inbounds i8, i8* %irc-bit-cast539, i64 -9
  %irc-bit-cast541 = bitcast i8* %gep540 to i64*
  %180 = load i64, i64* %irc-bit-cast541, align 8
  %.off681 = add i64 %180, -1081
  %181 = icmp ult i64 %.off681, 69
  br i1 %181, label %tag24, label %header-check-br505
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !38 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G155998.0 = phi {}* [ %18, %header-check-br ], [ %G155998.1, %normal-dest17 ], [ %G155998.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 213), align 8
  %ptrtoint43 = ptrtoint {}* %G155998.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G155998.0, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN_NEU", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %maybe-more-tests28, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 213), align 8
  %"closure->ZWE=CONSTRAINT_UEBERSETZEN_NEU" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7185, i64 168, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 250), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155998.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %27 = icmp ult i64 %.off106, 5
  br i1 %27, label %maybe-more-tests28, label %tag

maybe-more-tests28:                               ; preds = %header-check-br20
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %maybe-more-tests28
  %ptrtoint31 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %29, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt101 = extractvalue { {}*, i64 } %30, 0
  %.elt103 = extractvalue { {}*, i64 } %30, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G155998.2 = select i1 %cond82, {}* %31, {}* %.elt101
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 251), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN_NEU", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 252), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ZWE=CONSTRAINT_UEBERSETZEN_NEU", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 672 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 213), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !39 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 2
  br i1 %enough-args, label %error, label %continue

tag1:                                             ; preds = %kw-exit-block
  %9 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad.loopexit.split-lp

tag3:                                             ; preds = %normal-dest39, %normal-dest173
  %10 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %11 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %12 = insertvalue { {}*, i64 } %11, i64 1, 1
  ret { {}*, i64 } %12

tag6:                                             ; preds = %kw-exit-block
  %13 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest54 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %loop-kw-args
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %loop-cont, %tag1, %normal-dest32, %normal-dest35, %normal-dest39, %tag6, %normal-dest54, %normal-dest56, %normal-dest58, %normal-dest65, %normal-dest71, %normal-dest78, %normal-dest85, %normal-dest92, %normal-dest99, %normal-dest106, %normal-dest113, %normal-dest120, %normal-dest132, %normal-dest144, %normal-dest150, %normal-dest152, %normal-dest154, %normal-dest161, %normal-dest173
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @":::global-str-ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 2)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs13 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-114 = add i64 %rem-nargs13, -1
  store i64 %rem-nargs-114, i64* %"remaining-nargs*", align 8
  %vaarg15 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %14 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 211), align 8
  %17 = icmp eq i64 %nargs, 2
  br i1 %17, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G155980.0 = phi {}* [ %G155980.2, %advance-arg-idx-block ], [ %15, %loop-kw-args.preheader ]
  %anzahl.1 = phi {}* [ %anzahl.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G155981.0 = phi {}* [ %G155981.2, %advance-arg-idx-block ], [ %15, %loop-kw-args.preheader ]
  %lispfunktionsname.1 = phi {}* [ %lispfunktionsname.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G155982.0 = phi {}* [ %G155982.2, %advance-arg-idx-block ], [ %15, %loop-kw-args.preheader ]
  %vorbedingung.1 = phi {}* [ %vorbedingung.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %26, %advance-arg-idx-block ], [ 2, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs18 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-119 = add i64 %rem-nargs18, -1
  store i64 %rem-nargs-119, i64* %"remaining-nargs*", align 8
  %vaarg20 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs21 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-122 = add i64 %rem-nargs21, -1
  store i64 %rem-nargs-122, i64* %"remaining-nargs*", align 8
  %vaarg23 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg20, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest24 unwind label %cleanup-lpad.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %18 = phi {}* [ %15, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G155980.1 = phi {}* [ %15, %continue ], [ %G155980.2, %loop-cont.kw-exit-block_crit_edge ]
  %anzahl.2 = phi {}* [ undef, %continue ], [ %anzahl.3, %loop-cont.kw-exit-block_crit_edge ]
  %G155981.1 = phi {}* [ %15, %continue ], [ %G155981.2, %loop-cont.kw-exit-block_crit_edge ]
  %lispfunktionsname.2 = phi {}* [ undef, %continue ], [ %lispfunktionsname.3, %loop-cont.kw-exit-block_crit_edge ]
  %G155982.1 = phi {}* [ %15, %continue ], [ %G155982.2, %loop-cont.kw-exit-block_crit_edge ]
  %vorbedingung.2 = phi {}* [ undef, %continue ], [ %vorbedingung.3, %loop-cont.kw-exit-block_crit_edge ]
  %19 = icmp eq {}* %G155982.1, %18
  %vorbedingung.0 = select i1 %19, {}* %18, {}* %vorbedingung.2
  %20 = icmp eq {}* %G155981.1, %18
  %lispfunktionsname.0 = select i1 %20, {}* %18, {}* %lispfunktionsname.2
  %21 = icmp eq {}* %G155980.1, %18
  %anzahl.0 = select i1 %21, {}* %18, {}* %anzahl.2
  %22 = icmp eq {}* %lispfunktionsname.0, %18
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  br i1 %22, label %tag6, label %tag1

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg20, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %kw-exit-block

normal-dest24:                                    ; preds = %loop-kw-args
  %24 = icmp eq {}* %16, %vaarg20
  br i1 %24, label %aok-block, label %"kw-:VORBEDINGUNG-test"

aok-block:                                        ; preds = %normal-dest24
  %25 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg23)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %"kw-:ANZAHL-test", %"kw-:LISPFUNKTIONSNAME-test", %"kw-:VORBEDINGUNG-test", %not-seen-before-kw-block, %not-seen-before-kw-block26, %not-seen-before-kw-block29, %next-kw-block30, %aok-block
  %G155980.2 = phi {}* [ %G155980.0, %aok-block ], [ %G155980.0, %next-kw-block30 ], [ %14, %not-seen-before-kw-block29 ], [ %G155980.0, %not-seen-before-kw-block26 ], [ %G155980.0, %not-seen-before-kw-block ], [ %G155980.0, %"kw-:VORBEDINGUNG-test" ], [ %G155980.0, %"kw-:LISPFUNKTIONSNAME-test" ], [ %G155980.0, %"kw-:ANZAHL-test" ]
  %anzahl.3 = phi {}* [ %anzahl.1, %aok-block ], [ %anzahl.1, %next-kw-block30 ], [ %vaarg23, %not-seen-before-kw-block29 ], [ %anzahl.1, %not-seen-before-kw-block26 ], [ %anzahl.1, %not-seen-before-kw-block ], [ %anzahl.1, %"kw-:VORBEDINGUNG-test" ], [ %anzahl.1, %"kw-:LISPFUNKTIONSNAME-test" ], [ %anzahl.1, %"kw-:ANZAHL-test" ]
  %G155981.2 = phi {}* [ %G155981.0, %aok-block ], [ %G155981.0, %next-kw-block30 ], [ %G155981.0, %not-seen-before-kw-block29 ], [ %14, %not-seen-before-kw-block26 ], [ %G155981.0, %not-seen-before-kw-block ], [ %G155981.0, %"kw-:VORBEDINGUNG-test" ], [ %G155981.0, %"kw-:LISPFUNKTIONSNAME-test" ], [ %G155981.0, %"kw-:ANZAHL-test" ]
  %lispfunktionsname.3 = phi {}* [ %lispfunktionsname.1, %aok-block ], [ %lispfunktionsname.1, %next-kw-block30 ], [ %lispfunktionsname.1, %not-seen-before-kw-block29 ], [ %vaarg23, %not-seen-before-kw-block26 ], [ %lispfunktionsname.1, %not-seen-before-kw-block ], [ %lispfunktionsname.1, %"kw-:VORBEDINGUNG-test" ], [ %lispfunktionsname.1, %"kw-:LISPFUNKTIONSNAME-test" ], [ %lispfunktionsname.1, %"kw-:ANZAHL-test" ]
  %G155982.2 = phi {}* [ %G155982.0, %aok-block ], [ %G155982.0, %next-kw-block30 ], [ %G155982.0, %not-seen-before-kw-block29 ], [ %G155982.0, %not-seen-before-kw-block26 ], [ %14, %not-seen-before-kw-block ], [ %G155982.0, %"kw-:VORBEDINGUNG-test" ], [ %G155982.0, %"kw-:LISPFUNKTIONSNAME-test" ], [ %G155982.0, %"kw-:ANZAHL-test" ]
  %vorbedingung.3 = phi {}* [ %vorbedingung.1, %aok-block ], [ %vorbedingung.1, %next-kw-block30 ], [ %vorbedingung.1, %not-seen-before-kw-block29 ], [ %vorbedingung.1, %not-seen-before-kw-block26 ], [ %vaarg23, %not-seen-before-kw-block ], [ %vorbedingung.1, %"kw-:VORBEDINGUNG-test" ], [ %vorbedingung.1, %"kw-:LISPFUNKTIONSNAME-test" ], [ %vorbedingung.1, %"kw-:ANZAHL-test" ]
  %phi-this-was-aok = phi i64 [ %25, %aok-block ], [ %phi-saw-aok, %next-kw-block30 ], [ %phi-saw-aok, %not-seen-before-kw-block29 ], [ %phi-saw-aok, %not-seen-before-kw-block26 ], [ %phi-saw-aok, %not-seen-before-kw-block ], [ %phi-saw-aok, %"kw-:VORBEDINGUNG-test" ], [ %phi-saw-aok, %"kw-:LISPFUNKTIONSNAME-test" ], [ %phi-saw-aok, %"kw-:ANZAHL-test" ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %34, %next-kw-block30 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block29 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block26 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block ], [ %phi-bad-kw-idx, %"kw-:VORBEDINGUNG-test" ], [ %phi-bad-kw-idx, %"kw-:LISPFUNKTIONSNAME-test" ], [ %phi-bad-kw-idx, %"kw-:ANZAHL-test" ]
  %26 = add i64 %phi-reg-arg-idx, 2
  %27 = icmp slt i64 %26, %nargs
  br i1 %27, label %loop-kw-args, label %loop-cont

"kw-:VORBEDINGUNG-test":                          ; preds = %normal-dest24
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %29 = call i64 @cc_matchKeywordOnce({}* %28, {}* %vaarg20, {}* %G155982.0)
  switch i64 %29, label %not-seen-before-kw-block [
    i64 0, label %"kw-:LISPFUNKTIONSNAME-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block:                         ; preds = %"kw-:VORBEDINGUNG-test"
  br label %advance-arg-idx-block

"kw-:LISPFUNKTIONSNAME-test":                     ; preds = %"kw-:VORBEDINGUNG-test"
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 178), align 16
  %31 = call i64 @cc_matchKeywordOnce({}* %30, {}* %vaarg20, {}* %G155981.0)
  switch i64 %31, label %not-seen-before-kw-block26 [
    i64 0, label %"kw-:ANZAHL-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block26:                       ; preds = %"kw-:LISPFUNKTIONSNAME-test"
  br label %advance-arg-idx-block

"kw-:ANZAHL-test":                                ; preds = %"kw-:LISPFUNKTIONSNAME-test"
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 215), align 8
  %33 = call i64 @cc_matchKeywordOnce({}* %32, {}* %vaarg20, {}* %G155980.0)
  switch i64 %33, label %not-seen-before-kw-block29 [
    i64 0, label %next-kw-block30
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block29:                       ; preds = %"kw-:ANZAHL-test"
  br label %advance-arg-idx-block

next-kw-block30:                                  ; preds = %"kw-:ANZAHL-test"
  %34 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest32:                                    ; preds = %tag1
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint = ptrtoint {}* %9 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %9, i64 5, {}* %vaarg, {}* %35, {}* %lispfunktionsname.0, {}* %36, {}* %37)
          to label %normal-dest35 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest35:                                    ; preds = %normal-dest32
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest39 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest39:                                    ; preds = %normal-dest35
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint40 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint41 = add i64 %ptrtoint40, 7
  %entry-point-addr42 = inttoptr i64 %entry-point-addr-uint41 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point43 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr42, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point43({}* %40, i64 5, {}* %vaarg, {}* %41, {}* %lispfunktionsname.0, {}* %42, {}* %43)
          to label %tag3 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest54:                                    ; preds = %tag6
  %45 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest56 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest56:                                    ; preds = %normal-dest54
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest58 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest58:                                    ; preds = %normal-dest56
  %50 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 246), align 16
  %ptrtoint59 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %49, i64 1, {}* %50, {}* null, {}* null, {}* null)
          to label %normal-dest65 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest65:                                    ; preds = %normal-dest58
  %.elt209 = extractvalue { {}*, i64 } %51, 0
  %.elt211 = extractvalue { {}*, i64 } %51, 1
  %cond = icmp eq i64 %.elt211, 0
  %52 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156038.0 = select i1 %cond, {}* %52, {}* %.elt209
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest71 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest71:                                    ; preds = %normal-dest65
  %ptrtoint72 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint73 = add i64 %ptrtoint72, 7
  %entry-point-addr74 = inttoptr i64 %entry-point-addr-uint73 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point75 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr74, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point75({}* %54, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest78:                                    ; preds = %normal-dest71
  %.elt213 = extractvalue { {}*, i64 } %55, 0
  %.elt215 = extractvalue { {}*, i64 } %55, 1
  %cond192 = icmp eq i64 %.elt215, 0
  %56 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156039.0 = select i1 %cond192, {}* %56, {}* %.elt213
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest85 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest85:                                    ; preds = %normal-dest78
  %ptrtoint86 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint87 = add i64 %ptrtoint86, 7
  %entry-point-addr88 = inttoptr i64 %entry-point-addr-uint87 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point89 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr88, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point89({}* %58, i64 1, {}* %vaarg15, {}* null, {}* null, {}* null)
          to label %normal-dest92 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest92:                                    ; preds = %normal-dest85
  %.elt217 = extractvalue { {}*, i64 } %59, 0
  %.elt219 = extractvalue { {}*, i64 } %59, 1
  %cond193 = icmp eq i64 %.elt219, 0
  %60 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156040.0 = select i1 %cond193, {}* %60, {}* %.elt217
  %61 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest99 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest99:                                    ; preds = %normal-dest92
  %ptrtoint100 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint101 = add i64 %ptrtoint100, 7
  %entry-point-addr102 = inttoptr i64 %entry-point-addr-uint101 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point103 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr102, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point103({}* %62, i64 1, {}* %vorbedingung.0, {}* null, {}* null, {}* null)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest106:                                   ; preds = %normal-dest99
  %.elt221 = extractvalue { {}*, i64 } %63, 0
  %.elt223 = extractvalue { {}*, i64 } %63, 1
  %cond194 = icmp eq i64 %.elt223, 0
  %64 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156041.0 = select i1 %cond194, {}* %64, {}* %.elt221
  %65 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest113 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest113:                                   ; preds = %normal-dest106
  %ptrtoint114 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint115 = add i64 %ptrtoint114, 7
  %entry-point-addr116 = inttoptr i64 %entry-point-addr-uint115 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point117 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr116, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point117({}* %66, i64 1, {}* %anzahl.0, {}* null, {}* null, {}* null)
          to label %normal-dest120 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest120:                                   ; preds = %normal-dest113
  %.elt225 = extractvalue { {}*, i64 } %67, 0
  %.elt227 = extractvalue { {}*, i64 } %67, 1
  %cond195 = icmp eq i64 %.elt227, 0
  %68 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156042.0 = select i1 %cond195, {}* %68, {}* %.elt225
  %ptrtoint126 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint127 = add i64 %ptrtoint126, 7
  %entry-point-addr128 = inttoptr i64 %entry-point-addr-uint127 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point129 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr128, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point129({}* %47, i64 6, {}* %G156038.0, {}* %G156039.0, {}* %G156040.0, {}* %G156041.0, {}* %G156042.0, {}* %68)
          to label %normal-dest132 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest132:                                   ; preds = %normal-dest120
  %.elt229 = extractvalue { {}*, i64 } %69, 0
  %.elt231 = extractvalue { {}*, i64 } %69, 1
  %cond196 = icmp eq i64 %.elt231, 0
  %70 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156034.0 = select i1 %cond196, {}* %70, {}* %.elt229
  %71 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %72 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint138 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint139 = add i64 %ptrtoint138, 7
  %entry-point-addr140 = inttoptr i64 %entry-point-addr-uint139 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point141 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr140, align 8
  %73 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point141({}* %13, i64 5, {}* %vaarg, {}* %45, {}* %G156034.0, {}* %71, {}* %72)
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest144:                                   ; preds = %normal-dest132
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest150:                                   ; preds = %normal-dest144
  %76 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %77 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest152 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest152:                                   ; preds = %normal-dest150
  %79 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest154 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest154:                                   ; preds = %normal-dest152
  %81 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %ptrtoint155 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint156 = add i64 %ptrtoint155, 7
  %entry-point-addr157 = inttoptr i64 %entry-point-addr-uint156 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point158 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr157, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point158({}* %80, i64 2, {}* %vaarg, {}* %81, {}* null, {}* null)
          to label %normal-dest161 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest161:                                   ; preds = %normal-dest154
  %.elt237 = extractvalue { {}*, i64 } %82, 0
  %.elt239 = extractvalue { {}*, i64 } %82, 1
  %cond197 = icmp eq i64 %.elt239, 0
  %83 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156024.0 = select i1 %cond197, {}* %83, {}* %.elt237
  %ptrtoint167 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint168 = add i64 %ptrtoint167, 7
  %entry-point-addr169 = inttoptr i64 %entry-point-addr-uint168 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point170 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr169, align 8
  %84 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point170({}* %78, i64 1, {}* %G156024.0, {}* null, {}* null, {}* null)
          to label %normal-dest173 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest173:                                   ; preds = %normal-dest161
  %.elt241 = extractvalue { {}*, i64 } %84, 0
  %.elt243 = extractvalue { {}*, i64 } %84, 1
  %cond198 = icmp eq i64 %.elt243, 0
  %85 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156020.0 = select i1 %cond198, {}* %85, {}* %.elt241
  %86 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %87 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint179 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint180 = add i64 %ptrtoint179, 7
  %entry-point-addr181 = inttoptr i64 %entry-point-addr-uint180 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point182 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr181, align 8
  %88 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point182({}* %75, i64 5, {}* %vaarg, {}* %76, {}* %G156020.0, {}* %86, {}* %87)
          to label %tag3 unwind label %cleanup-lpad.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !40 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G156109.0 = phi {}* [ %18, %header-check-br ], [ %G156109.1, %normal-dest54 ], [ %G156109.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 264), align 16
  %ptrtoint13 = ptrtoint {}* %G156109.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G156109.0, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_TEXT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag3, %normal-dest47, %maybe-more-tests81, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 264), align 16
  %"closure->ZWE=HEILMITTEL_UEBERSETZEN_TEXT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8087, i64 187, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 266), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_TEXT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 279), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_TEXT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 748 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 264), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests81
  %ptrtoint48 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156109.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag1

normal-dest60:                                    ; preds = %tag3
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 263), align 8
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156109.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag3

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest47 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !41 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %enough-args = icmp slt i64 %nargs, 9
  br i1 %enough-args, label %error, label %continue

tag2:                                             ; preds = %tag24
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 150), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest193 unwind label %cleanup-lpad

tag11:                                            ; preds = %header-check-br221, %header-check-br268, %tag14, %tag12, %tag19, %tag24, %normal-dest200
  %return-value.sroa.24.0 = phi i64 [ %.elt320, %normal-dest200 ], [ 1, %tag24 ], [ 1, %tag19 ], [ 1, %tag12 ], [ 1, %tag14 ], [ 1, %header-check-br268 ], [ 1, %header-check-br221 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt318, %normal-dest200 ], [ %.in, %tag24 ], [ %.in, %tag19 ], [ %.in, %tag12 ], [ %.in, %tag14 ], [ %.in, %header-check-br268 ], [ %.in, %header-check-br221 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %14 = insertvalue { {}*, i64 } %13, i64 %return-value.sroa.24.0, 1
  ret { {}*, i64 } %14

tag12:                                            ; preds = %tag19
  %fixnum-tag-only228326 = and i64 %18, 3
  %fixnump-test229 = icmp ne i64 %fixnum-tag-only228326, 0
  %test224 = icmp eq i64 %single-float-tag-only260, 1
  %or.cond342 = and i1 %fixnump-test229, %test224
  br i1 %or.cond342, label %header-check-br221, label %tag11

tag13:                                            ; preds = %header-check-br221, %header-check-br221, %header-check-br221, %header-check-br221
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest231 unwind label %cleanup-lpad

tag14:                                            ; preds = %mvn-final183
  %17 = ptrtoint {}* %.in to i64
  %single-float-tag-only = and i64 %17, 7
  %fixnum-tag-only324 = and i64 %17, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only324, 0
  %test271 = icmp eq i64 %single-float-tag-only, 1
  %or.cond343 = and i1 %fixnump-test, %test271
  br i1 %or.cond343, label %header-check-br268, label %tag11

tag19:                                            ; preds = %header-check-br268, %header-check-br268, %header-check-br268, %header-check-br268
  %18 = ptrtoint {}* %70 to i64
  %single-float-tag-only260 = and i64 %18, 7
  %19 = icmp eq i64 %single-float-tag-only260, 6
  br i1 %19, label %tag11, label %tag12

tag24:                                            ; preds = %mvn-final183, %normal-dest238
  %20 = phi {}* [ %80, %normal-dest238 ], [ %.val344, %mvn-final183 ]
  %G156131.0 = phi {}* [ %G156131.1, %normal-dest238 ], [ %.val, %mvn-final183 ]
  %21 = icmp eq {}* %G156131.0, %20
  br i1 %21, label %tag11, label %tag2

cleanup-lpad:                                     ; preds = %normal-dest231, %tag13, %normal-dest193, %tag2, %normal-dest166, %normal-dest154, %normal-dest142, %normal-dest130, %normal-dest123, %normal-dest121, %normal-dest119, %normal-dest117, %normal-dest115, %normal-dest108, %normal-dest101, %normal-dest94, %normal-dest87, %normal-dest80, %normal-dest73, %normal-dest69, %normal-dest66, %continue64, %error63, %error
  %22 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %22

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @":::global-str-ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 9)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs31 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-132 = add i64 %rem-nargs31, -1
  store i64 %rem-nargs-132, i64* %"remaining-nargs*", align 8
  %vaarg33 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs35 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-136 = add i64 %rem-nargs35, -1
  store i64 %rem-nargs-136, i64* %"remaining-nargs*", align 8
  %vaarg37 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs39 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-140 = add i64 %rem-nargs39, -1
  store i64 %rem-nargs-140, i64* %"remaining-nargs*", align 8
  %vaarg41 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs43 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-144 = add i64 %rem-nargs43, -1
  store i64 %rem-nargs-144, i64* %"remaining-nargs*", align 8
  %vaarg45 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs47 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-148 = add i64 %rem-nargs47, -1
  store i64 %rem-nargs-148, i64* %"remaining-nargs*", align 8
  %vaarg49 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs51 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-152 = add i64 %rem-nargs51, -1
  store i64 %rem-nargs-152, i64* %"remaining-nargs*", align 8
  %vaarg53 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs55 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-156 = add i64 %rem-nargs55, -1
  store i64 %rem-nargs-156, i64* %"remaining-nargs*", align 8
  %vaarg57 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs59 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-160 = add i64 %rem-nargs59, -1
  store i64 %rem-nargs-160, i64* %"remaining-nargs*", align 8
  %vaarg61 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %max-num-args = icmp eq i64 %nargs, 9
  br i1 %max-num-args, label %continue64, label %error63

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

error63:                                          ; preds = %continue
  invoke void @va_tooManyArgumentsException(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @":::global-str-ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 9)
          to label %normal-dest65 unwind label %cleanup-lpad

continue64:                                       ; preds = %continue
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 128), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest65:                                    ; preds = %error63
  call void @unreachableError()
  unreachable

normal-dest66:                                    ; preds = %continue64
  %ptrtoint = ptrtoint {}* %24 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %24, i64 1, {}* %vaarg49, {}* null, {}* null, {}* null)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %normal-dest66
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt284 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt284, 0
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156088.0 = select i1 %cond, {}* %26, {}* %.elt
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 128), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest73 unwind label %cleanup-lpad

normal-dest73:                                    ; preds = %normal-dest69
  %ptrtoint74 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %28, i64 1, {}* %vaarg53, {}* null, {}* null, {}* null)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest73
  %.elt286 = extractvalue { {}*, i64 } %29, 0
  %.elt288 = extractvalue { {}*, i64 } %29, 1
  %cond275 = icmp eq i64 %.elt288, 0
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156089.0 = select i1 %cond275, {}* %30, {}* %.elt286
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 128), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest87 unwind label %cleanup-lpad

normal-dest87:                                    ; preds = %normal-dest80
  %ptrtoint88 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint89 = add i64 %ptrtoint88, 7
  %entry-point-addr90 = inttoptr i64 %entry-point-addr-uint89 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point91 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr90, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point91({}* %32, i64 1, {}* %vaarg57, {}* null, {}* null, {}* null)
          to label %normal-dest94 unwind label %cleanup-lpad

normal-dest94:                                    ; preds = %normal-dest87
  %.elt290 = extractvalue { {}*, i64 } %33, 0
  %.elt292 = extractvalue { {}*, i64 } %33, 1
  %cond276 = icmp eq i64 %.elt292, 0
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156090.0 = select i1 %cond276, {}* %34, {}* %.elt290
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 128), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest101 unwind label %cleanup-lpad

normal-dest101:                                   ; preds = %normal-dest94
  %ptrtoint102 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint103 = add i64 %ptrtoint102, 7
  %entry-point-addr104 = inttoptr i64 %entry-point-addr-uint103 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point105 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr104, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point105({}* %36, i64 1, {}* %vaarg61, {}* null, {}* null, {}* null)
          to label %normal-dest108 unwind label %cleanup-lpad

normal-dest108:                                   ; preds = %normal-dest101
  %.elt294 = extractvalue { {}*, i64 } %37, 0
  %.elt296 = extractvalue { {}*, i64 } %37, 1
  %cond277 = icmp eq i64 %.elt296, 0
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156091.0 = select i1 %cond277, {}* %38, {}* %.elt294
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 130), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest115 unwind label %cleanup-lpad

normal-dest115:                                   ; preds = %normal-dest108
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 254), align 16
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest117 unwind label %cleanup-lpad

normal-dest117:                                   ; preds = %normal-dest115
  %44 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest119 unwind label %cleanup-lpad

normal-dest119:                                   ; preds = %normal-dest117
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 122), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest121 unwind label %cleanup-lpad

normal-dest121:                                   ; preds = %normal-dest119
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest123 unwind label %cleanup-lpad

normal-dest123:                                   ; preds = %normal-dest121
  %50 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 256), align 16
  %51 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 257), align 8
  %52 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 259), align 8
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %54 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 138), align 16
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 261), align 8
  %56 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 178), align 16
  %ptrtoint124 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint125 = add i64 %ptrtoint124, 7
  %entry-point-addr126 = inttoptr i64 %entry-point-addr-uint125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr126, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point127({}* %49, i64 14, {}* %50, {}* %vaarg37, {}* %51, {}* %vaarg33, {}* %52, {}* %vaarg45, {}* %53, {}* %G156088.0, {}* %54, {}* %G156089.0, {}* %55, {}* %G156090.0, {}* %56, {}* %G156091.0)
          to label %normal-dest130 unwind label %cleanup-lpad

normal-dest130:                                   ; preds = %normal-dest123
  %.elt298 = extractvalue { {}*, i64 } %57, 0
  %.elt300 = extractvalue { {}*, i64 } %57, 1
  %cond278 = icmp eq i64 %.elt300, 0
  %58 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156155.0 = select i1 %cond278, {}* %58, {}* %.elt298
  %ptrtoint136 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint137 = add i64 %ptrtoint136, 7
  %entry-point-addr138 = inttoptr i64 %entry-point-addr-uint137 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point139 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr138, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point139({}* %47, i64 1, {}* %G156155.0, {}* null, {}* null, {}* null)
          to label %normal-dest142 unwind label %cleanup-lpad

normal-dest142:                                   ; preds = %normal-dest130
  %.elt302 = extractvalue { {}*, i64 } %59, 0
  %.elt304 = extractvalue { {}*, i64 } %59, 1
  %cond279 = icmp eq i64 %.elt304, 0
  %60 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156153.0 = select i1 %cond279, {}* %60, {}* %.elt302
  %ptrtoint148 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint149 = add i64 %ptrtoint148, 7
  %entry-point-addr150 = inttoptr i64 %entry-point-addr-uint149 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point151 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr150, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point151({}* %45, i64 2, {}* %vaarg41, {}* %G156153.0, {}* null, {}* null)
          to label %normal-dest154 unwind label %cleanup-lpad

normal-dest154:                                   ; preds = %normal-dest142
  %.elt306 = extractvalue { {}*, i64 } %61, 0
  %.elt308 = extractvalue { {}*, i64 } %61, 1
  %cond280 = icmp eq i64 %.elt308, 0
  %62 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156150.0 = select i1 %cond280, {}* %62, {}* %.elt306
  %ptrtoint160 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint161 = add i64 %ptrtoint160, 7
  %entry-point-addr162 = inttoptr i64 %entry-point-addr-uint161 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point163 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr162, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point163({}* %43, i64 2, {}* %vaarg, {}* %G156150.0, {}* null, {}* null)
          to label %normal-dest166 unwind label %cleanup-lpad

normal-dest166:                                   ; preds = %normal-dest154
  %.elt310 = extractvalue { {}*, i64 } %63, 0
  %.elt312 = extractvalue { {}*, i64 } %63, 1
  %cond281 = icmp eq i64 %.elt312, 0
  %64 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156147.0 = select i1 %cond281, {}* %64, {}* %.elt310
  %ptrtoint172 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint173 = add i64 %ptrtoint172, 7
  %entry-point-addr174 = inttoptr i64 %entry-point-addr-uint173 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point175 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr174, align 8
  %65 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point175({}* %40, i64 2, {}* %41, {}* %G156147.0, {}* null, {}* null)
          to label %normal-dest178 unwind label %cleanup-lpad

normal-dest178:                                   ; preds = %normal-dest166
  %.elt314 = extractvalue { {}*, i64 } %65, 0
  %.elt316 = extractvalue { {}*, i64 } %65, 1
  switch i64 %.elt316, label %mvn2- [
    i64 0, label %mvn0-181
    i64 1, label %mvn1-182
  ]

mvn0-181:                                         ; preds = %normal-dest178
  %66 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final183

mvn1-182:                                         ; preds = %normal-dest178
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final183

mvn2-:                                            ; preds = %normal-dest178
  %gep = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  %68 = load {}*, {}** %gep, align 8
  %.val344.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %mvn-final183

mvn-final183:                                     ; preds = %mvn2-, %mvn1-182, %mvn0-181
  %.val344 = phi {}* [ %.val344.pre, %mvn2- ], [ %67, %mvn1-182 ], [ %66, %mvn0-181 ]
  %.in = phi {}* [ %.elt314, %mvn2- ], [ %.elt314, %mvn1-182 ], [ %66, %mvn0-181 ]
  %FEHLERMELDUNG156087.0 = phi {}* [ %68, %mvn2- ], [ %67, %mvn1-182 ], [ %66, %mvn0-181 ]
  %69 = bitcast {}* %.in to i8*
  %70 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 142), align 16
  %71 = icmp eq {}* %.in, %70
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G156140.0 = select i1 %71, {}* %.val, {}* %.val344
  %72 = icmp eq {}* %G156140.0, %.val344
  br i1 %72, label %tag14, label %tag24

normal-dest193:                                   ; preds = %tag2
  %ptrtoint194 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint195 = add i64 %ptrtoint194, 7
  %entry-point-addr196 = inttoptr i64 %entry-point-addr-uint195 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point197 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr196, align 8
  %73 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point197({}* %12, i64 1, {}* %FEHLERMELDUNG156087.0, {}* null, {}* null, {}* null)
          to label %normal-dest200 unwind label %cleanup-lpad

normal-dest200:                                   ; preds = %normal-dest193
  %.elt318 = extractvalue { {}*, i64 } %73, 0
  %.elt320 = extractvalue { {}*, i64 } %73, 1
  br label %tag11

header-check-br221:                               ; preds = %tag12
  %irc-bit-cast225 = bitcast {}* %70 to i8*
  %gep226 = getelementptr inbounds i8, i8* %irc-bit-cast225, i64 -9
  %irc-bit-cast227 = bitcast i8* %gep226 to i64*
  %74 = load i64, i64* %irc-bit-cast227, align 8
  %75 = add i64 %74, -1309
  %76 = lshr i64 %75, 3
  %77 = shl i64 %75, 61
  %78 = or i64 %76, %77
  switch i64 %78, label %tag11 [
    i64 2, label %tag13
    i64 4, label %tag13
    i64 5, label %tag13
    i64 0, label %tag13
  ]

normal-dest231:                                   ; preds = %tag13
  %ptrtoint232 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint233 = add i64 %ptrtoint232, 7
  %entry-point-addr234 = inttoptr i64 %entry-point-addr-uint233 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point235 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr234, align 8
  %79 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point235({}* %16, i64 2, {}* nonnull %.in, {}* nonnull %70, {}* null, {}* null)
          to label %normal-dest238 unwind label %cleanup-lpad

normal-dest238:                                   ; preds = %normal-dest231
  %.elt329 = extractvalue { {}*, i64 } %79, 0
  %.elt331 = extractvalue { {}*, i64 } %79, 1
  %cond282 = icmp eq i64 %.elt331, 0
  %80 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156131.1 = select i1 %cond282, {}* %80, {}* %.elt329
  br label %tag24

header-check-br268:                               ; preds = %tag14
  %gep273 = getelementptr inbounds i8, i8* %69, i64 -9
  %irc-bit-cast274 = bitcast i8* %gep273 to i64*
  %81 = load i64, i64* %irc-bit-cast274, align 8
  %82 = add i64 %81, -1309
  %83 = lshr i64 %82, 3
  %84 = shl i64 %82, 61
  %85 = or i64 %83, %84
  switch i64 %85, label %tag11 [
    i64 2, label %tag19
    i64 4, label %tag19
    i64 5, label %tag19
    i64 0, label %tag19
  ]
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !42 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G156215.0 = phi {}* [ %18, %header-check-br ], [ %G156215.1, %normal-dest63 ], [ %G156215.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 254), align 16
  %ptrtoint13 = ptrtoint {}* %G156215.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G156215.0, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_NEU", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 254), align 16
  %"closure->ZWE=HEILMITTEL_UEBERSETZEN_NEU" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 9275, i64 209, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 297), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_NEU", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 305), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_NEU", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 836 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 254), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag2

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag2
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 296), align 16
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156215.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156215.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !43 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 2
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %tag121
  %9 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest189 unwind label %cleanup-lpad.loopexit.split-lp

tag1:                                             ; preds = %tag3
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 283), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest280 unwind label %cleanup-lpad.loopexit.split-lp

tag3:                                             ; preds = %header-check-br369, %header-check-br341, %tag28, %tag62, %tag85, %kw-exit-block, %normal-dest628
  %13 = phi {}* [ %212, %normal-dest628 ], [ %.val1348, %tag62 ], [ %.val1348, %kw-exit-block ], [ %.val1348, %tag85 ], [ %.val1348, %tag28 ], [ %.val1348, %header-check-br341 ], [ %.val1348, %header-check-br369 ]
  %G156443.0 = phi {}* [ %G156443.1, %normal-dest628 ], [ %.val1348, %tag62 ], [ %.val, %kw-exit-block ], [ %.val1348, %tag85 ], [ %.val1348, %tag28 ], [ %.val1348, %header-check-br341 ], [ %.val1348, %header-check-br369 ]
  %14 = icmp eq {}* %G156443.0, %13
  %G156441.0 = select i1 %14, {}* %13, {}* %.lispfunktionsname.2
  %15 = icmp eq {}* %G156441.0, %13
  br i1 %15, label %tag1, label %tag133

tag13:                                            ; preds = %tag96, %normal-dest363
  %.val1356 = phi {}* [ %156, %normal-dest363 ], [ %.val13541364, %tag96 ]
  %G156360.0 = phi {}* [ %G156360.1, %normal-dest363 ], [ %.val1353, %tag96 ]
  %16 = icmp eq {}* %G156360.0, %.val1356
  br i1 %16, label %tag13.tag118_crit_edge, label %tag36

tag13.tag118_crit_edge:                           ; preds = %tag13
  %.val1355.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag118

tag18:                                            ; preds = %normal-dest287
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest333 unwind label %cleanup-lpad.loopexit.split-lp

tag22:                                            ; preds = %header-check-br296, %header-check-br296, %header-check-br296, %header-check-br296
  %19 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest356 unwind label %cleanup-lpad.loopexit.split-lp

tag28:                                            ; preds = %tag85
  %fixnum-tag-only3901295 = and i64 %49, 3
  %fixnump-test391 = icmp ne i64 %fixnum-tag-only3901295, 0
  %test372 = icmp eq i64 %single-float-tag-only676, 1
  %or.cond1339 = and i1 %fixnump-test391, %test372
  br i1 %or.cond1339, label %header-check-br369, label %tag3

tag33:                                            ; preds = %header-check-br792, %header-check-br792, %header-check-br792, %header-check-br792
  %21 = ptrtoint {}* %36 to i64
  %single-float-tag-only407 = and i64 %21, 7
  %fixnum-tag-only3281263 = and i64 %21, 3
  %fixnump-test329 = icmp ne i64 %fixnum-tag-only3281263, 0
  %test640 = icmp eq i64 %single-float-tag-only407, 1
  %or.cond1342 = and i1 %fixnump-test329, %test640
  br i1 %or.cond1342, label %header-check-br637, label %tag48

tag36:                                            ; preds = %tag13
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest409 unwind label %cleanup-lpad.loopexit.split-lp

tag38:                                            ; preds = %header-check-br714, %header-check-br714, %header-check-br714, %header-check-br714
  %24 = ptrtoint {}* %57 to i64
  %single-float-tag-only493 = and i64 %24, 7
  %25 = icmp eq i64 %single-float-tag-only493, 6
  br i1 %25, label %tag63, label %tag122

tag42:                                            ; preds = %header-check-br527, %header-check-br527, %header-check-br527, %header-check-br527
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest510 unwind label %cleanup-lpad.loopexit.split-lp

tag48:                                            ; preds = %header-check-br792, %header-check-br637, %tag91, %tag33, %tag121, %normal-dest1039, %normal-dest877, %normal-dest486, %normal-dest273
  %G156190.0 = phi {}* [ %G156190.1, %normal-dest273 ], [ %G156190.2, %normal-dest486 ], [ %G156190.3, %normal-dest877 ], [ %G156190.4, %normal-dest1039 ], [ %60, %tag121 ], [ %.val13581363, %tag33 ], [ %.val13581363, %tag91 ], [ %.val13581363, %header-check-br637 ], [ %.val13581363, %header-check-br792 ]
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest541 unwind label %cleanup-lpad.loopexit.split-lp

tag56:                                            ; preds = %header-check-br884, %header-check-br884, %header-check-br884, %header-check-br884
  %30 = ptrtoint {}* %32 to i64
  %single-float-tag-only589 = and i64 %30, 7
  %31 = icmp eq i64 %single-float-tag-only589, 6
  br i1 %31, label %tag96, label %tag151

tag59:                                            ; preds = %normal-dest287
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 285), align 8
  %33 = icmp eq {}* %vaarg160, %32
  %G156406.0 = select i1 %33, {}* %.val1349, {}* %133
  %34 = icmp eq {}* %G156406.0, %133
  br i1 %34, label %tag92, label %tag104

tag62:                                            ; preds = %kw-exit-block
  %35 = ptrtoint {}* %vaarg160 to i64
  %single-float-tag-only610 = and i64 %35, 7
  %fixnum-tag-only3301293 = and i64 %35, 3
  %fixnump-test331 = icmp ne i64 %fixnum-tag-only3301293, 0
  %test344 = icmp eq i64 %single-float-tag-only610, 1
  %or.cond1337 = and i1 %fixnump-test331, %test344
  br i1 %or.cond1337, label %header-check-br341, label %tag3

tag63:                                            ; preds = %tag79.tag63_crit_edge, %header-check-br348, %header-check-br714, %tag38, %tag122, %tag130
  %.val1357 = phi {}* [ %.val1357.pre, %tag79.tag63_crit_edge ], [ %.val1355, %tag130 ], [ %.val1355, %tag122 ], [ %.val1355, %tag38 ], [ %.val1355, %header-check-br714 ], [ %.val1355, %header-check-br348 ]
  %.val13581363 = phi {}* [ %.val1358, %tag79.tag63_crit_edge ], [ %.val13561362, %tag130 ], [ %.val13561362, %tag122 ], [ %.val13561362, %tag38 ], [ %.val13561362, %header-check-br714 ], [ %.val13561362, %header-check-br348 ]
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 291), align 8
  %37 = icmp eq {}* %vaarg160, %36
  %G156287.0 = select i1 %37, {}* %.val1357, {}* %.val13581363
  %38 = icmp eq {}* %G156287.0, %.val13581363
  br i1 %38, label %tag91, label %tag121

tag68:                                            ; preds = %header-check-br369, %header-check-br369, %header-check-br369, %header-check-br369
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest621 unwind label %cleanup-lpad.loopexit.split-lp

tag69:                                            ; preds = %tag70
  %fixnum-tag-only6341279 = and i64 %41, 3
  %fixnump-test635 = icmp ne i64 %fixnum-tag-only6341279, 0
  %test299 = icmp eq i64 %single-float-tag-only636, 1
  %or.cond = and i1 %fixnump-test635, %test299
  br i1 %or.cond, label %header-check-br296, label %tag118

tag70:                                            ; preds = %header-check-br582, %header-check-br582, %header-check-br582, %header-check-br582
  %41 = ptrtoint {}* %53 to i64
  %single-float-tag-only636 = and i64 %41, 7
  %42 = icmp eq i64 %single-float-tag-only636, 6
  br i1 %42, label %tag118, label %tag69

tag75:                                            ; preds = %normal-dest926, %normal-dest575, %normal-dest340
  %return-value.sroa.76.0 = phi i64 [ 1, %normal-dest575 ], [ %.elt1140, %normal-dest340 ], [ 1, %normal-dest926 ]
  %return-value.sroa.0.0 = phi i64 [ %205, %normal-dest575 ], [ %144, %normal-dest340 ], [ %269, %normal-dest926 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %43 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %44 = insertvalue { {}*, i64 } undef, {}* %43, 0
  %45 = insertvalue { {}*, i64 } %44, i64 %return-value.sroa.76.0, 1
  ret { {}*, i64 } %45

tag79:                                            ; preds = %tag118, %normal-dest899
  %.val1358 = phi {}* [ %258, %normal-dest899 ], [ %.val13561362, %tag118 ]
  %G156323.0 = phi {}* [ %G156323.1, %normal-dest899 ], [ %.val1355, %tag118 ]
  %46 = icmp eq {}* %G156323.0, %.val1358
  br i1 %46, label %tag79.tag63_crit_edge, label %tag134

tag79.tag63_crit_edge:                            ; preds = %tag79
  %.val1357.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag63

tag81:                                            ; preds = %header-check-br637, %header-check-br637, %header-check-br637, %header-check-br637
  %47 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest661 unwind label %cleanup-lpad.loopexit.split-lp

tag85:                                            ; preds = %header-check-br341, %header-check-br341, %header-check-br341, %header-check-br341
  %49 = ptrtoint {}* %84 to i64
  %single-float-tag-only676 = and i64 %49, 7
  %50 = icmp eq i64 %single-float-tag-only676, 6
  br i1 %50, label %tag3, label %tag28

tag91:                                            ; preds = %tag63
  %51 = ptrtoint {}* %vaarg160 to i64
  %single-float-tag-only694 = and i64 %51, 7
  %fixnum-tag-only1261 = and i64 %51, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only1261, 0
  %test795 = icmp eq i64 %single-float-tag-only694, 1
  %or.cond1346 = and i1 %fixnump-test, %test795
  br i1 %or.cond1346, label %header-check-br792, label %tag48

tag92:                                            ; preds = %tag59
  %52 = ptrtoint {}* %vaarg160 to i64
  %single-float-tag-only695 = and i64 %52, 7
  %fixnum-tag-only7371285 = and i64 %52, 3
  %fixnump-test738 = icmp ne i64 %fixnum-tag-only7371285, 0
  %test887 = icmp eq i64 %single-float-tag-only695, 1
  %or.cond1347 = and i1 %fixnump-test738, %test887
  br i1 %or.cond1347, label %header-check-br884, label %tag96

tag96:                                            ; preds = %tag104.tag96_crit_edge, %header-check-br884, %header-check-br527, %tag92, %tag56, %tag151
  %.val1353 = phi {}* [ %.val1353.pre, %tag104.tag96_crit_edge ], [ %.val1349, %tag151 ], [ %.val1349, %tag56 ], [ %.val1349, %tag92 ], [ %.val1349, %header-check-br527 ], [ %.val1349, %header-check-br884 ]
  %.val13541364 = phi {}* [ %.val1354, %tag104.tag96_crit_edge ], [ %133, %tag151 ], [ %133, %tag56 ], [ %133, %tag92 ], [ %133, %header-check-br527 ], [ %133, %header-check-br884 ]
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 287), align 8
  %54 = icmp eq {}* %vaarg160, %53
  %G156369.0 = select i1 %54, {}* %.val1353, {}* %.val13541364
  %55 = icmp eq {}* %G156369.0, %.val13541364
  br i1 %55, label %tag135, label %tag13

tag104:                                           ; preds = %tag59, %normal-dest519
  %.val1354 = phi {}* [ %185, %normal-dest519 ], [ %133, %tag59 ]
  %G156397.0 = phi {}* [ %G156397.1, %normal-dest519 ], [ %.val1349, %tag59 ]
  %56 = icmp eq {}* %G156397.0, %.val1354
  br i1 %56, label %tag104.tag96_crit_edge, label %tag129

tag104.tag96_crit_edge:                           ; preds = %tag104
  %.val1353.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag96

tag118:                                           ; preds = %tag13.tag118_crit_edge, %header-check-br296, %header-check-br582, %tag135, %tag137, %tag69, %tag70
  %.val1355 = phi {}* [ %.val1355.pre, %tag13.tag118_crit_edge ], [ %.val1353, %tag70 ], [ %.val1353, %tag69 ], [ %.val1353, %tag137 ], [ %.val1353, %tag135 ], [ %.val1353, %header-check-br582 ], [ %.val1353, %header-check-br296 ]
  %.val13561362 = phi {}* [ %.val1356, %tag13.tag118_crit_edge ], [ %.val13541364, %tag70 ], [ %.val13541364, %tag69 ], [ %.val13541364, %tag137 ], [ %.val13541364, %tag135 ], [ %.val13541364, %header-check-br582 ], [ %.val13541364, %header-check-br296 ]
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 289), align 8
  %58 = icmp eq {}* %vaarg160, %57
  %G156332.0 = select i1 %58, {}* %.val1355, {}* %.val13561362
  %59 = icmp eq {}* %G156332.0, %.val13561362
  br i1 %59, label %tag130, label %tag79

tag121:                                           ; preds = %tag63, %normal-dest668
  %60 = phi {}* [ %219, %normal-dest668 ], [ %.val13581363, %tag63 ]
  %G156278.0 = phi {}* [ %G156278.1, %normal-dest668 ], [ %.val1357, %tag63 ]
  %61 = icmp eq {}* %G156278.0, %60
  br i1 %61, label %tag48, label %tag

tag122:                                           ; preds = %tag38
  %fixnum-tag-only7761271 = and i64 %24, 3
  %fixnump-test777 = icmp ne i64 %fixnum-tag-only7761271, 0
  %test351 = icmp eq i64 %single-float-tag-only493, 1
  %or.cond1338 = and i1 %fixnump-test777, %test351
  br i1 %or.cond1338, label %header-check-br348, label %tag63

tag129:                                           ; preds = %tag104
  %62 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest800 unwind label %cleanup-lpad.loopexit.split-lp

tag130:                                           ; preds = %tag118
  %64 = ptrtoint {}* %vaarg160 to i64
  %single-float-tag-only883 = and i64 %64, 7
  %fixnum-tag-only6741269 = and i64 %64, 3
  %fixnump-test675 = icmp ne i64 %fixnum-tag-only6741269, 0
  %test717 = icmp eq i64 %single-float-tag-only883, 1
  %or.cond1344 = and i1 %fixnump-test675, %test717
  br i1 %or.cond1344, label %header-check-br714, label %tag63

tag132:                                           ; preds = %header-check-br348, %header-check-br348, %header-check-br348, %header-check-br348
  %65 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest892 unwind label %cleanup-lpad.loopexit.split-lp

tag133:                                           ; preds = %tag3
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest906 unwind label %cleanup-lpad.loopexit.split-lp

tag134:                                           ; preds = %tag79
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest934 unwind label %cleanup-lpad.loopexit.split-lp

tag135:                                           ; preds = %tag96
  %71 = ptrtoint {}* %vaarg160 to i64
  %single-float-tag-only1045 = and i64 %71, 7
  %72 = icmp eq i64 %single-float-tag-only1045, 6
  br i1 %72, label %tag118, label %tag137

tag137:                                           ; preds = %tag135
  %fixnum-tag-only10531277 = and i64 %71, 3
  %fixnump-test1054 = icmp ne i64 %fixnum-tag-only10531277, 0
  %test585 = icmp eq i64 %single-float-tag-only1045, 1
  %or.cond1341 = and i1 %fixnump-test1054, %test585
  br i1 %or.cond1341, label %header-check-br582, label %tag118

tag151:                                           ; preds = %tag56
  %fixnum-tag-only10811287 = and i64 %30, 3
  %fixnump-test1082 = icmp ne i64 %fixnum-tag-only10811287, 0
  %test530 = icmp eq i64 %single-float-tag-only589, 1
  %or.cond1340 = and i1 %fixnump-test1082, %test530
  br i1 %or.cond1340, label %header-check-br527, label %tag96

cleanup-lpad.loopexit:                            ; preds = %loop-kw-args
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %loop-cont, %tag, %normal-dest189, %normal-dest191, %normal-dest194, %normal-dest198, %normal-dest205, %normal-dest212, %normal-dest219, %normal-dest226, %normal-dest233, %normal-dest240, %normal-dest247, %normal-dest254, %normal-dest261, %tag1, %normal-dest280, %tag18, %normal-dest333, %tag22, %normal-dest356, %tag36, %normal-dest409, %normal-dest411, %normal-dest418, %normal-dest425, %normal-dest432, %normal-dest439, %normal-dest446, %normal-dest453, %normal-dest460, %normal-dest467, %normal-dest474, %tag42, %normal-dest510, %tag48, %normal-dest541, %normal-dest548, %normal-dest554, %normal-dest556, %normal-dest563, %tag68, %normal-dest621, %tag81, %normal-dest661, %tag129, %normal-dest800, %normal-dest802, %normal-dest809, %normal-dest816, %normal-dest823, %normal-dest830, %normal-dest837, %normal-dest844, %normal-dest851, %normal-dest858, %normal-dest865, %tag132, %normal-dest892, %tag133, %normal-dest906, %normal-dest913, %normal-dest919, %tag134, %normal-dest934, %normal-dest936, %normal-dest943, %normal-dest950, %normal-dest957, %normal-dest964, %normal-dest971, %normal-dest978, %normal-dest985, %normal-dest992, %normal-dest999, %normal-dest1006, %normal-dest1013, %normal-dest1020, %normal-dest1027
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @":::global-str-ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 2)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs158 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1159 = add i64 %rem-nargs158, -1
  store i64 %rem-nargs-1159, i64* %"remaining-nargs*", align 8
  %vaarg160 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %73 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %75 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 211), align 8
  %76 = icmp eq i64 %nargs, 2
  br i1 %76, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G156193.0 = phi {}* [ %G156193.2, %advance-arg-idx-block ], [ %74, %loop-kw-args.preheader ]
  %lispfunktionsname.1 = phi {}* [ %lispfunktionsname.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G156194.0 = phi {}* [ %G156194.2, %advance-arg-idx-block ], [ %74, %loop-kw-args.preheader ]
  %bedingung2.1 = phi {}* [ %bedingung2.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G156195.0 = phi {}* [ %G156195.2, %advance-arg-idx-block ], [ %74, %loop-kw-args.preheader ]
  %filterbedingung.1 = phi {}* [ %filterbedingung.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G156196.0 = phi {}* [ %G156196.2, %advance-arg-idx-block ], [ %74, %loop-kw-args.preheader ]
  %vorbedingung.1 = phi {}* [ %vorbedingung.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G156197.0 = phi {}* [ %G156197.2, %advance-arg-idx-block ], [ %74, %loop-kw-args.preheader ]
  %klasse2.1 = phi {}* [ %klasse2.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G156198.0 = phi {}* [ %G156198.2, %advance-arg-idx-block ], [ %74, %loop-kw-args.preheader ]
  %wertebereichklasse.1 = phi {}* [ %wertebereichklasse.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G156199.0 = phi {}* [ %G156199.2, %advance-arg-idx-block ], [ %74, %loop-kw-args.preheader ]
  %attribut.1 = phi {}* [ %attribut.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %89, %advance-arg-idx-block ], [ 2, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs163 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1164 = add i64 %rem-nargs163, -1
  store i64 %rem-nargs-1164, i64* %"remaining-nargs*", align 8
  %vaarg165 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs166 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1167 = add i64 %rem-nargs166, -1
  store i64 %rem-nargs-1167, i64* %"remaining-nargs*", align 8
  %vaarg168 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg165, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %.val = phi {}* [ %73, %continue ], [ %.pre1361, %loop-cont.kw-exit-block_crit_edge ]
  %.val1348 = phi {}* [ %74, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G156193.1 = phi {}* [ %74, %continue ], [ %G156193.2, %loop-cont.kw-exit-block_crit_edge ]
  %lispfunktionsname.2 = phi {}* [ undef, %continue ], [ %lispfunktionsname.3, %loop-cont.kw-exit-block_crit_edge ]
  %G156194.1 = phi {}* [ %74, %continue ], [ %G156194.2, %loop-cont.kw-exit-block_crit_edge ]
  %bedingung2.2 = phi {}* [ undef, %continue ], [ %bedingung2.3, %loop-cont.kw-exit-block_crit_edge ]
  %G156195.1 = phi {}* [ %74, %continue ], [ %G156195.2, %loop-cont.kw-exit-block_crit_edge ]
  %filterbedingung.2 = phi {}* [ undef, %continue ], [ %filterbedingung.3, %loop-cont.kw-exit-block_crit_edge ]
  %G156196.1 = phi {}* [ %74, %continue ], [ %G156196.2, %loop-cont.kw-exit-block_crit_edge ]
  %vorbedingung.2 = phi {}* [ undef, %continue ], [ %vorbedingung.3, %loop-cont.kw-exit-block_crit_edge ]
  %G156197.1 = phi {}* [ %74, %continue ], [ %G156197.2, %loop-cont.kw-exit-block_crit_edge ]
  %klasse2.2 = phi {}* [ undef, %continue ], [ %klasse2.3, %loop-cont.kw-exit-block_crit_edge ]
  %G156198.1 = phi {}* [ %74, %continue ], [ %G156198.2, %loop-cont.kw-exit-block_crit_edge ]
  %wertebereichklasse.2 = phi {}* [ undef, %continue ], [ %wertebereichklasse.3, %loop-cont.kw-exit-block_crit_edge ]
  %G156199.1 = phi {}* [ %74, %continue ], [ %G156199.2, %loop-cont.kw-exit-block_crit_edge ]
  %attribut.2 = phi {}* [ undef, %continue ], [ %attribut.3, %loop-cont.kw-exit-block_crit_edge ]
  %77 = icmp eq {}* %G156199.1, %.val1348
  %attribut.0 = select i1 %77, {}* %.val1348, {}* %attribut.2
  %78 = icmp eq {}* %G156198.1, %.val1348
  %wertebereichklasse.0 = select i1 %78, {}* %.val1348, {}* %wertebereichklasse.2
  %79 = icmp eq {}* %G156197.1, %.val1348
  %klasse2.0 = select i1 %79, {}* %.val1348, {}* %klasse2.2
  %80 = icmp eq {}* %G156196.1, %.val1348
  %.vorbedingung.2 = select i1 %80, {}* %.val, {}* %vorbedingung.2
  %81 = icmp eq {}* %G156195.1, %.val1348
  %.filterbedingung.2 = select i1 %81, {}* %.val, {}* %filterbedingung.2
  %82 = icmp eq {}* %G156194.1, %.val1348
  %bedingung2.0 = select i1 %82, {}* %.val, {}* %bedingung2.2
  %83 = icmp eq {}* %G156193.1, %.val1348
  %.lispfunktionsname.2 = select i1 %83, {}* %.val1348, {}* %lispfunktionsname.2
  %84 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 281), align 8
  %85 = icmp eq {}* %vaarg160, %84
  %G156452.0 = select i1 %85, {}* %.val, {}* %.val1348
  %86 = icmp eq {}* %G156452.0, %.val1348
  br i1 %86, label %tag62, label %tag3

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg165, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.pre1361 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %kw-exit-block

normal-dest169:                                   ; preds = %loop-kw-args
  %87 = icmp eq {}* %75, %vaarg165
  br i1 %87, label %aok-block, label %"kw-:ATTRIBUT-test"

aok-block:                                        ; preds = %normal-dest169
  %88 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg168)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %"kw-:LISPFUNKTIONSNAME-test", %"kw-:BEDINGUNG2-test", %"kw-:FILTERBEDINGUNG-test", %"kw-:VORBEDINGUNG-test", %"kw-:KLASSE2-test", %"kw-:WERTEBEREICHKLASSE-test", %"kw-:ATTRIBUT-test", %not-seen-before-kw-block, %not-seen-before-kw-block171, %not-seen-before-kw-block174, %not-seen-before-kw-block177, %not-seen-before-kw-block180, %not-seen-before-kw-block183, %not-seen-before-kw-block186, %next-kw-block187, %aok-block
  %G156193.2 = phi {}* [ %G156193.0, %aok-block ], [ %G156193.0, %next-kw-block187 ], [ %73, %not-seen-before-kw-block186 ], [ %G156193.0, %not-seen-before-kw-block183 ], [ %G156193.0, %not-seen-before-kw-block180 ], [ %G156193.0, %not-seen-before-kw-block177 ], [ %G156193.0, %not-seen-before-kw-block174 ], [ %G156193.0, %not-seen-before-kw-block171 ], [ %G156193.0, %not-seen-before-kw-block ], [ %G156193.0, %"kw-:ATTRIBUT-test" ], [ %G156193.0, %"kw-:WERTEBEREICHKLASSE-test" ], [ %G156193.0, %"kw-:KLASSE2-test" ], [ %G156193.0, %"kw-:VORBEDINGUNG-test" ], [ %G156193.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G156193.0, %"kw-:BEDINGUNG2-test" ], [ %G156193.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %lispfunktionsname.3 = phi {}* [ %lispfunktionsname.1, %aok-block ], [ %lispfunktionsname.1, %next-kw-block187 ], [ %vaarg168, %not-seen-before-kw-block186 ], [ %lispfunktionsname.1, %not-seen-before-kw-block183 ], [ %lispfunktionsname.1, %not-seen-before-kw-block180 ], [ %lispfunktionsname.1, %not-seen-before-kw-block177 ], [ %lispfunktionsname.1, %not-seen-before-kw-block174 ], [ %lispfunktionsname.1, %not-seen-before-kw-block171 ], [ %lispfunktionsname.1, %not-seen-before-kw-block ], [ %lispfunktionsname.1, %"kw-:ATTRIBUT-test" ], [ %lispfunktionsname.1, %"kw-:WERTEBEREICHKLASSE-test" ], [ %lispfunktionsname.1, %"kw-:KLASSE2-test" ], [ %lispfunktionsname.1, %"kw-:VORBEDINGUNG-test" ], [ %lispfunktionsname.1, %"kw-:FILTERBEDINGUNG-test" ], [ %lispfunktionsname.1, %"kw-:BEDINGUNG2-test" ], [ %lispfunktionsname.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G156194.2 = phi {}* [ %G156194.0, %aok-block ], [ %G156194.0, %next-kw-block187 ], [ %G156194.0, %not-seen-before-kw-block186 ], [ %73, %not-seen-before-kw-block183 ], [ %G156194.0, %not-seen-before-kw-block180 ], [ %G156194.0, %not-seen-before-kw-block177 ], [ %G156194.0, %not-seen-before-kw-block174 ], [ %G156194.0, %not-seen-before-kw-block171 ], [ %G156194.0, %not-seen-before-kw-block ], [ %G156194.0, %"kw-:ATTRIBUT-test" ], [ %G156194.0, %"kw-:WERTEBEREICHKLASSE-test" ], [ %G156194.0, %"kw-:KLASSE2-test" ], [ %G156194.0, %"kw-:VORBEDINGUNG-test" ], [ %G156194.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G156194.0, %"kw-:BEDINGUNG2-test" ], [ %G156194.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %bedingung2.3 = phi {}* [ %bedingung2.1, %aok-block ], [ %bedingung2.1, %next-kw-block187 ], [ %bedingung2.1, %not-seen-before-kw-block186 ], [ %vaarg168, %not-seen-before-kw-block183 ], [ %bedingung2.1, %not-seen-before-kw-block180 ], [ %bedingung2.1, %not-seen-before-kw-block177 ], [ %bedingung2.1, %not-seen-before-kw-block174 ], [ %bedingung2.1, %not-seen-before-kw-block171 ], [ %bedingung2.1, %not-seen-before-kw-block ], [ %bedingung2.1, %"kw-:ATTRIBUT-test" ], [ %bedingung2.1, %"kw-:WERTEBEREICHKLASSE-test" ], [ %bedingung2.1, %"kw-:KLASSE2-test" ], [ %bedingung2.1, %"kw-:VORBEDINGUNG-test" ], [ %bedingung2.1, %"kw-:FILTERBEDINGUNG-test" ], [ %bedingung2.1, %"kw-:BEDINGUNG2-test" ], [ %bedingung2.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G156195.2 = phi {}* [ %G156195.0, %aok-block ], [ %G156195.0, %next-kw-block187 ], [ %G156195.0, %not-seen-before-kw-block186 ], [ %G156195.0, %not-seen-before-kw-block183 ], [ %73, %not-seen-before-kw-block180 ], [ %G156195.0, %not-seen-before-kw-block177 ], [ %G156195.0, %not-seen-before-kw-block174 ], [ %G156195.0, %not-seen-before-kw-block171 ], [ %G156195.0, %not-seen-before-kw-block ], [ %G156195.0, %"kw-:ATTRIBUT-test" ], [ %G156195.0, %"kw-:WERTEBEREICHKLASSE-test" ], [ %G156195.0, %"kw-:KLASSE2-test" ], [ %G156195.0, %"kw-:VORBEDINGUNG-test" ], [ %G156195.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G156195.0, %"kw-:BEDINGUNG2-test" ], [ %G156195.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %filterbedingung.3 = phi {}* [ %filterbedingung.1, %aok-block ], [ %filterbedingung.1, %next-kw-block187 ], [ %filterbedingung.1, %not-seen-before-kw-block186 ], [ %filterbedingung.1, %not-seen-before-kw-block183 ], [ %vaarg168, %not-seen-before-kw-block180 ], [ %filterbedingung.1, %not-seen-before-kw-block177 ], [ %filterbedingung.1, %not-seen-before-kw-block174 ], [ %filterbedingung.1, %not-seen-before-kw-block171 ], [ %filterbedingung.1, %not-seen-before-kw-block ], [ %filterbedingung.1, %"kw-:ATTRIBUT-test" ], [ %filterbedingung.1, %"kw-:WERTEBEREICHKLASSE-test" ], [ %filterbedingung.1, %"kw-:KLASSE2-test" ], [ %filterbedingung.1, %"kw-:VORBEDINGUNG-test" ], [ %filterbedingung.1, %"kw-:FILTERBEDINGUNG-test" ], [ %filterbedingung.1, %"kw-:BEDINGUNG2-test" ], [ %filterbedingung.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G156196.2 = phi {}* [ %G156196.0, %aok-block ], [ %G156196.0, %next-kw-block187 ], [ %G156196.0, %not-seen-before-kw-block186 ], [ %G156196.0, %not-seen-before-kw-block183 ], [ %G156196.0, %not-seen-before-kw-block180 ], [ %73, %not-seen-before-kw-block177 ], [ %G156196.0, %not-seen-before-kw-block174 ], [ %G156196.0, %not-seen-before-kw-block171 ], [ %G156196.0, %not-seen-before-kw-block ], [ %G156196.0, %"kw-:ATTRIBUT-test" ], [ %G156196.0, %"kw-:WERTEBEREICHKLASSE-test" ], [ %G156196.0, %"kw-:KLASSE2-test" ], [ %G156196.0, %"kw-:VORBEDINGUNG-test" ], [ %G156196.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G156196.0, %"kw-:BEDINGUNG2-test" ], [ %G156196.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %vorbedingung.3 = phi {}* [ %vorbedingung.1, %aok-block ], [ %vorbedingung.1, %next-kw-block187 ], [ %vorbedingung.1, %not-seen-before-kw-block186 ], [ %vorbedingung.1, %not-seen-before-kw-block183 ], [ %vorbedingung.1, %not-seen-before-kw-block180 ], [ %vaarg168, %not-seen-before-kw-block177 ], [ %vorbedingung.1, %not-seen-before-kw-block174 ], [ %vorbedingung.1, %not-seen-before-kw-block171 ], [ %vorbedingung.1, %not-seen-before-kw-block ], [ %vorbedingung.1, %"kw-:ATTRIBUT-test" ], [ %vorbedingung.1, %"kw-:WERTEBEREICHKLASSE-test" ], [ %vorbedingung.1, %"kw-:KLASSE2-test" ], [ %vorbedingung.1, %"kw-:VORBEDINGUNG-test" ], [ %vorbedingung.1, %"kw-:FILTERBEDINGUNG-test" ], [ %vorbedingung.1, %"kw-:BEDINGUNG2-test" ], [ %vorbedingung.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G156197.2 = phi {}* [ %G156197.0, %aok-block ], [ %G156197.0, %next-kw-block187 ], [ %G156197.0, %not-seen-before-kw-block186 ], [ %G156197.0, %not-seen-before-kw-block183 ], [ %G156197.0, %not-seen-before-kw-block180 ], [ %G156197.0, %not-seen-before-kw-block177 ], [ %73, %not-seen-before-kw-block174 ], [ %G156197.0, %not-seen-before-kw-block171 ], [ %G156197.0, %not-seen-before-kw-block ], [ %G156197.0, %"kw-:ATTRIBUT-test" ], [ %G156197.0, %"kw-:WERTEBEREICHKLASSE-test" ], [ %G156197.0, %"kw-:KLASSE2-test" ], [ %G156197.0, %"kw-:VORBEDINGUNG-test" ], [ %G156197.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G156197.0, %"kw-:BEDINGUNG2-test" ], [ %G156197.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %klasse2.3 = phi {}* [ %klasse2.1, %aok-block ], [ %klasse2.1, %next-kw-block187 ], [ %klasse2.1, %not-seen-before-kw-block186 ], [ %klasse2.1, %not-seen-before-kw-block183 ], [ %klasse2.1, %not-seen-before-kw-block180 ], [ %klasse2.1, %not-seen-before-kw-block177 ], [ %vaarg168, %not-seen-before-kw-block174 ], [ %klasse2.1, %not-seen-before-kw-block171 ], [ %klasse2.1, %not-seen-before-kw-block ], [ %klasse2.1, %"kw-:ATTRIBUT-test" ], [ %klasse2.1, %"kw-:WERTEBEREICHKLASSE-test" ], [ %klasse2.1, %"kw-:KLASSE2-test" ], [ %klasse2.1, %"kw-:VORBEDINGUNG-test" ], [ %klasse2.1, %"kw-:FILTERBEDINGUNG-test" ], [ %klasse2.1, %"kw-:BEDINGUNG2-test" ], [ %klasse2.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G156198.2 = phi {}* [ %G156198.0, %aok-block ], [ %G156198.0, %next-kw-block187 ], [ %G156198.0, %not-seen-before-kw-block186 ], [ %G156198.0, %not-seen-before-kw-block183 ], [ %G156198.0, %not-seen-before-kw-block180 ], [ %G156198.0, %not-seen-before-kw-block177 ], [ %G156198.0, %not-seen-before-kw-block174 ], [ %73, %not-seen-before-kw-block171 ], [ %G156198.0, %not-seen-before-kw-block ], [ %G156198.0, %"kw-:ATTRIBUT-test" ], [ %G156198.0, %"kw-:WERTEBEREICHKLASSE-test" ], [ %G156198.0, %"kw-:KLASSE2-test" ], [ %G156198.0, %"kw-:VORBEDINGUNG-test" ], [ %G156198.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G156198.0, %"kw-:BEDINGUNG2-test" ], [ %G156198.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %wertebereichklasse.3 = phi {}* [ %wertebereichklasse.1, %aok-block ], [ %wertebereichklasse.1, %next-kw-block187 ], [ %wertebereichklasse.1, %not-seen-before-kw-block186 ], [ %wertebereichklasse.1, %not-seen-before-kw-block183 ], [ %wertebereichklasse.1, %not-seen-before-kw-block180 ], [ %wertebereichklasse.1, %not-seen-before-kw-block177 ], [ %wertebereichklasse.1, %not-seen-before-kw-block174 ], [ %vaarg168, %not-seen-before-kw-block171 ], [ %wertebereichklasse.1, %not-seen-before-kw-block ], [ %wertebereichklasse.1, %"kw-:ATTRIBUT-test" ], [ %wertebereichklasse.1, %"kw-:WERTEBEREICHKLASSE-test" ], [ %wertebereichklasse.1, %"kw-:KLASSE2-test" ], [ %wertebereichklasse.1, %"kw-:VORBEDINGUNG-test" ], [ %wertebereichklasse.1, %"kw-:FILTERBEDINGUNG-test" ], [ %wertebereichklasse.1, %"kw-:BEDINGUNG2-test" ], [ %wertebereichklasse.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %G156199.2 = phi {}* [ %G156199.0, %aok-block ], [ %G156199.0, %next-kw-block187 ], [ %G156199.0, %not-seen-before-kw-block186 ], [ %G156199.0, %not-seen-before-kw-block183 ], [ %G156199.0, %not-seen-before-kw-block180 ], [ %G156199.0, %not-seen-before-kw-block177 ], [ %G156199.0, %not-seen-before-kw-block174 ], [ %G156199.0, %not-seen-before-kw-block171 ], [ %73, %not-seen-before-kw-block ], [ %G156199.0, %"kw-:ATTRIBUT-test" ], [ %G156199.0, %"kw-:WERTEBEREICHKLASSE-test" ], [ %G156199.0, %"kw-:KLASSE2-test" ], [ %G156199.0, %"kw-:VORBEDINGUNG-test" ], [ %G156199.0, %"kw-:FILTERBEDINGUNG-test" ], [ %G156199.0, %"kw-:BEDINGUNG2-test" ], [ %G156199.0, %"kw-:LISPFUNKTIONSNAME-test" ]
  %attribut.3 = phi {}* [ %attribut.1, %aok-block ], [ %attribut.1, %next-kw-block187 ], [ %attribut.1, %not-seen-before-kw-block186 ], [ %attribut.1, %not-seen-before-kw-block183 ], [ %attribut.1, %not-seen-before-kw-block180 ], [ %attribut.1, %not-seen-before-kw-block177 ], [ %attribut.1, %not-seen-before-kw-block174 ], [ %attribut.1, %not-seen-before-kw-block171 ], [ %vaarg168, %not-seen-before-kw-block ], [ %attribut.1, %"kw-:ATTRIBUT-test" ], [ %attribut.1, %"kw-:WERTEBEREICHKLASSE-test" ], [ %attribut.1, %"kw-:KLASSE2-test" ], [ %attribut.1, %"kw-:VORBEDINGUNG-test" ], [ %attribut.1, %"kw-:FILTERBEDINGUNG-test" ], [ %attribut.1, %"kw-:BEDINGUNG2-test" ], [ %attribut.1, %"kw-:LISPFUNKTIONSNAME-test" ]
  %phi-this-was-aok = phi i64 [ %88, %aok-block ], [ %phi-saw-aok, %next-kw-block187 ], [ %phi-saw-aok, %not-seen-before-kw-block186 ], [ %phi-saw-aok, %not-seen-before-kw-block183 ], [ %phi-saw-aok, %not-seen-before-kw-block180 ], [ %phi-saw-aok, %not-seen-before-kw-block177 ], [ %phi-saw-aok, %not-seen-before-kw-block174 ], [ %phi-saw-aok, %not-seen-before-kw-block171 ], [ %phi-saw-aok, %not-seen-before-kw-block ], [ %phi-saw-aok, %"kw-:ATTRIBUT-test" ], [ %phi-saw-aok, %"kw-:WERTEBEREICHKLASSE-test" ], [ %phi-saw-aok, %"kw-:KLASSE2-test" ], [ %phi-saw-aok, %"kw-:VORBEDINGUNG-test" ], [ %phi-saw-aok, %"kw-:FILTERBEDINGUNG-test" ], [ %phi-saw-aok, %"kw-:BEDINGUNG2-test" ], [ %phi-saw-aok, %"kw-:LISPFUNKTIONSNAME-test" ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %105, %next-kw-block187 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block186 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block183 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block180 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block177 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block174 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block171 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block ], [ %phi-bad-kw-idx, %"kw-:ATTRIBUT-test" ], [ %phi-bad-kw-idx, %"kw-:WERTEBEREICHKLASSE-test" ], [ %phi-bad-kw-idx, %"kw-:KLASSE2-test" ], [ %phi-bad-kw-idx, %"kw-:VORBEDINGUNG-test" ], [ %phi-bad-kw-idx, %"kw-:FILTERBEDINGUNG-test" ], [ %phi-bad-kw-idx, %"kw-:BEDINGUNG2-test" ], [ %phi-bad-kw-idx, %"kw-:LISPFUNKTIONSNAME-test" ]
  %89 = add i64 %phi-reg-arg-idx, 2
  %90 = icmp slt i64 %89, %nargs
  br i1 %90, label %loop-kw-args, label %loop-cont

"kw-:ATTRIBUT-test":                              ; preds = %normal-dest169
  %91 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 256), align 16
  %92 = call i64 @cc_matchKeywordOnce({}* %91, {}* %vaarg165, {}* %G156199.0)
  switch i64 %92, label %not-seen-before-kw-block [
    i64 0, label %"kw-:WERTEBEREICHKLASSE-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block:                         ; preds = %"kw-:ATTRIBUT-test"
  br label %advance-arg-idx-block

"kw-:WERTEBEREICHKLASSE-test":                    ; preds = %"kw-:ATTRIBUT-test"
  %93 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 257), align 8
  %94 = call i64 @cc_matchKeywordOnce({}* %93, {}* %vaarg165, {}* %G156198.0)
  switch i64 %94, label %not-seen-before-kw-block171 [
    i64 0, label %"kw-:KLASSE2-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block171:                      ; preds = %"kw-:WERTEBEREICHKLASSE-test"
  br label %advance-arg-idx-block

"kw-:KLASSE2-test":                               ; preds = %"kw-:WERTEBEREICHKLASSE-test"
  %95 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 259), align 8
  %96 = call i64 @cc_matchKeywordOnce({}* %95, {}* %vaarg165, {}* %G156197.0)
  switch i64 %96, label %not-seen-before-kw-block174 [
    i64 0, label %"kw-:VORBEDINGUNG-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block174:                      ; preds = %"kw-:KLASSE2-test"
  br label %advance-arg-idx-block

"kw-:VORBEDINGUNG-test":                          ; preds = %"kw-:KLASSE2-test"
  %97 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %98 = call i64 @cc_matchKeywordOnce({}* %97, {}* %vaarg165, {}* %G156196.0)
  switch i64 %98, label %not-seen-before-kw-block177 [
    i64 0, label %"kw-:FILTERBEDINGUNG-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block177:                      ; preds = %"kw-:VORBEDINGUNG-test"
  br label %advance-arg-idx-block

"kw-:FILTERBEDINGUNG-test":                       ; preds = %"kw-:VORBEDINGUNG-test"
  %99 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 138), align 16
  %100 = call i64 @cc_matchKeywordOnce({}* %99, {}* %vaarg165, {}* %G156195.0)
  switch i64 %100, label %not-seen-before-kw-block180 [
    i64 0, label %"kw-:BEDINGUNG2-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block180:                      ; preds = %"kw-:FILTERBEDINGUNG-test"
  br label %advance-arg-idx-block

"kw-:BEDINGUNG2-test":                            ; preds = %"kw-:FILTERBEDINGUNG-test"
  %101 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 261), align 8
  %102 = call i64 @cc_matchKeywordOnce({}* %101, {}* %vaarg165, {}* %G156194.0)
  switch i64 %102, label %not-seen-before-kw-block183 [
    i64 0, label %"kw-:LISPFUNKTIONSNAME-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block183:                      ; preds = %"kw-:BEDINGUNG2-test"
  br label %advance-arg-idx-block

"kw-:LISPFUNKTIONSNAME-test":                     ; preds = %"kw-:BEDINGUNG2-test"
  %103 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 178), align 16
  %104 = call i64 @cc_matchKeywordOnce({}* %103, {}* %vaarg165, {}* %G156193.0)
  switch i64 %104, label %not-seen-before-kw-block186 [
    i64 0, label %next-kw-block187
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block186:                      ; preds = %"kw-:LISPFUNKTIONSNAME-test"
  br label %advance-arg-idx-block

next-kw-block187:                                 ; preds = %"kw-:LISPFUNKTIONSNAME-test"
  %105 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest189:                                   ; preds = %tag
  %106 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest191 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest191:                                   ; preds = %normal-dest189
  %ptrtoint = ptrtoint {}* %107 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %107, i64 1, {}* %vaarg160, {}* null, {}* null, {}* null)
          to label %normal-dest194 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest194:                                   ; preds = %normal-dest191
  %.elt1234 = extractvalue { {}*, i64 } %108, 0
  %.elt1236 = extractvalue { {}*, i64 } %108, 1
  %cond1112 = icmp eq i64 %.elt1236, 0
  %109 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156252.0 = select i1 %cond1112, {}* %109, {}* %.elt1234
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %111 = invoke {}* @cc_safe_fdefinition({}* %110)
          to label %normal-dest198 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest198:                                   ; preds = %normal-dest194
  %ptrtoint199 = ptrtoint {}* %111 to i64
  %entry-point-addr-uint200 = add i64 %ptrtoint199, 7
  %entry-point-addr201 = inttoptr i64 %entry-point-addr-uint200 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point202 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr201, align 8
  %112 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point202({}* %111, i64 1, {}* %wertebereichklasse.0, {}* null, {}* null, {}* null)
          to label %normal-dest205 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest205:                                   ; preds = %normal-dest198
  %.elt1238 = extractvalue { {}*, i64 } %112, 0
  %.elt1240 = extractvalue { {}*, i64 } %112, 1
  %cond1113 = icmp eq i64 %.elt1240, 0
  %113 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156253.0 = select i1 %cond1113, {}* %113, {}* %.elt1238
  %114 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %115 = invoke {}* @cc_safe_fdefinition({}* %114)
          to label %normal-dest212 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest212:                                   ; preds = %normal-dest205
  %ptrtoint213 = ptrtoint {}* %115 to i64
  %entry-point-addr-uint214 = add i64 %ptrtoint213, 7
  %entry-point-addr215 = inttoptr i64 %entry-point-addr-uint214 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point216 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr215, align 8
  %116 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point216({}* %115, i64 1, {}* %attribut.0, {}* null, {}* null, {}* null)
          to label %normal-dest219 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest219:                                   ; preds = %normal-dest212
  %.elt1242 = extractvalue { {}*, i64 } %116, 0
  %.elt1244 = extractvalue { {}*, i64 } %116, 1
  %cond1114 = icmp eq i64 %.elt1244, 0
  %117 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156254.0 = select i1 %cond1114, {}* %117, {}* %.elt1242
  %118 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %119 = invoke {}* @cc_safe_fdefinition({}* %118)
          to label %normal-dest226 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest226:                                   ; preds = %normal-dest219
  %ptrtoint227 = ptrtoint {}* %119 to i64
  %entry-point-addr-uint228 = add i64 %ptrtoint227, 7
  %entry-point-addr229 = inttoptr i64 %entry-point-addr-uint228 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point230 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr229, align 8
  %120 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point230({}* %119, i64 1, {}* %.vorbedingung.2, {}* null, {}* null, {}* null)
          to label %normal-dest233 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest233:                                   ; preds = %normal-dest226
  %.elt1246 = extractvalue { {}*, i64 } %120, 0
  %.elt1248 = extractvalue { {}*, i64 } %120, 1
  %cond1115 = icmp eq i64 %.elt1248, 0
  %121 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156255.0 = select i1 %cond1115, {}* %121, {}* %.elt1246
  %122 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest240 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest240:                                   ; preds = %normal-dest233
  %ptrtoint241 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint242 = add i64 %ptrtoint241, 7
  %entry-point-addr243 = inttoptr i64 %entry-point-addr-uint242 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point244 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr243, align 8
  %124 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point244({}* %123, i64 1, {}* %.filterbedingung.2, {}* null, {}* null, {}* null)
          to label %normal-dest247 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest247:                                   ; preds = %normal-dest240
  %.elt1250 = extractvalue { {}*, i64 } %124, 0
  %.elt1252 = extractvalue { {}*, i64 } %124, 1
  %cond1116 = icmp eq i64 %.elt1252, 0
  %125 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156256.0 = select i1 %cond1116, {}* %125, {}* %.elt1250
  %126 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest254:                                   ; preds = %normal-dest247
  %ptrtoint255 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint256 = add i64 %ptrtoint255, 7
  %entry-point-addr257 = inttoptr i64 %entry-point-addr-uint256 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point258 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr257, align 8
  %128 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point258({}* %127, i64 1, {}* %bedingung2.0, {}* null, {}* null, {}* null)
          to label %normal-dest261 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest261:                                   ; preds = %normal-dest254
  %.elt1254 = extractvalue { {}*, i64 } %128, 0
  %.elt1256 = extractvalue { {}*, i64 } %128, 1
  %cond1117 = icmp eq i64 %.elt1256, 0
  %129 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156257.0 = select i1 %cond1117, {}* %129, {}* %.elt1254
  %ptrtoint267 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint268 = add i64 %ptrtoint267, 7
  %entry-point-addr269 = inttoptr i64 %entry-point-addr-uint268 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point270 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr269, align 8
  %130 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point270({}* %10, i64 7, {}* %G156252.0, {}* %G156253.0, {}* %G156254.0, {}* %G156255.0, {}* %G156256.0, {}* %G156257.0, {}* %129)
          to label %normal-dest273 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest273:                                   ; preds = %normal-dest261
  %.elt1258 = extractvalue { {}*, i64 } %130, 0
  %.elt1260 = extractvalue { {}*, i64 } %130, 1
  %cond1118 = icmp eq i64 %.elt1260, 0
  %131 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156190.1 = select i1 %cond1118, {}* %131, {}* %.elt1258
  br label %tag48

normal-dest280:                                   ; preds = %tag1
  %ptrtoint281 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint282 = add i64 %ptrtoint281, 7
  %entry-point-addr283 = inttoptr i64 %entry-point-addr-uint282 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point284 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr283, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point284({}* %12, i64 4, {}* %vaarg160, {}* %attribut.0, {}* %wertebereichklasse.0, {}* %klasse2.0)
          to label %normal-dest287 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest287:                                   ; preds = %normal-dest280
  %.elt1134 = extractvalue { {}*, i64 } %132, 0
  %.elt1136 = extractvalue { {}*, i64 } %132, 1
  %cond = icmp eq i64 %.elt1136, 0
  %133 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %object.0 = select i1 %cond, {}* %133, {}* %.elt1134
  %134 = icmp eq {}* %object.0, %133
  %.val1349 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G156415.0 = select i1 %134, {}* %.val1349, {}* %133
  %135 = icmp eq {}* %G156415.0, %133
  br i1 %135, label %tag59, label %tag18

header-check-br296:                               ; preds = %tag69
  %irc-bit-cast300 = bitcast {}* %53 to i8*
  %gep301 = getelementptr inbounds i8, i8* %irc-bit-cast300, i64 -9
  %irc-bit-cast302 = bitcast i8* %gep301 to i64*
  %136 = load i64, i64* %irc-bit-cast302, align 8
  %137 = add i64 %136, -1309
  %138 = lshr i64 %137, 3
  %139 = shl i64 %137, 61
  %140 = or i64 %138, %139
  switch i64 %140, label %tag118 [
    i64 2, label %tag22
    i64 4, label %tag22
    i64 5, label %tag22
    i64 0, label %tag22
  ]

normal-dest333:                                   ; preds = %tag18
  %141 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 293), align 8
  %142 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 294), align 16
  %ptrtoint334 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint335 = add i64 %ptrtoint334, 7
  %entry-point-addr336 = inttoptr i64 %entry-point-addr-uint335 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point337 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr336, align 8
  %143 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point337({}* %18, i64 2, {}* %141, {}* %142, {}* null, {}* null)
          to label %normal-dest340 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest340:                                   ; preds = %normal-dest333
  %.elt1138 = extractvalue { {}*, i64 } %143, 0
  %144 = ptrtoint {}* %.elt1138 to i64
  %.elt1140 = extractvalue { {}*, i64 } %143, 1
  br label %tag75

header-check-br341:                               ; preds = %tag62
  %irc-bit-cast345 = bitcast {}* %vaarg160 to i8*
  %gep346 = getelementptr inbounds i8, i8* %irc-bit-cast345, i64 -9
  %irc-bit-cast347 = bitcast i8* %gep346 to i64*
  %145 = load i64, i64* %irc-bit-cast347, align 8
  %146 = add i64 %145, -1309
  %147 = lshr i64 %146, 3
  %148 = shl i64 %146, 61
  %149 = or i64 %147, %148
  switch i64 %149, label %tag3 [
    i64 2, label %tag85
    i64 4, label %tag85
    i64 5, label %tag85
    i64 0, label %tag85
  ]

header-check-br348:                               ; preds = %tag122
  %irc-bit-cast352 = bitcast {}* %57 to i8*
  %gep353 = getelementptr inbounds i8, i8* %irc-bit-cast352, i64 -9
  %irc-bit-cast354 = bitcast i8* %gep353 to i64*
  %150 = load i64, i64* %irc-bit-cast354, align 8
  %151 = add i64 %150, -1309
  %152 = lshr i64 %151, 3
  %153 = shl i64 %151, 61
  %154 = or i64 %152, %153
  switch i64 %154, label %tag63 [
    i64 2, label %tag132
    i64 4, label %tag132
    i64 5, label %tag132
    i64 0, label %tag132
  ]

normal-dest356:                                   ; preds = %tag22
  %ptrtoint357 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint358 = add i64 %ptrtoint357, 7
  %entry-point-addr359 = inttoptr i64 %entry-point-addr-uint358 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point360 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr359, align 8
  %155 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point360({}* %20, i64 2, {}* nonnull %vaarg160, {}* nonnull %53, {}* null, {}* null)
          to label %normal-dest363 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest363:                                   ; preds = %normal-dest356
  %.elt1282 = extractvalue { {}*, i64 } %155, 0
  %.elt1284 = extractvalue { {}*, i64 } %155, 1
  %cond1121 = icmp eq i64 %.elt1284, 0
  %156 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156360.1 = select i1 %cond1121, {}* %156, {}* %.elt1282
  br label %tag13

header-check-br369:                               ; preds = %tag28
  %irc-bit-cast373 = bitcast {}* %84 to i8*
  %gep374 = getelementptr inbounds i8, i8* %irc-bit-cast373, i64 -9
  %irc-bit-cast375 = bitcast i8* %gep374 to i64*
  %157 = load i64, i64* %irc-bit-cast375, align 8
  %158 = add i64 %157, -1309
  %159 = lshr i64 %158, 3
  %160 = shl i64 %158, 61
  %161 = or i64 %159, %160
  switch i64 %161, label %tag3 [
    i64 2, label %tag68
    i64 4, label %tag68
    i64 5, label %tag68
    i64 0, label %tag68
  ]

normal-dest409:                                   ; preds = %tag36
  %162 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %163 = invoke {}* @cc_safe_fdefinition({}* %162)
          to label %normal-dest411 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest411:                                   ; preds = %normal-dest409
  %ptrtoint412 = ptrtoint {}* %163 to i64
  %entry-point-addr-uint413 = add i64 %ptrtoint412, 7
  %entry-point-addr414 = inttoptr i64 %entry-point-addr-uint413 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point415 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr414, align 8
  %164 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point415({}* %163, i64 1, {}* %vaarg160, {}* null, {}* null, {}* null)
          to label %normal-dest418 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest418:                                   ; preds = %normal-dest411
  %.elt1178 = extractvalue { {}*, i64 } %164, 0
  %.elt1180 = extractvalue { {}*, i64 } %164, 1
  %cond1098 = icmp eq i64 %.elt1180, 0
  %165 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156338.0 = select i1 %cond1098, {}* %165, {}* %.elt1178
  %166 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %167 = invoke {}* @cc_safe_fdefinition({}* %166)
          to label %normal-dest425 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest425:                                   ; preds = %normal-dest418
  %ptrtoint426 = ptrtoint {}* %167 to i64
  %entry-point-addr-uint427 = add i64 %ptrtoint426, 7
  %entry-point-addr428 = inttoptr i64 %entry-point-addr-uint427 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point429 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr428, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point429({}* %167, i64 1, {}* %wertebereichklasse.0, {}* null, {}* null, {}* null)
          to label %normal-dest432 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest432:                                   ; preds = %normal-dest425
  %.elt1182 = extractvalue { {}*, i64 } %168, 0
  %.elt1184 = extractvalue { {}*, i64 } %168, 1
  %cond1099 = icmp eq i64 %.elt1184, 0
  %169 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156339.0 = select i1 %cond1099, {}* %169, {}* %.elt1182
  %170 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %171 = invoke {}* @cc_safe_fdefinition({}* %170)
          to label %normal-dest439 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest439:                                   ; preds = %normal-dest432
  %ptrtoint440 = ptrtoint {}* %171 to i64
  %entry-point-addr-uint441 = add i64 %ptrtoint440, 7
  %entry-point-addr442 = inttoptr i64 %entry-point-addr-uint441 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point443 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr442, align 8
  %172 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point443({}* %171, i64 1, {}* %attribut.0, {}* null, {}* null, {}* null)
          to label %normal-dest446 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest446:                                   ; preds = %normal-dest439
  %.elt1186 = extractvalue { {}*, i64 } %172, 0
  %.elt1188 = extractvalue { {}*, i64 } %172, 1
  %cond1100 = icmp eq i64 %.elt1188, 0
  %173 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156340.0 = select i1 %cond1100, {}* %173, {}* %.elt1186
  %174 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %175 = invoke {}* @cc_safe_fdefinition({}* %174)
          to label %normal-dest453 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest453:                                   ; preds = %normal-dest446
  %ptrtoint454 = ptrtoint {}* %175 to i64
  %entry-point-addr-uint455 = add i64 %ptrtoint454, 7
  %entry-point-addr456 = inttoptr i64 %entry-point-addr-uint455 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point457 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr456, align 8
  %176 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point457({}* %175, i64 1, {}* %.vorbedingung.2, {}* null, {}* null, {}* null)
          to label %normal-dest460 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest460:                                   ; preds = %normal-dest453
  %.elt1190 = extractvalue { {}*, i64 } %176, 0
  %.elt1192 = extractvalue { {}*, i64 } %176, 1
  %cond1101 = icmp eq i64 %.elt1192, 0
  %177 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156341.0 = select i1 %cond1101, {}* %177, {}* %.elt1190
  %178 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %179 = invoke {}* @cc_safe_fdefinition({}* %178)
          to label %normal-dest467 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest467:                                   ; preds = %normal-dest460
  %ptrtoint468 = ptrtoint {}* %179 to i64
  %entry-point-addr-uint469 = add i64 %ptrtoint468, 7
  %entry-point-addr470 = inttoptr i64 %entry-point-addr-uint469 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point471 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr470, align 8
  %180 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point471({}* %179, i64 1, {}* %.filterbedingung.2, {}* null, {}* null, {}* null)
          to label %normal-dest474 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest474:                                   ; preds = %normal-dest467
  %.elt1194 = extractvalue { {}*, i64 } %180, 0
  %.elt1196 = extractvalue { {}*, i64 } %180, 1
  %cond1102 = icmp eq i64 %.elt1196, 0
  %181 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156342.0 = select i1 %cond1102, {}* %181, {}* %.elt1194
  %ptrtoint480 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint481 = add i64 %ptrtoint480, 7
  %entry-point-addr482 = inttoptr i64 %entry-point-addr-uint481 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point483 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr482, align 8
  %182 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point483({}* %23, i64 6, {}* %G156338.0, {}* %G156339.0, {}* %G156340.0, {}* %G156341.0, {}* %G156342.0, {}* %181)
          to label %normal-dest486 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest486:                                   ; preds = %normal-dest474
  %.elt1198 = extractvalue { {}*, i64 } %182, 0
  %.elt1200 = extractvalue { {}*, i64 } %182, 1
  %cond1103 = icmp eq i64 %.elt1200, 0
  %183 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156190.2 = select i1 %cond1103, {}* %183, {}* %.elt1198
  br label %tag48

normal-dest510:                                   ; preds = %tag42
  %ptrtoint513 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint514 = add i64 %ptrtoint513, 7
  %entry-point-addr515 = inttoptr i64 %entry-point-addr-uint514 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point516 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr515, align 8
  %184 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point516({}* %27, i64 2, {}* nonnull %vaarg160, {}* nonnull %32, {}* null, {}* null)
          to label %normal-dest519 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest519:                                   ; preds = %normal-dest510
  %.elt1290 = extractvalue { {}*, i64 } %184, 0
  %.elt1292 = extractvalue { {}*, i64 } %184, 1
  %cond1122 = icmp eq i64 %.elt1292, 0
  %185 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156397.1 = select i1 %cond1122, {}* %185, {}* %.elt1290
  br label %tag104

header-check-br527:                               ; preds = %tag151
  %irc-bit-cast531 = bitcast {}* %32 to i8*
  %gep532 = getelementptr inbounds i8, i8* %irc-bit-cast531, i64 -9
  %irc-bit-cast533 = bitcast i8* %gep532 to i64*
  %186 = load i64, i64* %irc-bit-cast533, align 8
  %187 = add i64 %186, -1309
  %188 = lshr i64 %187, 3
  %189 = shl i64 %187, 61
  %190 = or i64 %188, %189
  switch i64 %190, label %tag96 [
    i64 2, label %tag42
    i64 4, label %tag42
    i64 5, label %tag42
    i64 0, label %tag42
  ]

normal-dest541:                                   ; preds = %tag48
  %191 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %192 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %193 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint542 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint543 = add i64 %ptrtoint542, 7
  %entry-point-addr544 = inttoptr i64 %entry-point-addr-uint543 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point545 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr544, align 8
  %194 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point545({}* %29, i64 5, {}* %vaarg, {}* %191, {}* %G156190.0, {}* %192, {}* %193)
          to label %normal-dest548 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest548:                                   ; preds = %normal-dest541
  %195 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %196 = invoke {}* @cc_safe_fdefinition({}* %195)
          to label %normal-dest554 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest554:                                   ; preds = %normal-dest548
  %197 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %198 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %199 = invoke {}* @cc_safe_fdefinition({}* %198)
          to label %normal-dest556 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest556:                                   ; preds = %normal-dest554
  %ptrtoint557 = ptrtoint {}* %199 to i64
  %entry-point-addr-uint558 = add i64 %ptrtoint557, 7
  %entry-point-addr559 = inttoptr i64 %entry-point-addr-uint558 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point560 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr559, align 8
  %200 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point560({}* %199, i64 1, {}* %G156190.0, {}* null, {}* null, {}* null)
          to label %normal-dest563 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest563:                                   ; preds = %normal-dest556
  %.elt1170 = extractvalue { {}*, i64 } %200, 0
  %.elt1172 = extractvalue { {}*, i64 } %200, 1
  %cond1097 = icmp eq i64 %.elt1172, 0
  %201 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156237.0 = select i1 %cond1097, {}* %201, {}* %.elt1170
  %202 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %203 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint569 = ptrtoint {}* %196 to i64
  %entry-point-addr-uint570 = add i64 %ptrtoint569, 7
  %entry-point-addr571 = inttoptr i64 %entry-point-addr-uint570 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point572 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr571, align 8
  %204 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point572({}* %196, i64 5, {}* %vaarg, {}* %197, {}* %G156237.0, {}* %202, {}* %203)
          to label %normal-dest575 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest575:                                   ; preds = %normal-dest563
  %205 = load i64, i64* bitcast ({}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11) to i64*), align 8
  br label %tag75

header-check-br582:                               ; preds = %tag137
  %irc-bit-cast586 = bitcast {}* %vaarg160 to i8*
  %gep587 = getelementptr inbounds i8, i8* %irc-bit-cast586, i64 -9
  %irc-bit-cast588 = bitcast i8* %gep587 to i64*
  %206 = load i64, i64* %irc-bit-cast588, align 8
  %207 = add i64 %206, -1309
  %208 = lshr i64 %207, 3
  %209 = shl i64 %207, 61
  %210 = or i64 %208, %209
  switch i64 %210, label %tag118 [
    i64 2, label %tag70
    i64 4, label %tag70
    i64 5, label %tag70
    i64 0, label %tag70
  ]

normal-dest621:                                   ; preds = %tag68
  %ptrtoint622 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint623 = add i64 %ptrtoint622, 7
  %entry-point-addr624 = inttoptr i64 %entry-point-addr-uint623 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point625 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr624, align 8
  %211 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point625({}* %40, i64 2, {}* nonnull %vaarg160, {}* nonnull %84, {}* null, {}* null)
          to label %normal-dest628 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest628:                                   ; preds = %normal-dest621
  %.elt1298 = extractvalue { {}*, i64 } %211, 0
  %.elt1300 = extractvalue { {}*, i64 } %211, 1
  %cond1123 = icmp eq i64 %.elt1300, 0
  %212 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156443.1 = select i1 %cond1123, {}* %212, {}* %.elt1298
  br label %tag3

header-check-br637:                               ; preds = %tag33
  %irc-bit-cast641 = bitcast {}* %36 to i8*
  %gep642 = getelementptr inbounds i8, i8* %irc-bit-cast641, i64 -9
  %irc-bit-cast643 = bitcast i8* %gep642 to i64*
  %213 = load i64, i64* %irc-bit-cast643, align 8
  %214 = add i64 %213, -1309
  %215 = lshr i64 %214, 3
  %216 = shl i64 %214, 61
  %217 = or i64 %215, %216
  switch i64 %217, label %tag48 [
    i64 2, label %tag81
    i64 4, label %tag81
    i64 5, label %tag81
    i64 0, label %tag81
  ]

normal-dest661:                                   ; preds = %tag81
  %ptrtoint662 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint663 = add i64 %ptrtoint662, 7
  %entry-point-addr664 = inttoptr i64 %entry-point-addr-uint663 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point665 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr664, align 8
  %218 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point665({}* %48, i64 2, {}* nonnull %vaarg160, {}* nonnull %36, {}* null, {}* null)
          to label %normal-dest668 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest668:                                   ; preds = %normal-dest661
  %.elt1266 = extractvalue { {}*, i64 } %218, 0
  %.elt1268 = extractvalue { {}*, i64 } %218, 1
  %cond1119 = icmp eq i64 %.elt1268, 0
  %219 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156278.1 = select i1 %cond1119, {}* %219, {}* %.elt1266
  br label %tag121

header-check-br714:                               ; preds = %tag130
  %irc-bit-cast718 = bitcast {}* %vaarg160 to i8*
  %gep719 = getelementptr inbounds i8, i8* %irc-bit-cast718, i64 -9
  %irc-bit-cast720 = bitcast i8* %gep719 to i64*
  %220 = load i64, i64* %irc-bit-cast720, align 8
  %221 = add i64 %220, -1309
  %222 = lshr i64 %221, 3
  %223 = shl i64 %221, 61
  %224 = or i64 %222, %223
  switch i64 %224, label %tag63 [
    i64 2, label %tag38
    i64 4, label %tag38
    i64 5, label %tag38
    i64 0, label %tag38
  ]

header-check-br792:                               ; preds = %tag91
  %irc-bit-cast796 = bitcast {}* %vaarg160 to i8*
  %gep797 = getelementptr inbounds i8, i8* %irc-bit-cast796, i64 -9
  %irc-bit-cast798 = bitcast i8* %gep797 to i64*
  %225 = load i64, i64* %irc-bit-cast798, align 8
  %226 = add i64 %225, -1309
  %227 = lshr i64 %226, 3
  %228 = shl i64 %226, 61
  %229 = or i64 %227, %228
  switch i64 %229, label %tag48 [
    i64 2, label %tag33
    i64 4, label %tag33
    i64 5, label %tag33
    i64 0, label %tag33
  ]

normal-dest800:                                   ; preds = %tag129
  %230 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %231 = invoke {}* @cc_safe_fdefinition({}* %230)
          to label %normal-dest802 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest802:                                   ; preds = %normal-dest800
  %ptrtoint803 = ptrtoint {}* %231 to i64
  %entry-point-addr-uint804 = add i64 %ptrtoint803, 7
  %entry-point-addr805 = inttoptr i64 %entry-point-addr-uint804 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point806 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr805, align 8
  %232 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point806({}* %231, i64 1, {}* %vaarg160, {}* null, {}* null, {}* null)
          to label %normal-dest809 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest809:                                   ; preds = %normal-dest802
  %.elt1142 = extractvalue { {}*, i64 } %232, 0
  %.elt1144 = extractvalue { {}*, i64 } %232, 1
  %cond1091 = icmp eq i64 %.elt1144, 0
  %233 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156375.0 = select i1 %cond1091, {}* %233, {}* %.elt1142
  %234 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %235 = invoke {}* @cc_safe_fdefinition({}* %234)
          to label %normal-dest816 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest816:                                   ; preds = %normal-dest809
  %ptrtoint817 = ptrtoint {}* %235 to i64
  %entry-point-addr-uint818 = add i64 %ptrtoint817, 7
  %entry-point-addr819 = inttoptr i64 %entry-point-addr-uint818 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point820 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr819, align 8
  %236 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point820({}* %235, i64 1, {}* %attribut.0, {}* null, {}* null, {}* null)
          to label %normal-dest823 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest823:                                   ; preds = %normal-dest816
  %.elt1146 = extractvalue { {}*, i64 } %236, 0
  %.elt1148 = extractvalue { {}*, i64 } %236, 1
  %cond1092 = icmp eq i64 %.elt1148, 0
  %237 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156376.0 = select i1 %cond1092, {}* %237, {}* %.elt1146
  %238 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %239 = invoke {}* @cc_safe_fdefinition({}* %238)
          to label %normal-dest830 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest830:                                   ; preds = %normal-dest823
  %ptrtoint831 = ptrtoint {}* %239 to i64
  %entry-point-addr-uint832 = add i64 %ptrtoint831, 7
  %entry-point-addr833 = inttoptr i64 %entry-point-addr-uint832 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point834 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr833, align 8
  %240 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point834({}* %239, i64 1, {}* %wertebereichklasse.0, {}* null, {}* null, {}* null)
          to label %normal-dest837 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest837:                                   ; preds = %normal-dest830
  %.elt1150 = extractvalue { {}*, i64 } %240, 0
  %.elt1152 = extractvalue { {}*, i64 } %240, 1
  %cond1093 = icmp eq i64 %.elt1152, 0
  %241 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156377.0 = select i1 %cond1093, {}* %241, {}* %.elt1150
  %242 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %243 = invoke {}* @cc_safe_fdefinition({}* %242)
          to label %normal-dest844 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest844:                                   ; preds = %normal-dest837
  %ptrtoint845 = ptrtoint {}* %243 to i64
  %entry-point-addr-uint846 = add i64 %ptrtoint845, 7
  %entry-point-addr847 = inttoptr i64 %entry-point-addr-uint846 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point848 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr847, align 8
  %244 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point848({}* %243, i64 1, {}* %.vorbedingung.2, {}* null, {}* null, {}* null)
          to label %normal-dest851 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest851:                                   ; preds = %normal-dest844
  %.elt1154 = extractvalue { {}*, i64 } %244, 0
  %.elt1156 = extractvalue { {}*, i64 } %244, 1
  %cond1094 = icmp eq i64 %.elt1156, 0
  %245 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156378.0 = select i1 %cond1094, {}* %245, {}* %.elt1154
  %246 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %247 = invoke {}* @cc_safe_fdefinition({}* %246)
          to label %normal-dest858 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest858:                                   ; preds = %normal-dest851
  %ptrtoint859 = ptrtoint {}* %247 to i64
  %entry-point-addr-uint860 = add i64 %ptrtoint859, 7
  %entry-point-addr861 = inttoptr i64 %entry-point-addr-uint860 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point862 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr861, align 8
  %248 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point862({}* %247, i64 1, {}* %.filterbedingung.2, {}* null, {}* null, {}* null)
          to label %normal-dest865 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest865:                                   ; preds = %normal-dest858
  %.elt1158 = extractvalue { {}*, i64 } %248, 0
  %.elt1160 = extractvalue { {}*, i64 } %248, 1
  %cond1095 = icmp eq i64 %.elt1160, 0
  %249 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156379.0 = select i1 %cond1095, {}* %249, {}* %.elt1158
  %ptrtoint871 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint872 = add i64 %ptrtoint871, 7
  %entry-point-addr873 = inttoptr i64 %entry-point-addr-uint872 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point874 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr873, align 8
  %250 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point874({}* %63, i64 6, {}* %G156375.0, {}* %G156376.0, {}* %G156377.0, {}* %G156378.0, {}* %G156379.0, {}* %249)
          to label %normal-dest877 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest877:                                   ; preds = %normal-dest865
  %.elt1162 = extractvalue { {}*, i64 } %250, 0
  %.elt1164 = extractvalue { {}*, i64 } %250, 1
  %cond1096 = icmp eq i64 %.elt1164, 0
  %251 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156190.3 = select i1 %cond1096, {}* %251, {}* %.elt1162
  br label %tag48

header-check-br884:                               ; preds = %tag92
  %irc-bit-cast888 = bitcast {}* %vaarg160 to i8*
  %gep889 = getelementptr inbounds i8, i8* %irc-bit-cast888, i64 -9
  %irc-bit-cast890 = bitcast i8* %gep889 to i64*
  %252 = load i64, i64* %irc-bit-cast890, align 8
  %253 = add i64 %252, -1309
  %254 = lshr i64 %253, 3
  %255 = shl i64 %253, 61
  %256 = or i64 %254, %255
  switch i64 %256, label %tag96 [
    i64 2, label %tag56
    i64 4, label %tag56
    i64 5, label %tag56
    i64 0, label %tag56
  ]

normal-dest892:                                   ; preds = %tag132
  %ptrtoint893 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint894 = add i64 %ptrtoint893, 7
  %entry-point-addr895 = inttoptr i64 %entry-point-addr-uint894 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point896 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr895, align 8
  %257 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point896({}* %66, i64 2, {}* nonnull %vaarg160, {}* nonnull %57, {}* null, {}* null)
          to label %normal-dest899 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest899:                                   ; preds = %normal-dest892
  %.elt1274 = extractvalue { {}*, i64 } %257, 0
  %.elt1276 = extractvalue { {}*, i64 } %257, 1
  %cond1120 = icmp eq i64 %.elt1276, 0
  %258 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156323.1 = select i1 %cond1120, {}* %258, {}* %.elt1274
  br label %tag79

normal-dest906:                                   ; preds = %tag133
  %259 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %260 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %261 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint907 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint908 = add i64 %ptrtoint907, 7
  %entry-point-addr909 = inttoptr i64 %entry-point-addr-uint908 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point910 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr909, align 8
  %262 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point910({}* %68, i64 5, {}* %vaarg, {}* %259, {}* %.lispfunktionsname.2, {}* %260, {}* %261)
          to label %normal-dest913 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest913:                                   ; preds = %normal-dest906
  %263 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %264 = invoke {}* @cc_safe_fdefinition({}* %263)
          to label %normal-dest919 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest919:                                   ; preds = %normal-dest913
  %265 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %266 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %267 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint920 = ptrtoint {}* %264 to i64
  %entry-point-addr-uint921 = add i64 %ptrtoint920, 7
  %entry-point-addr922 = inttoptr i64 %entry-point-addr-uint921 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point923 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr922, align 8
  %268 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point923({}* %264, i64 5, {}* %vaarg, {}* %265, {}* %.lispfunktionsname.2, {}* %266, {}* %267)
          to label %normal-dest926 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest926:                                   ; preds = %normal-dest919
  %269 = load i64, i64* bitcast ({}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11) to i64*), align 8
  br label %tag75

normal-dest934:                                   ; preds = %tag134
  %270 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %271 = invoke {}* @cc_safe_fdefinition({}* %270)
          to label %normal-dest936 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest936:                                   ; preds = %normal-dest934
  %ptrtoint937 = ptrtoint {}* %271 to i64
  %entry-point-addr-uint938 = add i64 %ptrtoint937, 7
  %entry-point-addr939 = inttoptr i64 %entry-point-addr-uint938 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point940 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr939, align 8
  %272 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point940({}* %271, i64 1, {}* %vaarg160, {}* null, {}* null, {}* null)
          to label %normal-dest943 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest943:                                   ; preds = %normal-dest936
  %.elt1202 = extractvalue { {}*, i64 } %272, 0
  %.elt1204 = extractvalue { {}*, i64 } %272, 1
  %cond1104 = icmp eq i64 %.elt1204, 0
  %273 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156293.0 = select i1 %cond1104, {}* %273, {}* %.elt1202
  %274 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %275 = invoke {}* @cc_safe_fdefinition({}* %274)
          to label %normal-dest950 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest950:                                   ; preds = %normal-dest943
  %ptrtoint951 = ptrtoint {}* %275 to i64
  %entry-point-addr-uint952 = add i64 %ptrtoint951, 7
  %entry-point-addr953 = inttoptr i64 %entry-point-addr-uint952 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point954 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr953, align 8
  %276 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point954({}* %275, i64 1, {}* %wertebereichklasse.0, {}* null, {}* null, {}* null)
          to label %normal-dest957 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest957:                                   ; preds = %normal-dest950
  %.elt1206 = extractvalue { {}*, i64 } %276, 0
  %.elt1208 = extractvalue { {}*, i64 } %276, 1
  %cond1105 = icmp eq i64 %.elt1208, 0
  %277 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156294.0 = select i1 %cond1105, {}* %277, {}* %.elt1206
  %278 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %279 = invoke {}* @cc_safe_fdefinition({}* %278)
          to label %normal-dest964 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest964:                                   ; preds = %normal-dest957
  %ptrtoint965 = ptrtoint {}* %279 to i64
  %entry-point-addr-uint966 = add i64 %ptrtoint965, 7
  %entry-point-addr967 = inttoptr i64 %entry-point-addr-uint966 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point968 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr967, align 8
  %280 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point968({}* %279, i64 1, {}* %attribut.0, {}* null, {}* null, {}* null)
          to label %normal-dest971 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest971:                                   ; preds = %normal-dest964
  %.elt1210 = extractvalue { {}*, i64 } %280, 0
  %.elt1212 = extractvalue { {}*, i64 } %280, 1
  %cond1106 = icmp eq i64 %.elt1212, 0
  %281 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156295.0 = select i1 %cond1106, {}* %281, {}* %.elt1210
  %282 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %283 = invoke {}* @cc_safe_fdefinition({}* %282)
          to label %normal-dest978 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest978:                                   ; preds = %normal-dest971
  %ptrtoint979 = ptrtoint {}* %283 to i64
  %entry-point-addr-uint980 = add i64 %ptrtoint979, 7
  %entry-point-addr981 = inttoptr i64 %entry-point-addr-uint980 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point982 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr981, align 8
  %284 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point982({}* %283, i64 1, {}* %klasse2.0, {}* null, {}* null, {}* null)
          to label %normal-dest985 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest985:                                   ; preds = %normal-dest978
  %.elt1214 = extractvalue { {}*, i64 } %284, 0
  %.elt1216 = extractvalue { {}*, i64 } %284, 1
  %cond1107 = icmp eq i64 %.elt1216, 0
  %285 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156296.0 = select i1 %cond1107, {}* %285, {}* %.elt1214
  %286 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %287 = invoke {}* @cc_safe_fdefinition({}* %286)
          to label %normal-dest992 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest992:                                   ; preds = %normal-dest985
  %ptrtoint993 = ptrtoint {}* %287 to i64
  %entry-point-addr-uint994 = add i64 %ptrtoint993, 7
  %entry-point-addr995 = inttoptr i64 %entry-point-addr-uint994 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point996 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr995, align 8
  %288 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point996({}* %287, i64 1, {}* %.vorbedingung.2, {}* null, {}* null, {}* null)
          to label %normal-dest999 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest999:                                   ; preds = %normal-dest992
  %.elt1218 = extractvalue { {}*, i64 } %288, 0
  %.elt1220 = extractvalue { {}*, i64 } %288, 1
  %cond1108 = icmp eq i64 %.elt1220, 0
  %289 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156297.0 = select i1 %cond1108, {}* %289, {}* %.elt1218
  %290 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %291 = invoke {}* @cc_safe_fdefinition({}* %290)
          to label %normal-dest1006 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1006:                                  ; preds = %normal-dest999
  %ptrtoint1007 = ptrtoint {}* %291 to i64
  %entry-point-addr-uint1008 = add i64 %ptrtoint1007, 7
  %entry-point-addr1009 = inttoptr i64 %entry-point-addr-uint1008 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1010 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1009, align 8
  %292 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1010({}* %291, i64 1, {}* %.filterbedingung.2, {}* null, {}* null, {}* null)
          to label %normal-dest1013 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1013:                                  ; preds = %normal-dest1006
  %.elt1222 = extractvalue { {}*, i64 } %292, 0
  %.elt1224 = extractvalue { {}*, i64 } %292, 1
  %cond1109 = icmp eq i64 %.elt1224, 0
  %293 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156298.0 = select i1 %cond1109, {}* %293, {}* %.elt1222
  %294 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %295 = invoke {}* @cc_safe_fdefinition({}* %294)
          to label %normal-dest1020 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1020:                                  ; preds = %normal-dest1013
  %ptrtoint1021 = ptrtoint {}* %295 to i64
  %entry-point-addr-uint1022 = add i64 %ptrtoint1021, 7
  %entry-point-addr1023 = inttoptr i64 %entry-point-addr-uint1022 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1024 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1023, align 8
  %296 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1024({}* %295, i64 1, {}* %bedingung2.0, {}* null, {}* null, {}* null)
          to label %normal-dest1027 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1027:                                  ; preds = %normal-dest1020
  %.elt1226 = extractvalue { {}*, i64 } %296, 0
  %.elt1228 = extractvalue { {}*, i64 } %296, 1
  %cond1110 = icmp eq i64 %.elt1228, 0
  %297 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156299.0 = select i1 %cond1110, {}* %297, {}* %.elt1226
  %ptrtoint1033 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint1034 = add i64 %ptrtoint1033, 7
  %entry-point-addr1035 = inttoptr i64 %entry-point-addr-uint1034 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1036 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1035, align 8
  %298 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1036({}* %70, i64 8, {}* %G156293.0, {}* %G156294.0, {}* %G156295.0, {}* %G156296.0, {}* %G156297.0, {}* %G156298.0, {}* %G156299.0, {}* %297)
          to label %normal-dest1039 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1039:                                  ; preds = %normal-dest1027
  %.elt1230 = extractvalue { {}*, i64 } %298, 0
  %.elt1232 = extractvalue { {}*, i64 } %298, 1
  %cond1111 = icmp eq i64 %.elt1232, 0
  %299 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156190.4 = select i1 %cond1111, {}* %299, {}* %.elt1230
  br label %tag48
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !44 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G156529.0 = phi {}* [ %18, %header-check-br ], [ %G156529.1, %normal-dest54 ], [ %G156529.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 329), align 8
  %ptrtoint13 = ptrtoint {}* %G156529.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G156529.0, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 329), align 8
  %"closure->ZWE=HEILMITTEL_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 11252, i64 248, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 331), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 332), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 992 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 329), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 328), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156529.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156529.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !45 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc1819 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc1819:                                       ; preds = %13
  unreachable

tag2:                                             ; preds = %tag142, %normal-dest988, %tag218
  %.val1894 = phi {}* [ %214, %tag218 ], [ %382, %normal-dest988 ], [ %G156681.0, %tag142 ]
  %14 = phi {}* [ %G156681.0, %tag218 ], [ %.val1893.pre, %normal-dest988 ], [ %G156681.0, %tag142 ]
  %.in1707 = phi {}* [ %156, %tag218 ], [ %.in1706, %normal-dest988 ], [ %G156681.0, %tag142 ]
  %15 = bitcast {}* %.in1707 to i8*
  %16 = icmp eq {}* %123, %.in1707
  %G156661.0 = select i1 %16, {}* %14, {}* %.val1894
  %17 = icmp eq {}* %G156661.0, %.val1894
  br i1 %17, label %tag211, label %tag265

tag3:                                             ; preds = %tag15, %normal-dest555
  %18 = phi {}* [ %291, %normal-dest555 ], [ %.val1900, %tag15 ]
  %G156591.0 = phi {}* [ %G156591.1, %normal-dest555 ], [ %28, %tag15 ]
  %19 = icmp eq {}* %G156591.0, %18
  br i1 %19, label %tag3.tag188_crit_edge, label %tag8

tag3.tag188_crit_edge:                            ; preds = %tag3
  %.val1895.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag188

tag4:                                             ; preds = %tag16
  %20 = load {}*, {}** %228, align 8
  %.val1866.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag63

tag5:                                             ; preds = %tag382
  %21 = icmp eq {}* %G2095854471.0, %.val1876
  %G156878.0 = select i1 %21, {}* %.val1873, {}* %.val1876
  %22 = icmp eq {}* %G156878.0, %.val1876
  br i1 %22, label %tag91, label %tag320

tag8:                                             ; preds = %tag3, %tag188, %tag273
  %23 = phi {}* [ %190, %tag273 ], [ %18, %tag3 ], [ %135, %tag188 ]
  %G156563.0 = phi {}* [ %190, %tag273 ], [ %"%SUBLIST156508.01943", %tag3 ], [ %135, %tag188 ]
  %24 = icmp eq {}* %G156563.0, %23
  %.1799 = select i1 %24, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 291)
  br label %tag378

tag12:                                            ; preds = %tag12.lr.ph, %tag72
  %G156803.0 = phi {}* [ %.val18771957, %tag12.lr.ph ], [ %.val1877, %tag72 ]
  %25 = phi i1 [ %343, %tag12.lr.ph ], [ %70, %tag72 ]
  %26 = phi {}* [ %340, %tag12.lr.ph ], [ %65, %tag72 ]
  %"%SUBLIST156487.01960" = phi {}* [ %farg1, %tag12.lr.ph ], [ %68, %tag72 ]
  %27 = ptrtoint {}* %"%SUBLIST156487.01960" to i64
  %tag-only3951651 = and i64 %27, 7
  %consp-test396 = icmp eq i64 %tag-only3951651, 3
  br i1 %consp-test396, label %tag339, label %tag137

tag15:                                            ; preds = %tag285, %normal-dest1062, %tag153
  %.val1900 = phi {}* [ %98, %tag153 ], [ %392, %normal-dest1062 ], [ %G156620.0, %tag285 ]
  %28 = phi {}* [ %G156620.0, %tag153 ], [ %.val1899.pre, %normal-dest1062 ], [ %G156620.0, %tag285 ]
  %.in1688 = phi {}* [ %119, %tag153 ], [ %.in, %normal-dest1062 ], [ %G156620.0, %tag285 ]
  %29 = bitcast {}* %.in1688 to i8*
  %30 = icmp eq {}* %191, %.in1688
  %G156600.0 = select i1 %30, {}* %28, {}* %.val1900
  %31 = icmp eq {}* %G156600.0, %.val1900
  br i1 %31, label %tag356, label %tag3

tag16:                                            ; preds = %normal-dest1333, %tag16.outer
  br i1 %consp-test407, label %tag4, label %tag235

tag18:                                            ; preds = %header-check-br, %header-check-br, %header-check-br, %header-check-br
  %32 = ptrtoint {}* %.in1688 to i64
  %single-float-tag-only409 = and i64 %32, 7
  %fixnum-tag-only1686 = and i64 %32, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only1686, 0
  %test431 = icmp eq i64 %single-float-tag-only409, 1
  %or.cond1855 = and i1 %fixnump-test, %test431
  br i1 %or.cond1855, label %header-check-br428, label %tag188

tag143.outer:                                     ; preds = %tag143.outer.backedge, %tag143.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag143.outer.preheader ], [ %LENGTH.0.ph.be, %tag143.outer.backedge ]
  %SEQUENCE435.0.ph = phi {}* [ %farg1, %tag143.outer.preheader ], [ %G2095854471.0, %tag143.outer.backedge ]
  %33 = ptrtoint {}* %SEQUENCE435.0.ph to i64
  %tag-only8671608 = and i64 %33, 7
  %consp-test868 = icmp eq i64 %tag-only8671608, 3
  %34 = add i64 %33, 5
  %35 = inttoptr i64 %34 to {}**
  br label %tag143

tag27:                                            ; preds = %tag90, %normal-dest1487, %tag115
  %.val1888 = phi {}* [ %84, %tag115 ], [ %448, %normal-dest1487 ], [ %G156742.0, %tag90 ]
  %36 = phi {}* [ %G156742.0, %tag115 ], [ %.val1887.pre, %normal-dest1487 ], [ %G156742.0, %tag90 ]
  %.in1726 = phi {}* [ %102, %tag115 ], [ %.in1725, %normal-dest1487 ], [ %G156742.0, %tag90 ]
  %37 = bitcast {}* %.in1726 to i8*
  %38 = icmp eq {}* %110, %.in1726
  %G156722.0 = select i1 %38, {}* %36, {}* %.val1888
  %39 = icmp eq {}* %G156722.0, %.val1888
  br i1 %39, label %tag352, label %tag102

tag29:                                            ; preds = %tag382
  %40 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only4401610 = and i64 %40, 3
  %fixnump-test441 = icmp eq i64 %fixnum-tag-only4401610, 0
  br i1 %fixnump-test441, label %tag277, label %tag311

tag36:                                            ; preds = %tag70, %tag81
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 82), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest449 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag40:                                            ; preds = %tag191
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest465 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag49:                                            ; preds = %tag81
  %45 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 254), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest488 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag51:                                            ; preds = %tag294
  %47 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 78), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest505 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag55:                                            ; preds = %tag102.tag55_crit_edge, %header-check-br442, %header-check-br685, %tag113, %tag352
  %.val1883 = phi {}* [ %.val1883.pre, %tag102.tag55_crit_edge ], [ %36, %tag352 ], [ %36, %tag113 ], [ %36, %header-check-br685 ], [ %36, %header-check-br442 ]
  %49 = phi {}* [ %88, %tag102.tag55_crit_edge ], [ %.val1888, %tag352 ], [ %.val1888, %tag113 ], [ %.val1888, %header-check-br685 ], [ %.val1888, %header-check-br442 ]
  %50 = add i64 %85, 5
  %51 = inttoptr i64 %50 to {}**
  %52 = load {}*, {}** %51, align 8
  %53 = icmp eq {}* %52, %49
  %object476.0 = select i1 %53, {}* %.val1883, {}* %49
  %54 = icmp eq {}* %object476.0, %49
  %G156688.0 = select i1 %54, {}* %.val1883, {}* %49
  %55 = icmp eq {}* %G156688.0, %49
  br i1 %55, label %tag165, label %tag95

tag63:                                            ; preds = %tag235, %normal-dest792, %tag4
  %.val1868 = phi {}* [ %.val1866.pre, %tag4 ], [ %354, %normal-dest792 ], [ %166, %tag235 ]
  %G2095854.0 = phi {}* [ %20, %tag4 ], [ %G2095854.1, %normal-dest792 ], [ %166, %tag235 ]
  %56 = ptrtoint {}* %G2095854.0 to i64
  %tag-only5381582 = and i64 %56, 7
  %consp-test539 = icmp eq i64 %tag-only5381582, 3
  %.val1865 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G157025.0 = select i1 %consp-test539, {}* %.val1865, {}* %.val1868
  %57 = icmp eq {}* %G157025.0, %.val1868
  br i1 %57, label %tag96, label %tag294

tag68:                                            ; preds = %header-check-br428, %header-check-br428, %header-check-br428, %header-check-br428
  %58 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %59 = invoke {}* @cc_safe_fdefinition({}* %58)
          to label %normal-dest548 unwind label %cleanup-lpad.loopexit

tag69:                                            ; preds = %tag95
  %60 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest562 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag70:                                            ; preds = %tag360
  %62 = icmp eq {}* %y1115.0, inttoptr (i64 4 to {}*)
  br i1 %62, label %tag244, label %tag36

tag71:                                            ; preds = %tag170
  %63 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest566 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag72:                                            ; preds = %tag105.tag72_crit_edge, %header-check-br678, %header-check-br876, %tag225, %tag257, %tag176
  %.val1877 = phi {}* [ %.val1877.pre, %tag105.tag72_crit_edge ], [ %186, %tag176 ], [ %186, %tag257 ], [ %186, %tag225 ], [ %186, %header-check-br876 ], [ %186, %header-check-br678 ]
  %65 = phi {}* [ %90, %tag105.tag72_crit_edge ], [ %.val1882, %tag176 ], [ %.val1882, %tag257 ], [ %.val1882, %tag225 ], [ %.val1882, %header-check-br876 ], [ %.val1882, %header-check-br678 ]
  %66 = add i64 %27, 5
  %67 = inttoptr i64 %66 to {}**
  %68 = load {}*, {}** %67, align 8
  %69 = icmp eq {}* %68, %65
  %object916.0 = select i1 %69, {}* %.val1877, {}* %65
  %70 = icmp eq {}* %object916.0, %65
  %G156749.0 = select i1 %70, {}* %.val1877, {}* %65
  %71 = icmp eq {}* %G156749.0, %65
  br i1 %71, label %tag135, label %tag12

tag81:                                            ; preds = %normal-dest1017, %tag244
  %72 = phi {}* [ %234, %tag244 ], [ %384, %normal-dest1017 ]
  %G156956.0 = phi {}* [ %171, %tag244 ], [ %G156956.1, %normal-dest1017 ]
  %73 = icmp eq {}* %G156956.0, %72
  br i1 %73, label %tag36, label %tag49

tag84:                                            ; preds = %tag148
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest606 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag86:                                            ; preds = %normal-dest1471
  %76 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest621 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag90:                                            ; preds = %tag93
  br i1 %83, label %tag364, label %tag27

tag91:                                            ; preds = %tag5
  %78 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest656 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag92:                                            ; preds = %tag294
  %80 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %201, i64 4)
  %result = extractvalue { i64, i1 } %80, 0
  %overflow = extractvalue { i64, i1 } %80, 1
  %81 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag131, label %tag16.outer.backedge

tag16.outer.backedge:                             ; preds = %tag92, %normal-dest841, %normal-dest512
  %LENGTH513.0.ph.be = phi {}* [ %LENGTH513.1, %normal-dest512 ], [ %LENGTH513.2, %normal-dest841 ], [ %81, %tag92 ]
  br label %tag16.outer

tag93:                                            ; preds = %tag95
  %82 = icmp eq {}* %G156742.0, %84
  br i1 %82, label %tag90, label %tag115

tag95:                                            ; preds = %tag95.lr.ph, %tag55
  %G156742.0 = phi {}* [ %.val18831951, %tag95.lr.ph ], [ %.val1883, %tag55 ]
  %83 = phi i1 [ %112, %tag95.lr.ph ], [ %54, %tag55 ]
  %84 = phi {}* [ %109, %tag95.lr.ph ], [ %49, %tag55 ]
  %"%SUBLIST156494.01954" = phi {}* [ %farg1, %tag95.lr.ph ], [ %52, %tag55 ]
  %85 = ptrtoint {}* %"%SUBLIST156494.01954" to i64
  %tag-only6751661 = and i64 %85, 7
  %consp-test676 = icmp eq i64 %tag-only6751661, 3
  br i1 %consp-test676, label %tag93, label %tag69

tag96:                                            ; preds = %tag63
  %86 = icmp eq {}* %G2095854.0, %.val1868
  %G156996.0 = select i1 %86, {}* %.val1865, {}* %.val1868
  %87 = icmp eq {}* %G156996.0, %.val1868
  br i1 %87, label %tag312, label %tag360

tag102:                                           ; preds = %tag27, %normal-dest812
  %88 = phi {}* [ %356, %normal-dest812 ], [ %.val1888, %tag27 ]
  %G156713.0 = phi {}* [ %G156713.1, %normal-dest812 ], [ %36, %tag27 ]
  %89 = icmp eq {}* %G156713.0, %88
  br i1 %89, label %tag102.tag55_crit_edge, label %tag260

tag102.tag55_crit_edge:                           ; preds = %tag102
  %.val1883.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag55

tag105:                                           ; preds = %tag269, %normal-dest910
  %90 = phi {}* [ %373, %normal-dest910 ], [ %.val1882, %tag269 ]
  %G156774.0 = phi {}* [ %G156774.1, %normal-dest910 ], [ %186, %tag269 ]
  %91 = icmp eq {}* %G156774.0, %90
  br i1 %91, label %tag105.tag72_crit_edge, label %tag275

tag105.tag72_crit_edge:                           ; preds = %tag105
  %.val1877.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag72

tag107:                                           ; preds = %tag227
  %92 = icmp eq {}* %.val1905, %farg1
  %.val1904 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G156984.0 = select i1 %92, {}* %.val1904, {}* %.val1905
  %93 = icmp eq {}* %G156984.0, %.val1905
  br i1 %93, label %tag309, label %tag360

tag110:                                           ; preds = %normal-dest628, %normal-dest1355, %normal-dest1090, %normal-dest1471
  %G156474.0 = phi {}* [ %G156485.0, %normal-dest1471 ], [ %G156481.0, %normal-dest1090 ], [ %G156483.0, %normal-dest1355 ], [ %G156474.1, %normal-dest628 ]
  %94 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %95 = invoke {}* @cc_safe_fdefinition({}* %94)
          to label %normal-dest700 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag113:                                           ; preds = %header-check-br442, %header-check-br442, %header-check-br442, %header-check-br442
  %96 = ptrtoint {}* %.in1726 to i64
  %single-float-tag-only771 = and i64 %96, 7
  %fixnum-tag-only4741723 = and i64 %96, 3
  %fixnump-test475 = icmp ne i64 %fixnum-tag-only4741723, 0
  %test688 = icmp eq i64 %single-float-tag-only771, 1
  %or.cond1862 = and i1 %fixnump-test475, %test688
  br i1 %or.cond1862, label %header-check-br685, label %tag55

tag114:                                           ; preds = %tag114.lr.ph, %tag188
  %G156620.0 = phi {}* [ %.val18951940, %tag114.lr.ph ], [ %.val1895, %tag188 ]
  %97 = phi i1 [ %193, %tag114.lr.ph ], [ %140, %tag188 ]
  %98 = phi {}* [ %190, %tag114.lr.ph ], [ %135, %tag188 ]
  %"%SUBLIST156508.01943" = phi {}* [ %farg1, %tag114.lr.ph ], [ %138, %tag188 ]
  %99 = ptrtoint {}* %"%SUBLIST156508.01943" to i64
  %tag-only7731673 = and i64 %99, 7
  %consp-test774 = icmp eq i64 %tag-only7731673, 3
  br i1 %consp-test774, label %tag310, label %tag236

tag115:                                           ; preds = %tag93
  %100 = add i64 %85, -3
  %101 = inttoptr i64 %100 to {}**
  %102 = load {}*, {}** %101, align 8
  br label %tag27

tag119:                                           ; preds = %tag235
  %103 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest785 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag124:                                           ; preds = %header-check-br685, %header-check-br685, %header-check-br685, %header-check-br685
  %105 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %106 = invoke {}* @cc_safe_fdefinition({}* %105)
          to label %normal-dest805 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag131:                                           ; preds = %tag92
  %107 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 76), align 16
  %108 = invoke {}* @cc_safe_fdefinition({}* %107)
          to label %normal-dest834 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag135:                                           ; preds = %tag72, %tag275.tag135_crit_edge, %normal-dest749
  %.val18831951 = phi {}* [ %.val18831951.pre, %tag275.tag135_crit_edge ], [ %.val18771957, %normal-dest749 ], [ %.val1877, %tag72 ]
  %109 = phi {}* [ %"%SUBLIST156487.01960", %tag275.tag135_crit_edge ], [ %340, %normal-dest749 ], [ %65, %tag72 ]
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 316), align 16
  %111 = icmp eq {}* %109, %farg1
  %object476.01952 = select i1 %111, {}* %.val18831951, {}* %109
  %112 = icmp eq {}* %object476.01952, %109
  %G156688.01953 = select i1 %112, {}* %.val18831951, {}* %109
  %113 = icmp eq {}* %G156688.01953, %109
  br i1 %113, label %tag165, label %tag95.lr.ph

tag95.lr.ph:                                      ; preds = %tag135
  %114 = ptrtoint {}* %110 to i64
  %single-float-tag-only1444 = and i64 %114, 7
  %fixnum-tag-only12871721 = and i64 %114, 3
  %fixnump-test1288 = icmp eq i64 %fixnum-tag-only12871721, 0
  %test445 = icmp ne i64 %single-float-tag-only1444, 1
  %irc-bit-cast446 = bitcast {}* %110 to i8*
  %gep447 = getelementptr inbounds i8, i8* %irc-bit-cast446, i64 -9
  %irc-bit-cast448 = bitcast i8* %gep447 to i64*
  %brmerge1963 = or i1 %test445, %fixnump-test1288
  br label %tag95

tag137:                                           ; preds = %tag12
  %115 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %116 = invoke {}* @cc_safe_fdefinition({}* %115)
          to label %normal-dest857 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag142:                                           ; preds = %tag306
  br i1 %213, label %tag202, label %tag2

tag143:                                           ; preds = %normal-dest656, %tag143.outer
  br i1 %consp-test868, label %tag259, label %tag191

tag148:                                           ; preds = %tag339
  br i1 %25, label %tag84, label %tag269

tag153:                                           ; preds = %tag310
  %117 = add i64 %99, -3
  %118 = inttoptr i64 %117 to {}**
  %119 = load {}*, {}** %118, align 8
  br label %tag15

tag156:                                           ; preds = %header-check-br678, %header-check-br678, %header-check-br678, %header-check-br678
  %120 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest901 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag165:                                           ; preds = %tag55, %tag260.tag165_crit_edge, %tag135
  %.val18891945 = phi {}* [ %.val18891945.pre, %tag260.tag165_crit_edge ], [ %.val18831951, %tag135 ], [ %.val1883, %tag55 ]
  %122 = phi {}* [ %"%SUBLIST156494.01954", %tag260.tag165_crit_edge ], [ %109, %tag135 ], [ %49, %tag55 ]
  %123 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 318), align 16
  %124 = icmp eq {}* %122, %farg1
  %object677.01946 = select i1 %124, {}* %.val18891945, {}* %122
  %125 = icmp eq {}* %object677.01946, %122
  %G156627.01947 = select i1 %125, {}* %.val18891945, {}* %122
  %126 = icmp eq {}* %G156627.01947, %122
  br i1 %126, label %tag273, label %tag313.lr.ph

tag313.lr.ph:                                     ; preds = %tag165
  %127 = ptrtoint {}* %123 to i64
  %single-float-tag-only1008 = and i64 %127, 7
  %fixnum-tag-only7821702 = and i64 %127, 3
  %fixnump-test783 = icmp eq i64 %fixnum-tag-only7821702, 0
  %test458 = icmp ne i64 %single-float-tag-only1008, 1
  %irc-bit-cast459 = bitcast {}* %123 to i8*
  %gep460 = getelementptr inbounds i8, i8* %irc-bit-cast459, i64 -9
  %irc-bit-cast461 = bitcast i8* %gep460 to i64*
  %brmerge = or i1 %test458, %fixnump-test783
  br label %tag313

tag170:                                           ; preds = %tag276, %normal-dest1267, %header-check-br1408, %tag383
  %.val19021997 = phi {}* [ %246, %tag383 ], [ %G156926.0, %tag276 ], [ %418, %normal-dest1267 ], [ %G156926.0, %header-check-br1408 ]
  %128 = icmp eq {}* %.val19021997, %farg1
  %.val1901 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G156866.0 = select i1 %128, {}* %.val1901, {}* %.val19021997
  %129 = icmp eq {}* %G156866.0, %.val19021997
  br i1 %129, label %tag71, label %tag320

tag176:                                           ; preds = %tag269
  br i1 %or.cond1863, label %header-check-br876, label %tag72

tag177:                                           ; preds = %normal-dest1381
  %130 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %131 = invoke {}* @cc_safe_fdefinition({}* %130)
          to label %normal-dest945 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag178:                                           ; preds = %normal-dest488
  %132 = add i64 %248, -3
  %133 = inttoptr i64 %132 to {}**
  %134 = load {}*, {}** %133, align 8
  br label %tag355

tag188:                                           ; preds = %tag3.tag188_crit_edge, %header-check-br, %header-check-br428, %tag356, %tag18
  %.val1895 = phi {}* [ %.val1895.pre, %tag3.tag188_crit_edge ], [ %28, %tag18 ], [ %28, %tag356 ], [ %28, %header-check-br428 ], [ %28, %header-check-br ]
  %135 = phi {}* [ %18, %tag3.tag188_crit_edge ], [ %.val1900, %tag18 ], [ %.val1900, %tag356 ], [ %.val1900, %header-check-br428 ], [ %.val1900, %header-check-br ]
  %136 = add i64 %99, 5
  %137 = inttoptr i64 %136 to {}**
  %138 = load {}*, {}** %137, align 8
  %139 = icmp eq {}* %138, %135
  %object.0 = select i1 %139, {}* %.val1895, {}* %135
  %140 = icmp eq {}* %object.0, %135
  %G156566.0 = select i1 %140, {}* %.val1895, {}* %135
  %141 = icmp eq {}* %G156566.0, %135
  br i1 %141, label %tag8, label %tag114

tag191:                                           ; preds = %tag143
  %142 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %143 = icmp eq {}* %SEQUENCE435.0.ph, %142
  %.val1871 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G156919.0 = select i1 %143, {}* %.val1871, {}* %142
  %144 = icmp eq {}* %G156919.0, %142
  br i1 %144, label %tag40, label %tag382

tag193:                                           ; preds = %normal-dest1527, %normal-dest1451, %normal-dest952
  %return-value.sroa.79.0 = phi i64 [ %.elt1660, %normal-dest1527 ], [ 1, %normal-dest952 ], [ %.elt1599, %normal-dest1451 ]
  %return-value.sroa.0.0 = phi i64 [ %456, %normal-dest1527 ], [ %376, %normal-dest952 ], [ %438, %normal-dest1451 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %145 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %146 = insertvalue { {}*, i64 } undef, {}* %145, 0
  %147 = insertvalue { {}*, i64 } %146, i64 %return-value.sroa.79.0, 1
  ret { {}*, i64 } %147

tag202:                                           ; preds = %tag142
  %148 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %149 = invoke {}* @cc_safe_fdefinition({}* %148)
          to label %normal-dest981 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag211:                                           ; preds = %tag2
  br i1 %brmerge, label %tag318, label %header-check-br455

tag212:                                           ; preds = %tag360
  %150 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 80), align 16
  %151 = invoke {}* @cc_safe_fdefinition({}* %150)
          to label %normal-dest1010 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag213:                                           ; preds = %header-check-br540, %header-check-br540, %header-check-br540, %header-check-br540
  %152 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %153 = invoke {}* @cc_safe_fdefinition({}* %152)
          to label %normal-dest1024 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag218:                                           ; preds = %tag306
  %154 = add i64 %215, -3
  %155 = inttoptr i64 %154 to {}**
  %156 = load {}*, {}** %155, align 8
  br label %tag2

tag222:                                           ; preds = %tag285
  %157 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %158 = invoke {}* @cc_safe_fdefinition({}* %157)
          to label %normal-dest1055 unwind label %cleanup-lpad.loopexit

tag224:                                           ; preds = %normal-dest1381
  %159 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %160 = invoke {}* @cc_safe_fdefinition({}* %159)
          to label %normal-dest1069 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag225:                                           ; preds = %tag257
  %fixnum-tag-only10961742 = and i64 %178, 3
  %fixnump-test1097 = icmp ne i64 %fixnum-tag-only10961742, 0
  %test681 = icmp eq i64 %single-float-tag-only1162, 1
  %or.cond1861 = and i1 %fixnump-test1097, %test681
  br i1 %or.cond1861, label %header-check-br678, label %tag72

tag227:                                           ; preds = %header-check-br1399, %normal-dest765, %tag246
  %.val1905 = phi {}* [ %.pre, %tag246 ], [ %347, %normal-dest765 ], [ %G157044.0, %header-check-br1399 ]
  %G156988.0.in = phi {}** [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), %tag246 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %normal-dest765 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), %header-check-br1399 ]
  %G156988.0 = load {}*, {}** %G156988.0.in, align 8
  %161 = icmp eq {}* %G156988.0, %.val1905
  br i1 %161, label %tag107, label %tag230

tag230:                                           ; preds = %tag227
  %162 = add i64 %248, 7
  %163 = inttoptr i64 %162 to i64*
  %164 = load i64, i64* %163, align 8
  %"tag fixnum" = shl nuw i64 %164, 2
  %165 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag360

tag235:                                           ; preds = %tag16
  %166 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %167 = icmp eq {}* %SEQUENCE.0.ph, %166
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G157037.0 = select i1 %167, {}* %.val, {}* %166
  %168 = icmp eq {}* %G157037.0, %166
  br i1 %168, label %tag119, label %tag63

tag236:                                           ; preds = %tag114
  %169 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %170 = invoke {}* @cc_safe_fdefinition({}* %169)
          to label %normal-dest1133 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag244:                                           ; preds = %tag70
  %171 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag81

tag246:                                           ; preds = %tag335, %header-check-br818, %normal-dest765
  %.pre = phi {}* [ %G157044.0, %tag335 ], [ %G157044.0, %header-check-br818 ], [ %347, %normal-dest765 ]
  br label %tag227

tag251:                                           ; preds = %tag351
  %fixnum-tag-only11541704 = and i64 %231, 3
  %fixnump-test1155 = icmp ne i64 %fixnum-tag-only11541704, 0
  %test543 = icmp eq i64 %single-float-tag-only1443, 1
  %or.cond1860 = and i1 %fixnump-test1155, %test543
  br i1 %or.cond1860, label %header-check-br540, label %tag318

tag255:                                           ; preds = %tag313
  %172 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %173 = invoke {}* @cc_safe_fdefinition({}* %172)
          to label %normal-dest1160 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag256:                                           ; preds = %tag383
  %174 = add i64 %248, 7
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %"tag fixnum1161" = shl nuw i64 %176, 2
  %177 = inttoptr i64 %"tag fixnum1161" to {}*
  br label %tag320

tag257:                                           ; preds = %header-check-br876, %header-check-br876, %header-check-br876, %header-check-br876
  %178 = ptrtoint {}* %.in1745 to i64
  %single-float-tag-only1162 = and i64 %178, 7
  %179 = icmp eq i64 %single-float-tag-only1162, 6
  br i1 %179, label %tag72, label %tag225

tag259:                                           ; preds = %tag143
  %180 = load {}*, {}** %35, align 8
  %.val1874.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag382

tag260:                                           ; preds = %tag102
  %181 = icmp eq {}* %"%SUBLIST156494.01954", %88
  br i1 %181, label %tag260.tag165_crit_edge, label %tag378

tag260.tag165_crit_edge:                          ; preds = %tag260
  %.val18891945.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag165

tag262:                                           ; preds = %tag277
  %182 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 76), align 16
  %183 = invoke {}* @cc_safe_fdefinition({}* %182)
          to label %normal-dest1165 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag265:                                           ; preds = %tag2, %normal-dest1031
  %184 = phi {}* [ %386, %normal-dest1031 ], [ %.val1894, %tag2 ]
  %G156652.0 = phi {}* [ %G156652.1, %normal-dest1031 ], [ %14, %tag2 ]
  %185 = icmp eq {}* %G156652.0, %184
  br i1 %185, label %tag265.tag318_crit_edge, label %tag334

tag265.tag318_crit_edge:                          ; preds = %tag265
  %.val1889.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag318

tag269:                                           ; preds = %tag148, %normal-dest614, %tag307
  %.val1882 = phi {}* [ %26, %tag307 ], [ %305, %normal-dest614 ], [ %G156803.0, %tag148 ]
  %186 = phi {}* [ %G156803.0, %tag307 ], [ %.val1881.pre, %normal-dest614 ], [ %G156803.0, %tag148 ]
  %.in1745 = phi {}* [ %205, %tag307 ], [ %.in1744, %normal-dest614 ], [ %G156803.0, %tag148 ]
  %187 = bitcast {}* %.in1745 to i8*
  %188 = icmp eq {}* %341, %.in1745
  %G156783.0 = select i1 %188, {}* %186, {}* %.val1882
  %189 = icmp eq {}* %G156783.0, %.val1882
  br i1 %189, label %tag176, label %tag105

tag273:                                           ; preds = %tag318, %tag334.tag273_crit_edge, %tag165
  %.val18951940 = phi {}* [ %.val18951940.pre, %tag334.tag273_crit_edge ], [ %.val18891945, %tag165 ], [ %.val1889, %tag318 ]
  %190 = phi {}* [ %"%SUBLIST156501.01948", %tag334.tag273_crit_edge ], [ %122, %tag165 ], [ %218, %tag318 ]
  %191 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 320), align 16
  %192 = icmp eq {}* %190, %farg1
  %object.01941 = select i1 %192, {}* %.val18951940, {}* %190
  %193 = icmp eq {}* %object.01941, %190
  %G156566.01942 = select i1 %193, {}* %.val18951940, {}* %190
  %194 = icmp eq {}* %G156566.01942, %190
  br i1 %194, label %tag8, label %tag114.lr.ph

tag114.lr.ph:                                     ; preds = %tag273
  %195 = ptrtoint {}* %191 to i64
  %single-float-tag-only1452 = and i64 %195, 7
  %fixnum-tag-only15281684 = and i64 %195, 3
  %fixnump-test1529 = icmp eq i64 %fixnum-tag-only15281684, 0
  %test = icmp ne i64 %single-float-tag-only1452, 1
  %irc-bit-cast411 = bitcast {}* %191 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast411, i64 -9
  %irc-bit-cast412 = bitcast i8* %gep to i64*
  %brmerge1964 = or i1 %test, %fixnump-test1529
  br label %tag114

tag275:                                           ; preds = %tag105
  %196 = icmp eq {}* %"%SUBLIST156487.01960", %90
  br i1 %196, label %tag275.tag135_crit_edge, label %tag378

tag275.tag135_crit_edge:                          ; preds = %tag275
  %.val18831951.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag135

tag276:                                           ; preds = %normal-dest449
  %test1198 = icmp eq i64 %tag-only1580, 1
  br i1 %test1198, label %header-check-br1195, label %tag170

tag277:                                           ; preds = %tag29
  %197 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %40, i64 4)
  %result963 = extractvalue { i64, i1 } %197, 0
  %overflow964 = extractvalue { i64, i1 } %197, 1
  %198 = inttoptr i64 %result963 to {}*
  br i1 %overflow964, label %tag262, label %tag143.outer.backedge

tag143.outer.backedge:                            ; preds = %tag277, %normal-dest1172, %normal-dest1326
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest1326 ], [ %LENGTH.1, %normal-dest1172 ], [ %198, %tag277 ]
  br label %tag143.outer

tag285:                                           ; preds = %tag310
  br i1 %97, label %tag222, label %tag15

tag291:                                           ; preds = %normal-dest488
  %199 = icmp eq {}* %G156951.0, %farg1
  %.val1869 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G156944.0 = select i1 %199, {}* %.val1869, {}* %G156951.0
  %200 = icmp eq {}* %G156944.0, %G156951.0
  br i1 %200, label %tag381, label %tag355

tag294:                                           ; preds = %tag63
  %201 = ptrtoint {}* %LENGTH513.0.ph to i64
  %fixnum-tag-only12411583 = and i64 %201, 3
  %fixnump-test1242 = icmp eq i64 %fixnum-tag-only12411583, 0
  br i1 %fixnump-test1242, label %tag92, label %tag51

tag306:                                           ; preds = %tag313
  %202 = icmp eq {}* %G156681.0, %214
  br i1 %202, label %tag142, label %tag218

tag307:                                           ; preds = %tag339
  %203 = add i64 %27, -3
  %204 = inttoptr i64 %203 to {}**
  %205 = load {}*, {}** %204, align 8
  br label %tag269

tag309:                                           ; preds = %tag107
  %206 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %207 = invoke {}* @cc_safe_fdefinition({}* %206)
          to label %normal-dest1301 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag310:                                           ; preds = %tag114
  %208 = icmp eq {}* %G156620.0, %98
  br i1 %208, label %tag285, label %tag153

tag311:                                           ; preds = %tag29
  %209 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 78), align 16
  %210 = invoke {}* @cc_safe_fdefinition({}* %209)
          to label %normal-dest1319 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag312:                                           ; preds = %tag96
  %211 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 66), align 16
  %212 = invoke {}* @cc_safe_fdefinition({}* %211)
          to label %normal-dest1333 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag313:                                           ; preds = %tag313.lr.ph, %tag318
  %G156681.0 = phi {}* [ %.val18891945, %tag313.lr.ph ], [ %.val1889, %tag318 ]
  %213 = phi i1 [ %125, %tag313.lr.ph ], [ %223, %tag318 ]
  %214 = phi {}* [ %122, %tag313.lr.ph ], [ %218, %tag318 ]
  %"%SUBLIST156501.01948" = phi {}* [ %farg1, %tag313.lr.ph ], [ %221, %tag318 ]
  %215 = ptrtoint {}* %"%SUBLIST156501.01948" to i64
  %tag-only13451667 = and i64 %215, 7
  %consp-test1346 = icmp eq i64 %tag-only13451667, 3
  br i1 %consp-test1346, label %tag306, label %tag255

tag314:                                           ; preds = %normal-dest1090
  %216 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %217 = invoke {}* @cc_safe_fdefinition({}* %216)
          to label %normal-dest1348 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag318:                                           ; preds = %tag265.tag318_crit_edge, %header-check-br455, %header-check-br540, %tag211, %tag251, %tag351
  %.val1889 = phi {}* [ %.val1889.pre, %tag265.tag318_crit_edge ], [ %14, %tag351 ], [ %14, %tag251 ], [ %14, %tag211 ], [ %14, %header-check-br540 ], [ %14, %header-check-br455 ]
  %218 = phi {}* [ %184, %tag265.tag318_crit_edge ], [ %.val1894, %tag351 ], [ %.val1894, %tag251 ], [ %.val1894, %tag211 ], [ %.val1894, %header-check-br540 ], [ %.val1894, %header-check-br455 ]
  %219 = add i64 %215, 5
  %220 = inttoptr i64 %219 to {}**
  %221 = load {}*, {}** %220, align 8
  %222 = icmp eq {}* %221, %218
  %object677.0 = select i1 %222, {}* %.val1889, {}* %218
  %223 = icmp eq {}* %object677.0, %218
  %G156627.0 = select i1 %223, {}* %.val1889, {}* %218
  %224 = icmp eq {}* %G156627.0, %218
  br i1 %224, label %tag273, label %tag313

tag320:                                           ; preds = %tag5, %normal-dest573, %tag170, %tag256
  %G156860.0 = phi {}* [ %177, %tag256 ], [ null, %tag170 ], [ %G156860.1, %normal-dest573 ], [ %LENGTH.0.ph, %tag5 ]
  %ptrtoint1375 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint1376 = add i64 %ptrtoint1375, 7
  %entry-point-addr1377 = inttoptr i64 %entry-point-addr-uint1376 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1378 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1377, align 8
  %225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1378({}* %42, i64 1, {}* %G156860.0, {}* null, {}* null, {}* null)
          to label %normal-dest1381 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag16.outer:                                      ; preds = %tag16.outer.backedge, %tag16.outer.preheader
  %LENGTH513.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag16.outer.preheader ], [ %LENGTH513.0.ph.be, %tag16.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %farg1, %tag16.outer.preheader ], [ %G2095854.0, %tag16.outer.backedge ]
  %226 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only4061581 = and i64 %226, 7
  %consp-test407 = icmp eq i64 %tag-only4061581, 3
  %227 = add i64 %226, 5
  %228 = inttoptr i64 %227 to {}**
  br label %tag16

tag334:                                           ; preds = %tag265
  %229 = icmp eq {}* %"%SUBLIST156501.01948", %184
  br i1 %229, label %tag334.tag273_crit_edge, label %tag378

tag334.tag273_crit_edge:                          ; preds = %tag334
  %.val18951940.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag273

tag335:                                           ; preds = %normal-dest
  %test1402 = icmp eq i64 %tag-only1580, 1
  br i1 %test1402, label %header-check-br1399, label %tag246

tag339:                                           ; preds = %tag12
  %230 = icmp eq {}* %G156803.0, %26
  br i1 %230, label %tag148, label %tag307

tag351:                                           ; preds = %header-check-br455, %header-check-br455, %header-check-br455, %header-check-br455
  %231 = ptrtoint {}* %.in1707 to i64
  %single-float-tag-only1443 = and i64 %231, 7
  %232 = icmp eq i64 %single-float-tag-only1443, 6
  br i1 %232, label %tag318, label %tag251

tag352:                                           ; preds = %tag27
  br i1 %brmerge1963, label %tag55, label %header-check-br442

tag355:                                           ; preds = %tag291, %normal-dest1538, %tag178
  %G156934.0 = phi {}* [ %134, %tag178 ], [ %G156934.1, %normal-dest1538 ], [ %G156951.0, %tag291 ]
  %ptrtoint1445 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint1446 = add i64 %ptrtoint1445, 7
  %entry-point-addr1447 = inttoptr i64 %entry-point-addr-uint1446 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1448 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1447, align 8
  %233 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1448({}* %46, i64 4, {}* %farg0, {}* %279, {}* %280, {}* %G156934.0)
          to label %normal-dest1451 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag356:                                           ; preds = %tag15
  br i1 %brmerge1964, label %tag188, label %header-check-br

tag360:                                           ; preds = %tag96, %normal-dest1308, %tag107, %tag230
  %234 = phi {}* [ %.val1905, %tag230 ], [ %.val1905, %tag107 ], [ %422, %normal-dest1308 ], [ %.val1868, %tag96 ]
  %y1115.0 = phi {}* [ %165, %tag230 ], [ null, %tag107 ], [ %y1115.1, %normal-dest1308 ], [ %LENGTH513.0.ph, %tag96 ]
  %235 = ptrtoint {}* %y1115.0 to i64
  %fixnum-tag-only14611590 = and i64 %235, 3
  %fixnump-test1462 = icmp eq i64 %fixnum-tag-only14611590, 0
  br i1 %fixnump-test1462, label %tag70, label %tag212

tag361:                                           ; preds = %normal-dest1355
  %236 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %237 = invoke {}* @cc_safe_fdefinition({}* %236)
          to label %normal-dest1464 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag364:                                           ; preds = %tag90
  %238 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %239 = invoke {}* @cc_safe_fdefinition({}* %238)
          to label %normal-dest1480 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag378:                                           ; preds = %tag275, %tag260, %tag8, %tag334
  %G156479.0.in = phi {}** [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 289), %tag334 ], [ %.1799, %tag8 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 287), %tag260 ], [ getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 285), %tag275 ]
  %G156479.0 = load {}*, {}** %G156479.0.in, align 8
  %240 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 254), align 16
  %241 = invoke {}* @cc_safe_fdefinition({}* %240)
          to label %normal-dest1520 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag381:                                           ; preds = %tag291
  %242 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %243 = invoke {}* @cc_safe_fdefinition({}* %242)
          to label %normal-dest1531 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag382:                                           ; preds = %tag191, %normal-dest470, %tag259
  %.val1876 = phi {}* [ %.val1874.pre, %tag259 ], [ %278, %normal-dest470 ], [ %142, %tag191 ]
  %G2095854471.0 = phi {}* [ %180, %tag259 ], [ %G2095854471.1, %normal-dest470 ], [ %142, %tag191 ]
  %244 = ptrtoint {}* %G2095854471.0 to i64
  %tag-only15451609 = and i64 %244, 7
  %consp-test1546 = icmp eq i64 %tag-only15451609, 3
  %.val1873 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G156907.0 = select i1 %consp-test1546, {}* %.val1873, {}* %.val1876
  %245 = icmp eq {}* %G156907.0, %.val1876
  br i1 %245, label %tag5, label %tag29

tag383:                                           ; preds = %normal-dest1267, %header-check-br1195
  %246 = phi {}* [ %G156926.0, %header-check-br1195 ], [ %418, %normal-dest1267 ]
  %G156870.0.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %247 = icmp eq {}* %G156870.0.pre, %246
  br i1 %247, label %tag170, label %tag256

cleanup-lpad.loopexit:                            ; preds = %tag68, %normal-dest548, %tag222, %normal-dest1055
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest1024, %tag213, %normal-dest981, %tag202
  %lpad.loopexit1908 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %tag124, %normal-dest805, %tag364, %normal-dest1480
  %lpad.loopexit1911 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %normal-dest901, %tag156, %normal-dest606, %tag84
  %lpad.loopexit1913 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit: ; preds = %normal-dest656, %tag91, %normal-dest465, %tag40
  %lpad.loopexit1918 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %normal-dest1319, %tag311, %normal-dest1165, %tag262
  %lpad.loopexit.split-lp1919 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit: ; preds = %tag119, %normal-dest785, %tag312, %normal-dest1333
  %lpad.loopexit1924 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag51, %normal-dest505, %tag131, %normal-dest834
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10, %normal-dest1531, %tag381, %normal-dest1520, %tag378, %normal-dest1464, %tag361, %tag355, %tag320, %normal-dest562, %normal-dest1348, %tag314, %normal-dest1301, %tag309, %normal-dest1260, %maybe-more-tests1416, %tag255, %tag236, %normal-dest1083, %normal-dest1076, %normal-dest1069, %tag224, %normal-dest857, %normal-dest1010, %tag212, %normal-dest945, %tag177, %normal-dest1160, %tag137, %normal-dest1133, %normal-dest758, %maybe-more-tests, %normal-dest742, %normal-dest735, %normal-dest728, %normal-dest721, %normal-dest714, %normal-dest707, %normal-dest700, %tag110, %normal-dest621, %tag86, %normal-dest566, %tag71, %tag69, %tag49, %tag36
  %lpad.loopexit.split-lp1922 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit1908, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit1911, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit1913, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit1918, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp1919, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ], [ %lpad.loopexit.split-lp1922, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit1924, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %248 = ptrtoint {}* %farg1 to i64
  %tag-only1580 = and i64 %248, 7
  %consp-test = icmp eq i64 %tag-only1580, 3
  %G157044.0.in = select i1 %consp-test, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0)
  %G157044.0 = load {}*, {}** %G157044.0.in, align 8
  %249 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %250 = icmp eq {}* %G157044.0, %249
  br i1 %250, label %tag335, label %tag16.outer.preheader

tag16.outer.preheader:                            ; preds = %normal-dest
  br label %tag16.outer

header-check-br:                                  ; preds = %tag356
  %251 = load i64, i64* %irc-bit-cast412, align 8
  %252 = add i64 %251, -1309
  %253 = lshr i64 %252, 3
  %254 = shl i64 %252, 61
  %255 = or i64 %253, %254
  switch i64 %255, label %tag188 [
    i64 2, label %tag18
    i64 4, label %tag18
    i64 5, label %tag18
    i64 0, label %tag18
  ]

header-check-br428:                               ; preds = %tag18
  %gep433 = getelementptr inbounds i8, i8* %29, i64 -9
  %irc-bit-cast434 = bitcast i8* %gep433 to i64*
  %256 = load i64, i64* %irc-bit-cast434, align 8
  %257 = add i64 %256, -1309
  %258 = lshr i64 %257, 3
  %259 = shl i64 %257, 61
  %260 = or i64 %258, %259
  switch i64 %260, label %tag188 [
    i64 2, label %tag68
    i64 4, label %tag68
    i64 5, label %tag68
    i64 0, label %tag68
  ]

header-check-br442:                               ; preds = %tag352
  %261 = load i64, i64* %irc-bit-cast448, align 8
  %262 = add i64 %261, -1309
  %263 = lshr i64 %262, 3
  %264 = shl i64 %262, 61
  %265 = or i64 %263, %264
  switch i64 %265, label %tag55 [
    i64 2, label %tag113
    i64 4, label %tag113
    i64 5, label %tag113
    i64 0, label %tag113
  ]

normal-dest449:                                   ; preds = %tag36
  %G156926.0 = load {}*, {}** %G157044.0.in, align 8
  %266 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %267 = icmp eq {}* %G156926.0, %266
  br i1 %267, label %tag276, label %tag143.outer.preheader

tag143.outer.preheader:                           ; preds = %normal-dest449
  br label %tag143.outer

header-check-br455:                               ; preds = %tag211
  %268 = load i64, i64* %irc-bit-cast461, align 8
  %269 = add i64 %268, -1309
  %270 = lshr i64 %269, 3
  %271 = shl i64 %269, 61
  %272 = or i64 %270, %271
  switch i64 %272, label %tag318 [
    i64 2, label %tag351
    i64 4, label %tag351
    i64 5, label %tag351
    i64 0, label %tag351
  ]

normal-dest465:                                   ; preds = %tag40
  %273 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %274 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %275 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %276 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint467 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint = add i64 %ptrtoint467, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %277 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %44, i64 5, {}* %273, {}* %274, {}* %SEQUENCE435.0.ph, {}* %275, {}* %276)
          to label %normal-dest470 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest470:                                   ; preds = %normal-dest465
  %.elt1771 = extractvalue { {}*, i64 } %277, 0
  %.elt1773 = extractvalue { {}*, i64 } %277, 1
  %cond1574 = icmp eq i64 %.elt1773, 0
  %278 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G2095854471.1 = select i1 %cond1574, {}* %278, {}* %.elt1771
  br label %tag382

normal-dest488:                                   ; preds = %tag49
  %279 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 281), align 8
  %280 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 178), align 16
  %G156951.0 = load {}*, {}** %G157044.0.in, align 8
  %281 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %282 = icmp eq {}* %G156951.0, %281
  br i1 %282, label %tag291, label %tag178

normal-dest505:                                   ; preds = %tag51
  %ptrtoint506 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint507 = add i64 %ptrtoint506, 7
  %entry-point-addr508 = inttoptr i64 %entry-point-addr-uint507 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point509 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr508, align 8
  %283 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point509({}* %48, i64 2, {}* %LENGTH513.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest512 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest512:                                   ; preds = %normal-dest505
  %.elt = extractvalue { {}*, i64 } %283, 0
  %.elt1585 = extractvalue { {}*, i64 } %283, 1
  %cond = icmp eq i64 %.elt1585, 0
  %284 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH513.1 = select i1 %cond, {}* %284, {}* %.elt
  br label %tag16.outer.backedge

header-check-br540:                               ; preds = %tag251
  %gep545 = getelementptr inbounds i8, i8* %15, i64 -9
  %irc-bit-cast546 = bitcast i8* %gep545 to i64*
  %285 = load i64, i64* %irc-bit-cast546, align 8
  %286 = add i64 %285, -1309
  %287 = lshr i64 %286, 3
  %288 = shl i64 %286, 61
  %289 = or i64 %287, %288
  switch i64 %289, label %tag318 [
    i64 2, label %tag213
    i64 4, label %tag213
    i64 5, label %tag213
    i64 0, label %tag213
  ]

normal-dest548:                                   ; preds = %tag68
  %ptrtoint549 = ptrtoint {}* %59 to i64
  %entry-point-addr-uint550 = add i64 %ptrtoint549, 7
  %entry-point-addr551 = inttoptr i64 %entry-point-addr-uint550 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point552 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr551, align 8
  %290 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point552({}* %59, i64 2, {}* nonnull %191, {}* nonnull %.in1688, {}* null, {}* null)
          to label %normal-dest555 unwind label %cleanup-lpad.loopexit

normal-dest555:                                   ; preds = %normal-dest548
  %.elt1690 = extractvalue { {}*, i64 } %290, 0
  %.elt1692 = extractvalue { {}*, i64 } %290, 1
  %cond1560 = icmp eq i64 %.elt1692, 0
  %291 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156591.1 = select i1 %cond1560, {}* %291, {}* %.elt1690
  br label %tag3

normal-dest562:                                   ; preds = %tag69
  %292 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %293 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %294 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %295 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %ptrtoint1361 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint1362 = add i64 %ptrtoint1361, 7
  %entry-point-addr1363 = inttoptr i64 %entry-point-addr-uint1362 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1364 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1363, align 8
  %296 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1364({}* %61, i64 5, {}* %292, {}* %293, {}* %"%SUBLIST156494.01954", {}* %294, {}* %295)
          to label %normal-dest1367 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest566:                                   ; preds = %tag71
  %297 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 312), align 16
  %ptrtoint567 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint568 = add i64 %ptrtoint567, 7
  %entry-point-addr569 = inttoptr i64 %entry-point-addr-uint568 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point570 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr569, align 8
  %298 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point570({}* %64, i64 2, {}* %farg1, {}* %297, {}* null, {}* null)
          to label %normal-dest573 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest573:                                   ; preds = %normal-dest566
  %.elt1775 = extractvalue { {}*, i64 } %298, 0
  %.elt1777 = extractvalue { {}*, i64 } %298, 1
  %cond1575 = icmp eq i64 %.elt1777, 0
  %299 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156860.1 = select i1 %cond1575, {}* %299, {}* %.elt1775
  br label %tag320

normal-dest606:                                   ; preds = %tag84
  %300 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %301 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %302 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %303 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint608 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint609 = add i64 %ptrtoint608, 7
  %entry-point-addr610 = inttoptr i64 %entry-point-addr-uint609 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point611 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr610, align 8
  %304 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point611({}* %75, i64 5, {}* %300, {}* %301, {}* %"%SUBLIST156487.01960", {}* %302, {}* %303)
          to label %normal-dest614 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest614:                                   ; preds = %normal-dest606
  %.elt1751 = extractvalue { {}*, i64 } %304, 0
  %.elt1753 = extractvalue { {}*, i64 } %304, 1
  %cond1570 = icmp eq i64 %.elt1753, 0
  %305 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in1744 = select i1 %cond1570, {}* %305, {}* %.elt1751
  %.val1881.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag269

normal-dest621:                                   ; preds = %tag86
  %306 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 320), align 16
  %ptrtoint622 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint623 = add i64 %ptrtoint622, 7
  %entry-point-addr624 = inttoptr i64 %entry-point-addr-uint623 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point625 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr624, align 8
  %307 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point625({}* %77, i64 2, {}* %farg1, {}* %306, {}* null, {}* null)
          to label %normal-dest628 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest628:                                   ; preds = %normal-dest621
  %.elt1763 = extractvalue { {}*, i64 } %307, 0
  %.elt1765 = extractvalue { {}*, i64 } %307, 1
  %cond1573 = icmp eq i64 %.elt1765, 0
  %308 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156474.1 = select i1 %cond1573, {}* %308, {}* %.elt1763
  br label %tag110

normal-dest656:                                   ; preds = %tag91
  %309 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 313), align 8
  %ptrtoint657 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint658 = add i64 %ptrtoint657, 7
  %entry-point-addr659 = inttoptr i64 %entry-point-addr-uint658 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point660 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr659, align 8
  %310 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point660({}* %79, i64 2, {}* %G2095854471.0, {}* %309, {}* null, {}* null)
          to label %tag143 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

header-check-br678:                               ; preds = %tag225
  %gep683 = getelementptr inbounds i8, i8* %187, i64 -9
  %irc-bit-cast684 = bitcast i8* %gep683 to i64*
  %311 = load i64, i64* %irc-bit-cast684, align 8
  %312 = add i64 %311, -1309
  %313 = lshr i64 %312, 3
  %314 = shl i64 %312, 61
  %315 = or i64 %313, %314
  switch i64 %315, label %tag72 [
    i64 2, label %tag156
    i64 4, label %tag156
    i64 5, label %tag156
    i64 0, label %tag156
  ]

header-check-br685:                               ; preds = %tag113
  %gep690 = getelementptr inbounds i8, i8* %37, i64 -9
  %irc-bit-cast691 = bitcast i8* %gep690 to i64*
  %316 = load i64, i64* %irc-bit-cast691, align 8
  %317 = add i64 %316, -1309
  %318 = lshr i64 %317, 3
  %319 = shl i64 %317, 61
  %320 = or i64 %318, %319
  switch i64 %320, label %tag55 [
    i64 2, label %tag124
    i64 4, label %tag124
    i64 5, label %tag124
    i64 0, label %tag124
  ]

normal-dest700:                                   ; preds = %tag110
  %321 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 322), align 16
  %ptrtoint701 = ptrtoint {}* %95 to i64
  %entry-point-addr-uint702 = add i64 %ptrtoint701, 7
  %entry-point-addr703 = inttoptr i64 %entry-point-addr-uint702 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point704 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr703, align 8
  %322 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point704({}* %95, i64 2, {}* %farg1, {}* %321, {}* null, {}* null)
          to label %normal-dest707 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest707:                                   ; preds = %normal-dest700
  %.elt1636 = extractvalue { {}*, i64 } %322, 0
  %.elt1638 = extractvalue { {}*, i64 } %322, 1
  %cond1555 = icmp eq i64 %.elt1638, 0
  %323 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156475.0 = select i1 %cond1555, {}* %323, {}* %.elt1636
  %324 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %325 = invoke {}* @cc_safe_fdefinition({}* %324)
          to label %normal-dest714 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest714:                                   ; preds = %normal-dest707
  %326 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 94), align 16
  %327 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %ptrtoint715 = ptrtoint {}* %325 to i64
  %entry-point-addr-uint716 = add i64 %ptrtoint715, 7
  %entry-point-addr717 = inttoptr i64 %entry-point-addr-uint716 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point718 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr717, align 8
  %328 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point718({}* %325, i64 3, {}* %farg1, {}* %326, {}* %327, {}* null)
          to label %normal-dest721 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest721:                                   ; preds = %normal-dest714
  %.elt1640 = extractvalue { {}*, i64 } %328, 0
  %.elt1642 = extractvalue { {}*, i64 } %328, 1
  %cond1556 = icmp eq i64 %.elt1642, 0
  %329 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156476.0 = select i1 %cond1556, {}* %329, {}* %.elt1640
  %330 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %331 = invoke {}* @cc_safe_fdefinition({}* %330)
          to label %normal-dest728 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest728:                                   ; preds = %normal-dest721
  %332 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 324), align 16
  %ptrtoint729 = ptrtoint {}* %331 to i64
  %entry-point-addr-uint730 = add i64 %ptrtoint729, 7
  %entry-point-addr731 = inttoptr i64 %entry-point-addr-uint730 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point732 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr731, align 8
  %333 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point732({}* %331, i64 2, {}* %farg1, {}* %332, {}* null, {}* null)
          to label %normal-dest735 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest735:                                   ; preds = %normal-dest728
  %.elt1644 = extractvalue { {}*, i64 } %333, 0
  %.elt1646 = extractvalue { {}*, i64 } %333, 1
  %cond1557 = icmp eq i64 %.elt1646, 0
  %334 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156477.0 = select i1 %cond1557, {}* %334, {}* %.elt1644
  %335 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %336 = invoke {}* @cc_safe_fdefinition({}* %335)
          to label %normal-dest742 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest742:                                   ; preds = %normal-dest735
  %337 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 326), align 16
  %338 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %ptrtoint743 = ptrtoint {}* %336 to i64
  %entry-point-addr-uint744 = add i64 %ptrtoint743, 7
  %entry-point-addr745 = inttoptr i64 %entry-point-addr-uint744 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point746 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr745, align 8
  %339 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point746({}* %336, i64 3, {}* %farg1, {}* %337, {}* %338, {}* null)
          to label %normal-dest749 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest749:                                   ; preds = %normal-dest742
  %.elt1648 = extractvalue { {}*, i64 } %339, 0
  %.elt1650 = extractvalue { {}*, i64 } %339, 1
  %cond1558 = icmp eq i64 %.elt1650, 0
  %340 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156478.0 = select i1 %cond1558, {}* %340, {}* %.elt1648
  %341 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 314), align 16
  %342 = icmp eq {}* %340, %farg1
  %.val18771957 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %object916.01958 = select i1 %342, {}* %.val18771957, {}* %340
  %343 = icmp eq {}* %object916.01958, %340
  %G156749.01959 = select i1 %343, {}* %.val18771957, {}* %340
  %344 = icmp eq {}* %G156749.01959, %340
  br i1 %344, label %tag135, label %tag12.lr.ph

tag12.lr.ph:                                      ; preds = %normal-dest749
  %345 = ptrtoint {}* %341 to i64
  %single-float-tag-only943 = and i64 %345, 7
  %fixnum-tag-only4621740 = and i64 %345, 3
  %fixnump-test463 = icmp ne i64 %fixnum-tag-only4621740, 0
  %test879 = icmp eq i64 %single-float-tag-only943, 1
  %or.cond1863 = and i1 %fixnump-test463, %test879
  %irc-bit-cast880 = bitcast {}* %341 to i8*
  %gep881 = getelementptr inbounds i8, i8* %irc-bit-cast880, i64 -9
  %irc-bit-cast882 = bitcast i8* %gep881 to i64*
  br label %tag12

normal-dest758:                                   ; preds = %maybe-more-tests
  %ptrtoint759 = ptrtoint {}* %359 to i64
  %entry-point-addr-uint760 = add i64 %ptrtoint759, 7
  %entry-point-addr761 = inttoptr i64 %entry-point-addr-uint760 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point762 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr761, align 8
  %346 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point762({}* %359, i64 1, {}* nonnull %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest765 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest765:                                   ; preds = %normal-dest758
  %.elt1795 = extractvalue { {}*, i64 } %346, 0
  %.elt1797 = extractvalue { {}*, i64 } %346, 1
  %cond1579 = icmp eq i64 %.elt1797, 0
  %347 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157057.0 = select i1 %cond1579, {}* %347, {}* %.elt1795
  %348 = icmp eq {}* %G157057.0, inttoptr (i64 4 to {}*)
  br i1 %348, label %tag227, label %tag246

normal-dest785:                                   ; preds = %tag119
  %349 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %350 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %351 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %352 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint786 = ptrtoint {}* %104 to i64
  %entry-point-addr-uint787 = add i64 %ptrtoint786, 7
  %entry-point-addr788 = inttoptr i64 %entry-point-addr-uint787 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point789 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr788, align 8
  %353 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point789({}* %104, i64 5, {}* %349, {}* %350, {}* %SEQUENCE.0.ph, {}* %351, {}* %352)
          to label %normal-dest792 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest792:                                   ; preds = %normal-dest785
  %.elt1787 = extractvalue { {}*, i64 } %353, 0
  %.elt1789 = extractvalue { {}*, i64 } %353, 1
  %cond1577 = icmp eq i64 %.elt1789, 0
  %354 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond1577, {}* %354, {}* %.elt1787
  br label %tag63

normal-dest805:                                   ; preds = %tag124
  %ptrtoint806 = ptrtoint {}* %106 to i64
  %entry-point-addr-uint807 = add i64 %ptrtoint806, 7
  %entry-point-addr808 = inttoptr i64 %entry-point-addr-uint807 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point809 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr808, align 8
  %355 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point809({}* %106, i64 2, {}* nonnull %110, {}* nonnull %.in1726, {}* null, {}* null)
          to label %normal-dest812 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest812:                                   ; preds = %normal-dest805
  %.elt1728 = extractvalue { {}*, i64 } %355, 0
  %.elt1730 = extractvalue { {}*, i64 } %355, 1
  %cond1566 = icmp eq i64 %.elt1730, 0
  %356 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156713.1 = select i1 %cond1566, {}* %356, {}* %.elt1728
  br label %tag102

header-check-br818:                               ; preds = %header-check-br1399
  %.off1907 = add i64 %433, -1153
  %357 = icmp ult i64 %.off1907, 149
  br i1 %357, label %maybe-more-tests, label %tag246

maybe-more-tests:                                 ; preds = %header-check-br818
  %358 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 119), align 8
  %359 = invoke {}* @cc_safe_fdefinition({}* %358)
          to label %normal-dest758 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest834:                                   ; preds = %tag131
  %ptrtoint835 = ptrtoint {}* %108 to i64
  %entry-point-addr-uint836 = add i64 %ptrtoint835, 7
  %entry-point-addr837 = inttoptr i64 %entry-point-addr-uint836 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point838 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr837, align 8
  %360 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point838({}* %108, i64 1, {}* %81, {}* null, {}* null, {}* null)
          to label %normal-dest841 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest841:                                   ; preds = %normal-dest834
  %.elt1587 = extractvalue { {}*, i64 } %360, 0
  %.elt1589 = extractvalue { {}*, i64 } %360, 1
  %cond1547 = icmp eq i64 %.elt1589, 0
  %361 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH513.2 = select i1 %cond1547, {}* %361, {}* %.elt1587
  br label %tag16.outer.backedge

normal-dest853:                                   ; preds = %normal-dest1133
  call void @unreachableError()
  unreachable

normal-dest857:                                   ; preds = %tag137
  %362 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %363 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %364 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %365 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %ptrtoint1044 = ptrtoint {}* %116 to i64
  %entry-point-addr-uint1045 = add i64 %ptrtoint1044, 7
  %entry-point-addr1046 = inttoptr i64 %entry-point-addr-uint1045 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1047 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1046, align 8
  %366 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1047({}* %116, i64 5, {}* %362, {}* %363, {}* %"%SUBLIST156487.01960", {}* %364, {}* %365)
          to label %normal-dest1050 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br876:                               ; preds = %tag176
  %367 = load i64, i64* %irc-bit-cast882, align 8
  %368 = add i64 %367, -1309
  %369 = lshr i64 %368, 3
  %370 = shl i64 %368, 61
  %371 = or i64 %369, %370
  switch i64 %371, label %tag72 [
    i64 2, label %tag257
    i64 4, label %tag257
    i64 5, label %tag257
    i64 0, label %tag257
  ]

normal-dest901:                                   ; preds = %tag156
  %ptrtoint904 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint905 = add i64 %ptrtoint904, 7
  %entry-point-addr906 = inttoptr i64 %entry-point-addr-uint905 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point907 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr906, align 8
  %372 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point907({}* %121, i64 2, {}* nonnull %341, {}* nonnull %.in1745, {}* null, {}* null)
          to label %normal-dest910 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest910:                                   ; preds = %normal-dest901
  %.elt1747 = extractvalue { {}*, i64 } %372, 0
  %.elt1749 = extractvalue { {}*, i64 } %372, 1
  %cond1569 = icmp eq i64 %.elt1749, 0
  %373 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156774.1 = select i1 %cond1569, {}* %373, {}* %.elt1747
  br label %tag105

normal-dest930:                                   ; preds = %normal-dest1160
  call void @unreachableError()
  unreachable

normal-dest945:                                   ; preds = %tag177
  %374 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 294), align 16
  %ptrtoint946 = ptrtoint {}* %131 to i64
  %entry-point-addr-uint947 = add i64 %ptrtoint946, 7
  %entry-point-addr948 = inttoptr i64 %entry-point-addr-uint947 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point949 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr948, align 8
  %375 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point949({}* %131, i64 2, {}* %farg1, {}* %374, {}* null, {}* null)
          to label %normal-dest952 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest952:                                   ; preds = %normal-dest945
  %376 = load i64, i64* bitcast ([467 x {}*]* @CONTAB4420 to i64*), align 16
  br label %tag193

normal-dest981:                                   ; preds = %tag202
  %377 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %378 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %379 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %380 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint982 = ptrtoint {}* %149 to i64
  %entry-point-addr-uint983 = add i64 %ptrtoint982, 7
  %entry-point-addr984 = inttoptr i64 %entry-point-addr-uint983 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point985 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr984, align 8
  %381 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point985({}* %149, i64 5, {}* %377, {}* %378, {}* %"%SUBLIST156501.01948", {}* %379, {}* %380)
          to label %normal-dest988 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest988:                                   ; preds = %normal-dest981
  %.elt1713 = extractvalue { {}*, i64 } %381, 0
  %.elt1715 = extractvalue { {}*, i64 } %381, 1
  %cond1564 = icmp eq i64 %.elt1715, 0
  %382 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in1706 = select i1 %cond1564, {}* %382, {}* %.elt1713
  %.val1893.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag2

normal-dest1010:                                  ; preds = %tag212
  %ptrtoint1011 = ptrtoint {}* %151 to i64
  %entry-point-addr-uint1012 = add i64 %ptrtoint1011, 7
  %entry-point-addr1013 = inttoptr i64 %entry-point-addr-uint1012 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1014 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1013, align 8
  %383 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1014({}* %151, i64 2, {}* inttoptr (i64 4 to {}*), {}* %y1115.0, {}* null, {}* null)
          to label %normal-dest1017 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1017:                                  ; preds = %normal-dest1010
  %.elt1592 = extractvalue { {}*, i64 } %383, 0
  %.elt1594 = extractvalue { {}*, i64 } %383, 1
  %cond1548 = icmp eq i64 %.elt1594, 0
  %384 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156956.1 = select i1 %cond1548, {}* %384, {}* %.elt1592
  br label %tag81

normal-dest1024:                                  ; preds = %tag213
  %ptrtoint1025 = ptrtoint {}* %153 to i64
  %entry-point-addr-uint1026 = add i64 %ptrtoint1025, 7
  %entry-point-addr1027 = inttoptr i64 %entry-point-addr-uint1026 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1028 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1027, align 8
  %385 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1028({}* %153, i64 2, {}* nonnull %123, {}* nonnull %.in1707, {}* null, {}* null)
          to label %normal-dest1031 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1031:                                  ; preds = %normal-dest1024
  %.elt1709 = extractvalue { {}*, i64 } %385, 0
  %.elt1711 = extractvalue { {}*, i64 } %385, 1
  %cond1563 = icmp eq i64 %.elt1711, 0
  %386 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156652.1 = select i1 %cond1563, {}* %386, {}* %.elt1709
  br label %tag265

normal-dest1050:                                  ; preds = %normal-dest857
  call void @unreachableError()
  unreachable

normal-dest1055:                                  ; preds = %tag222
  %387 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %388 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %389 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %390 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint1056 = ptrtoint {}* %158 to i64
  %entry-point-addr-uint1057 = add i64 %ptrtoint1056, 7
  %entry-point-addr1058 = inttoptr i64 %entry-point-addr-uint1057 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1059 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1058, align 8
  %391 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1059({}* %158, i64 5, {}* %387, {}* %388, {}* %"%SUBLIST156508.01943", {}* %389, {}* %390)
          to label %normal-dest1062 unwind label %cleanup-lpad.loopexit

normal-dest1062:                                  ; preds = %normal-dest1055
  %.elt1694 = extractvalue { {}*, i64 } %391, 0
  %.elt1696 = extractvalue { {}*, i64 } %391, 1
  %cond1561 = icmp eq i64 %.elt1696, 0
  %392 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in = select i1 %cond1561, {}* %392, {}* %.elt1694
  %.val1899.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag15

normal-dest1069:                                  ; preds = %tag224
  %393 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 88), align 16
  %394 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %ptrtoint1070 = ptrtoint {}* %160 to i64
  %entry-point-addr-uint1071 = add i64 %ptrtoint1070, 7
  %entry-point-addr1072 = inttoptr i64 %entry-point-addr-uint1071 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1073 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1072, align 8
  %395 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1073({}* %160, i64 3, {}* %farg1, {}* %393, {}* %394, {}* null)
          to label %normal-dest1076 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1076:                                  ; preds = %normal-dest1069
  %.elt1628 = extractvalue { {}*, i64 } %395, 0
  %.elt1630 = extractvalue { {}*, i64 } %395, 1
  %cond1553 = icmp eq i64 %.elt1630, 0
  %396 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156473.0 = select i1 %cond1553, {}* %396, {}* %.elt1628
  %397 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 86), align 16
  %398 = invoke {}* @cc_safe_fdefinition({}* %397)
          to label %normal-dest1083 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1083:                                  ; preds = %normal-dest1076
  %399 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 314), align 16
  %ptrtoint1084 = ptrtoint {}* %398 to i64
  %entry-point-addr-uint1085 = add i64 %ptrtoint1084, 7
  %entry-point-addr1086 = inttoptr i64 %entry-point-addr-uint1085 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1087 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1086, align 8
  %400 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1087({}* %398, i64 2, {}* %farg1, {}* %399, {}* null, {}* null)
          to label %normal-dest1090 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1090:                                  ; preds = %normal-dest1083
  %.elt1632 = extractvalue { {}*, i64 } %400, 0
  %.elt1634 = extractvalue { {}*, i64 } %400, 1
  %cond1554 = icmp eq i64 %.elt1634, 0
  %401 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156481.0 = select i1 %cond1554, {}* %401, {}* %.elt1632
  %402 = icmp eq {}* %G156481.0, %401
  br i1 %402, label %tag314, label %tag110

normal-dest1133:                                  ; preds = %tag236
  %403 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %404 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %405 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %406 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %ptrtoint847 = ptrtoint {}* %170 to i64
  %entry-point-addr-uint848 = add i64 %ptrtoint847, 7
  %entry-point-addr849 = inttoptr i64 %entry-point-addr-uint848 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point850 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr849, align 8
  %407 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point850({}* %170, i64 5, {}* %403, {}* %404, {}* %"%SUBLIST156508.01943", {}* %405, {}* %406)
          to label %normal-dest853 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1160:                                  ; preds = %tag255
  %408 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %409 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %410 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %411 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %ptrtoint924 = ptrtoint {}* %173 to i64
  %entry-point-addr-uint925 = add i64 %ptrtoint924, 7
  %entry-point-addr926 = inttoptr i64 %entry-point-addr-uint925 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point927 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr926, align 8
  %412 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point927({}* %173, i64 5, {}* %408, {}* %409, {}* %"%SUBLIST156501.01948", {}* %410, {}* %411)
          to label %normal-dest930 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1165:                                  ; preds = %tag262
  %ptrtoint1166 = ptrtoint {}* %183 to i64
  %entry-point-addr-uint1167 = add i64 %ptrtoint1166, 7
  %entry-point-addr1168 = inttoptr i64 %entry-point-addr-uint1167 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1169 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1168, align 8
  %413 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1169({}* %183, i64 1, {}* %198, {}* null, {}* null, {}* null)
          to label %normal-dest1172 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest1172:                                  ; preds = %normal-dest1165
  %.elt1616 = extractvalue { {}*, i64 } %413, 0
  %.elt1618 = extractvalue { {}*, i64 } %413, 1
  %cond1551 = icmp eq i64 %.elt1618, 0
  %414 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond1551, {}* %414, {}* %.elt1616
  br label %tag143.outer.backedge

header-check-br1195:                              ; preds = %tag276
  %irc-bit-cast1199 = bitcast {}* %farg1 to i8*
  %gep1200 = getelementptr inbounds i8, i8* %irc-bit-cast1199, i64 -9
  %irc-bit-cast1201 = bitcast i8* %gep1200 to i64*
  %415 = load i64, i64* %irc-bit-cast1201, align 8
  %.off = add i64 %415, -1081
  %416 = icmp ult i64 %.off, 69
  br i1 %416, label %tag383, label %header-check-br1408

normal-dest1260:                                  ; preds = %maybe-more-tests1416
  %ptrtoint1261 = ptrtoint {}* %437 to i64
  %entry-point-addr-uint1262 = add i64 %ptrtoint1261, 7
  %entry-point-addr1263 = inttoptr i64 %entry-point-addr-uint1262 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1264 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1263, align 8
  %417 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1264({}* %437, i64 1, {}* nonnull %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest1267 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1267:                                  ; preds = %normal-dest1260
  %.elt1779 = extractvalue { {}*, i64 } %417, 0
  %.elt1781 = extractvalue { {}*, i64 } %417, 1
  %cond1576 = icmp eq i64 %.elt1781, 0
  %418 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157053.0 = select i1 %cond1576, {}* %418, {}* %.elt1779
  %419 = icmp eq {}* %G157053.0, inttoptr (i64 4 to {}*)
  br i1 %419, label %tag383, label %tag170

normal-dest1301:                                  ; preds = %tag309
  %420 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 310), align 16
  %ptrtoint1302 = ptrtoint {}* %207 to i64
  %entry-point-addr-uint1303 = add i64 %ptrtoint1302, 7
  %entry-point-addr1304 = inttoptr i64 %entry-point-addr-uint1303 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1305 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1304, align 8
  %421 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1305({}* %207, i64 2, {}* %farg1, {}* %420, {}* null, {}* null)
          to label %normal-dest1308 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1308:                                  ; preds = %normal-dest1301
  %.elt1791 = extractvalue { {}*, i64 } %421, 0
  %.elt1793 = extractvalue { {}*, i64 } %421, 1
  %cond1578 = icmp eq i64 %.elt1793, 0
  %422 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %y1115.1 = select i1 %cond1578, {}* %422, {}* %.elt1791
  br label %tag360

normal-dest1319:                                  ; preds = %tag311
  %ptrtoint1320 = ptrtoint {}* %210 to i64
  %entry-point-addr-uint1321 = add i64 %ptrtoint1320, 7
  %entry-point-addr1322 = inttoptr i64 %entry-point-addr-uint1321 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1323 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1322, align 8
  %423 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1323({}* %210, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest1326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest1326:                                  ; preds = %normal-dest1319
  %.elt1612 = extractvalue { {}*, i64 } %423, 0
  %.elt1614 = extractvalue { {}*, i64 } %423, 1
  %cond1550 = icmp eq i64 %.elt1614, 0
  %424 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond1550, {}* %424, {}* %.elt1612
  br label %tag143.outer.backedge

normal-dest1333:                                  ; preds = %tag312
  %425 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 311), align 8
  %ptrtoint1334 = ptrtoint {}* %212 to i64
  %entry-point-addr-uint1335 = add i64 %ptrtoint1334, 7
  %entry-point-addr1336 = inttoptr i64 %entry-point-addr-uint1335 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1337 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1336, align 8
  %426 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1337({}* %212, i64 2, {}* %G2095854.0, {}* %425, {}* null, {}* null)
          to label %tag16 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest1348:                                  ; preds = %tag314
  %427 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 316), align 16
  %ptrtoint1349 = ptrtoint {}* %217 to i64
  %entry-point-addr-uint1350 = add i64 %ptrtoint1349, 7
  %entry-point-addr1351 = inttoptr i64 %entry-point-addr-uint1350 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1352 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1351, align 8
  %428 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1352({}* %217, i64 2, {}* %farg1, {}* %427, {}* null, {}* null)
          to label %normal-dest1355 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1355:                                  ; preds = %normal-dest1348
  %.elt1755 = extractvalue { {}*, i64 } %428, 0
  %.elt1757 = extractvalue { {}*, i64 } %428, 1
  %cond1571 = icmp eq i64 %.elt1757, 0
  %429 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156483.0 = select i1 %cond1571, {}* %429, {}* %.elt1755
  %430 = icmp eq {}* %G156483.0, %429
  br i1 %430, label %tag361, label %tag110

normal-dest1367:                                  ; preds = %normal-dest562
  call void @unreachableError()
  unreachable

normal-dest1381:                                  ; preds = %tag320
  %.elt1620 = extractvalue { {}*, i64 } %225, 0
  %.elt1622 = extractvalue { {}*, i64 } %225, 1
  %cond1552 = icmp eq i64 %.elt1622, 0
  %431 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156857.0 = select i1 %cond1552, {}* %431, {}* %.elt1620
  %432 = icmp eq {}* %G156857.0, %431
  br i1 %432, label %tag224, label %tag177

header-check-br1399:                              ; preds = %tag335
  %irc-bit-cast1403 = bitcast {}* %farg1 to i8*
  %gep1404 = getelementptr inbounds i8, i8* %irc-bit-cast1403, i64 -9
  %irc-bit-cast1405 = bitcast i8* %gep1404 to i64*
  %433 = load i64, i64* %irc-bit-cast1405, align 8
  %.off1906 = add i64 %433, -1081
  %434 = icmp ult i64 %.off1906, 69
  br i1 %434, label %tag227, label %header-check-br818

header-check-br1408:                              ; preds = %header-check-br1195
  %.off1903 = add i64 %415, -1153
  %435 = icmp ult i64 %.off1903, 149
  br i1 %435, label %maybe-more-tests1416, label %tag170

maybe-more-tests1416:                             ; preds = %header-check-br1408
  %436 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 119), align 8
  %437 = invoke {}* @cc_safe_fdefinition({}* %436)
          to label %normal-dest1260 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1451:                                  ; preds = %tag355
  %.elt1597 = extractvalue { {}*, i64 } %233, 0
  %438 = ptrtoint {}* %.elt1597 to i64
  %.elt1599 = extractvalue { {}*, i64 } %233, 1
  br label %tag193

normal-dest1464:                                  ; preds = %tag361
  %439 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 318), align 16
  %ptrtoint1465 = ptrtoint {}* %237 to i64
  %entry-point-addr-uint1466 = add i64 %ptrtoint1465, 7
  %entry-point-addr1467 = inttoptr i64 %entry-point-addr-uint1466 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1468 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1467, align 8
  %440 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1468({}* %237, i64 2, {}* %farg1, {}* %439, {}* null, {}* null)
          to label %normal-dest1471 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1471:                                  ; preds = %normal-dest1464
  %.elt1759 = extractvalue { {}*, i64 } %440, 0
  %.elt1761 = extractvalue { {}*, i64 } %440, 1
  %cond1572 = icmp eq i64 %.elt1761, 0
  %441 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156485.0 = select i1 %cond1572, {}* %441, {}* %.elt1759
  %442 = icmp eq {}* %G156485.0, %441
  br i1 %442, label %tag86, label %tag110

normal-dest1480:                                  ; preds = %tag364
  %443 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %444 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %445 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %446 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint1481 = ptrtoint {}* %239 to i64
  %entry-point-addr-uint1482 = add i64 %ptrtoint1481, 7
  %entry-point-addr1483 = inttoptr i64 %entry-point-addr-uint1482 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1484 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1483, align 8
  %447 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1484({}* %239, i64 5, {}* %443, {}* %444, {}* %"%SUBLIST156494.01954", {}* %445, {}* %446)
          to label %normal-dest1487 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1487:                                  ; preds = %normal-dest1480
  %.elt1732 = extractvalue { {}*, i64 } %447, 0
  %.elt1734 = extractvalue { {}*, i64 } %447, 1
  %cond1567 = icmp eq i64 %.elt1734, 0
  %448 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in1725 = select i1 %cond1567, {}* %448, {}* %.elt1732
  %.val1887.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag27

normal-dest1520:                                  ; preds = %tag378
  %449 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 256), align 16
  %450 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 257), align 8
  %451 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 259), align 8
  %452 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 134), align 16
  %453 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 138), align 16
  %454 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 261), align 8
  %ptrtoint1521 = ptrtoint {}* %241 to i64
  %entry-point-addr-uint1522 = add i64 %ptrtoint1521, 7
  %entry-point-addr1523 = inttoptr i64 %entry-point-addr-uint1522 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1524 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1523, align 8
  %455 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1524({}* %241, i64 14, {}* %farg0, {}* %G156479.0, {}* %449, {}* %G156474.0, {}* %450, {}* %G156475.0, {}* %451, {}* %G156477.0, {}* %452, {}* %G156473.0, {}* %453, {}* %G156476.0, {}* %454, {}* %G156478.0)
          to label %normal-dest1527 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1527:                                  ; preds = %normal-dest1520
  %.elt1658 = extractvalue { {}*, i64 } %455, 0
  %456 = ptrtoint {}* %.elt1658 to i64
  %.elt1660 = extractvalue { {}*, i64 } %455, 1
  br label %tag193

normal-dest1531:                                  ; preds = %tag381
  %457 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %458 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %459 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %460 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint1532 = ptrtoint {}* %243 to i64
  %entry-point-addr-uint1533 = add i64 %ptrtoint1532, 7
  %entry-point-addr1534 = inttoptr i64 %entry-point-addr-uint1533 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1535 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1534, align 8
  %461 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1535({}* %243, i64 5, {}* %457, {}* %458, {}* %farg1, {}* %459, {}* %460)
          to label %normal-dest1538 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1538:                                  ; preds = %normal-dest1531
  %.elt1604 = extractvalue { {}*, i64 } %461, 0
  %.elt1606 = extractvalue { {}*, i64 } %461, 1
  %cond1549 = icmp eq i64 %.elt1606, 0
  %462 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G156934.1 = select i1 %cond1549, {}* %462, {}* %.elt1604
  br label %tag355
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !46 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G157106.0 = phi {}* [ %18, %header-check-br ], [ %G157106.1, %normal-dest17 ], [ %G157106.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 283), align 8
  %ptrtoint43 = ptrtoint {}* %G157106.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G157106.0, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag3, %normal-dest21, %tag1, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 283), align 8
  %"closure->ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 12897, i64 287, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157106.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

normal-dest21:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 334), align 16
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157106.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag3

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 335), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 340), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1148 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 283), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !47 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 4
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 4
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc517 unwind label %cleanup-lpad

.noexc517:                                        ; preds = %13
  unreachable

tag6:                                             ; preds = %tag64
  %14 = icmp eq {}* %.val538, %farg1
  %15 = ptrtoint {}* %farg2 to i64
  %. = select i1 %14, i64 %51, i64 %15
  br label %tag40

tag7:                                             ; preds = %header-check-br298, %header-check-br298, %header-check-br298, %header-check-br298
  %16 = ptrtoint {}* %44 to i64
  %single-float-tag-only = and i64 %16, 7
  %fixnum-tag-only494 = and i64 %16, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only494, 0
  %test217 = icmp eq i64 %single-float-tag-only, 1
  %or.cond523 = and i1 %fixnump-test, %test217
  br i1 %or.cond523, label %header-check-br214, label %tag89

tag8:                                             ; preds = %tag64.tag8_crit_edge, %header-check-br354, %header-check-br421, %tag20, %tag23
  %.val537 = phi {}* [ %.val537.pre, %tag64.tag8_crit_edge ], [ %.val, %tag23 ], [ %.val, %tag20 ], [ %.val, %header-check-br421 ], [ %.val, %header-check-br354 ]
  %.val538545 = phi {}* [ %.val538, %tag64.tag8_crit_edge ], [ %.val536, %tag23 ], [ %.val536, %tag20 ], [ %.val536, %header-check-br421 ], [ %.val536, %header-check-br354 ]
  %17 = phi i64 [ %51, %tag64.tag8_crit_edge ], [ %67, %tag23 ], [ %67, %tag20 ], [ %67, %header-check-br421 ], [ %67, %header-check-br354 ]
  %18 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 287), align 8
  %19 = icmp eq {}* %18, %farg0
  %G157177.0 = select i1 %19, {}* %.val537, {}* %.val538545
  %20 = icmp eq {}* %G157177.0, %.val538545
  br i1 %20, label %tag67, label %tag52

tag12:                                            ; preds = %tag49
  %21 = icmp eq {}* %.val542, %farg1
  %22 = ptrtoint {}* %farg2 to i64
  %.546 = select i1 %21, i64 %41, i64 %22
  br label %tag40

tag14:                                            ; preds = %header-check-br421, %header-check-br421, %header-check-br421, %header-check-br421
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest140 unwind label %cleanup-lpad

tag17:                                            ; preds = %tag50
  %25 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only150 = and i64 %25, 7
  %fixnum-tag-only138492 = and i64 %25, 3
  %fixnump-test139 = icmp ne i64 %fixnum-tag-only138492, 0
  %test301 = icmp eq i64 %single-float-tag-only150, 1
  %or.cond528 = and i1 %fixnump-test139, %test301
  br i1 %or.cond528, label %header-check-br298, label %tag89

tag20:                                            ; preds = %normal-dest
  %26 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only151 = and i64 %26, 7
  %fixnum-tag-only125508 = and i64 %26, 3
  %fixnump-test126 = icmp ne i64 %fixnum-tag-only125508, 0
  %test357 = icmp eq i64 %single-float-tag-only151, 1
  %or.cond530 = and i1 %fixnump-test126, %test357
  br i1 %or.cond530, label %header-check-br354, label %tag8

tag23:                                            ; preds = %header-check-br354, %header-check-br354, %header-check-br354, %header-check-br354
  %27 = ptrtoint {}* %64 to i64
  %single-float-tag-only166 = and i64 %27, 7
  %fixnum-tag-only235510 = and i64 %27, 3
  %fixnump-test236 = icmp ne i64 %fixnum-tag-only235510, 0
  %test424 = icmp eq i64 %single-float-tag-only166, 1
  %or.cond532 = and i1 %fixnump-test236, %test424
  br i1 %or.cond532, label %header-check-br421, label %tag8

tag25:                                            ; preds = %tag89, %normal-dest197
  %28 = phi i64 [ %73, %normal-dest197 ], [ %55, %tag89 ]
  %29 = phi {}* [ %72, %normal-dest197 ], [ %.val542543, %tag89 ]
  %G157132.0 = phi {}* [ %G157132.1, %normal-dest197 ], [ %.val541, %tag89 ]
  %30 = icmp eq {}* %G157132.0, %29
  %31 = icmp eq {}* %29, %farg1
  %or.cond = or i1 %31, %30
  br i1 %or.cond, label %tag40, label %tag37

tag32:                                            ; preds = %header-check-br460, %header-check-br460, %header-check-br460, %header-check-br460
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest188 unwind label %cleanup-lpad

tag35:                                            ; preds = %header-check-br306, %header-check-br306, %header-check-br306, %header-check-br306
  %34 = ptrtoint {}* %56 to i64
  %single-float-tag-only211 = and i64 %34, 7
  %fixnum-tag-only237487 = and i64 %34, 3
  %fixnump-test238 = icmp ne i64 %fixnum-tag-only237487, 0
  %test463 = icmp eq i64 %single-float-tag-only211, 1
  %or.cond535 = and i1 %fixnump-test238, %test463
  br i1 %or.cond535, label %header-check-br460, label %tag40

tag37:                                            ; preds = %tag25
  %35 = icmp eq {}* %29, %farg2
  %36 = ptrtoint {}* %farg3 to i64
  %.547 = select i1 %35, i64 %28, i64 %36
  br label %tag40

tag40:                                            ; preds = %tag60, %tag37, %tag12, %tag6, %header-check-br460, %header-check-br306, %tag35, %tag46, %tag25
  %return-value.sroa.0.0 = phi i64 [ %28, %tag25 ], [ %55, %tag46 ], [ %55, %tag35 ], [ %., %tag6 ], [ %.546, %tag12 ], [ %55, %header-check-br306 ], [ %55, %header-check-br460 ], [ %.548, %tag60 ], [ %.547, %tag37 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %38 = insertvalue { {}*, i64 } undef, {}* %37, 0
  %39 = insertvalue { {}*, i64 } %38, i64 1, 1
  ret { {}*, i64 } %39

tag46:                                            ; preds = %tag89
  %40 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only243 = and i64 %40, 7
  %fixnum-tag-only269485 = and i64 %40, 3
  %fixnump-test270 = icmp ne i64 %fixnum-tag-only269485, 0
  %test309 = icmp eq i64 %single-float-tag-only243, 1
  %or.cond529 = and i1 %fixnump-test270, %test309
  br i1 %or.cond529, label %header-check-br306, label %tag40

tag49:                                            ; preds = %tag50, %normal-dest445
  %41 = phi i64 [ %109, %normal-dest445 ], [ %43, %tag50 ]
  %.val542 = phi {}* [ %108, %normal-dest445 ], [ %.val540544, %tag50 ]
  %G157150.0 = phi {}* [ %G157150.1, %normal-dest445 ], [ %.val539, %tag50 ]
  %42 = icmp eq {}* %G157150.0, %.val542
  br i1 %42, label %tag49.tag89_crit_edge, label %tag12

tag49.tag89_crit_edge:                            ; preds = %tag49
  %.val541.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag89

tag50:                                            ; preds = %tag52.tag50_crit_edge, %header-check-br453, %header-check-br430, %tag82, %tag67
  %.val539 = phi {}* [ %.val539.pre, %tag52.tag50_crit_edge ], [ %.val537, %tag67 ], [ %.val537, %tag82 ], [ %.val537, %header-check-br430 ], [ %.val537, %header-check-br453 ]
  %.val540544 = phi {}* [ %.val540, %tag52.tag50_crit_edge ], [ %.val538545, %tag67 ], [ %.val538545, %tag82 ], [ %.val538545, %header-check-br430 ], [ %.val538545, %header-check-br453 ]
  %43 = phi i64 [ %47, %tag52.tag50_crit_edge ], [ %17, %tag67 ], [ %17, %tag82 ], [ %17, %header-check-br430 ], [ %17, %header-check-br453 ]
  %44 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 291), align 8
  %45 = icmp eq {}* %44, %farg0
  %G157159.0 = select i1 %45, {}* %.val539, {}* %.val540544
  %46 = icmp eq {}* %G157159.0, %.val540544
  br i1 %46, label %tag17, label %tag49

tag52:                                            ; preds = %tag8, %normal-dest407
  %47 = phi i64 [ %96, %normal-dest407 ], [ %17, %tag8 ]
  %.val540 = phi {}* [ %95, %normal-dest407 ], [ %.val538545, %tag8 ]
  %G157168.0 = phi {}* [ %G157168.1, %normal-dest407 ], [ %.val537, %tag8 ]
  %48 = icmp eq {}* %G157168.0, %.val540
  br i1 %48, label %tag52.tag50_crit_edge, label %tag60

tag52.tag50_crit_edge:                            ; preds = %tag52
  %.val539.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag50

tag60:                                            ; preds = %tag52
  %49 = icmp eq {}* %.val540, %farg1
  %50 = ptrtoint {}* %farg2 to i64
  %.548 = select i1 %49, i64 %47, i64 %50
  br label %tag40

tag64:                                            ; preds = %normal-dest, %normal-dest144
  %51 = phi i64 [ %70, %normal-dest144 ], [ %67, %normal-dest ]
  %.val538 = phi {}* [ %69, %normal-dest144 ], [ %.val536, %normal-dest ]
  %G157186.0 = phi {}* [ %G157186.1, %normal-dest144 ], [ %.val, %normal-dest ]
  %52 = icmp eq {}* %G157186.0, %.val538
  br i1 %52, label %tag64.tag8_crit_edge, label %tag6

tag64.tag8_crit_edge:                             ; preds = %tag64
  %.val537.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag8

tag67:                                            ; preds = %tag8
  %53 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only295 = and i64 %53, 7
  %fixnum-tag-only397500 = and i64 %53, 3
  %fixnump-test398 = icmp ne i64 %fixnum-tag-only397500, 0
  %test433 = icmp eq i64 %single-float-tag-only295, 1
  %or.cond533 = and i1 %fixnump-test398, %test433
  br i1 %or.cond533, label %header-check-br430, label %tag50

tag82:                                            ; preds = %header-check-br430, %header-check-br430, %header-check-br430, %header-check-br430
  %54 = ptrtoint {}* %18 to i64
  %single-float-tag-only344 = and i64 %54, 7
  %fixnum-tag-only260502 = and i64 %54, 3
  %fixnump-test261 = icmp ne i64 %fixnum-tag-only260502, 0
  %test456 = icmp eq i64 %single-float-tag-only344, 1
  %or.cond534 = and i1 %fixnump-test261, %test456
  br i1 %or.cond534, label %header-check-br453, label %tag50

tag89:                                            ; preds = %tag49.tag89_crit_edge, %header-check-br214, %header-check-br298, %tag7, %tag17
  %.val541 = phi {}* [ %.val541.pre, %tag49.tag89_crit_edge ], [ %.val539, %tag17 ], [ %.val539, %tag7 ], [ %.val539, %header-check-br298 ], [ %.val539, %header-check-br214 ]
  %.val542543 = phi {}* [ %.val542, %tag49.tag89_crit_edge ], [ %.val540544, %tag17 ], [ %.val540544, %tag7 ], [ %.val540544, %header-check-br298 ], [ %.val540544, %header-check-br214 ]
  %55 = phi i64 [ %41, %tag49.tag89_crit_edge ], [ %43, %tag17 ], [ %43, %tag7 ], [ %43, %header-check-br298 ], [ %43, %header-check-br214 ]
  %56 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 289), align 8
  %57 = icmp eq {}* %56, %farg0
  %G157141.0 = select i1 %57, {}* %.val541, {}* %.val542543
  %58 = icmp eq {}* %G157141.0, %.val542543
  br i1 %58, label %tag46, label %tag25

tag97:                                            ; preds = %header-check-br453, %header-check-br453, %header-check-br453, %header-check-br453
  %59 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest400 unwind label %cleanup-lpad

tag103:                                           ; preds = %header-check-br214, %header-check-br214, %header-check-br214, %header-check-br214
  %61 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest438 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest438, %tag103, %normal-dest400, %tag97, %normal-dest188, %tag32, %normal-dest140, %tag14
  %63 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %63

normal-dest:                                      ; preds = %11
  %64 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 285), align 8
  %65 = icmp eq {}* %64, %farg0
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %.val536 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157195.0 = select i1 %65, {}* %.val, {}* %.val536
  %66 = icmp eq {}* %G157195.0, %.val536
  %67 = ptrtoint {}* %.val536 to i64
  br i1 %66, label %tag20, label %tag64

normal-dest140:                                   ; preds = %tag14
  %ptrtoint141 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint = add i64 %ptrtoint141, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %24, i64 2, {}* nonnull %farg0, {}* nonnull %64, {}* null, {}* null)
          to label %normal-dest144 unwind label %cleanup-lpad

normal-dest144:                                   ; preds = %normal-dest140
  %.elt513 = extractvalue { {}*, i64 } %68, 0
  %.elt515 = extractvalue { {}*, i64 } %68, 1
  %cond482 = icmp eq i64 %.elt515, 0
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157186.1 = select i1 %cond482, {}* %69, {}* %.elt513
  %70 = ptrtoint {}* %69 to i64
  br label %tag64

normal-dest188:                                   ; preds = %tag32
  %ptrtoint191 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint192 = add i64 %ptrtoint191, 7
  %entry-point-addr193 = inttoptr i64 %entry-point-addr-uint192 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point194 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr193, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point194({}* %33, i64 2, {}* nonnull %farg0, {}* nonnull %56, {}* null, {}* null)
          to label %normal-dest197 unwind label %cleanup-lpad

normal-dest197:                                   ; preds = %normal-dest188
  %.elt489 = extractvalue { {}*, i64 } %71, 0
  %.elt491 = extractvalue { {}*, i64 } %71, 1
  %cond = icmp eq i64 %.elt491, 0
  %72 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157132.1 = select i1 %cond, {}* %72, {}* %.elt489
  %73 = ptrtoint {}* %72 to i64
  br label %tag25

header-check-br214:                               ; preds = %tag7
  %irc-bit-cast218 = bitcast {}* %44 to i8*
  %gep219 = getelementptr inbounds i8, i8* %irc-bit-cast218, i64 -9
  %irc-bit-cast220 = bitcast i8* %gep219 to i64*
  %74 = load i64, i64* %irc-bit-cast220, align 8
  %75 = add i64 %74, -1309
  %76 = lshr i64 %75, 3
  %77 = shl i64 %75, 61
  %78 = or i64 %76, %77
  switch i64 %78, label %tag89 [
    i64 2, label %tag103
    i64 4, label %tag103
    i64 5, label %tag103
    i64 0, label %tag103
  ]

header-check-br298:                               ; preds = %tag17
  %irc-bit-cast302 = bitcast {}* %farg0 to i8*
  %gep303 = getelementptr inbounds i8, i8* %irc-bit-cast302, i64 -9
  %irc-bit-cast304 = bitcast i8* %gep303 to i64*
  %79 = load i64, i64* %irc-bit-cast304, align 8
  %80 = add i64 %79, -1309
  %81 = lshr i64 %80, 3
  %82 = shl i64 %80, 61
  %83 = or i64 %81, %82
  switch i64 %83, label %tag89 [
    i64 2, label %tag7
    i64 4, label %tag7
    i64 5, label %tag7
    i64 0, label %tag7
  ]

header-check-br306:                               ; preds = %tag46
  %irc-bit-cast310 = bitcast {}* %farg0 to i8*
  %gep311 = getelementptr inbounds i8, i8* %irc-bit-cast310, i64 -9
  %irc-bit-cast312 = bitcast i8* %gep311 to i64*
  %84 = load i64, i64* %irc-bit-cast312, align 8
  %85 = add i64 %84, -1309
  %86 = lshr i64 %85, 3
  %87 = shl i64 %85, 61
  %88 = or i64 %86, %87
  switch i64 %88, label %tag40 [
    i64 2, label %tag35
    i64 4, label %tag35
    i64 5, label %tag35
    i64 0, label %tag35
  ]

header-check-br354:                               ; preds = %tag20
  %irc-bit-cast358 = bitcast {}* %farg0 to i8*
  %gep359 = getelementptr inbounds i8, i8* %irc-bit-cast358, i64 -9
  %irc-bit-cast360 = bitcast i8* %gep359 to i64*
  %89 = load i64, i64* %irc-bit-cast360, align 8
  %90 = add i64 %89, -1309
  %91 = lshr i64 %90, 3
  %92 = shl i64 %90, 61
  %93 = or i64 %91, %92
  switch i64 %93, label %tag8 [
    i64 2, label %tag23
    i64 4, label %tag23
    i64 5, label %tag23
    i64 0, label %tag23
  ]

normal-dest400:                                   ; preds = %tag97
  %ptrtoint401 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint402 = add i64 %ptrtoint401, 7
  %entry-point-addr403 = inttoptr i64 %entry-point-addr-uint402 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point404 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr403, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point404({}* %60, i64 2, {}* nonnull %farg0, {}* nonnull %18, {}* null, {}* null)
          to label %normal-dest407 unwind label %cleanup-lpad

normal-dest407:                                   ; preds = %normal-dest400
  %.elt505 = extractvalue { {}*, i64 } %94, 0
  %.elt507 = extractvalue { {}*, i64 } %94, 1
  %cond481 = icmp eq i64 %.elt507, 0
  %95 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157168.1 = select i1 %cond481, {}* %95, {}* %.elt505
  %96 = ptrtoint {}* %95 to i64
  br label %tag52

header-check-br421:                               ; preds = %tag23
  %irc-bit-cast425 = bitcast {}* %64 to i8*
  %gep426 = getelementptr inbounds i8, i8* %irc-bit-cast425, i64 -9
  %irc-bit-cast427 = bitcast i8* %gep426 to i64*
  %97 = load i64, i64* %irc-bit-cast427, align 8
  %98 = add i64 %97, -1309
  %99 = lshr i64 %98, 3
  %100 = shl i64 %98, 61
  %101 = or i64 %99, %100
  switch i64 %101, label %tag8 [
    i64 2, label %tag14
    i64 4, label %tag14
    i64 5, label %tag14
    i64 0, label %tag14
  ]

header-check-br430:                               ; preds = %tag67
  %irc-bit-cast434 = bitcast {}* %farg0 to i8*
  %gep435 = getelementptr inbounds i8, i8* %irc-bit-cast434, i64 -9
  %irc-bit-cast436 = bitcast i8* %gep435 to i64*
  %102 = load i64, i64* %irc-bit-cast436, align 8
  %103 = add i64 %102, -1309
  %104 = lshr i64 %103, 3
  %105 = shl i64 %103, 61
  %106 = or i64 %104, %105
  switch i64 %106, label %tag50 [
    i64 2, label %tag82
    i64 4, label %tag82
    i64 5, label %tag82
    i64 0, label %tag82
  ]

normal-dest438:                                   ; preds = %tag103
  %ptrtoint439 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint440 = add i64 %ptrtoint439, 7
  %entry-point-addr441 = inttoptr i64 %entry-point-addr-uint440 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point442 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr441, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point442({}* %62, i64 2, {}* nonnull %farg0, {}* nonnull %44, {}* null, {}* null)
          to label %normal-dest445 unwind label %cleanup-lpad

normal-dest445:                                   ; preds = %normal-dest438
  %.elt497 = extractvalue { {}*, i64 } %107, 0
  %.elt499 = extractvalue { {}*, i64 } %107, 1
  %cond480 = icmp eq i64 %.elt499, 0
  %108 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157150.1 = select i1 %cond480, {}* %108, {}* %.elt497
  %109 = ptrtoint {}* %108 to i64
  br label %tag49

header-check-br453:                               ; preds = %tag82
  %irc-bit-cast457 = bitcast {}* %18 to i8*
  %gep458 = getelementptr inbounds i8, i8* %irc-bit-cast457, i64 -9
  %irc-bit-cast459 = bitcast i8* %gep458 to i64*
  %110 = load i64, i64* %irc-bit-cast459, align 8
  %111 = add i64 %110, -1309
  %112 = lshr i64 %111, 3
  %113 = shl i64 %111, 61
  %114 = or i64 %112, %113
  switch i64 %114, label %tag50 [
    i64 2, label %tag97
    i64 4, label %tag97
    i64 5, label %tag97
    i64 0, label %tag97
  ]

header-check-br460:                               ; preds = %tag35
  %irc-bit-cast464 = bitcast {}* %56 to i8*
  %gep465 = getelementptr inbounds i8, i8* %irc-bit-cast464, i64 -9
  %irc-bit-cast466 = bitcast i8* %gep465 to i64*
  %115 = load i64, i64* %irc-bit-cast466, align 8
  %116 = add i64 %115, -1309
  %117 = lshr i64 %116, 3
  %118 = shl i64 %116, 61
  %119 = or i64 %117, %118
  switch i64 %119, label %tag40 [
    i64 2, label %tag32
    i64 4, label %tag32
    i64 5, label %tag32
    i64 0, label %tag32
  ]
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !48 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G157223.0 = phi {}* [ %18, %header-check-br ], [ %G157223.1, %normal-dest63 ], [ %G157223.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %ptrtoint22 = ptrtoint {}* %G157223.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G157223.0, i64 2, {}* %"closure->ZWE-UEBERSETZUNGS_FEHLER", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests21, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  %"closure->ZWE-UEBERSETZUNGS_FEHLER" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 13210, i64 295, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 361), align 8
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->ZWE-UEBERSETZUNGS_FEHLER", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 366), align 16
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->ZWE-UEBERSETZUNGS_FEHLER", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 1180 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 108), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %maybe-more-tests21
  %ptrtoint57 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157223.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag1

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 360), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157223.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !49 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc577 unwind label %cleanup-lpad

.noexc577:                                        ; preds = %13
  unreachable

tag4:                                             ; preds = %header-check-br252, %header-check-br252, %header-check-br252, %header-check-br252
  %14 = ptrtoint {}* %32 to i64
  %single-float-tag-only = and i64 %14, 7
  %15 = icmp eq i64 %single-float-tag-only, 6
  br i1 %15, label %tag99, label %tag74

tag9:                                             ; preds = %header-check-br142, %header-check-br142, %header-check-br142, %header-check-br142
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest166 unwind label %cleanup-lpad

tag13:                                            ; preds = %header-check-br346, %header-check-br360, %tag99, %tag25, %tag102, %normal-dest466
  %18 = phi {}* [ %121, %normal-dest466 ], [ %.val602604, %tag25 ], [ %.val602604, %tag102 ], [ %.val602604, %tag99 ], [ %.val602604, %header-check-br360 ], [ %.val602604, %header-check-br346 ]
  %G157259.0 = phi {}* [ %G157259.1, %normal-dest466 ], [ %.val602604, %tag25 ], [ %.val602604, %tag102 ], [ %.val601, %tag99 ], [ %.val602604, %header-check-br360 ], [ %.val602604, %header-check-br346 ]
  %19 = icmp eq {}* %G157259.0, %18
  %.576 = select i1 %19, {}* %18, {}* %54
  br label %tag32

tag14:                                            ; preds = %tag101.tag14_crit_edge, %header-check-br492, %header-check-br367, %tag104, %tag53
  %.val597 = phi {}* [ %.val597.pre, %tag101.tag14_crit_edge ], [ %.val, %tag53 ], [ %.val, %tag104 ], [ %.val, %header-check-br367 ], [ %.val, %header-check-br492 ]
  %.val598605 = phi {}* [ %.val598, %tag101.tag14_crit_edge ], [ %68, %tag53 ], [ %68, %tag104 ], [ %68, %header-check-br367 ], [ %68, %header-check-br492 ]
  %20 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 176), align 16
  %21 = icmp eq {}* %20, %farg1
  %G157296.0 = select i1 %21, {}* %.val597, {}* %.val598605
  %22 = icmp eq {}* %G157296.0, %.val598605
  br i1 %22, label %tag72, label %tag42

tag25:                                            ; preds = %header-check-br346, %header-check-br346, %header-check-br346, %header-check-br346
  %23 = ptrtoint {}* %44 to i64
  %single-float-tag-only250 = and i64 %23, 7
  %fixnum-tag-only344545 = and i64 %23, 3
  %fixnump-test345 = icmp ne i64 %fixnum-tag-only344545, 0
  %test363 = icmp eq i64 %single-float-tag-only250, 1
  %or.cond591 = and i1 %fixnump-test345, %test363
  br i1 %or.cond591, label %header-check-br360, label %tag13

tag26:                                            ; preds = %header-check-br404, %header-check-br404, %header-check-br404, %header-check-br404
  %24 = ptrtoint {}* %20 to i64
  %single-float-tag-only251 = and i64 %24, 7
  %25 = icmp eq i64 %single-float-tag-only251, 6
  br i1 %25, label %tag64, label %tag49

tag31:                                            ; preds = %header-check-br492, %header-check-br492, %header-check-br492, %header-check-br492
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest270 unwind label %cleanup-lpad

tag32:                                            ; preds = %tag13, %tag42, %tag68, %tag101
  %G157250.0 = phi {}* [ %51, %tag101 ], [ %53, %tag68 ], [ %52, %tag42 ], [ %.576, %tag13 ]
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 350), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest284 unwind label %cleanup-lpad

tag42:                                            ; preds = %tag14, %normal-dest419
  %.val600 = phi {}* [ %119, %normal-dest419 ], [ %.val598605, %tag14 ]
  %G157287.0 = phi {}* [ %G157287.1, %normal-dest419 ], [ %.val597, %tag14 ]
  %30 = icmp eq {}* %G157287.0, %.val600
  br i1 %30, label %tag42.tag64_crit_edge, label %tag32

tag42.tag64_crit_edge:                            ; preds = %tag42
  %.val599.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag64

tag45:                                            ; preds = %tag79
  %fixnum-tag-only376551 = and i64 %40, 3
  %fixnump-test377 = icmp ne i64 %fixnum-tag-only376551, 0
  %test255 = icmp eq i64 %single-float-tag-only437, 1
  %or.cond587 = and i1 %fixnump-test377, %test255
  br i1 %or.cond587, label %header-check-br252, label %tag99

tag49:                                            ; preds = %tag26
  %fixnum-tag-only379561 = and i64 %24, 3
  %fixnump-test380 = icmp ne i64 %fixnum-tag-only379561, 0
  %test265 = icmp eq i64 %single-float-tag-only251, 1
  %or.cond588 = and i1 %fixnump-test380, %test265
  br i1 %or.cond588, label %header-check-br262, label %tag64

tag53:                                            ; preds = %header-check-br367, %header-check-br367, %header-check-br367, %header-check-br367
  %31 = ptrtoint {}* %69 to i64
  %single-float-tag-only382 = and i64 %31, 7
  %fixnum-tag-only472569 = and i64 %31, 3
  %fixnump-test473 = icmp ne i64 %fixnum-tag-only472569, 0
  %test495 = icmp eq i64 %single-float-tag-only382, 1
  %or.cond595 = and i1 %fixnump-test473, %test495
  br i1 %or.cond595, label %header-check-br492, label %tag14

tag64:                                            ; preds = %tag42.tag64_crit_edge, %header-check-br404, %header-check-br262, %tag26, %tag49, %tag72, %tag87
  %.val599 = phi {}* [ %.val599.pre, %tag42.tag64_crit_edge ], [ %.val597, %tag87 ], [ %.val597, %tag72 ], [ %.val597, %tag49 ], [ %.val597, %tag26 ], [ %.val597, %header-check-br262 ], [ %.val597, %header-check-br404 ]
  %.val600603 = phi {}* [ %.val600, %tag42.tag64_crit_edge ], [ %.val598605, %tag87 ], [ %.val598605, %tag72 ], [ %.val598605, %tag49 ], [ %.val598605, %tag26 ], [ %.val598605, %header-check-br262 ], [ %.val598605, %header-check-br404 ]
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 236), align 16
  %33 = icmp eq {}* %32, %farg1
  %G157282.0 = select i1 %33, {}* %.val599, {}* %.val600603
  %34 = icmp eq {}* %G157282.0, %.val600603
  br i1 %34, label %tag79, label %tag68

tag67:                                            ; preds = %header-check-br262, %header-check-br262, %header-check-br262, %header-check-br262
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest412 unwind label %cleanup-lpad

tag68:                                            ; preds = %tag64, %normal-dest174
  %.val602 = phi {}* [ %78, %normal-dest174 ], [ %.val600603, %tag64 ]
  %G157273.0 = phi {}* [ %G157273.1, %normal-dest174 ], [ %.val599, %tag64 ]
  %37 = icmp eq {}* %G157273.0, %.val602
  br i1 %37, label %tag68.tag99_crit_edge, label %tag32

tag68.tag99_crit_edge:                            ; preds = %tag68
  %.val601.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag99

tag72:                                            ; preds = %tag14
  %38 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only427 = and i64 %38, 7
  %39 = icmp eq i64 %single-float-tag-only427, 6
  br i1 %39, label %tag64, label %tag87

tag74:                                            ; preds = %tag4
  %fixnum-tag-only428553 = and i64 %14, 3
  %fixnump-test429 = icmp ne i64 %fixnum-tag-only428553, 0
  %test145 = icmp eq i64 %single-float-tag-only, 1
  %or.cond586 = and i1 %fixnump-test429, %test145
  br i1 %or.cond586, label %header-check-br142, label %tag99

tag79:                                            ; preds = %tag64
  %40 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only437 = and i64 %40, 7
  %41 = icmp eq i64 %single-float-tag-only437, 6
  br i1 %41, label %tag99, label %tag45

tag87:                                            ; preds = %tag72
  %fixnum-tag-only455559 = and i64 %38, 3
  %fixnump-test456 = icmp ne i64 %fixnum-tag-only455559, 0
  %test407 = icmp eq i64 %single-float-tag-only427, 1
  %or.cond593 = and i1 %fixnump-test456, %test407
  br i1 %or.cond593, label %header-check-br404, label %tag64

tag88:                                            ; preds = %header-check-br360, %header-check-br360, %header-check-br360, %header-check-br360
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest458 unwind label %cleanup-lpad

tag99:                                            ; preds = %tag68.tag99_crit_edge, %header-check-br142, %header-check-br252, %tag4, %tag74, %tag45, %tag79
  %.val601 = phi {}* [ %.val601.pre, %tag68.tag99_crit_edge ], [ %.val599, %tag79 ], [ %.val599, %tag45 ], [ %.val599, %tag74 ], [ %.val599, %tag4 ], [ %.val599, %header-check-br252 ], [ %.val599, %header-check-br142 ]
  %.val602604 = phi {}* [ %.val602, %tag68.tag99_crit_edge ], [ %.val600603, %tag79 ], [ %.val600603, %tag45 ], [ %.val600603, %tag74 ], [ %.val600603, %tag4 ], [ %.val600603, %header-check-br252 ], [ %.val600603, %header-check-br142 ]
  %44 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 294), align 16
  %45 = icmp eq {}* %44, %farg1
  %G157268.0 = select i1 %45, {}* %.val601, {}* %.val602604
  %46 = icmp eq {}* %G157268.0, %.val602604
  br i1 %46, label %tag102, label %tag13

tag101:                                           ; preds = %normal-dest127, %normal-dest277
  %.val598 = phi {}* [ %90, %normal-dest277 ], [ %68, %normal-dest127 ]
  %G157301.0 = phi {}* [ %G157301.1, %normal-dest277 ], [ %.val, %normal-dest127 ]
  %47 = icmp eq {}* %G157301.0, %.val598
  br i1 %47, label %tag101.tag14_crit_edge, label %tag32

tag101.tag14_crit_edge:                           ; preds = %tag101
  %.val597.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag14

tag102:                                           ; preds = %tag99
  %48 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only513 = and i64 %48, 7
  %fixnum-tag-only543 = and i64 %48, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only543, 0
  %test349 = icmp eq i64 %single-float-tag-only513, 1
  %or.cond590 = and i1 %fixnump-test, %test349
  br i1 %or.cond590, label %header-check-br346, label %tag13

tag104:                                           ; preds = %normal-dest127
  %49 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only514 = and i64 %49, 7
  %fixnum-tag-only137567 = and i64 %49, 3
  %fixnump-test138 = icmp ne i64 %fixnum-tag-only137567, 0
  %test370 = icmp eq i64 %single-float-tag-only514, 1
  %or.cond592 = and i1 %fixnump-test138, %test370
  br i1 %or.cond592, label %header-check-br367, label %tag14

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest458, %tag88, %normal-dest412, %tag67, %normal-dest303, %normal-dest291, %normal-dest284, %tag32, %normal-dest270, %tag31, %normal-dest166, %tag9, %normal-dest120, %normal-dest116, %normal-dest113, %normal-dest111, %normal-dest109, %normal-dest
  %50 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %50

normal-dest:                                      ; preds = %11
  %51 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 342), align 16
  %52 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 343), align 8
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 344), align 16
  %54 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 345), align 8
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 346), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest109 unwind label %cleanup-lpad

normal-dest109:                                   ; preds = %normal-dest
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 348), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest111 unwind label %cleanup-lpad

normal-dest111:                                   ; preds = %normal-dest109
  %59 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 350), align 16
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest113 unwind label %cleanup-lpad

normal-dest113:                                   ; preds = %normal-dest111
  %61 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 352), align 16
  %ptrtoint = ptrtoint {}* %60 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %60, i64 1, {}* %61, {}* null, {}* null, {}* null)
          to label %normal-dest116 unwind label %cleanup-lpad

normal-dest116:                                   ; preds = %normal-dest113
  %.elt = extractvalue { {}*, i64 } %62, 0
  %.elt523 = extractvalue { {}*, i64 } %62, 1
  %cond = icmp eq i64 %.elt523, 0
  %63 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157246.0 = select i1 %cond, {}* %63, {}* %.elt
  %64 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 350), align 16
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest120 unwind label %cleanup-lpad

normal-dest120:                                   ; preds = %normal-dest116
  %66 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 354), align 16
  %ptrtoint121 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint122 = add i64 %ptrtoint121, 7
  %entry-point-addr123 = inttoptr i64 %entry-point-addr-uint122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr123, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point124({}* %65, i64 1, {}* %66, {}* null, {}* null, {}* null)
          to label %normal-dest127 unwind label %cleanup-lpad

normal-dest127:                                   ; preds = %normal-dest120
  %.elt525 = extractvalue { {}*, i64 } %67, 0
  %.elt527 = extractvalue { {}*, i64 } %67, 1
  %cond515 = icmp eq i64 %.elt527, 0
  %68 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157248.0 = select i1 %cond515, {}* %68, {}* %.elt525
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 110), align 16
  %70 = icmp eq {}* %69, %farg1
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G157310.0 = select i1 %70, {}* %.val, {}* %68
  %71 = icmp eq {}* %G157310.0, %68
  br i1 %71, label %tag104, label %tag101

header-check-br142:                               ; preds = %tag74
  %irc-bit-cast146 = bitcast {}* %32 to i8*
  %gep147 = getelementptr inbounds i8, i8* %irc-bit-cast146, i64 -9
  %irc-bit-cast148 = bitcast i8* %gep147 to i64*
  %72 = load i64, i64* %irc-bit-cast148, align 8
  %73 = add i64 %72, -1309
  %74 = lshr i64 %73, 3
  %75 = shl i64 %73, 61
  %76 = or i64 %74, %75
  switch i64 %76, label %tag99 [
    i64 2, label %tag9
    i64 4, label %tag9
    i64 5, label %tag9
    i64 0, label %tag9
  ]

normal-dest166:                                   ; preds = %tag9
  %ptrtoint168 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint169 = add i64 %ptrtoint168, 7
  %entry-point-addr170 = inttoptr i64 %entry-point-addr-uint169 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point171 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr170, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point171({}* %17, i64 2, {}* nonnull %farg1, {}* nonnull %32, {}* null, {}* null)
          to label %normal-dest174 unwind label %cleanup-lpad

normal-dest174:                                   ; preds = %normal-dest166
  %.elt556 = extractvalue { {}*, i64 } %77, 0
  %.elt558 = extractvalue { {}*, i64 } %77, 1
  %cond519 = icmp eq i64 %.elt558, 0
  %78 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157273.1 = select i1 %cond519, {}* %78, {}* %.elt556
  br label %tag68

header-check-br252:                               ; preds = %tag45
  %irc-bit-cast256 = bitcast {}* %farg1 to i8*
  %gep257 = getelementptr inbounds i8, i8* %irc-bit-cast256, i64 -9
  %irc-bit-cast258 = bitcast i8* %gep257 to i64*
  %79 = load i64, i64* %irc-bit-cast258, align 8
  %80 = add i64 %79, -1309
  %81 = lshr i64 %80, 3
  %82 = shl i64 %80, 61
  %83 = or i64 %81, %82
  switch i64 %83, label %tag99 [
    i64 2, label %tag4
    i64 4, label %tag4
    i64 5, label %tag4
    i64 0, label %tag4
  ]

header-check-br262:                               ; preds = %tag49
  %irc-bit-cast266 = bitcast {}* %20 to i8*
  %gep267 = getelementptr inbounds i8, i8* %irc-bit-cast266, i64 -9
  %irc-bit-cast268 = bitcast i8* %gep267 to i64*
  %84 = load i64, i64* %irc-bit-cast268, align 8
  %85 = add i64 %84, -1309
  %86 = lshr i64 %85, 3
  %87 = shl i64 %85, 61
  %88 = or i64 %86, %87
  switch i64 %88, label %tag64 [
    i64 2, label %tag67
    i64 4, label %tag67
    i64 5, label %tag67
    i64 0, label %tag67
  ]

normal-dest270:                                   ; preds = %tag31
  %ptrtoint271 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint272 = add i64 %ptrtoint271, 7
  %entry-point-addr273 = inttoptr i64 %entry-point-addr-uint272 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point274 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr273, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point274({}* %27, i64 2, {}* nonnull %farg1, {}* nonnull %69, {}* null, {}* null)
          to label %normal-dest277 unwind label %cleanup-lpad

normal-dest277:                                   ; preds = %normal-dest270
  %.elt572 = extractvalue { {}*, i64 } %89, 0
  %.elt574 = extractvalue { {}*, i64 } %89, 1
  %cond521 = icmp eq i64 %.elt574, 0
  %90 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157301.1 = select i1 %cond521, {}* %90, {}* %.elt572
  br label %tag101

normal-dest284:                                   ; preds = %tag32
  %91 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 356), align 16
  %ptrtoint285 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint286 = add i64 %ptrtoint285, 7
  %entry-point-addr287 = inttoptr i64 %entry-point-addr-uint286 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point288 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr287, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point288({}* %29, i64 1, {}* %91, {}* null, {}* null, {}* null)
          to label %normal-dest291 unwind label %cleanup-lpad

normal-dest291:                                   ; preds = %normal-dest284
  %.elt529 = extractvalue { {}*, i64 } %92, 0
  %.elt531 = extractvalue { {}*, i64 } %92, 1
  %cond516 = icmp eq i64 %.elt531, 0
  %93 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157253.0 = select i1 %cond516, {}* %93, {}* %.elt529
  %ptrtoint297 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint298 = add i64 %ptrtoint297, 7
  %entry-point-addr299 = inttoptr i64 %entry-point-addr-uint298 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point300 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr299, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point300({}* %58, i64 10, {}* %G157246.0, {}* inttoptr (i64 82 to {}*), {}* %G157248.0, {}* inttoptr (i64 82 to {}*), {}* %G157250.0, {}* inttoptr (i64 82 to {}*), {}* inttoptr (i64 82 to {}*), {}* %G157253.0, {}* inttoptr (i64 82 to {}*), {}* %farg0)
          to label %normal-dest303 unwind label %cleanup-lpad

normal-dest303:                                   ; preds = %normal-dest291
  %.elt533 = extractvalue { {}*, i64 } %94, 0
  %.elt535 = extractvalue { {}*, i64 } %94, 1
  %cond517 = icmp eq i64 %.elt535, 0
  %95 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157242.0 = select i1 %cond517, {}* %95, {}* %.elt533
  %96 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 358), align 16
  %ptrtoint309 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint310 = add i64 %ptrtoint309, 7
  %entry-point-addr311 = inttoptr i64 %entry-point-addr-uint310 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point312 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr311, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point312({}* %56, i64 3, {}* %G157242.0, {}* %96, {}* inttoptr (i64 32 to {}*), {}* null)
          to label %normal-dest315 unwind label %cleanup-lpad

normal-dest315:                                   ; preds = %normal-dest303
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %97

header-check-br346:                               ; preds = %tag102
  %irc-bit-cast350 = bitcast {}* %farg1 to i8*
  %gep351 = getelementptr inbounds i8, i8* %irc-bit-cast350, i64 -9
  %irc-bit-cast352 = bitcast i8* %gep351 to i64*
  %98 = load i64, i64* %irc-bit-cast352, align 8
  %99 = add i64 %98, -1309
  %100 = lshr i64 %99, 3
  %101 = shl i64 %99, 61
  %102 = or i64 %100, %101
  switch i64 %102, label %tag13 [
    i64 2, label %tag25
    i64 4, label %tag25
    i64 5, label %tag25
    i64 0, label %tag25
  ]

header-check-br360:                               ; preds = %tag25
  %irc-bit-cast364 = bitcast {}* %44 to i8*
  %gep365 = getelementptr inbounds i8, i8* %irc-bit-cast364, i64 -9
  %irc-bit-cast366 = bitcast i8* %gep365 to i64*
  %103 = load i64, i64* %irc-bit-cast366, align 8
  %104 = add i64 %103, -1309
  %105 = lshr i64 %104, 3
  %106 = shl i64 %104, 61
  %107 = or i64 %105, %106
  switch i64 %107, label %tag13 [
    i64 2, label %tag88
    i64 4, label %tag88
    i64 5, label %tag88
    i64 0, label %tag88
  ]

header-check-br367:                               ; preds = %tag104
  %irc-bit-cast371 = bitcast {}* %farg1 to i8*
  %gep372 = getelementptr inbounds i8, i8* %irc-bit-cast371, i64 -9
  %irc-bit-cast373 = bitcast i8* %gep372 to i64*
  %108 = load i64, i64* %irc-bit-cast373, align 8
  %109 = add i64 %108, -1309
  %110 = lshr i64 %109, 3
  %111 = shl i64 %109, 61
  %112 = or i64 %110, %111
  switch i64 %112, label %tag14 [
    i64 2, label %tag53
    i64 4, label %tag53
    i64 5, label %tag53
    i64 0, label %tag53
  ]

header-check-br404:                               ; preds = %tag87
  %irc-bit-cast408 = bitcast {}* %farg1 to i8*
  %gep409 = getelementptr inbounds i8, i8* %irc-bit-cast408, i64 -9
  %irc-bit-cast410 = bitcast i8* %gep409 to i64*
  %113 = load i64, i64* %irc-bit-cast410, align 8
  %114 = add i64 %113, -1309
  %115 = lshr i64 %114, 3
  %116 = shl i64 %114, 61
  %117 = or i64 %115, %116
  switch i64 %117, label %tag64 [
    i64 2, label %tag26
    i64 4, label %tag26
    i64 5, label %tag26
    i64 0, label %tag26
  ]

normal-dest412:                                   ; preds = %tag67
  %ptrtoint413 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint414 = add i64 %ptrtoint413, 7
  %entry-point-addr415 = inttoptr i64 %entry-point-addr-uint414 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point416 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr415, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point416({}* %36, i64 2, {}* nonnull %farg1, {}* nonnull %20, {}* null, {}* null)
          to label %normal-dest419 unwind label %cleanup-lpad

normal-dest419:                                   ; preds = %normal-dest412
  %.elt564 = extractvalue { {}*, i64 } %118, 0
  %.elt566 = extractvalue { {}*, i64 } %118, 1
  %cond520 = icmp eq i64 %.elt566, 0
  %119 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157287.1 = select i1 %cond520, {}* %119, {}* %.elt564
  br label %tag42

normal-dest458:                                   ; preds = %tag88
  %ptrtoint460 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint461 = add i64 %ptrtoint460, 7
  %entry-point-addr462 = inttoptr i64 %entry-point-addr-uint461 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point463 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr462, align 8
  %120 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point463({}* %43, i64 2, {}* nonnull %farg1, {}* nonnull %44, {}* null, {}* null)
          to label %normal-dest466 unwind label %cleanup-lpad

normal-dest466:                                   ; preds = %normal-dest458
  %.elt548 = extractvalue { {}*, i64 } %120, 0
  %.elt550 = extractvalue { {}*, i64 } %120, 1
  %cond518 = icmp eq i64 %.elt550, 0
  %121 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157259.1 = select i1 %cond518, {}* %121, {}* %.elt548
  br label %tag13

header-check-br492:                               ; preds = %tag53
  %irc-bit-cast496 = bitcast {}* %69 to i8*
  %gep497 = getelementptr inbounds i8, i8* %irc-bit-cast496, i64 -9
  %irc-bit-cast498 = bitcast i8* %gep497 to i64*
  %122 = load i64, i64* %irc-bit-cast498, align 8
  %123 = add i64 %122, -1309
  %124 = lshr i64 %123, 3
  %125 = shl i64 %123, 61
  %126 = or i64 %124, %125
  switch i64 %126, label %tag14 [
    i64 2, label %tag31
    i64 4, label %tag31
    i64 5, label %tag31
    i64 0, label %tag31
  ]
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !50 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G157341.0 = phi {}* [ %18, %header-check-br ], [ %G157341.1, %normal-dest54 ], [ %G157341.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 373), align 8
  %ptrtoint13 = ptrtoint {}* %G157341.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G157341.0, i64 2, {}* %"closure->ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest47, %maybe-more-tests67, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 373), align 8
  %"closure->ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14326, i64 317, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 375), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 376), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1268 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 373), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests67
  %ptrtoint48 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157341.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 372), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157341.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !51 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc308 unwind label %cleanup-lpad

.noexc308:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag26.tag_crit_edge, %normal-dest56
  %.val320 = phi {}* [ %.val320.pre, %tag26.tag_crit_edge ], [ %.val, %normal-dest56 ]
  %.val325328 = phi {}* [ %22, %tag26.tag_crit_edge ], [ %47, %normal-dest56 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 186), align 16
  %12 = ptrtoint {}* %G157325.0 to i64
  %tag-only273 = and i64 %12, 7
  %consp-test = icmp eq i64 %tag-only273, 3
  %G157410.0 = select i1 %consp-test, {}* %.val320, {}* %.val325328
  %13 = icmp eq {}* %G157410.0, %.val325328
  br i1 %13, label %tag48, label %tag28

tag2:                                             ; preds = %tag37, %normal-dest172
  %14 = phi {}* [ %72, %normal-dest172 ], [ %.val323, %tag37 ]
  %G157380.0 = phi {}* [ %G157380.1, %normal-dest172 ], [ %31, %tag37 ]
  %15 = icmp eq {}* %G157380.0, %14
  br i1 %15, label %tag43, label %tag24

tag7:                                             ; preds = %normal-dest56
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 368), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest69 unwind label %cleanup-lpad

tag14:                                            ; preds = %tag48
  %18 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest101 unwind label %cleanup-lpad

tag24:                                            ; preds = %tag2
  %20 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest140 unwind label %cleanup-lpad

tag26:                                            ; preds = %normal-dest69
  %.elt263 = extractvalue { {}*, i64 } %51, 0
  %.elt265 = extractvalue { {}*, i64 } %51, 1
  %cond254 = icmp eq i64 %.elt265, 0
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157421.1 = select i1 %cond254, {}* %22, {}* %.elt263
  %23 = icmp eq {}* %G157421.1, %22
  br i1 %23, label %tag26.tag_crit_edge, label %tag30

tag26.tag_crit_edge:                              ; preds = %tag26
  %.val320.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag

tag27:                                            ; preds = %header-check-br93, %header-check-br93, %header-check-br93, %header-check-br93
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest163 unwind label %cleanup-lpad

tag28:                                            ; preds = %tag
  %26 = add i64 %12, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8
  br label %tag37

tag30:                                            ; preds = %tag26
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest179 unwind label %cleanup-lpad

tag33:                                            ; preds = %tag38
  %fixnum-tag-only187296 = and i64 %35, 3
  %fixnump-test188 = icmp ne i64 %fixnum-tag-only187296, 0
  %test96 = icmp eq i64 %single-float-tag-only202, 1
  %or.cond315 = and i1 %fixnump-test188, %test96
  br i1 %or.cond315, label %header-check-br93, label %tag43

tag37:                                            ; preds = %tag48, %normal-dest108, %tag28
  %.val323 = phi {}* [ %.val325328, %tag28 ], [ %62, %normal-dest108 ], [ %.val325328, %tag48 ]
  %31 = phi {}* [ %.val320, %tag28 ], [ %.val322.pre, %normal-dest108 ], [ %.val320, %tag48 ]
  %.in298 = phi {}* [ %28, %tag28 ], [ %.in, %normal-dest108 ], [ %.val325328, %tag48 ]
  %32 = bitcast {}* %.in298 to i8*
  %33 = icmp eq {}* %11, %.in298
  %G157389.0 = select i1 %33, {}* %31, {}* %.val323
  %34 = icmp eq {}* %G157389.0, %.val323
  br i1 %34, label %tag47, label %tag2

tag38:                                            ; preds = %header-check-br203, %header-check-br203, %header-check-br203, %header-check-br203
  %35 = ptrtoint {}* %.in298 to i64
  %single-float-tag-only202 = and i64 %35, 7
  %36 = icmp eq i64 %single-float-tag-only202, 6
  br i1 %36, label %tag43, label %tag33

tag43:                                            ; preds = %header-check-br93, %header-check-br203, %tag47, %tag33, %tag38, %tag2
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 181), align 8
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest211 unwind label %cleanup-lpad

tag44:                                            ; preds = %normal-dest149, %normal-dest234, %normal-dest179
  %.sink307 = phi { {}*, i64 } [ %76, %normal-dest179 ], [ %91, %normal-dest234 ], [ %70, %normal-dest149 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink307

tag47:                                            ; preds = %tag37
  %39 = ptrtoint {}* %11 to i64
  %single-float-tag-only247 = and i64 %39, 7
  %fixnum-tag-only294 = and i64 %39, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only294, 0
  %test206 = icmp eq i64 %single-float-tag-only247, 1
  %or.cond316 = and i1 %fixnump-test, %test206
  br i1 %or.cond316, label %header-check-br203, label %tag43

tag48:                                            ; preds = %tag
  %40 = icmp eq {}* %G157325.0, %.val325328
  %G157403.0 = select i1 %40, {}* %.val320, {}* %.val325328
  %41 = icmp eq {}* %G157403.0, %.val325328
  br i1 %41, label %tag14, label %tag37

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest234, %normal-dest222, %normal-dest215, %normal-dest213, %normal-dest211, %tag43, %normal-dest179, %tag30, %normal-dest163, %tag27, %normal-dest149, %normal-dest142, %normal-dest140, %tag24, %normal-dest101, %tag14, %normal-dest69, %tag7, %normal-dest53, %normal-dest
  %42 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %42

normal-dest:                                      ; preds = %entry
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest
  %45 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %ptrtoint = ptrtoint {}* %44 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %44, i64 2, {}* %farg0, {}* %45, {}* null, {}* null)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %normal-dest53
  %.elt = extractvalue { {}*, i64 } %46, 0
  %.elt261 = extractvalue { {}*, i64 } %46, 1
  %cond = icmp eq i64 %.elt261, 0
  %47 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157325.0 = select i1 %cond, {}* %47, {}* %.elt
  %48 = icmp eq {}* %G157325.0, %47
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %object.0 = select i1 %48, {}* %.val, {}* %47
  %49 = icmp eq {}* %object.0, %47
  %G157426.0 = select i1 %49, {}* %.val, {}* %47
  %50 = icmp eq {}* %G157426.0, %47
  br i1 %50, label %tag, label %tag7

normal-dest69:                                    ; preds = %tag7
  %ptrtoint70 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %17, i64 1, {}* %G157325.0, {}* null, {}* null, {}* null)
          to label %tag26 unwind label %cleanup-lpad

header-check-br93:                                ; preds = %tag33
  %gep98 = getelementptr inbounds i8, i8* %32, i64 -9
  %irc-bit-cast99 = bitcast i8* %gep98 to i64*
  %52 = load i64, i64* %irc-bit-cast99, align 8
  %53 = add i64 %52, -1309
  %54 = lshr i64 %53, 3
  %55 = shl i64 %53, 61
  %56 = or i64 %54, %55
  switch i64 %56, label %tag43 [
    i64 2, label %tag27
    i64 4, label %tag27
    i64 5, label %tag27
    i64 0, label %tag27
  ]

normal-dest101:                                   ; preds = %tag14
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %58 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %59 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %60 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint102 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint103 = add i64 %ptrtoint102, 7
  %entry-point-addr104 = inttoptr i64 %entry-point-addr-uint103 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point105 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr104, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point105({}* %19, i64 5, {}* %57, {}* %58, {}* %G157325.0, {}* %59, {}* %60)
          to label %normal-dest108 unwind label %cleanup-lpad

normal-dest108:                                   ; preds = %normal-dest101
  %.elt304 = extractvalue { {}*, i64 } %61, 0
  %.elt306 = extractvalue { {}*, i64 } %61, 1
  %cond259 = icmp eq i64 %.elt306, 0
  %62 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in = select i1 %cond259, {}* %62, {}* %.elt304
  %.val322.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag37

normal-dest140:                                   ; preds = %tag24
  %63 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %64 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest142 unwind label %cleanup-lpad

normal-dest142:                                   ; preds = %normal-dest140
  %ptrtoint143 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint144 = add i64 %ptrtoint143, 7
  %entry-point-addr145 = inttoptr i64 %entry-point-addr-uint144 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point146 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr145, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point146({}* %65, i64 1, {}* %G157325.0, {}* null, {}* null, {}* null)
          to label %normal-dest149 unwind label %cleanup-lpad

normal-dest149:                                   ; preds = %normal-dest142
  %.elt275 = extractvalue { {}*, i64 } %66, 0
  %.elt277 = extractvalue { {}*, i64 } %66, 1
  %cond255 = icmp eq i64 %.elt277, 0
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157373.0 = select i1 %cond255, {}* %67, {}* %.elt275
  %68 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint155 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint156 = add i64 %ptrtoint155, 7
  %entry-point-addr157 = inttoptr i64 %entry-point-addr-uint156 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point158 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr157, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point158({}* %21, i64 5, {}* %farg0, {}* %63, {}* %G157373.0, {}* %68, {}* %69)
          to label %tag44 unwind label %cleanup-lpad

normal-dest163:                                   ; preds = %tag27
  %ptrtoint166 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint167 = add i64 %ptrtoint166, 7
  %entry-point-addr168 = inttoptr i64 %entry-point-addr-uint167 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point169 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr168, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point169({}* %25, i64 2, {}* nonnull %11, {}* nonnull %.in298, {}* null, {}* null)
          to label %normal-dest172 unwind label %cleanup-lpad

normal-dest172:                                   ; preds = %normal-dest163
  %.elt300 = extractvalue { {}*, i64 } %71, 0
  %.elt302 = extractvalue { {}*, i64 } %71, 1
  %cond258 = icmp eq i64 %.elt302, 0
  %72 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157380.1 = select i1 %cond258, {}* %72, {}* %.elt300
  br label %tag2

normal-dest179:                                   ; preds = %tag30
  %73 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %75 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint180 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint181 = add i64 %ptrtoint180, 7
  %entry-point-addr182 = inttoptr i64 %entry-point-addr-uint181 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point183 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr182, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point183({}* %30, i64 5, {}* %farg0, {}* %73, {}* %G157325.0, {}* %74, {}* %75)
          to label %tag44 unwind label %cleanup-lpad

header-check-br203:                               ; preds = %tag47
  %irc-bit-cast207 = bitcast {}* %11 to i8*
  %gep208 = getelementptr inbounds i8, i8* %irc-bit-cast207, i64 -9
  %irc-bit-cast209 = bitcast i8* %gep208 to i64*
  %77 = load i64, i64* %irc-bit-cast209, align 8
  %78 = add i64 %77, -1309
  %79 = lshr i64 %78, 3
  %80 = shl i64 %78, 61
  %81 = or i64 %79, %80
  switch i64 %81, label %tag43 [
    i64 2, label %tag38
    i64 4, label %tag38
    i64 5, label %tag38
    i64 0, label %tag38
  ]

normal-dest211:                                   ; preds = %tag43
  %82 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 370), align 16
  %83 = invoke {}* @cc_safe_fdefinition({}* %82)
          to label %normal-dest213 unwind label %cleanup-lpad

normal-dest213:                                   ; preds = %normal-dest211
  %84 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest215 unwind label %cleanup-lpad

normal-dest215:                                   ; preds = %normal-dest213
  %86 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  %ptrtoint216 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint217 = add i64 %ptrtoint216, 7
  %entry-point-addr218 = inttoptr i64 %entry-point-addr-uint217 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point219 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr218, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point219({}* %85, i64 2, {}* %farg0, {}* %86, {}* null, {}* null)
          to label %normal-dest222 unwind label %cleanup-lpad

normal-dest222:                                   ; preds = %normal-dest215
  %.elt283 = extractvalue { {}*, i64 } %87, 0
  %.elt285 = extractvalue { {}*, i64 } %87, 1
  %cond256 = icmp eq i64 %.elt285, 0
  %88 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157363.0 = select i1 %cond256, {}* %88, {}* %.elt283
  %ptrtoint228 = ptrtoint {}* %83 to i64
  %entry-point-addr-uint229 = add i64 %ptrtoint228, 7
  %entry-point-addr230 = inttoptr i64 %entry-point-addr-uint229 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point231 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr230, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point231({}* %83, i64 1, {}* %G157363.0, {}* null, {}* null, {}* null)
          to label %normal-dest234 unwind label %cleanup-lpad

normal-dest234:                                   ; preds = %normal-dest222
  %.elt287 = extractvalue { {}*, i64 } %89, 0
  %.elt289 = extractvalue { {}*, i64 } %89, 1
  %cond257 = icmp eq i64 %.elt289, 0
  %90 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157361.0 = select i1 %cond257, {}* %90, {}* %.elt287
  %ptrtoint240 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint241 = add i64 %ptrtoint240, 7
  %entry-point-addr242 = inttoptr i64 %entry-point-addr-uint241 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point243 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr242, align 8
  %91 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point243({}* %38, i64 2, {}* %farg0, {}* %G157361.0, {}* null, {}* null)
          to label %tag44 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !52 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G157457.0 = phi {}* [ %18, %header-check-br ], [ %G157457.1, %normal-dest26 ], [ %G157457.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 379), align 8
  %ptrtoint29 = ptrtoint {}* %G157457.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G157457.0, i64 2, {}* %"closure->ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 379), align 8
  %"closure->ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 15027, i64 330, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157457.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag3

normal-dest35:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 381), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 382), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 1320 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 379), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 378), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157457.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !53 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc327 unwind label %cleanup-lpad

.noexc327:                                        ; preds = %10
  unreachable

tag1:                                             ; preds = %tag15
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest62 unwind label %cleanup-lpad

tag8:                                             ; preds = %header-check-br, %header-check-br, %header-check-br, %header-check-br
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest88 unwind label %cleanup-lpad

tag10:                                            ; preds = %tag27
  %fixnum-tag-only315 = and i64 %24, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only315, 0
  %test = icmp eq i64 %single-float-tag-only146, 1
  %or.cond = and i1 %fixnump-test, %test
  br i1 %or.cond, label %header-check-br, label %tag41

tag13:                                            ; preds = %tag46
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest104 unwind label %cleanup-lpad

tag14:                                            ; preds = %tag46.tag14_crit_edge, %normal-dest56
  %.val339 = phi {}* [ %.val339.pre, %tag46.tag14_crit_edge ], [ %.val, %normal-dest56 ]
  %.val344347 = phi {}* [ %41, %tag46.tag14_crit_edge ], [ %48, %normal-dest56 ]
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 246), align 16
  %18 = ptrtoint {}* %G157441.0 to i64
  %tag-only118288 = and i64 %18, 7
  %consp-test = icmp eq i64 %tag-only118288, 3
  %G157531.0 = select i1 %consp-test, {}* %.val339, {}* %.val344347
  %19 = icmp eq {}* %G157531.0, %.val344347
  br i1 %19, label %tag15, label %tag45

tag15:                                            ; preds = %tag14
  %20 = icmp eq {}* %G157441.0, %.val344347
  %G157524.0 = select i1 %20, {}* %.val339, {}* %.val344347
  %21 = icmp eq {}* %G157524.0, %.val344347
  br i1 %21, label %tag1, label %tag30

tag17:                                            ; preds = %tag30, %normal-dest97
  %22 = phi {}* [ %64, %normal-dest97 ], [ %.val342, %tag30 ]
  %G157501.0 = phi {}* [ %G157501.1, %normal-dest97 ], [ %28, %tag30 ]
  %23 = icmp eq {}* %G157501.0, %22
  br i1 %23, label %tag41, label %tag28

tag20:                                            ; preds = %normal-dest104, %normal-dest246, %normal-dest157
  %.sink326 = phi { {}*, i64 } [ %76, %normal-dest157 ], [ %97, %normal-dest246 ], [ %68, %normal-dest104 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink326

tag27:                                            ; preds = %header-check-br170, %header-check-br170, %header-check-br170, %header-check-br170
  %24 = ptrtoint {}* %.in317 to i64
  %single-float-tag-only146 = and i64 %24, 7
  %25 = icmp eq i64 %single-float-tag-only146, 6
  br i1 %25, label %tag41, label %tag10

tag28:                                            ; preds = %tag17
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest148 unwind label %cleanup-lpad

tag30:                                            ; preds = %tag15, %normal-dest70, %tag45
  %.val342 = phi {}* [ %.val344347, %tag45 ], [ %57, %normal-dest70 ], [ %.val344347, %tag15 ]
  %28 = phi {}* [ %.val339, %tag45 ], [ %.val341.pre, %normal-dest70 ], [ %.val339, %tag15 ]
  %.in317 = phi {}* [ %40, %tag45 ], [ %.in, %normal-dest70 ], [ %.val344347, %tag15 ]
  %29 = bitcast {}* %.in317 to i8*
  %30 = icmp eq {}* %17, %.in317
  %G157510.0 = select i1 %30, {}* %28, {}* %.val342
  %31 = icmp eq {}* %G157510.0, %.val342
  br i1 %31, label %tag34, label %tag17

tag34:                                            ; preds = %tag30
  %32 = ptrtoint {}* %17 to i64
  %single-float-tag-only188 = and i64 %32, 7
  %33 = icmp eq i64 %single-float-tag-only188, 6
  br i1 %33, label %tag41, label %tag36

tag36:                                            ; preds = %tag34
  %fixnum-tag-only190313 = and i64 %32, 3
  %fixnump-test191 = icmp ne i64 %fixnum-tag-only190313, 0
  %test173 = icmp eq i64 %single-float-tag-only188, 1
  %or.cond335 = and i1 %fixnump-test191, %test173
  br i1 %or.cond335, label %header-check-br170, label %tag41

tag38:                                            ; preds = %normal-dest56
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 368), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest193 unwind label %cleanup-lpad

tag41:                                            ; preds = %header-check-br, %header-check-br170, %tag10, %tag27, %tag34, %tag36, %tag17
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 239), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest209 unwind label %cleanup-lpad

tag45:                                            ; preds = %tag14
  %38 = add i64 %18, -3
  %39 = inttoptr i64 %38 to {}**
  %40 = load {}*, {}** %39, align 8
  br label %tag30

tag46:                                            ; preds = %normal-dest193
  %.elt278 = extractvalue { {}*, i64 } %82, 0
  %.elt280 = extractvalue { {}*, i64 } %82, 1
  %cond268 = icmp eq i64 %.elt280, 0
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157542.1 = select i1 %cond268, {}* %41, {}* %.elt278
  %42 = icmp eq {}* %G157542.1, %41
  br i1 %42, label %tag46.tag14_crit_edge, label %tag13

tag46.tag14_crit_edge:                            ; preds = %tag46
  %.val339.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag14

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest246, %normal-dest234, %normal-dest227, %normal-dest225, %normal-dest218, %normal-dest211, %normal-dest209, %tag41, %normal-dest193, %tag38, %normal-dest157, %normal-dest150, %normal-dest148, %tag28, %normal-dest104, %tag13, %normal-dest88, %tag8, %normal-dest62, %tag1, %normal-dest53, %normal-dest
  %43 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %43

normal-dest:                                      ; preds = %entry
  %44 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %ptrtoint = ptrtoint {}* %45 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %45, i64 2, {}* %farg0, {}* %46, {}* null, {}* null)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %normal-dest53
  %.elt = extractvalue { {}*, i64 } %47, 0
  %.elt276 = extractvalue { {}*, i64 } %47, 1
  %cond = icmp eq i64 %.elt276, 0
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157441.0 = select i1 %cond, {}* %48, {}* %.elt
  %49 = icmp eq {}* %G157441.0, %48
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %object.0 = select i1 %49, {}* %.val, {}* %48
  %50 = icmp eq {}* %object.0, %48
  %G157547.0 = select i1 %50, {}* %.val, {}* %48
  %51 = icmp eq {}* %G157547.0, %48
  br i1 %51, label %tag14, label %tag38

normal-dest62:                                    ; preds = %tag1
  %52 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %54 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint64 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint65 = add i64 %ptrtoint64, 7
  %entry-point-addr66 = inttoptr i64 %entry-point-addr-uint65 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point67 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr66, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point67({}* %12, i64 5, {}* %52, {}* %53, {}* %G157441.0, {}* %54, {}* %55)
          to label %normal-dest70 unwind label %cleanup-lpad

normal-dest70:                                    ; preds = %normal-dest62
  %.elt323 = extractvalue { {}*, i64 } %56, 0
  %.elt325 = extractvalue { {}*, i64 } %56, 1
  %cond274 = icmp eq i64 %.elt325, 0
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in = select i1 %cond274, {}* %57, {}* %.elt323
  %.val341.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag30

header-check-br:                                  ; preds = %tag10
  %gep = getelementptr inbounds i8, i8* %29, i64 -9
  %irc-bit-cast79 = bitcast i8* %gep to i64*
  %58 = load i64, i64* %irc-bit-cast79, align 8
  %59 = add i64 %58, -1309
  %60 = lshr i64 %59, 3
  %61 = shl i64 %59, 61
  %62 = or i64 %60, %61
  switch i64 %62, label %tag41 [
    i64 2, label %tag8
    i64 4, label %tag8
    i64 5, label %tag8
    i64 0, label %tag8
  ]

normal-dest88:                                    ; preds = %tag8
  %ptrtoint91 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint92 = add i64 %ptrtoint91, 7
  %entry-point-addr93 = inttoptr i64 %entry-point-addr-uint92 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point94 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr93, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point94({}* %14, i64 2, {}* nonnull %17, {}* nonnull %.in317, {}* null, {}* null)
          to label %normal-dest97 unwind label %cleanup-lpad

normal-dest97:                                    ; preds = %normal-dest88
  %.elt319 = extractvalue { {}*, i64 } %63, 0
  %.elt321 = extractvalue { {}*, i64 } %63, 1
  %cond273 = icmp eq i64 %.elt321, 0
  %64 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157501.1 = select i1 %cond273, {}* %64, {}* %.elt319
  br label %tag17

normal-dest104:                                   ; preds = %tag13
  %65 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %66 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint105 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint106 = add i64 %ptrtoint105, 7
  %entry-point-addr107 = inttoptr i64 %entry-point-addr-uint106 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point108 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr107, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point108({}* %16, i64 5, {}* %farg0, {}* %65, {}* %G157441.0, {}* %66, {}* %67)
          to label %tag20 unwind label %cleanup-lpad

normal-dest148:                                   ; preds = %tag28
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %70 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %71 = invoke {}* @cc_safe_fdefinition({}* %70)
          to label %normal-dest150 unwind label %cleanup-lpad

normal-dest150:                                   ; preds = %normal-dest148
  %ptrtoint151 = ptrtoint {}* %71 to i64
  %entry-point-addr-uint152 = add i64 %ptrtoint151, 7
  %entry-point-addr153 = inttoptr i64 %entry-point-addr-uint152 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point154 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr153, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point154({}* %71, i64 1, {}* %G157441.0, {}* null, {}* null, {}* null)
          to label %normal-dest157 unwind label %cleanup-lpad

normal-dest157:                                   ; preds = %normal-dest150
  %.elt290 = extractvalue { {}*, i64 } %72, 0
  %.elt292 = extractvalue { {}*, i64 } %72, 1
  %cond269 = icmp eq i64 %.elt292, 0
  %73 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157494.0 = select i1 %cond269, {}* %73, {}* %.elt290
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %75 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint163 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint164 = add i64 %ptrtoint163, 7
  %entry-point-addr165 = inttoptr i64 %entry-point-addr-uint164 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point166 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr165, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point166({}* %27, i64 5, {}* %farg0, {}* %69, {}* %G157494.0, {}* %74, {}* %75)
          to label %tag20 unwind label %cleanup-lpad

header-check-br170:                               ; preds = %tag36
  %irc-bit-cast174 = bitcast {}* %17 to i8*
  %gep175 = getelementptr inbounds i8, i8* %irc-bit-cast174, i64 -9
  %irc-bit-cast176 = bitcast i8* %gep175 to i64*
  %77 = load i64, i64* %irc-bit-cast176, align 8
  %78 = add i64 %77, -1309
  %79 = lshr i64 %78, 3
  %80 = shl i64 %78, 61
  %81 = or i64 %79, %80
  switch i64 %81, label %tag41 [
    i64 2, label %tag27
    i64 4, label %tag27
    i64 5, label %tag27
    i64 0, label %tag27
  ]

normal-dest193:                                   ; preds = %tag38
  %ptrtoint194 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint195 = add i64 %ptrtoint194, 7
  %entry-point-addr196 = inttoptr i64 %entry-point-addr-uint195 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point197 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr196, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point197({}* %35, i64 1, {}* %G157441.0, {}* null, {}* null, {}* null)
          to label %tag46 unwind label %cleanup-lpad

normal-dest209:                                   ; preds = %tag41
  %83 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest211 unwind label %cleanup-lpad

normal-dest211:                                   ; preds = %normal-dest209
  %85 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %ptrtoint212 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint213 = add i64 %ptrtoint212, 7
  %entry-point-addr214 = inttoptr i64 %entry-point-addr-uint213 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point215 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr214, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point215({}* %84, i64 2, {}* %farg0, {}* %85, {}* null, {}* null)
          to label %normal-dest218 unwind label %cleanup-lpad

normal-dest218:                                   ; preds = %normal-dest211
  %.elt298 = extractvalue { {}*, i64 } %86, 0
  %.elt300 = extractvalue { {}*, i64 } %86, 1
  %cond270 = icmp eq i64 %.elt300, 0
  %87 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157477.0 = select i1 %cond270, {}* %87, {}* %.elt298
  %88 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 370), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest225 unwind label %cleanup-lpad

normal-dest225:                                   ; preds = %normal-dest218
  %90 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest227 unwind label %cleanup-lpad

normal-dest227:                                   ; preds = %normal-dest225
  %92 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  %ptrtoint228 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint229 = add i64 %ptrtoint228, 7
  %entry-point-addr230 = inttoptr i64 %entry-point-addr-uint229 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point231 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr230, align 8
  %93 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point231({}* %91, i64 2, {}* %farg0, {}* %92, {}* null, {}* null)
          to label %normal-dest234 unwind label %cleanup-lpad

normal-dest234:                                   ; preds = %normal-dest227
  %.elt302 = extractvalue { {}*, i64 } %93, 0
  %.elt304 = extractvalue { {}*, i64 } %93, 1
  %cond271 = icmp eq i64 %.elt304, 0
  %94 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157480.0 = select i1 %cond271, {}* %94, {}* %.elt302
  %ptrtoint240 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint241 = add i64 %ptrtoint240, 7
  %entry-point-addr242 = inttoptr i64 %entry-point-addr-uint241 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point243 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr242, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point243({}* %89, i64 1, {}* %G157480.0, {}* null, {}* null, {}* null)
          to label %normal-dest246 unwind label %cleanup-lpad

normal-dest246:                                   ; preds = %normal-dest234
  %.elt306 = extractvalue { {}*, i64 } %95, 0
  %.elt308 = extractvalue { {}*, i64 } %95, 1
  %cond272 = icmp eq i64 %.elt308, 0
  %96 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157478.0 = select i1 %cond272, {}* %96, {}* %.elt306
  %ptrtoint252 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint253 = add i64 %ptrtoint252, 7
  %entry-point-addr254 = inttoptr i64 %entry-point-addr-uint253 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point255 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr254, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point255({}* %37, i64 3, {}* %farg0, {}* %G157477.0, {}* %G157478.0, {}* null)
          to label %tag20 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !54 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G157585.0 = phi {}* [ %18, %header-check-br ], [ %G157585.1, %normal-dest26 ], [ %G157585.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 386), align 16
  %ptrtoint43 = ptrtoint {}* %G157585.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G157585.0, i64 2, {}* %"closure->ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 386), align 16
  %"closure->ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 15770, i64 343, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157585.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag4

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 385), align 8
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157585.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 388), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 389), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1372 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 386), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !55 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc436 unwind label %cleanup-lpad.loopexit.split-lp

.noexc436:                                        ; preds = %10
  unreachable

tag2:                                             ; preds = %tag9, %normal-dest114, %tag12
  %.val452463 = phi {}* [ %.val450, %tag12 ], [ %.val452463.pre, %normal-dest114 ], [ %.val450, %tag9 ]
  %11 = phi {}* [ %.val459474, %tag12 ], [ %76, %normal-dest114 ], [ %.val459474, %tag9 ]
  %.in414 = phi {}* [ %27, %tag12 ], [ %.in, %normal-dest114 ], [ %.val459474, %tag9 ]
  %"%SUBLIST157564.0462" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 384), align 16
  %12 = icmp eq {}* %"%SUBLIST157564.0462", %11
  %object.0464 = select i1 %12, {}* %.val452463, {}* %11
  %13 = icmp eq {}* %object.0464, %11
  %G157627.0465 = select i1 %13, {}* %.val452463, {}* %11
  %14 = icmp eq {}* %G157627.0465, %11
  br i1 %14, label %tag32, label %tag62.lr.ph

tag62.lr.ph:                                      ; preds = %tag2
  %15 = bitcast {}* %.in414 to i8*
  %16 = ptrtoint {}* %.in414 to i64
  %single-float-tag-only250 = and i64 %16, 7
  %fixnum-tag-only251412 = and i64 %16, 3
  %fixnump-test252 = icmp eq i64 %fixnum-tag-only251412, 0
  %test216 = icmp ne i64 %single-float-tag-only250, 1
  %gep218 = getelementptr inbounds i8, i8* %15, i64 -9
  %irc-bit-cast219 = bitcast i8* %gep218 to i64*
  %brmerge = or i1 %test216, %fixnump-test252
  br label %tag62

tag7:                                             ; preds = %tag33, %normal-dest146, %tag71
  %.val457 = phi {}* [ %46, %tag71 ], [ %82, %normal-dest146 ], [ %G157681.0, %tag33 ]
  %17 = phi {}* [ %G157681.0, %tag71 ], [ %.val456.pre, %normal-dest146 ], [ %G157681.0, %tag33 ]
  %.in418 = phi {}* [ %60, %tag71 ], [ %.in417, %normal-dest146 ], [ %G157681.0, %tag33 ]
  %18 = bitcast {}* %.in418 to i8*
  %19 = icmp eq {}* %.in414, %.in418
  %G157661.0 = select i1 %19, {}* %17, {}* %.val457
  %20 = icmp eq {}* %G157661.0, %.val457
  br i1 %20, label %tag50, label %tag57

tag8:                                             ; preds = %tag9
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp

tag9:                                             ; preds = %tag15
  %23 = icmp eq {}* %G157562.0, %.val459474
  %G157694.0 = select i1 %23, {}* %.val450, {}* %.val459474
  %24 = icmp eq {}* %G157694.0, %.val459474
  br i1 %24, label %tag8, label %tag2

tag12:                                            ; preds = %tag15
  %25 = add i64 %28, -3
  %26 = inttoptr i64 %25 to {}**
  %27 = load {}*, {}** %26, align 8
  br label %tag2

tag15:                                            ; preds = %tag56.tag15_crit_edge, %normal-dest92
  %.val450 = phi {}* [ %.val450.pre, %tag56.tag15_crit_edge ], [ %.val, %normal-dest92 ]
  %.val459474 = phi {}* [ %41, %tag56.tag15_crit_edge ], [ %67, %normal-dest92 ]
  %28 = ptrtoint {}* %G157562.0 to i64
  %tag-only134380 = and i64 %28, 7
  %consp-test = icmp eq i64 %tag-only134380, 3
  %G157701.0 = select i1 %consp-test, {}* %.val450, {}* %.val459474
  %29 = icmp eq {}* %G157701.0, %.val459474
  br i1 %29, label %tag9, label %tag12

tag22:                                            ; preds = %tag33
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit

tag24:                                            ; preds = %tag62
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest153 unwind label %cleanup-lpad.loopexit.split-lp

tag31:                                            ; preds = %header-check-br213, %header-check-br213, %header-check-br213, %header-check-br213
  %34 = ptrtoint {}* %.in418 to i64
  %single-float-tag-only167 = and i64 %34, 7
  %fixnum-tag-only211415 = and i64 %34, 3
  %fixnump-test212 = icmp ne i64 %fixnum-tag-only211415, 0
  %test224 = icmp eq i64 %single-float-tag-only167, 1
  %or.cond446 = and i1 %fixnump-test212, %test224
  br i1 %or.cond446, label %header-check-br221, label %tag68

tag32:                                            ; preds = %tag68, %tag2, %tag64
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 329), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit.split-lp

tag33:                                            ; preds = %tag70
  br i1 %45, label %tag22, label %tag7

tag41:                                            ; preds = %header-check-br221, %header-check-br221, %header-check-br221, %header-check-br221
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest229 unwind label %cleanup-lpad.loopexit

tag50:                                            ; preds = %tag7
  br i1 %brmerge, label %tag68, label %header-check-br213

tag54:                                            ; preds = %normal-dest92
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 368), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit.split-lp

tag56:                                            ; preds = %normal-dest254
  %.elt370 = extractvalue { {}*, i64 } %110, 0
  %.elt372 = extractvalue { {}*, i64 } %110, 1
  %cond359 = icmp eq i64 %.elt372, 0
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157712.1 = select i1 %cond359, {}* %41, {}* %.elt370
  %42 = icmp eq {}* %G157712.1, %41
  br i1 %42, label %tag56.tag15_crit_edge, label %tag78

tag56.tag15_crit_edge:                            ; preds = %tag56
  %.val450.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag15

tag57:                                            ; preds = %tag7, %normal-dest236
  %43 = phi {}* [ %109, %normal-dest236 ], [ %.val457, %tag7 ]
  %G157652.0 = phi {}* [ %G157652.1, %normal-dest236 ], [ %17, %tag7 ]
  %44 = icmp eq {}* %G157652.0, %43
  br i1 %44, label %tag57.tag68_crit_edge, label %tag64

tag57.tag68_crit_edge:                            ; preds = %tag57
  %.val452.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag68

tag62:                                            ; preds = %tag62.lr.ph, %tag68
  %G157681.0 = phi {}* [ %.val452463, %tag62.lr.ph ], [ %.val452, %tag68 ]
  %45 = phi i1 [ %13, %tag62.lr.ph ], [ %55, %tag68 ]
  %46 = phi {}* [ %11, %tag62.lr.ph ], [ %51, %tag68 ]
  %"%SUBLIST157564.0466" = phi {}* [ %"%SUBLIST157564.0462", %tag62.lr.ph ], [ %"%SUBLIST157564.0", %tag68 ]
  %47 = ptrtoint {}* %"%SUBLIST157564.0466" to i64
  %tag-only281381 = and i64 %47, 7
  %consp-test282 = icmp eq i64 %tag-only281381, 3
  br i1 %consp-test282, label %tag70, label %tag24

tag64:                                            ; preds = %tag57
  %48 = icmp eq {}* %"%SUBLIST157564.0466", %43
  br i1 %48, label %tag32, label %tag65

tag65:                                            ; preds = %tag64
  %49 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest284 unwind label %cleanup-lpad.loopexit.split-lp

tag67:                                            ; preds = %normal-dest192, %normal-dest331, %normal-dest293
  %.sink435 = phi { {}*, i64 } [ %118, %normal-dest293 ], [ %122, %normal-dest331 ], [ %97, %normal-dest192 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink435

tag68:                                            ; preds = %tag57.tag68_crit_edge, %header-check-br221, %header-check-br213, %tag50, %tag31
  %.val452 = phi {}* [ %.val452.pre, %tag57.tag68_crit_edge ], [ %17, %tag31 ], [ %17, %tag50 ], [ %17, %header-check-br213 ], [ %17, %header-check-br221 ]
  %51 = phi {}* [ %43, %tag57.tag68_crit_edge ], [ %.val457, %tag31 ], [ %.val457, %tag50 ], [ %.val457, %header-check-br213 ], [ %.val457, %header-check-br221 ]
  %52 = add i64 %47, 5
  %53 = inttoptr i64 %52 to {}**
  %"%SUBLIST157564.0" = load {}*, {}** %53, align 8
  %54 = icmp eq {}* %"%SUBLIST157564.0", %51
  %object.0 = select i1 %54, {}* %.val452, {}* %51
  %55 = icmp eq {}* %object.0, %51
  %G157627.0 = select i1 %55, {}* %.val452, {}* %51
  %56 = icmp eq {}* %G157627.0, %51
  br i1 %56, label %tag32, label %tag62

tag70:                                            ; preds = %tag62
  %57 = icmp eq {}* %G157681.0, %46
  br i1 %57, label %tag33, label %tag71

tag71:                                            ; preds = %tag70
  %58 = add i64 %47, -3
  %59 = inttoptr i64 %58 to {}**
  %60 = load {}*, {}** %59, align 8
  br label %tag7

tag78:                                            ; preds = %tag56
  %61 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest331 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag22, %normal-dest138, %tag41, %normal-dest229
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest89, %tag8, %normal-dest106, %tag24, %normal-dest153, %tag32, %normal-dest169, %normal-dest171, %normal-dest173, %normal-dest180, %normal-dest192, %tag54, %normal-dest254, %tag65, %normal-dest284, %normal-dest286, %normal-dest293, %tag78, %normal-dest331, %9, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %63 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest89 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest89:                                    ; preds = %normal-dest
  %65 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %ptrtoint = ptrtoint {}* %64 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %64, i64 2, {}* %farg0, {}* %65, {}* null, {}* null)
          to label %normal-dest92 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest92:                                    ; preds = %normal-dest89
  %.elt = extractvalue { {}*, i64 } %66, 0
  %.elt368 = extractvalue { {}*, i64 } %66, 1
  %cond = icmp eq i64 %.elt368, 0
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157562.0 = select i1 %cond, {}* %67, {}* %.elt
  %68 = icmp eq {}* %G157562.0, %67
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %object154.0 = select i1 %68, {}* %.val, {}* %67
  %69 = icmp eq {}* %object154.0, %67
  %G157717.0 = select i1 %69, {}* %.val, {}* %67
  %70 = icmp eq {}* %G157717.0, %67
  br i1 %70, label %tag15, label %tag54

normal-dest106:                                   ; preds = %tag8
  %71 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %72 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %73 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint108 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint109 = add i64 %ptrtoint108, 7
  %entry-point-addr110 = inttoptr i64 %entry-point-addr-uint109 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point111 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr110, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point111({}* %22, i64 5, {}* %71, {}* %72, {}* %G157562.0, {}* %73, {}* %74)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest114:                                   ; preds = %normal-dest106
  %.elt428 = extractvalue { {}*, i64 } %75, 0
  %.elt430 = extractvalue { {}*, i64 } %75, 1
  %cond366 = icmp eq i64 %.elt430, 0
  %76 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in = select i1 %cond366, {}* %76, {}* %.elt428
  %.val452463.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag2

normal-dest138:                                   ; preds = %tag22
  %77 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %78 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %79 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %80 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint140 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint141 = add i64 %ptrtoint140, 7
  %entry-point-addr142 = inttoptr i64 %entry-point-addr-uint141 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point143 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr142, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point143({}* %31, i64 5, {}* %77, {}* %78, {}* %"%SUBLIST157564.0466", {}* %79, {}* %80)
          to label %normal-dest146 unwind label %cleanup-lpad.loopexit

normal-dest146:                                   ; preds = %normal-dest138
  %.elt424 = extractvalue { {}*, i64 } %81, 0
  %.elt426 = extractvalue { {}*, i64 } %81, 1
  %cond365 = icmp eq i64 %.elt426, 0
  %82 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in417 = select i1 %cond365, {}* %82, {}* %.elt424
  %.val456.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  br label %tag7

normal-dest153:                                   ; preds = %tag24
  %83 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %84 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %85 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %86 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %ptrtoint156 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint157 = add i64 %ptrtoint156, 7
  %entry-point-addr158 = inttoptr i64 %entry-point-addr-uint157 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point159 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr158, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point159({}* %33, i64 5, {}* %83, {}* %84, {}* %"%SUBLIST157564.0466", {}* %85, {}* %86)
          to label %normal-dest162 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest162:                                   ; preds = %normal-dest153
  call void @unreachableError()
  unreachable

normal-dest169:                                   ; preds = %tag32
  %88 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 370), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest171 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest171:                                   ; preds = %normal-dest169
  %90 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest173 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest173:                                   ; preds = %normal-dest171
  %92 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  %ptrtoint174 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint175 = add i64 %ptrtoint174, 7
  %entry-point-addr176 = inttoptr i64 %entry-point-addr-uint175 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point177 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr176, align 8
  %93 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point177({}* %91, i64 2, {}* %farg0, {}* %92, {}* null, {}* null)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest180:                                   ; preds = %normal-dest173
  %.elt396 = extractvalue { {}*, i64 } %93, 0
  %.elt398 = extractvalue { {}*, i64 } %93, 1
  %cond361 = icmp eq i64 %.elt398, 0
  %94 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157607.0 = select i1 %cond361, {}* %94, {}* %.elt396
  %ptrtoint186 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint187 = add i64 %ptrtoint186, 7
  %entry-point-addr188 = inttoptr i64 %entry-point-addr-uint187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr188, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point189({}* %89, i64 1, {}* %G157607.0, {}* null, {}* null, {}* null)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest192:                                   ; preds = %normal-dest180
  %.elt400 = extractvalue { {}*, i64 } %95, 0
  %.elt402 = extractvalue { {}*, i64 } %95, 1
  %cond362 = icmp eq i64 %.elt402, 0
  %96 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157605.0 = select i1 %cond362, {}* %96, {}* %.elt400
  %ptrtoint198 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint199 = add i64 %ptrtoint198, 7
  %entry-point-addr200 = inttoptr i64 %entry-point-addr-uint199 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point201 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr200, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point201({}* %36, i64 2, {}* %farg0, {}* %G157605.0, {}* null, {}* null)
          to label %tag67 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br213:                               ; preds = %tag50
  %98 = load i64, i64* %irc-bit-cast219, align 8
  %99 = add i64 %98, -1309
  %100 = lshr i64 %99, 3
  %101 = shl i64 %99, 61
  %102 = or i64 %100, %101
  switch i64 %102, label %tag68 [
    i64 2, label %tag31
    i64 4, label %tag31
    i64 5, label %tag31
    i64 0, label %tag31
  ]

header-check-br221:                               ; preds = %tag31
  %gep226 = getelementptr inbounds i8, i8* %18, i64 -9
  %irc-bit-cast227 = bitcast i8* %gep226 to i64*
  %103 = load i64, i64* %irc-bit-cast227, align 8
  %104 = add i64 %103, -1309
  %105 = lshr i64 %104, 3
  %106 = shl i64 %104, 61
  %107 = or i64 %105, %106
  switch i64 %107, label %tag68 [
    i64 2, label %tag41
    i64 4, label %tag41
    i64 5, label %tag41
    i64 0, label %tag41
  ]

normal-dest229:                                   ; preds = %tag41
  %ptrtoint230 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint231 = add i64 %ptrtoint230, 7
  %entry-point-addr232 = inttoptr i64 %entry-point-addr-uint231 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point233 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr232, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point233({}* %38, i64 2, {}* nonnull %.in414, {}* nonnull %.in418, {}* null, {}* null)
          to label %normal-dest236 unwind label %cleanup-lpad.loopexit

normal-dest236:                                   ; preds = %normal-dest229
  %.elt420 = extractvalue { {}*, i64 } %108, 0
  %.elt422 = extractvalue { {}*, i64 } %108, 1
  %cond364 = icmp eq i64 %.elt422, 0
  %109 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157652.1 = select i1 %cond364, {}* %109, {}* %.elt420
  br label %tag57

normal-dest254:                                   ; preds = %tag54
  %ptrtoint255 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint256 = add i64 %ptrtoint255, 7
  %entry-point-addr257 = inttoptr i64 %entry-point-addr-uint256 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point258 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr257, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point258({}* %40, i64 1, {}* %G157562.0, {}* null, {}* null, {}* null)
          to label %tag56 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest284:                                   ; preds = %tag65
  %111 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %112 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %113 = invoke {}* @cc_safe_fdefinition({}* %112)
          to label %normal-dest286 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest286:                                   ; preds = %normal-dest284
  %ptrtoint287 = ptrtoint {}* %113 to i64
  %entry-point-addr-uint288 = add i64 %ptrtoint287, 7
  %entry-point-addr289 = inttoptr i64 %entry-point-addr-uint288 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point290 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr289, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point290({}* %113, i64 1, {}* %G157562.0, {}* null, {}* null, {}* null)
          to label %normal-dest293 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest293:                                   ; preds = %normal-dest286
  %.elt388 = extractvalue { {}*, i64 } %114, 0
  %.elt390 = extractvalue { {}*, i64 } %114, 1
  %cond360 = icmp eq i64 %.elt390, 0
  %115 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157617.0 = select i1 %cond360, {}* %115, {}* %.elt388
  %116 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %117 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint299 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint300 = add i64 %ptrtoint299, 7
  %entry-point-addr301 = inttoptr i64 %entry-point-addr-uint300 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point302 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr301, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point302({}* %50, i64 5, {}* %farg0, {}* %111, {}* %G157617.0, {}* %116, {}* %117)
          to label %tag67 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest331:                                   ; preds = %tag78
  %119 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %120 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %121 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint332 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint333 = add i64 %ptrtoint332, 7
  %entry-point-addr334 = inttoptr i64 %entry-point-addr-uint333 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point335 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr334, align 8
  %122 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point335({}* %62, i64 5, {}* %farg0, {}* %119, {}* %G157562.0, {}* %120, {}* %121)
          to label %tag67 unwind label %cleanup-lpad.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !56 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G157753.0 = phi {}* [ %18, %header-check-br ], [ %G157753.1, %normal-dest26 ], [ %G157753.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 394), align 16
  %ptrtoint43 = ptrtoint {}* %G157753.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G157753.0, i64 2, {}* %"closure->ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag3, %normal-dest30, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 394), align 16
  %"closure->ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 16533, i64 357, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag2

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157753.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag3

normal-dest30:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 393), align 8
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157753.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag3

normal-dest49:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 396), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 397), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1428 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 394), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !57 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc183 unwind label %cleanup-lpad

.noexc183:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest34
  %11 = ptrtoint {}* %.in to i64
  %single-float-tag-only = and i64 %11, 7
  %12 = icmp eq i64 %single-float-tag-only, 6
  br i1 %12, label %tag12, label %tag20

tag6:                                             ; preds = %tag16
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 113), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest73 unwind label %cleanup-lpad

tag8:                                             ; preds = %header-check-br51, %header-check-br51, %header-check-br51, %header-check-br51
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 148), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest110 unwind label %cleanup-lpad

tag11:                                            ; preds = %header-check-br135, %header-check-br135, %header-check-br135, %header-check-br135
  %17 = ptrtoint {}* %32 to i64
  %single-float-tag-only125 = and i64 %17, 7
  %18 = icmp eq i64 %single-float-tag-only125, 6
  br i1 %18, label %tag12, label %tag23

tag12:                                            ; preds = %header-check-br135, %header-check-br51, %tag, %tag20, %tag11, %tag23, %tag16, %normal-dest108
  %return-value.sroa.11.0 = phi i64 [ %.elt171, %normal-dest108 ], [ 1, %tag16 ], [ 1, %tag23 ], [ 1, %tag11 ], [ 1, %tag20 ], [ 1, %tag ], [ 1, %header-check-br51 ], [ 1, %header-check-br135 ]
  %return-value.sroa.0.0 = phi i64 [ %51, %normal-dest108 ], [ %22, %tag16 ], [ %35, %tag23 ], [ %35, %tag11 ], [ %35, %tag20 ], [ %35, %tag ], [ %35, %header-check-br51 ], [ %35, %header-check-br135 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %19 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %20 = insertvalue { {}*, i64 } undef, {}* %19, 0
  %21 = insertvalue { {}*, i64 } %20, i64 %return-value.sroa.11.0, 1
  ret { {}*, i64 } %21

tag16:                                            ; preds = %normal-dest34, %normal-dest117
  %22 = phi i64 [ %54, %normal-dest117 ], [ %35, %normal-dest34 ]
  %23 = phi {}* [ %53, %normal-dest117 ], [ %30, %normal-dest34 ]
  %G157783.0 = phi {}* [ %G157783.1, %normal-dest117 ], [ %.val, %normal-dest34 ]
  %24 = icmp eq {}* %G157783.0, %23
  br i1 %24, label %tag12, label %tag6

tag20:                                            ; preds = %tag
  %fixnum-tag-only142175 = and i64 %11, 3
  %fixnump-test143 = icmp ne i64 %fixnum-tag-only142175, 0
  %test138 = icmp eq i64 %single-float-tag-only, 1
  %or.cond187 = and i1 %fixnump-test143, %test138
  br i1 %or.cond187, label %header-check-br135, label %tag12

tag23:                                            ; preds = %tag11
  %fixnum-tag-only146177 = and i64 %17, 3
  %fixnump-test147 = icmp ne i64 %fixnum-tag-only146177, 0
  %test54 = icmp eq i64 %single-float-tag-only125, 1
  %or.cond = and i1 %fixnump-test147, %test54
  br i1 %or.cond, label %header-check-br51, label %tag12

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest110, %tag8, %normal-dest96, %normal-dest84, %normal-dest77, %normal-dest75, %normal-dest73, %tag6, %normal-dest31, %normal-dest
  %25 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %25

normal-dest:                                      ; preds = %entry
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 98), align 16
  %ptrtoint = ptrtoint {}* %27 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %27, i64 2, {}* %farg0, {}* %28, {}* null, {}* null)
          to label %normal-dest34 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %normal-dest31
  %.elt = extractvalue { {}*, i64 } %29, 0
  %.elt159 = extractvalue { {}*, i64 } %29, 1
  %cond = icmp eq i64 %.elt159, 0
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %.in = select i1 %cond, {}* %30, {}* %.elt
  %31 = bitcast {}* %.in to i8*
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 391), align 8
  %33 = icmp eq {}* %.in, %32
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G157792.0 = select i1 %33, {}* %.val, {}* %30
  %34 = icmp eq {}* %G157792.0, %30
  %35 = ptrtoint {}* %30 to i64
  br i1 %34, label %tag, label %tag16

header-check-br51:                                ; preds = %tag23
  %irc-bit-cast55 = bitcast {}* %32 to i8*
  %gep56 = getelementptr inbounds i8, i8* %irc-bit-cast55, i64 -9
  %irc-bit-cast57 = bitcast i8* %gep56 to i64*
  %36 = load i64, i64* %irc-bit-cast57, align 8
  %37 = add i64 %36, -1309
  %38 = lshr i64 %37, 3
  %39 = shl i64 %37, 61
  %40 = or i64 %38, %39
  switch i64 %40, label %tag12 [
    i64 2, label %tag8
    i64 4, label %tag8
    i64 5, label %tag8
    i64 0, label %tag8
  ]

normal-dest73:                                    ; preds = %tag6
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 370), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest73
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest77 unwind label %cleanup-lpad

normal-dest77:                                    ; preds = %normal-dest75
  %45 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  %ptrtoint78 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint79 = add i64 %ptrtoint78, 7
  %entry-point-addr80 = inttoptr i64 %entry-point-addr-uint79 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point81 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr80, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point81({}* %44, i64 2, {}* %farg0, {}* %45, {}* null, {}* null)
          to label %normal-dest84 unwind label %cleanup-lpad

normal-dest84:                                    ; preds = %normal-dest77
  %.elt161 = extractvalue { {}*, i64 } %46, 0
  %.elt163 = extractvalue { {}*, i64 } %46, 1
  %cond155 = icmp eq i64 %.elt163, 0
  %47 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157776.0 = select i1 %cond155, {}* %47, {}* %.elt161
  %ptrtoint90 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint91 = add i64 %ptrtoint90, 7
  %entry-point-addr92 = inttoptr i64 %entry-point-addr-uint91 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point93 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr92, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point93({}* %42, i64 1, {}* %G157776.0, {}* null, {}* null, {}* null)
          to label %normal-dest96 unwind label %cleanup-lpad

normal-dest96:                                    ; preds = %normal-dest84
  %.elt165 = extractvalue { {}*, i64 } %48, 0
  %.elt167 = extractvalue { {}*, i64 } %48, 1
  %cond156 = icmp eq i64 %.elt167, 0
  %49 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157774.0 = select i1 %cond156, {}* %49, {}* %.elt165
  %ptrtoint102 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint103 = add i64 %ptrtoint102, 7
  %entry-point-addr104 = inttoptr i64 %entry-point-addr-uint103 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point105 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr104, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point105({}* %14, i64 2, {}* %farg0, {}* %G157774.0, {}* null, {}* null)
          to label %normal-dest108 unwind label %cleanup-lpad

normal-dest108:                                   ; preds = %normal-dest96
  %.elt169 = extractvalue { {}*, i64 } %50, 0
  %51 = ptrtoint {}* %.elt169 to i64
  %.elt171 = extractvalue { {}*, i64 } %50, 1
  br label %tag12

normal-dest110:                                   ; preds = %tag8
  %ptrtoint111 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint112 = add i64 %ptrtoint111, 7
  %entry-point-addr113 = inttoptr i64 %entry-point-addr-uint112 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point114 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr113, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point114({}* %16, i64 2, {}* nonnull %.in, {}* nonnull %32, {}* null, {}* null)
          to label %normal-dest117 unwind label %cleanup-lpad

normal-dest117:                                   ; preds = %normal-dest110
  %.elt180 = extractvalue { {}*, i64 } %52, 0
  %.elt182 = extractvalue { {}*, i64 } %52, 1
  %cond157 = icmp eq i64 %.elt182, 0
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157783.1 = select i1 %cond157, {}* %53, {}* %.elt180
  %54 = ptrtoint {}* %53 to i64
  br label %tag16

header-check-br135:                               ; preds = %tag20
  %gep140 = getelementptr inbounds i8, i8* %31, i64 -9
  %irc-bit-cast141 = bitcast i8* %gep140 to i64*
  %55 = load i64, i64* %irc-bit-cast141, align 8
  %56 = add i64 %55, -1309
  %57 = lshr i64 %56, 3
  %58 = shl i64 %56, 61
  %59 = or i64 %57, %58
  switch i64 %59, label %tag12 [
    i64 2, label %tag11
    i64 4, label %tag11
    i64 5, label %tag11
    i64 0, label %tag11
  ]
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !58 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G157818.0 = phi {}* [ %18, %header-check-br ], [ %G157818.1, %normal-dest17 ], [ %G157818.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 406), align 16
  %ptrtoint43 = ptrtoint {}* %G157818.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G157818.0, i64 2, {}* %"closure->ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 406), align 16
  %"closure->ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 16823, i64 363, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157818.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 405), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157818.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag2

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 408), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 411), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1452 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 406), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !59 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc105 unwind label %cleanup-lpad

.noexc105:                                        ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest63, %normal-dest51, %normal-dest39, %normal-dest27, %normal-dest20, %normal-dest18, %normal-dest14, %normal-dest11, %normal-dest9, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 399), align 8
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest7
  %19 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest11 unwind label %cleanup-lpad

normal-dest11:                                    ; preds = %normal-dest9
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 401), align 8
  %ptrtoint = ptrtoint {}* %20 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %20, i64 1, {}* %21, {}* null, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %.elt = extractvalue { {}*, i64 } %22, 0
  %.elt81 = extractvalue { {}*, i64 } %22, 1
  %cond = icmp eq i64 %.elt81, 0
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157845.0 = select i1 %cond, {}* %23, {}* %.elt
  %24 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest14
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest18
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 403), align 8
  %ptrtoint21 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint22 = add i64 %ptrtoint21, 7
  %entry-point-addr23 = inttoptr i64 %entry-point-addr-uint22 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point24 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr23, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point24({}* %27, i64 2, {}* %farg0, {}* %28, {}* null, {}* null)
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest27:                                    ; preds = %normal-dest20
  %.elt83 = extractvalue { {}*, i64 } %29, 0
  %.elt85 = extractvalue { {}*, i64 } %29, 1
  %cond76 = icmp eq i64 %.elt85, 0
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157849.0 = select i1 %cond76, {}* %30, {}* %.elt83
  %ptrtoint33 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %25, i64 1, {}* %G157849.0, {}* null, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest27
  %.elt87 = extractvalue { {}*, i64 } %31, 0
  %.elt89 = extractvalue { {}*, i64 } %31, 1
  %cond77 = icmp eq i64 %.elt89, 0
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157846.0 = select i1 %cond77, {}* %32, {}* %.elt87
  %ptrtoint45 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint46 = add i64 %ptrtoint45, 7
  %entry-point-addr47 = inttoptr i64 %entry-point-addr-uint46 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point48 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr47, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point48({}* %18, i64 3, {}* %G157845.0, {}* %G157846.0, {}* %32, {}* null)
          to label %normal-dest51 unwind label %cleanup-lpad

normal-dest51:                                    ; preds = %normal-dest39
  %.elt91 = extractvalue { {}*, i64 } %33, 0
  %.elt93 = extractvalue { {}*, i64 } %33, 1
  %cond78 = icmp eq i64 %.elt93, 0
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157843.0 = select i1 %cond78, {}* %34, {}* %.elt91
  %ptrtoint57 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %16, i64 1, {}* %G157843.0, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest51
  %.elt95 = extractvalue { {}*, i64 } %35, 0
  %.elt97 = extractvalue { {}*, i64 } %35, 1
  %cond79 = icmp eq i64 %.elt97, 0
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157839.0 = select i1 %cond79, {}* %36, {}* %.elt95
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint69 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %13, i64 5, {}* %farg0, {}* %14, {}* %G157839.0, {}* %37, {}* %38)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest63
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %39
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !60 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G157880.0 = phi {}* [ %18, %header-check-br ], [ %G157880.1, %normal-dest54 ], [ %G157880.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 438), align 16
  %ptrtoint13 = ptrtoint {}* %G157880.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G157880.0, i64 2, {}* %"closure->ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 438), align 16
  %"closure->ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 17136, i64 370, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 440), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 443), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1480 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 438), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 437), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157880.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157880.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !61 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc1293 unwind label %cleanup-lpad

.noexc1293:                                       ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest228, %normal-dest669
  %.sink1357 = phi { {}*, i64 } [ %232, %normal-dest669 ], [ %105, %normal-dest228 ]
  %.elt1288 = extractvalue { {}*, i64 } %.sink1357, 0
  %.elt1290 = extractvalue { {}*, i64 } %.sink1357, 1
  %cond1017 = icmp eq i64 %.elt1290, 0
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158040.2 = select i1 %cond1017, {}* %11, {}* %.elt1288
  %12 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint51 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint52 = add i64 %ptrtoint51, 7
  %entry-point-addr53 = inttoptr i64 %entry-point-addr-uint52 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point54 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr53, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point54({}* %39, i64 5, {}* %farg0, {}* %40, {}* %G158040.2, {}* %12, {}* %13)
          to label %normal-dest57 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest45
  %15 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest79 unwind label %cleanup-lpad

tag4:                                             ; preds = %tag9
  %16 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest247 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest424, %normal-dest935
  %.sink1359 = phi { {}*, i64 } [ %309, %normal-dest935 ], [ %161, %normal-dest424 ]
  %.elt1220 = extractvalue { {}*, i64 } %.sink1359, 0
  %.elt1222 = extractvalue { {}*, i64 } %.sink1359, 1
  %cond1000 = icmp eq i64 %.elt1222, 0
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157901.2 = select i1 %cond1000, {}* %17, {}* %.elt1220
  %18 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %19 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint442 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint443 = add i64 %ptrtoint442, 7
  %entry-point-addr444 = inttoptr i64 %entry-point-addr-uint443 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point445 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr444, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point445({}* %49, i64 5, {}* %farg0, {}* %50, {}* %G157901.2, {}* %18, {}* %19)
          to label %normal-dest448 unwind label %cleanup-lpad

tag7:                                             ; preds = %normal-dest45
  %21 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest450 unwind label %cleanup-lpad

tag8:                                             ; preds = %tag9.thread, %tag9
  %22 = phi {}* [ %57, %tag9.thread ], [ %26, %tag9 ]
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest688 unwind label %cleanup-lpad

tag9:                                             ; preds = %normal-dest72
  %24 = icmp eq {}* %G157863.0, %55
  %.G157864.0 = select i1 %24, {}* %55, {}* %G157864.0
  %25 = icmp eq {}* %.G157864.0, %55
  %26 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  br i1 %25, label %tag8, label %tag4

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest935, %normal-dest923, %normal-dest911, %normal-dest899, %normal-dest887, %normal-dest875, %normal-dest863, %normal-dest851, %normal-dest844, %normal-dest837, %normal-dest830, %normal-dest828, %normal-dest826, %normal-dest819, %normal-dest812, %normal-dest810, %normal-dest808, %normal-dest801, %normal-dest794, %normal-dest787, %normal-dest780, %normal-dest773, %normal-dest761, %normal-dest749, %normal-dest742, %normal-dest735, %normal-dest728, %normal-dest726, %normal-dest724, %normal-dest717, %normal-dest710, %normal-dest708, %normal-dest706, %normal-dest699, %normal-dest692, %normal-dest690, %normal-dest688, %tag8, %normal-dest669, %normal-dest657, %normal-dest645, %normal-dest633, %normal-dest626, %normal-dest619, %normal-dest607, %normal-dest595, %normal-dest583, %normal-dest571, %normal-dest564, %normal-dest557, %normal-dest550, %normal-dest548, %normal-dest546, %normal-dest539, %normal-dest532, %normal-dest530, %normal-dest528, %normal-dest521, %normal-dest509, %normal-dest497, %normal-dest490, %normal-dest488, %normal-dest486, %normal-dest479, %normal-dest472, %normal-dest470, %normal-dest468, %normal-dest461, %normal-dest454, %normal-dest452, %normal-dest450, %tag7, %tag5, %normal-dest424, %normal-dest412, %normal-dest400, %normal-dest388, %normal-dest376, %normal-dest369, %normal-dest367, %normal-dest360, %normal-dest353, %normal-dest346, %normal-dest339, %normal-dest332, %normal-dest320, %normal-dest308, %normal-dest301, %normal-dest294, %normal-dest287, %normal-dest285, %normal-dest283, %normal-dest276, %normal-dest269, %normal-dest267, %normal-dest265, %normal-dest258, %normal-dest251, %normal-dest249, %normal-dest247, %tag4, %normal-dest228, %normal-dest216, %normal-dest204, %normal-dest192, %normal-dest180, %normal-dest173, %normal-dest171, %normal-dest164, %normal-dest157, %normal-dest150, %normal-dest138, %normal-dest126, %normal-dest119, %normal-dest117, %normal-dest115, %normal-dest108, %normal-dest101, %normal-dest99, %normal-dest97, %normal-dest90, %normal-dest83, %normal-dest81, %normal-dest79, %tag3, %normal-dest65, %normal-dest63, %normal-dest57, %tag2, %normal-dest38, %normal-dest36, %normal-dest29, %normal-dest22, %normal-dest18, %normal-dest15, %normal-dest
  %27 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %27

normal-dest:                                      ; preds = %entry
  %28 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 413), align 8
  %ptrtoint = ptrtoint {}* %29 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %29, i64 2, {}* %farg0, {}* %30, {}* null, {}* null)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest15
  %.elt = extractvalue { {}*, i64 } %31, 0
  %.elt1019 = extractvalue { {}*, i64 } %31, 1
  %cond = icmp eq i64 %.elt1019, 0
  %32 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157863.0 = select i1 %cond, {}* %32, {}* %.elt
  %33 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %normal-dest18
  %35 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 415), align 8
  %ptrtoint23 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint24 = add i64 %ptrtoint23, 7
  %entry-point-addr25 = inttoptr i64 %entry-point-addr-uint24 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point26 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr25, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point26({}* %34, i64 2, {}* %farg0, {}* %35, {}* null, {}* null)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest22
  %.elt1021 = extractvalue { {}*, i64 } %36, 0
  %.elt1023 = extractvalue { {}*, i64 } %36, 1
  %cond953 = icmp eq i64 %.elt1023, 0
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157864.0 = select i1 %cond953, {}* %37, {}* %.elt1021
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 417), align 8
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest36
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 419), align 8
  %ptrtoint39 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint40 = add i64 %ptrtoint39, 7
  %entry-point-addr41 = inttoptr i64 %entry-point-addr-uint40 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point42 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr41, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point42({}* %42, i64 2, {}* %farg0, {}* %43, {}* null, {}* null)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest38
  %.elt1025 = extractvalue { {}*, i64 } %44, 0
  %.elt1027 = extractvalue { {}*, i64 } %44, 1
  %cond954 = icmp eq i64 %.elt1027, 0
  %45 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158149.0 = select i1 %cond954, {}* %45, {}* %.elt1025
  %46 = icmp eq {}* %G158149.0, %45
  %47 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  br i1 %46, label %tag7, label %tag3

normal-dest57:                                    ; preds = %tag2
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 96), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest57
  %50 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 429), align 8
  %51 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest65 unwind label %cleanup-lpad

normal-dest65:                                    ; preds = %normal-dest63
  %53 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 431), align 8
  %ptrtoint66 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint67 = add i64 %ptrtoint66, 7
  %entry-point-addr68 = inttoptr i64 %entry-point-addr-uint67 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point69 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr68, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point69({}* %52, i64 2, {}* %farg0, {}* %53, {}* null, {}* null)
          to label %normal-dest72 unwind label %cleanup-lpad

normal-dest72:                                    ; preds = %normal-dest65
  %.elt1081 = extractvalue { {}*, i64 } %54, 0
  %.elt1083 = extractvalue { {}*, i64 } %54, 1
  %cond967 = icmp eq i64 %.elt1083, 0
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158030.0 = select i1 %cond967, {}* %55, {}* %.elt1081
  %56 = icmp eq {}* %G158030.0, %55
  br i1 %56, label %tag9.thread, label %tag9

tag9.thread:                                      ; preds = %normal-dest72
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 41), align 8
  br label %tag8

normal-dest79:                                    ; preds = %tag3
  %58 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %59 = invoke {}* @cc_safe_fdefinition({}* %58)
          to label %normal-dest81 unwind label %cleanup-lpad

normal-dest81:                                    ; preds = %normal-dest79
  %60 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest83 unwind label %cleanup-lpad

normal-dest83:                                    ; preds = %normal-dest81
  %62 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  %ptrtoint84 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %61, i64 1, {}* %62, {}* null, {}* null, {}* null)
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %.elt1029 = extractvalue { {}*, i64 } %63, 0
  %.elt1031 = extractvalue { {}*, i64 } %63, 1
  %cond955 = icmp eq i64 %.elt1031, 0
  %64 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158108.0 = select i1 %cond955, {}* %64, {}* %.elt1029
  %65 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest97 unwind label %cleanup-lpad

normal-dest97:                                    ; preds = %normal-dest90
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest99 unwind label %cleanup-lpad

normal-dest99:                                    ; preds = %normal-dest97
  %69 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest101 unwind label %cleanup-lpad

normal-dest101:                                   ; preds = %normal-dest99
  %71 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 421), align 8
  %ptrtoint102 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint103 = add i64 %ptrtoint102, 7
  %entry-point-addr104 = inttoptr i64 %entry-point-addr-uint103 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point105 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr104, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point105({}* %70, i64 1, {}* %71, {}* null, {}* null, {}* null)
          to label %normal-dest108 unwind label %cleanup-lpad

normal-dest108:                                   ; preds = %normal-dest101
  %.elt1033 = extractvalue { {}*, i64 } %72, 0
  %.elt1035 = extractvalue { {}*, i64 } %72, 1
  %cond956 = icmp eq i64 %.elt1035, 0
  %73 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158114.0 = select i1 %cond956, {}* %73, {}* %.elt1033
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest115 unwind label %cleanup-lpad

normal-dest115:                                   ; preds = %normal-dest108
  %76 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest117 unwind label %cleanup-lpad

normal-dest117:                                   ; preds = %normal-dest115
  %78 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest119 unwind label %cleanup-lpad

normal-dest119:                                   ; preds = %normal-dest117
  %ptrtoint120 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint121 = add i64 %ptrtoint120, 7
  %entry-point-addr122 = inttoptr i64 %entry-point-addr-uint121 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point123 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr122, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point123({}* %79, i64 1, {}* %G157863.0, {}* null, {}* null, {}* null)
          to label %normal-dest126 unwind label %cleanup-lpad

normal-dest126:                                   ; preds = %normal-dest119
  %.elt1037 = extractvalue { {}*, i64 } %80, 0
  %.elt1039 = extractvalue { {}*, i64 } %80, 1
  %cond957 = icmp eq i64 %.elt1039, 0
  %81 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158132.0 = select i1 %cond957, {}* %81, {}* %.elt1037
  %ptrtoint132 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint133 = add i64 %ptrtoint132, 7
  %entry-point-addr134 = inttoptr i64 %entry-point-addr-uint133 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point135 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr134, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point135({}* %77, i64 2, {}* %G158132.0, {}* %81, {}* null, {}* null)
          to label %normal-dest138 unwind label %cleanup-lpad

normal-dest138:                                   ; preds = %normal-dest126
  %.elt1041 = extractvalue { {}*, i64 } %82, 0
  %.elt1043 = extractvalue { {}*, i64 } %82, 1
  %cond958 = icmp eq i64 %.elt1043, 0
  %83 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158130.0 = select i1 %cond958, {}* %83, {}* %.elt1041
  %ptrtoint144 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint145 = add i64 %ptrtoint144, 7
  %entry-point-addr146 = inttoptr i64 %entry-point-addr-uint145 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point147 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr146, align 8
  %84 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point147({}* %75, i64 1, {}* %G158130.0, {}* null, {}* null, {}* null)
          to label %normal-dest150 unwind label %cleanup-lpad

normal-dest150:                                   ; preds = %normal-dest138
  %.elt1045 = extractvalue { {}*, i64 } %84, 0
  %.elt1047 = extractvalue { {}*, i64 } %84, 1
  %cond959 = icmp eq i64 %.elt1047, 0
  %85 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158115.0 = select i1 %cond959, {}* %85, {}* %.elt1045
  %86 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest157 unwind label %cleanup-lpad

normal-dest157:                                   ; preds = %normal-dest150
  %ptrtoint158 = ptrtoint {}* %87 to i64
  %entry-point-addr-uint159 = add i64 %ptrtoint158, 7
  %entry-point-addr160 = inttoptr i64 %entry-point-addr-uint159 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point161 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr160, align 8
  %88 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point161({}* %87, i64 1, {}* %G157863.0, {}* null, {}* null, {}* null)
          to label %normal-dest164 unwind label %cleanup-lpad

normal-dest164:                                   ; preds = %normal-dest157
  %.elt1049 = extractvalue { {}*, i64 } %88, 0
  %.elt1051 = extractvalue { {}*, i64 } %88, 1
  %cond960 = icmp eq i64 %.elt1051, 0
  %89 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158116.0 = select i1 %cond960, {}* %89, {}* %.elt1049
  %90 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest171 unwind label %cleanup-lpad

normal-dest171:                                   ; preds = %normal-dest164
  %92 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %93 = invoke {}* @cc_safe_fdefinition({}* %92)
          to label %normal-dest173 unwind label %cleanup-lpad

normal-dest173:                                   ; preds = %normal-dest171
  %94 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 419), align 8
  %ptrtoint174 = ptrtoint {}* %93 to i64
  %entry-point-addr-uint175 = add i64 %ptrtoint174, 7
  %entry-point-addr176 = inttoptr i64 %entry-point-addr-uint175 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point177 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr176, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point177({}* %93, i64 2, {}* %farg0, {}* %94, {}* null, {}* null)
          to label %normal-dest180 unwind label %cleanup-lpad

normal-dest180:                                   ; preds = %normal-dest173
  %.elt1053 = extractvalue { {}*, i64 } %95, 0
  %.elt1055 = extractvalue { {}*, i64 } %95, 1
  %cond961 = icmp eq i64 %.elt1055, 0
  %96 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158120.0 = select i1 %cond961, {}* %96, {}* %.elt1053
  %ptrtoint186 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint187 = add i64 %ptrtoint186, 7
  %entry-point-addr188 = inttoptr i64 %entry-point-addr-uint187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr188, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point189({}* %91, i64 1, {}* %G158120.0, {}* null, {}* null, {}* null)
          to label %normal-dest192 unwind label %cleanup-lpad

normal-dest192:                                   ; preds = %normal-dest180
  %.elt1057 = extractvalue { {}*, i64 } %97, 0
  %.elt1059 = extractvalue { {}*, i64 } %97, 1
  %cond962 = icmp eq i64 %.elt1059, 0
  %98 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158117.0 = select i1 %cond962, {}* %98, {}* %.elt1057
  %ptrtoint198 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint199 = add i64 %ptrtoint198, 7
  %entry-point-addr200 = inttoptr i64 %entry-point-addr-uint199 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point201 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr200, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point201({}* %68, i64 5, {}* %G158114.0, {}* %G158115.0, {}* %G158116.0, {}* %G158117.0, {}* %98)
          to label %normal-dest204 unwind label %cleanup-lpad

normal-dest204:                                   ; preds = %normal-dest192
  %.elt1061 = extractvalue { {}*, i64 } %99, 0
  %.elt1063 = extractvalue { {}*, i64 } %99, 1
  %cond963 = icmp eq i64 %.elt1063, 0
  %100 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158112.0 = select i1 %cond963, {}* %100, {}* %.elt1061
  %ptrtoint210 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint211 = add i64 %ptrtoint210, 7
  %entry-point-addr212 = inttoptr i64 %entry-point-addr-uint211 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point213 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr212, align 8
  %101 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point213({}* %66, i64 1, {}* %G158112.0, {}* null, {}* null, {}* null)
          to label %normal-dest216 unwind label %cleanup-lpad

normal-dest216:                                   ; preds = %normal-dest204
  %.elt1065 = extractvalue { {}*, i64 } %101, 0
  %.elt1067 = extractvalue { {}*, i64 } %101, 1
  %cond964 = icmp eq i64 %.elt1067, 0
  %102 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158109.0 = select i1 %cond964, {}* %102, {}* %.elt1065
  %ptrtoint222 = ptrtoint {}* %59 to i64
  %entry-point-addr-uint223 = add i64 %ptrtoint222, 7
  %entry-point-addr224 = inttoptr i64 %entry-point-addr-uint223 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point225 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr224, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point225({}* %59, i64 3, {}* %G158108.0, {}* %G158109.0, {}* %102, {}* null)
          to label %normal-dest228 unwind label %cleanup-lpad

normal-dest228:                                   ; preds = %normal-dest216
  %.elt1069 = extractvalue { {}*, i64 } %103, 0
  %.elt1071 = extractvalue { {}*, i64 } %103, 1
  %cond965 = icmp eq i64 %.elt1071, 0
  %104 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158106.0 = select i1 %cond965, {}* %104, {}* %.elt1069
  %ptrtoint234 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint235 = add i64 %ptrtoint234, 7
  %entry-point-addr236 = inttoptr i64 %entry-point-addr-uint235 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point237 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr236, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point237({}* %15, i64 1, {}* %G158106.0, {}* null, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad

normal-dest247:                                   ; preds = %tag4
  %106 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest249 unwind label %cleanup-lpad

normal-dest249:                                   ; preds = %normal-dest247
  %108 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest251 unwind label %cleanup-lpad

normal-dest251:                                   ; preds = %normal-dest249
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  %ptrtoint252 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint253 = add i64 %ptrtoint252, 7
  %entry-point-addr254 = inttoptr i64 %entry-point-addr-uint253 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point255 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr254, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point255({}* %109, i64 1, {}* %110, {}* null, {}* null, {}* null)
          to label %normal-dest258 unwind label %cleanup-lpad

normal-dest258:                                   ; preds = %normal-dest251
  %.elt1085 = extractvalue { {}*, i64 } %111, 0
  %.elt1087 = extractvalue { {}*, i64 } %111, 1
  %cond968 = icmp eq i64 %.elt1087, 0
  %112 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157977.0 = select i1 %cond968, {}* %112, {}* %.elt1085
  %113 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %114 = invoke {}* @cc_safe_fdefinition({}* %113)
          to label %normal-dest265 unwind label %cleanup-lpad

normal-dest265:                                   ; preds = %normal-dest258
  %115 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %116 = invoke {}* @cc_safe_fdefinition({}* %115)
          to label %normal-dest267 unwind label %cleanup-lpad

normal-dest267:                                   ; preds = %normal-dest265
  %117 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %118 = invoke {}* @cc_safe_fdefinition({}* %117)
          to label %normal-dest269 unwind label %cleanup-lpad

normal-dest269:                                   ; preds = %normal-dest267
  %119 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 421), align 8
  %ptrtoint270 = ptrtoint {}* %118 to i64
  %entry-point-addr-uint271 = add i64 %ptrtoint270, 7
  %entry-point-addr272 = inttoptr i64 %entry-point-addr-uint271 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point273 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr272, align 8
  %120 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point273({}* %118, i64 1, {}* %119, {}* null, {}* null, {}* null)
          to label %normal-dest276 unwind label %cleanup-lpad

normal-dest276:                                   ; preds = %normal-dest269
  %.elt1089 = extractvalue { {}*, i64 } %120, 0
  %.elt1091 = extractvalue { {}*, i64 } %120, 1
  %cond969 = icmp eq i64 %.elt1091, 0
  %121 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157983.0 = select i1 %cond969, {}* %121, {}* %.elt1089
  %122 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest283 unwind label %cleanup-lpad

normal-dest283:                                   ; preds = %normal-dest276
  %124 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest285 unwind label %cleanup-lpad

normal-dest285:                                   ; preds = %normal-dest283
  %126 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest287 unwind label %cleanup-lpad

normal-dest287:                                   ; preds = %normal-dest285
  %ptrtoint288 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint289 = add i64 %ptrtoint288, 7
  %entry-point-addr290 = inttoptr i64 %entry-point-addr-uint289 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point291 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr290, align 8
  %128 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point291({}* %127, i64 1, {}* %G157863.0, {}* null, {}* null, {}* null)
          to label %normal-dest294 unwind label %cleanup-lpad

normal-dest294:                                   ; preds = %normal-dest287
  %.elt1093 = extractvalue { {}*, i64 } %128, 0
  %.elt1095 = extractvalue { {}*, i64 } %128, 1
  %cond970 = icmp eq i64 %.elt1095, 0
  %129 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158005.0 = select i1 %cond970, {}* %129, {}* %.elt1093
  %130 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %131 = invoke {}* @cc_safe_fdefinition({}* %130)
          to label %normal-dest301 unwind label %cleanup-lpad

normal-dest301:                                   ; preds = %normal-dest294
  %ptrtoint302 = ptrtoint {}* %131 to i64
  %entry-point-addr-uint303 = add i64 %ptrtoint302, 7
  %entry-point-addr304 = inttoptr i64 %entry-point-addr-uint303 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point305 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr304, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point305({}* %131, i64 1, {}* %G157864.0, {}* null, {}* null, {}* null)
          to label %normal-dest308 unwind label %cleanup-lpad

normal-dest308:                                   ; preds = %normal-dest301
  %.elt1097 = extractvalue { {}*, i64 } %132, 0
  %.elt1099 = extractvalue { {}*, i64 } %132, 1
  %cond971 = icmp eq i64 %.elt1099, 0
  %133 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158006.0 = select i1 %cond971, {}* %133, {}* %.elt1097
  %ptrtoint314 = ptrtoint {}* %125 to i64
  %entry-point-addr-uint315 = add i64 %ptrtoint314, 7
  %entry-point-addr316 = inttoptr i64 %entry-point-addr-uint315 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point317 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr316, align 8
  %134 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point317({}* %125, i64 3, {}* %G158005.0, {}* %G158006.0, {}* %133, {}* null)
          to label %normal-dest320 unwind label %cleanup-lpad

normal-dest320:                                   ; preds = %normal-dest308
  %.elt1101 = extractvalue { {}*, i64 } %134, 0
  %.elt1103 = extractvalue { {}*, i64 } %134, 1
  %cond972 = icmp eq i64 %.elt1103, 0
  %135 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158003.0 = select i1 %cond972, {}* %135, {}* %.elt1101
  %ptrtoint326 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint327 = add i64 %ptrtoint326, 7
  %entry-point-addr328 = inttoptr i64 %entry-point-addr-uint327 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point329 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr328, align 8
  %136 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point329({}* %123, i64 1, {}* %G158003.0, {}* null, {}* null, {}* null)
          to label %normal-dest332 unwind label %cleanup-lpad

normal-dest332:                                   ; preds = %normal-dest320
  %.elt1105 = extractvalue { {}*, i64 } %136, 0
  %.elt1107 = extractvalue { {}*, i64 } %136, 1
  %cond973 = icmp eq i64 %.elt1107, 0
  %137 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157984.0 = select i1 %cond973, {}* %137, {}* %.elt1105
  %138 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %139 = invoke {}* @cc_safe_fdefinition({}* %138)
          to label %normal-dest339 unwind label %cleanup-lpad

normal-dest339:                                   ; preds = %normal-dest332
  %ptrtoint340 = ptrtoint {}* %139 to i64
  %entry-point-addr-uint341 = add i64 %ptrtoint340, 7
  %entry-point-addr342 = inttoptr i64 %entry-point-addr-uint341 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point343 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr342, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point343({}* %139, i64 1, {}* %G157863.0, {}* null, {}* null, {}* null)
          to label %normal-dest346 unwind label %cleanup-lpad

normal-dest346:                                   ; preds = %normal-dest339
  %.elt1109 = extractvalue { {}*, i64 } %140, 0
  %.elt1111 = extractvalue { {}*, i64 } %140, 1
  %cond974 = icmp eq i64 %.elt1111, 0
  %141 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157985.0 = select i1 %cond974, {}* %141, {}* %.elt1109
  %142 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %143 = invoke {}* @cc_safe_fdefinition({}* %142)
          to label %normal-dest353 unwind label %cleanup-lpad

normal-dest353:                                   ; preds = %normal-dest346
  %ptrtoint354 = ptrtoint {}* %143 to i64
  %entry-point-addr-uint355 = add i64 %ptrtoint354, 7
  %entry-point-addr356 = inttoptr i64 %entry-point-addr-uint355 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point357 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr356, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point357({}* %143, i64 1, {}* %G157864.0, {}* null, {}* null, {}* null)
          to label %normal-dest360 unwind label %cleanup-lpad

normal-dest360:                                   ; preds = %normal-dest353
  %.elt1113 = extractvalue { {}*, i64 } %144, 0
  %.elt1115 = extractvalue { {}*, i64 } %144, 1
  %cond975 = icmp eq i64 %.elt1115, 0
  %145 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157986.0 = select i1 %cond975, {}* %145, {}* %.elt1113
  %146 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %147 = invoke {}* @cc_safe_fdefinition({}* %146)
          to label %normal-dest367 unwind label %cleanup-lpad

normal-dest367:                                   ; preds = %normal-dest360
  %148 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 248), align 16
  %149 = invoke {}* @cc_safe_fdefinition({}* %148)
          to label %normal-dest369 unwind label %cleanup-lpad

normal-dest369:                                   ; preds = %normal-dest367
  %150 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 431), align 8
  %ptrtoint370 = ptrtoint {}* %149 to i64
  %entry-point-addr-uint371 = add i64 %ptrtoint370, 7
  %entry-point-addr372 = inttoptr i64 %entry-point-addr-uint371 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point373 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr372, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point373({}* %149, i64 2, {}* %farg0, {}* %150, {}* null, {}* null)
          to label %normal-dest376 unwind label %cleanup-lpad

normal-dest376:                                   ; preds = %normal-dest369
  %.elt1117 = extractvalue { {}*, i64 } %151, 0
  %.elt1119 = extractvalue { {}*, i64 } %151, 1
  %cond976 = icmp eq i64 %.elt1119, 0
  %152 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157990.0 = select i1 %cond976, {}* %152, {}* %.elt1117
  %ptrtoint382 = ptrtoint {}* %147 to i64
  %entry-point-addr-uint383 = add i64 %ptrtoint382, 7
  %entry-point-addr384 = inttoptr i64 %entry-point-addr-uint383 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point385 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr384, align 8
  %153 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point385({}* %147, i64 1, {}* %G157990.0, {}* null, {}* null, {}* null)
          to label %normal-dest388 unwind label %cleanup-lpad

normal-dest388:                                   ; preds = %normal-dest376
  %.elt1121 = extractvalue { {}*, i64 } %153, 0
  %.elt1123 = extractvalue { {}*, i64 } %153, 1
  %cond977 = icmp eq i64 %.elt1123, 0
  %154 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157987.0 = select i1 %cond977, {}* %154, {}* %.elt1121
  %ptrtoint394 = ptrtoint {}* %116 to i64
  %entry-point-addr-uint395 = add i64 %ptrtoint394, 7
  %entry-point-addr396 = inttoptr i64 %entry-point-addr-uint395 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point397 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr396, align 8
  %155 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point397({}* %116, i64 6, {}* %G157983.0, {}* %G157984.0, {}* %G157985.0, {}* %G157986.0, {}* %G157987.0, {}* %154)
          to label %normal-dest400 unwind label %cleanup-lpad

normal-dest400:                                   ; preds = %normal-dest388
  %.elt1125 = extractvalue { {}*, i64 } %155, 0
  %.elt1127 = extractvalue { {}*, i64 } %155, 1
  %cond978 = icmp eq i64 %.elt1127, 0
  %156 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157981.0 = select i1 %cond978, {}* %156, {}* %.elt1125
  %ptrtoint406 = ptrtoint {}* %114 to i64
  %entry-point-addr-uint407 = add i64 %ptrtoint406, 7
  %entry-point-addr408 = inttoptr i64 %entry-point-addr-uint407 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point409 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr408, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point409({}* %114, i64 1, {}* %G157981.0, {}* null, {}* null, {}* null)
          to label %normal-dest412 unwind label %cleanup-lpad

normal-dest412:                                   ; preds = %normal-dest400
  %.elt1129 = extractvalue { {}*, i64 } %157, 0
  %.elt1131 = extractvalue { {}*, i64 } %157, 1
  %cond979 = icmp eq i64 %.elt1131, 0
  %158 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157978.0 = select i1 %cond979, {}* %158, {}* %.elt1129
  %ptrtoint418 = ptrtoint {}* %107 to i64
  %entry-point-addr-uint419 = add i64 %ptrtoint418, 7
  %entry-point-addr420 = inttoptr i64 %entry-point-addr-uint419 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point421 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr420, align 8
  %159 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point421({}* %107, i64 3, {}* %G157977.0, {}* %G157978.0, {}* %158, {}* null)
          to label %normal-dest424 unwind label %cleanup-lpad

normal-dest424:                                   ; preds = %normal-dest412
  %.elt1133 = extractvalue { {}*, i64 } %159, 0
  %.elt1135 = extractvalue { {}*, i64 } %159, 1
  %cond980 = icmp eq i64 %.elt1135, 0
  %160 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157975.0 = select i1 %cond980, {}* %160, {}* %.elt1133
  %ptrtoint430 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint431 = add i64 %ptrtoint430, 7
  %entry-point-addr432 = inttoptr i64 %entry-point-addr-uint431 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point433 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr432, align 8
  %161 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point433({}* %16, i64 1, {}* %G157975.0, {}* null, {}* null, {}* null)
          to label %tag5 unwind label %cleanup-lpad

normal-dest448:                                   ; preds = %tag5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %20

normal-dest450:                                   ; preds = %tag7
  %162 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %163 = invoke {}* @cc_safe_fdefinition({}* %162)
          to label %normal-dest452 unwind label %cleanup-lpad

normal-dest452:                                   ; preds = %normal-dest450
  %164 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %165 = invoke {}* @cc_safe_fdefinition({}* %164)
          to label %normal-dest454 unwind label %cleanup-lpad

normal-dest454:                                   ; preds = %normal-dest452
  %166 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  %ptrtoint455 = ptrtoint {}* %165 to i64
  %entry-point-addr-uint456 = add i64 %ptrtoint455, 7
  %entry-point-addr457 = inttoptr i64 %entry-point-addr-uint456 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point458 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr457, align 8
  %167 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point458({}* %165, i64 1, {}* %166, {}* null, {}* null, {}* null)
          to label %normal-dest461 unwind label %cleanup-lpad

normal-dest461:                                   ; preds = %normal-dest454
  %.elt1224 = extractvalue { {}*, i64 } %167, 0
  %.elt1226 = extractvalue { {}*, i64 } %167, 1
  %cond1001 = icmp eq i64 %.elt1226, 0
  %168 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158046.0 = select i1 %cond1001, {}* %168, {}* %.elt1224
  %169 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %170 = invoke {}* @cc_safe_fdefinition({}* %169)
          to label %normal-dest468 unwind label %cleanup-lpad

normal-dest468:                                   ; preds = %normal-dest461
  %171 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %172 = invoke {}* @cc_safe_fdefinition({}* %171)
          to label %normal-dest470 unwind label %cleanup-lpad

normal-dest470:                                   ; preds = %normal-dest468
  %173 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %174 = invoke {}* @cc_safe_fdefinition({}* %173)
          to label %normal-dest472 unwind label %cleanup-lpad

normal-dest472:                                   ; preds = %normal-dest470
  %175 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 421), align 8
  %ptrtoint473 = ptrtoint {}* %174 to i64
  %entry-point-addr-uint474 = add i64 %ptrtoint473, 7
  %entry-point-addr475 = inttoptr i64 %entry-point-addr-uint474 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point476 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr475, align 8
  %176 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point476({}* %174, i64 1, {}* %175, {}* null, {}* null, {}* null)
          to label %normal-dest479 unwind label %cleanup-lpad

normal-dest479:                                   ; preds = %normal-dest472
  %.elt1228 = extractvalue { {}*, i64 } %176, 0
  %.elt1230 = extractvalue { {}*, i64 } %176, 1
  %cond1002 = icmp eq i64 %.elt1230, 0
  %177 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158052.0 = select i1 %cond1002, {}* %177, {}* %.elt1228
  %178 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %179 = invoke {}* @cc_safe_fdefinition({}* %178)
          to label %normal-dest486 unwind label %cleanup-lpad

normal-dest486:                                   ; preds = %normal-dest479
  %180 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %181 = invoke {}* @cc_safe_fdefinition({}* %180)
          to label %normal-dest488 unwind label %cleanup-lpad

normal-dest488:                                   ; preds = %normal-dest486
  %182 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %183 = invoke {}* @cc_safe_fdefinition({}* %182)
          to label %normal-dest490 unwind label %cleanup-lpad

normal-dest490:                                   ; preds = %normal-dest488
  %184 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 423), align 8
  %ptrtoint491 = ptrtoint {}* %183 to i64
  %entry-point-addr-uint492 = add i64 %ptrtoint491, 7
  %entry-point-addr493 = inttoptr i64 %entry-point-addr-uint492 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point494 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr493, align 8
  %185 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point494({}* %183, i64 1, {}* %184, {}* null, {}* null, {}* null)
          to label %normal-dest497 unwind label %cleanup-lpad

normal-dest497:                                   ; preds = %normal-dest490
  %.elt1232 = extractvalue { {}*, i64 } %185, 0
  %.elt1234 = extractvalue { {}*, i64 } %185, 1
  %cond1003 = icmp eq i64 %.elt1234, 0
  %186 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158088.0 = select i1 %cond1003, {}* %186, {}* %.elt1232
  %ptrtoint503 = ptrtoint {}* %181 to i64
  %entry-point-addr-uint504 = add i64 %ptrtoint503, 7
  %entry-point-addr505 = inttoptr i64 %entry-point-addr-uint504 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point506 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr505, align 8
  %187 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point506({}* %181, i64 2, {}* %G158088.0, {}* %186, {}* null, {}* null)
          to label %normal-dest509 unwind label %cleanup-lpad

normal-dest509:                                   ; preds = %normal-dest497
  %.elt1236 = extractvalue { {}*, i64 } %187, 0
  %.elt1238 = extractvalue { {}*, i64 } %187, 1
  %cond1004 = icmp eq i64 %.elt1238, 0
  %188 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158086.0 = select i1 %cond1004, {}* %188, {}* %.elt1236
  %ptrtoint515 = ptrtoint {}* %179 to i64
  %entry-point-addr-uint516 = add i64 %ptrtoint515, 7
  %entry-point-addr517 = inttoptr i64 %entry-point-addr-uint516 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point518 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr517, align 8
  %189 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point518({}* %179, i64 1, {}* %G158086.0, {}* null, {}* null, {}* null)
          to label %normal-dest521 unwind label %cleanup-lpad

normal-dest521:                                   ; preds = %normal-dest509
  %.elt1240 = extractvalue { {}*, i64 } %189, 0
  %.elt1242 = extractvalue { {}*, i64 } %189, 1
  %cond1005 = icmp eq i64 %.elt1242, 0
  %190 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158053.0 = select i1 %cond1005, {}* %190, {}* %.elt1240
  %191 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %192 = invoke {}* @cc_safe_fdefinition({}* %191)
          to label %normal-dest528 unwind label %cleanup-lpad

normal-dest528:                                   ; preds = %normal-dest521
  %193 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %194 = invoke {}* @cc_safe_fdefinition({}* %193)
          to label %normal-dest530 unwind label %cleanup-lpad

normal-dest530:                                   ; preds = %normal-dest528
  %195 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %196 = invoke {}* @cc_safe_fdefinition({}* %195)
          to label %normal-dest532 unwind label %cleanup-lpad

normal-dest532:                                   ; preds = %normal-dest530
  %197 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 425), align 8
  %ptrtoint533 = ptrtoint {}* %196 to i64
  %entry-point-addr-uint534 = add i64 %ptrtoint533, 7
  %entry-point-addr535 = inttoptr i64 %entry-point-addr-uint534 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point536 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr535, align 8
  %198 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point536({}* %196, i64 1, {}* %197, {}* null, {}* null, {}* null)
          to label %normal-dest539 unwind label %cleanup-lpad

normal-dest539:                                   ; preds = %normal-dest532
  %.elt1244 = extractvalue { {}*, i64 } %198, 0
  %.elt1246 = extractvalue { {}*, i64 } %198, 1
  %cond1006 = icmp eq i64 %.elt1246, 0
  %199 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158063.0 = select i1 %cond1006, {}* %199, {}* %.elt1244
  %200 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %201 = invoke {}* @cc_safe_fdefinition({}* %200)
          to label %normal-dest546 unwind label %cleanup-lpad

normal-dest546:                                   ; preds = %normal-dest539
  %202 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %203 = invoke {}* @cc_safe_fdefinition({}* %202)
          to label %normal-dest548 unwind label %cleanup-lpad

normal-dest548:                                   ; preds = %normal-dest546
  %204 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %205 = invoke {}* @cc_safe_fdefinition({}* %204)
          to label %normal-dest550 unwind label %cleanup-lpad

normal-dest550:                                   ; preds = %normal-dest548
  %206 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 427), align 8
  %ptrtoint551 = ptrtoint {}* %205 to i64
  %entry-point-addr-uint552 = add i64 %ptrtoint551, 7
  %entry-point-addr553 = inttoptr i64 %entry-point-addr-uint552 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point554 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr553, align 8
  %207 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point554({}* %205, i64 1, {}* %206, {}* null, {}* null, {}* null)
          to label %normal-dest557 unwind label %cleanup-lpad

normal-dest557:                                   ; preds = %normal-dest550
  %.elt1248 = extractvalue { {}*, i64 } %207, 0
  %.elt1250 = extractvalue { {}*, i64 } %207, 1
  %cond1007 = icmp eq i64 %.elt1250, 0
  %208 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158069.0 = select i1 %cond1007, {}* %208, {}* %.elt1248
  %209 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %210 = invoke {}* @cc_safe_fdefinition({}* %209)
          to label %normal-dest564 unwind label %cleanup-lpad

normal-dest564:                                   ; preds = %normal-dest557
  %211 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 423), align 8
  %ptrtoint565 = ptrtoint {}* %210 to i64
  %entry-point-addr-uint566 = add i64 %ptrtoint565, 7
  %entry-point-addr567 = inttoptr i64 %entry-point-addr-uint566 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point568 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr567, align 8
  %212 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point568({}* %210, i64 1, {}* %211, {}* null, {}* null, {}* null)
          to label %normal-dest571 unwind label %cleanup-lpad

normal-dest571:                                   ; preds = %normal-dest564
  %.elt1252 = extractvalue { {}*, i64 } %212, 0
  %.elt1254 = extractvalue { {}*, i64 } %212, 1
  %cond1008 = icmp eq i64 %.elt1254, 0
  %213 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158070.0 = select i1 %cond1008, {}* %213, {}* %.elt1252
  %ptrtoint577 = ptrtoint {}* %203 to i64
  %entry-point-addr-uint578 = add i64 %ptrtoint577, 7
  %entry-point-addr579 = inttoptr i64 %entry-point-addr-uint578 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point580 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr579, align 8
  %214 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point580({}* %203, i64 3, {}* %G158069.0, {}* %G158070.0, {}* %213, {}* null)
          to label %normal-dest583 unwind label %cleanup-lpad

normal-dest583:                                   ; preds = %normal-dest571
  %.elt1256 = extractvalue { {}*, i64 } %214, 0
  %.elt1258 = extractvalue { {}*, i64 } %214, 1
  %cond1009 = icmp eq i64 %.elt1258, 0
  %215 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158067.0 = select i1 %cond1009, {}* %215, {}* %.elt1256
  %ptrtoint589 = ptrtoint {}* %201 to i64
  %entry-point-addr-uint590 = add i64 %ptrtoint589, 7
  %entry-point-addr591 = inttoptr i64 %entry-point-addr-uint590 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point592 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr591, align 8
  %216 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point592({}* %201, i64 1, {}* %G158067.0, {}* null, {}* null, {}* null)
          to label %normal-dest595 unwind label %cleanup-lpad

normal-dest595:                                   ; preds = %normal-dest583
  %.elt1260 = extractvalue { {}*, i64 } %216, 0
  %.elt1262 = extractvalue { {}*, i64 } %216, 1
  %cond1010 = icmp eq i64 %.elt1262, 0
  %217 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158064.0 = select i1 %cond1010, {}* %217, {}* %.elt1260
  %ptrtoint601 = ptrtoint {}* %194 to i64
  %entry-point-addr-uint602 = add i64 %ptrtoint601, 7
  %entry-point-addr603 = inttoptr i64 %entry-point-addr-uint602 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point604 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr603, align 8
  %218 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point604({}* %194, i64 3, {}* %G158063.0, {}* %G158064.0, {}* %217, {}* null)
          to label %normal-dest607 unwind label %cleanup-lpad

normal-dest607:                                   ; preds = %normal-dest595
  %.elt1264 = extractvalue { {}*, i64 } %218, 0
  %.elt1266 = extractvalue { {}*, i64 } %218, 1
  %cond1011 = icmp eq i64 %.elt1266, 0
  %219 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158061.0 = select i1 %cond1011, {}* %219, {}* %.elt1264
  %ptrtoint613 = ptrtoint {}* %192 to i64
  %entry-point-addr-uint614 = add i64 %ptrtoint613, 7
  %entry-point-addr615 = inttoptr i64 %entry-point-addr-uint614 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point616 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr615, align 8
  %220 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point616({}* %192, i64 1, {}* %G158061.0, {}* null, {}* null, {}* null)
          to label %normal-dest619 unwind label %cleanup-lpad

normal-dest619:                                   ; preds = %normal-dest607
  %.elt1268 = extractvalue { {}*, i64 } %220, 0
  %.elt1270 = extractvalue { {}*, i64 } %220, 1
  %cond1012 = icmp eq i64 %.elt1270, 0
  %221 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158054.0 = select i1 %cond1012, {}* %221, {}* %.elt1268
  %222 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %223 = invoke {}* @cc_safe_fdefinition({}* %222)
          to label %normal-dest626 unwind label %cleanup-lpad

normal-dest626:                                   ; preds = %normal-dest619
  %ptrtoint627 = ptrtoint {}* %223 to i64
  %entry-point-addr-uint628 = add i64 %ptrtoint627, 7
  %entry-point-addr629 = inttoptr i64 %entry-point-addr-uint628 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point630 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr629, align 8
  %224 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point630({}* %223, i64 1, {}* inttoptr (i64 800 to {}*), {}* null, {}* null, {}* null)
          to label %normal-dest633 unwind label %cleanup-lpad

normal-dest633:                                   ; preds = %normal-dest626
  %.elt1272 = extractvalue { {}*, i64 } %224, 0
  %.elt1274 = extractvalue { {}*, i64 } %224, 1
  %cond1013 = icmp eq i64 %.elt1274, 0
  %225 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158055.0 = select i1 %cond1013, {}* %225, {}* %.elt1272
  %ptrtoint639 = ptrtoint {}* %172 to i64
  %entry-point-addr-uint640 = add i64 %ptrtoint639, 7
  %entry-point-addr641 = inttoptr i64 %entry-point-addr-uint640 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point642 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr641, align 8
  %226 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point642({}* %172, i64 5, {}* %G158052.0, {}* %G158053.0, {}* %G158054.0, {}* %G158055.0, {}* %225)
          to label %normal-dest645 unwind label %cleanup-lpad

normal-dest645:                                   ; preds = %normal-dest633
  %.elt1276 = extractvalue { {}*, i64 } %226, 0
  %.elt1278 = extractvalue { {}*, i64 } %226, 1
  %cond1014 = icmp eq i64 %.elt1278, 0
  %227 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158050.0 = select i1 %cond1014, {}* %227, {}* %.elt1276
  %ptrtoint651 = ptrtoint {}* %170 to i64
  %entry-point-addr-uint652 = add i64 %ptrtoint651, 7
  %entry-point-addr653 = inttoptr i64 %entry-point-addr-uint652 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point654 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr653, align 8
  %228 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point654({}* %170, i64 1, {}* %G158050.0, {}* null, {}* null, {}* null)
          to label %normal-dest657 unwind label %cleanup-lpad

normal-dest657:                                   ; preds = %normal-dest645
  %.elt1280 = extractvalue { {}*, i64 } %228, 0
  %.elt1282 = extractvalue { {}*, i64 } %228, 1
  %cond1015 = icmp eq i64 %.elt1282, 0
  %229 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158047.0 = select i1 %cond1015, {}* %229, {}* %.elt1280
  %ptrtoint663 = ptrtoint {}* %163 to i64
  %entry-point-addr-uint664 = add i64 %ptrtoint663, 7
  %entry-point-addr665 = inttoptr i64 %entry-point-addr-uint664 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point666 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr665, align 8
  %230 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point666({}* %163, i64 3, {}* %G158046.0, {}* %G158047.0, {}* %229, {}* null)
          to label %normal-dest669 unwind label %cleanup-lpad

normal-dest669:                                   ; preds = %normal-dest657
  %.elt1284 = extractvalue { {}*, i64 } %230, 0
  %.elt1286 = extractvalue { {}*, i64 } %230, 1
  %cond1016 = icmp eq i64 %.elt1286, 0
  %231 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158044.0 = select i1 %cond1016, {}* %231, {}* %.elt1284
  %ptrtoint675 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint676 = add i64 %ptrtoint675, 7
  %entry-point-addr677 = inttoptr i64 %entry-point-addr-uint676 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point678 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr677, align 8
  %232 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point678({}* %21, i64 1, {}* %G158044.0, {}* null, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad

normal-dest688:                                   ; preds = %tag8
  %233 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %234 = invoke {}* @cc_safe_fdefinition({}* %233)
          to label %normal-dest690 unwind label %cleanup-lpad

normal-dest690:                                   ; preds = %normal-dest688
  %235 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %236 = invoke {}* @cc_safe_fdefinition({}* %235)
          to label %normal-dest692 unwind label %cleanup-lpad

normal-dest692:                                   ; preds = %normal-dest690
  %237 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  %ptrtoint693 = ptrtoint {}* %236 to i64
  %entry-point-addr-uint694 = add i64 %ptrtoint693, 7
  %entry-point-addr695 = inttoptr i64 %entry-point-addr-uint694 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point696 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr695, align 8
  %238 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point696({}* %236, i64 1, {}* %237, {}* null, {}* null, {}* null)
          to label %normal-dest699 unwind label %cleanup-lpad

normal-dest699:                                   ; preds = %normal-dest692
  %.elt1148 = extractvalue { {}*, i64 } %238, 0
  %.elt1150 = extractvalue { {}*, i64 } %238, 1
  %cond982 = icmp eq i64 %.elt1150, 0
  %239 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157907.0 = select i1 %cond982, {}* %239, {}* %.elt1148
  %240 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %241 = invoke {}* @cc_safe_fdefinition({}* %240)
          to label %normal-dest706 unwind label %cleanup-lpad

normal-dest706:                                   ; preds = %normal-dest699
  %242 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %243 = invoke {}* @cc_safe_fdefinition({}* %242)
          to label %normal-dest708 unwind label %cleanup-lpad

normal-dest708:                                   ; preds = %normal-dest706
  %244 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %245 = invoke {}* @cc_safe_fdefinition({}* %244)
          to label %normal-dest710 unwind label %cleanup-lpad

normal-dest710:                                   ; preds = %normal-dest708
  %246 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 421), align 8
  %ptrtoint711 = ptrtoint {}* %245 to i64
  %entry-point-addr-uint712 = add i64 %ptrtoint711, 7
  %entry-point-addr713 = inttoptr i64 %entry-point-addr-uint712 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point714 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr713, align 8
  %247 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point714({}* %245, i64 1, {}* %246, {}* null, {}* null, {}* null)
          to label %normal-dest717 unwind label %cleanup-lpad

normal-dest717:                                   ; preds = %normal-dest710
  %.elt1152 = extractvalue { {}*, i64 } %247, 0
  %.elt1154 = extractvalue { {}*, i64 } %247, 1
  %cond983 = icmp eq i64 %.elt1154, 0
  %248 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157913.0 = select i1 %cond983, {}* %248, {}* %.elt1152
  %249 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %250 = invoke {}* @cc_safe_fdefinition({}* %249)
          to label %normal-dest724 unwind label %cleanup-lpad

normal-dest724:                                   ; preds = %normal-dest717
  %251 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %252 = invoke {}* @cc_safe_fdefinition({}* %251)
          to label %normal-dest726 unwind label %cleanup-lpad

normal-dest726:                                   ; preds = %normal-dest724
  %253 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %254 = invoke {}* @cc_safe_fdefinition({}* %253)
          to label %normal-dest728 unwind label %cleanup-lpad

normal-dest728:                                   ; preds = %normal-dest726
  %ptrtoint729 = ptrtoint {}* %254 to i64
  %entry-point-addr-uint730 = add i64 %ptrtoint729, 7
  %entry-point-addr731 = inttoptr i64 %entry-point-addr-uint730 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point732 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr731, align 8
  %255 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point732({}* %254, i64 1, {}* %G157863.0, {}* null, {}* null, {}* null)
          to label %normal-dest735 unwind label %cleanup-lpad

normal-dest735:                                   ; preds = %normal-dest728
  %.elt1156 = extractvalue { {}*, i64 } %255, 0
  %.elt1158 = extractvalue { {}*, i64 } %255, 1
  %cond984 = icmp eq i64 %.elt1158, 0
  %256 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157953.0 = select i1 %cond984, {}* %256, {}* %.elt1156
  %257 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %258 = invoke {}* @cc_safe_fdefinition({}* %257)
          to label %normal-dest742 unwind label %cleanup-lpad

normal-dest742:                                   ; preds = %normal-dest735
  %ptrtoint743 = ptrtoint {}* %258 to i64
  %entry-point-addr-uint744 = add i64 %ptrtoint743, 7
  %entry-point-addr745 = inttoptr i64 %entry-point-addr-uint744 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point746 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr745, align 8
  %259 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point746({}* %258, i64 1, {}* %G157864.0, {}* null, {}* null, {}* null)
          to label %normal-dest749 unwind label %cleanup-lpad

normal-dest749:                                   ; preds = %normal-dest742
  %.elt1160 = extractvalue { {}*, i64 } %259, 0
  %.elt1162 = extractvalue { {}*, i64 } %259, 1
  %cond985 = icmp eq i64 %.elt1162, 0
  %260 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157954.0 = select i1 %cond985, {}* %260, {}* %.elt1160
  %ptrtoint755 = ptrtoint {}* %252 to i64
  %entry-point-addr-uint756 = add i64 %ptrtoint755, 7
  %entry-point-addr757 = inttoptr i64 %entry-point-addr-uint756 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point758 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr757, align 8
  %261 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point758({}* %252, i64 3, {}* %G157953.0, {}* %G157954.0, {}* %260, {}* null)
          to label %normal-dest761 unwind label %cleanup-lpad

normal-dest761:                                   ; preds = %normal-dest749
  %.elt1164 = extractvalue { {}*, i64 } %261, 0
  %.elt1166 = extractvalue { {}*, i64 } %261, 1
  %cond986 = icmp eq i64 %.elt1166, 0
  %262 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157951.0 = select i1 %cond986, {}* %262, {}* %.elt1164
  %ptrtoint767 = ptrtoint {}* %250 to i64
  %entry-point-addr-uint768 = add i64 %ptrtoint767, 7
  %entry-point-addr769 = inttoptr i64 %entry-point-addr-uint768 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point770 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr769, align 8
  %263 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point770({}* %250, i64 1, {}* %G157951.0, {}* null, {}* null, {}* null)
          to label %normal-dest773 unwind label %cleanup-lpad

normal-dest773:                                   ; preds = %normal-dest761
  %.elt1168 = extractvalue { {}*, i64 } %263, 0
  %.elt1170 = extractvalue { {}*, i64 } %263, 1
  %cond987 = icmp eq i64 %.elt1170, 0
  %264 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157914.0 = select i1 %cond987, {}* %264, {}* %.elt1168
  %265 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %266 = invoke {}* @cc_safe_fdefinition({}* %265)
          to label %normal-dest780 unwind label %cleanup-lpad

normal-dest780:                                   ; preds = %normal-dest773
  %ptrtoint781 = ptrtoint {}* %266 to i64
  %entry-point-addr-uint782 = add i64 %ptrtoint781, 7
  %entry-point-addr783 = inttoptr i64 %entry-point-addr-uint782 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point784 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr783, align 8
  %267 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point784({}* %266, i64 1, {}* %G157863.0, {}* null, {}* null, {}* null)
          to label %normal-dest787 unwind label %cleanup-lpad

normal-dest787:                                   ; preds = %normal-dest780
  %.elt1172 = extractvalue { {}*, i64 } %267, 0
  %.elt1174 = extractvalue { {}*, i64 } %267, 1
  %cond988 = icmp eq i64 %.elt1174, 0
  %268 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157915.0 = select i1 %cond988, {}* %268, {}* %.elt1172
  %269 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %270 = invoke {}* @cc_safe_fdefinition({}* %269)
          to label %normal-dest794 unwind label %cleanup-lpad

normal-dest794:                                   ; preds = %normal-dest787
  %ptrtoint795 = ptrtoint {}* %270 to i64
  %entry-point-addr-uint796 = add i64 %ptrtoint795, 7
  %entry-point-addr797 = inttoptr i64 %entry-point-addr-uint796 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point798 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr797, align 8
  %271 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point798({}* %270, i64 1, {}* %G157864.0, {}* null, {}* null, {}* null)
          to label %normal-dest801 unwind label %cleanup-lpad

normal-dest801:                                   ; preds = %normal-dest794
  %.elt1176 = extractvalue { {}*, i64 } %271, 0
  %.elt1178 = extractvalue { {}*, i64 } %271, 1
  %cond989 = icmp eq i64 %.elt1178, 0
  %272 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157916.0 = select i1 %cond989, {}* %272, {}* %.elt1176
  %273 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %274 = invoke {}* @cc_safe_fdefinition({}* %273)
          to label %normal-dest808 unwind label %cleanup-lpad

normal-dest808:                                   ; preds = %normal-dest801
  %275 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %276 = invoke {}* @cc_safe_fdefinition({}* %275)
          to label %normal-dest810 unwind label %cleanup-lpad

normal-dest810:                                   ; preds = %normal-dest808
  %277 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %278 = invoke {}* @cc_safe_fdefinition({}* %277)
          to label %normal-dest812 unwind label %cleanup-lpad

normal-dest812:                                   ; preds = %normal-dest810
  %279 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 433), align 8
  %ptrtoint813 = ptrtoint {}* %278 to i64
  %entry-point-addr-uint814 = add i64 %ptrtoint813, 7
  %entry-point-addr815 = inttoptr i64 %entry-point-addr-uint814 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point816 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr815, align 8
  %280 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point816({}* %278, i64 1, {}* %279, {}* null, {}* null, {}* null)
          to label %normal-dest819 unwind label %cleanup-lpad

normal-dest819:                                   ; preds = %normal-dest812
  %.elt1180 = extractvalue { {}*, i64 } %280, 0
  %.elt1182 = extractvalue { {}*, i64 } %280, 1
  %cond990 = icmp eq i64 %.elt1182, 0
  %281 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157922.0 = select i1 %cond990, {}* %281, {}* %.elt1180
  %282 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %283 = invoke {}* @cc_safe_fdefinition({}* %282)
          to label %normal-dest826 unwind label %cleanup-lpad

normal-dest826:                                   ; preds = %normal-dest819
  %284 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 100), align 16
  %285 = invoke {}* @cc_safe_fdefinition({}* %284)
          to label %normal-dest828 unwind label %cleanup-lpad

normal-dest828:                                   ; preds = %normal-dest826
  %286 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %287 = invoke {}* @cc_safe_fdefinition({}* %286)
          to label %normal-dest830 unwind label %cleanup-lpad

normal-dest830:                                   ; preds = %normal-dest828
  %288 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 435), align 8
  %ptrtoint831 = ptrtoint {}* %287 to i64
  %entry-point-addr-uint832 = add i64 %ptrtoint831, 7
  %entry-point-addr833 = inttoptr i64 %entry-point-addr-uint832 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point834 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr833, align 8
  %289 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point834({}* %287, i64 1, {}* %288, {}* null, {}* null, {}* null)
          to label %normal-dest837 unwind label %cleanup-lpad

normal-dest837:                                   ; preds = %normal-dest830
  %.elt1184 = extractvalue { {}*, i64 } %289, 0
  %.elt1186 = extractvalue { {}*, i64 } %289, 1
  %cond991 = icmp eq i64 %.elt1186, 0
  %290 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157928.0 = select i1 %cond991, {}* %290, {}* %.elt1184
  %291 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %292 = invoke {}* @cc_safe_fdefinition({}* %291)
          to label %normal-dest844 unwind label %cleanup-lpad

normal-dest844:                                   ; preds = %normal-dest837
  %ptrtoint845 = ptrtoint {}* %292 to i64
  %entry-point-addr-uint846 = add i64 %ptrtoint845, 7
  %entry-point-addr847 = inttoptr i64 %entry-point-addr-uint846 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point848 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr847, align 8
  %293 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point848({}* %292, i64 1, {}* %G157863.0, {}* null, {}* null, {}* null)
          to label %normal-dest851 unwind label %cleanup-lpad

normal-dest851:                                   ; preds = %normal-dest844
  %.elt1188 = extractvalue { {}*, i64 } %293, 0
  %.elt1190 = extractvalue { {}*, i64 } %293, 1
  %cond992 = icmp eq i64 %.elt1190, 0
  %294 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157929.0 = select i1 %cond992, {}* %294, {}* %.elt1188
  %ptrtoint857 = ptrtoint {}* %285 to i64
  %entry-point-addr-uint858 = add i64 %ptrtoint857, 7
  %entry-point-addr859 = inttoptr i64 %entry-point-addr-uint858 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point860 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr859, align 8
  %295 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point860({}* %285, i64 3, {}* %G157928.0, {}* %G157929.0, {}* %294, {}* null)
          to label %normal-dest863 unwind label %cleanup-lpad

normal-dest863:                                   ; preds = %normal-dest851
  %.elt1192 = extractvalue { {}*, i64 } %295, 0
  %.elt1194 = extractvalue { {}*, i64 } %295, 1
  %cond993 = icmp eq i64 %.elt1194, 0
  %296 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157926.0 = select i1 %cond993, {}* %296, {}* %.elt1192
  %ptrtoint869 = ptrtoint {}* %283 to i64
  %entry-point-addr-uint870 = add i64 %ptrtoint869, 7
  %entry-point-addr871 = inttoptr i64 %entry-point-addr-uint870 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point872 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr871, align 8
  %297 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point872({}* %283, i64 1, {}* %G157926.0, {}* null, {}* null, {}* null)
          to label %normal-dest875 unwind label %cleanup-lpad

normal-dest875:                                   ; preds = %normal-dest863
  %.elt1196 = extractvalue { {}*, i64 } %297, 0
  %.elt1198 = extractvalue { {}*, i64 } %297, 1
  %cond994 = icmp eq i64 %.elt1198, 0
  %298 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157923.0 = select i1 %cond994, {}* %298, {}* %.elt1196
  %ptrtoint881 = ptrtoint {}* %276 to i64
  %entry-point-addr-uint882 = add i64 %ptrtoint881, 7
  %entry-point-addr883 = inttoptr i64 %entry-point-addr-uint882 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point884 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr883, align 8
  %299 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point884({}* %276, i64 3, {}* %G157922.0, {}* %G157923.0, {}* %298, {}* null)
          to label %normal-dest887 unwind label %cleanup-lpad

normal-dest887:                                   ; preds = %normal-dest875
  %.elt1200 = extractvalue { {}*, i64 } %299, 0
  %.elt1202 = extractvalue { {}*, i64 } %299, 1
  %cond995 = icmp eq i64 %.elt1202, 0
  %300 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157920.0 = select i1 %cond995, {}* %300, {}* %.elt1200
  %ptrtoint893 = ptrtoint {}* %274 to i64
  %entry-point-addr-uint894 = add i64 %ptrtoint893, 7
  %entry-point-addr895 = inttoptr i64 %entry-point-addr-uint894 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point896 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr895, align 8
  %301 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point896({}* %274, i64 1, {}* %G157920.0, {}* null, {}* null, {}* null)
          to label %normal-dest899 unwind label %cleanup-lpad

normal-dest899:                                   ; preds = %normal-dest887
  %.elt1204 = extractvalue { {}*, i64 } %301, 0
  %.elt1206 = extractvalue { {}*, i64 } %301, 1
  %cond996 = icmp eq i64 %.elt1206, 0
  %302 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157917.0 = select i1 %cond996, {}* %302, {}* %.elt1204
  %ptrtoint905 = ptrtoint {}* %243 to i64
  %entry-point-addr-uint906 = add i64 %ptrtoint905, 7
  %entry-point-addr907 = inttoptr i64 %entry-point-addr-uint906 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point908 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr907, align 8
  %303 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point908({}* %243, i64 6, {}* %G157913.0, {}* %G157914.0, {}* %G157915.0, {}* %G157916.0, {}* %G157917.0, {}* %302)
          to label %normal-dest911 unwind label %cleanup-lpad

normal-dest911:                                   ; preds = %normal-dest899
  %.elt1208 = extractvalue { {}*, i64 } %303, 0
  %.elt1210 = extractvalue { {}*, i64 } %303, 1
  %cond997 = icmp eq i64 %.elt1210, 0
  %304 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157911.0 = select i1 %cond997, {}* %304, {}* %.elt1208
  %ptrtoint917 = ptrtoint {}* %241 to i64
  %entry-point-addr-uint918 = add i64 %ptrtoint917, 7
  %entry-point-addr919 = inttoptr i64 %entry-point-addr-uint918 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point920 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr919, align 8
  %305 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point920({}* %241, i64 1, {}* %G157911.0, {}* null, {}* null, {}* null)
          to label %normal-dest923 unwind label %cleanup-lpad

normal-dest923:                                   ; preds = %normal-dest911
  %.elt1212 = extractvalue { {}*, i64 } %305, 0
  %.elt1214 = extractvalue { {}*, i64 } %305, 1
  %cond998 = icmp eq i64 %.elt1214, 0
  %306 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157908.0 = select i1 %cond998, {}* %306, {}* %.elt1212
  %ptrtoint929 = ptrtoint {}* %234 to i64
  %entry-point-addr-uint930 = add i64 %ptrtoint929, 7
  %entry-point-addr931 = inttoptr i64 %entry-point-addr-uint930 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point932 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr931, align 8
  %307 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point932({}* %234, i64 3, {}* %G157907.0, {}* %G157908.0, {}* %306, {}* null)
          to label %normal-dest935 unwind label %cleanup-lpad

normal-dest935:                                   ; preds = %normal-dest923
  %.elt1216 = extractvalue { {}*, i64 } %307, 0
  %.elt1218 = extractvalue { {}*, i64 } %307, 1
  %cond999 = icmp eq i64 %.elt1218, 0
  %308 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G157905.0 = select i1 %cond999, {}* %308, {}* %.elt1216
  %ptrtoint941 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint942 = add i64 %ptrtoint941, 7
  %entry-point-addr943 = inttoptr i64 %entry-point-addr-uint942 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point944 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr943, align 8
  %309 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point944({}* %23, i64 1, {}* %G157905.0, {}* null, {}* null, {}* null)
          to label %tag5 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !62 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G158191.0 = phi {}* [ %18, %header-check-br ], [ %G158191.1, %normal-dest63 ], [ %G158191.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 464), align 16
  %ptrtoint13 = ptrtoint {}* %G158191.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G158191.0, i64 2, {}* %"closure->ZWE=ALLES_UEBERSETZEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests54, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 464), align 16
  %"closure->ZWE=ALLES_UEBERSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ZWE=ALLES_UEBERSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=ALLES_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 18558, i64 407, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 30), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 43), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ZWE=ALLES_UEBERSETZEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 50), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 466), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ZWE=ALLES_UEBERSETZEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 55), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1628 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 464), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag4

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 36), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %maybe-more-tests54
  %ptrtoint57 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158191.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %39 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %40 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %41 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 463), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158191.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ZWE=ALLES_UEBERSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !63 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ZWE=ALLES_UEBERSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest26, %normal-dest25, %normal-dest19, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 445), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 350), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %16 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 447), align 8
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 1, {}* %16, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %17, 0
  %.elt35 = extractvalue { {}*, i64 } %17, 1
  %cond = icmp eq i64 %.elt35, 0
  %18 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %G158473.0 = select i1 %cond, {}* %18, {}* %.elt
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 1, {}* %G158473.0, {}* null, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  %20 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 449), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest19
  %22 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 421), align 8
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %22, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 18558, i64 407, i64 0, i64 0)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest25
  %ptrtoint27 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint28 = add i64 %ptrtoint27, 7
  %entry-point-addr29 = inttoptr i64 %entry-point-addr-uint28 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point30 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr29, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point30({}* %21, i64 1, {}* %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest33 unwind label %cleanup-lpad

normal-dest33:                                    ; preds = %normal-dest26
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %23
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !64 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag13.backedge:                                   ; preds = %tag11, %normal-dest369
  %11 = phi {}* [ %.pre758, %tag11 ], [ %194, %normal-dest369 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %22, %tag11 ], [ %"%DOLIST-VAR.1", %normal-dest369 ]
  %12 = icmp eq {}* %"%DOLIST-VAR.0.be", %11
  br i1 %12, label %tag98, label %tag71

tag86.backedge:                                   ; preds = %normal-dest165, %tag31
  %13 = phi {}* [ %.pre760, %tag31 ], [ %143, %normal-dest165 ]
  %"%DOLIST-VAR125.0.be" = phi {}* [ %45, %tag31 ], [ %"%DOLIST-VAR125.1", %normal-dest165 ]
  %14 = icmp eq {}* %"%DOLIST-VAR125.0.be", %13
  br i1 %14, label %tag18, label %tag83

tag9:                                             ; preds = %normal-dest179
  %15 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %16 = icmp eq {}* %"%DOLIST-VAR125.0752", %15
  %.val740 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158226.0 = select i1 %16, {}* %.val740, {}* %15
  %17 = icmp eq {}* %G158226.0, %15
  br i1 %17, label %tag16, label %tag18

tag10:                                            ; preds = %tag10.preheader, %tag89.backedge
  %.val735 = phi {}* [ %65, %tag89.backedge ], [ %214, %tag10.preheader ]
  %"%DOLIST-VAR129.0753" = phi {}* [ %"%DOLIST-VAR129.0.be", %tag89.backedge ], [ %"%DOLIST-VAR129.2", %tag10.preheader ]
  %18 = ptrtoint {}* %"%DOLIST-VAR129.0753" to i64
  %tag-only658 = and i64 %18, 7
  %consp-test = icmp eq i64 %tag-only658, 3
  %.val734 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158297.0 = select i1 %consp-test, {}* %.val734, {}* %.val735
  %19 = icmp eq {}* %G158297.0, %.val735
  br i1 %19, label %tag38, label %tag22

tag11:                                            ; preds = %normal-dest516
  %20 = add i64 %72, 5
  %21 = inttoptr i64 %20 to {}**
  %22 = load {}*, {}** %21, align 8
  %.pre758 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag13.backedge

tag15:                                            ; preds = %normal-dest122
  %23 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 453), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag16:                                            ; preds = %tag9
  %25 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest158 unwind label %cleanup-lpad.loopexit

tag17:                                            ; preds = %normal-dest292, %tag92
  %SK.0 = phi {}* [ %103, %tag92 ], [ %SK.1, %normal-dest292 ]
  %27 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 438), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest172 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %tag86.backedge, %tag9, %normal-dest390
  %29 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 461), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest188 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag22:                                            ; preds = %tag10
  %31 = add i64 %18, -3
  %32 = inttoptr i64 %31 to {}**
  %33 = load {}*, {}** %32, align 8
  br label %tag111

tag23:                                            ; preds = %tag79
  %34 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest198 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag24:                                            ; preds = %tag71
  %36 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest213 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag25:                                            ; preds = %normal-dest548
  %38 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %39 = icmp eq {}* %"%DOLIST-VAR129.0753", %38
  %.val736 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158271.0 = select i1 %39, {}* %.val736, {}* %38
  %40 = icmp eq {}* %G158271.0, %38
  br i1 %40, label %tag64, label %tag80

tag39.backedge:                                   ; preds = %tag77, %normal-dest489
  %41 = phi {}* [ %.pre, %tag77 ], [ %221, %normal-dest489 ]
  %"%DOLIST-VAR234.0.be" = phi {}* [ %80, %tag77 ], [ %"%DOLIST-VAR234.2", %normal-dest489 ]
  %42 = icmp eq {}* %"%DOLIST-VAR234.0.be", %41
  br i1 %42, label %tag110, label %tag102

tag31:                                            ; preds = %normal-dest179
  %43 = add i64 %85, 5
  %44 = inttoptr i64 %43 to {}**
  %45 = load {}*, {}** %44, align 8
  %.pre760 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag86.backedge

tag32:                                            ; preds = %tag102
  %46 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest236 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag33:                                            ; preds = %normal-dest439
  %48 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %49 = icmp eq {}* %"%DOLIST-VAR282.0755", %48
  %.val728 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158361.0 = select i1 %49, {}* %.val728, {}* %48
  %50 = icmp eq {}* %G158361.0, %48
  br i1 %50, label %tag113, label %tag84

tag38:                                            ; preds = %tag10
  %51 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest269 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag50.backedge:                                   ; preds = %tag88, %normal-dest564
  %53 = phi {}* [ %.pre757, %tag88 ], [ %235, %normal-dest564 ]
  %"%DOLIST-VAR282.0.be" = phi {}* [ %95, %tag88 ], [ %"%DOLIST-VAR282.2", %normal-dest564 ]
  %54 = icmp eq {}* %"%DOLIST-VAR282.0.be", %53
  br i1 %54, label %tag84, label %tag79

tag55:                                            ; preds = %tag83
  %55 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest284 unwind label %cleanup-lpad.loopexit

tag58:                                            ; preds = %normal-dest532
  %57 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 453), align 8
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest305 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag59:                                            ; preds = %tag79
  %59 = add i64 %81, -3
  %60 = inttoptr i64 %59 to {}**
  %61 = load {}*, {}** %60, align 8
  br label %tag87

tag61:                                            ; preds = %normal-dest548
  %62 = add i64 %18, 5
  %63 = inttoptr i64 %62 to {}**
  %64 = load {}*, {}** %63, align 8
  %.pre759 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag89.backedge

tag89.backedge:                                   ; preds = %tag61, %normal-dest331
  %65 = phi {}* [ %.pre759, %tag61 ], [ %187, %normal-dest331 ]
  %"%DOLIST-VAR129.0.be" = phi {}* [ %64, %tag61 ], [ %"%DOLIST-VAR129.1", %normal-dest331 ]
  %66 = icmp eq {}* %"%DOLIST-VAR129.0.be", %65
  br i1 %66, label %tag80, label %tag10

tag64:                                            ; preds = %tag25
  %67 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest324 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag66:                                            ; preds = %tag102
  %69 = add i64 %108, -3
  %70 = inttoptr i64 %69 to {}**
  %71 = load {}*, {}** %70, align 8
  br label %tag73

tag71:                                            ; preds = %tag71.preheader, %tag13.backedge
  %.val731 = phi {}* [ %11, %tag13.backedge ], [ %201, %tag71.preheader ]
  %"%DOLIST-VAR.0754" = phi {}* [ %"%DOLIST-VAR.0.be", %tag13.backedge ], [ %"%DOLIST-VAR.2", %tag71.preheader ]
  %72 = ptrtoint {}* %"%DOLIST-VAR.0754" to i64
  %tag-only342640 = and i64 %72, 7
  %consp-test343 = icmp eq i64 %tag-only342640, 3
  %.val730 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158342.0 = select i1 %consp-test343, {}* %.val730, {}* %.val731
  %73 = icmp eq {}* %G158342.0, %.val731
  br i1 %73, label %tag24, label %tag107

tag73:                                            ; preds = %normal-dest243, %tag66
  %VORSCHLAG.0 = phi {}* [ %71, %tag66 ], [ %VORSCHLAG.1, %normal-dest243 ]
  %74 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 373), align 8
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest345 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag75:                                            ; preds = %tag105
  %76 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest362 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag77:                                            ; preds = %normal-dest352
  %78 = add i64 %108, 5
  %79 = inttoptr i64 %78 to {}**
  %80 = load {}*, {}** %79, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag39.backedge

tag79:                                            ; preds = %tag79.preheader, %tag50.backedge
  %.val727 = phi {}* [ %53, %tag50.backedge ], [ %205, %tag79.preheader ]
  %"%DOLIST-VAR282.0755" = phi {}* [ %"%DOLIST-VAR282.0.be", %tag50.backedge ], [ %"%DOLIST-VAR282.1", %tag79.preheader ]
  %81 = ptrtoint {}* %"%DOLIST-VAR282.0755" to i64
  %tag-only380622 = and i64 %81, 7
  %consp-test381 = icmp eq i64 %tag-only380622, 3
  %.val726 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158387.0 = select i1 %consp-test381, {}* %.val726, {}* %.val727
  %82 = icmp eq {}* %G158387.0, %.val727
  br i1 %82, label %tag23, label %tag59

tag80:                                            ; preds = %tag25, %tag89.backedge, %normal-dest475
  %83 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 433), align 8
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest383 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag83:                                            ; preds = %tag83.preheader, %tag86.backedge
  %.val739 = phi {}* [ %13, %tag86.backedge ], [ %197, %tag83.preheader ]
  %"%DOLIST-VAR125.0752" = phi {}* [ %"%DOLIST-VAR125.0.be", %tag86.backedge ], [ %"%DOLIST-VAR125.2", %tag83.preheader ]
  %85 = ptrtoint {}* %"%DOLIST-VAR125.0752" to i64
  %tag-only401676 = and i64 %85, 7
  %consp-test402 = icmp eq i64 %tag-only401676, 3
  %.val738 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158252.0 = select i1 %consp-test402, {}* %.val738, {}* %.val739
  %86 = icmp eq {}* %G158252.0, %.val739
  br i1 %86, label %tag55, label %tag92

tag84:                                            ; preds = %tag33, %tag50.backedge, %normal-dest425
  %87 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 433), align 8
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest404 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag85:                                            ; preds = %normal-dest305, %normal-dest532
  %89 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 433), align 8
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest418 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag87:                                            ; preds = %normal-dest206, %tag59
  %CONSTRAINT.0 = phi {}* [ %61, %tag59 ], [ %CONSTRAINT.1, %normal-dest206 ]
  %91 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 379), align 8
  %92 = invoke {}* @cc_safe_fdefinition({}* %91)
          to label %normal-dest432 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag88:                                            ; preds = %normal-dest439
  %93 = add i64 %81, 5
  %94 = inttoptr i64 %93 to {}**
  %95 = load {}*, {}** %94, align 8
  %.pre757 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  br label %tag50.backedge

tag90:                                            ; preds = %normal-dest352
  %96 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %97 = icmp eq {}* %"%DOLIST-VAR234.0756", %96
  %.val722 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158422.0 = select i1 %97, {}* %.val722, {}* %96
  %98 = icmp eq {}* %G158422.0, %96
  br i1 %98, label %tag99, label %tag110

tag91:                                            ; preds = %normal-dest145, %normal-dest122
  %99 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 433), align 8
  %100 = invoke {}* @cc_safe_fdefinition({}* %99)
          to label %normal-dest454 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag92:                                            ; preds = %tag83
  %101 = add i64 %85, -3
  %102 = inttoptr i64 %101 to {}**
  %103 = load {}*, {}** %102, align 8
  br label %tag17

tag98:                                            ; preds = %tag105, %tag13.backedge, %normal-dest411
  %104 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 433), align 8
  %105 = invoke {}* @cc_safe_fdefinition({}* %104)
          to label %normal-dest468 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag99:                                            ; preds = %tag90
  %106 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest482 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag102:                                           ; preds = %tag102.preheader, %tag39.backedge
  %.val721 = phi {}* [ %41, %tag39.backedge ], [ %210, %tag102.preheader ]
  %"%DOLIST-VAR234.0756" = phi {}* [ %"%DOLIST-VAR234.0.be", %tag39.backedge ], [ %"%DOLIST-VAR234.1", %tag102.preheader ]
  %108 = ptrtoint {}* %"%DOLIST-VAR234.0756" to i64
  %tag-only500596 = and i64 %108, 7
  %consp-test501 = icmp eq i64 %tag-only500596, 3
  %.val720 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158448.0 = select i1 %consp-test501, {}* %.val720, {}* %.val721
  %109 = icmp eq {}* %G158448.0, %.val721
  br i1 %109, label %tag32, label %tag66

tag105:                                           ; preds = %normal-dest516
  %110 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %111 = icmp eq {}* %"%DOLIST-VAR.0754", %110
  %.val732 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158316.0 = select i1 %111, {}* %.val732, {}* %110
  %112 = icmp eq {}* %G158316.0, %110
  br i1 %112, label %tag75, label %tag98

tag107:                                           ; preds = %tag71
  %113 = add i64 %72, -3
  %114 = inttoptr i64 %113 to {}**
  %115 = load {}*, {}** %114, align 8
  br label %tag108

tag108:                                           ; preds = %normal-dest221, %tag107
  %UEBERWACHUNG.0 = phi {}* [ %115, %tag107 ], [ %UEBERWACHUNG.1, %normal-dest221 ]
  %116 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 394), align 16
  %117 = invoke {}* @cc_safe_fdefinition({}* %116)
          to label %normal-dest509 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag110:                                           ; preds = %tag39.backedge, %tag90, %normal-dest461
  %118 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 451), align 8
  %119 = invoke {}* @cc_safe_fdefinition({}* %118)
          to label %normal-dest525 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag111:                                           ; preds = %normal-dest276, %tag22
  %SK196.0 = phi {}* [ %33, %tag22 ], [ %SK196.1, %normal-dest276 ]
  %120 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 406), align 16
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest541 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag113:                                           ; preds = %tag33
  %122 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 18), align 16
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest557 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag16, %normal-dest158, %tag17, %normal-dest172, %tag55, %normal-dest284
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest541, %tag111, %normal-dest324, %tag64, %normal-dest269, %tag38
  %lpad.loopexit742 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %tag24, %normal-dest213, %tag75, %normal-dest362, %tag108, %normal-dest509
  %lpad.loopexit745 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %normal-dest557, %tag113, %normal-dest432, %tag87, %normal-dest198, %tag23
  %lpad.loopexit747 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %tag32, %normal-dest236, %tag73, %normal-dest345, %tag99, %normal-dest482
  %lpad.loopexit750 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %normal-dest, %normal-dest119, %tag15, %normal-dest145, %tag18, %normal-dest188, %tag58, %normal-dest305, %tag80, %normal-dest383, %tag84, %normal-dest404, %tag85, %normal-dest418, %tag91, %normal-dest454, %tag98, %normal-dest468, %tag110, %normal-dest525, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit742, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit745, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit747, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit750, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %124 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 451), align 8
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest119 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest119:                                   ; preds = %normal-dest
  %126 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 176), align 16
  %127 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %ptrtoint = ptrtoint {}* %125 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %128 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %125, i64 2, {}* %126, {}* %127, {}* null, {}* null)
          to label %normal-dest122 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest122:                                   ; preds = %normal-dest119
  %.elt = extractvalue { {}*, i64 } %128, 0
  %.elt587 = extractvalue { {}*, i64 } %128, 1
  %cond = icmp eq i64 %.elt587, 0
  %129 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %object.0 = select i1 %cond, {}* %129, {}* %.elt
  %130 = icmp eq {}* %object.0, %129
  %.val = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158462.0 = select i1 %130, {}* %.val, {}* %129
  %131 = icmp eq {}* %G158462.0, %129
  br i1 %131, label %tag91, label %tag15

normal-dest145:                                   ; preds = %tag15
  %132 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 176), align 16
  %133 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %134 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %135 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %136 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint146 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint147 = add i64 %ptrtoint146, 7
  %entry-point-addr148 = inttoptr i64 %entry-point-addr-uint147 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point149 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr148, align 8
  %137 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point149({}* %24, i64 5, {}* %132, {}* %133, {}* %134, {}* %135, {}* %136)
          to label %tag91 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest158:                                   ; preds = %tag16
  %138 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %139 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %140 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %141 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint159 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint160 = add i64 %ptrtoint159, 7
  %entry-point-addr161 = inttoptr i64 %entry-point-addr-uint160 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point162 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr161, align 8
  %142 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point162({}* %26, i64 5, {}* %138, {}* %139, {}* %"%DOLIST-VAR125.0752", {}* %140, {}* %141)
          to label %normal-dest165 unwind label %cleanup-lpad.loopexit

normal-dest165:                                   ; preds = %normal-dest158
  %.elt683 = extractvalue { {}*, i64 } %142, 0
  %.elt685 = extractvalue { {}*, i64 } %142, 1
  %cond584 = icmp eq i64 %.elt685, 0
  %143 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR125.1" = select i1 %cond584, {}* %143, {}* %.elt683
  br label %tag86.backedge

normal-dest172:                                   ; preds = %tag17
  %ptrtoint173 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint174 = add i64 %ptrtoint173, 7
  %entry-point-addr175 = inttoptr i64 %entry-point-addr-uint174 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point176 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr175, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point176({}* %28, i64 1, {}* %SK.0, {}* null, {}* null, {}* null)
          to label %normal-dest179 unwind label %cleanup-lpad.loopexit

normal-dest179:                                   ; preds = %normal-dest172
  br i1 %consp-test402, label %tag31, label %tag9

normal-dest188:                                   ; preds = %tag18
  %ptrtoint189 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint190 = add i64 %ptrtoint189, 7
  %entry-point-addr191 = inttoptr i64 %entry-point-addr-uint190 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point192 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr191, align 8
  %145 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point192({}* %30, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest195 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest195:                                   ; preds = %normal-dest188
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %145

normal-dest198:                                   ; preds = %tag23
  %146 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %147 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %148 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %149 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint200 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint201 = add i64 %ptrtoint200, 7
  %entry-point-addr202 = inttoptr i64 %entry-point-addr-uint201 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point203 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr202, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point203({}* %35, i64 5, {}* %146, {}* %147, {}* %"%DOLIST-VAR282.0755", {}* %148, {}* %149)
          to label %normal-dest206 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest206:                                   ; preds = %normal-dest198
  %.elt633 = extractvalue { {}*, i64 } %150, 0
  %.elt635 = extractvalue { {}*, i64 } %150, 1
  %cond576 = icmp eq i64 %.elt635, 0
  %151 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %CONSTRAINT.1 = select i1 %cond576, {}* %151, {}* %.elt633
  br label %tag87

normal-dest213:                                   ; preds = %tag24
  %152 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %153 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %154 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %155 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint215 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint216 = add i64 %ptrtoint215, 7
  %entry-point-addr217 = inttoptr i64 %entry-point-addr-uint216 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point218 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr217, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point218({}* %37, i64 5, {}* %152, {}* %153, {}* %"%DOLIST-VAR.0754", {}* %154, {}* %155)
          to label %normal-dest221 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest221:                                   ; preds = %normal-dest213
  %.elt651 = extractvalue { {}*, i64 } %156, 0
  %.elt653 = extractvalue { {}*, i64 } %156, 1
  %cond579 = icmp eq i64 %.elt653, 0
  %157 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %UEBERWACHUNG.1 = select i1 %cond579, {}* %157, {}* %.elt651
  br label %tag108

normal-dest236:                                   ; preds = %tag32
  %158 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %159 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %160 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %161 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint237 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint238 = add i64 %ptrtoint237, 7
  %entry-point-addr239 = inttoptr i64 %entry-point-addr-uint238 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point240 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr239, align 8
  %162 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point240({}* %47, i64 5, {}* %158, {}* %159, {}* %"%DOLIST-VAR234.0756", {}* %160, {}* %161)
          to label %normal-dest243 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest243:                                   ; preds = %normal-dest236
  %.elt607 = extractvalue { {}*, i64 } %162, 0
  %.elt609 = extractvalue { {}*, i64 } %162, 1
  %cond572 = icmp eq i64 %.elt609, 0
  %163 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %VORSCHLAG.1 = select i1 %cond572, {}* %163, {}* %.elt607
  br label %tag73

normal-dest269:                                   ; preds = %tag38
  %164 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %165 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %166 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %167 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint270 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint271 = add i64 %ptrtoint270, 7
  %entry-point-addr272 = inttoptr i64 %entry-point-addr-uint271 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point273 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr272, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point273({}* %52, i64 5, {}* %164, {}* %165, {}* %"%DOLIST-VAR129.0753", {}* %166, {}* %167)
          to label %normal-dest276 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest276:                                   ; preds = %normal-dest269
  %.elt669 = extractvalue { {}*, i64 } %168, 0
  %.elt671 = extractvalue { {}*, i64 } %168, 1
  %cond582 = icmp eq i64 %.elt671, 0
  %169 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %SK196.1 = select i1 %cond582, {}* %169, {}* %.elt669
  br label %tag111

normal-dest284:                                   ; preds = %tag55
  %170 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %171 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %172 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %173 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint286 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint287 = add i64 %ptrtoint286, 7
  %entry-point-addr288 = inttoptr i64 %entry-point-addr-uint287 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point289 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr288, align 8
  %174 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point289({}* %56, i64 5, {}* %170, {}* %171, {}* %"%DOLIST-VAR125.0752", {}* %172, {}* %173)
          to label %normal-dest292 unwind label %cleanup-lpad.loopexit

normal-dest292:                                   ; preds = %normal-dest284
  %.elt687 = extractvalue { {}*, i64 } %174, 0
  %.elt689 = extractvalue { {}*, i64 } %174, 1
  %cond585 = icmp eq i64 %.elt689, 0
  %175 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %SK.1 = select i1 %cond585, {}* %175, {}* %.elt687
  br label %tag17

normal-dest305:                                   ; preds = %tag58
  %176 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 236), align 16
  %177 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %178 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %179 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 104), align 16
  %180 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 106), align 16
  %ptrtoint306 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint307 = add i64 %ptrtoint306, 7
  %entry-point-addr308 = inttoptr i64 %entry-point-addr-uint307 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point309 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr308, align 8
  %181 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point309({}* %58, i64 5, {}* %176, {}* %177, {}* %178, {}* %179, {}* %180)
          to label %tag85 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest324:                                   ; preds = %tag64
  %182 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %183 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %184 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %185 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint325 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint326 = add i64 %ptrtoint325, 7
  %entry-point-addr327 = inttoptr i64 %entry-point-addr-uint326 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point328 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr327, align 8
  %186 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point328({}* %68, i64 5, {}* %182, {}* %183, {}* %"%DOLIST-VAR129.0753", {}* %184, {}* %185)
          to label %normal-dest331 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest331:                                   ; preds = %normal-dest324
  %.elt665 = extractvalue { {}*, i64 } %186, 0
  %.elt667 = extractvalue { {}*, i64 } %186, 1
  %cond581 = icmp eq i64 %.elt667, 0
  %187 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR129.1" = select i1 %cond581, {}* %187, {}* %.elt665
  br label %tag89.backedge

normal-dest345:                                   ; preds = %tag73
  %ptrtoint346 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint347 = add i64 %ptrtoint346, 7
  %entry-point-addr348 = inttoptr i64 %entry-point-addr-uint347 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point349 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr348, align 8
  %188 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point349({}* %75, i64 1, {}* %VORSCHLAG.0, {}* null, {}* null, {}* null)
          to label %normal-dest352 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest352:                                   ; preds = %normal-dest345
  br i1 %consp-test501, label %tag77, label %tag90

normal-dest362:                                   ; preds = %tag75
  %189 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %190 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %191 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %192 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint363 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint364 = add i64 %ptrtoint363, 7
  %entry-point-addr365 = inttoptr i64 %entry-point-addr-uint364 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point366 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr365, align 8
  %193 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point366({}* %77, i64 5, {}* %189, {}* %190, {}* %"%DOLIST-VAR.0754", {}* %191, {}* %192)
          to label %normal-dest369 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest369:                                   ; preds = %normal-dest362
  %.elt647 = extractvalue { {}*, i64 } %193, 0
  %.elt649 = extractvalue { {}*, i64 } %193, 1
  %cond578 = icmp eq i64 %.elt649, 0
  %194 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR.1" = select i1 %cond578, {}* %194, {}* %.elt647
  br label %tag13.backedge

normal-dest383:                                   ; preds = %tag80
  %195 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 459), align 8
  %ptrtoint384 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint385 = add i64 %ptrtoint384, 7
  %entry-point-addr386 = inttoptr i64 %entry-point-addr-uint385 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point387 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr386, align 8
  %196 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point387({}* %84, i64 1, {}* %195, {}* null, {}* null, {}* null)
          to label %normal-dest390 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest390:                                   ; preds = %normal-dest383
  %.elt673 = extractvalue { {}*, i64 } %196, 0
  %.elt675 = extractvalue { {}*, i64 } %196, 1
  %cond583 = icmp eq i64 %.elt675, 0
  %197 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR125.2" = select i1 %cond583, {}* %197, {}* %.elt673
  %198 = icmp eq {}* %"%DOLIST-VAR125.2", %197
  br i1 %198, label %tag18, label %tag83.preheader

tag83.preheader:                                  ; preds = %normal-dest390
  br label %tag83

normal-dest404:                                   ; preds = %tag84
  %199 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 455), align 8
  %ptrtoint405 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint406 = add i64 %ptrtoint405, 7
  %entry-point-addr407 = inttoptr i64 %entry-point-addr-uint406 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point408 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr407, align 8
  %200 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point408({}* %88, i64 1, {}* %199, {}* null, {}* null, {}* null)
          to label %normal-dest411 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest411:                                   ; preds = %normal-dest404
  %.elt637 = extractvalue { {}*, i64 } %200, 0
  %.elt639 = extractvalue { {}*, i64 } %200, 1
  %cond577 = icmp eq i64 %.elt639, 0
  %201 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR.2" = select i1 %cond577, {}* %201, {}* %.elt637
  %202 = icmp eq {}* %"%DOLIST-VAR.2", %201
  br i1 %202, label %tag98, label %tag71.preheader

tag71.preheader:                                  ; preds = %normal-dest411
  br label %tag71

normal-dest418:                                   ; preds = %tag85
  %203 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 236), align 16
  %ptrtoint419 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint420 = add i64 %ptrtoint419, 7
  %entry-point-addr421 = inttoptr i64 %entry-point-addr-uint420 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point422 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr421, align 8
  %204 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point422({}* %90, i64 1, {}* %203, {}* null, {}* null, {}* null)
          to label %normal-dest425 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest425:                                   ; preds = %normal-dest418
  %.elt619 = extractvalue { {}*, i64 } %204, 0
  %.elt621 = extractvalue { {}*, i64 } %204, 1
  %cond574 = icmp eq i64 %.elt621, 0
  %205 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR282.1" = select i1 %cond574, {}* %205, {}* %.elt619
  %206 = icmp eq {}* %"%DOLIST-VAR282.1", %205
  br i1 %206, label %tag84, label %tag79.preheader

tag79.preheader:                                  ; preds = %normal-dest425
  br label %tag79

normal-dest432:                                   ; preds = %tag87
  %ptrtoint433 = ptrtoint {}* %92 to i64
  %entry-point-addr-uint434 = add i64 %ptrtoint433, 7
  %entry-point-addr435 = inttoptr i64 %entry-point-addr-uint434 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point436 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr435, align 8
  %207 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point436({}* %92, i64 1, {}* %CONSTRAINT.0, {}* null, {}* null, {}* null)
          to label %normal-dest439 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest439:                                   ; preds = %normal-dest432
  br i1 %consp-test381, label %tag88, label %tag33

normal-dest454:                                   ; preds = %tag91
  %208 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 176), align 16
  %ptrtoint455 = ptrtoint {}* %100 to i64
  %entry-point-addr-uint456 = add i64 %ptrtoint455, 7
  %entry-point-addr457 = inttoptr i64 %entry-point-addr-uint456 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point458 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr457, align 8
  %209 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point458({}* %100, i64 1, {}* %208, {}* null, {}* null, {}* null)
          to label %normal-dest461 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest461:                                   ; preds = %normal-dest454
  %.elt593 = extractvalue { {}*, i64 } %209, 0
  %.elt595 = extractvalue { {}*, i64 } %209, 1
  %cond570 = icmp eq i64 %.elt595, 0
  %210 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR234.1" = select i1 %cond570, {}* %210, {}* %.elt593
  %211 = icmp eq {}* %"%DOLIST-VAR234.1", %210
  br i1 %211, label %tag110, label %tag102.preheader

tag102.preheader:                                 ; preds = %normal-dest461
  br label %tag102

normal-dest468:                                   ; preds = %tag98
  %212 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 457), align 8
  %ptrtoint469 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint470 = add i64 %ptrtoint469, 7
  %entry-point-addr471 = inttoptr i64 %entry-point-addr-uint470 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point472 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr471, align 8
  %213 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point472({}* %105, i64 1, {}* %212, {}* null, {}* null, {}* null)
          to label %normal-dest475 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest475:                                   ; preds = %normal-dest468
  %.elt655 = extractvalue { {}*, i64 } %213, 0
  %.elt657 = extractvalue { {}*, i64 } %213, 1
  %cond580 = icmp eq i64 %.elt657, 0
  %214 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR129.2" = select i1 %cond580, {}* %214, {}* %.elt655
  %215 = icmp eq {}* %"%DOLIST-VAR129.2", %214
  br i1 %215, label %tag80, label %tag10.preheader

tag10.preheader:                                  ; preds = %normal-dest475
  br label %tag10

normal-dest482:                                   ; preds = %tag99
  %216 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %217 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %218 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %219 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint483 = ptrtoint {}* %107 to i64
  %entry-point-addr-uint484 = add i64 %ptrtoint483, 7
  %entry-point-addr485 = inttoptr i64 %entry-point-addr-uint484 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point486 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr485, align 8
  %220 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point486({}* %107, i64 5, {}* %216, {}* %217, {}* %"%DOLIST-VAR234.0756", {}* %218, {}* %219)
          to label %normal-dest489 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest489:                                   ; preds = %normal-dest482
  %.elt603 = extractvalue { {}*, i64 } %220, 0
  %.elt605 = extractvalue { {}*, i64 } %220, 1
  %cond571 = icmp eq i64 %.elt605, 0
  %221 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR234.2" = select i1 %cond571, {}* %221, {}* %.elt603
  br label %tag39.backedge

normal-dest509:                                   ; preds = %tag108
  %ptrtoint510 = ptrtoint {}* %117 to i64
  %entry-point-addr-uint511 = add i64 %ptrtoint510, 7
  %entry-point-addr512 = inttoptr i64 %entry-point-addr-uint511 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point513 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr512, align 8
  %222 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point513({}* %117, i64 1, {}* %UEBERWACHUNG.0, {}* null, {}* null, {}* null)
          to label %normal-dest516 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest516:                                   ; preds = %normal-dest509
  br i1 %consp-test343, label %tag11, label %tag105

normal-dest525:                                   ; preds = %tag110
  %223 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 236), align 16
  %224 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 190), align 16
  %ptrtoint526 = ptrtoint {}* %119 to i64
  %entry-point-addr-uint527 = add i64 %ptrtoint526, 7
  %entry-point-addr528 = inttoptr i64 %entry-point-addr-uint527 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point529 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr528, align 8
  %225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point529({}* %119, i64 2, {}* %223, {}* %224, {}* null, {}* null)
          to label %normal-dest532 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest532:                                   ; preds = %normal-dest525
  %.elt611 = extractvalue { {}*, i64 } %225, 0
  %.elt613 = extractvalue { {}*, i64 } %225, 1
  %cond573 = icmp eq i64 %.elt613, 0
  %226 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %object533.0 = select i1 %cond573, {}* %226, {}* %.elt611
  %227 = icmp eq {}* %object533.0, %226
  %.val724 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  %G158401.0 = select i1 %227, {}* %.val724, {}* %226
  %228 = icmp eq {}* %G158401.0, %226
  br i1 %228, label %tag85, label %tag58

normal-dest541:                                   ; preds = %tag111
  %ptrtoint542 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint543 = add i64 %ptrtoint542, 7
  %entry-point-addr544 = inttoptr i64 %entry-point-addr-uint543 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point545 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr544, align 8
  %229 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point545({}* %121, i64 1, {}* %SK196.0, {}* null, {}* null, {}* null)
          to label %normal-dest548 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest548:                                   ; preds = %normal-dest541
  br i1 %consp-test, label %tag61, label %tag25

normal-dest557:                                   ; preds = %tag113
  %230 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 20), align 16
  %231 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 22), align 16
  %232 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 26), align 16
  %233 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 28), align 16
  %ptrtoint558 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint559 = add i64 %ptrtoint558, 7
  %entry-point-addr560 = inttoptr i64 %entry-point-addr-uint559 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point561 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr560, align 8
  %234 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point561({}* %123, i64 5, {}* %230, {}* %231, {}* %"%DOLIST-VAR282.0755", {}* %232, {}* %233)
          to label %normal-dest564 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest564:                                   ; preds = %normal-dest557
  %.elt629 = extractvalue { {}*, i64 } %234, 0
  %.elt631 = extractvalue { {}*, i64 } %234, 1
  %cond575 = icmp eq i64 %.elt631, 0
  %235 = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 0), align 16
  %"%DOLIST-VAR282.2" = select i1 %cond575, {}* %235, {}* %.elt629
  br label %tag50.backedge
}

; Function Attrs: uwtable
define internal void @RUN-ALL.1() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !65 {
entry:
  tail call void @ltvc_make_nil({ i8*, i8*, i64 }* nonnull @constants-table, i64 0)
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-MACROEXPAND, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-COMMON-LISP, i64 0, i64 0))
  %"CONTAB[4]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 4), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 3, {}* %"CONTAB[4]*")
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 2), align 16
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 1, {}* %"CONTAB[2]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-CWR=UEBERSETZEN_DEBUG", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-COMMON-LISP-USER, i64 0, i64 0))
  %"CONTAB[8]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 8), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 7, {}* %"CONTAB[8]*")
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 6), align 16
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 5, {}* %"CONTAB[6]*", {}* %"CONTAB[7]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-PPRINT, i64 0, i64 0))
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 10), align 16
  %"CONTAB[3]*1" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 9, {}* %"CONTAB[10]*", {}* %"CONTAB[3]*1")
  tail call void @ltvc_make_t({ i8*, i8*, i64 }* nonnull @constants-table, i64 11)
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-EVAL, i64 0, i64 0))
  %"CONTAB[13]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 13), align 8
  %"CONTAB[3]*2" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 12, {}* %"CONTAB[13]*", {}* %"CONTAB[3]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-COMPILE, i64 0, i64 0))
  %"CONTAB[15]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 15), align 8
  %"CONTAB[3]*3" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 14, {}* %"CONTAB[15]*", {}* %"CONTAB[3]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CONS, i64 0, i64 0))
  %"CONTAB[17]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 17), align 8
  %"CONTAB[3]*4" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 16, {}* %"CONTAB[17]*", {}* %"CONTAB[3]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ERROR, i64 0, i64 0))
  %"CONTAB[19]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 19), align 8
  %"CONTAB[3]*5" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 18, {}* %"CONTAB[19]*", {}* %"CONTAB[3]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-TYPE-ERROR, i64 0, i64 0))
  %"CONTAB[21]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 21), align 8
  %"CONTAB[3]*6" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 20, {}* %"CONTAB[21]*", {}* %"CONTAB[3]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-DATUM, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KEYWORD, i64 0, i64 0))
  %"CONTAB[25]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 25), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 24, {}* %"CONTAB[25]*")
  %"CONTAB[23]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 23), align 8
  %"CONTAB[24]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 22, {}* %"CONTAB[23]*", {}* %"CONTAB[24]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-EXPECTED-TYPE, i64 0, i64 0))
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 27), align 8
  %"CONTAB[24]*7" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 26, {}* %"CONTAB[27]*", {}* %"CONTAB[24]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-LIST, i64 0, i64 0))
  %"CONTAB[29]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 29), align 8
  %"CONTAB[3]*8" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 28, {}* %"CONTAB[29]*", {}* %"CONTAB[3]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-FDEFINITION, i64 0, i64 0))
  %"CONTAB[31]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 31), align 8
  %"CONTAB[3]*9" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 30, {}* %"CONTAB[31]*", {}* %"CONTAB[3]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-FUNCTION, i64 0, i64 0))
  %"CONTAB[33]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 33), align 8
  %"CONTAB[3]*10" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 32, {}* %"CONTAB[33]*", {}* %"CONTAB[3]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SYMBOL, i64 0, i64 0))
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 35), align 8
  %"CONTAB[3]*11" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 34, {}* %"CONTAB[35]*", {}* %"CONTAB[3]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SYMBOL-FUNCTION, i64 0, i64 0))
  %"CONTAB[37]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 37), align 8
  %"CONTAB[3]*12" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 36, {}* %"CONTAB[37]*", {}* %"CONTAB[3]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-OR, i64 0, i64 0))
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 40), align 16
  %"CONTAB[3]*13" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 39, {}* %"CONTAB[40]*", {}* %"CONTAB[3]*13")
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 38, i64 3, {}* %"CONTAB[39]*", {}* %"CONTAB[34]*", {}* %"CONTAB[32]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 42, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-ZWE=UEBERSETZEN_LISTE", i64 0, i64 0))
  %"CONTAB[42]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 42), align 16
  %"CONTAB[7]*14" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 41, {}* %"CONTAB[42]*", {}* %"CONTAB[7]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 44, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SETF-LAMBDA-LIST, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CORE, i64 0, i64 0))
  %"CONTAB[46]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 46), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 45, {}* %"CONTAB[46]*")
  %"CONTAB[44]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 44), align 16
  %"CONTAB[45]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 43, {}* %"CONTAB[44]*", {}* %"CONTAB[45]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-LISTE, i64 0, i64 0))
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 49), align 8
  %"CONTAB[7]*15" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 48, {}* %"CONTAB[49]*", {}* %"CONTAB[7]*15")
  %"CONTAB[48]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 48), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 47, i64 1, {}* %"CONTAB[48]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 51, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SET-SOURCE-INFO, i64 0, i64 0))
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 51), align 8
  %"CONTAB[45]*16" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 50, {}* %"CONTAB[51]*", {}* %"CONTAB[45]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 54, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-CURRENT-SOURCE-FILE, i64 0, i64 0))
  %"CONTAB[54]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 54), align 16
  %"CONTAB[45]*17" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 53, {}* %"CONTAB[54]*", {}* %"CONTAB[45]*17")
  %"CONTAB[53]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 52, i64 4, {}* %"CONTAB[53]*", {}* inttoptr (i64 3336 to {}*), {}* inttoptr (i64 100 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 56, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-*CURRENT-FORM-LINENO*", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-COMPILER, i64 0, i64 0))
  %"CONTAB[58]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 58), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 57, {}* %"CONTAB[58]*")
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 56), align 16
  %"CONTAB[57]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 57), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 55, {}* %"CONTAB[56]*", {}* %"CONTAB[57]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 60, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TOP-LEVEL, i64 0, i64 0))
  %"CONTAB[60]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 60), align 16
  %"CONTAB[45]*18" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 59, {}* %"CONTAB[60]*", {}* %"CONTAB[45]*18")
  %"CONTAB[48]*19" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 48), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 61, i64 1, {}* %"CONTAB[48]*19")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE", i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"str-zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 63, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-VECTOR, i64 0, i64 0))
  %"CONTAB[63]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 63), align 8
  %"CONTAB[3]*20" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 62, {}* %"CONTAB[63]*", {}* %"CONTAB[3]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-NULL, i64 0, i64 0))
  %"CONTAB[65]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 65), align 8
  %"CONTAB[3]*21" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 64, {}* %"CONTAB[65]*", {}* %"CONTAB[3]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 67, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-ETYPECASE-ERROR, i64 0, i64 0))
  %"CONTAB[67]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 67), align 8
  %"CONTAB[45]*22" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 66, {}* %"CONTAB[67]*", {}* %"CONTAB[45]*22")
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[62]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 62), align 16
  %"CONTAB[64]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 68, i64 3, {}* %"CONTAB[16]*", {}* %"CONTAB[62]*", {}* %"CONTAB[64]*")
  %"CONTAB[16]*23" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[64]*24" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 69, i64 2, {}* %"CONTAB[16]*23", {}* %"CONTAB[64]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FIXNUM, i64 0, i64 0))
  %"CONTAB[71]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 71), align 8
  %"CONTAB[3]*25" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 70, {}* %"CONTAB[71]*", {}* %"CONTAB[3]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 73, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SINGLE-FLOAT, i64 0, i64 0))
  %"CONTAB[73]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 73), align 8
  %"CONTAB[3]*26" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 72, {}* %"CONTAB[73]*", {}* %"CONTAB[3]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 75, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-DOUBLE-FLOAT, i64 0, i64 0))
  %"CONTAB[75]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 75), align 8
  %"CONTAB[3]*27" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 74, {}* %"CONTAB[75]*", {}* %"CONTAB[3]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 77, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM, i64 0, i64 0))
  %"CONTAB[77]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 77), align 8
  %"CONTAB[45]*28" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 76, {}* %"CONTAB[77]*", {}* %"CONTAB[45]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 79, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-+", i64 0, i64 0))
  %"CONTAB[79]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 79), align 8
  %"CONTAB[45]*29" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 78, {}* %"CONTAB[79]*", {}* %"CONTAB[45]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 81, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-=", i64 0, i64 0))
  %"CONTAB[81]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 81), align 8
  %"CONTAB[45]*30" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 80, {}* %"CONTAB[81]*", {}* %"CONTAB[45]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ODDP, i64 0, i64 0))
  %"CONTAB[83]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 83), align 8
  %"CONTAB[3]*31" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 82, {}* %"CONTAB[83]*", {}* %"CONTAB[3]*31")
  %"CONTAB[16]*32" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[62]*33" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 62), align 16
  %"CONTAB[64]*34" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 84, i64 3, {}* %"CONTAB[16]*32", {}* %"CONTAB[62]*33", {}* %"CONTAB[64]*34")
  %"CONTAB[16]*35" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[64]*36" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 85, i64 2, {}* %"CONTAB[16]*35", {}* %"CONTAB[64]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-GETF, i64 0, i64 0))
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 87), align 8
  %"CONTAB[3]*37" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 86, {}* %"CONTAB[87]*", {}* %"CONTAB[3]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 89, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-FALLS, i64 0, i64 0))
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 89), align 8
  %"CONTAB[7]*38" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 88, {}* %"CONTAB[89]*", {}* %"CONTAB[7]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 91, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-AKTIVIERE, i64 0, i64 0))
  %"CONTAB[91]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 91), align 8
  %"CONTAB[7]*39" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 90, {}* %"CONTAB[91]*", {}* %"CONTAB[7]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 93, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-VON, i64 0, i64 0))
  %"CONTAB[93]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 93), align 8
  %"CONTAB[7]*40" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 92, {}* %"CONTAB[93]*", {}* %"CONTAB[7]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-MIT, i64 0, i64 0))
  %"CONTAB[95]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 95), align 8
  %"CONTAB[7]*41" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 94, {}* %"CONTAB[95]*", {}* %"CONTAB[7]*41")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 97, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-YAS=SCHREIBE_WERT", i64 0, i64 0))
  %"CONTAB[97]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 97), align 8
  %"CONTAB[7]*42" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 96, {}* %"CONTAB[97]*", {}* %"CONTAB[7]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CODE, i64 0, i64 0))
  %"CONTAB[99]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 99), align 8
  %"CONTAB[7]*43" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 98, {}* %"CONTAB[99]*", {}* %"CONTAB[7]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 101, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-BACKQUOTE-APPEND, i64 0, i64 0))
  %"CONTAB[101]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 101), align 8
  %"CONTAB[45]*44" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 100, {}* %"CONTAB[101]*", {}* %"CONTAB[45]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 103, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-$AGENDASTEUERUNG", i64 0, i64 0))
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 103), align 8
  %"CONTAB[7]*45" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 102, {}* %"CONTAB[103]*", {}* %"CONTAB[7]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-INFORMANT, i64 0, i64 0))
  %"CONTAB[105]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 105), align 8
  %"CONTAB[24]*46" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 104, {}* %"CONTAB[105]*", {}* %"CONTAB[24]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 107, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-EINGABE, i64 0, i64 0))
  %"CONTAB[107]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 107), align 8
  %"CONTAB[7]*47" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 106, {}* %"CONTAB[107]*", {}* %"CONTAB[7]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 109, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-ZWE-UEBERSETZUNGS_FEHLER, i64 0, i64 0))
  %"CONTAB[109]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 109), align 8
  %"CONTAB[7]*48" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 108, {}* %"CONTAB[109]*", {}* %"CONTAB[7]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 111, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-UEBERWACHUNG, i64 0, i64 0))
  %"CONTAB[111]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 111), align 8
  %"CONTAB[7]*49" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 110, {}* %"CONTAB[111]*", {}* %"CONTAB[7]*49")
  %"CONTAB[39]*50" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*51" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*52" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 112, i64 3, {}* %"CONTAB[39]*50", {}* %"CONTAB[34]*51", {}* %"CONTAB[32]*52")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 114, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-ZWE=UEBERWACHUNG_UEBERSETZEN", i64 0, i64 0))
  %"CONTAB[114]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 114), align 16
  %"CONTAB[7]*53" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 113, {}* %"CONTAB[114]*", {}* %"CONTAB[7]*53")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 117, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-DEFINITION, i64 0, i64 0))
  %"CONTAB[117]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 117), align 8
  %"CONTAB[7]*54" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 116, {}* %"CONTAB[117]*", {}* %"CONTAB[7]*54")
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 110), align 16
  %"CONTAB[116]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 115, i64 2, {}* %"CONTAB[110]*", {}* %"CONTAB[116]*")
  %"CONTAB[53]*55" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 118, i64 4, {}* %"CONTAB[53]*55", {}* inttoptr (i64 4748 to {}*), {}* inttoptr (i64 148 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-ARRAY-RANK, i64 0, i64 0))
  %"CONTAB[120]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 120), align 16
  %"CONTAB[3]*56" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 119, {}* %"CONTAB[120]*", {}* %"CONTAB[3]*56")
  ret void
}

; Function Attrs: nounwind
declare void @ltvc_make_nil({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_base_string({ i8*, i8*, i64 }*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_package({ i8*, i8*, i64 }*, i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_symbol({ i8*, i8*, i64 }*, i64, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_t({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_list({ i8*, i8*, i64 }*, i64, i64, ...) local_unnamed_addr #1

declare void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.2() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !66 {
entry:
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 110), align 16
  %"CONTAB[116]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 121, i64 2, {}* %"CONTAB[110]*", {}* %"CONTAB[116]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 123, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str-ZWE-NIL-PROPERTIES-LOESCHEN, i64 0, i64 0))
  %"CONTAB[123]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 123), align 8
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 122, {}* %"CONTAB[123]*", {}* %"CONTAB[7]*")
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 124, i64 3, {}* %"CONTAB[39]*", {}* %"CONTAB[34]*", {}* %"CONTAB[32]*")
  %"CONTAB[48]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 48), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 125, i64 1, {}* %"CONTAB[48]*")
  %"CONTAB[53]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 126, i64 4, {}* %"CONTAB[53]*", {}* inttoptr (i64 9820 to {}*), {}* inttoptr (i64 276 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[48]*1" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 48), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 127, i64 1, {}* %"CONTAB[48]*1")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 129, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-B=LESE-VON-STRING", i64 0, i64 0))
  %"CONTAB[129]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 129), align 8
  %"CONTAB[7]*2" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 128, {}* %"CONTAB[129]*", {}* %"CONTAB[7]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-APPLY, i64 0, i64 0))
  %"CONTAB[131]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 131), align 8
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 130, {}* %"CONTAB[131]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 133, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str-ZWE=VORSCHLAG_UEBERSETZEN_NEU", i64 0, i64 0))
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 133), align 8
  %"CONTAB[7]*3" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 132, {}* %"CONTAB[133]*", {}* %"CONTAB[7]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 135, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-VORBEDINGUNG, i64 0, i64 0))
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 135), align 8
  %"CONTAB[24]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 134, {}* %"CONTAB[135]*", {}* %"CONTAB[24]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 137, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-OBJEKTKLASSE, i64 0, i64 0))
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 137), align 8
  %"CONTAB[24]*4" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 136, {}* %"CONTAB[137]*", {}* %"CONTAB[24]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 139, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-FILTERBEDINGUNG, i64 0, i64 0))
  %"CONTAB[139]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 139), align 8
  %"CONTAB[24]*5" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 138, {}* %"CONTAB[139]*", {}* %"CONTAB[24]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 141, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SORTIERFUNKTION, i64 0, i64 0))
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 141), align 8
  %"CONTAB[24]*6" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 140, {}* %"CONTAB[141]*", {}* %"CONTAB[24]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 143, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FEHLER, i64 0, i64 0))
  %"CONTAB[143]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 143), align 8
  %"CONTAB[24]*7" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 142, {}* %"CONTAB[143]*", {}* %"CONTAB[24]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 145, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-EQ-INCOMPARABLE, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 147, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-CLASP-CLEAVIR, i64 0, i64 0))
  %"CONTAB[147]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 147), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 146, {}* %"CONTAB[147]*")
  %"CONTAB[145]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 145), align 8
  %"CONTAB[146]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 146), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 144, {}* %"CONTAB[145]*", {}* %"CONTAB[146]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 149, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-EQL-UNDERLYING, i64 0, i64 0))
  %"CONTAB[149]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 149), align 8
  %"CONTAB[45]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 45), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 148, {}* %"CONTAB[149]*", {}* %"CONTAB[45]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 151, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"str-B=NACHRICHT", i64 0, i64 0))
  %"CONTAB[151]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 151), align 8
  %"CONTAB[7]*8" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 150, {}* %"CONTAB[151]*", {}* %"CONTAB[7]*8")
  %"CONTAB[39]*9" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*10" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*11" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 152, i64 3, {}* %"CONTAB[39]*9", {}* %"CONTAB[34]*10", {}* %"CONTAB[32]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 154, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"str-ZWE=VORSCHLAG_UEBERSETZEN_TEXT", i64 0, i64 0))
  %"CONTAB[154]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 154), align 16
  %"CONTAB[7]*12" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 153, {}* %"CONTAB[154]*", {}* %"CONTAB[7]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 157, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-VORSCHLAGSOBJEKT, i64 0, i64 0))
  %"CONTAB[157]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 157), align 8
  %"CONTAB[7]*13" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 156, {}* %"CONTAB[157]*", {}* %"CONTAB[7]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 159, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-VORBEDINGUNGSTEXT, i64 0, i64 0))
  %"CONTAB[159]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 159), align 8
  %"CONTAB[7]*14" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 158, {}* %"CONTAB[159]*", {}* %"CONTAB[7]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 161, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-OBJEKTKLASSE, i64 0, i64 0))
  %"CONTAB[161]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 161), align 8
  %"CONTAB[7]*15" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 160, {}* %"CONTAB[161]*", {}* %"CONTAB[7]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 163, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-FILTERBEDINGUNGSTEXT, i64 0, i64 0))
  %"CONTAB[163]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 163), align 8
  %"CONTAB[7]*16" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 162, {}* %"CONTAB[163]*", {}* %"CONTAB[7]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 165, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-SORTIERFUNKTIONSTEXT, i64 0, i64 0))
  %"CONTAB[165]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 165), align 8
  %"CONTAB[7]*17" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 164, {}* %"CONTAB[165]*", {}* %"CONTAB[7]*17")
  %"CONTAB[156]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 156), align 16
  %"CONTAB[158]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 158), align 16
  %"CONTAB[160]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 160), align 16
  %"CONTAB[162]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 162), align 16
  %"CONTAB[164]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 164), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 155, i64 5, {}* %"CONTAB[156]*", {}* %"CONTAB[158]*", {}* %"CONTAB[160]*", {}* %"CONTAB[162]*", {}* %"CONTAB[164]*")
  %"CONTAB[53]*18" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 166, i64 4, {}* %"CONTAB[53]*18", {}* inttoptr (i64 11168 to {}*), {}* inttoptr (i64 320 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[156]*19" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 156), align 16
  %"CONTAB[158]*20" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 158), align 16
  %"CONTAB[160]*21" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 160), align 16
  %"CONTAB[162]*22" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 162), align 16
  %"CONTAB[164]*23" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 164), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 167, i64 5, {}* %"CONTAB[156]*19", {}* %"CONTAB[158]*20", {}* %"CONTAB[160]*21", {}* %"CONTAB[162]*22", {}* %"CONTAB[164]*23")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[62]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 62), align 16
  %"CONTAB[64]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 168, i64 3, {}* %"CONTAB[16]*", {}* %"CONTAB[62]*", {}* %"CONTAB[64]*")
  %"CONTAB[16]*24" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[64]*25" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 169, i64 2, {}* %"CONTAB[16]*24", {}* %"CONTAB[64]*25")
  %"CONTAB[16]*26" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[62]*27" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 62), align 16
  %"CONTAB[64]*28" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 170, i64 3, {}* %"CONTAB[16]*26", {}* %"CONTAB[62]*27", {}* %"CONTAB[64]*28")
  %"CONTAB[16]*29" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[64]*30" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 171, i64 2, {}* %"CONTAB[16]*29", {}* %"CONTAB[64]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 173, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-AUS, i64 0, i64 0))
  %"CONTAB[173]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 173), align 8
  %"CONTAB[7]*31" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 172, {}* %"CONTAB[173]*", {}* %"CONTAB[7]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 175, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-SORTIERT, i64 0, i64 0))
  %"CONTAB[175]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 175), align 8
  %"CONTAB[7]*32" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 174, {}* %"CONTAB[175]*", {}* %"CONTAB[7]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 177, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-VORSCHLAG, i64 0, i64 0))
  %"CONTAB[177]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 177), align 8
  %"CONTAB[7]*33" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 176, {}* %"CONTAB[177]*", {}* %"CONTAB[7]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 179, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-LISPFUNKTIONSNAME, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.3() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !67 {
entry:
  %"CONTAB[179]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 179), align 8
  %"CONTAB[24]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 178, {}* %"CONTAB[179]*", {}* %"CONTAB[24]*")
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 180, i64 3, {}* %"CONTAB[39]*", {}* %"CONTAB[34]*", {}* %"CONTAB[32]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 182, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-ZWE=VORSCHLAG_UEBERSETZEN", i64 0, i64 0))
  %"CONTAB[182]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 182), align 16
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 181, {}* %"CONTAB[182]*", {}* %"CONTAB[7]*")
  %"CONTAB[156]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 156), align 16
  %"CONTAB[116]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 183, i64 2, {}* %"CONTAB[156]*", {}* %"CONTAB[116]*")
  %"CONTAB[53]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 184, i64 4, {}* %"CONTAB[53]*", {}* inttoptr (i64 14540 to {}*), {}* inttoptr (i64 384 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[156]*1" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 156), align 16
  %"CONTAB[116]*2" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 185, i64 2, {}* %"CONTAB[156]*1", {}* %"CONTAB[116]*2")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 187, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str-$VORSCHLAG", i64 0, i64 0))
  %"CONTAB[187]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 187), align 8
  %"CONTAB[7]*3" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 186, {}* %"CONTAB[187]*", {}* %"CONTAB[7]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 189, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-SORTIERSCHLUESSEL, i64 0, i64 0))
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 189), align 8
  %"CONTAB[24]*4" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 188, {}* %"CONTAB[189]*", {}* %"CONTAB[24]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 191, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-MACROCODE, i64 0, i64 0))
  %"CONTAB[191]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 191), align 8
  %"CONTAB[7]*5" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 190, {}* %"CONTAB[191]*", {}* %"CONTAB[7]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 192, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  %"CONTAB[39]*6" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*7" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*8" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 193, i64 3, {}* %"CONTAB[39]*6", {}* %"CONTAB[34]*7", {}* %"CONTAB[32]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 196, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"str-&KEY", i64 0, i64 0))
  %"CONTAB[196]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 196), align 16
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 195, {}* %"CONTAB[196]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 199, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-VORBEDINGUNG, i64 0, i64 0))
  %"CONTAB[199]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 199), align 8
  %"CONTAB[7]*9" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 198, {}* %"CONTAB[199]*", {}* %"CONTAB[7]*9")
  %"CONTAB[198]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 198), align 16
  %"CONTAB[11]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 197, i64 2, {}* %"CONTAB[198]*", {}* %"CONTAB[11]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 202, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-FILTERBEDINGUNG, i64 0, i64 0))
  %"CONTAB[202]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 202), align 16
  %"CONTAB[7]*10" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 201, {}* %"CONTAB[202]*", {}* %"CONTAB[7]*10")
  %"CONTAB[201]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 201), align 8
  %"CONTAB[11]*11" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 200, i64 2, {}* %"CONTAB[201]*", {}* %"CONTAB[11]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 204, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SORTIERFUNKTION, i64 0, i64 0))
  %"CONTAB[204]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 204), align 16
  %"CONTAB[7]*12" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 203, {}* %"CONTAB[204]*", {}* %"CONTAB[7]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 206, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-LISPFUNKTIONSNAME, i64 0, i64 0))
  %"CONTAB[206]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 206), align 16
  %"CONTAB[7]*13" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 205, {}* %"CONTAB[206]*", {}* %"CONTAB[7]*13")
  %"CONTAB[156]*14" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 156), align 16
  %"CONTAB[195]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 195), align 8
  %"CONTAB[197]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 197), align 8
  %"CONTAB[160]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 160), align 16
  %"CONTAB[200]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 200), align 16
  %"CONTAB[203]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 203), align 8
  %"CONTAB[205]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 205), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 194, i64 7, {}* %"CONTAB[156]*14", {}* %"CONTAB[195]*", {}* %"CONTAB[197]*", {}* %"CONTAB[160]*", {}* %"CONTAB[200]*", {}* %"CONTAB[203]*", {}* %"CONTAB[205]*")
  %"CONTAB[53]*15" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 207, i64 4, {}* %"CONTAB[53]*15", {}* inttoptr (i64 18980 to {}*), {}* inttoptr (i64 472 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[198]*16" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 198), align 16
  %"CONTAB[11]*17" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 209, i64 2, {}* %"CONTAB[198]*16", {}* %"CONTAB[11]*17")
  %"CONTAB[201]*18" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 201), align 8
  %"CONTAB[11]*19" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 210, i64 2, {}* %"CONTAB[201]*18", {}* %"CONTAB[11]*19")
  %"CONTAB[156]*20" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 156), align 16
  %"CONTAB[195]*21" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 195), align 8
  %"CONTAB[209]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 209), align 8
  %"CONTAB[160]*22" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 160), align 16
  %"CONTAB[210]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 210), align 16
  %"CONTAB[203]*23" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 203), align 8
  %"CONTAB[205]*24" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 205), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 208, i64 7, {}* %"CONTAB[156]*20", {}* %"CONTAB[195]*21", {}* %"CONTAB[209]*", {}* %"CONTAB[160]*22", {}* %"CONTAB[210]*", {}* %"CONTAB[203]*23", {}* %"CONTAB[205]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 212, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-ALLOW-OTHER-KEYS, i64 0, i64 0))
  %"CONTAB[212]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 212), align 16
  %"CONTAB[24]*25" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 211, {}* %"CONTAB[212]*", {}* %"CONTAB[24]*25")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 214, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"str-ZWE=CONSTRAINT_UEBERSETZEN_NEU", i64 0, i64 0))
  %"CONTAB[214]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 214), align 16
  %"CONTAB[7]*26" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 213, {}* %"CONTAB[214]*", {}* %"CONTAB[7]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-ANZAHL, i64 0, i64 0))
  %"CONTAB[216]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 216), align 16
  %"CONTAB[24]*27" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 215, {}* %"CONTAB[216]*", {}* %"CONTAB[24]*27")
  %"CONTAB[39]*28" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*29" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*30" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 217, i64 3, {}* %"CONTAB[39]*28", {}* %"CONTAB[34]*29", {}* %"CONTAB[32]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 219, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str-ZWE=CONSTRAINT_UEBERSETZEN_TEXT", i64 0, i64 0))
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 219), align 8
  %"CONTAB[7]*31" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 218, {}* %"CONTAB[219]*", {}* %"CONTAB[7]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 222, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-OBJEKT, i64 0, i64 0))
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 222), align 16
  %"CONTAB[7]*32" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 221, {}* %"CONTAB[222]*", {}* %"CONTAB[7]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 224, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-ATTRIBUT, i64 0, i64 0))
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 224), align 16
  %"CONTAB[7]*33" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 223, {}* %"CONTAB[224]*", {}* %"CONTAB[7]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 226, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-BEDINGUNGSTEXT, i64 0, i64 0))
  %"CONTAB[226]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 226), align 16
  %"CONTAB[7]*34" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 225, {}* %"CONTAB[226]*", {}* %"CONTAB[7]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 228, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-&OPTIONAL", i64 0, i64 0))
  %"CONTAB[228]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 228), align 16
  %"CONTAB[3]*35" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 227, {}* %"CONTAB[228]*", {}* %"CONTAB[3]*35")
  %"CONTAB[216]*36" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 216), align 16
  %"CONTAB[7]*37" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 229, {}* %"CONTAB[216]*36", {}* %"CONTAB[7]*37")
  %"CONTAB[221]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 221), align 8
  %"CONTAB[160]*38" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 160), align 16
  %"CONTAB[223]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[225]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 225), align 8
  %"CONTAB[227]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 227), align 8
  %"CONTAB[229]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 229), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 220, i64 6, {}* %"CONTAB[221]*", {}* %"CONTAB[160]*38", {}* %"CONTAB[223]*", {}* %"CONTAB[225]*", {}* %"CONTAB[227]*", {}* %"CONTAB[229]*")
  %"CONTAB[53]*39" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 230, i64 4, {}* %"CONTAB[53]*39", {}* inttoptr (i64 24104 to {}*), {}* inttoptr (i64 564 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[221]*40" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 221), align 8
  %"CONTAB[160]*41" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 160), align 16
  %"CONTAB[223]*42" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[225]*43" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 225), align 8
  %"CONTAB[227]*44" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 227), align 8
  %"CONTAB[229]*45" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 229), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 231, i64 6, {}* %"CONTAB[221]*40", {}* %"CONTAB[160]*41", {}* %"CONTAB[223]*42", {}* %"CONTAB[225]*43", {}* %"CONTAB[227]*44", {}* %"CONTAB[229]*45")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[62]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 62), align 16
  %"CONTAB[64]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 232, i64 3, {}* %"CONTAB[16]*", {}* %"CONTAB[62]*", {}* %"CONTAB[64]*")
  %"CONTAB[16]*46" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[64]*47" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 233, i64 2, {}* %"CONTAB[16]*46", {}* %"CONTAB[64]*47")
  %"CONTAB[16]*48" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[62]*49" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 62), align 16
  %"CONTAB[64]*50" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 234, i64 3, {}* %"CONTAB[16]*48", {}* %"CONTAB[62]*49", {}* %"CONTAB[64]*50")
  %"CONTAB[16]*51" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[64]*52" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 235, i64 2, {}* %"CONTAB[16]*51", {}* %"CONTAB[64]*52")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 237, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-CONSTRAINT, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.4() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !68 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.2)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.3)
  ret void
}

declare void @cc_invoke_sub_run_all_function(void ()*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.5() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !69 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.1)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.4)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.6() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !70 {
entry:
  %"CONTAB[237]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 237), align 8
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 236, {}* %"CONTAB[237]*", {}* %"CONTAB[7]*")
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 238, i64 3, {}* %"CONTAB[39]*", {}* %"CONTAB[34]*", {}* %"CONTAB[32]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 240, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-ZWE=CONSTRAINT_UEBERSETZEN", i64 0, i64 0))
  %"CONTAB[240]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 240), align 16
  %"CONTAB[7]*1" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 239, {}* %"CONTAB[240]*", {}* %"CONTAB[7]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 243, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-CONSTRAINT_OBJEKT, i64 0, i64 0))
  %"CONTAB[243]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 243), align 8
  %"CONTAB[7]*2" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 242, {}* %"CONTAB[243]*", {}* %"CONTAB[7]*2")
  %"CONTAB[242]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 242), align 16
  %"CONTAB[223]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[116]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 241, i64 3, {}* %"CONTAB[242]*", {}* %"CONTAB[223]*", {}* %"CONTAB[116]*")
  %"CONTAB[53]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 244, i64 4, {}* %"CONTAB[53]*", {}* inttoptr (i64 26472 to {}*), {}* inttoptr (i64 616 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[242]*3" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 242), align 16
  %"CONTAB[223]*4" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[116]*5" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 245, i64 3, {}* %"CONTAB[242]*3", {}* %"CONTAB[223]*4", {}* %"CONTAB[116]*5")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 247, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"str-$CONSTRAINT", i64 0, i64 0))
  %"CONTAB[247]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 247), align 8
  %"CONTAB[7]*6" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 246, {}* %"CONTAB[247]*", {}* %"CONTAB[7]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 249, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-YAS=LESE_WERT", i64 0, i64 0))
  %"CONTAB[249]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 249), align 8
  %"CONTAB[7]*7" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 248, {}* %"CONTAB[249]*", {}* %"CONTAB[7]*7")
  %"CONTAB[39]*8" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*9" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*10" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 250, i64 3, {}* %"CONTAB[39]*8", {}* %"CONTAB[34]*9", {}* %"CONTAB[32]*10")
  %"CONTAB[242]*11" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 242), align 16
  %"CONTAB[223]*12" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[195]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 195), align 8
  %"CONTAB[198]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 198), align 16
  %"CONTAB[205]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 205), align 8
  %"CONTAB[229]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 229), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 251, i64 6, {}* %"CONTAB[242]*11", {}* %"CONTAB[223]*12", {}* %"CONTAB[195]*", {}* %"CONTAB[198]*", {}* %"CONTAB[205]*", {}* %"CONTAB[229]*")
  %"CONTAB[53]*13" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 252, i64 4, {}* %"CONTAB[53]*13", {}* inttoptr (i64 28744 to {}*), {}* inttoptr (i64 672 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[242]*14" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 242), align 16
  %"CONTAB[223]*15" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[195]*16" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 195), align 8
  %"CONTAB[198]*17" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 198), align 16
  %"CONTAB[205]*18" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 205), align 8
  %"CONTAB[229]*19" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 229), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 253, i64 6, {}* %"CONTAB[242]*14", {}* %"CONTAB[223]*15", {}* %"CONTAB[195]*16", {}* %"CONTAB[198]*17", {}* %"CONTAB[205]*18", {}* %"CONTAB[229]*19")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 255, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"str-ZWE=HEILMITTEL_UEBERSETZEN_NEU", i64 0, i64 0))
  %"CONTAB[255]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 255), align 8
  %"CONTAB[7]*20" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 254, {}* %"CONTAB[255]*", {}* %"CONTAB[7]*20")
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 224), align 16
  %"CONTAB[24]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 256, {}* %"CONTAB[224]*", {}* %"CONTAB[24]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 258, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-WERTEBEREICHKLASSE, i64 0, i64 0))
  %"CONTAB[258]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 258), align 16
  %"CONTAB[24]*21" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 257, {}* %"CONTAB[258]*", {}* %"CONTAB[24]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 260, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KLASSE2, i64 0, i64 0))
  %"CONTAB[260]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 260), align 16
  %"CONTAB[24]*22" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 259, {}* %"CONTAB[260]*", {}* %"CONTAB[24]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 262, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-BEDINGUNG2, i64 0, i64 0))
  %"CONTAB[262]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 262), align 16
  %"CONTAB[24]*23" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 261, {}* %"CONTAB[262]*", {}* %"CONTAB[24]*23")
  %"CONTAB[39]*24" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*25" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*26" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 263, i64 3, {}* %"CONTAB[39]*24", {}* %"CONTAB[34]*25", {}* %"CONTAB[32]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 265, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str-ZWE=HEILMITTEL_UEBERSETZEN_TEXT", i64 0, i64 0))
  %"CONTAB[265]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 265), align 8
  %"CONTAB[7]*27" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 264, {}* %"CONTAB[265]*", {}* %"CONTAB[7]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 268, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-HEILMITTEL_OBJEKT, i64 0, i64 0))
  %"CONTAB[268]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 268), align 16
  %"CONTAB[7]*28" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 267, {}* %"CONTAB[268]*", {}* %"CONTAB[7]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 270, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-MACRO, i64 0, i64 0))
  %"CONTAB[270]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 270), align 16
  %"CONTAB[7]*29" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 269, {}* %"CONTAB[270]*", {}* %"CONTAB[7]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 272, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KLASSE2, i64 0, i64 0))
  %"CONTAB[272]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 272), align 16
  %"CONTAB[7]*30" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 271, {}* %"CONTAB[272]*", {}* %"CONTAB[7]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 274, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-BEDINGUNG1_TEXT, i64 0, i64 0))
  %"CONTAB[274]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 274), align 16
  %"CONTAB[7]*31" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 273, {}* %"CONTAB[274]*", {}* %"CONTAB[7]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 276, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-BEDINGUNG2_TEXT, i64 0, i64 0))
  %"CONTAB[276]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 276), align 16
  %"CONTAB[7]*32" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 275, {}* %"CONTAB[276]*", {}* %"CONTAB[7]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 278, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-LISPFUNKTIONSTEXT, i64 0, i64 0))
  %"CONTAB[278]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 278), align 16
  %"CONTAB[7]*33" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 277, {}* %"CONTAB[278]*", {}* %"CONTAB[7]*33")
  %"CONTAB[267]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 267), align 8
  %"CONTAB[160]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 160), align 16
  %"CONTAB[223]*34" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[269]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 269), align 8
  %"CONTAB[271]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 271), align 8
  %"CONTAB[158]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 158), align 16
  %"CONTAB[273]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 273), align 8
  %"CONTAB[275]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 275), align 8
  %"CONTAB[277]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 277), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 266, i64 9, {}* %"CONTAB[267]*", {}* %"CONTAB[160]*", {}* %"CONTAB[223]*34", {}* %"CONTAB[269]*", {}* %"CONTAB[271]*", {}* %"CONTAB[158]*", {}* %"CONTAB[273]*", {}* %"CONTAB[275]*", {}* %"CONTAB[277]*")
  %"CONTAB[53]*35" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 279, i64 4, {}* %"CONTAB[53]*35", {}* inttoptr (i64 32352 to {}*), {}* inttoptr (i64 748 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[267]*36" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 267), align 8
  %"CONTAB[160]*37" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 160), align 16
  %"CONTAB[223]*38" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[269]*39" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 269), align 8
  %"CONTAB[271]*40" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 271), align 8
  %"CONTAB[158]*41" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 158), align 16
  %"CONTAB[273]*42" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 273), align 8
  %"CONTAB[275]*43" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 275), align 8
  %"CONTAB[277]*44" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 277), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 280, i64 9, {}* %"CONTAB[267]*36", {}* %"CONTAB[160]*37", {}* %"CONTAB[223]*38", {}* %"CONTAB[269]*39", {}* %"CONTAB[271]*40", {}* %"CONTAB[158]*41", {}* %"CONTAB[273]*42", {}* %"CONTAB[275]*43", {}* %"CONTAB[277]*44")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 282, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str-$LISP", i64 0, i64 0))
  %"CONTAB[282]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 282), align 16
  %"CONTAB[7]*45" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 281, {}* %"CONTAB[282]*", {}* %"CONTAB[7]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 284, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"str-ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P", i64 0, i64 0))
  %"CONTAB[284]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 284), align 16
  %"CONTAB[7]*46" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 283, {}* %"CONTAB[284]*", {}* %"CONTAB[7]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 286, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-$ERSETZEN", i64 0, i64 0))
  %"CONTAB[286]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 286), align 16
  %"CONTAB[7]*47" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 285, {}* %"CONTAB[286]*", {}* %"CONTAB[7]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 288, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-$AUSTAUSCHEN", i64 0, i64 0))
  %"CONTAB[288]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 288), align 16
  %"CONTAB[7]*48" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 287, {}* %"CONTAB[288]*", {}* %"CONTAB[7]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 290, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"str-$WEITERTAUSCHEN", i64 0, i64 0))
  %"CONTAB[290]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 290), align 16
  %"CONTAB[7]*49" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 289, {}* %"CONTAB[290]*", {}* %"CONTAB[7]*49")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 292, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-$DREIER_AUSTAUSCHEN", i64 0, i64 0))
  %"CONTAB[292]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 292), align 16
  %"CONTAB[7]*50" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 291, {}* %"CONTAB[292]*", {}* %"CONTAB[7]*50")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 293, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 295, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-HEILMITTEL, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.7() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !71 {
entry:
  %"CONTAB[295]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 295), align 8
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 294, {}* %"CONTAB[295]*", {}* %"CONTAB[7]*")
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 296, i64 3, {}* %"CONTAB[39]*", {}* %"CONTAB[34]*", {}* %"CONTAB[32]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 299, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-WERTEBEREICHKLASSE, i64 0, i64 0))
  %"CONTAB[299]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 299), align 8
  %"CONTAB[7]*1" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 298, {}* %"CONTAB[299]*", {}* %"CONTAB[7]*1")
  %"CONTAB[198]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 198), align 16
  %"CONTAB[11]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 300, i64 2, {}* %"CONTAB[198]*", {}* %"CONTAB[11]*")
  %"CONTAB[201]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 201), align 8
  %"CONTAB[11]*2" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 301, i64 2, {}* %"CONTAB[201]*", {}* %"CONTAB[11]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 304, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-BEDINGUNG2, i64 0, i64 0))
  %"CONTAB[304]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 304), align 16
  %"CONTAB[7]*3" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 303, {}* %"CONTAB[304]*", {}* %"CONTAB[7]*3")
  %"CONTAB[303]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 303), align 8
  %"CONTAB[11]*4" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 302, i64 2, {}* %"CONTAB[303]*", {}* %"CONTAB[11]*4")
  %"CONTAB[267]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 267), align 8
  %"CONTAB[269]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 269), align 8
  %"CONTAB[195]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 195), align 8
  %"CONTAB[223]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[298]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 298), align 16
  %"CONTAB[271]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 271), align 8
  %"CONTAB[300]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 300), align 16
  %"CONTAB[301]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 301), align 8
  %"CONTAB[302]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 302), align 16
  %"CONTAB[205]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 205), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 297, i64 10, {}* %"CONTAB[267]*", {}* %"CONTAB[269]*", {}* %"CONTAB[195]*", {}* %"CONTAB[223]*", {}* %"CONTAB[298]*", {}* %"CONTAB[271]*", {}* %"CONTAB[300]*", {}* %"CONTAB[301]*", {}* %"CONTAB[302]*", {}* %"CONTAB[205]*")
  %"CONTAB[53]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 305, i64 4, {}* %"CONTAB[53]*", {}* inttoptr (i64 37104 to {}*), {}* inttoptr (i64 836 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[198]*5" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 198), align 16
  %"CONTAB[11]*6" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 307, i64 2, {}* %"CONTAB[198]*5", {}* %"CONTAB[11]*6")
  %"CONTAB[201]*7" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 201), align 8
  %"CONTAB[11]*8" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 308, i64 2, {}* %"CONTAB[201]*7", {}* %"CONTAB[11]*8")
  %"CONTAB[303]*9" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 303), align 8
  %"CONTAB[11]*10" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 11), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 309, i64 2, {}* %"CONTAB[303]*9", {}* %"CONTAB[11]*10")
  %"CONTAB[267]*11" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 267), align 8
  %"CONTAB[269]*12" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 269), align 8
  %"CONTAB[195]*13" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 195), align 8
  %"CONTAB[223]*14" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[298]*15" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 298), align 16
  %"CONTAB[271]*16" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 271), align 8
  %"CONTAB[307]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 307), align 8
  %"CONTAB[308]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 308), align 16
  %"CONTAB[309]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 309), align 8
  %"CONTAB[205]*17" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 205), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 306, i64 10, {}* %"CONTAB[267]*11", {}* %"CONTAB[269]*12", {}* %"CONTAB[195]*13", {}* %"CONTAB[223]*14", {}* %"CONTAB[298]*15", {}* %"CONTAB[271]*16", {}* %"CONTAB[307]*", {}* %"CONTAB[308]*", {}* %"CONTAB[309]*", {}* %"CONTAB[205]*17")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[62]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 62), align 16
  %"CONTAB[64]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 310, i64 3, {}* %"CONTAB[16]*", {}* %"CONTAB[62]*", {}* %"CONTAB[64]*")
  %"CONTAB[16]*18" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[64]*19" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 311, i64 2, {}* %"CONTAB[16]*18", {}* %"CONTAB[64]*19")
  %"CONTAB[16]*20" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[62]*21" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 62), align 16
  %"CONTAB[64]*22" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 312, i64 3, {}* %"CONTAB[16]*20", {}* %"CONTAB[62]*21", {}* %"CONTAB[64]*22")
  %"CONTAB[16]*23" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 16), align 16
  %"CONTAB[64]*24" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 64), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 313, i64 2, {}* %"CONTAB[16]*23", {}* %"CONTAB[64]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 315, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-ERSETZE, i64 0, i64 0))
  %"CONTAB[315]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 315), align 8
  %"CONTAB[7]*25" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 314, {}* %"CONTAB[315]*", {}* %"CONTAB[7]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 317, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-AUSTAUSCHE, i64 0, i64 0))
  %"CONTAB[317]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 317), align 8
  %"CONTAB[7]*26" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 316, {}* %"CONTAB[317]*", {}* %"CONTAB[7]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 319, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-WEITERTAUSCHE, i64 0, i64 0))
  %"CONTAB[319]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 319), align 8
  %"CONTAB[7]*27" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 318, {}* %"CONTAB[319]*", {}* %"CONTAB[7]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 321, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-DREIERTAUSCHE, i64 0, i64 0))
  %"CONTAB[321]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 321), align 8
  %"CONTAB[7]*28" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 320, {}* %"CONTAB[321]*", {}* %"CONTAB[7]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 323, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-DURCH, i64 0, i64 0))
  %"CONTAB[323]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 323), align 8
  %"CONTAB[7]*29" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 322, {}* %"CONTAB[323]*", {}* %"CONTAB[7]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 325, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-NACH, i64 0, i64 0))
  %"CONTAB[325]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 325), align 8
  %"CONTAB[7]*30" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 324, {}* %"CONTAB[325]*", {}* %"CONTAB[7]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 327, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-WOBEI, i64 0, i64 0))
  %"CONTAB[327]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 327), align 8
  %"CONTAB[7]*31" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 326, {}* %"CONTAB[327]*", {}* %"CONTAB[7]*31")
  %"CONTAB[39]*32" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*33" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*34" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 328, i64 3, {}* %"CONTAB[39]*32", {}* %"CONTAB[34]*33", {}* %"CONTAB[32]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 330, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-ZWE=HEILMITTEL_UEBERSETZEN", i64 0, i64 0))
  %"CONTAB[330]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 330), align 16
  %"CONTAB[7]*35" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 329, {}* %"CONTAB[330]*", {}* %"CONTAB[7]*35")
  %"CONTAB[267]*36" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 267), align 8
  %"CONTAB[116]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 331, i64 2, {}* %"CONTAB[267]*36", {}* %"CONTAB[116]*")
  %"CONTAB[53]*37" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 332, i64 4, {}* %"CONTAB[53]*37", {}* inttoptr (i64 45012 to {}*), {}* inttoptr (i64 992 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[267]*38" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 267), align 8
  %"CONTAB[116]*39" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 116), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 333, i64 2, {}* %"CONTAB[267]*38", {}* %"CONTAB[116]*39")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[39]*40" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*41" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*42" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 334, i64 3, {}* %"CONTAB[39]*40", {}* %"CONTAB[34]*41", {}* %"CONTAB[32]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 337, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-ART, i64 0, i64 0))
  %"CONTAB[337]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 337), align 8
  %"CONTAB[7]*43" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 336, {}* %"CONTAB[337]*", {}* %"CONTAB[7]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 339, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-WERTEKLASSE, i64 0, i64 0))
  %"CONTAB[339]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 339), align 8
  %"CONTAB[7]*44" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 338, {}* %"CONTAB[339]*", {}* %"CONTAB[7]*44")
  %"CONTAB[336]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 336), align 16
  %"CONTAB[223]*45" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[338]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 338), align 16
  %"CONTAB[271]*46" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 271), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 335, i64 4, {}* %"CONTAB[336]*", {}* %"CONTAB[223]*45", {}* %"CONTAB[338]*", {}* %"CONTAB[271]*46")
  %"CONTAB[53]*47" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 340, i64 4, {}* %"CONTAB[53]*47", {}* inttoptr (i64 51592 to {}*), {}* inttoptr (i64 1148 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[336]*48" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 336), align 16
  %"CONTAB[223]*49" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 223), align 8
  %"CONTAB[338]*50" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 338), align 16
  %"CONTAB[271]*51" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 271), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 341, i64 4, {}* %"CONTAB[336]*48", {}* %"CONTAB[223]*49", {}* %"CONTAB[338]*50", {}* %"CONTAB[271]*51")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 342, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @"str-[Falls <VorBedingung>] aktiviere <Attribut> von <Objektklasse> mit <Filterfunktion> ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 343, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @"str-[Falls <VorBedingung>] schlage alle aus <Objektklasse> vor [mit <Bedingung>] [sortiert sortierfunktion]", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 344, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-[Falls <VorBedingung>] melde Konflikt", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 345, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @"str-[Falls <VorBedingung>] ersetze <Attribut> durch <Objektklasse> [mit <Bedingungen>]", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 347, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-KOB=MESSAGE_DIALOG", i64 0, i64 0))
  %"CONTAB[347]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 347), align 8
  %"CONTAB[7]*52" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 346, {}* %"CONTAB[347]*", {}* %"CONTAB[7]*52")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 349, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-B=KONKATENIERE-NACH-STRING", i64 0, i64 0))
  %"CONTAB[349]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 349), align 8
  %"CONTAB[7]*53" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 348, {}* %"CONTAB[349]*", {}* %"CONTAB[7]*53")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 351, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"str-COKE=S", i64 0, i64 0))
  %"CONTAB[351]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 351), align 8
  %"CONTAB[7]*54" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 350, {}* %"CONTAB[351]*", {}* %"CONTAB[7]*54")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 353, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-FALSCHE_SYNTAX, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.8() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !72 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.6)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.7)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.9() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !73 {
entry:
  %"CONTAB[353]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 353), align 8
  %"CONTAB[24]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 352, {}* %"CONTAB[353]*", {}* %"CONTAB[24]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 355, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-RICHTIGE_SYNTAX, i64 0, i64 0))
  %"CONTAB[355]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 355), align 8
  %"CONTAB[24]*1" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 354, {}* %"CONTAB[355]*", {}* %"CONTAB[24]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 357, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-IHRE_EINGABE, i64 0, i64 0))
  %"CONTAB[357]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 357), align 8
  %"CONTAB[24]*2" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 356, {}* %"CONTAB[357]*", {}* %"CONTAB[24]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 359, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-ZEILEN, i64 0, i64 0))
  %"CONTAB[359]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 359), align 8
  %"CONTAB[24]*3" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 358, {}* %"CONTAB[359]*", {}* %"CONTAB[24]*3")
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 360, i64 3, {}* %"CONTAB[39]*", {}* %"CONTAB[34]*", {}* %"CONTAB[32]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 363, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-DEF, i64 0, i64 0))
  %"CONTAB[363]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 363), align 8
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 362, {}* %"CONTAB[363]*", {}* %"CONTAB[7]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 365, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-TYP, i64 0, i64 0))
  %"CONTAB[365]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 365), align 8
  %"CONTAB[7]*4" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 364, {}* %"CONTAB[365]*", {}* %"CONTAB[7]*4")
  %"CONTAB[362]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 362), align 16
  %"CONTAB[364]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 364), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 361, i64 2, {}* %"CONTAB[362]*", {}* %"CONTAB[364]*")
  %"CONTAB[53]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 366, i64 4, {}* %"CONTAB[53]*", {}* inttoptr (i64 52844 to {}*), {}* inttoptr (i64 1180 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[362]*5" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 362), align 16
  %"CONTAB[364]*6" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 364), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 367, i64 2, {}* %"CONTAB[362]*5", {}* %"CONTAB[364]*6")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 369, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ATOM, i64 0, i64 0))
  %"CONTAB[369]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 369), align 8
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 368, {}* %"CONTAB[369]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 371, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-KLH=LESE_LISP_AUS_STRING", i64 0, i64 0))
  %"CONTAB[371]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 371), align 8
  %"CONTAB[7]*7" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 370, {}* %"CONTAB[371]*", {}* %"CONTAB[7]*7")
  %"CONTAB[39]*8" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*9" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*10" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 372, i64 3, {}* %"CONTAB[39]*8", {}* %"CONTAB[34]*9", {}* %"CONTAB[32]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 374, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str-ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN, i64 0, i64 0))
  %"CONTAB[374]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 374), align 16
  %"CONTAB[7]*11" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 373, {}* %"CONTAB[374]*", {}* %"CONTAB[7]*11")
  %"CONTAB[176]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 176), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 375, i64 1, {}* %"CONTAB[176]*")
  %"CONTAB[53]*12" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 376, i64 4, {}* %"CONTAB[53]*12", {}* inttoptr (i64 57308 to {}*), {}* inttoptr (i64 1268 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[176]*13" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 176), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 377, i64 1, {}* %"CONTAB[176]*13")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[39]*14" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*15" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*16" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 378, i64 3, {}* %"CONTAB[39]*14", {}* %"CONTAB[34]*15", {}* %"CONTAB[32]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 380, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str-ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN, i64 0, i64 0))
  %"CONTAB[380]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 380), align 16
  %"CONTAB[7]*17" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 379, {}* %"CONTAB[380]*", {}* %"CONTAB[7]*17")
  %"CONTAB[236]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 236), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 381, i64 1, {}* %"CONTAB[236]*")
  %"CONTAB[53]*18" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 382, i64 4, {}* %"CONTAB[53]*18", {}* inttoptr (i64 60112 to {}*), {}* inttoptr (i64 1320 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[236]*19" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 236), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 383, i64 1, {}* %"CONTAB[236]*19")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[285]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 285), align 8
  %"CONTAB[289]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 289), align 8
  %"CONTAB[287]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 287), align 8
  %"CONTAB[291]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 291), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 384, i64 4, {}* %"CONTAB[285]*", {}* %"CONTAB[289]*", {}* %"CONTAB[287]*", {}* %"CONTAB[291]*")
  %"CONTAB[39]*20" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*21" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*22" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 385, i64 3, {}* %"CONTAB[39]*20", {}* %"CONTAB[34]*21", {}* %"CONTAB[32]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 387, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str-ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN, i64 0, i64 0))
  %"CONTAB[387]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 387), align 8
  %"CONTAB[7]*23" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 386, {}* %"CONTAB[387]*", {}* %"CONTAB[7]*23")
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 294), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 388, i64 1, {}* %"CONTAB[294]*")
  %"CONTAB[53]*24" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 389, i64 4, {}* %"CONTAB[53]*24", {}* inttoptr (i64 63084 to {}*), {}* inttoptr (i64 1372 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[294]*25" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 294), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 390, i64 1, {}* %"CONTAB[294]*25")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 392, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-YAS_COMPILIERTE_FUNKTION, i64 0, i64 0))
  %"CONTAB[392]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 392), align 16
  %"CONTAB[7]*26" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 391, {}* %"CONTAB[392]*", {}* %"CONTAB[7]*26")
  %"CONTAB[39]*27" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*28" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*29" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 393, i64 3, {}* %"CONTAB[39]*27", {}* %"CONTAB[34]*28", {}* %"CONTAB[32]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 395, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str-ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN, i64 0, i64 0))
  %"CONTAB[395]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 395), align 8
  %"CONTAB[7]*30" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 394, {}* %"CONTAB[395]*", {}* %"CONTAB[7]*30")
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 110), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 396, i64 1, {}* %"CONTAB[110]*")
  %"CONTAB[53]*31" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 397, i64 4, {}* %"CONTAB[53]*31", {}* inttoptr (i64 66136 to {}*), {}* inttoptr (i64 1428 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[110]*32" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 110), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 398, i64 1, {}* %"CONTAB[110]*32")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 400, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str-KOMPILIERTE_BEDINGUNG, i64 0, i64 0))
  %"CONTAB[400]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 400), align 16
  %"CONTAB[7]*33" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 399, {}* %"CONTAB[400]*", {}* %"CONTAB[7]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 402, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-$KORREKTUROBJEKT", i64 0, i64 0))
  %"CONTAB[402]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 402), align 16
  %"CONTAB[7]*34" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 401, {}* %"CONTAB[402]*", {}* %"CONTAB[7]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 404, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-BEDINGUNG, i64 0, i64 0))
  %"CONTAB[404]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 404), align 16
  %"CONTAB[7]*35" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 403, {}* %"CONTAB[404]*", {}* %"CONTAB[7]*35")
  %"CONTAB[39]*36" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*37" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*38" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 405, i64 3, {}* %"CONTAB[39]*36", {}* %"CONTAB[34]*37", {}* %"CONTAB[32]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 407, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str-ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT, i64 0, i64 0))
  %"CONTAB[407]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 407), align 8
  %"CONTAB[7]*39" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 406, {}* %"CONTAB[407]*", {}* %"CONTAB[7]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 410, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-STARTKORREKTUROBJEKT, i64 0, i64 0))
  %"CONTAB[410]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 410), align 16
  %"CONTAB[7]*40" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 409, {}* %"CONTAB[410]*", {}* %"CONTAB[7]*40")
  %"CONTAB[409]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 409), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 408, i64 1, {}* %"CONTAB[409]*")
  %"CONTAB[53]*41" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 411, i64 4, {}* %"CONTAB[53]*41", {}* inttoptr (i64 67296 to {}*), {}* inttoptr (i64 1452 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[409]*42" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 409), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 412, i64 1, {}* %"CONTAB[409]*42")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 414, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-ZUORDNUNGSKLASSE, i64 0, i64 0))
  %"CONTAB[414]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 414), align 16
  %"CONTAB[7]*43" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 413, {}* %"CONTAB[414]*", {}* %"CONTAB[7]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 416, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-WERTEBEREICHSKLASSE, i64 0, i64 0))
  %"CONTAB[416]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 416), align 16
  %"CONTAB[7]*44" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 415, {}* %"CONTAB[416]*", {}* %"CONTAB[7]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 418, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str-MACROCODE_BEWERTUNG_DES_STOERENFRIEDS, i64 0, i64 0))
  %"CONTAB[418]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 418), align 16
  %"CONTAB[7]*45" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 417, {}* %"CONTAB[418]*", {}* %"CONTAB[7]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 420, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str-BEWERTUNG_DES_STOERENFRIEDS, i64 0, i64 0))
  %"CONTAB[420]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 420), align 16
  %"CONTAB[7]*46" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 419, {}* %"CONTAB[420]*", {}* %"CONTAB[7]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 422, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LAMBDA, i64 0, i64 0))
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 422), align 16
  %"CONTAB[3]*47" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 421, {}* %"CONTAB[422]*", {}* %"CONTAB[3]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 424, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-EGAL, i64 0, i64 0))
  %"CONTAB[424]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 424), align 16
  %"CONTAB[7]*48" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 423, {}* %"CONTAB[424]*", {}* %"CONTAB[7]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 426, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-DECLARE, i64 0, i64 0))
  %"CONTAB[426]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 426), align 16
  %"CONTAB[3]*49" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 425, {}* %"CONTAB[426]*", {}* %"CONTAB[3]*49")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 428, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-IGNORE, i64 0, i64 0))
  %"CONTAB[428]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 428), align 16
  %"CONTAB[3]*50" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 427, {}* %"CONTAB[428]*", {}* %"CONTAB[3]*50")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 430, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str-MACROCODE_STOERENFRIEDE, i64 0, i64 0))
  %"CONTAB[430]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 430), align 16
  %"CONTAB[7]*51" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 429, {}* %"CONTAB[430]*", {}* %"CONTAB[7]*51")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 432, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-STOERENFRIEDE, i64 0, i64 0))
  %"CONTAB[432]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 432), align 16
  %"CONTAB[7]*52" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 431, {}* %"CONTAB[432]*", {}* %"CONTAB[7]*52")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 434, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-YAS=ALLE", i64 0, i64 0))
  %"CONTAB[434]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 434), align 16
  %"CONTAB[7]*53" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 433, {}* %"CONTAB[434]*", {}* %"CONTAB[7]*53")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 436, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-QUOTE, i64 0, i64 0))
  %"CONTAB[436]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 436), align 16
  %"CONTAB[3]*54" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 435, {}* %"CONTAB[436]*", {}* %"CONTAB[3]*54")
  %"CONTAB[39]*55" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*56" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*57" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 437, i64 3, {}* %"CONTAB[39]*55", {}* %"CONTAB[34]*56", {}* %"CONTAB[32]*57")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 439, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str-ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE, i64 0, i64 0))
  %"CONTAB[439]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 439), align 8
  %"CONTAB[7]*58" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 438, {}* %"CONTAB[439]*", {}* %"CONTAB[7]*58")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 442, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-ID, i64 0, i64 0))
  %"CONTAB[442]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 442), align 16
  %"CONTAB[7]*59" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 441, {}* %"CONTAB[442]*", {}* %"CONTAB[7]*59")
  %"CONTAB[441]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 441), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 440, i64 1, {}* %"CONTAB[441]*")
  %"CONTAB[53]*60" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 443, i64 4, {}* %"CONTAB[53]*60", {}* inttoptr (i64 68548 to {}*), {}* inttoptr (i64 1480 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[441]*61" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 441), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 444, i64 1, {}* %"CONTAB[441]*61")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 446, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-KOB=AUSGABE_NACHRICHT", i64 0, i64 0))
  %"CONTAB[446]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 446), align 16
  %"CONTAB[7]*62" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 445, {}* %"CONTAB[446]*", {}* %"CONTAB[7]*62")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 448, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-REGELN_WERDEN_UEBERSETZT, i64 0, i64 0))
  %"CONTAB[448]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 448), align 16
  %"CONTAB[24]*63" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 24), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 447, {}* %"CONTAB[448]*", {}* %"CONTAB[24]*63")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 450, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-DO-COMPILATION-UNIT, i64 0, i64 0))
  %"CONTAB[450]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 450), align 16
  %"CONTAB[57]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 57), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 449, {}* %"CONTAB[450]*", {}* %"CONTAB[57]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 452, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-YAS=HAT_OBJEKT_SLOT_P", i64 0, i64 0))
  %"CONTAB[452]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 452), align 16
  %"CONTAB[7]*64" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 451, {}* %"CONTAB[452]*", {}* %"CONTAB[7]*64")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 454, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-YAS=NEUER_SLOT", i64 0, i64 0))
  %"CONTAB[454]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 454), align 16
  %"CONTAB[7]*65" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 453, {}* %"CONTAB[454]*", {}* %"CONTAB[7]*65")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 456, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-UEBERWACHEN, i64 0, i64 0))
  %"CONTAB[456]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 456), align 16
  %"CONTAB[7]*66" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 455, {}* %"CONTAB[456]*", {}* %"CONTAB[7]*66")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 458, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str-STARTKORREKTUROBJEKTE, i64 0, i64 0))
  %"CONTAB[458]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 458), align 16
  %"CONTAB[7]*67" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 457, {}* %"CONTAB[458]*", {}* %"CONTAB[7]*67")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-METAKORREKTUROBJEKTE, i64 0, i64 0))
  %"CONTAB[460]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 460), align 16
  %"CONTAB[7]*68" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 459, {}* %"CONTAB[460]*", {}* %"CONTAB[7]*68")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 462, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str-KOB=SCHLIESSE_AUSGABE_FENSTER", i64 0, i64 0))
  %"CONTAB[462]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 462), align 16
  %"CONTAB[7]*69" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 461, {}* %"CONTAB[462]*", {}* %"CONTAB[7]*69")
  %"CONTAB[39]*70" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 39), align 8
  %"CONTAB[34]*71" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 34), align 16
  %"CONTAB[32]*72" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 463, i64 3, {}* %"CONTAB[39]*70", {}* %"CONTAB[34]*71", {}* %"CONTAB[32]*72")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 465, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-ZWE=ALLES_UEBERSETZEN", i64 0, i64 0))
  %"CONTAB[465]*" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 465), align 8
  %"CONTAB[7]*73" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 7), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 464, {}* %"CONTAB[465]*", {}* %"CONTAB[7]*73")
  %"CONTAB[53]*74" = load {}*, {}** getelementptr inbounds ([467 x {}*], [467 x {}*]* @CONTAB4420, i64 0, i64 53), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 466, i64 4, {}* %"CONTAB[53]*74", {}* inttoptr (i64 74236 to {}*), {}* inttoptr (i64 1628 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.10() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !74 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.8)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.9)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.11() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !75 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.5)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.10)
  ret void
}

; Function Attrs: nounwind
declare void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }*, {}**, i64, {}*) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @CLASP-CTOR() #0 personality i32 (...)* @__gxx_personality_v0 {
entry:
  tail call void @cc_register_startup_function(void ()* nonnull @RUN-ALL)
  ret void
}

declare void @cc_register_startup_function(void ()*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @cc_error_too_few_arguments(i64, i64, %0*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @cc_error_too_many_arguments(i64, i64, %0*) local_unnamed_addr #5

attributes #0 = { uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #1 = { nounwind "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #2 = { ssp uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #3 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #4 = { nounwind readnone speculatable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn }

!llvm.ident = !{!0, !1}
!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5, !6, !7, !8}

!0 = !{!"Clasp"}
!1 = !{!"clang version 5.0.1 (tags/RELEASE_501/final)"}
!2 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !3, producer: "clasp Common Lisp compiler", isOptimized: false, flags: "-v", runtimeVersion: 1, splitDebugFilename: "the-split-name.log", emissionKind: LineTablesOnly, enums: !4)
!3 = !DIFile(filename: "zwe=uebersetzen.lisp", directory: "/Users/karstenpoeck/lisp/coke/program")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"PIC Level", i32 2}
!9 = distinct !DISubprogram(name: "RUN-ALL", linkageName: "RUN-ALL", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed_fixed)
!13 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^1^TOP-COMPILE-FILE", scope: !3, file: !3, line: 1, type: !10, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !2, variables: !4)
!14 = !{!15, !19, i64 16}
!15 = !{!"_ZTS13__va_list_tag", !16, i64 0, !16, i64 4, !19, i64 8, !19, i64 16}
!16 = !{!"int", !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C++ TBAA"}
!19 = !{!"any pointer", !17, i64 0}
!20 = !{!15, !16, i64 0}
!21 = !{!22, !22, i64 0}
!22 = !{!"long", !17, i64 0}
!23 = distinct !DISubprogram(name: "ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^", linkageName: "ZWE=UEBERSETZEN_LISTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 1, type: !10, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !2, variables: !4)
!24 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^37^TOP-COMPILE-FILE", scope: !3, file: !3, line: 37, type: !10, isLocal: false, isDefinition: true, scopeLine: 37, isOptimized: false, unit: !2, variables: !4)
!25 = distinct !DISubprogram(name: "ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE=UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 37, type: !10, isLocal: false, isDefinition: true, scopeLine: 37, isOptimized: false, unit: !2, variables: !4)
!26 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^69^TOP-COMPILE-FILE", scope: !3, file: !3, line: 69, type: !10, isLocal: false, isDefinition: true, scopeLine: 69, isOptimized: false, unit: !2, variables: !4)
!27 = distinct !DISubprogram(name: "ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE-NIL-PROPERTIES-LOESCHEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 69, type: !10, isLocal: false, isDefinition: true, scopeLine: 69, isOptimized: false, unit: !2, variables: !4)
!28 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^80^TOP-COMPILE-FILE", scope: !3, file: !3, line: 80, type: !10, isLocal: false, isDefinition: true, scopeLine: 80, isOptimized: false, unit: !2, variables: !4)
!29 = distinct !DISubprogram(name: "ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", linkageName: "ZWE=VORSCHLAG_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 80, type: !10, isLocal: false, isDefinition: true, scopeLine: 80, isOptimized: false, unit: !2, variables: !4)
!30 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^96^TOP-COMPILE-FILE", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!31 = distinct !DISubprogram(name: "ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE=VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 96, type: !10, isLocal: false, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !2, variables: !4)
!32 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^118^TOP-COMPILE-FILE", scope: !3, file: !3, line: 118, type: !10, isLocal: false, isDefinition: true, scopeLine: 118, isOptimized: false, unit: !2, variables: !4)
!33 = distinct !DISubprogram(name: "ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", linkageName: "ZWE=VORSCHLAG_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 118, type: !10, isLocal: false, isDefinition: true, scopeLine: 118, isOptimized: false, unit: !2, variables: !4)
!34 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^139^TOP-COMPILE-FILE", scope: !3, file: !3, line: 139, type: !10, isLocal: false, isDefinition: true, scopeLine: 139, isOptimized: false, unit: !2, variables: !4)
!35 = distinct !DISubprogram(name: "ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", linkageName: "ZWE=CONSTRAINT_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 139, type: !10, isLocal: false, isDefinition: true, scopeLine: 139, isOptimized: false, unit: !2, variables: !4)
!36 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^154^TOP-COMPILE-FILE", scope: !3, file: !3, line: 154, type: !10, isLocal: false, isDefinition: true, scopeLine: 154, isOptimized: false, unit: !2, variables: !4)
!37 = distinct !DISubprogram(name: "ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE=CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 154, type: !10, isLocal: false, isDefinition: true, scopeLine: 154, isOptimized: false, unit: !2, variables: !4)
!38 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^168^TOP-COMPILE-FILE", scope: !3, file: !3, line: 168, type: !10, isLocal: false, isDefinition: true, scopeLine: 168, isOptimized: false, unit: !2, variables: !4)
!39 = distinct !DISubprogram(name: "ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", linkageName: "ZWE=CONSTRAINT_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 168, type: !10, isLocal: false, isDefinition: true, scopeLine: 168, isOptimized: false, unit: !2, variables: !4)
!40 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^187^TOP-COMPILE-FILE", scope: !3, file: !3, line: 187, type: !10, isLocal: false, isDefinition: true, scopeLine: 187, isOptimized: false, unit: !2, variables: !4)
!41 = distinct !DISubprogram(name: "ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", linkageName: "ZWE=HEILMITTEL_UEBERSETZEN_TEXT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 187, type: !10, isLocal: false, isDefinition: true, scopeLine: 187, isOptimized: false, unit: !2, variables: !4)
!42 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^209^TOP-COMPILE-FILE", scope: !3, file: !3, line: 209, type: !10, isLocal: false, isDefinition: true, scopeLine: 209, isOptimized: false, unit: !2, variables: !4)
!43 = distinct !DISubprogram(name: "ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", linkageName: "ZWE=HEILMITTEL_UEBERSETZEN_NEU^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 209, type: !10, isLocal: false, isDefinition: true, scopeLine: 209, isOptimized: false, unit: !2, variables: !4)
!44 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^248^TOP-COMPILE-FILE", scope: !3, file: !3, line: 248, type: !10, isLocal: false, isDefinition: true, scopeLine: 248, isOptimized: false, unit: !2, variables: !4)
!45 = distinct !DISubprogram(name: "ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE=HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 248, type: !10, isLocal: false, isDefinition: true, scopeLine: 248, isOptimized: false, unit: !2, variables: !4)
!46 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^287^TOP-COMPILE-FILE", scope: !3, file: !3, line: 287, type: !10, isLocal: false, isDefinition: true, scopeLine: 287, isOptimized: false, unit: !2, variables: !4)
!47 = distinct !DISubprogram(name: "ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^", linkageName: "ZWE=HEILMITTEL_UEBERSETZEN_KORREKT_P^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 287, type: !10, isLocal: false, isDefinition: true, scopeLine: 287, isOptimized: false, unit: !2, variables: !4)
!48 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^295^TOP-COMPILE-FILE", scope: !3, file: !3, line: 295, type: !10, isLocal: false, isDefinition: true, scopeLine: 295, isOptimized: false, unit: !2, variables: !4)
!49 = distinct !DISubprogram(name: "ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^", linkageName: "ZWE-UEBERSETZUNGS_FEHLER^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 295, type: !10, isLocal: false, isDefinition: true, scopeLine: 295, isOptimized: false, unit: !2, variables: !4)
!50 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^317^TOP-COMPILE-FILE", scope: !3, file: !3, line: 317, type: !10, isLocal: false, isDefinition: true, scopeLine: 317, isOptimized: false, unit: !2, variables: !4)
!51 = distinct !DISubprogram(name: "ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE-EINGELESENEN_VORSCHLAG_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 317, type: !10, isLocal: false, isDefinition: true, scopeLine: 317, isOptimized: false, unit: !2, variables: !4)
!52 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^330^TOP-COMPILE-FILE", scope: !3, file: !3, line: 330, type: !10, isLocal: false, isDefinition: true, scopeLine: 330, isOptimized: false, unit: !2, variables: !4)
!53 = distinct !DISubprogram(name: "ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE-EINGELESENES_CONSTRAINT_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 330, type: !10, isLocal: false, isDefinition: true, scopeLine: 330, isOptimized: false, unit: !2, variables: !4)
!54 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^343^TOP-COMPILE-FILE", scope: !3, file: !3, line: 343, type: !10, isLocal: false, isDefinition: true, scopeLine: 343, isOptimized: false, unit: !2, variables: !4)
!55 = distinct !DISubprogram(name: "ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE-EINGELESENES_HEILMITTEL_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 343, type: !10, isLocal: false, isDefinition: true, scopeLine: 343, isOptimized: false, unit: !2, variables: !4)
!56 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^357^TOP-COMPILE-FILE", scope: !3, file: !3, line: 357, type: !10, isLocal: false, isDefinition: true, scopeLine: 357, isOptimized: false, unit: !2, variables: !4)
!57 = distinct !DISubprogram(name: "ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE-EINGELESENE_UEBERWACHUNG_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 357, type: !10, isLocal: false, isDefinition: true, scopeLine: 357, isOptimized: false, unit: !2, variables: !4)
!58 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^363^TOP-COMPILE-FILE", scope: !3, file: !3, line: 363, type: !10, isLocal: false, isDefinition: true, scopeLine: 363, isOptimized: false, unit: !2, variables: !4)
!59 = distinct !DISubprogram(name: "ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^", linkageName: "ZWO-ERZEUGE-CODE-ZU-STARTKORREKTUROBJEKT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 363, type: !10, isLocal: false, isDefinition: true, scopeLine: 363, isOptimized: false, unit: !2, variables: !4)
!60 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^370^TOP-COMPILE-FILE", scope: !3, file: !3, line: 370, type: !10, isLocal: false, isDefinition: true, scopeLine: 370, isOptimized: false, unit: !2, variables: !4)
!61 = distinct !DISubprogram(name: "ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^", linkageName: "ZWO-ERZEUGE-CODE-ZU-METAKORREKTUROBJEKTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 370, type: !10, isLocal: false, isDefinition: true, scopeLine: 370, isOptimized: false, unit: !2, variables: !4)
!62 = distinct !DISubprogram(name: "zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE", linkageName: "zwe=uebersetzen.lisp^407^TOP-COMPILE-FILE", scope: !3, file: !3, line: 407, type: !10, isLocal: false, isDefinition: true, scopeLine: 407, isOptimized: false, unit: !2, variables: !4)
!63 = distinct !DISubprogram(name: "ZWE=ALLES_UEBERSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ZWE=ALLES_UEBERSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 407, type: !10, isLocal: false, isDefinition: true, scopeLine: 407, isOptimized: false, unit: !2, variables: !4)
!64 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 407, type: !10, isLocal: false, isDefinition: true, scopeLine: 407, isOptimized: false, unit: !2, variables: !4)
!65 = distinct !DISubprogram(name: "RUN-ALL.1", linkageName: "RUN-ALL.1", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!66 = distinct !DISubprogram(name: "RUN-ALL.2", linkageName: "RUN-ALL.2", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!67 = distinct !DISubprogram(name: "RUN-ALL.3", linkageName: "RUN-ALL.3", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!68 = distinct !DISubprogram(name: "RUN-ALL.4", linkageName: "RUN-ALL.4", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!69 = distinct !DISubprogram(name: "RUN-ALL.5", linkageName: "RUN-ALL.5", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!70 = distinct !DISubprogram(name: "RUN-ALL.6", linkageName: "RUN-ALL.6", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!71 = distinct !DISubprogram(name: "RUN-ALL.7", linkageName: "RUN-ALL.7", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!72 = distinct !DISubprogram(name: "RUN-ALL.8", linkageName: "RUN-ALL.8", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!73 = distinct !DISubprogram(name: "RUN-ALL.9", linkageName: "RUN-ALL.9", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!74 = distinct !DISubprogram(name: "RUN-ALL.10", linkageName: "RUN-ALL.10", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!75 = distinct !DISubprogram(name: "RUN-ALL.11", linkageName: "RUN-ALL.11", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
