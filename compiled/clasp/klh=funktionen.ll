; ModuleID = '/Users/karstenpoeck/lisp/coke/program/klh=funktionen.lisp'
source_filename = "/Users/karstenpoeck/lisp/coke/program/klh=funktionen.lisp"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

%0 = type { i8*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }
%1 = type { %2, %0*, %"class.gctools::smart_ptr", i32, %"class.gctools::GCArray_moveable.7" }
%2 = type { %"class.core::Closure_O", %"class.gctools::smart_ptr", %3, i64, i64, i64, i64 }
%3 = type { %4* }
%4 = type { %"class.core::General_O", %"class.gctools::smart_ptr.1", %5, %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", i64, i8, i8, %"class.gctools::smart_ptr" }
%5 = type { %"class.core::T_O" }
%"class.gctools::smart_ptr" = type { %"class.core::T_O"* }
%"class.core::T_O" = type { i8 }
%"class.core::Closure_O" = type { %"class.core::NamedFunction_O" }
%"class.core::NamedFunction_O" = type { %"class.core::Function_O", %"class.gctools::smart_ptr" }
%"class.core::Function_O" = type { %"class.core::General_O", %"struct.std::__1::atomic" }
%"class.core::General_O" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { { %"class.core::T_O"*, i64 } (%"class.core::T_O"*, i64, %"class.core::T_O"*, %"class.core::T_O"*, %"class.core::T_O"*, %"class.core::T_O"*, ...)* }
%"class.gctools::smart_ptr.1" = type { %"class.core::SimpleString_O"* }
%"class.core::SimpleString_O" = type { %"class.core::AbstractSimpleVector_O" }
%"class.core::AbstractSimpleVector_O" = type { %"class.core::Array_O" }
%"class.core::Array_O" = type { %"class.core::General_O", [0 x i64] }
%"class.gctools::GCArray_moveable.7" = type { i64, [0 x %"class.gctools::smart_ptr"] }

@":::global-str-/Users/karstenpoeck/lisp/coke/program/klh=funktionen.lisp" = private unnamed_addr constant [58 x i8] c"/Users/karstenpoeck/lisp/coke/program/klh=funktionen.lisp\00"
@source-file-info-handle = internal global i32 -1
@constants-table = internal global { i8*, i8*, i64 } undef
@"klh=funktionen.lisp^1^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^1^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-KLH=MIN-LISTE^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [36 x i8] c"KLH=MIN-LISTE^COMMON-LISP-USER^FN^^\00"
@"KLH=MIN-LISTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=MIN-LISTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 34, i64 64, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^1^TOP-COMPILE-FILE" = private unnamed_addr constant [39 x i8] c"klh=funktionen.lisp^1^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^48^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^48^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [56 x i8] c"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^\00"
@"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 74, i64 88, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^48^TOP-COMPILE-FILE" = private unnamed_addr constant [40 x i8] c"klh=funktionen.lisp^48^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^58^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^58^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [45 x i8] c"KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^\00"
@"KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 125, i64 144, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^58^TOP-COMPILE-FILE" = private unnamed_addr constant [40 x i8] c"klh=funktionen.lisp^58^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^66^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^66^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [49 x i8] c"KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^\00"
@"KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 150, i64 160, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^66^TOP-COMPILE-FILE" = private unnamed_addr constant [40 x i8] c"klh=funktionen.lisp^66^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^73^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^73^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 177, i64 181, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-LAMBDA^COMMON-LISP^FN^^" = private unnamed_addr constant [24 x i8] c"LAMBDA^COMMON-LISP^FN^^\00"
@"LAMBDA^COMMON-LISP^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 184, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^73^TOP-COMPILE-FILE" = private unnamed_addr constant [40 x i8] c"klh=funktionen.lisp^73^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^92^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^92^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 186, i64 192, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^92^TOP-COMPILE-FILE" = private unnamed_addr constant [40 x i8] c"klh=funktionen.lisp^92^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^107^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^107^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=MACH_ATOM^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=MACH_ATOM^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 204, i64 210, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^107^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^107^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^112^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^112^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 223, i64 227, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^112^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^112^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^123^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^123^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 220, i64 235, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^123^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^123^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^127^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^127^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [44 x i8] c"KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^\00"
@"KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 273, i64 287, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.1^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.1", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.2^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.2", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.3^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.3", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.4^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.4", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.5^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.5", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^127^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^127^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^147^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^147^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 311, i64 317, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^147^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^147^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^159^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^159^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 330, i64 340, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^159^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^159^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^174^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^174^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 342, i64 348, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^174^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^174^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^180^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^180^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 360, i64 364, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^180^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^180^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^198^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^198^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=FORMAT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=FORMAT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 371, i64 379, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^198^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^198^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^203^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^203^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [39 x i8] c"KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^\00"
@"KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 389, i64 395, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.6^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.6", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 396, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^203^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^203^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^213^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^213^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 368, i64 408, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^213^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^213^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^222^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^222^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 410, i64 418, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^222^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^222^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^232^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^232^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=N-FILTER^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=N-FILTER^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 424, i64 433, i64 432, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^232^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^232^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^245^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^245^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 443, i64 447, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^245^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^245^TOP-COMPILE-FILE\00"
@"klh=funktionen.lisp^253^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"klh=funktionen.lisp^253^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 62, i64 0, i64 0, i64 0, i64 1, i64 0 }
@":::global-str-KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [45 x i8] c"KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^\00"
@"KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 605, i64 645, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.7^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.7", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 669, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.8^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.8", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 674, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.9^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.9", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 675, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.10^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.10", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 676, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.11^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.11", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 677, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.12^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.12", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 678, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.13^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.13", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 691, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.14^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.14", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.15^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.15", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 694, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.16^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.16", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 705, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.17^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.17", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.18^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.18", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 706, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.19^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.19", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 717, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.20^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.20", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.21^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.21", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 718, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.22^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.22", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 729, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.23^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.23", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.24^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.24", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 730, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.25^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.25", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 736, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.26^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.26", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 752, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.27^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.27", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.28^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.28", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 753, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.29^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.29", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 764, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.30^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.30", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.31^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.31", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 765, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.32^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.32", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 771, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.33^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.33", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 772, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.34^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.34", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 783, i64 0, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.35^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.35", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 182, i64 0, i64 0, i64 0, i64 1, i64 0 }
@"str-klh=funktionen.lisp^253^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"klh=funktionen.lisp^253^TOP-COMPILE-FILE\00"
@"str-<" = private unnamed_addr constant [2 x i8] c"<\00"
@str-COMMON-LISP = private unnamed_addr constant [12 x i8] c"COMMON-LISP\00"
@str-CONS = private unnamed_addr constant [5 x i8] c"CONS\00"
@str-ERROR = private unnamed_addr constant [6 x i8] c"ERROR\00"
@str-TYPE-ERROR = private unnamed_addr constant [11 x i8] c"TYPE-ERROR\00"
@str-DATUM = private unnamed_addr constant [6 x i8] c"DATUM\00"
@str-KEYWORD = private unnamed_addr constant [8 x i8] c"KEYWORD\00"
@str-EXPECTED-TYPE = private unnamed_addr constant [14 x i8] c"EXPECTED-TYPE\00"
@str-LIST = private unnamed_addr constant [5 x i8] c"LIST\00"
@str-FUNCTION = private unnamed_addr constant [9 x i8] c"FUNCTION\00"
@str-SYMBOL = private unnamed_addr constant [7 x i8] c"SYMBOL\00"
@str-SYMBOL-FUNCTION = private unnamed_addr constant [16 x i8] c"SYMBOL-FUNCTION\00"
@str-OR = private unnamed_addr constant [3 x i8] c"OR\00"
@str-FDEFINITION = private unnamed_addr constant [12 x i8] c"FDEFINITION\00"
@"str-KLH=MIN-LISTE" = private unnamed_addr constant [14 x i8] c"KLH=MIN-LISTE\00"
@str-COMMON-LISP-USER = private unnamed_addr constant [17 x i8] c"COMMON-LISP-USER\00"
@str-SETF-LAMBDA-LIST = private unnamed_addr constant [17 x i8] c"SETF-LAMBDA-LIST\00"
@str-CORE = private unnamed_addr constant [5 x i8] c"CORE\00"
@str-SEQUENZ = private unnamed_addr constant [8 x i8] c"SEQUENZ\00"
@str-TESTFUNKTION = private unnamed_addr constant [13 x i8] c"TESTFUNKTION\00"
@"str-&KEY" = private unnamed_addr constant [5 x i8] c"&KEY\00"
@str-VERGLEICHSFUNKTION = private unnamed_addr constant [19 x i8] c"VERGLEICHSFUNKTION\00"
@str-SET-SOURCE-INFO = private unnamed_addr constant [16 x i8] c"SET-SOURCE-INFO\00"
@str-CURRENT-SOURCE-FILE = private unnamed_addr constant [20 x i8] c"CURRENT-SOURCE-FILE\00"
@"str-*CURRENT-FORM-LINENO*" = private unnamed_addr constant [22 x i8] c"*CURRENT-FORM-LINENO*\00"
@str-COMPILER = private unnamed_addr constant [9 x i8] c"COMPILER\00"
@str-TOP-LEVEL = private unnamed_addr constant [10 x i8] c"TOP-LEVEL\00"
@str-ALLOW-OTHER-KEYS = private unnamed_addr constant [17 x i8] c"ALLOW-OTHER-KEYS\00"
@str-EQL = private unnamed_addr constant [4 x i8] c"EQL\00"
@str-KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN = private unnamed_addr constant [34 x i8] c"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN\00"
@str-LISTE = private unnamed_addr constant [6 x i8] c"LISTE\00"
@str-NACH = private unnamed_addr constant [5 x i8] c"NACH\00"
@str-WEN = private unnamed_addr constant [4 x i8] c"WEN\00"
@str-VERGLEICHSTEST = private unnamed_addr constant [15 x i8] c"VERGLEICHSTEST\00"
@"str-*" = private unnamed_addr constant [2 x i8] c"*\00"
@"str-**" = private unnamed_addr constant [3 x i8] c"**\00"
@"str-***" = private unnamed_addr constant [4 x i8] c"***\00"
@"str-+" = private unnamed_addr constant [2 x i8] c"+\00"
@"str-++" = private unnamed_addr constant [3 x i8] c"++\00"
@"str-+++" = private unnamed_addr constant [4 x i8] c"+++\00"
@"str-/" = private unnamed_addr constant [2 x i8] c"/\00"
@"str-//" = private unnamed_addr constant [3 x i8] c"//\00"
@"str-///" = private unnamed_addr constant [4 x i8] c"///\00"
@str-FIXNUM = private unnamed_addr constant [7 x i8] c"FIXNUM\00"
@str-SINGLE-FLOAT = private unnamed_addr constant [13 x i8] c"SINGLE-FLOAT\00"
@str-DOUBLE-FLOAT = private unnamed_addr constant [13 x i8] c"DOUBLE-FLOAT\00"
@str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM = private unnamed_addr constant [34 x i8] c"CONVERT-OVERFLOW-RESULT-TO-BIGNUM\00"
@"str-TWO-ARG-+" = private unnamed_addr constant [10 x i8] c"TWO-ARG-+\00"
@"str-TWO-ARG-<" = private unnamed_addr constant [10 x i8] c"TWO-ARG-<\00"
@str-ROOM = private unnamed_addr constant [5 x i8] c"ROOM\00"
@"str-KLH=MULTIPLE-GC-SOFORT" = private unnamed_addr constant [23 x i8] c"KLH=MULTIPLE-GC-SOFORT\00"
@str-AND = private unnamed_addr constant [4 x i8] c"AND\00"
@str-INTEGER = private unnamed_addr constant [8 x i8] c"INTEGER\00"
@"str->=" = private unnamed_addr constant [3 x i8] c">=\00"
@"str-<=" = private unnamed_addr constant [3 x i8] c"<=\00"
@"str-*STANDARD-OUTPUT*" = private unnamed_addr constant [18 x i8] c"*STANDARD-OUTPUT*\00"
@"str-KLH=FENSTERSTREAM-ERZEUGEN" = private unnamed_addr constant [27 x i8] c"KLH=FENSTERSTREAM-ERZEUGEN\00"
@str-KLASSE = private unnamed_addr constant [7 x i8] c"KLASSE\00"
@"str-&REST" = private unnamed_addr constant [6 x i8] c"&REST\00"
@str-PARAMETER = private unnamed_addr constant [10 x i8] c"PARAMETER\00"
@str-WINDOW-SIZE = private unnamed_addr constant [12 x i8] c"WINDOW-SIZE\00"
@str-VIEW-SIZE = private unnamed_addr constant [10 x i8] c"VIEW-SIZE\00"
@str-WINDOW-POSITION = private unnamed_addr constant [16 x i8] c"WINDOW-POSITION\00"
@str-VIEW-POSITION = private unnamed_addr constant [14 x i8] c"VIEW-POSITION\00"
@str-WINDOW-FONT = private unnamed_addr constant [12 x i8] c"WINDOW-FONT\00"
@str-VIEW-FONT = private unnamed_addr constant [10 x i8] c"VIEW-FONT\00"
@str-GETF = private unnamed_addr constant [5 x i8] c"GETF\00"
@str-KLH-PARAMETERLISTE-TRANSFORMIEREN = private unnamed_addr constant [34 x i8] c"KLH-PARAMETERLISTE-TRANSFORMIEREN\00"
@str-LAMBDA = private unnamed_addr constant [7 x i8] c"LAMBDA\00"
@"str-KLH=FENSTERSTREAM-NACH-OBEN-GEHEN" = private unnamed_addr constant [34 x i8] c"KLH=FENSTERSTREAM-NACH-OBEN-GEHEN\00"
@str-STREAM = private unnamed_addr constant [7 x i8] c"STREAM\00"
@str-EQUAL = private unnamed_addr constant [6 x i8] c"EQUAL\00"
@str-STRING-TRIM = private unnamed_addr constant [12 x i8] c"STRING-TRIM\00"
@str- = private unnamed_addr constant [1 x i8] zeroinitializer
@str-READ-FROM-STRING = private unnamed_addr constant [17 x i8] c"READ-FROM-STRING\00"
@str-SUBSTITUTE = private unnamed_addr constant [11 x i8] c"SUBSTITUTE\00"
@"str-KLH=MACH_ATOM" = private unnamed_addr constant [14 x i8] c"KLH=MACH_ATOM\00"
@str-TEXT = private unnamed_addr constant [5 x i8] c"TEXT\00"
@str-NUMBERP = private unnamed_addr constant [8 x i8] c"NUMBERP\00"
@str-CONCATENATE = private unnamed_addr constant [12 x i8] c"CONCATENATE\00"
@str-STRING = private unnamed_addr constant [7 x i8] c"STRING\00"
@str-_ = private unnamed_addr constant [2 x i8] c"_\00"
@"str-KLH=WAS_NACH_STRING" = private unnamed_addr constant [20 x i8] c"KLH=WAS_NACH_STRING\00"
@"str-KLH=MACH_SYMBOL" = private unnamed_addr constant [16 x i8] c"KLH=MACH_SYMBOL\00"
@"str-B=ERZEUGE-STRING" = private unnamed_addr constant [17 x i8] c"B=ERZEUGE-STRING\00"
@str-WAS = private unnamed_addr constant [4 x i8] c"WAS\00"
@str-PROBE-FILE = private unnamed_addr constant [11 x i8] c"PROBE-FILE\00"
@str-DELETE-FILE = private unnamed_addr constant [12 x i8] c"DELETE-FILE\00"
@str-OPEN = private unnamed_addr constant [5 x i8] c"OPEN\00"
@str-DIRECTION = private unnamed_addr constant [10 x i8] c"DIRECTION\00"
@str-OUTPUT = private unnamed_addr constant [7 x i8] c"OUTPUT\00"
@str-IF-EXISTS = private unnamed_addr constant [10 x i8] c"IF-EXISTS\00"
@str-OVERWRITE = private unnamed_addr constant [10 x i8] c"OVERWRITE\00"
@str-IF-DOES-NOT-EXIST = private unnamed_addr constant [18 x i8] c"IF-DOES-NOT-EXIST\00"
@str-CREATE = private unnamed_addr constant [7 x i8] c"CREATE\00"
@str-CALL-WITH-VARIABLE-BOUND = private unnamed_addr constant [25 x i8] c"CALL-WITH-VARIABLE-BOUND\00"
@str-CLEAVIR-PRIMOP = private unnamed_addr constant [15 x i8] c"CLEAVIR-PRIMOP\00"
@str-FUNWIND-PROTECT = private unnamed_addr constant [16 x i8] c"FUNWIND-PROTECT\00"
@str-MULTIPLE-VALUE-PROG1-FUNCTION = private unnamed_addr constant [30 x i8] c"MULTIPLE-VALUE-PROG1-FUNCTION\00"
@str-APPLY = private unnamed_addr constant [6 x i8] c"APPLY\00"
@str-CLOSE = private unnamed_addr constant [6 x i8] c"CLOSE\00"
@str-ABORT = private unnamed_addr constant [6 x i8] c"ABORT\00"
@str-SET-MAC-FILE-TYPE = private unnamed_addr constant [18 x i8] c"SET-MAC-FILE-TYPE\00"
@str-SET-MAC-FILE-CREATOR = private unnamed_addr constant [21 x i8] c"SET-MAC-FILE-CREATOR\00"
@"str-KLH=AUSGABE_AUF_DATEI" = private unnamed_addr constant [22 x i8] c"KLH=AUSGABE_AUF_DATEI\00"
@str-PFADNAME = private unnamed_addr constant [9 x i8] c"PFADNAME\00"
@str-FUNKTION = private unnamed_addr constant [9 x i8] c"FUNKTION\00"
@str-PARAMETER_LISTE = private unnamed_addr constant [16 x i8] c"PARAMETER_LISTE\00"
@str-MAC-FILE-TYPE = private unnamed_addr constant [14 x i8] c"MAC-FILE-TYPE\00"
@str-MAC-FILE-CREATOR = private unnamed_addr constant [17 x i8] c"MAC-FILE-CREATOR\00"
@str-ARRAY-DIMENSIONS = private unnamed_addr constant [17 x i8] c"ARRAY-DIMENSIONS\00"
@str-ARRAY-INDEX = private unnamed_addr constant [12 x i8] c"ARRAY-INDEX\00"
@str-EXT = private unnamed_addr constant [4 x i8] c"EXT\00"
@str-NULL = private unnamed_addr constant [5 x i8] c"NULL\00"
@str-ETYPECASE-ERROR = private unnamed_addr constant [16 x i8] c"ETYPECASE-ERROR\00"
@str-MAKE-SIMPLE-MDARRAY-T = private unnamed_addr constant [22 x i8] c"MAKE-SIMPLE-MDARRAY-T\00"
@str-MAKE-SIMPLE-VECTOR-T = private unnamed_addr constant [21 x i8] c"MAKE-SIMPLE-VECTOR-T\00"
@str-AREF = private unnamed_addr constant [5 x i8] c"AREF\00"
@"str-KLH=SPIEGEL_ARRAY" = private unnamed_addr constant [18 x i8] c"KLH=SPIEGEL_ARRAY\00"
@str-ARRAY = private unnamed_addr constant [6 x i8] c"ARRAY\00"
@str-VECTOR = private unnamed_addr constant [7 x i8] c"VECTOR\00"
@"str-TWO-ARG-<=" = private unnamed_addr constant [11 x i8] c"TWO-ARG-<=\00"
@str-SUBSEQ = private unnamed_addr constant [7 x i8] c"SUBSEQ\00"
@str-TWO-ARG-- = private unnamed_addr constant [10 x i8] c"TWO-ARG--\00"
@str-. = private unnamed_addr constant [2 x i8] c".\00"
@"str-KLH=STRING_KUERZEN" = private unnamed_addr constant [19 x i8] c"KLH=STRING_KUERZEN\00"
@str-MAX_LAENGE = private unnamed_addr constant [11 x i8] c"MAX_LAENGE\00"
@str-NUMBER = private unnamed_addr constant [7 x i8] c"NUMBER\00"
@str-ARRAY-RANK = private unnamed_addr constant [11 x i8] c"ARRAY-RANK\00"
@"str-KLH=WAS_NACH_KURZEN_STRING" = private unnamed_addr constant [27 x i8] c"KLH=WAS_NACH_KURZEN_STRING\00"
@str-LAENGE = private unnamed_addr constant [7 x i8] c"LAENGE\00"
@"str-TWO-ARG->" = private unnamed_addr constant [10 x i8] c"TWO-ARG->\00"
@str-MAKE-SEQUENCE = private unnamed_addr constant [14 x i8] c"MAKE-SEQUENCE\00"
@str-CEILING = private unnamed_addr constant [8 x i8] c"CEILING\00"
@str-INITIAL-ELEMENT = private unnamed_addr constant [16 x i8] c"INITIAL-ELEMENT\00"
@"str-KLH=MACHE-ZENTRIERT" = private unnamed_addr constant [20 x i8] c"KLH=MACHE-ZENTRIERT\00"
@str-FORMAT = private unnamed_addr constant [7 x i8] c"FORMAT\00"
@"str- " = private unnamed_addr constant [2 x i8] c" \00"
@"str-KLH=FUELLE_AUF" = private unnamed_addr constant [15 x i8] c"KLH=FUELLE_AUF\00"
@"str-KLH=FORMAT" = private unnamed_addr constant [11 x i8] c"KLH=FORMAT\00"
@str-MAXIMUM = private unnamed_addr constant [8 x i8] c"MAXIMUM\00"
@str-FORMATSTRING = private unnamed_addr constant [13 x i8] c"FORMATSTRING\00"
@str-MAPCAR = private unnamed_addr constant [7 x i8] c"MAPCAR\00"
@str-EVAL = private unnamed_addr constant [5 x i8] c"EVAL\00"
@str-APPEND = private unnamed_addr constant [7 x i8] c"APPEND\00"
@str-BACKQUOTE-APPEND = private unnamed_addr constant [17 x i8] c"BACKQUOTE-APPEND\00"
@"str-KLH=FORMAT_LISTE" = private unnamed_addr constant [17 x i8] c"KLH=FORMAT_LISTE\00"
@str-MAXIMUM_LISTE = private unnamed_addr constant [14 x i8] c"MAXIMUM_LISTE\00"
@str-STRINGP = private unnamed_addr constant [8 x i8] c"STRINGP\00"
@"str-B=STRING-ABSCHNEIDEN" = private unnamed_addr constant [21 x i8] c"B=STRING-ABSCHNEIDEN\00"
@"str-KLH=KREUZ_PRODUKT" = private unnamed_addr constant [18 x i8] c"KLH=KREUZ_PRODUKT\00"
@str-L1 = private unnamed_addr constant [3 x i8] c"L1\00"
@str-L2 = private unnamed_addr constant [3 x i8] c"L2\00"
@"str-TWO-ARG-=" = private unnamed_addr constant [10 x i8] c"TWO-ARG-=\00"
@"str-KLH=N-FILTER" = private unnamed_addr constant [13 x i8] c"KLH=N-FILTER\00"
@str-ZAHL = private unnamed_addr constant [5 x i8] c"ZAHL\00"
@str-SET-DOCUMENTATION = private unnamed_addr constant [18 x i8] c"SET-DOCUMENTATION\00"
@"str-kuerze liste auf laenge zahl" = private unnamed_addr constant [29 x i8] c"kuerze liste auf laenge zahl\00"
@"str-B=LEERSTRING-P" = private unnamed_addr constant [15 x i8] c"B=LEERSTRING-P\00"
@"str-B=LESE-VON-STRING" = private unnamed_addr constant [18 x i8] c"B=LESE-VON-STRING\00"
@"str-B=KONKATENIERE-NACH-STRING" = private unnamed_addr constant [27 x i8] c"B=KONKATENIERE-NACH-STRING\00"
@"str-(" = private unnamed_addr constant [2 x i8] c"(\00"
@"str-)" = private unnamed_addr constant [2 x i8] c")\00"
@"str-KLH=LESE_LISP_AUS_STRING" = private unnamed_addr constant [25 x i8] c"KLH=LESE_LISP_AUS_STRING\00"
@str-ELEMENT = private unnamed_addr constant [8 x i8] c"ELEMENT\00"
@"str-COKE=S" = private unnamed_addr constant [7 x i8] c"COKE=S\00"
@str-ZEILEN = private unnamed_addr constant [7 x i8] c"ZEILEN\00"
@str-SPALTEN = private unnamed_addr constant [8 x i8] c"SPALTEN\00"
@str-BELIEBIG = private unnamed_addr constant [9 x i8] c"BELIEBIG\00"
@str-FORMAT-ERROR = private unnamed_addr constant [13 x i8] c"FORMAT-ERROR\00"
@str-COMPLAINT = private unnamed_addr constant [10 x i8] c"COMPLAINT\00"
@"str-Required argument missing" = private unnamed_addr constant [26 x i8] c"Required argument missing\00"
@str-CONTROL-STRING = private unnamed_addr constant [15 x i8] c"CONTROL-STRING\00"
@"str-~A~2%" = private unnamed_addr constant [6 x i8] c"~A~2%\00"
@str-OFFSET = private unnamed_addr constant [7 x i8] c"OFFSET\00"
@str-PRINC = private unnamed_addr constant [6 x i8] c"PRINC\00"
@str-TERPRI = private unnamed_addr constant [7 x i8] c"TERPRI\00"
@str-MAKE-STRING-OUTPUT-STREAM-FROM-STRING = private unnamed_addr constant [38 x i8] c"MAKE-STRING-OUTPUT-STREAM-FROM-STRING\00"
@str-MAKE-STRING-OUTPUT-STREAM = private unnamed_addr constant [26 x i8] c"MAKE-STRING-OUTPUT-STREAM\00"
@str-GET-OUTPUT-STREAM-STRING = private unnamed_addr constant [25 x i8] c"GET-OUTPUT-STREAM-STRING\00"
@"str-~" = private unnamed_addr constant [2 x i8] c"~\00"
@str-A = private unnamed_addr constant [2 x i8] c"A\00"
@"str-~?~A~%" = private unnamed_addr constant [7 x i8] c"~?~A~%\00"
@"str-~A~%while processing indirect format string:" = private unnamed_addr constant [45 x i8] c"~A~%while processing indirect format string:\00"
@str-ARGUMENTS = private unnamed_addr constant [10 x i8] c"ARGUMENTS\00"
@str-PRINT-BANNER = private unnamed_addr constant [13 x i8] c"PRINT-BANNER\00"
@"str-*HANDLER-CLUSTERS*" = private unnamed_addr constant [19 x i8] c"*HANDLER-CLUSTERS*\00"
@str-FORMATTER-AUX = private unnamed_addr constant [14 x i8] c"FORMATTER-AUX\00"
@"str-~A~%" = private unnamed_addr constant [5 x i8] c"~A~%\00"
@str-MIN = private unnamed_addr constant [4 x i8] c"MIN\00"
@"str-~?" = private unnamed_addr constant [3 x i8] c"~?\00"
@"str-~?|" = private unnamed_addr constant [4 x i8] c"~?|\00"
@str-WRITE-STRING = private unnamed_addr constant [13 x i8] c"WRITE-STRING\00"
@"str-|" = private unnamed_addr constant [2 x i8] c"|\00"
@"str-B=ZENTRIERE-LISPAUSDRUCK" = private unnamed_addr constant [25 x i8] c"B=ZENTRIERE-LISPAUSDRUCK\00"
@"str-~?-" = private unnamed_addr constant [4 x i8] c"~?-\00"
@str-- = private unnamed_addr constant [2 x i8] c"-\00"
@str-MAKE-VECTOR = private unnamed_addr constant [12 x i8] c"MAKE-VECTOR\00"
@str-CHARACTER = private unnamed_addr constant [10 x i8] c"CHARACTER\00"
@str-FILL-ARRAY-WITH-ELT = private unnamed_addr constant [20 x i8] c"FILL-ARRAY-WITH-ELT\00"
@str-INDEX = private unnamed_addr constant [6 x i8] c"INDEX\00"
@str-EQ-INCOMPARABLE = private unnamed_addr constant [16 x i8] c"EQ-INCOMPARABLE\00"
@str-CLASP-CLEAVIR = private unnamed_addr constant [14 x i8] c"CLASP-CLEAVIR\00"
@str-EQL-UNDERLYING = private unnamed_addr constant [15 x i8] c"EQL-UNDERLYING\00"
@str-POSITION = private unnamed_addr constant [9 x i8] c"POSITION\00"
@str-AUFFUELLZEICHEN = private unnamed_addr constant [16 x i8] c"AUFFUELLZEICHEN\00"
@str-NTHCDR = private unnamed_addr constant [7 x i8] c"NTHCDR\00"
@"str-KLH=TABELLE-AUSGEBEN_2" = private unnamed_addr constant [23 x i8] c"KLH=TABELLE-AUSGEBEN_2\00"
@str-ZEILENBESCHRIFTUNG = private unnamed_addr constant [19 x i8] c"ZEILENBESCHRIFTUNG\00"
@str-SPALTENBESCHRIFTUNG = private unnamed_addr constant [20 x i8] c"SPALTENBESCHRIFTUNG\00"
@str-TABELLEN-FUNKTION = private unnamed_addr constant [18 x i8] c"TABELLEN-FUNKTION\00"
@str-TABELLEN-ZUGRIFF = private unnamed_addr constant [17 x i8] c"TABELLEN-ZUGRIFF\00"
@str-TABELLEN-TITEL = private unnamed_addr constant [15 x i8] c"TABELLEN-TITEL\00"
@str-ZEILEN-TITEL = private unnamed_addr constant [13 x i8] c"ZEILEN-TITEL\00"
@str-SPALTEN-TITEL = private unnamed_addr constant [14 x i8] c"SPALTEN-TITEL\00"
@str-ZEILEN-BREITE = private unnamed_addr constant [14 x i8] c"ZEILEN-BREITE\00"
@str-SPALTEN-BREITE = private unnamed_addr constant [15 x i8] c"SPALTEN-BREITE\00"
@str-SEITEN-BREITE = private unnamed_addr constant [14 x i8] c"SEITEN-BREITE\00"
@str-SEITENLAENGE = private unnamed_addr constant [13 x i8] c"SEITENLAENGE\00"
@str-FUNKTION-BEI-SEITENUMBRUCH = private unnamed_addr constant [27 x i8] c"FUNKTION-BEI-SEITENUMBRUCH\00"
@"str-&OPTIONAL" = private unnamed_addr constant [10 x i8] c"&OPTIONAL\00"
@str-ARGS = private unnamed_addr constant [5 x i8] c"ARGS\00"
@str-FORMAT-ARG-116673 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116673\00"
@str-QUOTE = private unnamed_addr constant [6 x i8] c"QUOTE\00"
@str-FORMAT-ARG-116674 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116674\00"
@str-CONDITION = private unnamed_addr constant [10 x i8] c"CONDITION\00"
@str-FORMAT-ARG-116651 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116651\00"
@str-FORMAT-ARG-116652 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116652\00"
@str-FORMAT-ARG-116549 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116549\00"
@str-FORMAT-ARG-116550 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116550\00"
@str-FORMAT-ARG-116527 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116527\00"
@str-FORMAT-ARG-116528 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116528\00"
@str-FORMAT-ARG-116508 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116508\00"
@str-FORMAT-ARG-116486 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116486\00"
@str-FORMAT-ARG-116487 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116487\00"
@str-FORMAT-ARG-116488 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116488\00"
@str-FORMAT-ARG-116584 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116584\00"
@str-FORMAT-ARG-116585 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116585\00"
@str-FORMAT-ARG-116466 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116466\00"
@str-FORMAT-ARG-116606 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116606\00"
@str-FORMAT-ARG-116607 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-116607\00"
@CONTAB4236 = internal global [784 x {}*] undef
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 11, void ()* @CLASP-CTOR, i8* null }]

; Function Attrs: uwtable
define internal void @RUN-ALL() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !9 {
entry:
  tail call void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }* nonnull @constants-table, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), i64 784, {}* null)
  tail call void @ltvc_assign_source_file_info_handle(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/program/klh=funktionen.lisp", i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/program/klh=funktionen.lisp", i64 0, i64 0), i64 0, i32 1, i32* nonnull @source-file-info-handle)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.56)
  ret void
}

; Function Attrs: nounwind
declare i32 @__gxx_personality_v0(...) #1

; Function Attrs: nounwind
declare void @ltvc_assign_source_file_info_handle(i8*, i8*, i64, i32, i32*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^1^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !13 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^1^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G113748.0 = phi {}* [ %18, %header-check-br ], [ %G113748.1, %normal-dest17 ], [ %G113748.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 34), align 16
  %ptrtoint20 = ptrtoint {}* %G113748.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G113748.0, i64 2, {}* %"closure->KLH=MIN-LISTE", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 34), align 16
  %"closure->KLH=MIN-LISTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=MIN-LISTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MIN-LISTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 0, i64 1, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 33), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113748.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 42), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->KLH=MIN-LISTE", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 55), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->KLH=MIN-LISTE", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 148 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 34), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113748.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #1

; Function Attrs: nounwind
declare void @cc_pop_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @cc_push_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*, { i32, i32, i8*, i8* }*, i64) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=MIN-LISTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !23 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 2
  br i1 %enough-args, label %error, label %continue

tag3:                                             ; preds = %tag35
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest76 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag4:                                             ; preds = %normal-dest335, %header-check-br238, %normal-dest163
  %G113854.0 = phi {}* [ %G113854.1, %normal-dest163 ], [ %vaarg65, %header-check-br238 ], [ %G113854.2, %normal-dest335 ]
  %ptrtoint82 = ptrtoint {}* %G113854.0 to i64
  %entry-point-addr-uint83 = add i64 %ptrtoint82, 7
  %entry-point-addr84 = inttoptr i64 %entry-point-addr-uint83 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point85 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr84, align 8
  %11 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point85({}* %G113854.0, i64 1, {}* %MINIMUM.2, {}* null, {}* null, {}* null)
          to label %normal-dest88 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag6:                                             ; preds = %tag21
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest111 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag12:                                            ; preds = %tag12.lr.ph, %tag23.backedge
  %.val434 = phi {}* [ %23, %tag12.lr.ph ], [ %33, %tag23.backedge ]
  %MINWERT.1451 = phi {}* [ %MINWERT.2, %tag12.lr.ph ], [ %MINWERT.0, %tag23.backedge ]
  %MINIMUM.1450 = phi {}* [ %MINIMUM.2, %tag12.lr.ph ], [ %MINIMUM.0, %tag23.backedge ]
  %"%DOLIST-VAR.1449" = phi {}* [ %"%DOLIST-VAR.0", %tag12.lr.ph ], [ %"%DOLIST-VAR.1.be", %tag23.backedge ]
  %14 = ptrtoint {}* %"%DOLIST-VAR.1449" to i64
  %tag-only135361 = and i64 %14, 7
  %consp-test136 = icmp eq i64 %tag-only135361, 3
  %.val433 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G113833.0 = select i1 %consp-test136, {}* %.val433, {}* %.val434
  %15 = icmp eq {}* %G113833.0, %.val434
  br i1 %15, label %tag32, label %tag51

tag15:                                            ; preds = %tag18
  %16 = add i64 %21, -3
  %17 = inttoptr i64 %16 to {}**
  %18 = load {}*, {}** %17, align 8
  br label %tag38

tag17:                                            ; preds = %tag38, %header-check-br302
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest156 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag18:                                            ; preds = %tag55.tag18_crit_edge, %kw-exit-block
  %.val443 = phi {}* [ %.pre, %kw-exit-block ], [ %.val430.pre, %tag55.tag18_crit_edge ]
  %vergleichsfunktion.0 = phi {}* [ %vergleichsfunktion.3, %kw-exit-block ], [ %53, %tag55.tag18_crit_edge ]
  %21 = ptrtoint {}* %vaarg to i64
  %tag-only174353 = and i64 %21, 7
  %consp-test175 = icmp eq i64 %tag-only174353, 3
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G113884.0 = select i1 %consp-test175, {}* %.val, {}* %.val443
  %22 = icmp eq {}* %G113884.0, %.val443
  br i1 %22, label %tag21, label %tag15

tag19:                                            ; preds = %normal-dest79, %tag20
  %23 = phi {}* [ %76, %tag20 ], [ %75, %normal-dest79 ]
  %"%DOLIST-VAR.0" = phi {}* [ %27, %tag20 ], [ %"%DOLIST-VAR.2", %normal-dest79 ]
  %24 = icmp eq {}* %"%DOLIST-VAR.0", %23
  br i1 %24, label %tag31, label %tag12.lr.ph

tag12.lr.ph:                                      ; preds = %tag19
  %irc-bit-cast233 = bitcast {}* %vaarg65 to i8*
  %gep234 = getelementptr inbounds i8, i8* %irc-bit-cast233, i64 -9
  %irc-bit-cast235 = bitcast i8* %gep234 to i64*
  %ptrtoint199 = ptrtoint {}* %vergleichsfunktion.0 to i64
  %tag-only200 = and i64 %ptrtoint199, 7
  %test201 = icmp eq i64 %tag-only200, 1
  %irc-bit-cast202 = bitcast {}* %vergleichsfunktion.0 to i8*
  %gep203 = getelementptr inbounds i8, i8* %irc-bit-cast202, i64 -9
  %irc-bit-cast204 = bitcast i8* %gep203 to i64*
  br label %tag12

tag20:                                            ; preds = %normal-dest88
  %25 = add i64 %21, 5
  %26 = inttoptr i64 %25 to {}**
  %27 = load {}*, {}** %26, align 8
  br label %tag19

tag21:                                            ; preds = %tag18
  %28 = icmp eq {}* %vaarg, %.val443
  %G113877.0 = select i1 %28, {}* %.val, {}* %.val443
  %29 = icmp eq {}* %G113877.0, %.val443
  br i1 %29, label %tag6, label %tag38

tag27:                                            ; preds = %normal-dest282
  %30 = add i64 %14, 5
  %31 = inttoptr i64 %30 to {}**
  %32 = load {}*, {}** %31, align 8
  br label %tag23.backedge

tag23.backedge:                                   ; preds = %tag27, %normal-dest261
  %33 = phi {}* [ %118, %tag27 ], [ %114, %normal-dest261 ]
  %"%DOLIST-VAR.1.be" = phi {}* [ %32, %tag27 ], [ %"%DOLIST-VAR.3", %normal-dest261 ]
  %34 = icmp eq {}* %"%DOLIST-VAR.1.be", %33
  br i1 %34, label %tag31, label %tag12

tag29:                                            ; preds = %normal-dest296, %header-check-br229, %normal-dest145
  %G113803.0 = phi {}* [ %G113803.1, %normal-dest145 ], [ %vaarg65, %header-check-br229 ], [ %G113803.2, %normal-dest296 ]
  %ptrtoint186 = ptrtoint {}* %G113803.0 to i64
  %entry-point-addr-uint187 = add i64 %ptrtoint186, 7
  %entry-point-addr188 = inttoptr i64 %entry-point-addr-uint187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr188, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point189({}* %G113803.0, i64 1, {}* %WAS.0, {}* null, {}* null, {}* null)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit

tag31:                                            ; preds = %tag40, %tag23.backedge, %tag35, %tag19
  %MINIMUM.1.lcssa = phi {}* [ %MINIMUM.2, %tag19 ], [ %MINIMUM.2, %tag35 ], [ %MINIMUM.0, %tag23.backedge ], [ %MINIMUM.0, %tag40 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %MINIMUM.1.lcssa, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

tag32:                                            ; preds = %tag12
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest210 unwind label %cleanup-lpad.loopexit

tag35:                                            ; preds = %normal-dest88
  %40 = icmp eq {}* %vaarg, %76
  %.val431 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G113847.0 = select i1 %40, {}* %.val431, {}* %76
  %41 = icmp eq {}* %G113847.0, %76
  br i1 %41, label %tag3, label %tag31

tag36:                                            ; preds = %normal-dest217, %tag51
  %WAS.0 = phi {}* [ %51, %tag51 ], [ %WAS.1, %normal-dest217 ]
  br i1 %test241, label %header-check-br229, label %tag48

tag38:                                            ; preds = %tag21, %normal-dest119, %tag15
  %MINIMUM.2 = phi {}* [ %18, %tag15 ], [ %MINIMUM.3, %normal-dest119 ], [ %.val443, %tag21 ]
  %ptrtoint239 = ptrtoint {}* %vaarg65 to i64
  %tag-only240 = and i64 %ptrtoint239, 7
  %test241 = icmp eq i64 %tag-only240, 1
  br i1 %test241, label %header-check-br238, label %tag17

tag40:                                            ; preds = %normal-dest282
  %42 = icmp eq {}* %"%DOLIST-VAR.1449", %118
  %.val435 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G113779.0 = select i1 %42, {}* %.val435, {}* %118
  %43 = icmp eq {}* %G113779.0, %118
  br i1 %43, label %tag44, label %tag31

tag44:                                            ; preds = %tag40
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit

tag47:                                            ; preds = %normal-dest321, %header-check-br198, %normal-dest104
  %G113788.0 = phi {}* [ %G113788.1, %normal-dest104 ], [ %vergleichsfunktion.0, %header-check-br198 ], [ %G113788.2, %normal-dest321 ]
  %ptrtoint276 = ptrtoint {}* %G113788.0 to i64
  %entry-point-addr-uint277 = add i64 %ptrtoint276, 7
  %entry-point-addr278 = inttoptr i64 %entry-point-addr-uint277 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point279 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr278, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point279({}* %G113788.0, i64 2, {}* %G113727.0, {}* %MINWERT.1451, {}* null, {}* null)
          to label %normal-dest282 unwind label %cleanup-lpad.loopexit

tag48:                                            ; preds = %tag36, %header-check-br
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest289 unwind label %cleanup-lpad.loopexit

tag51:                                            ; preds = %tag12
  %49 = add i64 %14, -3
  %50 = inttoptr i64 %49 to {}**
  %51 = load {}*, {}** %50, align 8
  br label %tag36

tag55:                                            ; preds = %continue, %kw-exit-block
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 1), align 8
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %tag55.tag18_crit_edge unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag55.tag18_crit_edge:                            ; preds = %tag55
  %.val430.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag18

tag56:                                            ; preds = %normal-dest192, %header-check-br267
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest314 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %maybe-more-tests275, %normal-dest97, %maybe-more-tests, %normal-dest138, %tag29, %tag32, %normal-dest210, %tag44, %normal-dest254, %tag47, %tag48, %normal-dest289, %tag56, %normal-dest314
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %loop-kw-args
  %lpad.loopexit444 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %normal-dest328, %maybe-more-tests310, %tag55, %normal-dest156, %tag17, %normal-dest111, %tag6, %tag4, %normal-dest76, %tag3, %loop-cont, %error
  %lpad.loopexit.split-lp445 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit444, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp445, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @":::global-str-KLH=MIN-LISTE^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 2)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs63 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-164 = add i64 %rem-nargs63, -1
  store i64 %rem-nargs-164, i64* %"remaining-nargs*", align 8
  %vaarg65 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %56 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 67), align 8
  %58 = icmp eq i64 %nargs, 2
  br i1 %58, label %tag55, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G113732.0 = phi {}* [ %G113732.2, %advance-arg-idx-block ], [ %59, %loop-kw-args.preheader ]
  %vergleichsfunktion.1 = phi {}* [ %vergleichsfunktion.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %63, %advance-arg-idx-block ], [ 2, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs68 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-169 = add i64 %rem-nargs68, -1
  store i64 %rem-nargs-169, i64* %"remaining-nargs*", align 8
  %vaarg70 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs71 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-172 = add i64 %rem-nargs71, -1
  store i64 %rem-nargs-172, i64* %"remaining-nargs*", align 8
  %vaarg73 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg70, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH=MIN-LISTE^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest74 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

kw-exit-block:                                    ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %60 = icmp eq {}* %G113732.2, %.pre
  br i1 %60, label %tag55, label %tag18

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg70, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH=MIN-LISTE^COMMON-LISP-USER^FN^^^DESC")
          to label %kw-exit-block unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest74:                                    ; preds = %loop-kw-args
  %61 = icmp eq {}* %57, %vaarg70
  br i1 %61, label %aok-block, label %"kw-:VERGLEICHSFUNKTION-test"

aok-block:                                        ; preds = %normal-dest74
  %62 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg73)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %matched-kw-block, %next-kw-block, %aok-block
  %G113732.2 = phi {}* [ %G113732.0, %aok-block ], [ %G113732.0, %next-kw-block ], [ %G113732.3, %matched-kw-block ]
  %vergleichsfunktion.3 = phi {}* [ %vergleichsfunktion.1, %aok-block ], [ %vergleichsfunktion.1, %next-kw-block ], [ %vergleichsfunktion.4, %matched-kw-block ]
  %phi-this-was-aok = phi i64 [ %62, %aok-block ], [ %phi-saw-aok, %next-kw-block ], [ %phi-saw-aok, %matched-kw-block ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %69, %next-kw-block ], [ %phi-bad-kw-idx, %matched-kw-block ]
  %63 = add i64 %phi-reg-arg-idx, 2
  %64 = icmp slt i64 %63, %nargs
  br i1 %64, label %loop-kw-args, label %loop-cont

"kw-:VERGLEICHSFUNKTION-test":                    ; preds = %normal-dest74
  %65 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 69), align 8
  %66 = call i64 @cc_matchKeywordOnce({}* %65, {}* %vaarg70, {}* %G113732.0)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %next-kw-block, label %matched-kw-block

matched-kw-block:                                 ; preds = %"kw-:VERGLEICHSFUNKTION-test"
  %68 = icmp eq i64 %66, 2
  %G113732.3 = select i1 %68, {}* %G113732.0, {}* %56
  %vergleichsfunktion.4 = select i1 %68, {}* %vergleichsfunktion.1, {}* %vaarg73
  br label %advance-arg-idx-block

next-kw-block:                                    ; preds = %"kw-:VERGLEICHSFUNKTION-test"
  %69 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest76:                                    ; preds = %tag3
  %70 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %71 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %72 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %73 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 5, {}* %70, {}* %71, {}* %vaarg, {}* %72, {}* %73)
          to label %normal-dest79 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest79:                                    ; preds = %normal-dest76
  %.elt399 = extractvalue { {}*, i64 } %74, 0
  %.elt401 = extractvalue { {}*, i64 } %74, 1
  %cond350 = icmp eq i64 %.elt401, 0
  %75 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %"%DOLIST-VAR.2" = select i1 %cond350, {}* %75, {}* %.elt399
  br label %tag19

normal-dest88:                                    ; preds = %tag4
  %.elt357 = extractvalue { {}*, i64 } %11, 0
  %.elt359 = extractvalue { {}*, i64 } %11, 1
  %cond341 = icmp eq i64 %.elt359, 0
  %76 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %MINWERT.2 = select i1 %cond341, {}* %76, {}* %.elt357
  br i1 %consp-test175, label %tag20, label %tag35

normal-dest97:                                    ; preds = %maybe-more-tests275
  %ptrtoint98 = ptrtoint {}* %117 to i64
  %entry-point-addr-uint99 = add i64 %ptrtoint98, 7
  %entry-point-addr100 = inttoptr i64 %entry-point-addr-uint99 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr100, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point101({}* %117, i64 1, {}* nonnull %vergleichsfunktion.0, {}* null, {}* null, {}* null)
          to label %normal-dest104 unwind label %cleanup-lpad.loopexit

normal-dest104:                                   ; preds = %normal-dest97
  %.elt384 = extractvalue { {}*, i64 } %77, 0
  %.elt386 = extractvalue { {}*, i64 } %77, 1
  %cond347 = icmp eq i64 %.elt386, 0
  %78 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113788.1 = select i1 %cond347, {}* %78, {}* %.elt384
  br label %tag47

normal-dest111:                                   ; preds = %tag6
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %80 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %81 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %82 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint113 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint114 = add i64 %ptrtoint113, 7
  %entry-point-addr115 = inttoptr i64 %entry-point-addr-uint114 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point116 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr115, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point116({}* %13, i64 5, {}* %79, {}* %80, {}* %vaarg, {}* %81, {}* %82)
          to label %normal-dest119 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest119:                                   ; preds = %normal-dest111
  %.elt407 = extractvalue { {}*, i64 } %83, 0
  %.elt409 = extractvalue { {}*, i64 } %83, 1
  %cond352 = icmp eq i64 %.elt409, 0
  %84 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %MINIMUM.3 = select i1 %cond352, {}* %84, {}* %.elt407
  br label %tag38

normal-dest138:                                   ; preds = %maybe-more-tests
  %ptrtoint139 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint140 = add i64 %ptrtoint139, 7
  %entry-point-addr141 = inttoptr i64 %entry-point-addr-uint140 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point142 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr141, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point142({}* %89, i64 1, {}* nonnull %vaarg65, {}* null, {}* null, {}* null)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit

normal-dest145:                                   ; preds = %normal-dest138
  %.elt388 = extractvalue { {}*, i64 } %85, 0
  %.elt390 = extractvalue { {}*, i64 } %85, 1
  %cond348 = icmp eq i64 %.elt390, 0
  %86 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113803.1 = select i1 %cond348, {}* %86, {}* %.elt388
  br label %tag29

header-check-br:                                  ; preds = %header-check-br229
  %.off439 = add i64 %105, -1001
  %87 = icmp ult i64 %.off439, 5
  br i1 %87, label %maybe-more-tests, label %tag48

maybe-more-tests:                                 ; preds = %header-check-br
  %88 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit

normal-dest156:                                   ; preds = %tag17
  %90 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %91 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %92 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %93 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 26), align 16
  %ptrtoint157 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint158 = add i64 %ptrtoint157, 7
  %entry-point-addr159 = inttoptr i64 %entry-point-addr-uint158 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point160 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr159, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point160({}* %20, i64 5, {}* %90, {}* %91, {}* %vaarg65, {}* %92, {}* %93)
          to label %normal-dest163 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest163:                                   ; preds = %normal-dest156
  %.elt = extractvalue { {}*, i64 } %94, 0
  %.elt355 = extractvalue { {}*, i64 } %94, 1
  %cond = icmp eq i64 %.elt355, 0
  %95 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113854.1 = select i1 %cond, {}* %95, {}* %.elt
  br label %tag4

normal-dest192:                                   ; preds = %tag29
  %.elt367 = extractvalue { {}*, i64 } %35, 0
  %.elt369 = extractvalue { {}*, i64 } %35, 1
  %cond343 = icmp eq i64 %.elt369, 0
  %96 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113727.0 = select i1 %cond343, {}* %96, {}* %.elt367
  br i1 %test201, label %header-check-br198, label %tag56

header-check-br198:                               ; preds = %normal-dest192
  %97 = load i64, i64* %irc-bit-cast204, align 8
  %.off = add i64 %97, -913
  %98 = icmp ult i64 %.off, 85
  br i1 %98, label %tag47, label %header-check-br267

normal-dest210:                                   ; preds = %tag32
  %99 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %100 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %101 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %102 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint211 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint212 = add i64 %ptrtoint211, 7
  %entry-point-addr213 = inttoptr i64 %entry-point-addr-uint212 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point214 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr213, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point214({}* %39, i64 5, {}* %99, {}* %100, {}* %"%DOLIST-VAR.1449", {}* %101, {}* %102)
          to label %normal-dest217 unwind label %cleanup-lpad.loopexit

normal-dest217:                                   ; preds = %normal-dest210
  %.elt392 = extractvalue { {}*, i64 } %103, 0
  %.elt394 = extractvalue { {}*, i64 } %103, 1
  %cond349 = icmp eq i64 %.elt394, 0
  %104 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %WAS.1 = select i1 %cond349, {}* %104, {}* %.elt392
  br label %tag36

header-check-br229:                               ; preds = %tag36
  %105 = load i64, i64* %irc-bit-cast235, align 8
  %.off438 = add i64 %105, -913
  %106 = icmp ult i64 %.off438, 85
  br i1 %106, label %tag29, label %header-check-br

header-check-br238:                               ; preds = %tag38
  %irc-bit-cast242 = bitcast {}* %vaarg65 to i8*
  %gep243 = getelementptr inbounds i8, i8* %irc-bit-cast242, i64 -9
  %irc-bit-cast244 = bitcast i8* %gep243 to i64*
  %107 = load i64, i64* %irc-bit-cast244, align 8
  %.off440 = add i64 %107, -913
  %108 = icmp ult i64 %.off440, 85
  br i1 %108, label %tag4, label %header-check-br302

normal-dest254:                                   ; preds = %tag44
  %109 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %110 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %111 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %112 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint255 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint256 = add i64 %ptrtoint255, 7
  %entry-point-addr257 = inttoptr i64 %entry-point-addr-uint256 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point258 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr257, align 8
  %113 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point258({}* %45, i64 5, {}* %109, {}* %110, {}* %"%DOLIST-VAR.1449", {}* %111, {}* %112)
          to label %normal-dest261 unwind label %cleanup-lpad.loopexit

normal-dest261:                                   ; preds = %normal-dest254
  %.elt380 = extractvalue { {}*, i64 } %113, 0
  %.elt382 = extractvalue { {}*, i64 } %113, 1
  %cond346 = icmp eq i64 %.elt382, 0
  %114 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %"%DOLIST-VAR.3" = select i1 %cond346, {}* %114, {}* %.elt380
  br label %tag23.backedge

header-check-br267:                               ; preds = %header-check-br198
  %.off437 = add i64 %97, -1001
  %115 = icmp ult i64 %.off437, 5
  br i1 %115, label %maybe-more-tests275, label %tag56

maybe-more-tests275:                              ; preds = %header-check-br267
  %116 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %117 = invoke {}* @cc_safe_fdefinition({}* %116)
          to label %normal-dest97 unwind label %cleanup-lpad.loopexit

normal-dest282:                                   ; preds = %tag47
  %.elt375 = extractvalue { {}*, i64 } %46, 0
  %.elt377 = extractvalue { {}*, i64 } %46, 1
  %cond345 = icmp eq i64 %.elt377, 0
  %118 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113786.0 = select i1 %cond345, {}* %118, {}* %.elt375
  %119 = icmp eq {}* %G113786.0, %118
  %MINIMUM.0 = select i1 %119, {}* %MINIMUM.1450, {}* %WAS.0
  %MINWERT.0 = select i1 %119, {}* %MINWERT.1451, {}* %G113727.0
  br i1 %consp-test136, label %tag27, label %tag40

normal-dest289:                                   ; preds = %tag48
  %120 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %121 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %122 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %123 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 29), align 8
  %ptrtoint290 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint291 = add i64 %ptrtoint290, 7
  %entry-point-addr292 = inttoptr i64 %entry-point-addr-uint291 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point293 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr292, align 8
  %124 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point293({}* %48, i64 5, {}* %120, {}* %121, {}* %vaarg65, {}* %122, {}* %123)
          to label %normal-dest296 unwind label %cleanup-lpad.loopexit

normal-dest296:                                   ; preds = %normal-dest289
  %.elt363 = extractvalue { {}*, i64 } %124, 0
  %.elt365 = extractvalue { {}*, i64 } %124, 1
  %cond342 = icmp eq i64 %.elt365, 0
  %125 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113803.2 = select i1 %cond342, {}* %125, {}* %.elt363
  br label %tag29

header-check-br302:                               ; preds = %header-check-br238
  %.off441 = add i64 %107, -1001
  %126 = icmp ult i64 %.off441, 5
  br i1 %126, label %maybe-more-tests310, label %tag17

maybe-more-tests310:                              ; preds = %header-check-br302
  %127 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %128 = invoke {}* @cc_safe_fdefinition({}* %127)
          to label %normal-dest328 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest314:                                   ; preds = %tag56
  %129 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %130 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %131 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %132 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 30), align 16
  %ptrtoint315 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint316 = add i64 %ptrtoint315, 7
  %entry-point-addr317 = inttoptr i64 %entry-point-addr-uint316 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point318 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr317, align 8
  %133 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point318({}* %55, i64 5, {}* %129, {}* %130, {}* %vergleichsfunktion.0, {}* %131, {}* %132)
          to label %normal-dest321 unwind label %cleanup-lpad.loopexit

normal-dest321:                                   ; preds = %normal-dest314
  %.elt371 = extractvalue { {}*, i64 } %133, 0
  %.elt373 = extractvalue { {}*, i64 } %133, 1
  %cond344 = icmp eq i64 %.elt373, 0
  %134 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113788.2 = select i1 %cond344, {}* %134, {}* %.elt371
  br label %tag47

normal-dest328:                                   ; preds = %maybe-more-tests310
  %ptrtoint329 = ptrtoint {}* %128 to i64
  %entry-point-addr-uint330 = add i64 %ptrtoint329, 7
  %entry-point-addr331 = inttoptr i64 %entry-point-addr-uint330 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point332 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr331, align 8
  %135 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point332({}* %128, i64 1, {}* nonnull %vaarg65, {}* null, {}* null, {}* null)
          to label %normal-dest335 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest335:                                   ; preds = %normal-dest328
  %.elt403 = extractvalue { {}*, i64 } %135, 0
  %.elt405 = extractvalue { {}*, i64 } %135, 1
  %cond351 = icmp eq i64 %.elt405, 0
  %136 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113854.2 = select i1 %cond351, {}* %136, {}* %.elt403
  br label %tag4
}

declare void @va_notEnoughArgumentsException(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @unreachableError() local_unnamed_addr #1

declare void @cc_ifNotKeywordException({}*, i64, { i32, i32, i8*, i8* }*, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @cc_allowOtherKeywords(i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @cc_matchKeywordOnce({}*, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @cc_trackFirstUnexpectedKeyword(i64, i64) local_unnamed_addr #1

declare void @cc_ifBadKeywordArgumentException(i64, i64, {}*, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }*) local_unnamed_addr #3

declare {}* @cc_safe_fdefinition({}*) local_unnamed_addr #3

declare {}* @cc_enclose({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) local_unnamed_addr #3

declare {}* @cc_safe_setfdefinition({}*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_setSymbolValue({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^48^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !24 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^48^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G113921.0 = phi {}* [ %18, %header-check-br ], [ %G113921.1, %normal-dest17 ], [ %G113921.2, %normal-dest67 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 74), align 16
  %ptrtoint20 = ptrtoint {}* %G113921.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G113921.0, i64 2, {}* %"closure->KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 74), align 16
  %"closure->KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2040, i64 48, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 73), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113921.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 76), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 87), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 192 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 74), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113921.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag2

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !25 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 3
  br i1 %enough-args, label %error, label %continue

tag4:                                             ; preds = %tag29
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit

tag5:                                             ; preds = %tag41
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest82 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag8:                                             ; preds = %tag53
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest99 unwind label %cleanup-lpad.loopexit

tag9:                                             ; preds = %normal-dest207
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest113 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag10:                                            ; preds = %continue, %kw-exit-block
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 70), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %tag10.tag37_crit_edge unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag10.tag37_crit_edge:                            ; preds = %tag10
  %.pre338.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag37

tag13:                                            ; preds = %tag28
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest128 unwind label %cleanup-lpad.loopexit

tag14:                                            ; preds = %tag53, %tag27, %normal-dest106
  %21 = phi {}* [ %85, %normal-dest106 ], [ %.val309, %tag27 ], [ %.val309, %tag53 ]
  %object.0 = phi {}* [ %object.1, %normal-dest106 ], [ %.val309, %tag27 ], [ %.val, %tag53 ]
  %22 = icmp eq {}* %object.0, %21
  %.val310 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G113941.0 = select i1 %22, {}* %.val310, {}* %21
  %23 = icmp eq {}* %G113941.0, %21
  br i1 %23, label %tag42, label %tag20

tag17:                                            ; preds = %tag20, %header-check-br236
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest143 unwind label %cleanup-lpad.loopexit

tag19:                                            ; preds = %tag28, %normal-dest136, %tag23
  %G114016.0 = phi {}* [ %32, %tag23 ], [ %G114016.1, %normal-dest136 ], [ %.val319, %tag28 ]
  %ptrtoint156 = ptrtoint {}* %G114015.0 to i64
  %entry-point-addr-uint157 = add i64 %ptrtoint156, 7
  %entry-point-addr158 = inttoptr i64 %entry-point-addr-uint157 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point159 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr158, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point159({}* %G114015.0, i64 2, {}* %G114016.0, {}* %vaarg60, {}* null, {}* null)
          to label %normal-dest162 unwind label %cleanup-lpad.loopexit

tag20:                                            ; preds = %tag14
  br i1 %test, label %header-check-br, label %tag17

tag22:                                            ; preds = %tag34
  %27 = add i64 %33, 5
  %28 = inttoptr i64 %27 to {}**
  %29 = load {}*, {}** %28, align 8
  br label %tag27.backedge

tag23:                                            ; preds = %tag35
  %30 = add i64 %33, -3
  %31 = inttoptr i64 %30 to {}**
  %32 = load {}*, {}** %31, align 8
  br label %tag19

tag27:                                            ; preds = %tag27.backedge, %tag37
  %.val309 = phi {}* [ %.pre338, %tag37 ], [ %.val309.be, %tag27.backedge ]
  %RESTZEIGER.0 = phi {}* [ %vaarg, %tag37 ], [ %RESTZEIGER.0.be, %tag27.backedge ]
  %33 = ptrtoint {}* %RESTZEIGER.0 to i64
  %tag-only171258 = and i64 %33, 7
  %consp-test = icmp eq i64 %tag-only171258, 3
  br i1 %consp-test, label %tag14, label %tag53

tag28:                                            ; preds = %tag35
  %34 = icmp eq {}* %RESTZEIGER.0, %.val319
  %G114027.0 = select i1 %34, {}* %.val312, {}* %.val319
  %35 = icmp eq {}* %G114027.0, %.val319
  br i1 %35, label %tag13, label %tag19

tag29:                                            ; preds = %tag34
  %36 = icmp eq {}* %RESTZEIGER.0, %103
  %.val316 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G113971.0 = select i1 %36, {}* %.val316, {}* %103
  %37 = icmp eq {}* %G113971.0, %103
  br i1 %37, label %tag4, label %tag27.backedge

tag27.backedge:                                   ; preds = %tag29, %normal-dest78, %tag22
  %.val309.be = phi {}* [ %103, %tag22 ], [ %73, %normal-dest78 ], [ %103, %tag29 ]
  %RESTZEIGER.0.be = phi {}* [ %29, %tag22 ], [ %G113904.1, %normal-dest78 ], [ %103, %tag29 ]
  br label %tag27

tag31:                                            ; preds = %normal-dest216
  %38 = add i64 %33, 5
  %39 = inttoptr i64 %38 to {}**
  %40 = load {}*, {}** %39, align 8
  br label %tag46

tag34:                                            ; preds = %normal-dest162
  br i1 %consp-test, label %tag22, label %tag29

tag35:                                            ; preds = %normal-dest230, %header-check-br, %normal-dest150
  %.val319 = phi {}* [ %102, %normal-dest150 ], [ %21, %header-check-br ], [ %108, %normal-dest230 ]
  %G114015.0 = phi {}* [ %G114015.1, %normal-dest150 ], [ %vergleichstest.0, %header-check-br ], [ %G114015.2, %normal-dest230 ]
  %.val312 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114034.0 = select i1 %consp-test, {}* %.val312, {}* %.val319
  %41 = icmp eq {}* %G114034.0, %.val319
  br i1 %41, label %tag28, label %tag23

tag37:                                            ; preds = %tag10.tag37_crit_edge, %kw-exit-block
  %.pre338 = phi {}* [ %.pre, %kw-exit-block ], [ %.pre338.pre, %tag10.tag37_crit_edge ]
  %vergleichstest.0 = phi {}* [ %vergleichstest.3, %kw-exit-block ], [ %18, %tag10.tag37_crit_edge ]
  %ptrtoint168 = ptrtoint {}* %vergleichstest.0 to i64
  %tag-only = and i64 %ptrtoint168, 7
  %test = icmp eq i64 %tag-only, 1
  %irc-bit-cast169 = bitcast {}* %vergleichstest.0 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast169, i64 -9
  %irc-bit-cast170 = bitcast i8* %gep to i64*
  br label %tag27

tag39:                                            ; preds = %normal-dest207
  %.elt270 = extractvalue { {}*, i64 } %49, 1
  %cond252 = icmp eq i64 %.elt270, 0
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %.elt268 = extractvalue { {}*, i64 } %49, 0
  %G113899113900.0 = select i1 %cond252, {}* %42, {}* %.elt268
  %43 = add i64 %33, 5
  %memset2-dest = inttoptr i64 %43 to {}**
  store {}* %G113899113900.0, {}** %memset2-dest, align 8
  br label %tag42

tag41:                                            ; preds = %normal-dest216
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %45 = icmp eq {}* %RESTZEIGER.0, %44
  %.val314 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114005.0 = select i1 %45, {}* %.val314, {}* %44
  %46 = icmp eq {}* %G114005.0, %44
  br i1 %46, label %tag5, label %tag46

tag42:                                            ; preds = %tag14, %normal-dest113, %tag39
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %47 = insertvalue { {}*, i64 } undef, {}* %vaarg, 0
  %48 = insertvalue { {}*, i64 } %47, i64 1, 1
  ret { {}*, i64 } %48

tag46:                                            ; preds = %tag41, %normal-dest90, %tag31
  %G113994.0 = phi {}* [ %40, %tag31 ], [ %G113994.1, %normal-dest90 ], [ %44, %tag41 ]
  %ptrtoint201 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint202 = add i64 %ptrtoint201, 7
  %entry-point-addr203 = inttoptr i64 %entry-point-addr-uint202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr203, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point204({}* %51, i64 2, {}* %vaarg64, {}* %G113994.0, {}* null, {}* null)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag47:                                            ; preds = %normal-dest162
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest216 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag53:                                            ; preds = %tag27
  %52 = icmp eq {}* %RESTZEIGER.0, %.val309
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G113954.0 = select i1 %52, {}* %.val, {}* %.val309
  %53 = icmp eq {}* %G113954.0, %.val309
  br i1 %53, label %tag8, label %tag14

cleanup-lpad.loopexit:                            ; preds = %tag4, %normal-dest75, %tag8, %normal-dest99, %tag13, %normal-dest128, %tag17, %normal-dest143, %tag19, %maybe-more-tests244, %normal-dest223
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %loop-kw-args
  %lpad.loopexit321 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %tag47, %tag46, %tag10, %normal-dest113, %tag9, %normal-dest82, %tag5, %loop-cont, %error
  %lpad.loopexit.split-lp322 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit321, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp322, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @":::global-str-KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 3)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs58 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-159 = add i64 %rem-nargs58, -1
  store i64 %rem-nargs-159, i64* %"remaining-nargs*", align 8
  %vaarg60 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs62 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-163 = add i64 %rem-nargs62, -1
  store i64 %rem-nargs-163, i64* %"remaining-nargs*", align 8
  %vaarg64 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 67), align 8
  %56 = icmp eq i64 %nargs, 3
  br i1 %56, label %tag10, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G113905.0 = phi {}* [ %G113905.2, %advance-arg-idx-block ], [ %57, %loop-kw-args.preheader ]
  %vergleichstest.1 = phi {}* [ %vergleichstest.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %61, %advance-arg-idx-block ], [ 3, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs67 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-168 = add i64 %rem-nargs67, -1
  store i64 %rem-nargs-168, i64* %"remaining-nargs*", align 8
  %vaarg69 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs70 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-171 = add i64 %rem-nargs70, -1
  store i64 %rem-nargs-171, i64* %"remaining-nargs*", align 8
  %vaarg72 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg69, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

kw-exit-block:                                    ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %58 = icmp eq {}* %G113905.2, %.pre
  br i1 %58, label %tag10, label %tag37

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg69, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^^DESC")
          to label %kw-exit-block unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest73:                                    ; preds = %loop-kw-args
  %59 = icmp eq {}* %55, %vaarg69
  br i1 %59, label %aok-block, label %"kw-:VERGLEICHSTEST-test"

aok-block:                                        ; preds = %normal-dest73
  %60 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg72)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %matched-kw-block, %next-kw-block, %aok-block
  %G113905.2 = phi {}* [ %G113905.0, %aok-block ], [ %G113905.0, %next-kw-block ], [ %G113905.3, %matched-kw-block ]
  %vergleichstest.3 = phi {}* [ %vergleichstest.1, %aok-block ], [ %vergleichstest.1, %next-kw-block ], [ %vergleichstest.4, %matched-kw-block ]
  %phi-this-was-aok = phi i64 [ %60, %aok-block ], [ %phi-saw-aok, %next-kw-block ], [ %phi-saw-aok, %matched-kw-block ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %67, %next-kw-block ], [ %phi-bad-kw-idx, %matched-kw-block ]
  %61 = add i64 %phi-reg-arg-idx, 2
  %62 = icmp slt i64 %61, %nargs
  br i1 %62, label %loop-kw-args, label %loop-cont

"kw-:VERGLEICHSTEST-test":                        ; preds = %normal-dest73
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 91), align 8
  %64 = call i64 @cc_matchKeywordOnce({}* %63, {}* %vaarg69, {}* %G113905.0)
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %next-kw-block, label %matched-kw-block

matched-kw-block:                                 ; preds = %"kw-:VERGLEICHSTEST-test"
  %66 = icmp eq i64 %64, 2
  %G113905.3 = select i1 %66, {}* %G113905.0, {}* %54
  %vergleichstest.4 = select i1 %66, {}* %vergleichstest.1, {}* %vaarg72
  br label %advance-arg-idx-block

next-kw-block:                                    ; preds = %"kw-:VERGLEICHSTEST-test"
  %67 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest75:                                    ; preds = %tag4
  %68 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %69 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %70 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %71 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 5, {}* %68, {}* %69, {}* %RESTZEIGER.0, {}* %70, {}* %71)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit

normal-dest78:                                    ; preds = %normal-dest75
  %.elt285 = extractvalue { {}*, i64 } %72, 0
  %.elt287 = extractvalue { {}*, i64 } %72, 1
  %cond254 = icmp eq i64 %.elt287, 0
  %73 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113904.1 = select i1 %cond254, {}* %73, {}* %.elt285
  br label %tag27.backedge

normal-dest82:                                    ; preds = %tag5
  %74 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %75 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %76 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %77 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint84 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %12, i64 5, {}* %74, {}* %75, {}* %RESTZEIGER.0, {}* %76, {}* %77)
          to label %normal-dest90 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest90:                                    ; preds = %normal-dest82
  %.elt280 = extractvalue { {}*, i64 } %78, 0
  %.elt282 = extractvalue { {}*, i64 } %78, 1
  %cond253 = icmp eq i64 %.elt282, 0
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G113994.1 = select i1 %cond253, {}* %79, {}* %.elt280
  br label %tag46

normal-dest99:                                    ; preds = %tag8
  %80 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %81 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %82 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %83 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint100 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint101 = add i64 %ptrtoint100, 7
  %entry-point-addr102 = inttoptr i64 %entry-point-addr-uint101 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point103 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr102, align 8
  %84 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point103({}* %14, i64 5, {}* %80, {}* %81, {}* %RESTZEIGER.0, {}* %82, {}* %83)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit

normal-dest106:                                   ; preds = %normal-dest99
  %.elt297 = extractvalue { {}*, i64 } %84, 0
  %.elt299 = extractvalue { {}*, i64 } %84, 1
  %cond257 = icmp eq i64 %.elt299, 0
  %85 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %object.1 = select i1 %cond257, {}* %85, {}* %.elt297
  br label %tag14

normal-dest113:                                   ; preds = %tag9
  %86 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %87 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %88 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %89 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %ptrtoint114 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint115 = add i64 %ptrtoint114, 7
  %entry-point-addr116 = inttoptr i64 %entry-point-addr-uint115 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point117 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr116, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point117({}* %16, i64 5, {}* %86, {}* %87, {}* %RESTZEIGER.0, {}* %88, {}* %89)
          to label %tag42 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest128:                                   ; preds = %tag13
  %91 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %92 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %93 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %94 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint130 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint131 = add i64 %ptrtoint130, 7
  %entry-point-addr132 = inttoptr i64 %entry-point-addr-uint131 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point133 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr132, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point133({}* %20, i64 5, {}* %91, {}* %92, {}* %RESTZEIGER.0, {}* %93, {}* %94)
          to label %normal-dest136 unwind label %cleanup-lpad.loopexit

normal-dest136:                                   ; preds = %normal-dest128
  %.elt289 = extractvalue { {}*, i64 } %95, 0
  %.elt291 = extractvalue { {}*, i64 } %95, 1
  %cond255 = icmp eq i64 %.elt291, 0
  %96 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114016.1 = select i1 %cond255, {}* %96, {}* %.elt289
  br label %tag19

normal-dest143:                                   ; preds = %tag17
  %97 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %98 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %99 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %100 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 72), align 16
  %ptrtoint144 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint145 = add i64 %ptrtoint144, 7
  %entry-point-addr146 = inttoptr i64 %entry-point-addr-uint145 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point147 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr146, align 8
  %101 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point147({}* %25, i64 5, {}* %97, {}* %98, {}* %vergleichstest.0, {}* %99, {}* %100)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit

normal-dest150:                                   ; preds = %normal-dest143
  %.elt = extractvalue { {}*, i64 } %101, 0
  %.elt260 = extractvalue { {}*, i64 } %101, 1
  %cond = icmp eq i64 %.elt260, 0
  %102 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114015.1 = select i1 %cond, {}* %102, {}* %.elt
  br label %tag35

normal-dest162:                                   ; preds = %tag19
  %.elt263 = extractvalue { {}*, i64 } %26, 0
  %.elt265 = extractvalue { {}*, i64 } %26, 1
  %cond251 = icmp eq i64 %.elt265, 0
  %103 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114013.0 = select i1 %cond251, {}* %103, {}* %.elt263
  %104 = icmp eq {}* %G114013.0, %103
  br i1 %104, label %tag34, label %tag47

header-check-br:                                  ; preds = %tag20
  %105 = load i64, i64* %irc-bit-cast170, align 8
  %.off = add i64 %105, -913
  %106 = icmp ult i64 %.off, 85
  br i1 %106, label %tag35, label %header-check-br236

normal-dest207:                                   ; preds = %tag46
  br i1 %consp-test, label %tag39, label %tag9

normal-dest216:                                   ; preds = %tag47
  br i1 %consp-test, label %tag31, label %tag41

normal-dest223:                                   ; preds = %maybe-more-tests244
  %ptrtoint224 = ptrtoint {}* %111 to i64
  %entry-point-addr-uint225 = add i64 %ptrtoint224, 7
  %entry-point-addr226 = inttoptr i64 %entry-point-addr-uint225 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point227 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr226, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point227({}* %111, i64 1, {}* nonnull %vergleichstest.0, {}* null, {}* null, {}* null)
          to label %normal-dest230 unwind label %cleanup-lpad.loopexit

normal-dest230:                                   ; preds = %normal-dest223
  %.elt293 = extractvalue { {}*, i64 } %107, 0
  %.elt295 = extractvalue { {}*, i64 } %107, 1
  %cond256 = icmp eq i64 %.elt295, 0
  %108 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114015.2 = select i1 %cond256, {}* %108, {}* %.elt293
  br label %tag35

header-check-br236:                               ; preds = %header-check-br
  %.off320 = add i64 %105, -1001
  %109 = icmp ult i64 %.off320, 5
  br i1 %109, label %maybe-more-tests244, label %tag17

maybe-more-tests244:                              ; preds = %header-check-br236
  %110 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %111 = invoke {}* @cc_safe_fdefinition({}* %110)
          to label %normal-dest223 unwind label %cleanup-lpad.loopexit
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^58^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !26 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^58^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G114091.0 = phi {}* [ %18, %header-check-br ], [ %G114091.1, %normal-dest17 ], [ %G114091.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 125), align 8
  %ptrtoint29 = ptrtoint {}* %G114091.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G114091.0, i64 2, {}* %"closure->KLH=MULTIPLE-GC-SOFORT", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br20
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 125), align 8
  %"closure->KLH=MULTIPLE-GC-SOFORT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2379, i64 58, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114091.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag4

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 127), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->KLH=MULTIPLE-GC-SOFORT", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 129), align 8
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->KLH=MULTIPLE-GC-SOFORT", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 232 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 125), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 124), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114091.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !27 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 0
  br i1 %enough-args, label %error, label %continue

tag2:                                             ; preds = %tag51
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest68 unwind label %cleanup-lpad.loopexit

tag4:                                             ; preds = %header-check-br255, %normal-dest200, %tag22, %normal-dest106
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest82 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag5:                                             ; preds = %header-check-br236, %tag34
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 137), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest84 unwind label %cleanup-lpad.loopexit

tag6:                                             ; preds = %header-check-br255, %tag22
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 137), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest99 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %tag39
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 120), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest164 unwind label %cleanup-lpad.loopexit

tag10:                                            ; preds = %tag24, %normal-dest171
  %.in = phi {}* [ %79, %normal-dest171 ], [ %76, %tag24 ]
  %G114115.0 = phi {}* [ %G114115.1, %normal-dest171 ], [ %., %tag24 ]
  %19 = icmp eq {}* %G114115.0, %.in
  br i1 %19, label %tag46, label %tag52

tag11:                                            ; preds = %normal-dest92
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 139), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit

tag22:                                            ; preds = %tag52
  br i1 %fixnump-test217, label %tag6, label %tag4

tag24:                                            ; preds = %tag39
  %22 = icmp slt {}* %VAR.0, inttoptr (i64 20 to {}*)
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %. = select i1 %22, {}* %23, {}* %76
  br label %tag10

tag30:                                            ; preds = %normal-dest200
  br i1 %fixnump-test217, label %tag51, label %tag43

tag34:                                            ; preds = %tag47
  %.old = and i64 %ptrtoint237, 3
  %fixnump-test191.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test191.old, label %tag5, label %tag44

tag35:                                            ; preds = %normal-dest106
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 139), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest193 unwind label %cleanup-lpad.loopexit

tag39:                                            ; preds = %normal-dest121
  %fixnum-tag-only216279 = and i64 %ptrtoint237, 3
  %fixnump-test217 = icmp eq i64 %fixnum-tag-only216279, 0
  br i1 %fixnump-test217, label %tag24, label %tag7

tag42:                                            ; preds = %tag46, %normal-dest254
  %return-value.sroa.19.0 = phi i64 [ %.elt309, %normal-dest254 ], [ 1, %tag46 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt307, %normal-dest254 ], [ %room.0, %tag46 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %26 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %27 = insertvalue { {}*, i64 } %26, i64 %return-value.sroa.19.0, 1
  ret { {}*, i64 } %27

tag43:                                            ; preds = %tag30
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest219 unwind label %cleanup-lpad.loopexit

tag44:                                            ; preds = %header-check-br236, %tag34, %normal-dest121, %normal-dest92
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest233 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag46:                                            ; preds = %tag10
  %32 = icmp eq {}* %room.0, %.in
  br i1 %32, label %tag42, label %tag50

tag47:                                            ; preds = %tag47.backedge, %kw-exit-block
  %VAR.0 = phi {}* [ null, %kw-exit-block ], [ %VAR.0.be, %tag47.backedge ]
  %ptrtoint237 = ptrtoint {}* %VAR.0 to i64
  %tag-only238 = and i64 %ptrtoint237, 7
  %test239 = icmp eq i64 %tag-only238, 1
  br i1 %test239, label %header-check-br236, label %tag34

tag50:                                            ; preds = %tag46
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 122), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag51:                                            ; preds = %tag30
  %35 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %ptrtoint237, i64 4)
  %result = extractvalue { i64, i1 } %35, 0
  %overflow = extractvalue { i64, i1 } %35, 1
  %36 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag2, label %tag47.backedge

tag47.backedge:                                   ; preds = %tag51, %normal-dest75, %normal-dest226
  %VAR.0.be = phi {}* [ %VAR.1, %normal-dest75 ], [ %VAR.2, %normal-dest226 ], [ %36, %tag51 ]
  br label %tag47

tag52:                                            ; preds = %tag10
  br i1 %test239, label %header-check-br255, label %tag22

cleanup-lpad.loopexit:                            ; preds = %tag2, %normal-dest68, %tag5, %normal-dest84, %tag6, %normal-dest99, %tag11, %normal-dest114, %tag7, %normal-dest164, %tag35, %normal-dest193, %tag43, %normal-dest219
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %loop-kw-args
  %lpad.loopexit319 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %normal-dest247, %tag50, %tag44, %normal-dest233, %tag4, %normal-dest82, %loop-cont, %error
  %lpad.loopexit.split-lp320 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit319, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp320, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @":::global-str-KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 0)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

continue:                                         ; preds = %entry
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 67), align 8
  %40 = icmp eq i64 %nargs, 0
  br i1 %40, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G114075.0 = phi {}* [ %G114075.2, %advance-arg-idx-block ], [ %38, %loop-kw-args.preheader ]
  %room.1 = phi {}* [ %room.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %55, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs57 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-158 = add i64 %rem-nargs57, -1
  store i64 %rem-nargs-158, i64* %"remaining-nargs*", align 8
  %vaarg59 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest60 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %41 = phi {}* [ %37, %continue ], [ %.pre332, %loop-cont.kw-exit-block_crit_edge ]
  %42 = phi {}* [ %38, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G114075.1 = phi {}* [ %38, %continue ], [ %G114075.2, %loop-cont.kw-exit-block_crit_edge ]
  %room.2 = phi {}* [ undef, %continue ], [ %room.3, %loop-cont.kw-exit-block_crit_edge ]
  %43 = icmp eq {}* %G114075.1, %42
  %room.0 = select i1 %43, {}* %41, {}* %room.2
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 92), align 16
  call void @cc_setSymbolValue({}* %44, {}* %42)
  %45 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 94), align 16
  call void @cc_setSymbolValue({}* %45, {}* %42)
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 96), align 16
  call void @cc_setSymbolValue({}* %46, {}* %42)
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 98), align 16
  call void @cc_setSymbolValue({}* %47, {}* %42)
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 100), align 16
  call void @cc_setSymbolValue({}* %48, {}* %42)
  %49 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 102), align 16
  call void @cc_setSymbolValue({}* %49, {}* %42)
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 104), align 16
  call void @cc_setSymbolValue({}* %50, {}* %42)
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 106), align 16
  call void @cc_setSymbolValue({}* %51, {}* %42)
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 108), align 16
  call void @cc_setSymbolValue({}* %52, {}* %42)
  br label %tag47

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %.pre332 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %kw-exit-block

normal-dest60:                                    ; preds = %loop-kw-args
  %53 = icmp eq {}* %39, %vaarg
  br i1 %53, label %aok-block, label %"kw-:ROOM-test"

aok-block:                                        ; preds = %normal-dest60
  %54 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg59)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %matched-kw-block, %next-kw-block, %aok-block
  %G114075.2 = phi {}* [ %G114075.0, %aok-block ], [ %G114075.0, %next-kw-block ], [ %G114075.3, %matched-kw-block ]
  %room.3 = phi {}* [ %room.1, %aok-block ], [ %room.1, %next-kw-block ], [ %room.4, %matched-kw-block ]
  %phi-this-was-aok = phi i64 [ %54, %aok-block ], [ %phi-saw-aok, %next-kw-block ], [ %phi-saw-aok, %matched-kw-block ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %61, %next-kw-block ], [ %phi-bad-kw-idx, %matched-kw-block ]
  %55 = add i64 %phi-reg-arg-idx, 2
  %56 = icmp slt i64 %55, %nargs
  br i1 %56, label %loop-kw-args, label %loop-cont

"kw-:ROOM-test":                                  ; preds = %normal-dest60
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 146), align 16
  %58 = call i64 @cc_matchKeywordOnce({}* %57, {}* %vaarg, {}* %G114075.0)
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %next-kw-block, label %matched-kw-block

matched-kw-block:                                 ; preds = %"kw-:ROOM-test"
  %60 = icmp eq i64 %58, 2
  %G114075.3 = select i1 %60, {}* %G114075.0, {}* %37
  %room.4 = select i1 %60, {}* %room.1, {}* %vaarg59
  br label %advance-arg-idx-block

next-kw-block:                                    ; preds = %"kw-:ROOM-test"
  %61 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest67:                                    ; preds = %normal-dest82
  call void @unreachableError()
  unreachable

normal-dest68:                                    ; preds = %tag2
  %ptrtoint69 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %10, i64 1, {}* %36, {}* null, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit

normal-dest75:                                    ; preds = %normal-dest68
  %.elt303 = extractvalue { {}*, i64 } %62, 0
  %.elt305 = extractvalue { {}*, i64 } %62, 1
  %cond267 = icmp eq i64 %.elt305, 0
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %VAR.1 = select i1 %cond267, {}* %63, {}* %.elt303
  br label %tag47.backedge

normal-dest82:                                    ; preds = %tag4
  %64 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %65 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %66 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %67 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 141), align 8
  %ptrtoint64 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint64, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %64, {}* %65, {}* %VAR.0, {}* %66, {}* %67)
          to label %normal-dest67 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest84:                                    ; preds = %tag5
  %ptrtoint86 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint87 = add i64 %ptrtoint86, 7
  %entry-point-addr88 = inttoptr i64 %entry-point-addr-uint87 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point89 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr88, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point89({}* %14, i64 2, {}* %VAR.0, {}* null, {}* null, {}* null)
          to label %normal-dest92 unwind label %cleanup-lpad.loopexit

normal-dest92:                                    ; preds = %normal-dest84
  %.elt272 = extractvalue { {}*, i64 } %69, 0
  %.elt274 = extractvalue { {}*, i64 } %69, 1
  %cond = icmp eq i64 %.elt274, 0
  %70 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114191.0 = select i1 %cond, {}* %70, {}* %.elt272
  %71 = icmp eq {}* %G114191.0, %70
  br i1 %71, label %tag44, label %tag11

normal-dest99:                                    ; preds = %tag6
  %ptrtoint100 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint101 = add i64 %ptrtoint100, 7
  %entry-point-addr102 = inttoptr i64 %entry-point-addr-uint101 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point103 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr102, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point103({}* %16, i64 2, {}* %VAR.0, {}* null, {}* null, {}* null)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit

normal-dest106:                                   ; preds = %normal-dest99
  %.elt290 = extractvalue { {}*, i64 } %72, 0
  %.elt292 = extractvalue { {}*, i64 } %72, 1
  %cond264 = icmp eq i64 %.elt292, 0
  %73 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114197.0 = select i1 %cond264, {}* %73, {}* %.elt290
  %74 = icmp eq {}* %G114197.0, %73
  br i1 %74, label %tag4, label %tag35

normal-dest114:                                   ; preds = %tag11
  %ptrtoint115 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint116 = add i64 %ptrtoint115, 7
  %entry-point-addr117 = inttoptr i64 %entry-point-addr-uint116 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point118 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr117, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point118({}* %21, i64 2, {}* %VAR.0, {}* inttoptr (i64 20 to {}*), {}* null, {}* null)
          to label %normal-dest121 unwind label %cleanup-lpad.loopexit

normal-dest121:                                   ; preds = %normal-dest114
  %.elt276 = extractvalue { {}*, i64 } %75, 0
  %.elt278 = extractvalue { {}*, i64 } %75, 1
  %cond262 = icmp eq i64 %.elt278, 0
  %76 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114188.0 = select i1 %cond262, {}* %76, {}* %.elt276
  %77 = icmp eq {}* %G114188.0, %76
  br i1 %77, label %tag44, label %tag39

normal-dest162:                                   ; preds = %normal-dest233
  call void @unreachableError()
  unreachable

normal-dest164:                                   ; preds = %tag7
  %ptrtoint165 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint166 = add i64 %ptrtoint165, 7
  %entry-point-addr167 = inttoptr i64 %entry-point-addr-uint166 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point168 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr167, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point168({}* %18, i64 2, {}* %VAR.0, {}* inttoptr (i64 20 to {}*), {}* null, {}* null)
          to label %normal-dest171 unwind label %cleanup-lpad.loopexit

normal-dest171:                                   ; preds = %normal-dest164
  %.elt281 = extractvalue { {}*, i64 } %78, 0
  %.elt283 = extractvalue { {}*, i64 } %78, 1
  %cond263 = icmp eq i64 %.elt283, 0
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114115.1 = select i1 %cond263, {}* %79, {}* %.elt281
  br label %tag10

normal-dest193:                                   ; preds = %tag35
  %ptrtoint194 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint195 = add i64 %ptrtoint194, 7
  %entry-point-addr196 = inttoptr i64 %entry-point-addr-uint195 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point197 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr196, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point197({}* %25, i64 2, {}* %VAR.0, {}* inttoptr (i64 20 to {}*), {}* null, {}* null)
          to label %normal-dest200 unwind label %cleanup-lpad.loopexit

normal-dest200:                                   ; preds = %normal-dest193
  %.elt294 = extractvalue { {}*, i64 } %80, 0
  %.elt296 = extractvalue { {}*, i64 } %80, 1
  %cond265 = icmp eq i64 %.elt296, 0
  %81 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114194.0 = select i1 %cond265, {}* %81, {}* %.elt294
  %82 = icmp eq {}* %G114194.0, %81
  br i1 %82, label %tag4, label %tag30

normal-dest219:                                   ; preds = %tag43
  %ptrtoint220 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint221 = add i64 %ptrtoint220, 7
  %entry-point-addr222 = inttoptr i64 %entry-point-addr-uint221 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point223 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr222, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point223({}* %29, i64 2, {}* %VAR.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest226 unwind label %cleanup-lpad.loopexit

normal-dest226:                                   ; preds = %normal-dest219
  %.elt299 = extractvalue { {}*, i64 } %83, 0
  %.elt301 = extractvalue { {}*, i64 } %83, 1
  %cond266 = icmp eq i64 %.elt301, 0
  %84 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %VAR.2 = select i1 %cond266, {}* %84, {}* %.elt299
  br label %tag47.backedge

normal-dest233:                                   ; preds = %tag44
  %85 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %86 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %87 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %88 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 130), align 16
  %ptrtoint156 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint157 = add i64 %ptrtoint156, 7
  %entry-point-addr158 = inttoptr i64 %entry-point-addr-uint157 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point159 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr158, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point159({}* %31, i64 5, {}* %85, {}* %86, {}* %VAR.0, {}* %87, {}* %88)
          to label %normal-dest162 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br236:                               ; preds = %tag47
  %irc-bit-cast240 = bitcast {}* %VAR.0 to i8*
  %gep241 = getelementptr inbounds i8, i8* %irc-bit-cast240, i64 -9
  %irc-bit-cast242 = bitcast i8* %gep241 to i64*
  %90 = load i64, i64* %irc-bit-cast242, align 8
  %91 = icmp eq i64 %90, 1349
  %fixnum-tag-only190268 = and i64 %ptrtoint237, 3
  %fixnump-test191 = icmp eq i64 %fixnum-tag-only190268, 0
  %or.cond = or i1 %fixnump-test191, %91
  br i1 %or.cond, label %tag5, label %tag44

normal-dest247:                                   ; preds = %tag50
  %ptrtoint248 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint249 = add i64 %ptrtoint248, 7
  %entry-point-addr250 = inttoptr i64 %entry-point-addr-uint249 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point251 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr250, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point251({}* %34, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest254:                                   ; preds = %normal-dest247
  %.elt307 = extractvalue { {}*, i64 } %92, 0
  %.elt309 = extractvalue { {}*, i64 } %92, 1
  br label %tag42

header-check-br255:                               ; preds = %tag52
  %irc-bit-cast259 = bitcast {}* %VAR.0 to i8*
  %gep260 = getelementptr inbounds i8, i8* %irc-bit-cast259, i64 -9
  %irc-bit-cast261 = bitcast i8* %gep260 to i64*
  %93 = load i64, i64* %irc-bit-cast261, align 8
  %94 = icmp eq i64 %93, 1349
  %brmerge = or i1 %fixnump-test217, %94
  br i1 %brmerge, label %tag6, label %tag4
}

declare double @from_object_double({}*) local_unnamed_addr #3

declare {}* @to_object_double(double) local_unnamed_addr #3

declare float @from_object_float({}*) local_unnamed_addr #3

declare {}* @to_object_float(float) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^66^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !28 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^66^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G114233.0 = phi {}* [ %18, %header-check-br ], [ %G114233.1, %normal-dest63 ], [ %G114233.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 150), align 16
  %ptrtoint13 = ptrtoint {}* %G114233.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G114233.0, i64 2, {}* %"closure->KLH=FENSTERSTREAM-ERZEUGEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 150), align 16
  %"closure->KLH=FENSTERSTREAM-ERZEUGEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2609, i64 66, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 152), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->KLH=FENSTERSTREAM-ERZEUGEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 159), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->KLH=FENSTERSTREAM-ERZEUGEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 264 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 150), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag2

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag2
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 149), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114233.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114233.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !29 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @":::global-str-KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %12 = invoke {}* @cc_safe_symbol_value({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14
}

; Function Attrs: nounwind
declare {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }*, i64*) local_unnamed_addr #1

declare {}* @cc_safe_symbol_value({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^73^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !30 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^73^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G114271.0 = phi {}* [ %18, %header-check-br ], [ %G114271.1, %normal-dest17 ], [ %G114271.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 177), align 8
  %ptrtoint43 = ptrtoint {}* %G114271.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G114271.0, i64 2, {}* %"closure->KLH-PARAMETERLISTE-TRANSFORMIEREN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag3, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 177), align 8
  %"closure->KLH-PARAMETERLISTE-TRANSFORMIEREN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2899, i64 73, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br34

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 176), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114271.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag3

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114271.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag3

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 179), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->KLH-PARAMETERLISTE-TRANSFORMIEREN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 180), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->KLH-PARAMETERLISTE-TRANSFORMIEREN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 292 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 177), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !31 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc21 unwind label %cleanup-lpad

.noexc21:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest9, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = invoke {}* @cc_makeCell()
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %13 = invoke {}* @cc_makeCell()
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 161), align 8
  call void @cc_writeCell({}* %12, {}* %14)
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %15, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2899, i64 73, i64 0, i64 2, {}* %13, {}* %12)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest6
  call void @cc_writeCell({}* %13, {}* %"closure->LAMBDA")
  %16 = ptrtoint {}* %13 to i64
  %17 = add i64 %16, -3
  %18 = inttoptr i64 %17 to %"class.gctools::smart_ptr"*
  %19 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %18, i64 0, i32 0
  %20 = load %"class.core::T_O"*, %"class.core::T_O"** %19, align 8, !tbaa !32
  %21 = bitcast %"class.core::T_O"* %20 to {}*
  %ptrtoint = ptrtoint %"class.core::T_O"* %20 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %21, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest9
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %22
}

declare {}* @cc_makeCell() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_writeCell({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !34 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to %0*)) #7
          to label %.noexc610 unwind label %cleanup-lpad

.noexc610:                                        ; preds = %10
  unreachable

tag1:                                             ; preds = %tag18
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest118 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest493
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %14 = icmp eq {}* %13, %farg0
  %.val640 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114363.0 = select i1 %14, {}* %.val640, {}* %13
  %15 = icmp eq {}* %G114363.0, %13
  br i1 %15, label %tag59, label %tag73

tag4:                                             ; preds = %tag49, %normal-dest369, %tag29
  %16 = phi {}* [ %82, %tag29 ], [ %204, %normal-dest369 ], [ %82, %tag49 ]
  %x133.0 = phi {}* [ %44, %tag29 ], [ %x133.1, %normal-dest369 ], [ %82, %tag49 ]
  %17 = ptrtoint {}* %x133.0 to i64
  %tag-only529 = and i64 %17, 7
  %consp-test = icmp eq i64 %tag-only529, 3
  br i1 %consp-test, label %tag100, label %tag81

tag7:                                             ; preds = %tag31
  %18 = add i64 %47, -3
  %19 = inttoptr i64 %18 to {}**
  %20 = load {}*, {}** %19, align 8
  br label %tag67

tag9:                                             ; preds = %tag73
  %21 = icmp eq {}* %x249.0, %.val649
  %G114343.0 = select i1 %21, {}* %.val642, {}* %.val649
  %22 = icmp eq {}* %G114343.0, %.val649
  br i1 %22, label %tag56, label %tag42

tag12:                                            ; preds = %normal-dest
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 174), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest144 unwind label %cleanup-lpad

tag13:                                            ; preds = %tag81, %normal-dest292, %tag100
  %G114399.0 = phi {}* [ %118, %tag100 ], [ %G114399.1, %normal-dest292 ], [ %16, %tag81 ]
  %ptrtoint153 = ptrtoint %"class.core::T_O"* %87 to i64
  %entry-point-addr-uint154 = add i64 %ptrtoint153, 7
  %entry-point-addr155 = inttoptr i64 %entry-point-addr-uint154 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point156 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr155, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point156({}* %88, i64 1, {}* %G114399.0, {}* null, {}* null, {}* null)
          to label %normal-dest159 unwind label %cleanup-lpad

tag14:                                            ; preds = %tag27
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest185 unwind label %cleanup-lpad

tag16:                                            ; preds = %tag34
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest200 unwind label %cleanup-lpad

tag18:                                            ; preds = %tag42
  %30 = icmp eq {}* %55, %farg0
  %.val644 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114327.0 = select i1 %30, {}* %.val644, {}* %55
  %31 = icmp eq {}* %G114327.0, %55
  br i1 %31, label %tag1, label %tag30

tag20:                                            ; preds = %tag79
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest220 unwind label %cleanup-lpad

tag22:                                            ; preds = %normal-dest333
  %34 = add i64 %145, -3
  %35 = inttoptr i64 %34 to {}**
  %36 = load {}*, {}** %35, align 8
  br label %tag107

tag27:                                            ; preds = %normal-dest408
  %37 = icmp eq {}* %G114489.0, %farg0
  %.val638 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114482.0 = select i1 %37, {}* %.val638, {}* %G114489.0
  %38 = icmp eq {}* %G114482.0, %G114489.0
  br i1 %38, label %tag14, label %tag40

tag28:                                            ; preds = %normal-dest408
  %39 = add i64 %145, -3
  %40 = inttoptr i64 %39 to {}**
  %41 = load {}*, {}** %40, align 8
  br label %tag40

tag29:                                            ; preds = %tag67
  %42 = add i64 %145, 5
  %43 = inttoptr i64 %42 to {}**
  %44 = load {}*, {}** %43, align 8
  br label %tag4

tag30:                                            ; preds = %tag18, %normal-dest122, %tag51
  %45 = phi {}* [ %55, %tag51 ], [ %141, %normal-dest122 ], [ %55, %tag18 ]
  %x123.0 = phi {}* [ %74, %tag51 ], [ %x123.1, %normal-dest122 ], [ %55, %tag18 ]
  %46 = ptrtoint {}* %x123.0 to i64
  %tag-only242566 = and i64 %46, 7
  %consp-test243 = icmp eq i64 %tag-only242566, 3
  br i1 %consp-test243, label %tag71, label %tag89

tag31:                                            ; preds = %tag93, %normal-dest387, %tag82
  %.val637 = phi {}* [ %.val631.pre, %tag82 ], [ %210, %normal-dest387 ], [ %112, %tag93 ]
  %x244.0 = phi {}* [ %104, %tag82 ], [ %x244.1, %normal-dest387 ], [ %112, %tag93 ]
  %47 = ptrtoint {}* %x244.0 to i64
  %tag-only247527 = and i64 %47, 7
  %consp-test248 = icmp eq i64 %tag-only247527, 3
  %.val630 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114449.0 = select i1 %consp-test248, {}* %.val630, {}* %.val637
  %48 = icmp eq {}* %G114449.0, %.val637
  br i1 %48, label %tag34, label %tag7

tag33:                                            ; preds = %normal-dest493
  %49 = add i64 %145, 5
  %50 = inttoptr i64 %49 to {}**
  %51 = load {}*, {}** %50, align 8
  %.val643.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag73

tag34:                                            ; preds = %tag31
  %52 = icmp eq {}* %x244.0, %.val637
  %G114442.0 = select i1 %52, {}* %.val630, {}* %.val637
  %53 = icmp eq {}* %G114442.0, %.val637
  br i1 %53, label %tag16, label %tag67

tag40:                                            ; preds = %tag27, %normal-dest193, %tag28
  %G114472.0 = phi {}* [ %41, %tag28 ], [ %G114472.1, %normal-dest193 ], [ %G114489.0, %tag27 ]
  %ptrtoint258 = ptrtoint {}* %212 to i64
  %entry-point-addr-uint259 = add i64 %ptrtoint258, 7
  %entry-point-addr260 = inttoptr i64 %entry-point-addr-uint259 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point261 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr260, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point261({}* %212, i64 2, {}* %213, {}* %G114472.0, {}* null, {}* null)
          to label %normal-dest264 unwind label %cleanup-lpad

tag42:                                            ; preds = %tag9, %normal-dest312, %tag43
  %55 = phi {}* [ %.val649, %tag43 ], [ %184, %normal-dest312 ], [ %.val649, %tag9 ]
  %G114297.0 = phi {}* [ %64, %tag43 ], [ %G114297.1, %normal-dest312 ], [ %.val649, %tag9 ]
  %56 = ptrtoint %"class.core::T_O"* %132 to i64
  %57 = add i64 %56, -3
  %58 = inttoptr i64 %57 to %"class.gctools::smart_ptr"*
  %59 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %58, i64 0, i32 0
  %60 = load %"class.core::T_O"*, %"class.core::T_O"** %59, align 8, !tbaa !32
  %61 = bitcast %"class.core::T_O"* %60 to {}*
  br i1 %consp-test152, label %tag51, label %tag18

tag43:                                            ; preds = %tag73
  %62 = add i64 %94, -3
  %63 = inttoptr i64 %62 to {}**
  %64 = load {}*, {}** %63, align 8
  br label %tag42

tag45:                                            ; preds = %normal-dest144
  %65 = add i64 %145, -3
  %66 = inttoptr i64 %65 to {}**
  %67 = load {}*, {}** %66, align 8
  br label %tag99

tag46:                                            ; preds = %tag81
  %68 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %69 = invoke {}* @cc_safe_fdefinition({}* %68)
          to label %normal-dest285 unwind label %cleanup-lpad

tag49:                                            ; preds = %tag67
  %70 = icmp eq {}* %82, %farg0
  %.val632 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114426.0 = select i1 %70, {}* %.val632, {}* %82
  %71 = icmp eq {}* %G114426.0, %82
  br i1 %71, label %tag68, label %tag4

tag51:                                            ; preds = %tag42
  %72 = add i64 %145, 5
  %73 = inttoptr i64 %72 to {}**
  %74 = load {}*, {}** %73, align 8
  br label %tag30

tag56:                                            ; preds = %tag9
  %75 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest305 unwind label %cleanup-lpad

tag59:                                            ; preds = %tag3
  %77 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest319 unwind label %cleanup-lpad

tag61:                                            ; preds = %normal-dest441
  %79 = invoke {}* @cc_safe_fdefinition({}* %218)
          to label %normal-dest333 unwind label %cleanup-lpad

tag62:                                            ; preds = %tag89
  %80 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %81 = invoke {}* @cc_safe_fdefinition({}* %80)
          to label %normal-dest342 unwind label %cleanup-lpad

tag67:                                            ; preds = %tag34, %normal-dest207, %tag7
  %82 = phi {}* [ %.val637, %tag7 ], [ %163, %normal-dest207 ], [ %.val637, %tag34 ]
  %G114396.0 = phi {}* [ %20, %tag7 ], [ %G114396.1, %normal-dest207 ], [ %.val637, %tag34 ]
  %83 = ptrtoint %"class.core::T_O"* %132 to i64
  %84 = add i64 %83, -3
  %85 = inttoptr i64 %84 to %"class.gctools::smart_ptr"*
  %86 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %85, i64 0, i32 0
  %87 = load %"class.core::T_O"*, %"class.core::T_O"** %86, align 8, !tbaa !32
  %88 = bitcast %"class.core::T_O"* %87 to {}*
  br i1 %consp-test152, label %tag29, label %tag49

tag68:                                            ; preds = %tag49
  %89 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest362 unwind label %cleanup-lpad

tag71:                                            ; preds = %tag30
  %91 = add i64 %46, 5
  %92 = inttoptr i64 %91 to {}**
  %93 = load {}*, {}** %92, align 8
  br label %tag105

tag73:                                            ; preds = %tag3, %normal-dest326, %tag33
  %.val649 = phi {}* [ %.val643.pre, %tag33 ], [ %190, %normal-dest326 ], [ %13, %tag3 ]
  %x249.0 = phi {}* [ %51, %tag33 ], [ %x249.1, %normal-dest326 ], [ %13, %tag3 ]
  %94 = ptrtoint {}* %x249.0 to i64
  %tag-only377564 = and i64 %94, 7
  %consp-test378 = icmp eq i64 %tag-only377564, 3
  %.val642 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114350.0 = select i1 %consp-test378, {}* %.val642, {}* %.val649
  %95 = icmp eq {}* %G114350.0, %.val649
  br i1 %95, label %tag9, label %tag43

tag76:                                            ; preds = %tag93
  %96 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest380 unwind label %cleanup-lpad

tag79:                                            ; preds = %normal-dest333
  %98 = icmp eq {}* %G114387.0, %farg0
  %.val650 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114380.0 = select i1 %98, {}* %.val650, {}* %G114387.0
  %99 = icmp eq {}* %G114380.0, %G114387.0
  br i1 %99, label %tag20, label %tag107

tag81:                                            ; preds = %tag4
  %100 = icmp eq {}* %x133.0, %16
  %.val634 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114410.0 = select i1 %100, {}* %.val634, {}* %16
  %101 = icmp eq {}* %G114410.0, %16
  br i1 %101, label %tag46, label %tag13

tag82:                                            ; preds = %normal-dest271
  %102 = add i64 %145, 5
  %103 = inttoptr i64 %102 to {}**
  %104 = load {}*, {}** %103, align 8
  %.val631.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag31

tag83:                                            ; preds = %normal-dest441
  %105 = invoke {}* @cc_safe_fdefinition({}* %218)
          to label %normal-dest406 unwind label %cleanup-lpad

tag89:                                            ; preds = %tag30
  %106 = icmp eq {}* %x123.0, %45
  %.val646 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114311.0 = select i1 %106, {}* %.val646, {}* %45
  %107 = icmp eq {}* %G114311.0, %45
  br i1 %107, label %tag62, label %tag105

tag90:                                            ; preds = %normal-dest144
  %108 = icmp eq {}* %G114516.0, %farg0
  %.val652 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114509.0 = select i1 %108, {}* %.val652, {}* %G114516.0
  %109 = icmp eq {}* %G114509.0, %G114516.0
  br i1 %109, label %tag106, label %tag99

tag91:                                            ; preds = %normal-dest, %normal-dest477, %normal-dest183
  %return-value.sroa.38.0 = phi i64 [ %.elt578, %normal-dest477 ], [ %.elt541, %normal-dest183 ], [ 1, %normal-dest ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt576, %normal-dest477 ], [ %.elt539, %normal-dest183 ], [ %133, %normal-dest ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %110 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %111 = insertvalue { {}*, i64 } %110, i64 %return-value.sroa.38.0, 1
  ret { {}*, i64 } %111

tag93:                                            ; preds = %normal-dest271
  %112 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %113 = icmp eq {}* %112, %farg0
  %.val628 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114462.0 = select i1 %113, {}* %.val628, {}* %112
  %114 = icmp eq {}* %G114462.0, %112
  br i1 %114, label %tag76, label %tag31

tag99:                                            ; preds = %tag90, %normal-dest486, %tag45
  %G114499.0 = phi {}* [ %67, %tag45 ], [ %G114499.1, %normal-dest486 ], [ %G114516.0, %tag90 ]
  %ptrtoint435 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint436 = add i64 %ptrtoint435, 7
  %entry-point-addr437 = inttoptr i64 %entry-point-addr-uint436 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point438 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr437, align 8
  %115 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point438({}* %24, i64 2, {}* %144, {}* %G114499.0, {}* null, {}* null)
          to label %normal-dest441 unwind label %cleanup-lpad

tag100:                                           ; preds = %tag4
  %116 = add i64 %17, 5
  %117 = inttoptr i64 %116 to {}**
  %118 = load {}*, {}** %117, align 8
  br label %tag13

tag105:                                           ; preds = %tag89, %normal-dest349, %tag71
  %G114300.0 = phi {}* [ %93, %tag71 ], [ %G114300.1, %normal-dest349 ], [ %45, %tag89 ]
  %ptrtoint447 = ptrtoint %"class.core::T_O"* %60 to i64
  %entry-point-addr-uint448 = add i64 %ptrtoint447, 7
  %entry-point-addr449 = inttoptr i64 %entry-point-addr-uint448 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point450 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr449, align 8
  %119 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point450({}* %61, i64 1, {}* %G114300.0, {}* null, {}* null, {}* null)
          to label %normal-dest453 unwind label %cleanup-lpad

tag106:                                           ; preds = %tag90
  %120 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest479 unwind label %cleanup-lpad

tag107:                                           ; preds = %tag79, %normal-dest228, %tag22
  %G114294.0 = phi {}* [ %36, %tag22 ], [ %G114294.1, %normal-dest228 ], [ %G114387.0, %tag79 ]
  %122 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest493 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %tag107, %normal-dest479, %tag106, %normal-dest465, %normal-dest453, %tag105, %tag99, %normal-dest406, %tag83, %normal-dest380, %tag76, %normal-dest362, %tag68, %normal-dest342, %tag62, %tag61, %normal-dest319, %tag59, %normal-dest305, %tag56, %normal-dest285, %tag46, %normal-dest264, %tag40, %normal-dest220, %tag20, %normal-dest200, %tag16, %normal-dest185, %tag14, %normal-dest171, %normal-dest159, %tag13, %tag12, %normal-dest118, %tag1
  %124 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %124

normal-dest:                                      ; preds = %entry
  %125 = ptrtoint {}* %closure-ptr to i64
  %126 = and i64 %125, -8
  %127 = inttoptr i64 %126 to %1*
  %128 = getelementptr inbounds %1, %1* %127, i64 0, i32 4, i32 1, i64 1, i32 0
  %129 = bitcast %"class.core::T_O"** %128 to i64*
  %130 = load i64, i64* %129, align 8, !tbaa !32
  %131 = getelementptr inbounds %1, %1* %127, i64 0, i32 4, i32 1, i64 0, i32 0
  %132 = load %"class.core::T_O"*, %"class.core::T_O"** %131, align 8, !tbaa !32
  %133 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %134 = icmp eq {}* %133, %farg0
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114522.0 = select i1 %134, {}* %.val, {}* %133
  %135 = icmp eq {}* %G114522.0, %133
  br i1 %135, label %tag12, label %tag91

normal-dest118:                                   ; preds = %tag1
  %136 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %137 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %138 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %139 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %136, {}* %137, {}* %farg0, {}* %138, {}* %139)
          to label %normal-dest122 unwind label %cleanup-lpad

normal-dest122:                                   ; preds = %normal-dest118
  %.elt584 = extractvalue { {}*, i64 } %140, 0
  %.elt586 = extractvalue { {}*, i64 } %140, 1
  %cond510 = icmp eq i64 %.elt586, 0
  %141 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %x123.1 = select i1 %cond510, {}* %141, {}* %.elt584
  br label %tag30

normal-dest144:                                   ; preds = %tag12
  %142 = add i64 %130, -3
  %143 = inttoptr i64 %142 to {}**
  %144 = load {}*, {}** %143, align 8, !tbaa !32
  %145 = ptrtoint {}* %farg0 to i64
  %tag-only151517 = and i64 %145, 7
  %consp-test152 = icmp eq i64 %tag-only151517, 3
  %G114516.0.in = select i1 %consp-test152, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0)
  %G114516.0 = load {}*, {}** %G114516.0.in, align 8
  %146 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %147 = icmp eq {}* %G114516.0, %146
  br i1 %147, label %tag90, label %tag45

normal-dest159:                                   ; preds = %tag13
  %.elt531 = extractvalue { {}*, i64 } %25, 0
  %.elt533 = extractvalue { {}*, i64 } %25, 1
  %cond500 = icmp eq i64 %.elt533, 0
  %148 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114397.0 = select i1 %cond500, {}* %148, {}* %.elt531
  %ptrtoint165 = ptrtoint {}* %172 to i64
  %entry-point-addr-uint166 = add i64 %ptrtoint165, 7
  %entry-point-addr167 = inttoptr i64 %entry-point-addr-uint166 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point168 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr167, align 8
  %149 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point168({}* %172, i64 2, {}* %G114396.0, {}* %G114397.0, {}* null, {}* null)
          to label %normal-dest171 unwind label %cleanup-lpad

normal-dest171:                                   ; preds = %normal-dest159
  %.elt535 = extractvalue { {}*, i64 } %149, 0
  %.elt537 = extractvalue { {}*, i64 } %149, 1
  %cond501 = icmp eq i64 %.elt537, 0
  %150 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114394.0 = select i1 %cond501, {}* %150, {}* %.elt535
  %ptrtoint177 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint178 = add i64 %ptrtoint177, 7
  %entry-point-addr179 = inttoptr i64 %entry-point-addr-uint178 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point180 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr179, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point180({}* %105, i64 2, {}* %G114393.0, {}* %G114394.0, {}* null, {}* null)
          to label %normal-dest183 unwind label %cleanup-lpad

normal-dest183:                                   ; preds = %normal-dest171
  %.elt539 = extractvalue { {}*, i64 } %151, 0
  %.elt541 = extractvalue { {}*, i64 } %151, 1
  br label %tag91

normal-dest185:                                   ; preds = %tag14
  %152 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %153 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %154 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %155 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint187 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint188 = add i64 %ptrtoint187, 7
  %entry-point-addr189 = inttoptr i64 %entry-point-addr-uint188 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point190 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr189, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point190({}* %27, i64 5, {}* %152, {}* %153, {}* %farg0, {}* %154, {}* %155)
          to label %normal-dest193 unwind label %cleanup-lpad

normal-dest193:                                   ; preds = %normal-dest185
  %.elt559 = extractvalue { {}*, i64 } %156, 0
  %.elt561 = extractvalue { {}*, i64 } %156, 1
  %cond506 = icmp eq i64 %.elt561, 0
  %157 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114472.1 = select i1 %cond506, {}* %157, {}* %.elt559
  br label %tag40

normal-dest200:                                   ; preds = %tag16
  %158 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %159 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %160 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %161 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint201 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint202 = add i64 %ptrtoint201, 7
  %entry-point-addr203 = inttoptr i64 %entry-point-addr-uint202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr203, align 8
  %162 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point204({}* %29, i64 5, {}* %158, {}* %159, {}* %x244.0, {}* %160, {}* %161)
          to label %normal-dest207 unwind label %cleanup-lpad

normal-dest207:                                   ; preds = %normal-dest200
  %.elt551 = extractvalue { {}*, i64 } %162, 0
  %.elt553 = extractvalue { {}*, i64 } %162, 1
  %cond504 = icmp eq i64 %.elt553, 0
  %163 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114396.1 = select i1 %cond504, {}* %163, {}* %.elt551
  br label %tag67

normal-dest220:                                   ; preds = %tag20
  %164 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %165 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %166 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %167 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint222 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint223 = add i64 %ptrtoint222, 7
  %entry-point-addr224 = inttoptr i64 %entry-point-addr-uint223 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point225 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr224, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point225({}* %33, i64 5, {}* %164, {}* %165, {}* %farg0, {}* %166, {}* %167)
          to label %normal-dest228 unwind label %cleanup-lpad

normal-dest228:                                   ; preds = %normal-dest220
  %.elt596 = extractvalue { {}*, i64 } %168, 0
  %.elt598 = extractvalue { {}*, i64 } %168, 1
  %cond513 = icmp eq i64 %.elt598, 0
  %169 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114294.1 = select i1 %cond513, {}* %169, {}* %.elt596
  br label %tag107

normal-dest264:                                   ; preds = %tag40
  %.elt523 = extractvalue { {}*, i64 } %54, 0
  %.elt525 = extractvalue { {}*, i64 } %54, 1
  %cond499 = icmp eq i64 %.elt525, 0
  %170 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114393.0 = select i1 %cond499, {}* %170, {}* %.elt523
  %171 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %172 = invoke {}* @cc_safe_fdefinition({}* %171)
          to label %normal-dest271 unwind label %cleanup-lpad

normal-dest271:                                   ; preds = %normal-dest264
  br i1 %consp-test152, label %tag82, label %tag93

normal-dest285:                                   ; preds = %tag46
  %173 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %174 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %175 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %176 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint286 = ptrtoint {}* %69 to i64
  %entry-point-addr-uint287 = add i64 %ptrtoint286, 7
  %entry-point-addr288 = inttoptr i64 %entry-point-addr-uint287 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point289 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr288, align 8
  %177 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point289({}* %69, i64 5, {}* %173, {}* %174, {}* %x133.0, {}* %175, {}* %176)
          to label %normal-dest292 unwind label %cleanup-lpad

normal-dest292:                                   ; preds = %normal-dest285
  %.elt543 = extractvalue { {}*, i64 } %177, 0
  %.elt545 = extractvalue { {}*, i64 } %177, 1
  %cond502 = icmp eq i64 %.elt545, 0
  %178 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114399.1 = select i1 %cond502, {}* %178, {}* %.elt543
  br label %tag13

normal-dest305:                                   ; preds = %tag56
  %179 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %180 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %181 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %182 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint306 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint307 = add i64 %ptrtoint306, 7
  %entry-point-addr308 = inttoptr i64 %entry-point-addr-uint307 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point309 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr308, align 8
  %183 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point309({}* %76, i64 5, {}* %179, {}* %180, {}* %x249.0, {}* %181, {}* %182)
          to label %normal-dest312 unwind label %cleanup-lpad

normal-dest312:                                   ; preds = %normal-dest305
  %.elt588 = extractvalue { {}*, i64 } %183, 0
  %.elt590 = extractvalue { {}*, i64 } %183, 1
  %cond511 = icmp eq i64 %.elt590, 0
  %184 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114297.1 = select i1 %cond511, {}* %184, {}* %.elt588
  br label %tag42

normal-dest319:                                   ; preds = %tag59
  %185 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %186 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %187 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %188 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint320 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint321 = add i64 %ptrtoint320, 7
  %entry-point-addr322 = inttoptr i64 %entry-point-addr-uint321 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point323 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr322, align 8
  %189 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point323({}* %78, i64 5, {}* %185, {}* %186, {}* %farg0, {}* %187, {}* %188)
          to label %normal-dest326 unwind label %cleanup-lpad

normal-dest326:                                   ; preds = %normal-dest319
  %.elt592 = extractvalue { {}*, i64 } %189, 0
  %.elt594 = extractvalue { {}*, i64 } %189, 1
  %cond512 = icmp eq i64 %.elt594, 0
  %190 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %x249.1 = select i1 %cond512, {}* %190, {}* %.elt592
  br label %tag73

normal-dest333:                                   ; preds = %tag61
  %G114387.0 = load {}*, {}** %G114516.0.in, align 8
  %191 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %192 = icmp eq {}* %G114387.0, %191
  br i1 %192, label %tag79, label %tag22

normal-dest342:                                   ; preds = %tag62
  %193 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %194 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %195 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %196 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint343 = ptrtoint {}* %81 to i64
  %entry-point-addr-uint344 = add i64 %ptrtoint343, 7
  %entry-point-addr345 = inttoptr i64 %entry-point-addr-uint344 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point346 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr345, align 8
  %197 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point346({}* %81, i64 5, {}* %193, {}* %194, {}* %x123.0, {}* %195, {}* %196)
          to label %normal-dest349 unwind label %cleanup-lpad

normal-dest349:                                   ; preds = %normal-dest342
  %.elt580 = extractvalue { {}*, i64 } %197, 0
  %.elt582 = extractvalue { {}*, i64 } %197, 1
  %cond509 = icmp eq i64 %.elt582, 0
  %198 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114300.1 = select i1 %cond509, {}* %198, {}* %.elt580
  br label %tag105

normal-dest362:                                   ; preds = %tag68
  %199 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %200 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %201 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %202 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint363 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint364 = add i64 %ptrtoint363, 7
  %entry-point-addr365 = inttoptr i64 %entry-point-addr-uint364 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point366 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr365, align 8
  %203 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point366({}* %90, i64 5, {}* %199, {}* %200, {}* %farg0, {}* %201, {}* %202)
          to label %normal-dest369 unwind label %cleanup-lpad

normal-dest369:                                   ; preds = %normal-dest362
  %.elt547 = extractvalue { {}*, i64 } %203, 0
  %.elt549 = extractvalue { {}*, i64 } %203, 1
  %cond503 = icmp eq i64 %.elt549, 0
  %204 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %x133.1 = select i1 %cond503, {}* %204, {}* %.elt547
  br label %tag4

normal-dest380:                                   ; preds = %tag76
  %205 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %206 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %207 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %208 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint381 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint382 = add i64 %ptrtoint381, 7
  %entry-point-addr383 = inttoptr i64 %entry-point-addr-uint382 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point384 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr383, align 8
  %209 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point384({}* %97, i64 5, {}* %205, {}* %206, {}* %farg0, {}* %207, {}* %208)
          to label %normal-dest387 unwind label %cleanup-lpad

normal-dest387:                                   ; preds = %normal-dest380
  %.elt555 = extractvalue { {}*, i64 } %209, 0
  %.elt557 = extractvalue { {}*, i64 } %209, 1
  %cond505 = icmp eq i64 %.elt557, 0
  %210 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %x244.1 = select i1 %cond505, {}* %210, {}* %.elt555
  br label %tag31

normal-dest406:                                   ; preds = %tag83
  %211 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 174), align 16
  %212 = invoke {}* @cc_safe_fdefinition({}* %211)
          to label %normal-dest408 unwind label %cleanup-lpad

normal-dest408:                                   ; preds = %normal-dest406
  %213 = load {}*, {}** %143, align 8, !tbaa !32
  %G114489.0 = load {}*, {}** %G114516.0.in, align 8
  %214 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %215 = icmp eq {}* %G114489.0, %214
  br i1 %215, label %tag27, label %tag28

normal-dest441:                                   ; preds = %tag99
  %.elt518 = extractvalue { {}*, i64 } %115, 0
  %.elt520 = extractvalue { {}*, i64 } %115, 1
  %cond = icmp eq i64 %.elt520, 0
  %216 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114495.0 = select i1 %cond, {}* %216, {}* %.elt518
  %217 = icmp eq {}* %G114495.0, %216
  %218 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  br i1 %217, label %tag61, label %tag83

normal-dest453:                                   ; preds = %tag105
  %.elt568 = extractvalue { {}*, i64 } %119, 0
  %.elt570 = extractvalue { {}*, i64 } %119, 1
  %cond507 = icmp eq i64 %.elt570, 0
  %219 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114298.0 = select i1 %cond507, {}* %219, {}* %.elt568
  %ptrtoint459 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint460 = add i64 %ptrtoint459, 7
  %entry-point-addr461 = inttoptr i64 %entry-point-addr-uint460 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point462 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr461, align 8
  %220 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point462({}* %123, i64 2, {}* %G114297.0, {}* %G114298.0, {}* null, {}* null)
          to label %normal-dest465 unwind label %cleanup-lpad

normal-dest465:                                   ; preds = %normal-dest453
  %.elt572 = extractvalue { {}*, i64 } %220, 0
  %.elt574 = extractvalue { {}*, i64 } %220, 1
  %cond508 = icmp eq i64 %.elt574, 0
  %221 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114295.0 = select i1 %cond508, {}* %221, {}* %.elt572
  %ptrtoint471 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint472 = add i64 %ptrtoint471, 7
  %entry-point-addr473 = inttoptr i64 %entry-point-addr-uint472 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point474 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr473, align 8
  %222 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point474({}* %79, i64 2, {}* %G114294.0, {}* %G114295.0, {}* null, {}* null)
          to label %normal-dest477 unwind label %cleanup-lpad

normal-dest477:                                   ; preds = %normal-dest465
  %.elt576 = extractvalue { {}*, i64 } %222, 0
  %.elt578 = extractvalue { {}*, i64 } %222, 1
  br label %tag91

normal-dest479:                                   ; preds = %tag106
  %223 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %224 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %225 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %226 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint480 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint481 = add i64 %ptrtoint480, 7
  %entry-point-addr482 = inttoptr i64 %entry-point-addr-uint481 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point483 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr482, align 8
  %227 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point483({}* %121, i64 5, {}* %223, {}* %224, {}* %farg0, {}* %225, {}* %226)
          to label %normal-dest486 unwind label %cleanup-lpad

normal-dest486:                                   ; preds = %normal-dest479
  %.elt600 = extractvalue { {}*, i64 } %227, 0
  %.elt602 = extractvalue { {}*, i64 } %227, 1
  %cond514 = icmp eq i64 %.elt602, 0
  %228 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114499.1 = select i1 %cond514, {}* %228, {}* %.elt600
  br label %tag99

normal-dest493:                                   ; preds = %tag107
  br i1 %consp-test152, label %tag33, label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^92^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !35 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^92^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G114556.0 = phi {}* [ %18, %header-check-br ], [ %G114556.1, %normal-dest17 ], [ %G114556.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 186), align 16
  %ptrtoint20 = ptrtoint {}* %G114556.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G114556.0, i64 2, {}* %"closure->KLH=FENSTERSTREAM-NACH-OBEN-GEHEN", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag2, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 186), align 16
  %"closure->KLH=FENSTERSTREAM-NACH-OBEN-GEHEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 3638, i64 92, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114556.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 188), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->KLH=FENSTERSTREAM-NACH-OBEN-GEHEN", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 191), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->KLH=FENSTERSTREAM-NACH-OBEN-GEHEN", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 368 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 186), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

normal-dest60:                                    ; preds = %tag2
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 185), align 8
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114556.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !36 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc9 unwind label %cleanup-lpad

.noexc9:                                          ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^107^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !37 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^107^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G114592.0 = phi {}* [ %18, %header-check-br ], [ %G114592.1, %normal-dest17 ], [ %G114592.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 204), align 16
  %ptrtoint20 = ptrtoint {}* %G114592.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G114592.0, i64 2, {}* %"closure->KLH=MACH_ATOM", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag2, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 204), align 16
  %"closure->KLH=MACH_ATOM" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=MACH_ATOM^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACH_ATOM^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 3960, i64 107, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114592.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 206), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->KLH=MACH_ATOM", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 209), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->KLH=MACH_ATOM", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 428 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 204), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

normal-dest60:                                    ; preds = %tag2
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 203), align 8
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114592.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=MACH_ATOM^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !38 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACH_ATOM^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACH_ATOM^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc74 unwind label %cleanup-lpad

.noexc74:                                         ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest24
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 199), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest31 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest24, %normal-dest52
  %return-value.sroa.9.0 = phi i64 [ %.elt70, %normal-dest52 ], [ 1, %normal-dest24 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt68, %normal-dest52 ], [ %25, %normal-dest24 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %14 = insertvalue { {}*, i64 } %13, i64 %return-value.sroa.9.0, 1
  ret { {}*, i64 } %14

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest40, %normal-dest33, %normal-dest31, %tag1, %normal-dest15, %normal-dest12, %normal-dest10, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 193), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 195), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest10
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 197), align 8
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 2, {}* %20, {}* %farg0, {}* null, {}* null)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest12
  %.elt = extractvalue { {}*, i64 } %21, 0
  %.elt58 = extractvalue { {}*, i64 } %21, 1
  %cond = icmp eq i64 %.elt58, 0
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114625.0 = select i1 %cond, {}* %22, {}* %.elt
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 198), align 16
  %ptrtoint18 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint19 = add i64 %ptrtoint18, 7
  %entry-point-addr20 = inttoptr i64 %entry-point-addr-uint19 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point21 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr20, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point21({}* %17, i64 2, {}* %G114625.0, {}* %23, {}* null, {}* null)
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest15
  %.elt60 = extractvalue { {}*, i64 } %24, 0
  %.elt62 = extractvalue { {}*, i64 } %24, 1
  %cond55 = icmp eq i64 %.elt62, 0
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %object.0 = select i1 %cond55, {}* %25, {}* %.elt60
  %26 = icmp eq {}* %object.0, %25
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114619.0 = select i1 %26, {}* %.val, {}* %25
  %27 = icmp eq {}* %G114619.0, %25
  br i1 %27, label %tag4, label %tag1

normal-dest31:                                    ; preds = %tag1
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 201), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest33 unwind label %cleanup-lpad

normal-dest33:                                    ; preds = %normal-dest31
  %ptrtoint34 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %29, i64 3, {}* inttoptr (i64 762 to {}*), {}* inttoptr (i64 258 to {}*), {}* %farg0, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

normal-dest40:                                    ; preds = %normal-dest33
  %.elt64 = extractvalue { {}*, i64 } %30, 0
  %.elt66 = extractvalue { {}*, i64 } %30, 1
  %cond56 = icmp eq i64 %.elt66, 0
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114612.0 = select i1 %cond56, {}* %31, {}* %.elt64
  %ptrtoint46 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %12, i64 1, {}* %G114612.0, {}* null, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest40
  %.elt68 = extractvalue { {}*, i64 } %32, 0
  %.elt70 = extractvalue { {}*, i64 } %32, 1
  br label %tag4
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^112^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !39 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^112^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G114650.0 = phi {}* [ %18, %header-check-br ], [ %G114650.1, %normal-dest63 ], [ %G114650.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 223), align 8
  %ptrtoint22 = ptrtoint {}* %G114650.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G114650.0, i64 2, {}* %"closure->KLH=MACH_SYMBOL", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest56, %tag3, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 223), align 8
  %"closure->KLH=MACH_SYMBOL" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4102, i64 112, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 225), align 8
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->KLH=MACH_SYMBOL", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 226), align 16
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->KLH=MACH_SYMBOL", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 448 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 223), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 222), align 16
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114650.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag1

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114650.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !40 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc153 unwind label %cleanup-lpad

.noexc153:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest108
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 199), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest34 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest108, %normal-dest69
  %return-value.sroa.17.0 = phi i64 [ %.elt149, %normal-dest69 ], [ 1, %normal-dest108 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt147, %normal-dest69 ], [ %ERG.0, %normal-dest108 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %14 = insertvalue { {}*, i64 } %13, i64 %return-value.sroa.17.0, 1
  ret { {}*, i64 } %14

tag5:                                             ; preds = %normal-dest27
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 199), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest73 unwind label %cleanup-lpad

tag8:                                             ; preds = %normal-dest27, %normal-dest94
  %ERG.0 = phi {}* [ %ERG.1, %normal-dest94 ], [ %29, %normal-dest27 ]
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 213), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest101 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest101, %tag8, %normal-dest82, %normal-dest75, %normal-dest73, %tag5, %normal-dest57, %normal-dest45, %normal-dest38, %normal-dest36, %normal-dest34, %tag, %normal-dest18, %normal-dest15, %normal-dest13, %normal-dest
  %19 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %19

normal-dest:                                      ; preds = %entry
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 193), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 195), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest13
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 211), align 8
  %ptrtoint = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 2, {}* %24, {}* %farg0, {}* null, {}* null)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest15
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt121 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt121, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114699.0 = select i1 %cond, {}* %26, {}* %.elt
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 212), align 16
  %ptrtoint21 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint22 = add i64 %ptrtoint21, 7
  %entry-point-addr23 = inttoptr i64 %entry-point-addr-uint22 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point24 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr23, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point24({}* %21, i64 2, {}* %G114699.0, {}* %27, {}* null, {}* null)
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest27:                                    ; preds = %normal-dest18
  %.elt123 = extractvalue { {}*, i64 } %28, 0
  %.elt125 = extractvalue { {}*, i64 } %28, 1
  %cond114 = icmp eq i64 %.elt125, 0
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %object.0 = select i1 %cond114, {}* %29, {}* %.elt123
  %30 = icmp eq {}* %object.0, %29
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G114693.0 = select i1 %30, {}* %.val, {}* %29
  %31 = icmp eq {}* %G114693.0, %29
  br i1 %31, label %tag8, label %tag5

normal-dest34:                                    ; preds = %tag
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 215), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest34
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 219), align 8
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 220), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest36
  %ptrtoint39 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint40 = add i64 %ptrtoint39, 7
  %entry-point-addr41 = inttoptr i64 %entry-point-addr-uint40 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point42 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr41, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point42({}* %37, i64 1, {}* %ERG.0, {}* null, {}* null, {}* null)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest38
  %.elt139 = extractvalue { {}*, i64 } %38, 0
  %.elt141 = extractvalue { {}*, i64 } %38, 1
  %cond118 = icmp eq i64 %.elt141, 0
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114674.0 = select i1 %cond118, {}* %39, {}* %.elt139
  %ptrtoint51 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint52 = add i64 %ptrtoint51, 7
  %entry-point-addr53 = inttoptr i64 %entry-point-addr-uint52 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point54 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr53, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point54({}* %33, i64 3, {}* %34, {}* %35, {}* %G114674.0, {}* null)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest45
  %.elt143 = extractvalue { {}*, i64 } %40, 0
  %.elt145 = extractvalue { {}*, i64 } %40, 1
  %cond119 = icmp eq i64 %.elt145, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114670.0 = select i1 %cond119, {}* %41, {}* %.elt143
  %ptrtoint63 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint64 = add i64 %ptrtoint63, 7
  %entry-point-addr65 = inttoptr i64 %entry-point-addr-uint64 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point66 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr65, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point66({}* %12, i64 1, {}* %G114670.0, {}* null, {}* null, {}* null)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %normal-dest57
  %.elt147 = extractvalue { {}*, i64 } %42, 0
  %.elt149 = extractvalue { {}*, i64 } %42, 1
  br label %tag2

normal-dest73:                                    ; preds = %tag5
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 201), align 8
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest73
  %ptrtoint76 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint77 = add i64 %ptrtoint76, 7
  %entry-point-addr78 = inttoptr i64 %entry-point-addr-uint77 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point79 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr78, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point79({}* %44, i64 3, {}* inttoptr (i64 762 to {}*), {}* inttoptr (i64 258 to {}*), {}* %farg0, {}* null)
          to label %normal-dest82 unwind label %cleanup-lpad

normal-dest82:                                    ; preds = %normal-dest75
  %.elt127 = extractvalue { {}*, i64 } %45, 0
  %.elt129 = extractvalue { {}*, i64 } %45, 1
  %cond115 = icmp eq i64 %.elt129, 0
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114686.0 = select i1 %cond115, {}* %46, {}* %.elt127
  %ptrtoint88 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint89 = add i64 %ptrtoint88, 7
  %entry-point-addr90 = inttoptr i64 %entry-point-addr-uint89 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point91 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr90, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point91({}* %16, i64 1, {}* %G114686.0, {}* null, {}* null, {}* null)
          to label %normal-dest94 unwind label %cleanup-lpad

normal-dest94:                                    ; preds = %normal-dest82
  %.elt131 = extractvalue { {}*, i64 } %47, 0
  %.elt133 = extractvalue { {}*, i64 } %47, 1
  %cond116 = icmp eq i64 %.elt133, 0
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ERG.1 = select i1 %cond116, {}* %48, {}* %.elt131
  br label %tag8

normal-dest101:                                   ; preds = %tag8
  %ptrtoint102 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint103 = add i64 %ptrtoint102, 7
  %entry-point-addr104 = inttoptr i64 %entry-point-addr-uint103 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point105 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr104, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point105({}* %18, i64 1, {}* %ERG.0, {}* null, {}* null, {}* null)
          to label %normal-dest108 unwind label %cleanup-lpad

normal-dest108:                                   ; preds = %normal-dest101
  %.elt135 = extractvalue { {}*, i64 } %49, 0
  %.elt137 = extractvalue { {}*, i64 } %49, 1
  %cond117 = icmp eq i64 %.elt137, 0
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114680.0 = select i1 %cond117, {}* %50, {}* %.elt135
  %51 = icmp eq {}* %G114680.0, %50
  br i1 %51, label %tag2, label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^123^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !41 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^123^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G114723.0 = phi {}* [ %18, %header-check-br ], [ %G114723.1, %normal-dest17 ], [ %G114723.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 220), align 16
  %ptrtoint43 = ptrtoint {}* %G114723.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G114723.0, i64 2, {}* %"closure->KLH=WAS_NACH_STRING", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag3, %normal-dest21, %tag1, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 220), align 16
  %"closure->KLH=WAS_NACH_STRING" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4408, i64 123, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114723.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

normal-dest21:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 230), align 16
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114723.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag3

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 231), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->KLH=WAS_NACH_STRING", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 234), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->KLH=WAS_NACH_STRING", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 492 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 220), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !42 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 228), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %14
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^127^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !43 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^127^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G114764.0 = phi {}* [ %18, %header-check-br ], [ %G114764.1, %normal-dest63 ], [ %G114764.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 273), align 8
  %ptrtoint13 = ptrtoint {}* %G114764.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G114764.0, i64 2, {}* %"closure->KLH=AUSGABE_AUF_DATEI", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests54, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 273), align 8
  %"closure->KLH=AUSGABE_AUF_DATEI" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4470, i64 127, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br46

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 275), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->KLH=AUSGABE_AUF_DATEI", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 286), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->KLH=AUSGABE_AUF_DATEI", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 508 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 273), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag4

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %maybe-more-tests54
  %ptrtoint57 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114764.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag1

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 272), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114764.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !44 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure112 = alloca [128 x i8], align 1
  %stack-allocated-closure112.sub = getelementptr inbounds [128 x i8], [128 x i8]* %stack-allocated-closure112, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 3
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest104
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 268), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest39 unwind label %cleanup-lpad.loopexit.split-lp

tag2:                                             ; preds = %tag10, %normal-dest66
  %return-value.sroa.10.0 = phi i64 [ %.elt134, %normal-dest66 ], [ 1, %tag10 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt132, %normal-dest66 ], [ %.in, %tag10 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %11 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %12 = insertvalue { {}*, i64 } %11, i64 %return-value.sroa.10.0, 1
  ret { {}*, i64 } %12

tag4:                                             ; preds = %normal-dest75
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 238), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest46 unwind label %cleanup-lpad.loopexit.split-lp

tag6:                                             ; preds = %tag10
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 270), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest59 unwind label %cleanup-lpad.loopexit.split-lp

tag8:                                             ; preds = %normal-dest46, %normal-dest75
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 240), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest81 unwind label %cleanup-lpad.loopexit.split-lp

tag10:                                            ; preds = %normal-dest39.tag10_crit_edge, %normal-dest104
  %.in = phi {}* [ %.pre, %normal-dest39.tag10_crit_edge ], [ %mac-file-type.0, %normal-dest104 ]
  %19 = icmp eq {}* %.mac-file-creator.2, %.in
  br i1 %19, label %tag2, label %tag6

cleanup-lpad.loopexit:                            ; preds = %loop-kw-args
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %loop-cont, %kw-exit-block, %normal-dest35, %tag, %normal-dest39, %tag4, %normal-dest46, %tag6, %normal-dest59, %normal-dest36, %normal-dest68, %tag8, %normal-dest81, %normal-dest88, %normal-dest95
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @":::global-str-KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 3)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs15 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-116 = add i64 %rem-nargs15, -1
  store i64 %rem-nargs-116, i64* %"remaining-nargs*", align 8
  %vaarg17 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs19 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-120 = add i64 %rem-nargs19, -1
  store i64 %rem-nargs-120, i64* %"remaining-nargs*", align 8
  %vaarg21 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 67), align 8
  %23 = icmp eq i64 %nargs, 3
  br i1 %23, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G114747.0 = phi {}* [ %G114747.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %mac-file-creator.1 = phi {}* [ %mac-file-creator.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G114748.0 = phi {}* [ %G114748.2, %advance-arg-idx-block ], [ %21, %loop-kw-args.preheader ]
  %mac-file-type.1 = phi {}* [ %mac-file-type.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %27, %advance-arg-idx-block ], [ 3, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs24 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-125 = add i64 %rem-nargs24, -1
  store i64 %rem-nargs-125, i64* %"remaining-nargs*", align 8
  %vaarg26 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs27 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-128 = add i64 %rem-nargs27, -1
  store i64 %rem-nargs-128, i64* %"remaining-nargs*", align 8
  %vaarg29 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg26, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest30 unwind label %cleanup-lpad.loopexit

kw-exit-block:                                    ; preds = %continue, %loop-cont
  %G114747.1 = phi {}* [ %21, %continue ], [ %G114747.2, %loop-cont ]
  %mac-file-creator.2 = phi {}* [ undef, %continue ], [ %mac-file-creator.3, %loop-cont ]
  %G114748.1 = phi {}* [ %21, %continue ], [ %G114748.2, %loop-cont ]
  %mac-file-type.2 = phi {}* [ undef, %continue ], [ %mac-file-type.3, %loop-cont ]
  %24 = invoke {}* @cc_makeCell()
          to label %normal-dest35 unwind label %cleanup-lpad.loopexit.split-lp

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg26, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^^DESC")
          to label %kw-exit-block unwind label %cleanup-lpad.loopexit.split-lp

normal-dest30:                                    ; preds = %loop-kw-args
  %25 = icmp eq {}* %22, %vaarg26
  br i1 %25, label %aok-block, label %"kw-:MAC-FILE-TYPE-test"

aok-block:                                        ; preds = %normal-dest30
  %26 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg29)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %"kw-:MAC-FILE-CREATOR-test", %"kw-:MAC-FILE-TYPE-test", %not-seen-before-kw-block, %not-seen-before-kw-block32, %next-kw-block33, %aok-block
  %G114747.2 = phi {}* [ %G114747.0, %aok-block ], [ %G114747.0, %next-kw-block33 ], [ %20, %not-seen-before-kw-block32 ], [ %G114747.0, %not-seen-before-kw-block ], [ %G114747.0, %"kw-:MAC-FILE-TYPE-test" ], [ %G114747.0, %"kw-:MAC-FILE-CREATOR-test" ]
  %mac-file-creator.3 = phi {}* [ %mac-file-creator.1, %aok-block ], [ %mac-file-creator.1, %next-kw-block33 ], [ %vaarg29, %not-seen-before-kw-block32 ], [ %mac-file-creator.1, %not-seen-before-kw-block ], [ %mac-file-creator.1, %"kw-:MAC-FILE-TYPE-test" ], [ %mac-file-creator.1, %"kw-:MAC-FILE-CREATOR-test" ]
  %G114748.2 = phi {}* [ %G114748.0, %aok-block ], [ %G114748.0, %next-kw-block33 ], [ %G114748.0, %not-seen-before-kw-block32 ], [ %20, %not-seen-before-kw-block ], [ %G114748.0, %"kw-:MAC-FILE-TYPE-test" ], [ %G114748.0, %"kw-:MAC-FILE-CREATOR-test" ]
  %mac-file-type.3 = phi {}* [ %mac-file-type.1, %aok-block ], [ %mac-file-type.1, %next-kw-block33 ], [ %mac-file-type.1, %not-seen-before-kw-block32 ], [ %vaarg29, %not-seen-before-kw-block ], [ %mac-file-type.1, %"kw-:MAC-FILE-TYPE-test" ], [ %mac-file-type.1, %"kw-:MAC-FILE-CREATOR-test" ]
  %phi-this-was-aok = phi i64 [ %26, %aok-block ], [ %phi-saw-aok, %next-kw-block33 ], [ %phi-saw-aok, %not-seen-before-kw-block32 ], [ %phi-saw-aok, %not-seen-before-kw-block ], [ %phi-saw-aok, %"kw-:MAC-FILE-TYPE-test" ], [ %phi-saw-aok, %"kw-:MAC-FILE-CREATOR-test" ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %33, %next-kw-block33 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block32 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block ], [ %phi-bad-kw-idx, %"kw-:MAC-FILE-TYPE-test" ], [ %phi-bad-kw-idx, %"kw-:MAC-FILE-CREATOR-test" ]
  %27 = add i64 %phi-reg-arg-idx, 2
  %28 = icmp slt i64 %27, %nargs
  br i1 %28, label %loop-kw-args, label %loop-cont

"kw-:MAC-FILE-TYPE-test":                         ; preds = %normal-dest30
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 288), align 16
  %30 = call i64 @cc_matchKeywordOnce({}* %29, {}* %vaarg26, {}* %G114748.0)
  switch i64 %30, label %not-seen-before-kw-block [
    i64 0, label %"kw-:MAC-FILE-CREATOR-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block:                         ; preds = %"kw-:MAC-FILE-TYPE-test"
  br label %advance-arg-idx-block

"kw-:MAC-FILE-CREATOR-test":                      ; preds = %"kw-:MAC-FILE-TYPE-test"
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 289), align 8
  %32 = call i64 @cc_matchKeywordOnce({}* %31, {}* %vaarg26, {}* %G114747.0)
  switch i64 %32, label %not-seen-before-kw-block32 [
    i64 0, label %next-kw-block33
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block32:                       ; preds = %"kw-:MAC-FILE-CREATOR-test"
  br label %advance-arg-idx-block

next-kw-block33:                                  ; preds = %"kw-:MAC-FILE-CREATOR-test"
  %33 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest35:                                    ; preds = %kw-exit-block
  %34 = invoke {}* @cc_makeCell()
          to label %normal-dest36 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest36:                                    ; preds = %normal-dest35
  call void @cc_writeCell({}* %24, {}* %vaarg17)
  call void @cc_writeCell({}* %34, {}* %vaarg21)
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %36 = icmp eq {}* %G114748.1, %35
  %mac-file-type.0 = select i1 %36, {}* %35, {}* %mac-file-type.2
  %37 = icmp eq {}* %G114747.1, %35
  %.mac-file-creator.2 = select i1 %37, {}* %35, {}* %mac-file-creator.2
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 236), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest68 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest39:                                    ; preds = %tag
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %vaarg, {}* %mac-file-type.0, {}* null, {}* null)
          to label %normal-dest39.tag10_crit_edge unwind label %cleanup-lpad.loopexit.split-lp

normal-dest39.tag10_crit_edge:                    ; preds = %normal-dest39
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag10

normal-dest46:                                    ; preds = %tag4
  %ptrtoint47 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %14, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %tag8 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest59:                                    ; preds = %tag6
  %ptrtoint60 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %16, i64 2, {}* %vaarg, {}* %.mac-file-creator.2, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest66:                                    ; preds = %normal-dest59
  %.elt132 = extractvalue { {}*, i64 } %42, 0
  %.elt134 = extractvalue { {}*, i64 } %42, 1
  br label %tag2

normal-dest68:                                    ; preds = %normal-dest36
  %ptrtoint69 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %39, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest75:                                    ; preds = %normal-dest68
  %.elt = extractvalue { {}*, i64 } %43, 0
  %.elt114 = extractvalue { {}*, i64 } %43, 1
  %cond = icmp eq i64 %.elt114, 0
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114847.0 = select i1 %cond, {}* %44, {}* %.elt
  %45 = icmp eq {}* %G114847.0, %44
  br i1 %45, label %tag8, label %tag4

normal-dest81:                                    ; preds = %tag8
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 242), align 16
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 244), align 16
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 246), align 16
  %49 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 248), align 16
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 250), align 16
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 252), align 16
  %ptrtoint82 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint83 = add i64 %ptrtoint82, 7
  %entry-point-addr84 = inttoptr i64 %entry-point-addr-uint83 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point85 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr84, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point85({}* %18, i64 7, {}* %vaarg, {}* %46, {}* %47, {}* %48, {}* %49, {}* %50, {}* %51)
          to label %normal-dest88 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest88:                                    ; preds = %normal-dest81
  %53 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 254), align 16
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest95 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest95:                                    ; preds = %normal-dest88
  %.elt122 = extractvalue { {}*, i64 } %52, 1
  %cond111 = icmp eq i64 %.elt122, 0
  %.elt120 = extractvalue { {}*, i64 } %52, 0
  %G114746.0 = select i1 %cond111, {}* %53, {}* %.elt120
  %56 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure112.sub, {}* %57, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.1", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.1^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4470, i64 127, i64 0, i64 2, {}* %34, {}* %24)
  %ptrtoint98 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint99 = add i64 %ptrtoint98, 7
  %entry-point-addr100 = inttoptr i64 %entry-point-addr-uint99 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr100, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point101({}* %55, i64 3, {}* %56, {}* %G114746.0, {}* %"closure->LAMBDA", {}* null)
          to label %normal-dest104 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest104:                                   ; preds = %normal-dest95
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %60 = icmp eq {}* %mac-file-type.0, %59
  br i1 %60, label %tag10, label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.1"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !45 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure13 = alloca [128 x i8], align 1
  %stack-allocated-closure814 = alloca [112 x i8], align 1
  %stack-allocated-closure814.sub = getelementptr inbounds [112 x i8], [112 x i8]* %stack-allocated-closure814, i64 0, i64 0
  %stack-allocated-closure13.sub = getelementptr inbounds [128 x i8], [128 x i8]* %stack-allocated-closure13, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.1^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest6, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %16 = load %"class.core::T_O"*, %"class.core::T_O"** %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %18 = load %"class.core::T_O"*, %"class.core::T_O"** %17, align 8, !tbaa !32
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 258), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure13.sub, {}* %21, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.2", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4470, i64 127, i64 0, i64 2, %"class.core::T_O"* %18, %"class.core::T_O"* %16)
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA9" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure814.sub, {}* %22, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.5", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.5^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4470, i64 127, i64 0, i64 0)
  %ptrtoint = ptrtoint {}* %20 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %20, i64 2, {}* %"closure->LAMBDA", {}* %"closure->LAMBDA9", {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest6
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %23
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.2"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !46 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure13 = alloca [128 x i8], align 1
  %stack-allocated-closure814 = alloca [112 x i8], align 1
  %stack-allocated-closure814.sub = getelementptr inbounds [112 x i8], [112 x i8]* %stack-allocated-closure814, i64 0, i64 0
  %stack-allocated-closure13.sub = getelementptr inbounds [128 x i8], [128 x i8]* %stack-allocated-closure13, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest6, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %16 = load %"class.core::T_O"*, %"class.core::T_O"** %15, align 8, !tbaa !32
  %17 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %18 = load %"class.core::T_O"*, %"class.core::T_O"** %17, align 8, !tbaa !32
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 260), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure13.sub, {}* %21, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.3", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.3^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4470, i64 127, i64 0, i64 2, %"class.core::T_O"* %18, %"class.core::T_O"* %16)
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA9" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure814.sub, {}* %22, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.4", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4470, i64 127, i64 0, i64 0)
  %ptrtoint = ptrtoint {}* %20 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %20, i64 2, {}* %"closure->LAMBDA", {}* %"closure->LAMBDA9", {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest6
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %23
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.3"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !47 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.3^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest6, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !32
  %18 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %19 = bitcast %"class.core::T_O"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !32
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 262), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest
  %23 = add i64 %17, -3
  %24 = inttoptr i64 %23 to {}**
  %25 = load {}*, {}** %24, align 8, !tbaa !32
  %26 = add i64 %20, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8, !tbaa !32
  %ptrtoint = ptrtoint {}* %22 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %22, i64 2, {}* %25, {}* %28, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest6
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %29
}

; Function Attrs: nounwind
declare {}* @cc_stack_enclose(i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.4"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !48 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest7, %normal-dest13
  %return-value.sroa.3.0 = phi i64 [ %.elt17, %normal-dest13 ], [ 1, %normal-dest7 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt, %normal-dest13 ], [ %17, %normal-dest7 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %11 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %12 = insertvalue { {}*, i64 } %11, i64 %return-value.sroa.3.0, 1
  ret { {}*, i64 } %12

tag1:                                             ; preds = %normal-dest7
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 264), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest8 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest10, %normal-dest8, %tag1, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %17 = invoke {}* @cc_safe_symbol_value({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %19 = icmp eq {}* %17, %18
  br i1 %19, label %tag, label %tag1

normal-dest8:                                     ; preds = %tag1
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %21 = invoke {}* @cc_safe_symbol_value({}* %20)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest8
  %ptrtoint = ptrtoint {}* %14 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %14, i64 1, {}* %21, {}* null, {}* null, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt = extractvalue { {}*, i64 } %22, 0
  %.elt17 = extractvalue { {}*, i64 } %22, 1
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.5"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !49 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.5^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest7
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 264), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest8 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest7, %normal-dest13
  %return-value.sroa.3.0 = phi i64 [ %.elt17, %normal-dest13 ], [ 1, %normal-dest7 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt, %normal-dest13 ], [ %17, %normal-dest7 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %14 = insertvalue { {}*, i64 } %13, i64 %return-value.sroa.3.0, 1
  ret { {}*, i64 } %14

cleanup-lpad:                                     ; preds = %10, %normal-dest10, %normal-dest8, %tag, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %17 = invoke {}* @cc_safe_symbol_value({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %19 = icmp eq {}* %17, %18
  br i1 %19, label %tag2, label %tag

normal-dest8:                                     ; preds = %tag
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %21 = invoke {}* @cc_safe_symbol_value({}* %20)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest8
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 266), align 16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 3, {}* %21, {}* %22, {}* %23, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt = extractvalue { {}*, i64 } %24, 0
  %.elt17 = extractvalue { {}*, i64 } %24, 1
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^147^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !50 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^147^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G114903.0 = phi {}* [ %18, %header-check-br ], [ %G114903.1, %normal-dest54 ], [ %G114903.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 311), align 8
  %ptrtoint13 = ptrtoint {}* %G114903.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G114903.0, i64 2, {}* %"closure->KLH=SPIEGEL_ARRAY", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 311), align 8
  %"closure->KLH=SPIEGEL_ARRAY" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5252, i64 147, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 313), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->KLH=SPIEGEL_ARRAY", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 316), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->KLH=SPIEGEL_ARRAY", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 588 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 311), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 310), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114903.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114903.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !51 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc802 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc802:                                        ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest398
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest610 unwind label %cleanup-lpad.loopexit

tag2:                                             ; preds = %normal-dest182
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag99

tag8:                                             ; preds = %header-check-br588, %tag100
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 137), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest164 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag10:                                            ; preds = %normal-dest585
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag121

tag11:                                            ; preds = %normal-dest139
  %17 = add i64 %128, -3
  %18 = inttoptr i64 %17 to {}**
  %19 = load {}*, {}** %18, align 8
  br label %tag23

tag12:                                            ; preds = %tag67
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag99

tag13:                                            ; preds = %tag102
  %consp-test179 = icmp eq i64 %tag-only222, 3
  br i1 %consp-test179, label %tag117, label %tag46

tag14:                                            ; preds = %tag73
  %21 = invoke float @from_object_float({}* %L_X.0)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit

tag15:                                            ; preds = %normal-dest585
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag121

tag16:                                            ; preds = %tag23
  %23 = icmp eq {}* %DIMENSION.0, %34
  %.val827 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115125.0 = select i1 %23, {}* %.val827, {}* %34
  %24 = icmp eq {}* %G115125.0, %34
  br i1 %24, label %tag64, label %tag63

tag17:                                            ; preds = %tag108
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest190 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag20:                                            ; preds = %tag108, %normal-dest198, %tag74
  %.in742 = phi {}* [ %84, %tag74 ], [ %.in, %normal-dest198 ], [ %.val840, %tag108 ]
  %27 = bitcast {}* %.in742 to i8*
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag21:                                            ; preds = %tag66
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest641 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag22:                                            ; preds = %tag102
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 305), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest229 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag23:                                            ; preds = %tag125, %normal-dest325, %tag11
  %34 = phi {}* [ %127, %tag11 ], [ %167, %normal-dest325 ], [ %127, %tag125 ]
  %.in748 = phi {}* [ %19, %tag11 ], [ %.in747, %normal-dest325 ], [ %127, %tag125 ]
  %35 = bitcast {}* %.in748 to i8*
  br i1 %consp-test, label %tag56, label %tag16

tag28:                                            ; preds = %normal-dest171
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 139), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest255 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag29:                                            ; preds = %header-check-br345
  %38 = invoke double @from_object_double({}* nonnull %L_X.0)
          to label %normal-dest268 unwind label %cleanup-lpad.loopexit

tag31:                                            ; preds = %tag31.backedge, %tag41
  %39 = phi {}* [ %50, %tag41 ], [ %.be, %tag31.backedge ]
  %L_Y.0 = phi {}* [ null, %tag41 ], [ %L_Y.0.be, %tag31.backedge ]
  %40 = ptrtoint {}* %L_Y.0 to i64
  %fixnum-tag-only273698 = and i64 %40, 3
  %fixnump-test274 = icmp eq i64 %fixnum-tag-only273698, 0
  br i1 %fixnump-test274, label %tag84, label %tag48

tag32:                                            ; preds = %normal-dest262
  %41 = add i64 %ptrtoint221, 5
  %42 = inttoptr i64 %41 to {}**
  %43 = load {}*, {}** %42, align 8
  %44 = icmp eq {}* %43, %153
  %.val852 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115081.0.pre = select i1 %44, {}* %.val852, {}* %153
  %45 = icmp eq {}* %G115081.0.pre, %153
  br i1 %45, label %tag46, label %tag92

tag33:                                            ; preds = %tag93
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest276 unwind label %cleanup-lpad.loopexit

tag40:                                            ; preds = %tag75, %header-check-br220
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 137), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest304 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag41:                                            ; preds = %normal-dest229, %normal-dest564, %tag90, %normal-dest464
  %.sink825 = phi { {}*, i64 } [ %200, %normal-dest464 ], [ %94, %tag90 ], [ %214, %normal-dest564 ], [ %151, %normal-dest229 ]
  %.elt762 = extractvalue { {}*, i64 } %.sink825, 0
  %.elt764 = extractvalue { {}*, i64 } %.sink825, 1
  %cond675 = icmp eq i64 %.elt764, 0
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %NEU.4 = select i1 %cond675, {}* %50, {}* %.elt762
  %51 = ptrtoint {}* %.in748 to i64
  %fixnum-tag-only509749 = and i64 %51, 3
  %fixnump-test510 = icmp eq i64 %fixnum-tag-only509749, 0
  %52 = ptrtoint {}* %.in742 to i64
  %fixnum-tag-only511743 = and i64 %52, 3
  %fixnump-test512 = icmp eq i64 %fixnum-tag-only511743, 0
  %single-float-tag-only460 = and i64 %52, 7
  %53 = icmp eq i64 %single-float-tag-only460, 6
  %test348 = icmp ne i64 %single-float-tag-only460, 1
  %gep350 = getelementptr inbounds i8, i8* %27, i64 -9
  %irc-bit-cast351 = bitcast i8* %gep350 to i64*
  %single-float-tag-only654 = and i64 %51, 7
  %54 = icmp eq i64 %single-float-tag-only654, 6
  %test = icmp ne i64 %single-float-tag-only654, 1
  %gep = getelementptr inbounds i8, i8* %35, i64 -9
  %irc-bit-cast149 = bitcast i8* %gep to i64*
  br label %tag31

tag42:                                            ; preds = %normal-dest269
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag99

tag43:                                            ; preds = %tag125
  %56 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest318 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag44:                                            ; preds = %normal-dest311
  %58 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 139), align 8
  %59 = invoke {}* @cc_safe_fdefinition({}* %58)
          to label %normal-dest332 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag46:                                            ; preds = %header-check-br588, %normal-dest171, %tag13, %normal-dest262, %tag100, %tag32
  %.val838854 = phi {}* [ %153, %tag32 ], [ %105, %header-check-br588 ], [ %135, %normal-dest171 ], [ %105, %tag13 ], [ %153, %normal-dest262 ], [ %105, %tag100 ]
  %60 = icmp eq {}* %.in786, %.val838854
  %brmerge = or i1 %consp-test179, %60
  %.val837 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115054.0 = select i1 %brmerge, {}* %.val837, {}* %.val838854
  %61 = icmp eq {}* %G115054.0, %.val838854
  br i1 %61, label %tag77, label %tag104

tag48:                                            ; preds = %tag31
  %trunc = trunc i64 %40 to i3
  switch i3 %trunc, label %tag97 [
    i3 -2, label %tag129
    i3 1, label %header-check-br352
  ]

tag50:                                            ; preds = %tag67
  %62 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag99

tag51:                                            ; preds = %tag99
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 307), align 8
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest361 unwind label %cleanup-lpad.loopexit

tag56:                                            ; preds = %tag23
  %65 = add i64 %128, 5
  %66 = inttoptr i64 %65 to {}**
  %67 = load {}*, {}** %66, align 8
  br label %tag63

tag61:                                            ; preds = %normal-dest603, %normal-dest415, %header-check-br375
  %G115022.0 = phi {}* [ %178, %header-check-br375 ], [ %G115022.1, %normal-dest415 ], [ %G115022.2, %normal-dest603 ]
  %ptrtoint392 = ptrtoint {}* %G115022.0 to i64
  %entry-point-addr-uint393 = add i64 %ptrtoint392, 7
  %entry-point-addr394 = inttoptr i64 %entry-point-addr-uint393 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point395 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr394, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point395({}* %G115022.0, i64 4, {}* %G114883114884.0, {}* %NEU.4, {}* %L_X.0, {}* %L_Y.0)
          to label %normal-dest398 unwind label %cleanup-lpad.loopexit

tag62:                                            ; preds = %normal-dest374, %header-check-br513
  %69 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest408 unwind label %cleanup-lpad.loopexit

tag63:                                            ; preds = %tag16, %normal-dest433, %tag56
  %.val840 = phi {}* [ %34, %tag56 ], [ %192, %normal-dest433 ], [ %34, %tag16 ]
  %x162.0 = phi {}* [ %67, %tag56 ], [ %x162.1, %normal-dest433 ], [ %34, %tag16 ]
  %71 = ptrtoint {}* %x162.0 to i64
  %tag-only423688 = and i64 %71, 7
  %consp-test424 = icmp eq i64 %tag-only423688, 3
  %.val829 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115112.0 = select i1 %consp-test424, {}* %.val829, {}* %.val840
  %72 = icmp eq {}* %G115112.0, %.val840
  br i1 %72, label %tag108, label %tag74

tag64:                                            ; preds = %tag16
  %73 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest426 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag65:                                            ; preds = %tag121
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %75 = insertvalue { {}*, i64 } undef, {}* %NEU.4, 0
  %76 = insertvalue { {}*, i64 } %75, i64 1, 1
  ret { {}*, i64 } %76

tag66:                                            ; preds = %tag99
  br i1 %fixnump-test274, label %tag112, label %tag21

tag67:                                            ; preds = %tag85
  %77 = icmp slt {}* %L_X.0, %.in742
  br i1 %77, label %tag50, label %tag12

tag68:                                            ; preds = %normal-dest544
  %78 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag121

tag69:                                            ; preds = %normal-dest535
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest446 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag71:                                            ; preds = %normal-dest544
  %81 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag121

tag73:                                            ; preds = %tag131
  br i1 %53, label %tag14, label %tag80

tag74:                                            ; preds = %tag63
  %82 = add i64 %71, -3
  %83 = inttoptr i64 %82 to {}**
  %84 = load {}*, {}** %83, align 8
  br label %tag20

tag75:                                            ; preds = %normal-dest214
  %.old = and i64 %ptrtoint221, 3
  %fixnump-test462.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test462.old, label %tag40, label %tag113

tag77:                                            ; preds = %tag46
  %85 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest464 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag79:                                            ; preds = %tag112
  %87 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest479 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag80:                                            ; preds = %header-check-br152, %tag131, %tag85, %tag73, %header-check-br345
  %89 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 120), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest493 unwind label %cleanup-lpad.loopexit

tag83:                                            ; preds = %tag84
  %91 = icmp slt {}* %L_Y.0, %.in748
  %92 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %. = select i1 %91, {}* %92, {}* %39
  br label %tag121

tag84:                                            ; preds = %tag31
  br i1 %fixnump-test510, label %tag83, label %tag97

tag85:                                            ; preds = %tag126
  br i1 %fixnump-test512, label %tag67, label %tag80

tag90:                                            ; preds = %normal-dest454, %tag111
  %93 = phi {}* [ %.val834, %tag111 ], [ %198, %normal-dest454 ]
  %G115058.0 = phi {}* [ %113, %tag111 ], [ %G115058.1, %normal-dest454 ]
  %ptrtoint522 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint523 = add i64 %ptrtoint522, 7
  %entry-point-addr524 = inttoptr i64 %entry-point-addr-uint523 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point525 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr524, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point525({}* %97, i64 3, {}* %G115058.0, {}* %146, {}* %93, {}* null)
          to label %tag41 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag91:                                            ; preds = %normal-dest182
  %95 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag99

tag92:                                            ; preds = %tag32
  %96 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 305), align 8
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest535 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag93:                                            ; preds = %normal-dest398
  %98 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %123, i64 4)
  %result541 = extractvalue { i64, i1 } %98, 0
  %overflow542 = extractvalue { i64, i1 } %98, 1
  %99 = inttoptr i64 %result541 to {}*
  br i1 %overflow542, label %tag33, label %tag126.backedge

tag126.backedge:                                  ; preds = %tag93, %normal-dest284, %normal-dest617
  %L_X.0.be = phi {}* [ %L_X.1, %normal-dest284 ], [ %L_X.2, %normal-dest617 ], [ %99, %tag93 ]
  br label %tag126

tag95:                                            ; preds = %header-check-br
  %100 = invoke double @from_object_double({}* nonnull %L_Y.0)
          to label %normal-dest543 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag97:                                            ; preds = %header-check-br352, %tag48, %tag129, %tag84, %header-check-br
  %101 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 120), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest546 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag99:                                            ; preds = %normal-dest500, %tag105, %tag91, %tag50, %tag42, %tag12, %tag2
  %G114973.0 = phi {}* [ %62, %tag50 ], [ %20, %tag12 ], [ %95, %tag91 ], [ %13, %tag2 ], [ %55, %tag42 ], [ %109, %tag105 ], [ %G114973.1, %normal-dest500 ]
  %103 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %104 = icmp eq {}* %G114973.0, %103
  br i1 %104, label %tag66, label %tag51

tag100:                                           ; preds = %tag117
  %.old823 = and i64 %ptrtoint589, 3
  %fixnump-test560.old = icmp eq i64 %.old823, 0
  br i1 %fixnump-test560.old, label %tag8, label %tag46

tag102:                                           ; preds = %normal-dest339, %tag113
  %105 = phi {}* [ %.pre, %tag113 ], [ %169, %normal-dest339 ]
  %G115089.0.in = phi {}** [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), %tag113 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %normal-dest339 ]
  %G115089.0 = load {}*, {}** %G115089.0.in, align 8
  %106 = icmp eq {}* %G115089.0, %105
  br i1 %106, label %tag13, label %tag22

tag104:                                           ; preds = %tag46
  %107 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 303), align 8
  %108 = invoke {}* @cc_safe_fdefinition({}* %107)
          to label %normal-dest564 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag105:                                           ; preds = %normal-dest269
  %109 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag99

tag108:                                           ; preds = %tag63
  %110 = icmp eq {}* %x162.0, %.val840
  %G115105.0 = select i1 %110, {}* %.val829, {}* %.val840
  %111 = icmp eq {}* %G115105.0, %.val840
  br i1 %111, label %tag17, label %tag20

tag109:                                           ; preds = %tag129
  %112 = invoke float @from_object_float({}* %L_Y.0)
          to label %normal-dest584 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag111:                                           ; preds = %normal-dest535
  %113 = load {}*, {}** %117, align 8
  br label %tag90

tag112:                                           ; preds = %tag66
  %114 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %40, i64 4)
  %result = extractvalue { i64, i1 } %114, 0
  %overflow = extractvalue { i64, i1 } %114, 1
  %115 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag79, label %tag31.backedge

tag31.backedge:                                   ; preds = %tag112, %normal-dest486, %normal-dest648
  %.be = phi {}* [ %202, %normal-dest486 ], [ %224, %normal-dest648 ], [ %G114973.0, %tag112 ]
  %L_Y.0.be = phi {}* [ %L_Y.1, %normal-dest486 ], [ %L_Y.2, %normal-dest648 ], [ %115, %tag112 ]
  br label %tag31

tag113:                                           ; preds = %header-check-br220, %tag75, %normal-dest339, %normal-dest311
  %.pre = phi {}* [ %146, %header-check-br220 ], [ %146, %tag75 ], [ %169, %normal-dest339 ], [ %160, %normal-dest311 ]
  br label %tag102

tag117:                                           ; preds = %tag13
  %116 = add i64 %ptrtoint221, -3
  %117 = inttoptr i64 %116 to {}**
  %118 = load {}*, {}** %117, align 8
  %ptrtoint589 = ptrtoint {}* %118 to i64
  %tag-only590 = and i64 %ptrtoint589, 7
  %test591 = icmp eq i64 %tag-only590, 1
  br i1 %test591, label %header-check-br588, label %tag100

tag121:                                           ; preds = %tag83, %normal-dest553, %tag71, %tag68, %tag15, %tag10
  %G114923.0 = phi {}* [ %16, %tag10 ], [ %22, %tag15 ], [ %81, %tag71 ], [ %78, %tag68 ], [ %G114923.1, %normal-dest553 ], [ %., %tag83 ]
  %119 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %120 = icmp eq {}* %G114923.0, %119
  br i1 %120, label %tag65, label %tag126.preheader

tag126.preheader:                                 ; preds = %tag121
  br label %tag126

tag125:                                           ; preds = %normal-dest139
  %121 = icmp eq {}* %DIMENSION.0, %127
  %G115141.0 = select i1 %121, {}* %.val, {}* %127
  %122 = icmp eq {}* %G115141.0, %127
  br i1 %122, label %tag43, label %tag23

tag126:                                           ; preds = %tag126.backedge, %tag126.preheader
  %L_X.0 = phi {}* [ null, %tag126.preheader ], [ %L_X.0.be, %tag126.backedge ]
  %123 = ptrtoint {}* %L_X.0 to i64
  %fixnum-tag-only638703 = and i64 %123, 3
  %fixnump-test639 = icmp eq i64 %fixnum-tag-only638703, 0
  br i1 %fixnump-test639, label %tag85, label %tag131

tag129:                                           ; preds = %tag48
  br i1 %54, label %tag109, label %tag97

tag131:                                           ; preds = %tag126
  %trunc831 = trunc i64 %123 to i3
  switch i3 %trunc831, label %tag80 [
    i3 -2, label %tag73
    i3 1, label %header-check-br152
  ]

cleanup-lpad.loopexit:                            ; preds = %tag14, %normal-dest180, %tag29, %normal-dest268, %tag33, %normal-dest276, %tag51, %normal-dest361, %normal-dest368, %tag61, %tag62, %normal-dest408, %tag80, %normal-dest493, %maybe-more-tests521, %normal-dest596, %tag1, %normal-dest610
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest641, %tag21, %normal-dest584, %tag109, %normal-dest546, %tag97, %normal-dest543, %tag95, %normal-dest479, %tag79
  %lpad.loopexit843 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %9, %normal-dest564, %tag104, %tag92, %tag90, %normal-dest464, %tag77, %normal-dest446, %tag69, %normal-dest426, %tag64, %normal-dest332, %tag44, %normal-dest318, %tag43, %normal-dest304, %tag40, %normal-dest255, %tag28, %normal-dest229, %tag22, %normal-dest207, %tag20, %normal-dest190, %tag17, %normal-dest164, %tag8, %normal-dest136, %normal-dest
  %lpad.loopexit.split-lp844 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit843, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp844, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %124 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 290), align 16
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest136 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest136:                                   ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %125 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %126 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %125, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest139 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest139:                                   ; preds = %normal-dest136
  %.elt = extractvalue { {}*, i64 } %126, 0
  %.elt685 = extractvalue { {}*, i64 } %126, 1
  %cond = icmp eq i64 %.elt685, 0
  %127 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %DIMENSION.0 = select i1 %cond, {}* %127, {}* %.elt
  %128 = ptrtoint {}* %DIMENSION.0 to i64
  %tag-only686 = and i64 %128, 7
  %consp-test = icmp eq i64 %tag-only686, 3
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115148.0 = select i1 %consp-test, {}* %.val, {}* %127
  %129 = icmp eq {}* %G115148.0, %127
  br i1 %129, label %tag125, label %tag11

header-check-br:                                  ; preds = %header-check-br352
  %130 = load i64, i64* %irc-bit-cast149, align 8
  %131 = icmp eq i64 %130, 1325
  br i1 %131, label %tag95, label %tag97

header-check-br152:                               ; preds = %tag131
  %irc-bit-cast156 = bitcast {}* %L_X.0 to i8*
  %gep157 = getelementptr inbounds i8, i8* %irc-bit-cast156, i64 -9
  %irc-bit-cast158 = bitcast i8* %gep157 to i64*
  %132 = load i64, i64* %irc-bit-cast158, align 8
  %133 = icmp ne i64 %132, 1325
  %brmerge848 = or i1 %test348, %133
  br i1 %brmerge848, label %tag80, label %header-check-br345

normal-dest164:                                   ; preds = %tag8
  %ptrtoint165 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint166 = add i64 %ptrtoint165, 7
  %entry-point-addr167 = inttoptr i64 %entry-point-addr-uint166 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point168 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr167, align 8
  %134 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point168({}* %15, i64 2, {}* %118, {}* null, {}* null, {}* null)
          to label %normal-dest171 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest171:                                   ; preds = %normal-dest164
  %.elt771 = extractvalue { {}*, i64 } %134, 0
  %.elt773 = extractvalue { {}*, i64 } %134, 1
  %cond677 = icmp eq i64 %.elt773, 0
  %135 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115169.0 = select i1 %cond677, {}* %135, {}* %.elt771
  %136 = icmp eq {}* %G115169.0, %135
  br i1 %136, label %tag46, label %tag28

normal-dest180:                                   ; preds = %tag14
  %137 = invoke float @from_object_float({}* %.in742)
          to label %normal-dest182 unwind label %cleanup-lpad.loopexit

normal-dest182:                                   ; preds = %normal-dest180
  %138 = fcmp olt float %21, %137
  br i1 %138, label %tag91, label %tag2

normal-dest190:                                   ; preds = %tag17
  %139 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %140 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %141 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %142 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint192 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint193 = add i64 %ptrtoint192, 7
  %entry-point-addr194 = inttoptr i64 %entry-point-addr-uint193 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point195 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr194, align 8
  %143 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point195({}* %26, i64 5, {}* %139, {}* %140, {}* %x162.0, {}* %141, {}* %142)
          to label %normal-dest198 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest198:                                   ; preds = %normal-dest190
  %.elt788 = extractvalue { {}*, i64 } %143, 0
  %.elt790 = extractvalue { {}*, i64 } %143, 1
  %cond681 = icmp eq i64 %.elt790, 0
  %144 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %.in = select i1 %cond681, {}* %144, {}* %.elt788
  br label %tag20

normal-dest207:                                   ; preds = %tag20
  %ptrtoint208 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint209 = add i64 %ptrtoint208, 7
  %entry-point-addr210 = inttoptr i64 %entry-point-addr-uint209 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point211 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr210, align 8
  %145 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point211({}* %29, i64 2, {}* %.in742, {}* %.in748, {}* null, {}* null)
          to label %normal-dest214 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest214:                                   ; preds = %normal-dest207
  %.elt690 = extractvalue { {}*, i64 } %145, 0
  %.elt692 = extractvalue { {}*, i64 } %145, 1
  %cond662 = icmp eq i64 %.elt692, 0
  %146 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %.in786 = select i1 %cond662, {}* %146, {}* %.elt690
  %ptrtoint221 = ptrtoint {}* %.in786 to i64
  %tag-only222 = and i64 %ptrtoint221, 7
  %test223 = icmp eq i64 %tag-only222, 1
  br i1 %test223, label %header-check-br220, label %tag75

header-check-br220:                               ; preds = %normal-dest214
  %147 = bitcast {}* %.in786 to i8*
  %gep225 = getelementptr inbounds i8, i8* %147, i64 -9
  %irc-bit-cast226 = bitcast i8* %gep225 to i64*
  %148 = load i64, i64* %irc-bit-cast226, align 8
  %149 = icmp eq i64 %148, 1349
  %fixnum-tag-only461693 = and i64 %ptrtoint221, 3
  %fixnump-test462 = icmp eq i64 %fixnum-tag-only461693, 0
  %or.cond822 = or i1 %fixnump-test462, %149
  br i1 %or.cond822, label %tag40, label %tag113

normal-dest229:                                   ; preds = %tag22
  %150 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint230 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint231 = add i64 %ptrtoint230, 7
  %entry-point-addr232 = inttoptr i64 %entry-point-addr-uint231 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point233 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr232, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point233({}* %33, i64 3, {}* %.in786, {}* %146, {}* %150, {}* null)
          to label %tag41 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest255:                                   ; preds = %tag28
  %ptrtoint256 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint257 = add i64 %ptrtoint256, 7
  %entry-point-addr258 = inttoptr i64 %entry-point-addr-uint257 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point259 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr258, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point259({}* %37, i64 2, {}* %118, {}* inttoptr (i64 9223372036854775800 to {}*), {}* null, {}* null)
          to label %normal-dest262 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest262:                                   ; preds = %normal-dest255
  %.elt775 = extractvalue { {}*, i64 } %152, 0
  %.elt777 = extractvalue { {}*, i64 } %152, 1
  %cond678 = icmp eq i64 %.elt777, 0
  %153 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115166.0 = select i1 %cond678, {}* %153, {}* %.elt775
  %154 = icmp eq {}* %G115166.0, %153
  br i1 %154, label %tag46, label %tag32

normal-dest268:                                   ; preds = %tag29
  %155 = invoke double @from_object_double({}* nonnull %.in742)
          to label %normal-dest269 unwind label %cleanup-lpad.loopexit

normal-dest269:                                   ; preds = %normal-dest268
  %156 = fcmp olt double %38, %155
  br i1 %156, label %tag42, label %tag105

normal-dest276:                                   ; preds = %tag33
  %ptrtoint278 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint279 = add i64 %ptrtoint278, 7
  %entry-point-addr280 = inttoptr i64 %entry-point-addr-uint279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr280, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point281({}* %47, i64 1, {}* %99, {}* null, {}* null, {}* null)
          to label %normal-dest284 unwind label %cleanup-lpad.loopexit

normal-dest284:                                   ; preds = %normal-dest276
  %.elt726 = extractvalue { {}*, i64 } %157, 0
  %.elt728 = extractvalue { {}*, i64 } %157, 1
  %cond669 = icmp eq i64 %.elt728, 0
  %158 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %L_X.1 = select i1 %cond669, {}* %158, {}* %.elt726
  br label %tag126.backedge

normal-dest304:                                   ; preds = %tag40
  %ptrtoint305 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint306 = add i64 %ptrtoint305, 7
  %entry-point-addr307 = inttoptr i64 %entry-point-addr-uint306 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point308 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr307, align 8
  %159 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point308({}* %49, i64 2, {}* %.in786, {}* null, {}* null, {}* null)
          to label %normal-dest311 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest311:                                   ; preds = %normal-dest304
  %.elt779 = extractvalue { {}*, i64 } %159, 0
  %.elt781 = extractvalue { {}*, i64 } %159, 1
  %cond679 = icmp eq i64 %.elt781, 0
  %160 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115160.0 = select i1 %cond679, {}* %160, {}* %.elt779
  %161 = icmp eq {}* %G115160.0, %160
  br i1 %161, label %tag113, label %tag44

normal-dest318:                                   ; preds = %tag43
  %162 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %163 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %164 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %165 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint319 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint320 = add i64 %ptrtoint319, 7
  %entry-point-addr321 = inttoptr i64 %entry-point-addr-uint320 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point322 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr321, align 8
  %166 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point322({}* %57, i64 5, {}* %162, {}* %163, {}* %DIMENSION.0, {}* %164, {}* %165)
          to label %normal-dest325 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest325:                                   ; preds = %normal-dest318
  %.elt796 = extractvalue { {}*, i64 } %166, 0
  %.elt798 = extractvalue { {}*, i64 } %166, 1
  %cond683 = icmp eq i64 %.elt798, 0
  %167 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %.in747 = select i1 %cond683, {}* %167, {}* %.elt796
  br label %tag23

normal-dest332:                                   ; preds = %tag44
  %ptrtoint333 = ptrtoint {}* %59 to i64
  %entry-point-addr-uint334 = add i64 %ptrtoint333, 7
  %entry-point-addr335 = inttoptr i64 %entry-point-addr-uint334 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point336 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr335, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point336({}* %59, i64 2, {}* %.in786, {}* inttoptr (i64 9223372036854775800 to {}*), {}* null, {}* null)
          to label %normal-dest339 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest339:                                   ; preds = %normal-dest332
  %.elt783 = extractvalue { {}*, i64 } %168, 0
  %.elt785 = extractvalue { {}*, i64 } %168, 1
  %cond680 = icmp eq i64 %.elt785, 0
  %169 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115157.0 = select i1 %cond680, {}* %169, {}* %.elt783
  %170 = icmp eq {}* %G115157.0, %169
  br i1 %170, label %tag113, label %tag102

header-check-br345:                               ; preds = %header-check-br152
  %171 = load i64, i64* %irc-bit-cast351, align 8
  %172 = icmp eq i64 %171, 1325
  br i1 %172, label %tag29, label %tag80

header-check-br352:                               ; preds = %tag48
  %irc-bit-cast356 = bitcast {}* %L_Y.0 to i8*
  %gep357 = getelementptr inbounds i8, i8* %irc-bit-cast356, i64 -9
  %irc-bit-cast358 = bitcast i8* %gep357 to i64*
  %173 = load i64, i64* %irc-bit-cast358, align 8
  %174 = icmp ne i64 %173, 1325
  %brmerge846 = or i1 %test, %174
  br i1 %brmerge846, label %tag97, label %header-check-br

normal-dest361:                                   ; preds = %tag51
  %ptrtoint362 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint363 = add i64 %ptrtoint362, 7
  %entry-point-addr364 = inttoptr i64 %entry-point-addr-uint363 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point365 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr364, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point365({}* %64, i64 3, {}* %farg0, {}* %L_Y.0, {}* %L_X.0, {}* null)
          to label %normal-dest368 unwind label %cleanup-lpad.loopexit

normal-dest368:                                   ; preds = %normal-dest361
  %.elt709 = extractvalue { {}*, i64 } %175, 0
  %.elt711 = extractvalue { {}*, i64 } %175, 1
  %cond666 = icmp eq i64 %.elt711, 0
  %176 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114883114884.0 = select i1 %cond666, {}* %176, {}* %.elt709
  %177 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 307), align 8
  %178 = invoke {}* @cc_safe_setfdefinition({}* %177)
          to label %normal-dest374 unwind label %cleanup-lpad.loopexit

normal-dest374:                                   ; preds = %normal-dest368
  %ptrtoint376 = ptrtoint {}* %178 to i64
  %tag-only377 = and i64 %ptrtoint376, 7
  %test378 = icmp eq i64 %tag-only377, 1
  br i1 %test378, label %header-check-br375, label %tag62

header-check-br375:                               ; preds = %normal-dest374
  %irc-bit-cast379 = bitcast {}* %178 to i8*
  %gep380 = getelementptr inbounds i8, i8* %irc-bit-cast379, i64 -9
  %irc-bit-cast381 = bitcast i8* %gep380 to i64*
  %179 = load i64, i64* %irc-bit-cast381, align 8
  %.off = add i64 %179, -913
  %180 = icmp ult i64 %.off, 85
  br i1 %180, label %tag61, label %header-check-br513

normal-dest398:                                   ; preds = %tag61
  br i1 %fixnump-test639, label %tag93, label %tag1

normal-dest408:                                   ; preds = %tag62
  %181 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %182 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %183 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %184 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 309), align 8
  %ptrtoint409 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint410 = add i64 %ptrtoint409, 7
  %entry-point-addr411 = inttoptr i64 %entry-point-addr-uint410 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point412 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr411, align 8
  %185 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point412({}* %70, i64 5, {}* %181, {}* %182, {}* %178, {}* %183, {}* %184)
          to label %normal-dest415 unwind label %cleanup-lpad.loopexit

normal-dest415:                                   ; preds = %normal-dest408
  %.elt713 = extractvalue { {}*, i64 } %185, 0
  %.elt715 = extractvalue { {}*, i64 } %185, 1
  %cond667 = icmp eq i64 %.elt715, 0
  %186 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115022.1 = select i1 %cond667, {}* %186, {}* %.elt713
  br label %tag61

normal-dest426:                                   ; preds = %tag64
  %187 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %188 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %189 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %190 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint427 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint428 = add i64 %ptrtoint427, 7
  %entry-point-addr429 = inttoptr i64 %entry-point-addr-uint428 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point430 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr429, align 8
  %191 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point430({}* %74, i64 5, {}* %187, {}* %188, {}* %DIMENSION.0, {}* %189, {}* %190)
          to label %normal-dest433 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest433:                                   ; preds = %normal-dest426
  %.elt792 = extractvalue { {}*, i64 } %191, 0
  %.elt794 = extractvalue { {}*, i64 } %191, 1
  %cond682 = icmp eq i64 %.elt794, 0
  %192 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %x162.1 = select i1 %cond682, {}* %192, {}* %.elt792
  br label %tag63

normal-dest446:                                   ; preds = %tag69
  %193 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %194 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %195 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %196 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint448 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint449 = add i64 %ptrtoint448, 7
  %entry-point-addr450 = inttoptr i64 %entry-point-addr-uint449 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point451 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr450, align 8
  %197 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point451({}* %80, i64 5, {}* %193, {}* %194, {}* %.in786, {}* %195, {}* %196)
          to label %normal-dest454 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest454:                                   ; preds = %normal-dest446
  %.elt757 = extractvalue { {}*, i64 } %197, 0
  %.elt759 = extractvalue { {}*, i64 } %197, 1
  %cond674 = icmp eq i64 %.elt759, 0
  %198 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115058.1 = select i1 %cond674, {}* %198, {}* %.elt757
  br label %tag90

normal-dest464:                                   ; preds = %tag77
  %199 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 301), align 8
  %ptrtoint465 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint466 = add i64 %ptrtoint465, 7
  %entry-point-addr467 = inttoptr i64 %entry-point-addr-uint466 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point468 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr467, align 8
  %200 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point468({}* %86, i64 2, {}* %.in786, {}* %199, {}* null, {}* null)
          to label %tag41 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest479:                                   ; preds = %tag79
  %ptrtoint480 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint481 = add i64 %ptrtoint480, 7
  %entry-point-addr482 = inttoptr i64 %entry-point-addr-uint481 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point483 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr482, align 8
  %201 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point483({}* %88, i64 1, {}* %115, {}* null, {}* null, {}* null)
          to label %normal-dest486 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest486:                                   ; preds = %normal-dest479
  %.elt739 = extractvalue { {}*, i64 } %201, 0
  %.elt741 = extractvalue { {}*, i64 } %201, 1
  %cond672 = icmp eq i64 %.elt741, 0
  %202 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %L_Y.1 = select i1 %cond672, {}* %202, {}* %.elt739
  br label %tag31.backedge

normal-dest493:                                   ; preds = %tag80
  %ptrtoint494 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint495 = add i64 %ptrtoint494, 7
  %entry-point-addr496 = inttoptr i64 %entry-point-addr-uint495 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point497 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr496, align 8
  %203 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point497({}* %90, i64 2, {}* %L_X.0, {}* %.in742, {}* null, {}* null)
          to label %normal-dest500 unwind label %cleanup-lpad.loopexit

normal-dest500:                                   ; preds = %normal-dest493
  %.elt705 = extractvalue { {}*, i64 } %203, 0
  %.elt707 = extractvalue { {}*, i64 } %203, 1
  %cond665 = icmp eq i64 %.elt707, 0
  %204 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114973.1 = select i1 %cond665, {}* %204, {}* %.elt705
  br label %tag99

header-check-br513:                               ; preds = %header-check-br375
  %.off832 = add i64 %179, -1001
  %205 = icmp ult i64 %.off832, 5
  br i1 %205, label %maybe-more-tests521, label %tag62

maybe-more-tests521:                              ; preds = %header-check-br513
  %206 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %207 = invoke {}* @cc_safe_fdefinition({}* %206)
          to label %normal-dest596 unwind label %cleanup-lpad.loopexit

normal-dest535:                                   ; preds = %tag92
  %.val833 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val834 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %208 = icmp eq {}* %.val833, %.val834
  br i1 %208, label %tag69, label %tag111

normal-dest543:                                   ; preds = %tag95
  %209 = invoke double @from_object_double({}* nonnull %.in748)
          to label %normal-dest544 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest544:                                   ; preds = %normal-dest543
  %210 = fcmp olt double %100, %209
  br i1 %210, label %tag71, label %tag68

normal-dest546:                                   ; preds = %tag97
  %ptrtoint547 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint548 = add i64 %ptrtoint547, 7
  %entry-point-addr549 = inttoptr i64 %entry-point-addr-uint548 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point550 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr549, align 8
  %211 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point550({}* %102, i64 2, {}* %L_Y.0, {}* %.in748, {}* null, {}* null)
          to label %normal-dest553 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest553:                                   ; preds = %normal-dest546
  %.elt700 = extractvalue { {}*, i64 } %211, 0
  %.elt702 = extractvalue { {}*, i64 } %211, 1
  %cond664 = icmp eq i64 %.elt702, 0
  %212 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G114923.1 = select i1 %cond664, {}* %212, {}* %.elt700
  br label %tag121

normal-dest564:                                   ; preds = %tag104
  %213 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint565 = ptrtoint {}* %108 to i64
  %entry-point-addr-uint566 = add i64 %ptrtoint565, 7
  %entry-point-addr567 = inttoptr i64 %entry-point-addr-uint566 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point568 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr567, align 8
  %214 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point568({}* %108, i64 3, {}* %.in786, {}* %146, {}* %213, {}* null)
          to label %tag41 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest584:                                   ; preds = %tag109
  %215 = invoke float @from_object_float({}* %.in748)
          to label %normal-dest585 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest585:                                   ; preds = %normal-dest584
  %216 = fcmp olt float %112, %215
  br i1 %216, label %tag10, label %tag15

header-check-br588:                               ; preds = %tag117
  %irc-bit-cast592 = bitcast {}* %118 to i8*
  %gep593 = getelementptr inbounds i8, i8* %irc-bit-cast592, i64 -9
  %irc-bit-cast594 = bitcast i8* %gep593 to i64*
  %217 = load i64, i64* %irc-bit-cast594, align 8
  %218 = icmp eq i64 %217, 1349
  %fixnum-tag-only559769 = and i64 %ptrtoint589, 3
  %fixnump-test560 = icmp eq i64 %fixnum-tag-only559769, 0
  %or.cond824 = or i1 %fixnump-test560, %218
  br i1 %or.cond824, label %tag8, label %tag46

normal-dest596:                                   ; preds = %maybe-more-tests521
  %ptrtoint597 = ptrtoint {}* %207 to i64
  %entry-point-addr-uint598 = add i64 %ptrtoint597, 7
  %entry-point-addr599 = inttoptr i64 %entry-point-addr-uint598 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point600 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr599, align 8
  %219 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point600({}* %207, i64 1, {}* nonnull %178, {}* null, {}* null, {}* null)
          to label %normal-dest603 unwind label %cleanup-lpad.loopexit

normal-dest603:                                   ; preds = %normal-dest596
  %.elt730 = extractvalue { {}*, i64 } %219, 0
  %.elt732 = extractvalue { {}*, i64 } %219, 1
  %cond670 = icmp eq i64 %.elt732, 0
  %220 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115022.2 = select i1 %cond670, {}* %220, {}* %.elt730
  br label %tag61

normal-dest610:                                   ; preds = %tag1
  %ptrtoint611 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint612 = add i64 %ptrtoint611, 7
  %entry-point-addr613 = inttoptr i64 %entry-point-addr-uint612 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point614 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr613, align 8
  %221 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point614({}* %12, i64 2, {}* %L_X.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest617 unwind label %cleanup-lpad.loopexit

normal-dest617:                                   ; preds = %normal-dest610
  %.elt722 = extractvalue { {}*, i64 } %221, 0
  %.elt724 = extractvalue { {}*, i64 } %221, 1
  %cond668 = icmp eq i64 %.elt724, 0
  %222 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %L_X.2 = select i1 %cond668, {}* %222, {}* %.elt722
  br label %tag126.backedge

normal-dest641:                                   ; preds = %tag21
  %ptrtoint642 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint643 = add i64 %ptrtoint642, 7
  %entry-point-addr644 = inttoptr i64 %entry-point-addr-uint643 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point645 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr644, align 8
  %223 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point645({}* %31, i64 2, {}* %L_Y.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest648 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest648:                                   ; preds = %normal-dest641
  %.elt735 = extractvalue { {}*, i64 } %223, 0
  %.elt737 = extractvalue { {}*, i64 } %223, 1
  %cond671 = icmp eq i64 %.elt737, 0
  %224 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %L_Y.2 = select i1 %cond671, {}* %224, {}* %.elt735
  br label %tag31.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^159^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !52 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^159^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G115199.0 = phi {}* [ %18, %header-check-br ], [ %G115199.1, %normal-dest54 ], [ %G115199.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 330), align 16
  %ptrtoint13 = ptrtoint {}* %G115199.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G115199.0, i64 2, {}* %"closure->KLH=STRING_KUERZEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 330), align 16
  %"closure->KLH=STRING_KUERZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5561, i64 159, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 332), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->KLH=STRING_KUERZEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 335), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->KLH=STRING_KUERZEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 636 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 330), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 329), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115199.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag1

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115199.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !53 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc446 unwind label %cleanup-lpad.loopexit.split-lp

.noexc446:                                        ; preds = %13
  unreachable

tag5:                                             ; preds = %normal-dest338, %normal-dest235, %tag66
  %G115224.0 = phi {}* [ %55, %tag66 ], [ %G115224.1, %normal-dest235 ], [ %G115224.2, %normal-dest338 ]
  %ptrtoint = ptrtoint {}* %82 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %82, i64 3, {}* %farg0, {}* null, {}* %G115224.0, {}* null)
          to label %normal-dest96 unwind label %cleanup-lpad.loopexit.split-lp

tag6:                                             ; preds = %tag75
  %15 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only396 = and i64 %15, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only396, 0
  br i1 %fixnump-test, label %tag63, label %tag12

tag10:                                            ; preds = %tag11
  %trunc = trunc i64 %17 to i3
  switch i3 %trunc, label %tag73 [
    i3 -2, label %tag58
    i3 1, label %header-check-br375
  ]

tag11:                                            ; preds = %tag52, %normal-dest153, %tag38, %tag42
  %16 = phi {}* [ %.val463, %tag42 ], [ %.val463, %tag38 ], [ %86, %normal-dest153 ], [ %.val461, %tag52 ]
  %G115183.0 = phi {}* [ %38, %tag42 ], [ null, %tag38 ], [ %G115183.1, %normal-dest153 ], [ %LENGTH.0.ph, %tag52 ]
  %17 = ptrtoint {}* %G115183.0 to i64
  %fixnum-tag-only115403 = and i64 %17, 3
  %fixnump-test116 = icmp eq i64 %fixnum-tag-only115403, 0
  br i1 %fixnump-test116, label %tag89, label %tag10

tag12:                                            ; preds = %tag6
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest117 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag17:                                            ; preds = %tag88, %normal-dest105
  %return-value.sroa.22.0 = phi i64 [ %.elt423, %normal-dest105 ], [ 1, %tag88 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt421, %normal-dest105 ], [ %farg0, %tag88 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %20 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %21 = insertvalue { {}*, i64 } %20, i64 %return-value.sroa.22.0, 1
  ret { {}*, i64 } %21

tag21:                                            ; preds = %tag88
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 215), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit.split-lp

tag22:                                            ; preds = %tag38
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest146 unwind label %cleanup-lpad.loopexit.split-lp

tag24:                                            ; preds = %tag40
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest160 unwind label %cleanup-lpad.loopexit.loopexit

tag31:                                            ; preds = %normal-dest274
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag88

tag33:                                            ; preds = %tag53
  %29 = load {}*, {}** %58, align 8
  %.val459.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag75

tag38:                                            ; preds = %tag72
  %30 = icmp eq {}* %.val463, %farg0
  %.val462 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115282.0 = select i1 %30, {}* %.val462, {}* %.val463
  %31 = icmp eq {}* %G115282.0, %.val463
  br i1 %31, label %tag22, label %tag11

tag40:                                            ; preds = %tag53
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %33 = icmp eq {}* %SEQUENCE.0.ph, %32
  %.val456 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115335.0 = select i1 %33, {}* %.val456, {}* %32
  %34 = icmp eq {}* %G115335.0, %32
  br i1 %34, label %tag24, label %tag75

tag42:                                            ; preds = %tag72
  %35 = add i64 %73, 7
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %"tag fixnum" = shl nuw i64 %37, 2
  %38 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag11

tag45:                                            ; preds = %normal-dest140
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 326), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest228 unwind label %cleanup-lpad.loopexit.split-lp

tag46:                                            ; preds = %tag89
  %41 = icmp sgt {}* %G115183.0, %farg1
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %. = select i1 %41, {}* %16, {}* %42
  br label %tag88

tag49:                                            ; preds = %tag52
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest249 unwind label %cleanup-lpad.loopexit.loopexit

tag50:                                            ; preds = %normal-dest274
  %45 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag88

tag51:                                            ; preds = %normal-dest326
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag88

tag52:                                            ; preds = %tag75
  %47 = icmp eq {}* %G2095854.0, %.val461
  %G115294.0 = select i1 %47, {}* %.val458, {}* %.val461
  %48 = icmp eq {}* %G115294.0, %.val461
  br i1 %48, label %tag49, label %tag11

tag53:                                            ; preds = %normal-dest249, %tag53.outer
  br i1 %consp-test263, label %tag33, label %tag40

tag55:                                            ; preds = %tag78, %header-check-br220, %normal-dest198
  %.pre = phi {}* [ %.val455, %tag78 ], [ %.val455, %header-check-br220 ], [ %94, %normal-dest198 ]
  br label %tag72

tag58:                                            ; preds = %tag10
  %49 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only272 = and i64 %49, 7
  %50 = icmp eq i64 %single-float-tag-only272, 6
  br i1 %50, label %tag61, label %tag73

tag61:                                            ; preds = %tag58
  %51 = invoke float @from_object_float({}* %G115183.0)
          to label %normal-dest273 unwind label %cleanup-lpad.loopexit.split-lp

tag63:                                            ; preds = %tag6
  %52 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %15, i64 4)
  %result = extractvalue { i64, i1 } %52, 0
  %overflow = extractvalue { i64, i1 } %52, 1
  %53 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag70, label %tag53.outer.backedge

tag53.outer.backedge:                             ; preds = %tag63, %normal-dest303, %normal-dest124
  %LENGTH.0.ph.be = phi {}* [ %53, %tag63 ], [ %LENGTH.2, %normal-dest303 ], [ %LENGTH.1, %normal-dest124 ]
  br label %tag53.outer

tag66:                                            ; preds = %normal-dest140
  %54 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %83, i64 4)
  %result279 = extractvalue { i64, i1 } %54, 0
  %overflow280 = extractvalue { i64, i1 } %54, 1
  %55 = inttoptr i64 %result279 to {}*
  br i1 %overflow280, label %tag77, label %tag5

tag53.outer:                                      ; preds = %tag53.outer.backedge, %tag53.outer.preheader
  %SEQUENCE.0.ph = phi {}* [ %farg0, %tag53.outer.preheader ], [ %G2095854.0, %tag53.outer.backedge ]
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag53.outer.preheader ], [ %LENGTH.0.ph.be, %tag53.outer.backedge ]
  %56 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only262394 = and i64 %56, 7
  %consp-test263 = icmp eq i64 %tag-only262394, 3
  %57 = add i64 %56, 5
  %58 = inttoptr i64 %57 to {}**
  br label %tag53

tag69:                                            ; preds = %header-check-br375
  %ptrtoint289 = ptrtoint {}* %farg1 to i64
  %tag-only290 = and i64 %ptrtoint289, 7
  %test291 = icmp eq i64 %tag-only290, 1
  br i1 %test291, label %header-check-br288, label %tag73

tag70:                                            ; preds = %tag63
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest296 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag72:                                            ; preds = %header-check-br344, %normal-dest198, %tag55
  %.val463 = phi {}* [ %.pre, %tag55 ], [ %94, %normal-dest198 ], [ %.val455, %header-check-br344 ]
  %G115286.0.in = phi {}** [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), %tag55 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %normal-dest198 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %header-check-br344 ]
  %G115286.0 = load {}*, {}** %G115286.0.in, align 8
  %61 = icmp eq {}* %G115286.0, %.val463
  br i1 %61, label %tag38, label %tag42

tag73:                                            ; preds = %tag10, %tag89, %header-check-br375, %header-check-br288, %tag69, %tag58
  %62 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 322), align 16
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest312 unwind label %cleanup-lpad.loopexit.split-lp

tag74:                                            ; preds = %header-check-br288
  %64 = invoke double @from_object_double({}* nonnull %G115183.0)
          to label %normal-dest325 unwind label %cleanup-lpad.loopexit.split-lp

tag75:                                            ; preds = %tag40, %normal-dest168, %tag33
  %.val461 = phi {}* [ %.val459.pre, %tag33 ], [ %92, %normal-dest168 ], [ %32, %tag40 ]
  %G2095854.0 = phi {}* [ %29, %tag33 ], [ %G2095854.1, %normal-dest168 ], [ %32, %tag40 ]
  %65 = ptrtoint {}* %G2095854.0 to i64
  %tag-only327395 = and i64 %65, 7
  %consp-test328 = icmp eq i64 %tag-only327395, 3
  %.val458 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115323.0 = select i1 %consp-test328, {}* %.val458, {}* %.val461
  %66 = icmp eq {}* %G115323.0, %.val461
  br i1 %66, label %tag52, label %tag6

tag77:                                            ; preds = %tag66
  %67 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest331 unwind label %cleanup-lpad.loopexit.split-lp

tag78:                                            ; preds = %normal-dest
  %test347 = icmp eq i64 %tag-only393, 1
  br i1 %test347, label %header-check-br344, label %tag55

tag81:                                            ; preds = %normal-dest326
  %69 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag88

tag88:                                            ; preds = %tag46, %normal-dest319, %tag81, %tag51, %tag50, %tag31
  %G115254.0 = phi {}* [ %28, %tag31 ], [ %45, %tag50 ], [ %69, %tag81 ], [ %46, %tag51 ], [ %G115254.1, %normal-dest319 ], [ %., %tag46 ]
  %70 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %71 = icmp eq {}* %G115254.0, %70
  br i1 %71, label %tag21, label %tag17

tag89:                                            ; preds = %tag11
  %72 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only383428 = and i64 %72, 3
  %fixnump-test384 = icmp eq i64 %fixnum-tag-only383428, 0
  br i1 %fixnump-test384, label %tag46, label %tag73

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest249, %tag49, %normal-dest160, %tag24
  %lpad.loopexit465 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest296, %tag70, %normal-dest117, %tag12
  %lpad.loopexit.split-lp466 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %tag5, %normal-dest96, %tag21, %normal-dest138, %tag22, %normal-dest146, %maybe-more-tests, %normal-dest191, %tag45, %normal-dest228, %tag61, %normal-dest273, %tag73, %normal-dest312, %tag74, %normal-dest325, %tag77, %normal-dest331, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ], [ %lpad.loopexit465, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp466, %cleanup-lpad.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %73 = ptrtoint {}* %farg0 to i64
  %tag-only393 = and i64 %73, 7
  %consp-test = icmp eq i64 %tag-only393, 3
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val455 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115342.0 = select i1 %consp-test, {}* %.val, {}* %.val455
  %74 = icmp eq {}* %G115342.0, %.val455
  br i1 %74, label %tag78, label %tag53.outer.preheader

tag53.outer.preheader:                            ; preds = %normal-dest
  br label %tag53.outer

normal-dest96:                                    ; preds = %tag5
  %.elt417 = extractvalue { {}*, i64 } %14, 0
  %.elt419 = extractvalue { {}*, i64 } %14, 1
  %cond388 = icmp eq i64 %.elt419, 0
  %75 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115219.0 = select i1 %cond388, {}* %75, {}* %.elt417
  %76 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 328), align 16
  %ptrtoint99 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %23, i64 3, {}* %80, {}* %G115219.0, {}* %76, {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest105:                                   ; preds = %normal-dest96
  %.elt421 = extractvalue { {}*, i64 } %77, 0
  %.elt423 = extractvalue { {}*, i64 } %77, 1
  br label %tag17

normal-dest117:                                   ; preds = %tag12
  %ptrtoint118 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint119 = add i64 %ptrtoint118, 7
  %entry-point-addr120 = inttoptr i64 %entry-point-addr-uint119 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point121 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr120, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point121({}* %19, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest124 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest124:                                   ; preds = %normal-dest117
  %.elt = extractvalue { {}*, i64 } %78, 0
  %.elt398 = extractvalue { {}*, i64 } %78, 1
  %cond = icmp eq i64 %.elt398, 0
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond, {}* %79, {}* %.elt
  br label %tag53.outer.backedge

normal-dest138:                                   ; preds = %tag21
  %80 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %81 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 324), align 16
  %82 = invoke {}* @cc_safe_fdefinition({}* %81)
          to label %normal-dest140 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest140:                                   ; preds = %normal-dest138
  %83 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only133411 = and i64 %83, 3
  %fixnump-test134 = icmp eq i64 %fixnum-tag-only133411, 0
  br i1 %fixnump-test134, label %tag66, label %tag45

normal-dest146:                                   ; preds = %tag22
  %84 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 320), align 16
  %ptrtoint147 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint148 = add i64 %ptrtoint147, 7
  %entry-point-addr149 = inttoptr i64 %entry-point-addr-uint148 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point150 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr149, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point150({}* %25, i64 2, {}* %farg0, {}* %84, {}* null, {}* null)
          to label %normal-dest153 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest153:                                   ; preds = %normal-dest146
  %.elt438 = extractvalue { {}*, i64 } %85, 0
  %.elt440 = extractvalue { {}*, i64 } %85, 1
  %cond391 = icmp eq i64 %.elt440, 0
  %86 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115183.1 = select i1 %cond391, {}* %86, {}* %.elt438
  br label %tag11

normal-dest160:                                   ; preds = %tag24
  %87 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %88 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %89 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %90 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint162 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint163 = add i64 %ptrtoint162, 7
  %entry-point-addr164 = inttoptr i64 %entry-point-addr-uint163 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point165 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr164, align 8
  %91 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point165({}* %27, i64 5, {}* %87, {}* %88, {}* %SEQUENCE.0.ph, {}* %89, {}* %90)
          to label %normal-dest168 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest168:                                   ; preds = %normal-dest160
  %.elt434 = extractvalue { {}*, i64 } %91, 0
  %.elt436 = extractvalue { {}*, i64 } %91, 1
  %cond390 = icmp eq i64 %.elt436, 0
  %92 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond390, {}* %92, {}* %.elt434
  br label %tag75

normal-dest191:                                   ; preds = %maybe-more-tests
  %ptrtoint192 = ptrtoint {}* %98 to i64
  %entry-point-addr-uint193 = add i64 %ptrtoint192, 7
  %entry-point-addr194 = inttoptr i64 %entry-point-addr-uint193 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point195 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr194, align 8
  %93 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point195({}* %98, i64 1, {}* nonnull %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest198 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest198:                                   ; preds = %normal-dest191
  %.elt442 = extractvalue { {}*, i64 } %93, 0
  %.elt444 = extractvalue { {}*, i64 } %93, 1
  %cond392 = icmp eq i64 %.elt444, 0
  %94 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115347.0 = select i1 %cond392, {}* %94, {}* %.elt442
  %95 = icmp eq {}* %G115347.0, inttoptr (i64 4 to {}*)
  br i1 %95, label %tag72, label %tag55

header-check-br220:                               ; preds = %header-check-br344
  %.off464 = add i64 %115, -1153
  %96 = icmp ult i64 %.off464, 149
  br i1 %96, label %maybe-more-tests, label %tag55

maybe-more-tests:                                 ; preds = %header-check-br220
  %97 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 338), align 16
  %98 = invoke {}* @cc_safe_fdefinition({}* %97)
          to label %normal-dest191 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest228:                                   ; preds = %tag45
  %ptrtoint229 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint230 = add i64 %ptrtoint229, 7
  %entry-point-addr231 = inttoptr i64 %entry-point-addr-uint230 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point232 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr231, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point232({}* %40, i64 2, {}* %farg1, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest235 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest235:                                   ; preds = %normal-dest228
  %.elt413 = extractvalue { {}*, i64 } %99, 0
  %.elt415 = extractvalue { {}*, i64 } %99, 1
  %cond387 = icmp eq i64 %.elt415, 0
  %100 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115224.1 = select i1 %cond387, {}* %100, {}* %.elt413
  br label %tag5

normal-dest249:                                   ; preds = %tag49
  %101 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 321), align 8
  %ptrtoint250 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint251 = add i64 %ptrtoint250, 7
  %entry-point-addr252 = inttoptr i64 %entry-point-addr-uint251 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point253 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr252, align 8
  %102 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point253({}* %44, i64 2, {}* %G2095854.0, {}* %101, {}* null, {}* null)
          to label %tag53 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest273:                                   ; preds = %tag61
  %103 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest274 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest274:                                   ; preds = %normal-dest273
  %104 = fcmp ugt float %51, %103
  br i1 %104, label %tag50, label %tag31

header-check-br288:                               ; preds = %tag69
  %irc-bit-cast292 = bitcast {}* %farg1 to i8*
  %gep293 = getelementptr inbounds i8, i8* %irc-bit-cast292, i64 -9
  %irc-bit-cast294 = bitcast i8* %gep293 to i64*
  %105 = load i64, i64* %irc-bit-cast294, align 8
  %106 = icmp eq i64 %105, 1325
  br i1 %106, label %tag74, label %tag73

normal-dest296:                                   ; preds = %tag70
  %ptrtoint297 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint298 = add i64 %ptrtoint297, 7
  %entry-point-addr299 = inttoptr i64 %entry-point-addr-uint298 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point300 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr299, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point300({}* %60, i64 1, {}* %53, {}* null, {}* null, {}* null)
          to label %normal-dest303 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest303:                                   ; preds = %normal-dest296
  %.elt400 = extractvalue { {}*, i64 } %107, 0
  %.elt402 = extractvalue { {}*, i64 } %107, 1
  %cond385 = icmp eq i64 %.elt402, 0
  %108 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond385, {}* %108, {}* %.elt400
  br label %tag53.outer.backedge

normal-dest312:                                   ; preds = %tag73
  %ptrtoint313 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint314 = add i64 %ptrtoint313, 7
  %entry-point-addr315 = inttoptr i64 %entry-point-addr-uint314 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point316 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr315, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point316({}* %63, i64 2, {}* %G115183.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest319 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest319:                                   ; preds = %normal-dest312
  %.elt405 = extractvalue { {}*, i64 } %109, 0
  %.elt407 = extractvalue { {}*, i64 } %109, 1
  %cond386 = icmp eq i64 %.elt407, 0
  %110 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115254.1 = select i1 %cond386, {}* %110, {}* %.elt405
  br label %tag88

normal-dest325:                                   ; preds = %tag74
  %111 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest326 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest326:                                   ; preds = %normal-dest325
  %112 = fcmp ugt double %64, %111
  br i1 %112, label %tag51, label %tag81

normal-dest331:                                   ; preds = %tag77
  %ptrtoint332 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint333 = add i64 %ptrtoint332, 7
  %entry-point-addr334 = inttoptr i64 %entry-point-addr-uint333 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point335 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr334, align 8
  %113 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point335({}* %68, i64 1, {}* %55, {}* null, {}* null, {}* null)
          to label %normal-dest338 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest338:                                   ; preds = %normal-dest331
  %.elt425 = extractvalue { {}*, i64 } %113, 0
  %.elt427 = extractvalue { {}*, i64 } %113, 1
  %cond389 = icmp eq i64 %.elt427, 0
  %114 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115224.2 = select i1 %cond389, {}* %114, {}* %.elt425
  br label %tag5

header-check-br344:                               ; preds = %tag78
  %irc-bit-cast348 = bitcast {}* %farg0 to i8*
  %gep349 = getelementptr inbounds i8, i8* %irc-bit-cast348, i64 -9
  %irc-bit-cast350 = bitcast i8* %gep349 to i64*
  %115 = load i64, i64* %irc-bit-cast350, align 8
  %.off = add i64 %115, -1081
  %116 = icmp ult i64 %.off, 69
  br i1 %116, label %tag72, label %header-check-br220

header-check-br375:                               ; preds = %tag10
  %irc-bit-cast379 = bitcast {}* %G115183.0 to i8*
  %gep380 = getelementptr inbounds i8, i8* %irc-bit-cast379, i64 -9
  %irc-bit-cast381 = bitcast i8* %gep380 to i64*
  %117 = load i64, i64* %irc-bit-cast381, align 8
  %118 = icmp eq i64 %117, 1325
  br i1 %118, label %tag69, label %tag73
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^174^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !54 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^174^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G115376.0 = phi {}* [ %18, %header-check-br ], [ %G115376.1, %normal-dest63 ], [ %G115376.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 342), align 16
  %ptrtoint13 = ptrtoint {}* %G115376.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G115376.0, i64 2, {}* %"closure->KLH=WAS_NACH_KURZEN_STRING", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 342), align 16
  %"closure->KLH=WAS_NACH_KURZEN_STRING" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5908, i64 174, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 344), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->KLH=WAS_NACH_KURZEN_STRING", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 347), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->KLH=WAS_NACH_KURZEN_STRING", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 696 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 342), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag2

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag2
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 341), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115376.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115376.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !55 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %13
  unreachable

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %11
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 330), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 220), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %18 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %18, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %19, 0
  %.elt21 = extractvalue { {}*, i64 } %19, 1
  %cond = icmp eq i64 %.elt21, 0
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115395.0 = select i1 %cond, {}* %20, {}* %.elt
  %ptrtoint13 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %16, i64 2, {}* %G115395.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %21
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^180^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !56 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^180^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G115418.0 = phi {}* [ %18, %header-check-br ], [ %G115418.1, %normal-dest63 ], [ %G115418.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 360), align 16
  %ptrtoint22 = ptrtoint {}* %G115418.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G115418.0, i64 2, {}* %"closure->KLH=MACHE-ZENTRIERT", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest56, %tag3, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 360), align 16
  %"closure->KLH=MACHE-ZENTRIERT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6024, i64 180, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 362), align 16
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->KLH=MACHE-ZENTRIERT", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 363), align 8
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->KLH=MACHE-ZENTRIERT", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 720 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 360), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 359), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115418.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag2

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115418.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !57 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc522 unwind label %cleanup-lpad.loopexit.split-lp

.noexc522:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %tag39
  %14 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only450 = and i64 %14, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only450, 0
  br i1 %fixnump-test, label %tag35, label %tag26

tag3:                                             ; preds = %tag85
  %15 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %75, i64 %21)
  %result = extractvalue { i64, i1 } %15, 0
  %overflow = extractvalue { i64, i1 } %15, 1
  %16 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag16, label %tag47

tag5:                                             ; preds = %tag83
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit.split-lp

tag6:                                             ; preds = %normal-dest355
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag36

tag7:                                             ; preds = %tag72, %normal-dest123, %tag83, %tag22
  %20 = phi {}* [ %.val545, %tag22 ], [ %.val545, %tag83 ], [ %87, %normal-dest123 ], [ %.val542, %tag72 ]
  %DIE_LAENGE.0 = phi {}* [ %36, %tag22 ], [ null, %tag83 ], [ %DIE_LAENGE.1, %normal-dest123 ], [ %LENGTH.0.ph, %tag72 ]
  %21 = ptrtoint {}* %DIE_LAENGE.0 to i64
  %fixnum-tag-only132459 = and i64 %21, 3
  %fixnump-test133 = icmp eq i64 %fixnum-tag-only132459, 0
  br i1 %fixnump-test133, label %tag27, label %tag62

tag8:                                             ; preds = %tag43
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %23 = icmp eq {}* %SEQUENCE.0.ph, %22
  %.val537 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115567.0 = select i1 %23, {}* %.val537, {}* %22
  %24 = icmp eq {}* %G115567.0, %22
  br i1 %24, label %tag70, label %tag39

tag10:                                            ; preds = %tag62, %tag52, %header-check-br267, %tag42, %tag27, %header-check-br
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 351), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest142 unwind label %cleanup-lpad.loopexit.split-lp

tag15:                                            ; preds = %tag33
  %27 = icmp eq i64 %tag-only248, 6
  %brmerge = or i1 %27, %fixnump-test133
  br i1 %brmerge, label %tag86, label %tag19

tag16:                                            ; preds = %tag3
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest163 unwind label %cleanup-lpad.loopexit.split-lp

tag17:                                            ; preds = %header-check-br374
  %30 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest176 unwind label %cleanup-lpad.loopexit.split-lp

tag19:                                            ; preds = %switch.early.test, %tag15
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit.split-lp

tag22:                                            ; preds = %tag61
  %33 = add i64 %81, 7
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %"tag fixnum" = shl nuw i64 %35, 2
  %36 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag7

tag25:                                            ; preds = %tag35
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest199 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag26:                                            ; preds = %tag1
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest214 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag27:                                            ; preds = %tag7
  %41 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only227502 = and i64 %41, 3
  %fixnump-test228 = icmp eq i64 %fixnum-tag-only227502, 0
  br i1 %fixnump-test228, label %tag77, label %tag10

tag33:                                            ; preds = %tag36
  %tag-only248 = and i64 %21, 7
  %test249 = icmp eq i64 %tag-only248, 1
  br i1 %test249, label %header-check-br246, label %tag15

tag34:                                            ; preds = %normal-dest256
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag36

tag35:                                            ; preds = %tag1
  %43 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %14, i64 4)
  %result253 = extractvalue { i64, i1 } %43, 0
  %overflow254 = extractvalue { i64, i1 } %43, 1
  %44 = inttoptr i64 %result253 to {}*
  br i1 %overflow254, label %tag25, label %tag43.outer.backedge

tag43.outer.backedge:                             ; preds = %tag35, %normal-dest207, %normal-dest221
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest221 ], [ %LENGTH.1, %normal-dest207 ], [ %44, %tag35 ]
  br label %tag43.outer

tag36:                                            ; preds = %tag77, %normal-dest149, %tag84, %tag81, %tag34, %tag6
  %G115486.0 = phi {}* [ %42, %tag34 ], [ %71, %tag81 ], [ %74, %tag84 ], [ %19, %tag6 ], [ %G115486.1, %normal-dest149 ], [ %., %tag77 ]
  %45 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %46 = icmp eq {}* %G115486.0, %45
  br i1 %46, label %tag33, label %tag44

tag37:                                            ; preds = %tag52
  %47 = invoke float @from_object_float({}* %DIE_LAENGE.0)
          to label %normal-dest255 unwind label %cleanup-lpad.loopexit.split-lp

tag39:                                            ; preds = %tag8, %normal-dest400, %tag68
  %.val542 = phi {}* [ %.val540.pre, %tag68 ], [ %152, %normal-dest400 ], [ %22, %tag8 ]
  %G2095854.0 = phi {}* [ %62, %tag68 ], [ %G2095854.1, %normal-dest400 ], [ %22, %tag8 ]
  %48 = ptrtoint {}* %G2095854.0 to i64
  %tag-only264449 = and i64 %48, 7
  %consp-test265 = icmp eq i64 %tag-only264449, 3
  %.val539 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115555.0 = select i1 %consp-test265, {}* %.val539, {}* %.val542
  %49 = icmp eq {}* %G115555.0, %.val542
  br i1 %49, label %tag72, label %tag1

tag42:                                            ; preds = %header-check-br
  %ptrtoint268 = ptrtoint {}* %farg1 to i64
  %tag-only269 = and i64 %ptrtoint268, 7
  %test270 = icmp eq i64 %tag-only269, 1
  br i1 %test270, label %header-check-br267, label %tag10

tag43:                                            ; preds = %normal-dest287, %tag43.outer
  br i1 %consp-test276, label %tag68, label %tag8

tag44:                                            ; preds = %tag36
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 342), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest278 unwind label %cleanup-lpad.loopexit.split-lp

tag45:                                            ; preds = %tag79, %header-check-br385, %normal-dest192
  %.pre = phi {}* [ %79, %tag79 ], [ %79, %header-check-br385 ], [ %101, %normal-dest192 ]
  br label %tag61

tag46:                                            ; preds = %tag72
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest287 unwind label %cleanup-lpad.loopexit.loopexit

tag47:                                            ; preds = %normal-dest423, %normal-dest383, %normal-dest177, %normal-dest170, %tag3
  %REST.0 = phi {}* [ %16, %tag3 ], [ %REST.1, %normal-dest170 ], [ %94, %normal-dest177 ], [ %143, %normal-dest383 ], [ %REST.2, %normal-dest423 ]
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 353), align 8
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest300 unwind label %cleanup-lpad.loopexit.split-lp

tag49:                                            ; preds = %tag56
  %56 = icmp eq i64 %tag-only248, 6
  br i1 %56, label %tag63, label %tag80

tag50:                                            ; preds = %header-check-br267
  %57 = invoke double @from_object_double({}* nonnull %DIE_LAENGE.0)
          to label %normal-dest354 unwind label %cleanup-lpad.loopexit.split-lp

tag52:                                            ; preds = %tag62
  %58 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only363 = and i64 %58, 7
  %59 = icmp eq i64 %single-float-tag-only363, 6
  br i1 %59, label %tag37, label %tag10

tag56:                                            ; preds = %tag86
  %trunc543 = trunc i64 %75 to i3
  switch i3 %trunc543, label %tag80 [
    i3 -2, label %tag49
    i3 1, label %header-check-br364
  ]

tag59:                                            ; preds = %normal-dest278, %normal-dest337
  %.sink520 = phi { {}*, i64 } [ %134, %normal-dest337 ], [ %116, %normal-dest278 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink520

tag61:                                            ; preds = %header-check-br406, %normal-dest192, %tag45
  %.val545 = phi {}* [ %.pre, %tag45 ], [ %101, %normal-dest192 ], [ %79, %header-check-br406 ]
  %G115518.0.in = phi {}** [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), %tag45 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %normal-dest192 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %header-check-br406 ]
  %G115518.0 = load {}*, {}** %G115518.0.in, align 8
  %60 = icmp eq {}* %G115518.0, %.val545
  br i1 %60, label %tag83, label %tag22

tag62:                                            ; preds = %tag7
  %trunc = trunc i64 %21 to i3
  switch i3 %trunc, label %tag10 [
    i3 -2, label %tag52
    i3 1, label %header-check-br
  ]

tag63:                                            ; preds = %tag49
  %61 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest382 unwind label %cleanup-lpad.loopexit.split-lp

tag68:                                            ; preds = %tag43
  %62 = load {}*, {}** %107, align 8
  %.val540.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag39

tag70:                                            ; preds = %tag8
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest393 unwind label %cleanup-lpad.loopexit.loopexit

tag72:                                            ; preds = %tag39
  %65 = icmp eq {}* %G2095854.0, %.val542
  %G115526.0 = select i1 %65, {}* %.val539, {}* %.val542
  %66 = icmp eq {}* %G115526.0, %.val542
  br i1 %66, label %tag46, label %tag7

tag77:                                            ; preds = %tag27
  %67 = icmp sgt {}* %DIE_LAENGE.0, %farg1
  %68 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %. = select i1 %67, {}* %68, {}* %20
  br label %tag36

tag79:                                            ; preds = %normal-dest97
  %test409 = icmp eq i64 %tag-only447, 1
  br i1 %test409, label %header-check-br406, label %tag45

tag80:                                            ; preds = %header-check-br364, %tag56, %tag85, %header-check-br374, %tag49
  %69 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 326), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest416 unwind label %cleanup-lpad.loopexit.split-lp

tag81:                                            ; preds = %normal-dest256
  %71 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag36

tag83:                                            ; preds = %tag61
  %72 = icmp eq {}* %.in, %.val545
  %.val544 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115514.0 = select i1 %72, {}* %.val544, {}* %.val545
  %73 = icmp eq {}* %G115514.0, %.val545
  br i1 %73, label %tag5, label %tag7

tag84:                                            ; preds = %normal-dest355
  %74 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag36

tag85:                                            ; preds = %tag86
  br i1 %fixnump-test133, label %tag3, label %tag80

tag86:                                            ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %header-check-br246, %tag15
  %75 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only431476 = and i64 %75, 3
  %fixnump-test432 = icmp eq i64 %fixnum-tag-only431476, 0
  br i1 %fixnump-test432, label %tag85, label %tag56

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest393, %tag70, %normal-dest287, %tag46
  %lpad.loopexit547 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest214, %tag26, %normal-dest199, %tag25
  %lpad.loopexit.split-lp548 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest94, %normal-dest180, %tag5, %normal-dest116, %tag10, %normal-dest142, %tag16, %normal-dest163, %tag17, %normal-dest176, %normal-dest177, %tag19, %maybe-more-tests, %normal-dest185, %tag37, %normal-dest255, %tag44, %normal-dest278, %tag47, %normal-dest300, %normal-dest302, %normal-dest309, %normal-dest321, %normal-dest328, %normal-dest330, %normal-dest337, %tag50, %normal-dest354, %tag63, %normal-dest382, %normal-dest383, %tag80, %normal-dest416, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ], [ %lpad.loopexit547, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp548, %cleanup-lpad.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %76 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 220), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest94 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest94:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %77 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %77, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest97 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest97:                                    ; preds = %normal-dest94
  %.elt = extractvalue { {}*, i64 } %78, 0
  %.elt446 = extractvalue { {}*, i64 } %78, 1
  %cond = icmp eq i64 %.elt446, 0
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %.in = select i1 %cond, {}* %79, {}* %.elt
  %80 = bitcast {}* %.in to i8*
  %81 = ptrtoint {}* %.in to i64
  %tag-only447 = and i64 %81, 7
  %consp-test = icmp eq i64 %tag-only447, 3
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115574.0 = select i1 %consp-test, {}* %.val, {}* %79
  %82 = icmp eq {}* %G115574.0, %79
  br i1 %82, label %tag79, label %tag43.outer.preheader

tag43.outer.preheader:                            ; preds = %normal-dest97
  br label %tag43.outer

normal-dest106:                                   ; preds = %normal-dest180
  call void @unreachableError()
  unreachable

header-check-br:                                  ; preds = %tag62
  %irc-bit-cast111 = bitcast {}* %DIE_LAENGE.0 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast111, i64 -9
  %irc-bit-cast112 = bitcast i8* %gep to i64*
  %83 = load i64, i64* %irc-bit-cast112, align 8
  %84 = icmp eq i64 %83, 1325
  br i1 %84, label %tag42, label %tag10

normal-dest116:                                   ; preds = %tag5
  %85 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 349), align 8
  %ptrtoint117 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint118 = add i64 %ptrtoint117, 7
  %entry-point-addr119 = inttoptr i64 %entry-point-addr-uint118 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point120 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr119, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point120({}* %18, i64 2, {}* %.in, {}* %85, {}* null, {}* null)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest123:                                   ; preds = %normal-dest116
  %.elt512 = extractvalue { {}*, i64 } %86, 0
  %.elt514 = extractvalue { {}*, i64 } %86, 1
  %cond443 = icmp eq i64 %.elt514, 0
  %87 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %DIE_LAENGE.1 = select i1 %cond443, {}* %87, {}* %.elt512
  br label %tag7

normal-dest142:                                   ; preds = %tag10
  %ptrtoint143 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint144 = add i64 %ptrtoint143, 7
  %entry-point-addr145 = inttoptr i64 %entry-point-addr-uint144 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point146 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr145, align 8
  %88 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point146({}* %26, i64 2, {}* %DIE_LAENGE.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest149 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest149:                                   ; preds = %normal-dest142
  %.elt461 = extractvalue { {}*, i64 } %88, 0
  %.elt463 = extractvalue { {}*, i64 } %88, 1
  %cond436 = icmp eq i64 %.elt463, 0
  %89 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115486.1 = select i1 %cond436, {}* %89, {}* %.elt461
  br label %tag36

normal-dest163:                                   ; preds = %tag16
  %ptrtoint164 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint165 = add i64 %ptrtoint164, 7
  %entry-point-addr166 = inttoptr i64 %entry-point-addr-uint165 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point167 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr166, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point167({}* %29, i64 1, {}* %16, {}* null, {}* null, {}* null)
          to label %normal-dest170 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest170:                                   ; preds = %normal-dest163
  %.elt499 = extractvalue { {}*, i64 } %90, 0
  %.elt501 = extractvalue { {}*, i64 } %90, 1
  %cond441 = icmp eq i64 %.elt501, 0
  %91 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %REST.1 = select i1 %cond441, {}* %91, {}* %.elt499
  br label %tag47

normal-dest176:                                   ; preds = %tag17
  %92 = invoke double @from_object_double({}* nonnull %DIE_LAENGE.0)
          to label %normal-dest177 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest177:                                   ; preds = %normal-dest176
  %93 = fsub double %30, %92
  %94 = invoke {}* @to_object_double(double %93)
          to label %tag47 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest180:                                   ; preds = %tag19
  %95 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %96 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %97 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %98 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 336), align 16
  %ptrtoint100 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint101 = add i64 %ptrtoint100, 7
  %entry-point-addr102 = inttoptr i64 %entry-point-addr-uint101 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point103 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr102, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point103({}* %32, i64 5, {}* %95, {}* %96, {}* %DIE_LAENGE.0, {}* %97, {}* %98)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest185:                                   ; preds = %maybe-more-tests
  %ptrtoint186 = ptrtoint {}* %146 to i64
  %entry-point-addr-uint187 = add i64 %ptrtoint186, 7
  %entry-point-addr188 = inttoptr i64 %entry-point-addr-uint187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr188, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point189({}* %146, i64 1, {}* nonnull %.in, {}* null, {}* null, {}* null)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest192:                                   ; preds = %normal-dest185
  %.elt516 = extractvalue { {}*, i64 } %100, 0
  %.elt518 = extractvalue { {}*, i64 } %100, 1
  %cond444 = icmp eq i64 %.elt518, 0
  %101 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115582.0 = select i1 %cond444, {}* %101, {}* %.elt516
  %102 = icmp eq {}* %G115582.0, inttoptr (i64 4 to {}*)
  br i1 %102, label %tag61, label %tag45

normal-dest199:                                   ; preds = %tag25
  %ptrtoint201 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint202 = add i64 %ptrtoint201, 7
  %entry-point-addr203 = inttoptr i64 %entry-point-addr-uint202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr203, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point204({}* %38, i64 1, {}* %44, {}* null, {}* null, {}* null)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest207:                                   ; preds = %normal-dest199
  %.elt456 = extractvalue { {}*, i64 } %103, 0
  %.elt458 = extractvalue { {}*, i64 } %103, 1
  %cond435 = icmp eq i64 %.elt458, 0
  %104 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond435, {}* %104, {}* %.elt456
  br label %tag43.outer.backedge

tag43.outer:                                      ; preds = %tag43.outer.backedge, %tag43.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag43.outer.preheader ], [ %LENGTH.0.ph.be, %tag43.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in, %tag43.outer.preheader ], [ %G2095854.0, %tag43.outer.backedge ]
  %105 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only275448 = and i64 %105, 7
  %consp-test276 = icmp eq i64 %tag-only275448, 3
  %106 = add i64 %105, 5
  %107 = inttoptr i64 %106 to {}**
  br label %tag43

normal-dest214:                                   ; preds = %tag26
  %ptrtoint215 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint216 = add i64 %ptrtoint215, 7
  %entry-point-addr217 = inttoptr i64 %entry-point-addr-uint216 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point218 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr217, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point218({}* %40, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest221 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest221:                                   ; preds = %normal-dest214
  %.elt452 = extractvalue { {}*, i64 } %108, 0
  %.elt454 = extractvalue { {}*, i64 } %108, 1
  %cond434 = icmp eq i64 %.elt454, 0
  %109 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond434, {}* %109, {}* %.elt452
  br label %tag43.outer.backedge

header-check-br246:                               ; preds = %tag33
  %irc-bit-cast250 = bitcast {}* %DIE_LAENGE.0 to i8*
  %gep251 = getelementptr inbounds i8, i8* %irc-bit-cast250, i64 -9
  %irc-bit-cast252 = bitcast i8* %gep251 to i64*
  %110 = load i64, i64* %irc-bit-cast252, align 8
  %111 = icmp eq i64 %110, 1325
  %brmerge562 = or i1 %fixnump-test133, %111
  br i1 %brmerge562, label %tag86, label %switch.early.test

normal-dest255:                                   ; preds = %tag37
  %112 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest256 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest256:                                   ; preds = %normal-dest255
  %113 = fcmp olt float %112, %47
  br i1 %113, label %tag34, label %tag81

header-check-br267:                               ; preds = %tag42
  %irc-bit-cast271 = bitcast {}* %farg1 to i8*
  %gep272 = getelementptr inbounds i8, i8* %irc-bit-cast271, i64 -9
  %irc-bit-cast273 = bitcast i8* %gep272 to i64*
  %114 = load i64, i64* %irc-bit-cast273, align 8
  %115 = icmp eq i64 %114, 1325
  br i1 %115, label %tag50, label %tag10

normal-dest278:                                   ; preds = %tag44
  %ptrtoint279 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint280 = add i64 %ptrtoint279, 7
  %entry-point-addr281 = inttoptr i64 %entry-point-addr-uint280 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point282 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr281, align 8
  %116 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point282({}* %51, i64 2, {}* %.in, {}* %farg1, {}* null, {}* null)
          to label %tag59 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest287:                                   ; preds = %tag46
  %117 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 350), align 16
  %ptrtoint288 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint289 = add i64 %ptrtoint288, 7
  %entry-point-addr290 = inttoptr i64 %entry-point-addr-uint289 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point291 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr290, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point291({}* %53, i64 2, {}* %G2095854.0, {}* %117, {}* null, {}* null)
          to label %tag43 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest300:                                   ; preds = %tag47
  %119 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %120 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 355), align 8
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest302 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest302:                                   ; preds = %normal-dest300
  %ptrtoint303 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint304 = add i64 %ptrtoint303, 7
  %entry-point-addr305 = inttoptr i64 %entry-point-addr-uint304 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point306 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr305, align 8
  %122 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point306({}* %121, i64 2, {}* %REST.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest309 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest309:                                   ; preds = %normal-dest302
  %.elt482 = extractvalue { {}*, i64 } %122, 0
  %.elt484 = extractvalue { {}*, i64 } %122, 1
  %cond438 = icmp eq i64 %.elt484, 0
  %123 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115448.0 = select i1 %cond438, {}* %123, {}* %.elt482
  %124 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 357), align 8
  %ptrtoint315 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint316 = add i64 %ptrtoint315, 7
  %entry-point-addr317 = inttoptr i64 %entry-point-addr-uint316 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point318 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr317, align 8
  %125 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point318({}* %55, i64 4, {}* %119, {}* %G115448.0, {}* %124, {}* inttoptr (i64 370 to {}*))
          to label %normal-dest321 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest321:                                   ; preds = %normal-dest309
  %.elt486 = extractvalue { {}*, i64 } %125, 0
  %.elt488 = extractvalue { {}*, i64 } %125, 1
  %cond439 = icmp eq i64 %.elt488, 0
  %126 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %PUNKTE.0 = select i1 %cond439, {}* %126, {}* %.elt486
  %127 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 342), align 16
  %128 = invoke {}* @cc_safe_fdefinition({}* %127)
          to label %normal-dest328 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest328:                                   ; preds = %normal-dest321
  %129 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 215), align 8
  %130 = invoke {}* @cc_safe_fdefinition({}* %129)
          to label %normal-dest330 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest330:                                   ; preds = %normal-dest328
  %131 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %ptrtoint331 = ptrtoint {}* %130 to i64
  %entry-point-addr-uint332 = add i64 %ptrtoint331, 7
  %entry-point-addr333 = inttoptr i64 %entry-point-addr-uint332 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point334 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr333, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point334({}* %130, i64 4, {}* %131, {}* %PUNKTE.0, {}* %.in, {}* %PUNKTE.0)
          to label %normal-dest337 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest337:                                   ; preds = %normal-dest330
  %.elt490 = extractvalue { {}*, i64 } %132, 0
  %.elt492 = extractvalue { {}*, i64 } %132, 1
  %cond440 = icmp eq i64 %.elt492, 0
  %133 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115437.0 = select i1 %cond440, {}* %133, {}* %.elt490
  %ptrtoint343 = ptrtoint {}* %128 to i64
  %entry-point-addr-uint344 = add i64 %ptrtoint343, 7
  %entry-point-addr345 = inttoptr i64 %entry-point-addr-uint344 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point346 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr345, align 8
  %134 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point346({}* %128, i64 2, {}* %G115437.0, {}* %farg1, {}* null, {}* null)
          to label %tag59 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest354:                                   ; preds = %tag50
  %135 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest355 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest355:                                   ; preds = %normal-dest354
  %136 = fcmp olt double %135, %57
  br i1 %136, label %tag84, label %tag6

switch.early.test:                                ; preds = %header-check-br246
  switch i64 %110, label %tag19 [
    i64 1349, label %tag86
    i64 1341, label %tag86
    i64 1309, label %tag86
  ]

header-check-br364:                               ; preds = %tag56
  %irc-bit-cast368 = bitcast {}* %farg1 to i8*
  %gep369 = getelementptr inbounds i8, i8* %irc-bit-cast368, i64 -9
  %irc-bit-cast370 = bitcast i8* %gep369 to i64*
  %137 = load i64, i64* %irc-bit-cast370, align 8
  %138 = icmp ne i64 %137, 1325
  %test249.not = xor i1 %test249, true
  %brmerge535 = or i1 %138, %test249.not
  br i1 %brmerge535, label %tag80, label %header-check-br374

header-check-br374:                               ; preds = %header-check-br364
  %irc-bit-cast378 = bitcast {}* %DIE_LAENGE.0 to i8*
  %gep379 = getelementptr inbounds i8, i8* %irc-bit-cast378, i64 -9
  %irc-bit-cast380 = bitcast i8* %gep379 to i64*
  %139 = load i64, i64* %irc-bit-cast380, align 8
  %140 = icmp eq i64 %139, 1325
  br i1 %140, label %tag17, label %tag80

normal-dest382:                                   ; preds = %tag63
  %141 = invoke float @from_object_float({}* %DIE_LAENGE.0)
          to label %normal-dest383 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest383:                                   ; preds = %normal-dest382
  %142 = fsub float %61, %141
  %143 = invoke {}* @to_object_float(float %142)
          to label %tag47 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br385:                               ; preds = %header-check-br406
  %.off546 = add i64 %153, -1153
  %144 = icmp ult i64 %.off546, 149
  br i1 %144, label %maybe-more-tests, label %tag45

maybe-more-tests:                                 ; preds = %header-check-br385
  %145 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 338), align 16
  %146 = invoke {}* @cc_safe_fdefinition({}* %145)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest393:                                   ; preds = %tag70
  %147 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %148 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %149 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %150 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint394 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint395 = add i64 %ptrtoint394, 7
  %entry-point-addr396 = inttoptr i64 %entry-point-addr-uint395 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point397 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr396, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point397({}* %64, i64 5, {}* %147, {}* %148, {}* %SEQUENCE.0.ph, {}* %149, {}* %150)
          to label %normal-dest400 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest400:                                   ; preds = %normal-dest393
  %.elt508 = extractvalue { {}*, i64 } %151, 0
  %.elt510 = extractvalue { {}*, i64 } %151, 1
  %cond442 = icmp eq i64 %.elt510, 0
  %152 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond442, {}* %152, {}* %.elt508
  br label %tag39

header-check-br406:                               ; preds = %tag79
  %gep411 = getelementptr inbounds i8, i8* %80, i64 -9
  %irc-bit-cast412 = bitcast i8* %gep411 to i64*
  %153 = load i64, i64* %irc-bit-cast412, align 8
  %.off = add i64 %153, -1081
  %154 = icmp ult i64 %.off, 69
  br i1 %154, label %tag61, label %header-check-br385

normal-dest416:                                   ; preds = %tag80
  %ptrtoint417 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint418 = add i64 %ptrtoint417, 7
  %entry-point-addr419 = inttoptr i64 %entry-point-addr-uint418 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point420 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr419, align 8
  %155 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point420({}* %70, i64 2, {}* %farg1, {}* %DIE_LAENGE.0, {}* null, {}* null)
          to label %normal-dest423 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest423:                                   ; preds = %normal-dest416
  %.elt478 = extractvalue { {}*, i64 } %155, 0
  %.elt480 = extractvalue { {}*, i64 } %155, 1
  %cond437 = icmp eq i64 %.elt480, 0
  %156 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %REST.2 = select i1 %cond437, {}* %156, {}* %.elt478
  br label %tag47
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^198^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !58 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^198^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G115611.0 = phi {}* [ %18, %header-check-br ], [ %G115611.1, %normal-dest17 ], [ %G115611.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 371), align 8
  %ptrtoint43 = ptrtoint {}* %G115611.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G115611.0, i64 2, {}* %"closure->KLH=FORMAT", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 371), align 8
  %"closure->KLH=FORMAT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=FORMAT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FORMAT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6579, i64 198, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 370), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115611.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115611.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 373), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->KLH=FORMAT", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 378), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->KLH=FORMAT", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 792 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 371), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=FORMAT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !59 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 4
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FORMAT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 4
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FORMAT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc168 unwind label %cleanup-lpad

.noexc168:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %tag19
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest41 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest36
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 326), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest60 unwind label %cleanup-lpad

tag19:                                            ; preds = %normal-dest36
  %18 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %32, i64 4)
  %result = extractvalue { i64, i1 } %18, 0
  %overflow = extractvalue { i64, i1 } %18, 1
  %19 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag, label %tag21

tag21:                                            ; preds = %normal-dest67, %normal-dest48, %tag19
  %G115635.0 = phi {}* [ %19, %tag19 ], [ %G115635.1, %normal-dest48 ], [ %G115635.2, %normal-dest67 ]
  %ptrtoint117 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint118 = add i64 %ptrtoint117, 7
  %entry-point-addr119 = inttoptr i64 %entry-point-addr-uint118 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point120 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr119, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point120({}* %31, i64 2, {}* %farg3, {}* %G115635.0, {}* null, {}* null)
          to label %normal-dest123 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest123, %tag21, %normal-dest60, %tag5, %normal-dest41, %tag, %normal-dest32, %normal-dest29, %normal-dest27, %normal-dest
  %21 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %21

normal-dest:                                      ; preds = %11
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 365), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest27:                                    ; preds = %normal-dest
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 215), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest27
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 367), align 8
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %26, {}* %farg2, {}* %27, {}* null)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest29
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt147 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt147, 0
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115631.0 = select i1 %cond, {}* %29, {}* %.elt
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 368), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest32
  %32 = ptrtoint {}* %farg0 to i64
  %fixnum-tag-only80148 = and i64 %32, 3
  %fixnump-test81 = icmp eq i64 %fixnum-tag-only80148, 0
  br i1 %fixnump-test81, label %tag19, label %tag5

normal-dest41:                                    ; preds = %tag
  %ptrtoint42 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %15, i64 1, {}* %19, {}* null, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %.elt165 = extractvalue { {}*, i64 } %33, 0
  %.elt167 = extractvalue { {}*, i64 } %33, 1
  %cond145 = icmp eq i64 %.elt167, 0
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115635.1 = select i1 %cond145, {}* %34, {}* %.elt165
  br label %tag21

normal-dest60:                                    ; preds = %tag5
  %ptrtoint61 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %17, i64 2, {}* %farg0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt150 = extractvalue { {}*, i64 } %35, 0
  %.elt152 = extractvalue { {}*, i64 } %35, 1
  %cond143 = icmp eq i64 %.elt152, 0
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115635.2 = select i1 %cond143, {}* %36, {}* %.elt150
  br label %tag21

normal-dest123:                                   ; preds = %tag21
  %.elt154 = extractvalue { {}*, i64 } %20, 0
  %.elt156 = extractvalue { {}*, i64 } %20, 1
  %cond144 = icmp eq i64 %.elt156, 0
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115632.0 = select i1 %cond144, {}* %37, {}* %.elt154
  %ptrtoint129 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint130 = add i64 %ptrtoint129, 7
  %entry-point-addr131 = inttoptr i64 %entry-point-addr-uint130 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point132 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr131, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point132({}* %23, i64 3, {}* %farg1, {}* %G115631.0, {}* %G115632.0, {}* null)
          to label %normal-dest135 unwind label %cleanup-lpad

normal-dest135:                                   ; preds = %normal-dest123
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %38
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^203^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !60 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^203^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G115693.0 = phi {}* [ %18, %header-check-br ], [ %G115693.1, %normal-dest17 ], [ %G115693.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 389), align 8
  %ptrtoint34 = ptrtoint {}* %G115693.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G115693.0, i64 2, {}* %"closure->KLH=FORMAT_LISTE", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag3, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 389), align 8
  %"closure->KLH=FORMAT_LISTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6744, i64 203, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115693.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 388), align 16
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115693.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag3

normal-dest40:                                    ; preds = %tag3
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 391), align 8
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->KLH=FORMAT_LISTE", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 394), align 16
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->KLH=FORMAT_LISTE", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 812 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 389), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !61 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 3
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest86, %normal-dest74, %normal-dest62, %normal-dest55, %normal-dest48, %normal-dest41, %normal-dest34, %normal-dest27, %normal-dest25, %normal-dest23, %normal-dest21, %normal-dest17, %normal-dest14, %normal-dest13, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @":::global-str-KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 3)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs5 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-16 = add i64 %rem-nargs5, -1
  store i64 %rem-nargs-16, i64* %"remaining-nargs*", align 8
  %vaarg7 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs9 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-110 = add i64 %rem-nargs9, -1
  store i64 %rem-nargs-110, i64* %"remaining-nargs*", align 8
  %vaarg11 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 380), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest13:                                    ; preds = %continue
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %13, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.6", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.6^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6744, i64 203, i64 0, i64 0)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest13
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 3, {}* %"closure->LAMBDA", {}* %10, {}* %vaarg, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest14
  %.elt = extractvalue { {}*, i64 } %14, 0
  %.elt105 = extractvalue { {}*, i64 } %14, 1
  %cond = icmp eq i64 %.elt105, 0
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115677.0 = select i1 %cond, {}* %15, {}* %.elt
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 382), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest21:                                    ; preds = %normal-dest17
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 384), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest21
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest23
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest27:                                    ; preds = %normal-dest25
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 365), align 8
  %ptrtoint28 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint29 = add i64 %ptrtoint28, 7
  %entry-point-addr30 = inttoptr i64 %entry-point-addr-uint29 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point31 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr30, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point31({}* %23, i64 1, {}* %24, {}* null, {}* null, {}* null)
          to label %normal-dest34 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %normal-dest27
  %.elt107 = extractvalue { {}*, i64 } %25, 0
  %.elt109 = extractvalue { {}*, i64 } %25, 1
  %cond99 = icmp eq i64 %.elt109, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115717.0 = select i1 %cond99, {}* %26, {}* %.elt107
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest34
  %ptrtoint42 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %28, i64 1, {}* %vaarg7, {}* null, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %.elt111 = extractvalue { {}*, i64 } %29, 0
  %.elt113 = extractvalue { {}*, i64 } %29, 1
  %cond100 = icmp eq i64 %.elt113, 0
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115718.0 = select i1 %cond100, {}* %30, {}* %.elt111
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest48
  %ptrtoint56 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %32, i64 1, {}* %vaarg11, {}* null, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %.elt115 = extractvalue { {}*, i64 } %33, 0
  %.elt117 = extractvalue { {}*, i64 } %33, 1
  %cond101 = icmp eq i64 %.elt117, 0
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115719.0 = select i1 %cond101, {}* %34, {}* %.elt115
  %ptrtoint68 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint69 = add i64 %ptrtoint68, 7
  %entry-point-addr70 = inttoptr i64 %entry-point-addr-uint69 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point71 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr70, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point71({}* %21, i64 4, {}* %G115717.0, {}* %G115718.0, {}* %G115719.0, {}* %34)
          to label %normal-dest74 unwind label %cleanup-lpad

normal-dest74:                                    ; preds = %normal-dest62
  %.elt119 = extractvalue { {}*, i64 } %35, 0
  %.elt121 = extractvalue { {}*, i64 } %35, 1
  %cond102 = icmp eq i64 %.elt121, 0
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115714.0 = select i1 %cond102, {}* %36, {}* %.elt119
  %ptrtoint80 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint81 = add i64 %ptrtoint80, 7
  %entry-point-addr82 = inttoptr i64 %entry-point-addr-uint81 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point83 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr82, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point83({}* %19, i64 2, {}* %G115714.0, {}* %G115677.0, {}* null, {}* null)
          to label %normal-dest86 unwind label %cleanup-lpad

normal-dest86:                                    ; preds = %normal-dest74
  %.elt123 = extractvalue { {}*, i64 } %37, 0
  %.elt125 = extractvalue { {}*, i64 } %37, 1
  %cond103 = icmp eq i64 %.elt125, 0
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115712.0 = select i1 %cond103, {}* %38, {}* %.elt123
  %ptrtoint92 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %17, i64 1, {}* %G115712.0, {}* null, {}* null, {}* null)
          to label %normal-dest98 unwind label %cleanup-lpad

normal-dest98:                                    ; preds = %normal-dest86
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %39
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.6"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !62 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.6^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.6^DESC" to %0*)) #7
          to label %.noexc130 unwind label %cleanup-lpad

.noexc130:                                        ; preds = %13
  unreachable

tag8:                                             ; preds = %normal-dest27
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 326), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest50 unwind label %cleanup-lpad

tag13:                                            ; preds = %normal-dest27
  %16 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %24, i64 4)
  %result = extractvalue { i64, i1 } %16, 0
  %overflow = extractvalue { i64, i1 } %16, 1
  %17 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag22, label %tag20

tag20:                                            ; preds = %normal-dest109, %normal-dest54, %tag13
  %G115740.0 = phi {}* [ %17, %tag13 ], [ %G115740.1, %normal-dest54 ], [ %G115740.2, %normal-dest109 ]
  %ptrtoint94 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint95 = add i64 %ptrtoint94, 7
  %entry-point-addr96 = inttoptr i64 %entry-point-addr-uint95 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point97 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr96, align 8
  %18 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point97({}* %23, i64 2, {}* %farg0, {}* %G115740.0, {}* null, {}* null)
          to label %normal-dest100 unwind label %cleanup-lpad

tag22:                                            ; preds = %tag13
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest102 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest102, %tag22, %tag20, %normal-dest50, %tag8, %normal-dest
  %21 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %21

normal-dest:                                      ; preds = %11
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 368), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest27 unwind label %cleanup-lpad

normal-dest27:                                    ; preds = %normal-dest
  %24 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only47116 = and i64 %24, 3
  %fixnump-test48 = icmp eq i64 %fixnum-tag-only47116, 0
  br i1 %fixnump-test48, label %tag13, label %tag8

normal-dest50:                                    ; preds = %tag8
  %ptrtoint51 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint51, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %farg1, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest50
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt118 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt118, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115740.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag20

normal-dest100:                                   ; preds = %tag20
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %18

normal-dest102:                                   ; preds = %tag22
  %ptrtoint103 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint104 = add i64 %ptrtoint103, 7
  %entry-point-addr105 = inttoptr i64 %entry-point-addr-uint104 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point106 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr105, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point106({}* %20, i64 1, {}* %17, {}* null, {}* null, {}* null)
          to label %normal-dest109 unwind label %cleanup-lpad

normal-dest109:                                   ; preds = %normal-dest102
  %.elt127 = extractvalue { {}*, i64 } %27, 0
  %.elt129 = extractvalue { {}*, i64 } %27, 1
  %cond115 = icmp eq i64 %.elt129, 0
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115740.2 = select i1 %cond115, {}* %28, {}* %.elt127
  br label %tag20
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^213^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !63 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^213^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G115792.0 = phi {}* [ %18, %header-check-br ], [ %G115792.1, %normal-dest17 ], [ %G115792.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 368), align 16
  %ptrtoint43 = ptrtoint {}* %G115792.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G115792.0, i64 2, {}* %"closure->KLH=FUELLE_AUF", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 368), align 16
  %"closure->KLH=FUELLE_AUF" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7117, i64 213, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 405), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115792.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115792.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 406), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->KLH=FUELLE_AUF", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 407), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->KLH=FUELLE_AUF", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 852 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 368), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !64 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc754 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc754:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %tag29
  %14 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only728 = and i64 %14, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only728, 0
  br i1 %fixnump-test, label %tag138, label %tag62

tag6:                                             ; preds = %tag30
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %16 = icmp eq {}* %SEQUENCE.0.ph, %15
  %.val780 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115903.0 = select i1 %16, {}* %.val780, {}* %15
  %17 = icmp eq {}* %G115903.0, %15
  br i1 %17, label %tag69, label %tag74

tag7:                                             ; preds = %tag133
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest162 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag11:                                            ; preds = %normal-dest614, %normal-dest566, %normal-dest500, %normal-dest488, %tag132
  %G115816.0 = phi {}* [ %107, %tag132 ], [ %G115816.1, %normal-dest488 ], [ %182, %normal-dest500 ], [ %G115816.2, %normal-dest566 ], [ %207, %normal-dest614 ]
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 357), align 8
  %ptrtoint176 = ptrtoint {}* %169 to i64
  %entry-point-addr-uint177 = add i64 %ptrtoint176, 7
  %entry-point-addr178 = inttoptr i64 %entry-point-addr-uint177 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point179 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr178, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point179({}* %169, i64 4, {}* %170, {}* %G115816.0, {}* %20, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest182 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag12:                                            ; preds = %tag125
  %22 = icmp eq {}* %G2095854.0, %.val779
  %G115959.0 = select i1 %22, {}* %.val776, {}* %.val779
  %23 = icmp eq {}* %G115959.0, %.val779
  br i1 %23, label %tag63, label %tag29

tag13:                                            ; preds = %normal-dest554
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag97

tag15:                                            ; preds = %tag51
  %trunc786 = trunc i64 %42 to i3
  switch i3 %trunc786, label %tag126 [
    i3 -2, label %tag118
    i3 1, label %header-check-br450
  ]

tag24:                                            ; preds = %tag102
  %25 = icmp eq {}* %WAS.0, %.val788
  %.val787 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115850.0 = select i1 %25, {}* %.val787, {}* %.val788
  %26 = icmp eq {}* %G115850.0, %.val788
  br i1 %26, label %tag67, label %tag80

tag28:                                            ; preds = %tag51
  %fixnum-tag-only214707 = and i64 %ptrtoint408, 3
  %fixnump-test215 = icmp eq i64 %fixnum-tag-only214707, 0
  br i1 %fixnump-test215, label %tag132, label %tag126

tag29:                                            ; preds = %tag12, %normal-dest471, %tag45, %tag107
  %27 = phi {}* [ %.val791, %tag107 ], [ %.val791, %tag45 ], [ %177, %normal-dest471 ], [ %.val779, %tag12 ]
  %x175.0 = phi {}* [ %82, %tag107 ], [ null, %tag45 ], [ %x175.1, %normal-dest471 ], [ %LENGTH205.0.ph, %tag12 ]
  %28 = ptrtoint {}* %x175.0 to i64
  %fixnum-tag-only218665 = and i64 %28, 3
  %fixnump-test219 = icmp eq i64 %fixnum-tag-only218665, 0
  br i1 %fixnump-test219, label %tag1, label %tag111

tag30:                                            ; preds = %normal-dest590, %tag30.outer
  br i1 %consp-test, label %tag35, label %tag6

tag31:                                            ; preds = %normal-dest345, %tag31.outer
  br i1 %consp-test226, label %tag88, label %tag87

tag32:                                            ; preds = %tag97
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest228 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag33:                                            ; preds = %normal-dest438
  %test239 = icmp eq i64 %tag-only497653, 1
  br i1 %test239, label %header-check-br236, label %tag142

tag34:                                            ; preds = %normal-dest150
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 220), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest246 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag35:                                            ; preds = %tag30
  %33 = load {}*, {}** %202, align 8
  %.val783.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag74

tag45:                                            ; preds = %tag82
  %34 = icmp eq {}* %WAS.0, %.val791
  %.val790 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115947.0 = select i1 %34, {}* %.val790, {}* %.val791
  %35 = icmp eq {}* %G115947.0, %.val791
  br i1 %35, label %tag99, label %tag29

tag31.outer:                                      ; preds = %tag31.outer.backedge, %tag31.outer.preheader
  %LENGTH205.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag31.outer.preheader ], [ %LENGTH205.0.ph.be, %tag31.outer.backedge ]
  %SEQUENCE222.0.ph = phi {}* [ %WAS.0, %tag31.outer.preheader ], [ %G2095854.0, %tag31.outer.backedge ]
  %36 = ptrtoint {}* %SEQUENCE222.0.ph to i64
  %tag-only225654 = and i64 %36, 7
  %consp-test226 = icmp eq i64 %tag-only225654, 3
  %37 = add i64 %36, 5
  %38 = inttoptr i64 %37 to {}**
  br label %tag31

tag47:                                            ; preds = %tag125
  %39 = ptrtoint {}* %LENGTH205.0.ph to i64
  %fixnum-tag-only301656 = and i64 %39, 3
  %fixnump-test302 = icmp eq i64 %fixnum-tag-only301656, 0
  br i1 %fixnump-test302, label %tag117, label %tag89

tag48:                                            ; preds = %switch.early.test, %tag79
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest304 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag51:                                            ; preds = %switch.early.test, %switch.early.test, %header-check-br414, %header-check-br407, %header-check-br407, %tag79
  %42 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only314694 = and i64 %42, 3
  %fixnump-test315 = icmp eq i64 %fixnum-tag-only314694, 0
  br i1 %fixnump-test315, label %tag28, label %tag15

tag53:                                            ; preds = %header-check-br399
  %43 = invoke double @from_object_double({}* nonnull %x175.0)
          to label %normal-dest316 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag54:                                            ; preds = %tag136, %normal-dest284, %header-check-br197
  %.pre = phi {}* [ %83, %tag136 ], [ %135, %normal-dest284 ], [ %83, %header-check-br197 ]
  br label %tag82

tag58:                                            ; preds = %normal-dest317
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag97

tag59:                                            ; preds = %tag111
  %45 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only320 = and i64 %45, 7
  %46 = icmp eq i64 %single-float-tag-only320, 6
  br i1 %46, label %tag124, label %tag62

tag62:                                            ; preds = %tag111, %header-check-br399, %tag75, %header-check-br357, %tag59, %tag1
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 351), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest331 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag63:                                            ; preds = %tag12
  %49 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest345 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag67:                                            ; preds = %tag24
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest367 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag69:                                            ; preds = %tag6
  %53 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest382 unwind label %cleanup-lpad.loopexit.loopexit

tag74:                                            ; preds = %tag6, %normal-dest389, %tag35
  %.val785 = phi {}* [ %.val783.pre, %tag35 ], [ %161, %normal-dest389 ], [ %15, %tag6 ]
  %G2095854259.0 = phi {}* [ %33, %tag35 ], [ %G2095854259.1, %normal-dest389 ], [ %15, %tag6 ]
  %55 = ptrtoint {}* %G2095854259.0 to i64
  %tag-only397679 = and i64 %55, 7
  %consp-test398 = icmp eq i64 %tag-only397679, 3
  %.val782 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115891.0 = select i1 %consp-test398, {}* %.val782, {}* %.val785
  %56 = icmp eq {}* %G115891.0, %.val785
  br i1 %56, label %tag114, label %tag131

tag75:                                            ; preds = %header-check-br357
  %ptrtoint400 = ptrtoint {}* %farg1 to i64
  %tag-only401 = and i64 %ptrtoint400, 7
  %test402 = icmp eq i64 %tag-only401, 1
  br i1 %test402, label %header-check-br399, label %tag62

tag79:                                            ; preds = %tag80
  %57 = icmp eq i64 %tag-only409, 6
  %fixnum-tag-only461689 = and i64 %ptrtoint408, 3
  %fixnump-test462 = icmp eq i64 %fixnum-tag-only461689, 0
  %or.cond770 = or i1 %57, %fixnump-test462
  br i1 %or.cond770, label %tag51, label %tag48

tag80:                                            ; preds = %tag114, %normal-dest374, %tag24, %tag84
  %y196.0 = phi {}* [ %62, %tag84 ], [ null, %tag24 ], [ %y196.1, %normal-dest374 ], [ %LENGTH.0.ph, %tag114 ]
  %ptrtoint408 = ptrtoint {}* %y196.0 to i64
  %tag-only409 = and i64 %ptrtoint408, 7
  %test410 = icmp eq i64 %tag-only409, 1
  br i1 %test410, label %header-check-br407, label %tag79

tag82:                                            ; preds = %header-check-br616, %normal-dest284, %tag54
  %.val791 = phi {}* [ %.pre, %tag54 ], [ %135, %normal-dest284 ], [ %83, %header-check-br616 ]
  %G115951.0.in = phi {}** [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), %tag54 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %normal-dest284 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %header-check-br616 ]
  %G115951.0 = load {}*, {}** %G115951.0.in, align 8
  %58 = icmp eq {}* %G115951.0, %.val791
  br i1 %58, label %tag45, label %tag107

tag84:                                            ; preds = %tag102
  %59 = add i64 %84, 7
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %"tag fixnum" = shl nuw i64 %61, 2
  %62 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag80

tag85:                                            ; preds = %tag97
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 215), align 8
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest436 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag87:                                            ; preds = %tag31
  %65 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %66 = icmp eq {}* %SEQUENCE222.0.ph, %65
  %.val774 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116000.0 = select i1 %66, {}* %.val774, {}* %65
  %67 = icmp eq {}* %G116000.0, %65
  br i1 %67, label %tag112, label %tag125

tag88:                                            ; preds = %tag31
  %68 = load {}*, {}** %38, align 8
  %.val777.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag125

tag89:                                            ; preds = %tag47
  %69 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest422 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag97:                                            ; preds = %tag138, %normal-dest338, %tag141, %tag104, %tag58, %tag13
  %G115919.0 = phi {}* [ %76, %tag104 ], [ %24, %tag13 ], [ %44, %tag58 ], [ %113, %tag141 ], [ %G115919.1, %normal-dest338 ], [ %., %tag138 ]
  %71 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %72 = icmp eq {}* %G115919.0, %71
  br i1 %72, label %tag85, label %tag32

tag99:                                            ; preds = %tag45
  %73 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest464 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag101:                                           ; preds = %normal-dest182, %normal-dest228
  %.sink750 = phi { {}*, i64 } [ %129, %normal-dest228 ], [ %123, %normal-dest182 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink750

tag102:                                           ; preds = %header-check-br236, %normal-dest539, %tag142
  %.val788 = phi {}* [ %.pre815, %tag142 ], [ %192, %normal-dest539 ], [ %G115910.0, %header-check-br236 ]
  %G115854.0.in = phi {}** [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), %tag142 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %normal-dest539 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %header-check-br236 ]
  %G115854.0 = load {}*, {}** %G115854.0.in, align 8
  %75 = icmp eq {}* %G115854.0, %.val788
  br i1 %75, label %tag24, label %tag84

tag104:                                           ; preds = %normal-dest554
  %76 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag97

tag106:                                           ; preds = %tag132
  %77 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest481 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag107:                                           ; preds = %tag82
  %79 = add i64 %84, 7
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %"tag fixnum494" = shl nuw i64 %81, 2
  %82 = inttoptr i64 %"tag fixnum494" to {}*
  br label %tag29

tag108:                                           ; preds = %normal-dest253, %normal-dest150
  %83 = phi {}* [ %117, %normal-dest150 ], [ %133, %normal-dest253 ]
  %WAS.0 = phi {}* [ %farg0, %normal-dest150 ], [ %WAS.1, %normal-dest253 ]
  %84 = ptrtoint {}* %WAS.0 to i64
  %tag-only497653 = and i64 %84, 7
  %consp-test498 = icmp eq i64 %tag-only497653, 3
  %.749 = select i1 %consp-test498, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0)
  %G116007.0 = load {}*, {}** %.749, align 8
  %85 = icmp eq {}* %G116007.0, %83
  br i1 %85, label %tag136, label %tag31.outer.preheader

tag31.outer.preheader:                            ; preds = %tag108
  br label %tag31.outer

tag109:                                           ; preds = %tag118
  %86 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest499 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag111:                                           ; preds = %tag29
  %trunc = trunc i64 %28 to i3
  switch i3 %trunc, label %tag62 [
    i3 -2, label %tag59
    i3 1, label %header-check-br357
  ]

tag112:                                           ; preds = %tag87
  %87 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest504 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag113:                                           ; preds = %tag117
  %89 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest518 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag114:                                           ; preds = %tag74
  %91 = icmp eq {}* %G2095854259.0, %.val785
  %G115862.0 = select i1 %91, {}* %.val782, {}* %.val785
  %92 = icmp eq {}* %G115862.0, %.val785
  br i1 %92, label %tag129, label %tag80

tag117:                                           ; preds = %tag47
  %93 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %39, i64 4)
  %result = extractvalue { i64, i1 } %93, 0
  %overflow = extractvalue { i64, i1 } %93, 1
  %94 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag113, label %tag31.outer.backedge

tag31.outer.backedge:                             ; preds = %tag117, %normal-dest525, %normal-dest429
  %LENGTH205.0.ph.be = phi {}* [ %LENGTH205.1, %normal-dest429 ], [ %LENGTH205.2, %normal-dest525 ], [ %94, %tag117 ]
  br label %tag31.outer

tag118:                                           ; preds = %tag15
  %95 = icmp eq i64 %tag-only409, 6
  br i1 %95, label %tag109, label %tag126

tag124:                                           ; preds = %tag59
  %96 = invoke float @from_object_float({}* %x175.0)
          to label %normal-dest553 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag125:                                           ; preds = %tag87, %normal-dest511, %tag88
  %.val779 = phi {}* [ %.val777.pre, %tag88 ], [ %188, %normal-dest511 ], [ %65, %tag87 ]
  %G2095854.0 = phi {}* [ %68, %tag88 ], [ %G2095854.1, %normal-dest511 ], [ %65, %tag87 ]
  %97 = ptrtoint {}* %G2095854.0 to i64
  %tag-only556655 = and i64 %97, 7
  %consp-test557 = icmp eq i64 %tag-only556655, 3
  %.val776 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G115988.0 = select i1 %consp-test557, {}* %.val776, {}* %.val779
  %98 = icmp eq {}* %G115988.0, %.val779
  br i1 %98, label %tag12, label %tag47

tag126:                                           ; preds = %tag15, %header-check-br450, %tag118, %tag28, %header-check-br207
  %99 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 326), align 16
  %100 = invoke {}* @cc_safe_fdefinition({}* %99)
          to label %normal-dest559 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag127:                                           ; preds = %tag131
  %101 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest573 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag129:                                           ; preds = %tag114
  %103 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest590 unwind label %cleanup-lpad.loopexit.loopexit

tag131:                                           ; preds = %tag74
  %105 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only607680 = and i64 %105, 3
  %fixnump-test608 = icmp eq i64 %fixnum-tag-only607680, 0
  br i1 %fixnump-test608, label %tag133, label %tag127

tag132:                                           ; preds = %tag28
  %106 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %42, i64 %ptrtoint408)
  %result609 = extractvalue { i64, i1 } %106, 0
  %overflow610 = extractvalue { i64, i1 } %106, 1
  %107 = inttoptr i64 %result609 to {}*
  br i1 %overflow610, label %tag106, label %tag11

tag133:                                           ; preds = %tag131
  %108 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %105, i64 4)
  %result611 = extractvalue { i64, i1 } %108, 0
  %overflow612 = extractvalue { i64, i1 } %108, 1
  %109 = inttoptr i64 %result611 to {}*
  br i1 %overflow612, label %tag7, label %tag30.outer.backedge

tag30.outer.backedge:                             ; preds = %tag133, %normal-dest169, %normal-dest580
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest580 ], [ %LENGTH.1, %normal-dest169 ], [ %109, %tag133 ]
  br label %tag30.outer

tag135:                                           ; preds = %header-check-br207
  %110 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest613 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag136:                                           ; preds = %tag108
  %test619 = icmp eq i64 %tag-only497653, 1
  br i1 %test619, label %header-check-br616, label %tag54

tag138:                                           ; preds = %tag1
  %111 = icmp sgt {}* %x175.0, %farg1
  %112 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %. = select i1 %111, {}* %112, {}* %27
  br label %tag97

tag141:                                           ; preds = %normal-dest317
  %113 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag97

tag142:                                           ; preds = %tag33, %normal-dest539, %header-check-br321
  %.pre815 = phi {}* [ %G115910.0, %tag33 ], [ %192, %normal-dest539 ], [ %G115910.0, %header-check-br321 ]
  br label %tag102

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest590, %tag129, %normal-dest382, %tag69
  %lpad.loopexit794 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest573, %tag127, %normal-dest162, %tag7
  %lpad.loopexit.split-lp795 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag63, %normal-dest345, %tag112, %normal-dest504
  %lpad.loopexit799 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag89, %normal-dest422, %tag113, %normal-dest518
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10, %normal-dest614, %normal-dest613, %tag135, %normal-dest559, %tag126, %normal-dest553, %tag124, %normal-dest532, %maybe-more-tests329, %normal-dest500, %normal-dest499, %tag109, %normal-dest481, %tag106, %normal-dest464, %tag99, %normal-dest436, %tag85, %normal-dest367, %tag67, %normal-dest331, %tag62, %normal-dest316, %tag53, %normal-dest304, %tag48, %normal-dest277, %maybe-more-tests, %normal-dest246, %tag34, %normal-dest228, %tag32, %normal-dest182, %tag11, %normal-dest147, %normal-dest
  %lpad.loopexit.split-lp797 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit794, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp795, %cleanup-lpad.loopexit.loopexit.split-lp ], [ %lpad.loopexit.split-lp797, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit799, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %114 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %115 = invoke {}* @cc_safe_fdefinition({}* %114)
          to label %normal-dest147 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest147:                                   ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %115 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %116 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %115, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest150:                                   ; preds = %normal-dest147
  %.elt = extractvalue { {}*, i64 } %116, 0
  %.elt648 = extractvalue { {}*, i64 } %116, 1
  %cond = icmp eq i64 %.elt648, 0
  %117 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %object.0 = select i1 %cond, {}* %117, {}* %.elt
  %118 = icmp eq {}* %object.0, %117
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116013.0 = select i1 %118, {}* %.val, {}* %117
  %119 = icmp eq {}* %G116013.0, %117
  br i1 %119, label %tag108, label %tag34

normal-dest162:                                   ; preds = %tag7
  %ptrtoint163 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint164 = add i64 %ptrtoint163, 7
  %entry-point-addr165 = inttoptr i64 %entry-point-addr-uint164 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point166 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr165, align 8
  %120 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point166({}* %19, i64 1, {}* %109, {}* null, {}* null, {}* null)
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest169:                                   ; preds = %normal-dest162
  %.elt686 = extractvalue { {}*, i64 } %120, 0
  %.elt688 = extractvalue { {}*, i64 } %120, 1
  %cond637 = icmp eq i64 %.elt688, 0
  %121 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond637, {}* %121, {}* %.elt686
  br label %tag30.outer.backedge

normal-dest182:                                   ; preds = %tag11
  %.elt700 = extractvalue { {}*, i64 } %21, 0
  %.elt702 = extractvalue { {}*, i64 } %21, 1
  %cond639 = icmp eq i64 %.elt702, 0
  %122 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115813.0 = select i1 %cond639, {}* %122, {}* %.elt700
  %ptrtoint188 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint189 = add i64 %ptrtoint188, 7
  %entry-point-addr190 = inttoptr i64 %entry-point-addr-uint189 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point191 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr190, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point191({}* %64, i64 3, {}* %167, {}* %WAS.0, {}* %G115813.0, {}* null)
          to label %tag101 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br197:                               ; preds = %header-check-br616
  %.off793 = add i64 %208, -1153
  %124 = icmp ult i64 %.off793, 149
  br i1 %124, label %maybe-more-tests, label %tag54

maybe-more-tests:                                 ; preds = %header-check-br197
  %125 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 338), align 16
  %126 = invoke {}* @cc_safe_fdefinition({}* %125)
          to label %normal-dest277 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br207:                               ; preds = %header-check-br450
  %irc-bit-cast211 = bitcast {}* %y196.0 to i8*
  %gep212 = getelementptr inbounds i8, i8* %irc-bit-cast211, i64 -9
  %irc-bit-cast213 = bitcast i8* %gep212 to i64*
  %127 = load i64, i64* %irc-bit-cast213, align 8
  %128 = icmp eq i64 %127, 1325
  br i1 %128, label %tag135, label %tag126

normal-dest228:                                   ; preds = %tag32
  %ptrtoint229 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint230 = add i64 %ptrtoint229, 7
  %entry-point-addr231 = inttoptr i64 %entry-point-addr-uint230 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point232 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr231, align 8
  %129 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point232({}* %30, i64 2, {}* %WAS.0, {}* %farg1, {}* null, {}* null)
          to label %tag101 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br236:                               ; preds = %tag33
  %irc-bit-cast240 = bitcast {}* %WAS.0 to i8*
  %gep241 = getelementptr inbounds i8, i8* %irc-bit-cast240, i64 -9
  %irc-bit-cast242 = bitcast i8* %gep241 to i64*
  %130 = load i64, i64* %irc-bit-cast242, align 8
  %.off = add i64 %130, -1081
  %131 = icmp ult i64 %.off, 69
  br i1 %131, label %tag102, label %header-check-br321

normal-dest246:                                   ; preds = %tag34
  %ptrtoint247 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint248 = add i64 %ptrtoint247, 7
  %entry-point-addr249 = inttoptr i64 %entry-point-addr-uint248 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point250 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr249, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point250({}* %32, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest253 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest253:                                   ; preds = %normal-dest246
  %.elt650 = extractvalue { {}*, i64 } %132, 0
  %.elt652 = extractvalue { {}*, i64 } %132, 1
  %cond632 = icmp eq i64 %.elt652, 0
  %133 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %WAS.1 = select i1 %cond632, {}* %133, {}* %.elt650
  br label %tag108

normal-dest277:                                   ; preds = %maybe-more-tests
  %ptrtoint278 = ptrtoint {}* %126 to i64
  %entry-point-addr-uint279 = add i64 %ptrtoint278, 7
  %entry-point-addr280 = inttoptr i64 %entry-point-addr-uint279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr280, align 8
  %134 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point281({}* %126, i64 1, {}* nonnull %WAS.0, {}* null, {}* null, {}* null)
          to label %normal-dest284 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest284:                                   ; preds = %normal-dest277
  %.elt742 = extractvalue { {}*, i64 } %134, 0
  %.elt744 = extractvalue { {}*, i64 } %134, 1
  %cond646 = icmp eq i64 %.elt744, 0
  %135 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116028.0 = select i1 %cond646, {}* %135, {}* %.elt742
  %136 = icmp eq {}* %G116028.0, inttoptr (i64 4 to {}*)
  br i1 %136, label %tag82, label %tag54

normal-dest304:                                   ; preds = %tag48
  %137 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %138 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %139 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %140 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 336), align 16
  %ptrtoint306 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint307 = add i64 %ptrtoint306, 7
  %entry-point-addr308 = inttoptr i64 %entry-point-addr-uint307 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point309 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr308, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point309({}* %41, i64 5, {}* %137, {}* %138, {}* %y196.0, {}* %139, {}* %140)
          to label %normal-dest312 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest312:                                   ; preds = %normal-dest304
  call void @unreachableError()
  unreachable

normal-dest316:                                   ; preds = %tag53
  %142 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest317 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest317:                                   ; preds = %normal-dest316
  %143 = fcmp olt double %142, %43
  br i1 %143, label %tag58, label %tag141

header-check-br321:                               ; preds = %header-check-br236
  %.off789 = add i64 %130, -1153
  %144 = icmp ult i64 %.off789, 149
  br i1 %144, label %maybe-more-tests329, label %tag142

maybe-more-tests329:                              ; preds = %header-check-br321
  %145 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 338), align 16
  %146 = invoke {}* @cc_safe_fdefinition({}* %145)
          to label %normal-dest532 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest331:                                   ; preds = %tag62
  %ptrtoint332 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint333 = add i64 %ptrtoint332, 7
  %entry-point-addr334 = inttoptr i64 %entry-point-addr-uint333 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point335 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr334, align 8
  %147 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point335({}* %48, i64 2, {}* %x175.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest338 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest338:                                   ; preds = %normal-dest331
  %.elt667 = extractvalue { {}*, i64 } %147, 0
  %.elt669 = extractvalue { {}*, i64 } %147, 1
  %cond635 = icmp eq i64 %.elt669, 0
  %148 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115919.1 = select i1 %cond635, {}* %148, {}* %.elt667
  br label %tag97

normal-dest345:                                   ; preds = %tag63
  %149 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 400), align 16
  %ptrtoint346 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint347 = add i64 %ptrtoint346, 7
  %entry-point-addr348 = inttoptr i64 %entry-point-addr-uint347 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point349 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr348, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point349({}* %50, i64 2, {}* %G2095854.0, {}* %149, {}* null, {}* null)
          to label %tag31 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

header-check-br357:                               ; preds = %tag111
  %irc-bit-cast361 = bitcast {}* %x175.0 to i8*
  %gep362 = getelementptr inbounds i8, i8* %irc-bit-cast361, i64 -9
  %irc-bit-cast363 = bitcast i8* %gep362 to i64*
  %151 = load i64, i64* %irc-bit-cast363, align 8
  %152 = icmp eq i64 %151, 1325
  br i1 %152, label %tag75, label %tag62

normal-dest367:                                   ; preds = %tag67
  %153 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 401), align 8
  %ptrtoint368 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint369 = add i64 %ptrtoint368, 7
  %entry-point-addr370 = inttoptr i64 %entry-point-addr-uint369 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point371 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr370, align 8
  %154 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point371({}* %52, i64 2, {}* %WAS.0, {}* %153, {}* null, {}* null)
          to label %normal-dest374 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest374:                                   ; preds = %normal-dest367
  %.elt721 = extractvalue { {}*, i64 } %154, 0
  %.elt723 = extractvalue { {}*, i64 } %154, 1
  %cond642 = icmp eq i64 %.elt723, 0
  %155 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %y196.1 = select i1 %cond642, {}* %155, {}* %.elt721
  br label %tag80

normal-dest382:                                   ; preds = %tag69
  %156 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %157 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %158 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %159 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint383 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint384 = add i64 %ptrtoint383, 7
  %entry-point-addr385 = inttoptr i64 %entry-point-addr-uint384 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point386 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr385, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point386({}* %54, i64 5, {}* %156, {}* %157, {}* %SEQUENCE.0.ph, {}* %158, {}* %159)
          to label %normal-dest389 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest389:                                   ; preds = %normal-dest382
  %.elt717 = extractvalue { {}*, i64 } %160, 0
  %.elt719 = extractvalue { {}*, i64 } %160, 1
  %cond641 = icmp eq i64 %.elt719, 0
  %161 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G2095854259.1 = select i1 %cond641, {}* %161, {}* %.elt717
  br label %tag74

header-check-br399:                               ; preds = %tag75
  %irc-bit-cast403 = bitcast {}* %farg1 to i8*
  %gep404 = getelementptr inbounds i8, i8* %irc-bit-cast403, i64 -9
  %irc-bit-cast405 = bitcast i8* %gep404 to i64*
  %162 = load i64, i64* %irc-bit-cast405, align 8
  %163 = icmp eq i64 %162, 1325
  br i1 %163, label %tag53, label %tag62

header-check-br407:                               ; preds = %tag80
  %irc-bit-cast411 = bitcast {}* %y196.0 to i8*
  %gep412 = getelementptr inbounds i8, i8* %irc-bit-cast411, i64 -9
  %irc-bit-cast413 = bitcast i8* %gep412 to i64*
  %164 = load i64, i64* %irc-bit-cast413, align 8
  switch i64 %164, label %header-check-br414 [
    i64 1325, label %tag51
    i64 1341, label %tag51
  ]

header-check-br414:                               ; preds = %header-check-br407
  %.old = and i64 %ptrtoint408, 3
  %fixnump-test462.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test462.old, label %tag51, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br414
  switch i64 %164, label %tag48 [
    i64 1349, label %tag51
    i64 1309, label %tag51
  ]

normal-dest422:                                   ; preds = %tag89
  %ptrtoint423 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint424 = add i64 %ptrtoint423, 7
  %entry-point-addr425 = inttoptr i64 %entry-point-addr-uint424 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point426 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr425, align 8
  %165 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point426({}* %70, i64 2, {}* %LENGTH205.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest429 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest429:                                   ; preds = %normal-dest422
  %.elt658 = extractvalue { {}*, i64 } %165, 0
  %.elt660 = extractvalue { {}*, i64 } %165, 1
  %cond633 = icmp eq i64 %.elt660, 0
  %166 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH205.1 = select i1 %cond633, {}* %166, {}* %.elt658
  br label %tag31.outer.backedge

normal-dest436:                                   ; preds = %tag85
  %167 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %168 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 353), align 8
  %169 = invoke {}* @cc_safe_fdefinition({}* %168)
          to label %normal-dest438 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest438:                                   ; preds = %normal-dest436
  %170 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %G115910.0 = load {}*, {}** %.749, align 8
  %171 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %172 = icmp eq {}* %G115910.0, %171
  br i1 %172, label %tag33, label %tag30.outer.preheader

tag30.outer.preheader:                            ; preds = %normal-dest438
  br label %tag30.outer

header-check-br450:                               ; preds = %tag15
  %irc-bit-cast454 = bitcast {}* %farg1 to i8*
  %gep455 = getelementptr inbounds i8, i8* %irc-bit-cast454, i64 -9
  %irc-bit-cast456 = bitcast i8* %gep455 to i64*
  %173 = load i64, i64* %irc-bit-cast456, align 8
  %174 = icmp ne i64 %173, 1325
  %test410.not = xor i1 %test410, true
  %brmerge = or i1 %174, %test410.not
  br i1 %brmerge, label %tag126, label %header-check-br207

normal-dest464:                                   ; preds = %tag99
  %175 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 399), align 8
  %ptrtoint465 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint466 = add i64 %ptrtoint465, 7
  %entry-point-addr467 = inttoptr i64 %entry-point-addr-uint466 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point468 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr467, align 8
  %176 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point468({}* %74, i64 2, {}* %WAS.0, {}* %175, {}* null, {}* null)
          to label %normal-dest471 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest471:                                   ; preds = %normal-dest464
  %.elt738 = extractvalue { {}*, i64 } %176, 0
  %.elt740 = extractvalue { {}*, i64 } %176, 1
  %cond645 = icmp eq i64 %.elt740, 0
  %177 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %x175.1 = select i1 %cond645, {}* %177, {}* %.elt738
  br label %tag29

normal-dest481:                                   ; preds = %tag106
  %ptrtoint482 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint483 = add i64 %ptrtoint482, 7
  %entry-point-addr484 = inttoptr i64 %entry-point-addr-uint483 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point485 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr484, align 8
  %178 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point485({}* %78, i64 1, {}* %107, {}* null, {}* null, {}* null)
          to label %normal-dest488 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest488:                                   ; preds = %normal-dest481
  %.elt709 = extractvalue { {}*, i64 } %178, 0
  %.elt711 = extractvalue { {}*, i64 } %178, 1
  %cond640 = icmp eq i64 %.elt711, 0
  %179 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115816.1 = select i1 %cond640, {}* %179, {}* %.elt709
  br label %tag11

normal-dest499:                                   ; preds = %tag109
  %180 = invoke float @from_object_float({}* %y196.0)
          to label %normal-dest500 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest500:                                   ; preds = %normal-dest499
  %181 = fsub float %86, %180
  %182 = invoke {}* @to_object_float(float %181)
          to label %tag11 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest504:                                   ; preds = %tag112
  %183 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %184 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %185 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %186 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint505 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint506 = add i64 %ptrtoint505, 7
  %entry-point-addr507 = inttoptr i64 %entry-point-addr-uint506 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point508 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr507, align 8
  %187 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point508({}* %88, i64 5, {}* %183, {}* %184, {}* %SEQUENCE222.0.ph, {}* %185, {}* %186)
          to label %normal-dest511 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest511:                                   ; preds = %normal-dest504
  %.elt734 = extractvalue { {}*, i64 } %187, 0
  %.elt736 = extractvalue { {}*, i64 } %187, 1
  %cond644 = icmp eq i64 %.elt736, 0
  %188 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond644, {}* %188, {}* %.elt734
  br label %tag125

normal-dest518:                                   ; preds = %tag113
  %ptrtoint519 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint520 = add i64 %ptrtoint519, 7
  %entry-point-addr521 = inttoptr i64 %entry-point-addr-uint520 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point522 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr521, align 8
  %189 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point522({}* %90, i64 1, {}* %94, {}* null, {}* null, {}* null)
          to label %normal-dest525 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest525:                                   ; preds = %normal-dest518
  %.elt662 = extractvalue { {}*, i64 } %189, 0
  %.elt664 = extractvalue { {}*, i64 } %189, 1
  %cond634 = icmp eq i64 %.elt664, 0
  %190 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH205.2 = select i1 %cond634, {}* %190, {}* %.elt662
  br label %tag31.outer.backedge

normal-dest532:                                   ; preds = %maybe-more-tests329
  %ptrtoint533 = ptrtoint {}* %146 to i64
  %entry-point-addr-uint534 = add i64 %ptrtoint533, 7
  %entry-point-addr535 = inttoptr i64 %entry-point-addr-uint534 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point536 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr535, align 8
  %191 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point536({}* %146, i64 1, {}* nonnull %WAS.0, {}* null, {}* null, {}* null)
          to label %normal-dest539 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest539:                                   ; preds = %normal-dest532
  %.elt725 = extractvalue { {}*, i64 } %191, 0
  %.elt727 = extractvalue { {}*, i64 } %191, 1
  %cond643 = icmp eq i64 %.elt727, 0
  %192 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116024.0 = select i1 %cond643, {}* %192, {}* %.elt725
  %193 = icmp eq {}* %G116024.0, inttoptr (i64 4 to {}*)
  br i1 %193, label %tag102, label %tag142

normal-dest553:                                   ; preds = %tag124
  %194 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest554 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest554:                                   ; preds = %normal-dest553
  %195 = fcmp olt float %194, %96
  br i1 %195, label %tag104, label %tag13

normal-dest559:                                   ; preds = %tag126
  %ptrtoint560 = ptrtoint {}* %100 to i64
  %entry-point-addr-uint561 = add i64 %ptrtoint560, 7
  %entry-point-addr562 = inttoptr i64 %entry-point-addr-uint561 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point563 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr562, align 8
  %196 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point563({}* %100, i64 2, {}* %farg1, {}* %y196.0, {}* null, {}* null)
          to label %normal-dest566 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest566:                                   ; preds = %normal-dest559
  %.elt696 = extractvalue { {}*, i64 } %196, 0
  %.elt698 = extractvalue { {}*, i64 } %196, 1
  %cond638 = icmp eq i64 %.elt698, 0
  %197 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G115816.2 = select i1 %cond638, {}* %197, {}* %.elt696
  br label %tag11

normal-dest573:                                   ; preds = %tag127
  %ptrtoint574 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint575 = add i64 %ptrtoint574, 7
  %entry-point-addr576 = inttoptr i64 %entry-point-addr-uint575 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point577 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr576, align 8
  %198 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point577({}* %102, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest580 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest580:                                   ; preds = %normal-dest573
  %.elt682 = extractvalue { {}*, i64 } %198, 0
  %.elt684 = extractvalue { {}*, i64 } %198, 1
  %cond636 = icmp eq i64 %.elt684, 0
  %199 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond636, {}* %199, {}* %.elt682
  br label %tag30.outer.backedge

tag30.outer:                                      ; preds = %tag30.outer.backedge, %tag30.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag30.outer.preheader ], [ %LENGTH.0.ph.be, %tag30.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %WAS.0, %tag30.outer.preheader ], [ %G2095854259.0, %tag30.outer.backedge ]
  %200 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only221678 = and i64 %200, 7
  %consp-test = icmp eq i64 %tag-only221678, 3
  %201 = add i64 %200, 5
  %202 = inttoptr i64 %201 to {}**
  br label %tag30

normal-dest590:                                   ; preds = %tag129
  %203 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 402), align 16
  %ptrtoint591 = ptrtoint {}* %104 to i64
  %entry-point-addr-uint592 = add i64 %ptrtoint591, 7
  %entry-point-addr593 = inttoptr i64 %entry-point-addr-uint592 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point594 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr593, align 8
  %204 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point594({}* %104, i64 2, {}* %G2095854259.0, {}* %203, {}* null, {}* null)
          to label %tag30 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest613:                                   ; preds = %tag135
  %205 = invoke double @from_object_double({}* nonnull %y196.0)
          to label %normal-dest614 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest614:                                   ; preds = %normal-dest613
  %206 = fsub double %110, %205
  %207 = invoke {}* @to_object_double(double %206)
          to label %tag11 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br616:                               ; preds = %tag136
  %irc-bit-cast620 = bitcast {}* %WAS.0 to i8*
  %gep621 = getelementptr inbounds i8, i8* %irc-bit-cast620, i64 -9
  %irc-bit-cast622 = bitcast i8* %gep621 to i64*
  %208 = load i64, i64* %irc-bit-cast622, align 8
  %.off792 = add i64 %208, -1081
  %209 = icmp ult i64 %.off792, 69
  br i1 %209, label %tag82, label %header-check-br197
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^222^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !65 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^222^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G116065.0 = phi {}* [ %18, %header-check-br ], [ %G116065.1, %normal-dest26 ], [ %G116065.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 410), align 16
  %ptrtoint43 = ptrtoint {}* %G116065.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G116065.0, i64 2, {}* %"closure->KLH=KREUZ_PRODUKT", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag3, %normal-dest30, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 410), align 16
  %"closure->KLH=KREUZ_PRODUKT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7404, i64 222, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag2

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116065.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag3

normal-dest30:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 409), align 8
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116065.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag3

normal-dest49:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 412), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->KLH=KREUZ_PRODUKT", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 417), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->KLH=KREUZ_PRODUKT", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 888 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 410), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !66 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc204 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc204:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest125
  %14 = icmp eq {}* %"%DOLIST-VAR74.0225", %77
  %.val213 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116115.0 = select i1 %14, {}* %.val213, {}* %77
  %15 = icmp eq {}* %G116115.0, %77
  br i1 %15, label %tag22, label %tag2

tag2:                                             ; preds = %tag, %tag17.backedge, %tag15
  %.val216 = phi {}* [ %farg1, %tag15 ], [ %70, %tag17.backedge ], [ %77, %tag ]
  %ERG.1.lcssa = phi {}* [ %ERG.0228, %tag15 ], [ %ERG.2, %tag17.backedge ], [ %ERG.2, %tag ]
  br i1 %consp-test67, label %tag34, label %tag35

tag5:                                             ; preds = %tag35, %tag12.backedge, %normal-dest
  %ERG.0.lcssa = phi {}* [ %farg0, %normal-dest ], [ %ERG.1.lcssa, %tag12.backedge ], [ %ERG.1.lcssa, %tag35 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %16 = insertvalue { {}*, i64 } undef, {}* %ERG.0.lcssa, 0
  %17 = insertvalue { {}*, i64 } %16, i64 1, 1
  ret { {}*, i64 } %17

tag6:                                             ; preds = %tag6.preheader, %tag12.backedge
  %.val210 = phi {}* [ %34, %tag12.backedge ], [ %50, %tag6.preheader ]
  %ERG.0228 = phi {}* [ %ERG.1.lcssa, %tag12.backedge ], [ %50, %tag6.preheader ]
  %"%DOLIST-VAR.0227" = phi {}* [ %"%DOLIST-VAR.0.be", %tag12.backedge ], [ %farg0, %tag6.preheader ]
  %18 = ptrtoint {}* %"%DOLIST-VAR.0227" to i64
  %tag-only66172 = and i64 %18, 7
  %consp-test67 = icmp eq i64 %tag-only66172, 3
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116166.0 = select i1 %consp-test67, {}* %.val, {}* %.val210
  %19 = icmp eq {}* %G116166.0, %.val210
  br i1 %19, label %tag21, label %tag23

tag10:                                            ; preds = %tag41
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest68 unwind label %cleanup-lpad.loopexit

tag11:                                            ; preds = %tag41
  %22 = add i64 %48, -3
  %23 = inttoptr i64 %22 to {}**
  %24 = load {}*, {}** %23, align 8
  br label %tag28

tag15:                                            ; preds = %normal-dest83, %tag23
  %25 = phi {}* [ %.val210, %tag23 ], [ %63, %normal-dest83 ]
  %A.0 = phi {}* [ %33, %tag23 ], [ %A.1, %normal-dest83 ]
  %26 = icmp eq {}* %25, %farg1
  br i1 %26, label %tag2, label %tag41.preheader

tag41.preheader:                                  ; preds = %tag15
  br label %tag41

tag21:                                            ; preds = %tag6
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest76 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag22:                                            ; preds = %tag
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest90 unwind label %cleanup-lpad.loopexit

tag23:                                            ; preds = %tag6
  %31 = add i64 %18, -3
  %32 = inttoptr i64 %31 to {}**
  %33 = load {}*, {}** %32, align 8
  br label %tag15

tag12.backedge:                                   ; preds = %normal-dest142, %tag34
  %34 = phi {}* [ %.val216, %tag34 ], [ %83, %normal-dest142 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %45, %tag34 ], [ %"%DOLIST-VAR.1", %normal-dest142 ]
  %35 = icmp eq {}* %"%DOLIST-VAR.0.be", %34
  br i1 %35, label %tag5, label %tag6

tag28:                                            ; preds = %normal-dest71, %tag11
  %B.0 = phi {}* [ %24, %tag11 ], [ %B.1, %normal-dest71 ]
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest104 unwind label %cleanup-lpad.loopexit

tag29:                                            ; preds = %tag35
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest135 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag30:                                            ; preds = %normal-dest125
  %40 = add i64 %48, 5
  %41 = inttoptr i64 %40 to {}**
  %42 = load {}*, {}** %41, align 8
  br label %tag17.backedge

tag34:                                            ; preds = %tag2
  %43 = add i64 %18, 5
  %44 = inttoptr i64 %43 to {}**
  %45 = load {}*, {}** %44, align 8
  br label %tag12.backedge

tag35:                                            ; preds = %tag2
  %46 = icmp eq {}* %"%DOLIST-VAR.0227", %.val216
  %.val215 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116096.0 = select i1 %46, {}* %.val215, {}* %.val216
  %47 = icmp eq {}* %G116096.0, %.val216
  br i1 %47, label %tag29, label %tag5

tag41:                                            ; preds = %tag41.preheader, %tag17.backedge
  %.val212 = phi {}* [ %70, %tag17.backedge ], [ %25, %tag41.preheader ]
  %"%DOLIST-VAR74.0225" = phi {}* [ %"%DOLIST-VAR74.0.be", %tag17.backedge ], [ %farg1, %tag41.preheader ]
  %ERG.1224 = phi {}* [ %ERG.2, %tag17.backedge ], [ %ERG.0228, %tag41.preheader ]
  %48 = ptrtoint {}* %"%DOLIST-VAR74.0225" to i64
  %tag-only165173 = and i64 %48, 7
  %consp-test166 = icmp eq i64 %tag-only165173, 3
  %.val211 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116146.0 = select i1 %consp-test166, {}* %.val211, {}* %.val212
  %49 = icmp eq {}* %G116146.0, %.val212
  br i1 %49, label %tag10, label %tag11

cleanup-lpad.loopexit:                            ; preds = %tag10, %normal-dest68, %tag22, %normal-dest90, %tag28, %normal-dest104, %normal-dest106, %normal-dest113
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest135, %tag29, %normal-dest76, %tag21
  %lpad.loopexit217 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10
  %lpad.loopexit.split-lp218 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit217, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp218, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %51 = icmp eq {}* %50, %farg0
  br i1 %51, label %tag5, label %tag6.preheader

tag6.preheader:                                   ; preds = %normal-dest
  br label %tag6

normal-dest68:                                    ; preds = %tag10
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %53 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint = ptrtoint {}* %21 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %21, i64 5, {}* %52, {}* %53, {}* %"%DOLIST-VAR74.0225", {}* %54, {}* %55)
          to label %normal-dest71 unwind label %cleanup-lpad.loopexit

normal-dest71:                                    ; preds = %normal-dest68
  %.elt186 = extractvalue { {}*, i64 } %56, 0
  %.elt188 = extractvalue { {}*, i64 } %56, 1
  %cond169 = icmp eq i64 %.elt188, 0
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %B.1 = select i1 %cond169, {}* %57, {}* %.elt186
  br label %tag28

normal-dest76:                                    ; preds = %tag21
  %58 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %60 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %61 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint77 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint78 = add i64 %ptrtoint77, 7
  %entry-point-addr79 = inttoptr i64 %entry-point-addr-uint78 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point80 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr79, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point80({}* %28, i64 5, {}* %58, {}* %59, {}* %"%DOLIST-VAR.0227", {}* %60, {}* %61)
          to label %normal-dest83 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest83:                                    ; preds = %normal-dest76
  %.elt195 = extractvalue { {}*, i64 } %62, 0
  %.elt197 = extractvalue { {}*, i64 } %62, 1
  %cond171 = icmp eq i64 %.elt197, 0
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %A.1 = select i1 %cond171, {}* %63, {}* %.elt195
  br label %tag15

normal-dest90:                                    ; preds = %tag22
  %64 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %65 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %66 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %67 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint91 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint92 = add i64 %ptrtoint91, 7
  %entry-point-addr93 = inttoptr i64 %entry-point-addr-uint92 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point94 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr93, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point94({}* %30, i64 5, {}* %64, {}* %65, {}* %"%DOLIST-VAR74.0225", {}* %66, {}* %67)
          to label %normal-dest97 unwind label %cleanup-lpad.loopexit

normal-dest97:                                    ; preds = %normal-dest90
  %.elt182 = extractvalue { {}*, i64 } %68, 0
  %.elt184 = extractvalue { {}*, i64 } %68, 1
  %cond168 = icmp eq i64 %.elt184, 0
  %69 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %"%DOLIST-VAR74.1" = select i1 %cond168, {}* %69, {}* %.elt182
  br label %tag17.backedge

tag17.backedge:                                   ; preds = %normal-dest97, %tag30
  %70 = phi {}* [ %77, %tag30 ], [ %69, %normal-dest97 ]
  %"%DOLIST-VAR74.0.be" = phi {}* [ %42, %tag30 ], [ %"%DOLIST-VAR74.1", %normal-dest97 ]
  %71 = icmp eq {}* %"%DOLIST-VAR74.0.be", %70
  br i1 %71, label %tag2, label %tag41

normal-dest104:                                   ; preds = %tag28
  %72 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %73 = invoke {}* @cc_safe_fdefinition({}* %72)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit

normal-dest106:                                   ; preds = %normal-dest104
  %ptrtoint107 = ptrtoint {}* %73 to i64
  %entry-point-addr-uint108 = add i64 %ptrtoint107, 7
  %entry-point-addr109 = inttoptr i64 %entry-point-addr-uint108 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point110 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr109, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point110({}* %73, i64 2, {}* %A.0, {}* %B.0, {}* null, {}* null)
          to label %normal-dest113 unwind label %cleanup-lpad.loopexit

normal-dest113:                                   ; preds = %normal-dest106
  %.elt = extractvalue { {}*, i64 } %74, 0
  %.elt175 = extractvalue { {}*, i64 } %74, 1
  %cond = icmp eq i64 %.elt175, 0
  %75 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116123.0 = select i1 %cond, {}* %75, {}* %.elt
  %ptrtoint119 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint120 = add i64 %ptrtoint119, 7
  %entry-point-addr121 = inttoptr i64 %entry-point-addr-uint120 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point122 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr121, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point122({}* %37, i64 2, {}* %G116123.0, {}* %ERG.1224, {}* null, {}* null)
          to label %normal-dest125 unwind label %cleanup-lpad.loopexit

normal-dest125:                                   ; preds = %normal-dest113
  %.elt177 = extractvalue { {}*, i64 } %76, 0
  %.elt179 = extractvalue { {}*, i64 } %76, 1
  %cond167 = icmp eq i64 %.elt179, 0
  %77 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ERG.2 = select i1 %cond167, {}* %77, {}* %.elt177
  br i1 %consp-test166, label %tag30, label %tag

normal-dest135:                                   ; preds = %tag29
  %78 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %80 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %81 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint136 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint137 = add i64 %ptrtoint136, 7
  %entry-point-addr138 = inttoptr i64 %entry-point-addr-uint137 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point139 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr138, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point139({}* %39, i64 5, {}* %78, {}* %79, {}* %"%DOLIST-VAR.0227", {}* %80, {}* %81)
          to label %normal-dest142 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest142:                                   ; preds = %normal-dest135
  %.elt191 = extractvalue { {}*, i64 } %82, 0
  %.elt193 = extractvalue { {}*, i64 } %82, 1
  %cond170 = icmp eq i64 %.elt193, 0
  %83 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %"%DOLIST-VAR.1" = select i1 %cond170, {}* %83, {}* %.elt191
  br label %tag12.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^232^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !67 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^232^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br86
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest80, %normal-dest17, %header-check-br
  %G116199.0 = phi {}* [ %18, %header-check-br ], [ %G116199.1, %normal-dest17 ], [ %G116199.2, %normal-dest80 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 424), align 16
  %ptrtoint20 = ptrtoint {}* %G116199.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G116199.0, i64 2, {}* %"closure->KLH=N-FILTER", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest73, %maybe-more-tests94, %normal-dest58, %normal-dest52, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 424), align 16
  %"closure->KLH=N-FILTER" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=N-FILTER^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=N-FILTER^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7564, i64 232, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br86

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 423), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt97 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt97, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116199.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 426), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->KLH=N-FILTER", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 429), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->KLH=N-FILTER", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 430), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest58 unwind label %cleanup-lpad

normal-dest58:                                    ; preds = %normal-dest52
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 424), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 432), align 16
  %ptrtoint59 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %36, i64 3, {}* %37, {}* %38, {}* %39, {}* null)
          to label %normal-dest65 unwind label %cleanup-lpad

normal-dest65:                                    ; preds = %normal-dest58
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %41, {}* inttoptr (i64 928 to {}*))
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 424), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %43 = insertvalue { {}*, i64 } undef, {}* %42, 0
  %44 = insertvalue { {}*, i64 } %43, i64 1, 1
  ret { {}*, i64 } %44

normal-dest73:                                    ; preds = %maybe-more-tests94
  %ptrtoint74 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %49, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest73
  %.elt118 = extractvalue { {}*, i64 } %45, 0
  %.elt120 = extractvalue { {}*, i64 } %45, 1
  %cond95 = icmp eq i64 %.elt120, 0
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116199.2 = select i1 %cond95, {}* %46, {}* %.elt118
  br label %tag2

header-check-br86:                                ; preds = %header-check-br
  %.off123 = add i64 %19, -1001
  %47 = icmp ult i64 %.off123, 5
  br i1 %47, label %maybe-more-tests94, label %tag

maybe-more-tests94:                               ; preds = %header-check-br86
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest73 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=N-FILTER^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !68 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=N-FILTER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=N-FILTER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc542 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc542:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %tag3
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest124 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag1:                                             ; preds = %tag5, %tag107, %tag101, %header-check-br209, %header-check-br184, %tag18
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 322), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest131 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag2:                                             ; preds = %normal-dest
  %test = icmp eq i64 %tag-only475, 1
  br i1 %test, label %header-check-br, label %tag53

tag3:                                             ; preds = %tag95
  %18 = icmp eq {}* %G2095854.0, %.val560
  %G116353.0 = select i1 %18, {}* %.val557, {}* %.val560
  %19 = icmp eq {}* %G116353.0, %.val560
  br i1 %19, label %tag, label %tag56

tag5:                                             ; preds = %tag56
  %trunc = trunc i64 %49 to i3
  switch i3 %trunc, label %tag1 [
    i3 -2, label %tag101
    i3 1, label %header-check-br209
  ]

tag7:                                             ; preds = %normal-dest458
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag11

tag9:                                             ; preds = %tag82
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest156 unwind label %cleanup-lpad.loopexit

tag11:                                            ; preds = %tag87, %normal-dest405, %tag105, %tag98, %tag24, %tag7
  %object.0 = phi {}* [ %20, %tag7 ], [ %29, %tag24 ], [ %87, %tag98 ], [ %94, %tag105 ], [ %object.1, %normal-dest405 ], [ %.593, %tag87 ]
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %24 = icmp eq {}* %object.0, %23
  %.val562 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116219.0 = select i1 %24, {}* %.val562, {}* %23
  %25 = icmp eq {}* %G116219.0, %23
  br i1 %25, label %tag32, label %tag19

tag17:                                            ; preds = %tag88
  br i1 %61, label %tag113, label %tag97

tag18:                                            ; preds = %header-check-br209
  %ptrtoint185 = ptrtoint {}* %farg1 to i64
  %tag-only186 = and i64 %ptrtoint185, 7
  %test187 = icmp eq i64 %tag-only186, 1
  br i1 %test187, label %header-check-br184, label %tag1

tag19:                                            ; preds = %tag11
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit

tag22:                                            ; preds = %header-check-br184
  %28 = invoke double @from_object_double({}* nonnull %x216.0)
          to label %normal-dest206 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag24:                                            ; preds = %normal-dest458
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag11

tag25:                                            ; preds = %tag62
  %30 = load {}*, {}** %52, align 8
  %.val558.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag95

tag26:                                            ; preds = %tag107
  %31 = icmp sgt {}* %x216.0, %farg1
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %. = select i1 %31, {}* %48, {}* %32
  br label %tag51

tag28:                                            ; preds = %tag29
  %33 = add i64 %105, 7
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %"tag fixnum" = shl nuw i64 %35, 2
  %36 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag56

tag29:                                            ; preds = %header-check-br, %normal-dest231, %tag53
  %.val571 = phi {}* [ %.pre, %tag53 ], [ %124, %normal-dest231 ], [ %.val554, %header-check-br ]
  %G116345.0.in = phi {}** [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), %tag53 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %normal-dest231 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %header-check-br ]
  %G116345.0 = load {}*, {}** %G116345.0.in, align 8
  %37 = icmp eq {}* %G116345.0, %.val571
  br i1 %37, label %tag79, label %tag28

tag32:                                            ; preds = %tag11, %tag51
  %ERG.0.sink = phi {}* [ %farg0, %tag51 ], [ %ERG.0, %tag11 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %38 = insertvalue { {}*, i64 } undef, {}* %ERG.0.sink, 0
  %39 = insertvalue { {}*, i64 } %38, i64 1, 1
  ret { {}*, i64 } %39

tag47:                                            ; preds = %normal-dest288
  %40 = icmp eq {}* %LAUF.0, %135
  %.val566 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116281.0 = select i1 %40, {}* %.val566, {}* %135
  %41 = icmp eq {}* %G116281.0, %135
  br i1 %41, label %tag68, label %tag89

tag50:                                            ; preds = %tag91
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest244 unwind label %cleanup-lpad.loopexit

tag51:                                            ; preds = %tag26, %normal-dest138, %tag112, %tag96, %tag84, %tag67
  %G116313.0 = phi {}* [ %84, %tag96 ], [ %97, %tag112 ], [ %76, %tag84 ], [ %62, %tag67 ], [ %G116313.1, %normal-dest138 ], [ %., %tag26 ]
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %45 = icmp eq {}* %G116313.0, %44
  br i1 %45, label %tag66, label %tag32

tag52:                                            ; preds = %tag79
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest258 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag53:                                            ; preds = %tag2, %header-check-br448, %normal-dest231
  %.pre = phi {}* [ %.val554, %tag2 ], [ %.val554, %header-check-br448 ], [ %124, %normal-dest231 ]
  br label %tag29

tag56:                                            ; preds = %tag3, %normal-dest265, %tag79, %tag28
  %48 = phi {}* [ %.val571, %tag28 ], [ %.val571, %tag79 ], [ %134, %normal-dest265 ], [ %.val560, %tag3 ]
  %x216.0 = phi {}* [ %36, %tag28 ], [ null, %tag79 ], [ %x216.1, %normal-dest265 ], [ %LENGTH.0.ph, %tag3 ]
  %49 = ptrtoint {}* %x216.0 to i64
  %fixnum-tag-only274485 = and i64 %49, 3
  %fixnump-test275 = icmp eq i64 %fixnum-tag-only274485, 0
  br i1 %fixnump-test275, label %tag107, label %tag5

tag62.outer:                                      ; preds = %tag62.outer.backedge, %tag62.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag62.outer.preheader ], [ %LENGTH.0.ph.be, %tag62.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %farg0, %tag62.outer.preheader ], [ %G2095854.0, %tag62.outer.backedge ]
  %50 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only302476 = and i64 %50, 7
  %consp-test303 = icmp eq i64 %tag-only302476, 3
  %51 = add i64 %50, 5
  %52 = inttoptr i64 %51 to {}**
  br label %tag62

tag59:                                            ; preds = %tag62
  %53 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %54 = icmp eq {}* %SEQUENCE.0.ph, %53
  %.val555 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116394.0 = select i1 %54, {}* %.val555, {}* %53
  %55 = icmp eq {}* %G116394.0, %53
  br i1 %55, label %tag81, label %tag95

tag60:                                            ; preds = %tag91, %normal-dest251, %tag119
  %G116289.0 = phi {}* [ %104, %tag119 ], [ %G116289.1, %normal-dest251 ], [ %.val565, %tag91 ]
  %ptrtoint282 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint283 = add i64 %ptrtoint282, 7
  %entry-point-addr284 = inttoptr i64 %entry-point-addr-uint283 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point285 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr284, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point285({}* %27, i64 2, {}* %G116289.0, {}* %ERG.0, {}* null, {}* null)
          to label %normal-dest288 unwind label %cleanup-lpad.loopexit

tag62:                                            ; preds = %normal-dest124, %tag62.outer
  br i1 %consp-test303, label %tag25, label %tag59

tag64:                                            ; preds = %normal-dest288
  %57 = add i64 %117, 5
  %58 = inttoptr i64 %57 to {}**
  %59 = load {}*, {}** %58, align 8
  br label %tag89

tag66:                                            ; preds = %tag51
  %60 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only393521 = and i64 %60, 3
  %fixnump-test394 = icmp eq i64 %fixnum-tag-only393521, 0
  %single-float-tag-only183 = and i64 %60, 7
  %61 = icmp eq i64 %single-float-tag-only183, 6
  %test377 = icmp ne i64 %single-float-tag-only183, 1
  %irc-bit-cast378 = bitcast {}* %farg1 to i8*
  %gep379 = getelementptr inbounds i8, i8* %irc-bit-cast378, i64 -9
  %irc-bit-cast380 = bitcast i8* %gep379 to i64*
  br label %tag99

tag67:                                            ; preds = %normal-dest207
  %62 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag51

tag68:                                            ; preds = %tag47
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest305 unwind label %cleanup-lpad.loopexit

tag70:                                            ; preds = %tag89
  %65 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest319 unwind label %cleanup-lpad.loopexit

tag71:                                            ; preds = %tag118
  %67 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %101, i64 4)
  %result = extractvalue { i64, i1 } %67, 0
  %overflow = extractvalue { i64, i1 } %67, 1
  %68 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag100, label %tag62.outer.backedge

tag62.outer.backedge:                             ; preds = %tag71, %normal-dest423, %normal-dest343
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.1, %normal-dest343 ], [ %LENGTH.2, %normal-dest423 ], [ %68, %tag71 ]
  br label %tag62.outer

tag79:                                            ; preds = %tag29
  %69 = icmp eq {}* %.val571, %farg0
  %.val570 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116341.0 = select i1 %69, {}* %.val570, {}* %.val571
  %70 = icmp eq {}* %G116341.0, %.val571
  br i1 %70, label %tag52, label %tag56

tag80:                                            ; preds = %tag101
  %71 = invoke float @from_object_float({}* %x216.0)
          to label %normal-dest349 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag81:                                            ; preds = %tag59
  %72 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %73 = invoke {}* @cc_safe_fdefinition({}* %72)
          to label %normal-dest352 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag82:                                            ; preds = %tag89
  %74 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %89, i64 4)
  %result365 = extractvalue { i64, i1 } %74, 0
  %overflow366 = extractvalue { i64, i1 } %74, 1
  %75 = inttoptr i64 %result365 to {}*
  br i1 %overflow366, label %tag9, label %tag99.backedge

tag84:                                            ; preds = %normal-dest207
  %76 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag51

tag87:                                            ; preds = %tag93
  %77 = icmp eq {}* %INDEX.0, %farg1
  %78 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.593 = select i1 %77, {}* %78, {}* %88
  br label %tag11

tag88:                                            ; preds = %tag99
  %trunc561 = trunc i64 %89 to i3
  switch i3 %trunc561, label %tag97 [
    i3 -2, label %tag17
    i3 1, label %header-check-br430
  ]

tag89:                                            ; preds = %tag47, %normal-dest312, %tag64
  %79 = phi {}* [ %135, %tag64 ], [ %141, %normal-dest312 ], [ %135, %tag47 ]
  %G116177.0 = phi {}* [ %59, %tag64 ], [ %G116177.1, %normal-dest312 ], [ %135, %tag47 ]
  br i1 %fixnump-test414, label %tag82, label %tag70

tag91:                                            ; preds = %normal-dest192
  %80 = icmp eq {}* %LAUF.0, %.val565
  %G116300.0 = select i1 %80, {}* %.val564, {}* %.val565
  %81 = icmp eq {}* %G116300.0, %.val565
  br i1 %81, label %tag50, label %tag60

tag93:                                            ; preds = %tag99
  br i1 %fixnump-test394, label %tag87, label %tag97

tag95:                                            ; preds = %tag59, %normal-dest359, %tag25
  %.val560 = phi {}* [ %.val558.pre, %tag25 ], [ %153, %normal-dest359 ], [ %53, %tag59 ]
  %G2095854.0 = phi {}* [ %30, %tag25 ], [ %G2095854.1, %normal-dest359 ], [ %53, %tag59 ]
  %82 = ptrtoint {}* %G2095854.0 to i64
  %tag-only395477 = and i64 %82, 7
  %consp-test396 = icmp eq i64 %tag-only395477, 3
  %.val557 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116382.0 = select i1 %consp-test396, {}* %.val557, {}* %.val560
  %83 = icmp eq {}* %G116382.0, %.val560
  br i1 %83, label %tag3, label %tag118

tag96:                                            ; preds = %normal-dest350
  %84 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag51

tag97:                                            ; preds = %header-check-br430, %tag88, %tag93, %header-check-br374, %tag17
  %85 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 421), align 8
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest398 unwind label %cleanup-lpad.loopexit

tag98:                                            ; preds = %normal-dest438
  %87 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  br label %tag11

tag99:                                            ; preds = %tag99.backedge, %tag66
  %88 = phi {}* [ %G116313.0, %tag66 ], [ %.be, %tag99.backedge ]
  %LAUF.0 = phi {}* [ %farg0, %tag66 ], [ %G116177.0, %tag99.backedge ]
  %ERG.0 = phi {}* [ %G116313.0, %tag66 ], [ %ERG.1, %tag99.backedge ]
  %INDEX.0 = phi {}* [ null, %tag66 ], [ %INDEX.0.be, %tag99.backedge ]
  %89 = ptrtoint {}* %INDEX.0 to i64
  %fixnum-tag-only413493 = and i64 %89, 3
  %fixnump-test414 = icmp eq i64 %fixnum-tag-only413493, 0
  br i1 %fixnump-test414, label %tag93, label %tag88

tag100:                                           ; preds = %tag71
  %90 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest416 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag101:                                           ; preds = %tag5
  %92 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only429 = and i64 %92, 7
  %93 = icmp eq i64 %single-float-tag-only429, 6
  br i1 %93, label %tag80, label %tag1

tag105:                                           ; preds = %normal-dest438
  %94 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag11

tag106:                                           ; preds = %header-check-br374
  %95 = invoke double @from_object_double({}* nonnull %INDEX.0)
          to label %normal-dest437 unwind label %cleanup-lpad.loopexit

tag107:                                           ; preds = %tag56
  %96 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only439522 = and i64 %96, 3
  %fixnump-test440 = icmp eq i64 %fixnum-tag-only439522, 0
  br i1 %fixnump-test440, label %tag26, label %tag1

tag112:                                           ; preds = %normal-dest350
  %97 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag51

tag113:                                           ; preds = %tag17
  %98 = invoke float @from_object_float({}* %INDEX.0)
          to label %normal-dest457 unwind label %cleanup-lpad.loopexit

tag114:                                           ; preds = %tag118
  %99 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %100 = invoke {}* @cc_safe_fdefinition({}* %99)
          to label %normal-dest336 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag118:                                           ; preds = %tag95
  %101 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only462478 = and i64 %101, 3
  %fixnump-test463 = icmp eq i64 %fixnum-tag-only462478, 0
  br i1 %fixnump-test463, label %tag71, label %tag114

tag119:                                           ; preds = %normal-dest192
  %102 = add i64 %117, -3
  %103 = inttoptr i64 %102 to {}**
  %104 = load {}*, {}** %103, align 8
  br label %tag60

cleanup-lpad.loopexit:                            ; preds = %tag9, %normal-dest156, %tag19, %tag50, %normal-dest244, %tag60, %tag68, %normal-dest305, %tag70, %normal-dest319, %tag97, %normal-dest398, %tag106, %normal-dest437, %tag113, %normal-dest457
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag, %normal-dest124, %tag81, %normal-dest352
  %lpad.loopexit576 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag114, %normal-dest336, %tag100, %normal-dest416
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10, %normal-dest349, %tag80, %normal-dest258, %tag52, %normal-dest224, %maybe-more-tests456, %normal-dest206, %tag22, %normal-dest131, %tag1
  %lpad.loopexit.split-lp574 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp574, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit576, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %105 = ptrtoint {}* %farg0 to i64
  %tag-only475 = and i64 %105, 7
  %consp-test = icmp eq i64 %tag-only475, 3
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val554 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116401.0 = select i1 %consp-test, {}* %.val, {}* %.val554
  %106 = icmp eq {}* %G116401.0, %.val554
  br i1 %106, label %tag2, label %tag62.outer.preheader

tag62.outer.preheader:                            ; preds = %normal-dest
  br label %tag62.outer

normal-dest124:                                   ; preds = %tag
  %107 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 420), align 16
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %G2095854.0, {}* %107, {}* null, {}* null)
          to label %tag62 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest131:                                   ; preds = %tag1
  %ptrtoint132 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint133 = add i64 %ptrtoint132, 7
  %entry-point-addr134 = inttoptr i64 %entry-point-addr-uint133 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point135 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr134, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point135({}* %17, i64 2, {}* %x216.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest138:                                   ; preds = %normal-dest131
  %.elt487 = extractvalue { {}*, i64 } %109, 0
  %.elt489 = extractvalue { {}*, i64 } %109, 1
  %cond465 = icmp eq i64 %.elt489, 0
  %110 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116313.1 = select i1 %cond465, {}* %110, {}* %.elt487
  br label %tag51

header-check-br:                                  ; preds = %tag2
  %irc-bit-cast145 = bitcast {}* %farg0 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast145, i64 -9
  %irc-bit-cast146 = bitcast i8* %gep to i64*
  %111 = load i64, i64* %irc-bit-cast146, align 8
  %.off = add i64 %111, -1081
  %112 = icmp ult i64 %.off, 69
  br i1 %112, label %tag29, label %header-check-br448

normal-dest156:                                   ; preds = %tag9
  %ptrtoint157 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint158 = add i64 %ptrtoint157, 7
  %entry-point-addr159 = inttoptr i64 %entry-point-addr-uint158 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point160 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr159, align 8
  %113 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point160({}* %22, i64 1, {}* %75, {}* null, {}* null, {}* null)
          to label %normal-dest163 unwind label %cleanup-lpad.loopexit

normal-dest163:                                   ; preds = %normal-dest156
  %.elt510 = extractvalue { {}*, i64 } %113, 0
  %.elt512 = extractvalue { {}*, i64 } %113, 1
  %cond469 = icmp eq i64 %.elt512, 0
  %114 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116178.1 = select i1 %cond469, {}* %114, {}* %.elt510
  br label %tag99.backedge

header-check-br184:                               ; preds = %tag18
  %irc-bit-cast188 = bitcast {}* %farg1 to i8*
  %gep189 = getelementptr inbounds i8, i8* %irc-bit-cast188, i64 -9
  %irc-bit-cast190 = bitcast i8* %gep189 to i64*
  %115 = load i64, i64* %irc-bit-cast190, align 8
  %116 = icmp eq i64 %115, 1325
  br i1 %116, label %tag22, label %tag1

normal-dest192:                                   ; preds = %tag19
  %117 = ptrtoint {}* %LAUF.0 to i64
  %tag-only198498 = and i64 %117, 7
  %consp-test199 = icmp eq i64 %tag-only198498, 3
  %.val564 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val565 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116307.0 = select i1 %consp-test199, {}* %.val564, {}* %.val565
  %118 = icmp eq {}* %G116307.0, %.val565
  br i1 %118, label %tag91, label %tag119

normal-dest206:                                   ; preds = %tag22
  %119 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest207:                                   ; preds = %normal-dest206
  %120 = fcmp ugt double %28, %119
  br i1 %120, label %tag67, label %tag84

header-check-br209:                               ; preds = %tag5
  %irc-bit-cast213 = bitcast {}* %x216.0 to i8*
  %gep214 = getelementptr inbounds i8, i8* %irc-bit-cast213, i64 -9
  %irc-bit-cast215 = bitcast i8* %gep214 to i64*
  %121 = load i64, i64* %irc-bit-cast215, align 8
  %122 = icmp eq i64 %121, 1325
  br i1 %122, label %tag18, label %tag1

normal-dest224:                                   ; preds = %maybe-more-tests456
  %ptrtoint225 = ptrtoint {}* %166 to i64
  %entry-point-addr-uint226 = add i64 %ptrtoint225, 7
  %entry-point-addr227 = inttoptr i64 %entry-point-addr-uint226 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point228 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr227, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point228({}* %166, i64 1, {}* nonnull %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest231 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest231:                                   ; preds = %normal-dest224
  %.elt536 = extractvalue { {}*, i64 } %123, 0
  %.elt538 = extractvalue { {}*, i64 } %123, 1
  %cond474 = icmp eq i64 %.elt538, 0
  %124 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116405.0 = select i1 %cond474, {}* %124, {}* %.elt536
  %125 = icmp eq {}* %G116405.0, inttoptr (i64 4 to {}*)
  br i1 %125, label %tag29, label %tag53

normal-dest244:                                   ; preds = %tag50
  %126 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %127 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %128 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %129 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint245 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint246 = add i64 %ptrtoint245, 7
  %entry-point-addr247 = inttoptr i64 %entry-point-addr-uint246 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point248 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr247, align 8
  %130 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point248({}* %43, i64 5, {}* %126, {}* %127, {}* %LAUF.0, {}* %128, {}* %129)
          to label %normal-dest251 unwind label %cleanup-lpad.loopexit

normal-dest251:                                   ; preds = %normal-dest244
  %.elt518 = extractvalue { {}*, i64 } %130, 0
  %.elt520 = extractvalue { {}*, i64 } %130, 1
  %cond471 = icmp eq i64 %.elt520, 0
  %131 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116289.1 = select i1 %cond471, {}* %131, {}* %.elt518
  br label %tag60

normal-dest258:                                   ; preds = %tag52
  %132 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 419), align 8
  %ptrtoint259 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint260 = add i64 %ptrtoint259, 7
  %entry-point-addr261 = inttoptr i64 %entry-point-addr-uint260 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point262 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr261, align 8
  %133 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point262({}* %47, i64 2, {}* %farg0, {}* %132, {}* null, {}* null)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest265:                                   ; preds = %normal-dest258
  %.elt532 = extractvalue { {}*, i64 } %133, 0
  %.elt534 = extractvalue { {}*, i64 } %133, 1
  %cond473 = icmp eq i64 %.elt534, 0
  %134 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %x216.1 = select i1 %cond473, {}* %134, {}* %.elt532
  br label %tag56

normal-dest288:                                   ; preds = %tag60
  %.elt500 = extractvalue { {}*, i64 } %56, 0
  %.elt502 = extractvalue { {}*, i64 } %56, 1
  %cond467 = icmp eq i64 %.elt502, 0
  %135 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ERG.1 = select i1 %cond467, {}* %135, {}* %.elt500
  br i1 %consp-test199, label %tag64, label %tag47

normal-dest305:                                   ; preds = %tag68
  %136 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %137 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %138 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %139 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint306 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint307 = add i64 %ptrtoint306, 7
  %entry-point-addr308 = inttoptr i64 %entry-point-addr-uint307 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point309 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr308, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point309({}* %64, i64 5, {}* %136, {}* %137, {}* %LAUF.0, {}* %138, {}* %139)
          to label %normal-dest312 unwind label %cleanup-lpad.loopexit

normal-dest312:                                   ; preds = %normal-dest305
  %.elt514 = extractvalue { {}*, i64 } %140, 0
  %.elt516 = extractvalue { {}*, i64 } %140, 1
  %cond470 = icmp eq i64 %.elt516, 0
  %141 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116177.1 = select i1 %cond470, {}* %141, {}* %.elt514
  br label %tag89

normal-dest319:                                   ; preds = %tag70
  %ptrtoint320 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint321 = add i64 %ptrtoint320, 7
  %entry-point-addr322 = inttoptr i64 %entry-point-addr-uint321 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point323 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr322, align 8
  %142 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point323({}* %66, i64 2, {}* %INDEX.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest326 unwind label %cleanup-lpad.loopexit

normal-dest326:                                   ; preds = %normal-dest319
  %.elt506 = extractvalue { {}*, i64 } %142, 0
  %.elt508 = extractvalue { {}*, i64 } %142, 1
  %cond468 = icmp eq i64 %.elt508, 0
  %143 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116178.2 = select i1 %cond468, {}* %143, {}* %.elt506
  br label %tag99.backedge

tag99.backedge:                                   ; preds = %normal-dest326, %normal-dest163, %tag82
  %.be = phi {}* [ %79, %tag82 ], [ %114, %normal-dest163 ], [ %143, %normal-dest326 ]
  %INDEX.0.be = phi {}* [ %75, %tag82 ], [ %G116178.1, %normal-dest163 ], [ %G116178.2, %normal-dest326 ]
  br label %tag99

normal-dest336:                                   ; preds = %tag114
  %ptrtoint337 = ptrtoint {}* %100 to i64
  %entry-point-addr-uint338 = add i64 %ptrtoint337, 7
  %entry-point-addr339 = inttoptr i64 %entry-point-addr-uint338 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point340 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr339, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point340({}* %100, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest343 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest343:                                   ; preds = %normal-dest336
  %.elt = extractvalue { {}*, i64 } %144, 0
  %.elt480 = extractvalue { {}*, i64 } %144, 1
  %cond = icmp eq i64 %.elt480, 0
  %145 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond, {}* %145, {}* %.elt
  br label %tag62.outer.backedge

normal-dest349:                                   ; preds = %tag80
  %146 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest350 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest350:                                   ; preds = %normal-dest349
  %147 = fcmp ugt float %71, %146
  br i1 %147, label %tag112, label %tag96

normal-dest352:                                   ; preds = %tag81
  %148 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %149 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %150 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %151 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint353 = ptrtoint {}* %73 to i64
  %entry-point-addr-uint354 = add i64 %ptrtoint353, 7
  %entry-point-addr355 = inttoptr i64 %entry-point-addr-uint354 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point356 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr355, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point356({}* %73, i64 5, {}* %148, {}* %149, {}* %SEQUENCE.0.ph, {}* %150, {}* %151)
          to label %normal-dest359 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest359:                                   ; preds = %normal-dest352
  %.elt528 = extractvalue { {}*, i64 } %152, 0
  %.elt530 = extractvalue { {}*, i64 } %152, 1
  %cond472 = icmp eq i64 %.elt530, 0
  %153 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond472, {}* %153, {}* %.elt528
  br label %tag95

header-check-br374:                               ; preds = %header-check-br430
  %154 = load i64, i64* %irc-bit-cast380, align 8
  %155 = icmp eq i64 %154, 1325
  br i1 %155, label %tag106, label %tag97

normal-dest398:                                   ; preds = %tag97
  %ptrtoint399 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint400 = add i64 %ptrtoint399, 7
  %entry-point-addr401 = inttoptr i64 %entry-point-addr-uint400 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point402 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr401, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point402({}* %86, i64 2, {}* %INDEX.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest405 unwind label %cleanup-lpad.loopexit

normal-dest405:                                   ; preds = %normal-dest398
  %.elt495 = extractvalue { {}*, i64 } %156, 0
  %.elt497 = extractvalue { {}*, i64 } %156, 1
  %cond466 = icmp eq i64 %.elt497, 0
  %157 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %object.1 = select i1 %cond466, {}* %157, {}* %.elt495
  br label %tag11

normal-dest416:                                   ; preds = %tag100
  %ptrtoint417 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint418 = add i64 %ptrtoint417, 7
  %entry-point-addr419 = inttoptr i64 %entry-point-addr-uint418 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point420 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr419, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point420({}* %91, i64 1, {}* %68, {}* null, {}* null, {}* null)
          to label %normal-dest423 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest423:                                   ; preds = %normal-dest416
  %.elt482 = extractvalue { {}*, i64 } %158, 0
  %.elt484 = extractvalue { {}*, i64 } %158, 1
  %cond464 = icmp eq i64 %.elt484, 0
  %159 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond464, {}* %159, {}* %.elt482
  br label %tag62.outer.backedge

header-check-br430:                               ; preds = %tag88
  %irc-bit-cast434 = bitcast {}* %INDEX.0 to i8*
  %gep435 = getelementptr inbounds i8, i8* %irc-bit-cast434, i64 -9
  %irc-bit-cast436 = bitcast i8* %gep435 to i64*
  %160 = load i64, i64* %irc-bit-cast436, align 8
  %161 = icmp ne i64 %160, 1325
  %brmerge = or i1 %test377, %161
  br i1 %brmerge, label %tag97, label %header-check-br374

normal-dest437:                                   ; preds = %tag106
  %162 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest438 unwind label %cleanup-lpad.loopexit

normal-dest438:                                   ; preds = %normal-dest437
  %163 = fcmp oeq double %95, %162
  br i1 %163, label %tag98, label %tag105

header-check-br448:                               ; preds = %header-check-br
  %.off572 = add i64 %111, -1153
  %164 = icmp ult i64 %.off572, 149
  br i1 %164, label %maybe-more-tests456, label %tag53

maybe-more-tests456:                              ; preds = %header-check-br448
  %165 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 338), align 16
  %166 = invoke {}* @cc_safe_fdefinition({}* %165)
          to label %normal-dest224 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest457:                                   ; preds = %tag113
  %167 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest458 unwind label %cleanup-lpad.loopexit

normal-dest458:                                   ; preds = %normal-dest457
  %168 = fcmp oeq float %98, %167
  br i1 %168, label %tag7, label %tag24
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^245^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !69 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^245^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G116429.0 = phi {}* [ %18, %header-check-br ], [ %G116429.1, %normal-dest26 ], [ %G116429.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 443), align 8
  %ptrtoint29 = ptrtoint {}* %G116429.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G116429.0, i64 2, {}* %"closure->KLH=LESE_LISP_AUS_STRING", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 443), align 8
  %"closure->KLH=LESE_LISP_AUS_STRING" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7843, i64 245, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 442), align 16
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116429.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 445), align 8
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->KLH=LESE_LISP_AUS_STRING", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 446), align 16
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->KLH=LESE_LISP_AUS_STRING", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 980 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 443), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116429.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !70 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc52 unwind label %cleanup-lpad

.noexc52:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 436), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest14 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %normal-dest35
  %return-value.sroa.7.0 = phi i64 [ %.elt51, %normal-dest35 ], [ 1, %normal-dest10 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt49, %normal-dest35 ], [ %19, %normal-dest10 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %14 = insertvalue { {}*, i64 } %13, i64 %return-value.sroa.7.0, 1
  ret { {}*, i64 } %14

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest23, %normal-dest16, %normal-dest14, %tag, %normal-dest7, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 434), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %18 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %18, 0
  %.elt40 = extractvalue { {}*, i64 } %18, 1
  %cond = icmp eq i64 %.elt40, 0
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116456.0 = select i1 %cond, {}* %19, {}* %.elt
  %20 = icmp eq {}* %G116456.0, %19
  br i1 %20, label %tag, label %tag1

normal-dest14:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 438), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest14
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 440), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 441), align 8
  %ptrtoint17 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %22, i64 3, {}* %23, {}* %farg0, {}* %24, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt45 = extractvalue { {}*, i64 } %25, 0
  %.elt47 = extractvalue { {}*, i64 } %25, 1
  %cond38 = icmp eq i64 %.elt47, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116448.0 = select i1 %cond38, {}* %26, {}* %.elt45
  %ptrtoint29 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %12, i64 1, {}* %G116448.0, {}* null, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest23
  %.elt49 = extractvalue { {}*, i64 } %27, 0
  %.elt51 = extractvalue { {}*, i64 } %27, 1
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"klh=funktionen.lisp^253^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !71 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"klh=funktionen.lisp^253^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G116795.0 = phi {}* [ %18, %header-check-br ], [ %G116795.1, %normal-dest63 ], [ %G116795.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 605), align 8
  %ptrtoint13 = ptrtoint {}* %G116795.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G116795.0, i64 2, {}* %"closure->KLH=TABELLE-AUSGEBEN_2", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag3, %normal-dest56, %maybe-more-tests54, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 605), align 8
  %"closure->KLH=TABELLE-AUSGEBEN_2" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 31), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 38), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 607), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->KLH=TABELLE-AUSGEBEN_2", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 53), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 644), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->KLH=TABELLE-AUSGEBEN_2", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 58), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1012 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 605), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag3

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %maybe-more-tests54
  %ptrtoint57 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116795.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag

normal-dest69:                                    ; preds = %tag3
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 604), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116795.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !72 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 4
  br i1 %enough-args, label %error, label %continue

tag2:                                             ; preds = %normal-dest6824
  %9 = icmp eq {}* %stream.0, %.val10287
  %G119232.0 = select i1 %9, {}* %1987, {}* %.val10287
  %10 = icmp eq {}* %G119232.0, %.val10287
  br i1 %10, label %tag349, label %tag112

tag4:                                             ; preds = %normal-dest4202
  %ptrtoint952 = ptrtoint {}* %"closure->LAMBDA7659" to i64
  %tag-only = and i64 %ptrtoint952, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag280

tag13:                                            ; preds = %tag733, %header-check-br5630
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest999 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag14:                                            ; preds = %header-check-br7959, %normal-dest5906, %normal-dest2162
  %G117588.0 = phi {}* [ %G117588.1, %normal-dest2162 ], [ %G117588.2, %normal-dest5906 ], [ %vaarg906, %header-check-br7959 ]
  %ptrtoint1012 = ptrtoint {}* %G117588.0 to i64
  %entry-point-addr-uint1013 = add i64 %ptrtoint1012, 7
  %entry-point-addr1014 = inttoptr i64 %entry-point-addr-uint1013 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1015 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1014, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1015({}* %G117588.0, i64 3, {}* %vaarg, {}* %Y_ELEMENT.0, {}* %X_ELEMENT.0, {}* null)
          to label %tag33 unwind label %cleanup-lpad.loopexit

tag19:                                            ; preds = %header-check-br7599, %normal-dest3488, %normal-dest3358
  %G117300.0 = phi {}* [ %G117300.1, %normal-dest3358 ], [ %G117300.2, %normal-dest3488 ], [ %"closure->LAMBDA3566", %header-check-br7599 ]
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest1041 unwind label %cleanup-lpad.loopexit

tag21:                                            ; preds = %normal-dest2677, %normal-dest7721, %normal-dest6290, %normal-dest3076
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %17 = icmp eq {}* %X_TEILLISTE.0, %16
  br i1 %17, label %tag259, label %tag236.preheader

tag236.preheader:                                 ; preds = %tag21
  br label %tag236

tag25:                                            ; preds = %tag580
  %18 = load {}*, {}** %588, align 8
  %.val10293.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag102

tag26:                                            ; preds = %tag119, %header-check-br955
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest1064 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag31:                                            ; preds = %tag241
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest1079 unwind label %cleanup-lpad.loopexit

tag32:                                            ; preds = %normal-dest3545
  %ptrtoint1095 = ptrtoint {}* %"closure->LAMBDA2636" to i64
  %tag-only1096 = and i64 %ptrtoint1095, 7
  %test1097 = icmp eq i64 %tag-only1096, 1
  br i1 %test1097, label %header-check-br1094, label %tag563

tag33:                                            ; preds = %tag14, %normal-dest2442
  %.sink10277 = phi { {}*, i64 } [ %998, %normal-dest2442 ], [ %13, %tag14 ]
  %.elt8656 = extractvalue { {}*, i64 } %.sink10277, 0
  %.elt8658 = extractvalue { {}*, i64 } %.sink10277, 1
  %cond8046 = icmp eq i64 %.elt8658, 0
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116682.2 = select i1 %cond8046, {}* %23, {}* %.elt8656
  %24 = icmp eq {}* %G116682.2, %23
  br i1 %24, label %tag762, label %tag829

tag34:                                            ; preds = %tag138, %normal-dest6305, %normal-dest6210, %tag392
  br i1 %consp-test4977, label %tag263, label %tag402

tag38:                                            ; preds = %tag797
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest1122 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag45:                                            ; preds = %tag63
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest1153 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag52:                                            ; preds = %tag504
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest1176 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag53:                                            ; preds = %tag124
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest1199 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag55:                                            ; preds = %header-check-br6518, %normal-dest6134, %normal-dest1006
  %G117061.0 = phi {}* [ %G117061.1, %normal-dest1006 ], [ %G117061.2, %normal-dest6134 ], [ %"closure->LAMBDA2636", %header-check-br6518 ]
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %34 = invoke {}* @cc_safe_symbol_value({}* %33)
          to label %normal-dest1212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag56:                                            ; preds = %normal-dest5774
  %ptrtoint1225 = ptrtoint {}* %"closure->LAMBDA5775" to i64
  %tag-only1226 = and i64 %ptrtoint1225, 7
  %test1227 = icmp eq i64 %tag-only1226, 1
  br i1 %test1227, label %header-check-br1224, label %tag620

tag57:                                            ; preds = %normal-dest2468
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest1234 unwind label %cleanup-lpad.loopexit

tag58:                                            ; preds = %normal-dest7764
  %ptrtoint1257 = ptrtoint {}* %"closure->LAMBDA7765" to i64
  %tag-only1258 = and i64 %ptrtoint1257, 7
  %test1259 = icmp eq i64 %tag-only1258, 1
  br i1 %test1259, label %header-check-br1256, label %tag83

tag59:                                            ; preds = %normal-dest2635
  %37 = icmp eq {}* %stream.0, %.val10420
  %G117055.0 = select i1 %37, {}* %1028, {}* %.val10420
  %38 = icmp eq {}* %G117055.0, %.val10420
  br i1 %38, label %tag379, label %tag178

tag61:                                            ; preds = %header-check-br6071, %header-check-br6071, %header-check-br6071, %header-check-br6071
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 566), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest1272 unwind label %cleanup-lpad.loopexit

tag63:                                            ; preds = %tag580
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %42 = icmp eq {}* %SEQUENCE.0.ph, %41
  %.val10290 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G119043.0 = select i1 %42, {}* %.val10290, {}* %41
  %43 = icmp eq {}* %G119043.0, %41
  br i1 %43, label %tag45, label %tag102

tag68:                                            ; preds = %normal-dest5774
  %44 = icmp eq {}* %stream.0, %.val10301
  %G118876.0 = select i1 %44, {}* %1740, {}* %.val10301
  %45 = icmp eq {}* %G118876.0, %.val10301
  br i1 %45, label %tag696, label %tag70

tag69:                                            ; preds = %tag826
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest1325 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag70:                                            ; preds = %tag68
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest1340 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag71:                                            ; preds = %normal-dest2737, %header-check-br4655
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest1363 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag72:                                            ; preds = %normal-dest5982, %header-check-br1309
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest1377 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag76:                                            ; preds = %normal-dest7484, %header-check-br1135
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest1398 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag78:                                            ; preds = %normal-dest7904, %normal-dest4986, %header-check-br1094
  %G117000.0 = phi {}* [ %"closure->LAMBDA2636", %header-check-br1094 ], [ %G117000.1, %normal-dest4986 ], [ %G117000.2, %normal-dest7904 ]
  %ptrtoint1411 = ptrtoint {}* %G117000.0 to i64
  %entry-point-addr-uint1412 = add i64 %ptrtoint1411, 7
  %entry-point-addr1413 = inttoptr i64 %entry-point-addr-uint1412 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1414 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1413, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1414({}* %G117000.0, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %tag442 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag81:                                            ; preds = %tag859
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %58 = icmp eq {}* %"%DOLIST-VAR.010563", %57
  %.val10325 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G118047.0 = select i1 %58, {}* %.val10325, {}* %57
  %59 = icmp eq {}* %G118047.0, %57
  br i1 %59, label %tag882, label %tag259

tag83:                                            ; preds = %tag58, %header-check-br4716
  %60 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest1437 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag85:                                            ; preds = %normal-dest5935
  %62 = icmp eq {}* %stream.0, %.val10288
  %G119111.0 = select i1 %62, {}* %1785, {}* %.val10288
  %63 = icmp eq {}* %G119111.0, %.val10288
  br i1 %63, label %tag368, label %tag686

tag86:                                            ; preds = %normal-dest2906, %header-check-br973
  %64 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest1457 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag87:                                            ; preds = %tag791
  %fixnum-tag-only14719776 = and i64 %ptrtoint3023, 3
  %fixnump-test1472 = icmp eq i64 %fixnum-tag-only14719776, 0
  br i1 %fixnump-test1472, label %tag388, label %tag105

tag741.outer:                                     ; preds = %tag741.outer.backedge, %tag741.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag741.outer.preheader ], [ %LENGTH.0.ph.be, %tag741.outer.backedge ]
  %SEQUENCE4048.0.ph = phi {}* [ %.in, %tag741.outer.preheader ], [ %G20958541944.0, %tag741.outer.backedge ]
  %66 = ptrtoint {}* %SEQUENCE4048.0.ph to i64
  %tag-only65989150 = and i64 %66, 7
  %consp-test6599 = icmp eq i64 %tag-only65989150, 3
  %67 = add i64 %66, 5
  %68 = inttoptr i64 %67 to {}**
  br label %tag741

tag89:                                            ; preds = %header-check-br7532, %normal-dest3113, %normal-dest3037
  %G117212.0 = phi {}* [ %G117212.1, %normal-dest3037 ], [ %G117212.2, %normal-dest3113 ], [ %"closure->LAMBDA2695", %header-check-br7532 ]
  %ptrtoint1473 = ptrtoint {}* %G117212.0 to i64
  %entry-point-addr-uint1474 = add i64 %ptrtoint1473, 7
  %entry-point-addr1475 = inttoptr i64 %entry-point-addr-uint1474 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1476 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1475, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1476({}* %G117212.0, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %tag346 unwind label %cleanup-lpad.loopexit

tag96:                                            ; preds = %normal-dest3268, %header-check-br2912, %normal-dest1464
  %G117014.0 = phi {}* [ %G117014.1, %normal-dest1464 ], [ %"closure->LAMBDA2636", %header-check-br2912 ], [ %G117014.2, %normal-dest3268 ]
  %ptrtoint1498 = ptrtoint {}* %G117014.0 to i64
  %entry-point-addr-uint1499 = add i64 %ptrtoint1498, 7
  %entry-point-addr1500 = inttoptr i64 %entry-point-addr-uint1499 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1501 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1500, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1501({}* %G117014.0, i64 1, {}* %OUT116741.0, {}* null, {}* null, {}* null)
          to label %tag442 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag97:                                            ; preds = %normal-dest1183, %header-check-br3251
  %71 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest1510 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag101:                                           ; preds = %tag860
  %73 = icmp eq {}* %vaarg902, %.val10496
  %.val10495 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G118990.0 = select i1 %73, {}* %.val10495, {}* %.val10496
  %74 = icmp eq {}* %G118990.0, %.val10496
  br i1 %74, label %tag335, label %tag605

tag102:                                           ; preds = %tag63, %normal-dest1160, %tag25
  %.val10295 = phi {}* [ %.val10293.pre, %tag25 ], [ %708, %normal-dest1160 ], [ %41, %tag63 ]
  %G2095854.0 = phi {}* [ %18, %tag25 ], [ %G2095854.1, %normal-dest1160 ], [ %41, %tag63 ]
  %75 = ptrtoint {}* %G2095854.0 to i64
  %tag-only15468326 = and i64 %75, 7
  %consp-test1547 = icmp eq i64 %tag-only15468326, 3
  %.val10292 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G119031.0 = select i1 %consp-test1547, {}* %.val10292, {}* %.val10295
  %76 = icmp eq {}* %G119031.0, %.val10295
  br i1 %76, label %tag767, label %tag408

tag103:                                           ; preds = %normal-dest6230, %normal-dest5743, %header-check-br3402
  %G119435.0 = phi {}* [ %"closure->LAMBDA7659", %header-check-br3402 ], [ %G119435.1, %normal-dest5743 ], [ %G119435.2, %normal-dest6230 ]
  %77 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %78 = invoke {}* @cc_safe_symbol_value({}* %77)
          to label %normal-dest1549 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag105:                                           ; preds = %header-check-br2841, %tag561, %tag729, %header-check-br4611, %tag87
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 326), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest1562 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag108:                                           ; preds = %normal-dest2723, %tag419
  %G117391.0 = phi {}* [ %X_PUNKTE_STRING.0, %tag419 ], [ %G117391.1, %normal-dest2723 ]
  %ptrtoint1576 = ptrtoint {}* %1469 to i64
  %entry-point-addr-uint1577 = add i64 %ptrtoint1576, 7
  %entry-point-addr1578 = inttoptr i64 %entry-point-addr-uint1577 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1579 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1578, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1579({}* %1469, i64 2, {}* %G117391.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest1582 unwind label %cleanup-lpad.loopexit

tag109:                                           ; preds = %normal-dest7426, %normal-dest1281
  %82 = phi {}* [ %729, %normal-dest1281 ], [ %.val10348, %normal-dest7426 ]
  %G117627.0 = phi {}* [ %G117627.1, %normal-dest1281 ], [ %.val10347, %normal-dest7426 ]
  %83 = icmp eq {}* %G117627.0, %82
  br i1 %83, label %tag890, label %tag512

tag111:                                           ; preds = %normal-dest7790
  %ptrtoint1612 = ptrtoint {}* %"closure->LAMBDA7791" to i64
  %tag-only1613 = and i64 %ptrtoint1612, 7
  %test1614 = icmp eq i64 %tag-only1613, 1
  br i1 %test1614, label %header-check-br1611, label %tag599

tag112:                                           ; preds = %tag2
  %84 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest1621 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag113:                                           ; preds = %tag453
  %86 = add i64 %327, -3
  %87 = inttoptr i64 %86 to {}**
  %88 = load {}*, {}** %87, align 8
  br label %tag383

tag119:                                           ; preds = %normal-dest6915
  %ptrtoint1666 = ptrtoint {}* %"closure->LAMBDA6916" to i64
  %tag-only1667 = and i64 %ptrtoint1666, 7
  %test1668 = icmp eq i64 %tag-only1667, 1
  br i1 %test1668, label %header-check-br1665, label %tag26

tag122:                                           ; preds = %normal-dest3565
  %ptrtoint1675 = ptrtoint {}* %"closure->LAMBDA3566" to i64
  %tag-only1676 = and i64 %ptrtoint1675, 7
  %test1677 = icmp eq i64 %tag-only1676, 1
  br i1 %test1677, label %header-check-br1674, label %tag602

tag124:                                           ; preds = %normal-dest7764
  %89 = icmp eq {}* %stream.0, %.val10484
  %G116870.0 = select i1 %89, {}* %2189, {}* %.val10484
  %90 = icmp eq {}* %G116870.0, %.val10484
  br i1 %90, label %tag53, label %tag640

tag126:                                           ; preds = %normal-dest5014, %tag688
  %.sink10281 = phi { {}*, i64 } [ %471, %tag688 ], [ %1587, %normal-dest5014 ]
  %.elt8825 = extractvalue { {}*, i64 } %.sink10281, 0
  %.elt8827 = extractvalue { {}*, i64 } %.sink10281, 1
  %cond8079 = icmp eq i64 %.elt8827, 0
  %91 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116690.2 = select i1 %cond8079, {}* %91, {}* %.elt8825
  %92 = icmp eq {}* %G116690.2, %91
  br i1 %92, label %tag808, label %tag550

tag127:                                           ; preds = %normal-dest2512, %header-check-br1166
  %93 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest1702 unwind label %cleanup-lpad.loopexit

tag129:                                           ; preds = %normal-dest1974, %header-check-br964
  %95 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %96 = invoke {}* @cc_safe_fdefinition({}* %95)
          to label %normal-dest1725 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag130:                                           ; preds = %tag767
  %97 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %98 = invoke {}* @cc_safe_fdefinition({}* %97)
          to label %normal-dest1739 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag133:                                           ; preds = %normal-dest7804, %header-check-br6906, %normal-dest3127
  %G117987.0 = phi {}* [ %G117987.1, %normal-dest3127 ], [ %"closure->LAMBDA2833", %header-check-br6906 ], [ %G117987.2, %normal-dest7804 ]
  %ptrtoint1751 = ptrtoint {}* %G117987.0 to i64
  %entry-point-addr-uint1752 = add i64 %ptrtoint1751, 7
  %entry-point-addr1753 = inttoptr i64 %entry-point-addr-uint1752 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1754 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1753, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1754({}* %G117987.0, i64 1, {}* %G116638.0, {}* null, {}* null, {}* null)
          to label %normal-dest1757 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag136:                                           ; preds = %tag859
  %100 = add i64 %168, 5
  %101 = inttoptr i64 %100 to {}**
  %102 = load {}*, {}** %101, align 8
  %.pre10579 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag345.backedge

tag345.backedge:                                  ; preds = %tag136, %normal-dest7858
  %103 = phi {}* [ %.pre10579, %tag136 ], [ %2212, %normal-dest7858 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %102, %tag136 ], [ %"%DOLIST-VAR.1", %normal-dest7858 ]
  %104 = icmp eq {}* %"%DOLIST-VAR.0.be", %103
  br i1 %104, label %tag259, label %tag236

tag138:                                           ; preds = %normal-dest5965, %normal-dest5600, %header-check-br4303
  %G117106.0 = phi {}* [ %"closure->LAMBDA3275", %header-check-br4303 ], [ %G117106.1, %normal-dest5600 ], [ %G117106.2, %normal-dest5965 ]
  %ptrtoint1784 = ptrtoint {}* %G117106.0 to i64
  %entry-point-addr-uint1785 = add i64 %ptrtoint1784, 7
  %entry-point-addr1786 = inttoptr i64 %entry-point-addr-uint1785 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1787 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1786, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1787({}* %G117106.0, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %tag34 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag142:                                           ; preds = %tag546, %header-check-br4646
  %106 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest1813 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag146:                                           ; preds = %normal-dest2885, %normal-dest1517, %header-check-br1189
  %G118645.0 = phi {}* [ %"closure->LAMBDA4881", %header-check-br1189 ], [ %G118645.1, %normal-dest1517 ], [ %G118645.2, %normal-dest2885 ]
  %108 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest1827 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag147:                                           ; preds = %normal-dest3328, %header-check-br3210, %normal-dest3176
  %G117401.0 = phi {}* [ %G117401.1, %normal-dest3176 ], [ %vaarg906, %header-check-br3210 ], [ %G117401.2, %normal-dest3328 ]
  %ptrtoint1879 = ptrtoint {}* %G117401.0 to i64
  %entry-point-addr-uint1880 = add i64 %ptrtoint1879, 7
  %entry-point-addr1881 = inttoptr i64 %entry-point-addr-uint1880 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1882 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1881, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1882({}* %G117401.0, i64 3, {}* %vaarg, {}* %Y_ELEMENT.0, {}* %X_ELEMENT.0, {}* null)
          to label %tag419 unwind label %cleanup-lpad.loopexit

tag151:                                           ; preds = %tag522, %header-check-br4208
  %111 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %112 = invoke {}* @cc_safe_fdefinition({}* %111)
          to label %normal-dest1899 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag157:                                           ; preds = %tag268, %normal-dest5076, %tag783
  %.val10428 = phi {}* [ %.val10426.pre, %tag783 ], [ %1602, %normal-dest5076 ], [ %202, %tag268 ]
  %G20958541944.0 = phi {}* [ %537, %tag783 ], [ %G20958541944.1, %normal-dest5076 ], [ %202, %tag268 ]
  %113 = ptrtoint {}* %G20958541944.0 to i64
  %tag-only19489151 = and i64 %113, 7
  %consp-test1949 = icmp eq i64 %tag-only19489151, 3
  %.val10425 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116974.0 = select i1 %consp-test1949, {}* %.val10425, {}* %.val10428
  %114 = icmp eq {}* %G116974.0, %.val10428
  br i1 %114, label %tag351, label %tag774

tag161:                                           ; preds = %tag344
  %115 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %116 = invoke {}* @cc_safe_fdefinition({}* %115)
          to label %normal-dest1967 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag164:                                           ; preds = %normal-dest1129
  %ptrtoint1998 = ptrtoint {}* %"closure->LAMBDA6916" to i64
  %tag-only1999 = and i64 %ptrtoint1998, 7
  %test2000 = icmp eq i64 %tag-only1999, 1
  br i1 %test2000, label %header-check-br1997, label %tag416

tag165:                                           ; preds = %tag290, %header-check-br5861
  %117 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %118 = invoke {}* @cc_safe_fdefinition({}* %117)
          to label %normal-dest2007 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag167:                                           ; preds = %tag297
  %119 = icmp eq {}* %.in, %.val10430
  %.val10429 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116933.0 = select i1 %119, {}* %.val10429, {}* %.val10430
  %120 = icmp eq {}* %G116933.0, %.val10430
  br i1 %120, label %tag373, label %tag717

tag173:                                           ; preds = %tag826, %tag28.backedge, %tag209
  %121 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %121, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.7", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.7^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest2056 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag174:                                           ; preds = %tag453
  %122 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest2062 unwind label %cleanup-lpad.loopexit

tag176:                                           ; preds = %tag233, %header-check-br3219
  %124 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest2085 unwind label %cleanup-lpad.loopexit

tag178:                                           ; preds = %tag59
  %126 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest2108 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag179:                                           ; preds = %normal-dest1206
  %128 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %129 = invoke {}* @cc_safe_fdefinition({}* %128)
          to label %normal-dest2132 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag189:                                           ; preds = %header-check-br7490, %normal-dest3916, %normal-dest1405
  %G117962.0 = phi {}* [ %G117962.1, %normal-dest1405 ], [ %G117962.2, %normal-dest3916 ], [ %"closure->LAMBDA2833", %header-check-br7490 ]
  %ptrtoint2201 = ptrtoint {}* %G117962.0 to i64
  %entry-point-addr-uint2202 = add i64 %ptrtoint2201, 7
  %entry-point-addr2203 = inttoptr i64 %entry-point-addr-uint2202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2203, align 8
  %130 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2204({}* %G117962.0, i64 1, {}* %OUT1166322200.0, {}* null, {}* null, {}* null)
          to label %tag863 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag191:                                           ; preds = %normal-dest5812, %header-check-br4804
  %131 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %132 = invoke {}* @cc_safe_fdefinition({}* %131)
          to label %normal-dest2227 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag192:                                           ; preds = %tag244
  %133 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 522), align 16
  %134 = invoke {}* @cc_safe_fdefinition({}* %133)
          to label %normal-dest2241 unwind label %cleanup-lpad.loopexit

tag195:                                           ; preds = %tag562
  %135 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %136 = invoke {}* @cc_safe_fdefinition({}* %135)
          to label %normal-dest2263 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag198:                                           ; preds = %tag360, %header-check-br7841
  %137 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %138 = invoke {}* @cc_safe_fdefinition({}* %137)
          to label %normal-dest2294 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag199:                                           ; preds = %normal-dest7075, %header-check-br3411, %normal-dest2301
  %G118676.0 = phi {}* [ %G118676.1, %normal-dest2301 ], [ %"closure->LAMBDA4881", %header-check-br3411 ], [ %G118676.2, %normal-dest7075 ]
  %139 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %140 = invoke {}* @cc_safe_symbol_value({}* %139)
          to label %normal-dest2308 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag205:                                           ; preds = %normal-dest4178, %header-check-br1935
  %141 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %142 = invoke {}* @cc_safe_fdefinition({}* %141)
          to label %normal-dest2349 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag206:                                           ; preds = %tag434, %header-check-br1715
  %143 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %144 = invoke {}* @cc_safe_fdefinition({}* %143)
          to label %normal-dest2363 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag207:                                           ; preds = %normal-dest2694
  %ptrtoint2377 = ptrtoint {}* %"closure->LAMBDA2695" to i64
  %tag-only2378 = and i64 %ptrtoint2377, 7
  %test2379 = icmp eq i64 %tag-only2378, 1
  br i1 %test2379, label %header-check-br2376, label %tag734

tag209:                                           ; preds = %normal-dest3635, %normal-dest6040, %normal-dest5515, %normal-dest4765
  %145 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %146 = icmp eq {}* %X_TEILLISTE.0, %145
  br i1 %146, label %tag173, label %tag822.preheader

tag822.preheader:                                 ; preds = %tag209
  br label %tag822

tag210:                                           ; preds = %normal-dest5386, %header-check-br2518, %normal-dest1709
  %G117251.0 = phi {}* [ %G117251.1, %normal-dest1709 ], [ %"closure->LAMBDA2695", %header-check-br2518 ], [ %G117251.2, %normal-dest5386 ]
  %ptrtoint2385 = ptrtoint {}* %G117251.0 to i64
  %entry-point-addr-uint2386 = add i64 %ptrtoint2385, 7
  %entry-point-addr2387 = inttoptr i64 %entry-point-addr-uint2386 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2388 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2387, align 8
  %147 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2388({}* %G117251.0, i64 1, {}* %G116717.0, {}* null, {}* null, {}* null)
          to label %normal-dest2391 unwind label %cleanup-lpad.loopexit

tag211:                                           ; preds = %normal-dest5935
  %ptrtoint2410 = ptrtoint {}* %"closure->LAMBDA5936" to i64
  %tag-only2411 = and i64 %ptrtoint2410, 7
  %test2412 = icmp eq i64 %tag-only2411, 1
  br i1 %test2412, label %header-check-br2409, label %tag744

tag215:                                           ; preds = %header-check-br4602, %normal-dest4412, %normal-dest2220
  %G117604.0 = phi {}* [ %G117604.1, %normal-dest2220 ], [ %G117604.2, %normal-dest4412 ], [ %vaarg906, %header-check-br4602 ]
  %148 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 570), align 16
  %149 = invoke {}* @cc_safe_fdefinition({}* %148)
          to label %normal-dest2421 unwind label %cleanup-lpad.loopexit

tag216:                                           ; preds = %tag218
  %150 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %151 = invoke {}* @cc_safe_fdefinition({}* %150)
          to label %normal-dest2461 unwind label %cleanup-lpad.loopexit

tag218:                                           ; preds = %normal-dest3565
  %152 = icmp eq {}* %stream.0, %.val10346
  %G117565.0 = select i1 %152, {}* %1258, {}* %.val10346
  %153 = icmp eq {}* %G117565.0, %.val10346
  br i1 %153, label %tag216, label %tag432

tag221:                                           ; preds = %tag286
  %154 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %155 = invoke {}* @cc_safe_fdefinition({}* %154)
          to label %normal-dest2491 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag223:                                           ; preds = %normal-dest1043, %normal-dest3857
  %156 = phi {}* [ %1324, %normal-dest3857 ], [ %.val10388, %normal-dest1043 ]
  %G117356.0 = phi {}* [ %G117356.1, %normal-dest3857 ], [ %.val10387, %normal-dest1043 ]
  %157 = icmp eq {}* %G117356.0, %156
  br i1 %157, label %tag395, label %tag233

tag225:                                           ; preds = %tag613
  %158 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %159 = invoke {}* @cc_safe_fdefinition({}* %158)
          to label %normal-dest2505 unwind label %cleanup-lpad.loopexit

tag226:                                           ; preds = %normal-dest5892, %normal-dest4681, %header-check-br3242
  %G119068.0 = phi {}* [ %"closure->LAMBDA5936", %header-check-br3242 ], [ %G119068.1, %normal-dest4681 ], [ %G119068.2, %normal-dest5892 ]
  %ptrtoint2527 = ptrtoint {}* %G119068.0 to i64
  %entry-point-addr-uint2528 = add i64 %ptrtoint2527, 7
  %entry-point-addr2529 = inttoptr i64 %entry-point-addr-uint2528 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2530 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2529, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2530({}* %G119068.0, i64 2, {}* %OUT116506.0, {}* %zeilen-titel.0, {}* null, {}* null)
          to label %tag779 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag227:                                           ; preds = %tag755
  %161 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %162 = invoke {}* @cc_safe_fdefinition({}* %161)
          to label %normal-dest2539 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag233:                                           ; preds = %tag223
  br i1 %test3708, label %header-check-br2575, label %tag176

tag234:                                           ; preds = %tag697, %tag539, %normal-dest6148
  %163 = phi {}* [ %1839, %normal-dest6148 ], [ %377, %tag539 ], [ %377, %tag697 ]
  %object.0 = phi {}* [ %object.1, %normal-dest6148 ], [ %377, %tag539 ], [ %.val10296, %tag697 ]
  %164 = icmp eq {}* %object.0, %163
  %.val10298 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116904.0 = select i1 %164, {}* %.val10298, {}* %163
  %165 = icmp eq {}* %G116904.0, %163
  br i1 %165, label %tag866, label %tag660

tag235:                                           ; preds = %kw-exit-block
  %166 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 451), align 8
  %167 = invoke {}* @cc_safe_fdefinition({}* %166)
          to label %normal-dest2585 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag236:                                           ; preds = %tag236.preheader, %tag345.backedge
  %.val10322 = phi {}* [ %103, %tag345.backedge ], [ %16, %tag236.preheader ]
  %"%DOLIST-VAR.010563" = phi {}* [ %"%DOLIST-VAR.0.be", %tag345.backedge ], [ %X_TEILLISTE.0, %tag236.preheader ]
  %168 = ptrtoint {}* %"%DOLIST-VAR.010563" to i64
  %tag-only26038491 = and i64 %168, 7
  %consp-test2604 = icmp eq i64 %tag-only26038491, 3
  %.val10321 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G118296.0 = select i1 %consp-test2604, {}* %.val10321, {}* %.val10322
  %169 = icmp eq {}* %G118296.0, %.val10322
  br i1 %169, label %tag458, label %tag875

tag239:                                           ; preds = %normal-dest3685, %normal-dest1444, %header-check-br1256
  %G116877.0 = phi {}* [ %"closure->LAMBDA7765", %header-check-br1256 ], [ %G116877.1, %normal-dest1444 ], [ %G116877.2, %normal-dest3685 ]
  %170 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %171 = invoke {}* @cc_safe_symbol_value({}* %170)
          to label %normal-dest2615 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag241:                                           ; preds = %tag346
  %172 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %173 = icmp eq {}* %"%DOLIST-VAR1088.010564", %172
  %.val10351 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G117205.0 = select i1 %173, {}* %.val10351, {}* %172
  %174 = icmp eq {}* %G117205.0, %172
  br i1 %174, label %tag31, label %tag327

tag242:                                           ; preds = %tag685
  %175 = add i64 %562, 5
  %176 = inttoptr i64 %175 to {}**
  %177 = load {}*, {}** %176, align 8
  %.pre10578 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag28.backedge

tag243:                                           ; preds = %tag402, %tag313.backedge, %tag863
  %178 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA2636" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %178, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.8", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.8^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest2635 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag244:                                           ; preds = %normal-dest5223, %tag615
  %.sink10283 = phi { {}*, i64 } [ %425, %tag615 ], [ %1631, %normal-dest5223 ]
  %.elt8961 = extractvalue { {}*, i64 } %.sink10283, 0
  %.elt8963 = extractvalue { {}*, i64 } %.sink10283, 1
  %cond8109 = icmp eq i64 %.elt8963, 0
  %179 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116705.2 = select i1 %cond8109, {}* %179, {}* %.elt8961
  %180 = icmp eq {}* %G116705.2, %179
  br i1 %180, label %tag746, label %tag192

tag245:                                           ; preds = %normal-dest3958, %header-check-br5471
  %181 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %182 = invoke {}* @cc_safe_fdefinition({}* %181)
          to label %normal-dest2642 unwind label %cleanup-lpad.loopexit

tag247:                                           ; preds = %header-check-br4184, %normal-dest2356, %normal-dest2287
  %G118323.0 = phi {}* [ %G118323.1, %normal-dest2287 ], [ %G118323.2, %normal-dest2356 ], [ %"closure->LAMBDA6916", %header-check-br4184 ]
  %183 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %184 = invoke {}* @cc_safe_fdefinition({}* %183)
          to label %normal-dest2656 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag248:                                           ; preds = %normal-dest1594, %normal-dest7273, %normal-dest6851, %normal-dest6641
  %185 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA2695" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %185, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.9", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.9^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest2694 unwind label %cleanup-lpad.loopexit

tag251:                                           ; preds = %tag419
  %186 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 522), align 16
  %187 = invoke {}* @cc_safe_fdefinition({}* %186)
          to label %normal-dest2715 unwind label %cleanup-lpad.loopexit

tag252:                                           ; preds = %normal-dest3871
  %188 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %189 = invoke {}* @cc_safe_fdefinition({}* %188)
          to label %normal-dest2730 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag256:                                           ; preds = %header-check-br3974, %normal-dest3460, %normal-dest2370
  %G118543.0 = phi {}* [ %G118543.1, %normal-dest2370 ], [ %G118543.2, %normal-dest3460 ], [ %"closure->LAMBDA", %header-check-br3974 ]
  %190 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %191 = invoke {}* @cc_safe_symbol_value({}* %190)
          to label %normal-dest2773 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag258:                                           ; preds = %normal-dest4320, %normal-dest1920, %header-check-br1634
  %G119210.0 = phi {}* [ %"closure->LAMBDA6825", %header-check-br1634 ], [ %G119210.1, %normal-dest1920 ], [ %G119210.2, %normal-dest4320 ]
  %192 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %193 = invoke {}* @cc_safe_fdefinition({}* %192)
          to label %normal-dest2795 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag259:                                           ; preds = %tag81, %tag345.backedge, %tag21
  %194 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA2833" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %194, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.10", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.10^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest2832 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag262:                                           ; preds = %normal-dest4507
  br i1 %brmerge10567, label %tag307, label %header-check-br3288

tag263:                                           ; preds = %tag34
  %195 = add i64 %393, 5
  %196 = inttoptr i64 %195 to {}**
  %197 = load {}*, {}** %196, align 8
  %.pre10581 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag313.backedge

tag313.backedge:                                  ; preds = %tag263, %normal-dest4150
  %198 = phi {}* [ %.pre10581, %tag263 ], [ %1384, %normal-dest4150 ]
  %"%DOLIST-VAR1103.0.be" = phi {}* [ %197, %tag263 ], [ %"%DOLIST-VAR1103.1", %normal-dest4150 ]
  %199 = icmp eq {}* %"%DOLIST-VAR1103.0.be", %198
  br i1 %199, label %tag243, label %tag562

tag266:                                           ; preds = %normal-dest2832
  %200 = icmp eq {}* %stream.0, %.val10338
  %G118003.0 = select i1 %200, {}* %1070, {}* %.val10338
  %201 = icmp eq {}* %G118003.0, %.val10338
  br i1 %201, label %tag848, label %tag765

tag268:                                           ; preds = %tag741
  %202 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %203 = icmp eq {}* %SEQUENCE4048.0.ph, %202
  %.val10423 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116986.0 = select i1 %203, {}* %.val10423, {}* %202
  %204 = icmp eq {}* %G116986.0, %202
  br i1 %204, label %tag569, label %tag157

tag271:                                           ; preds = %tag389, %header-check-br5445
  %205 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %206 = invoke {}* @cc_safe_fdefinition({}* %205)
          to label %normal-dest2862 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag277:                                           ; preds = %normal-dest3545
  %207 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %208 = invoke {}* @cc_safe_fdefinition({}* %207)
          to label %normal-dest2899 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag280:                                           ; preds = %tag4, %header-check-br1523
  %209 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %210 = invoke {}* @cc_safe_fdefinition({}* %209)
          to label %normal-dest2922 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag284:                                           ; preds = %normal-dest6733, %normal-dest5271, %header-check-br1611
  %G118172.0 = phi {}* [ %"closure->LAMBDA7791", %header-check-br1611 ], [ %G118172.1, %normal-dest5271 ], [ %G118172.2, %normal-dest6733 ]
  %211 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %212 = invoke {}* @cc_safe_symbol_value({}* %211)
          to label %normal-dest2959 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag286:                                           ; preds = %normal-dest3274
  %213 = icmp eq {}* %stream.0, %.val10396
  %G117161.0 = select i1 %213, {}* %1186, {}* %.val10396
  %214 = icmp eq {}* %G117161.0, %.val10396
  br i1 %214, label %tag221, label %tag426

tag290:                                           ; preds = %normal-dest3372
  %ptrtoint3044 = ptrtoint {}* %"closure->LAMBDA6825" to i64
  %tag-only3045 = and i64 %ptrtoint3044, 7
  %test3046 = icmp eq i64 %tag-only3045, 1
  br i1 %test3046, label %header-check-br3043, label %tag165

tag291:                                           ; preds = %normal-dest2592, %kw-exit-block
  %215 = phi {}* [ %615, %kw-exit-block ], [ %1022, %normal-dest2592 ]
  %zeilen-titel.0 = phi {}* [ %zeilen-titel.2, %kw-exit-block ], [ %zeilen-titel.5, %normal-dest2592 ]
  %216 = icmp eq {}* %G116776.1, %215
  br i1 %216, label %tag411, label %tag414

tag293:                                           ; preds = %normal-dest6405, %header-check-br1665, %normal-dest1071
  %G118388.0 = phi {}* [ %G118388.1, %normal-dest1071 ], [ %"closure->LAMBDA6916", %header-check-br1665 ], [ %G118388.2, %normal-dest6405 ]
  %217 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %218 = invoke {}* @cc_safe_symbol_value({}* %217)
          to label %normal-dest3053 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag294:                                           ; preds = %normal-dest4042
  %test3096 = icmp eq i64 %tag-only40499149, 1
  br i1 %test3096, label %header-check-br3093, label %tag814

tag295:                                           ; preds = %header-check-br4611
  %219 = invoke double @from_object_double({}* nonnull %seiten-breite.0)
          to label %normal-dest3102 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag296:                                           ; preds = %tag837, %header-check-br7499
  %220 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %221 = invoke {}* @cc_safe_fdefinition({}* %220)
          to label %normal-dest3106 unwind label %cleanup-lpad.loopexit

tag297:                                           ; preds = %header-check-br3093, %normal-dest4250, %tag814
  %.val10430 = phi {}* [ %.pre10583, %tag814 ], [ %1407, %normal-dest4250 ], [ %1359, %header-check-br3093 ]
  %G116937.0.in = phi {}** [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), %tag814 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %normal-dest4250 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %header-check-br3093 ]
  %G116937.0 = load {}*, {}** %G116937.0.in, align 8
  %222 = icmp eq {}* %G116937.0, %.val10430
  br i1 %222, label %tag167, label %tag544

tag298:                                           ; preds = %normal-dest6900, %header-check-br3808
  %223 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %224 = invoke {}* @cc_safe_fdefinition({}* %223)
          to label %normal-dest3120 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag302:                                           ; preds = %tag731, %header-check-br1683
  %225 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %226 = invoke {}* @cc_safe_fdefinition({}* %225)
          to label %normal-dest3155 unwind label %cleanup-lpad.loopexit

tag303:                                           ; preds = %tag307, %header-check-br4556
  %227 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %228 = invoke {}* @cc_safe_fdefinition({}* %227)
          to label %normal-dest3169 unwind label %cleanup-lpad.loopexit

tag306:                                           ; preds = %normal-dest2139, %header-check-br2075
  %229 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %230 = invoke {}* @cc_safe_fdefinition({}* %229)
          to label %normal-dest3197 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag307:                                           ; preds = %header-check-br3288, %header-check-br2035, %tag262, %tag857, %tag877, %tag376
  br i1 %test3708, label %header-check-br3210, label %tag303

tag309:                                           ; preds = %normal-dest3446
  %231 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %232 = invoke {}* @cc_safe_fdefinition({}* %231)
          to label %normal-dest3229 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag315:                                           ; preds = %tag408
  %233 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %294, i64 4)
  %result = extractvalue { i64, i1 } %233, 0
  %overflow = extractvalue { i64, i1 } %233, 1
  %234 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag811, label %tag580.outer.backedge

tag580.outer.backedge:                            ; preds = %tag315, %normal-dest7339, %normal-dest4550
  %LENGTH3508.0.ph.be = phi {}* [ %LENGTH3508.1, %normal-dest4550 ], [ %LENGTH3508.2, %normal-dest7339 ], [ %234, %tag315 ]
  br label %tag580.outer

tag327:                                           ; preds = %tag241, %tag425.backedge, %tag397
  %235 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA3275" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %235, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.11", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.11^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest3274 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag329:                                           ; preds = %normal-dest7790
  %236 = icmp eq {}* %stream.0, %.val10324
  %G118166.0 = select i1 %236, {}* %2194, {}* %.val10324
  %237 = icmp eq {}* %G118166.0, %.val10324
  br i1 %237, label %tag423, label %tag884

tag335:                                           ; preds = %tag101
  %238 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %239 = invoke {}* @cc_safe_fdefinition({}* %238)
          to label %normal-dest3296 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag339:                                           ; preds = %normal-dest3446
  %ptrtoint3310 = ptrtoint {}* %"closure->LAMBDA5936" to i64
  %tag-only3311 = and i64 %ptrtoint3310, 7
  %test3312 = icmp eq i64 %tag-only3311, 1
  br i1 %test3312, label %header-check-br3309, label %tag501

tag342:                                           ; preds = %normal-dest7955, %normal-dest5847, %normal-dest4859, %normal-dest2622
  %return-value.sroa.618.0 = phi i64 [ 1, %normal-dest5847 ], [ 1, %normal-dest4859 ], [ %.elt9539, %normal-dest7955 ], [ 1, %normal-dest2622 ]
  %return-value.sroa.0.3 = phi i64 [ %1754, %normal-dest5847 ], [ %1555, %normal-dest4859 ], [ %2229, %normal-dest7955 ], [ %1027, %normal-dest2622 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %240 = inttoptr i64 %return-value.sroa.0.3 to {}*
  %241 = insertvalue { {}*, i64 } undef, {}* %240, 0
  %242 = insertvalue { {}*, i64 } %241, i64 %return-value.sroa.618.0, 1
  ret { {}*, i64 } %242

tag344:                                           ; preds = %normal-dest2056
  %243 = icmp eq {}* %stream.0, %.val10318
  %G118537.0 = select i1 %243, {}* %900, {}* %.val10318
  %244 = icmp eq {}* %G118537.0, %.val10318
  br i1 %244, label %tag711, label %tag161

tag346:                                           ; preds = %tag89, %normal-dest6473, %tag653, %normal-dest2397
  br i1 %consp-test4131, label %tag526, label %tag241

tag348:                                           ; preds = %tag845, %header-check-br6921
  %245 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %246 = invoke {}* @cc_safe_fdefinition({}* %245)
          to label %normal-dest3351 unwind label %cleanup-lpad.loopexit

tag349:                                           ; preds = %tag2
  %247 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %248 = invoke {}* @cc_safe_fdefinition({}* %247)
          to label %normal-dest3365 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag351:                                           ; preds = %tag157
  %249 = icmp eq {}* %G20958541944.0, %.val10428
  %G116945.0 = select i1 %249, {}* %.val10425, {}* %.val10428
  %250 = icmp eq {}* %G116945.0, %.val10428
  br i1 %250, label %tag630, label %tag717

tag354:                                           ; preds = %normal-dest4135, %normal-dest3779
  %251 = phi {}* [ %1302, %normal-dest3779 ], [ %.val10372, %normal-dest4135 ]
  %G117535.0 = phi {}* [ %G117535.1, %normal-dest3779 ], [ %.val10371, %normal-dest4135 ]
  %252 = icmp eq {}* %G117535.0, %251
  br i1 %252, label %tag413, label %tag815

tag355:                                           ; preds = %tag395, %header-check-br1950
  %253 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %254 = invoke {}* @cc_safe_fdefinition({}* %253)
          to label %normal-dest3389 unwind label %cleanup-lpad.loopexit

tag357:                                           ; preds = %normal-dest7658
  %ptrtoint3403 = ptrtoint {}* %"closure->LAMBDA7659" to i64
  %tag-only3404 = and i64 %ptrtoint3403, 7
  %test3405 = icmp eq i64 %tag-only3404, 1
  br i1 %test3405, label %header-check-br3402, label %tag657

tag360:                                           ; preds = %normal-dest4880
  %ptrtoint3412 = ptrtoint {}* %"closure->LAMBDA4881" to i64
  %tag-only3413 = and i64 %ptrtoint3412, 7
  %test3414 = icmp eq i64 %tag-only3413, 1
  br i1 %test3414, label %header-check-br3411, label %tag198

tag361:                                           ; preds = %tag541
  %fixnum-tag-only34208834 = and i64 %379, 3
  %fixnump-test3421 = icmp ne i64 %fixnum-tag-only34208834, 0
  %test1494 = icmp eq i64 %single-float-tag-only4835, 1
  %or.cond10265 = and i1 %fixnump-test3421, %test1494
  br i1 %or.cond10265, label %header-check-br1491, label %tag413

tag366:                                           ; preds = %normal-dest1043
  br i1 %or.cond10272, label %header-check-br5091, label %tag395

tag368:                                           ; preds = %tag85
  %255 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %256 = invoke {}* @cc_safe_fdefinition({}* %255)
          to label %normal-dest3439 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag370:                                           ; preds = %normal-dest5553, %header-check-br4354
  %257 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %258 = invoke {}* @cc_safe_fdefinition({}* %257)
          to label %normal-dest3467 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag373:                                           ; preds = %tag167
  %259 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %260 = invoke {}* @cc_safe_fdefinition({}* %259)
          to label %normal-dest3495 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag376:                                           ; preds = %normal-dest4507, %normal-dest5161
  %261 = phi {}* [ %1620, %normal-dest5161 ], [ %.val10380, %normal-dest4507 ]
  %G117440.0 = phi {}* [ %G117440.1, %normal-dest5161 ], [ %.val10379, %normal-dest4507 ]
  %262 = icmp eq {}* %G117440.0, %261
  br i1 %262, label %tag307, label %tag731

tag378:                                           ; preds = %normal-dest6876, %header-check-br2474
  %263 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %264 = invoke {}* @cc_safe_fdefinition({}* %263)
          to label %normal-dest3524 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag379:                                           ; preds = %tag59
  %265 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %266 = invoke {}* @cc_safe_fdefinition({}* %265)
          to label %normal-dest3538 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag382:                                           ; preds = %normal-dest5184, %header-check-br5059
  %267 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %268 = invoke {}* @cc_safe_fdefinition({}* %267)
          to label %normal-dest3552 unwind label %cleanup-lpad.loopexit

tag383:                                           ; preds = %normal-dest2069, %tag113
  %X_ELEMENT.0 = phi {}* [ %88, %tag113 ], [ %X_ELEMENT.1, %normal-dest2069 ]
  %269 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA3566" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %269, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.12", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.12^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest3565 unwind label %cleanup-lpad.loopexit

tag385:                                           ; preds = %normal-dest1241, %header-check-br7864
  %270 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %271 = invoke {}* @cc_safe_fdefinition({}* %270)
          to label %normal-dest3572 unwind label %cleanup-lpad.loopexit

tag386:                                           ; preds = %normal-dest6502, %header-check-br2785
  %272 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %273 = invoke {}* @cc_safe_fdefinition({}* %272)
          to label %normal-dest3586 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag388:                                           ; preds = %tag87
  %274 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %540, i64 %ptrtoint3023)
  %result3600 = extractvalue { i64, i1 } %274, 0
  %overflow3601 = extractvalue { i64, i1 } %274, 1
  %275 = inttoptr i64 %result3600 to {}*
  br i1 %overflow3601, label %tag407, label %tag852

tag389:                                           ; preds = %normal-dest3274
  %ptrtoint3603 = ptrtoint {}* %"closure->LAMBDA3275" to i64
  %tag-only3604 = and i64 %ptrtoint3603, 7
  %test3605 = icmp eq i64 %tag-only3604, 1
  br i1 %test3605, label %header-check-br3602, label %tag271

tag390:                                           ; preds = %normal-dest5462, %normal-dest2952, %header-check-br1224
  %G118882.0 = phi {}* [ %"closure->LAMBDA5775", %header-check-br1224 ], [ %G118882.1, %normal-dest2952 ], [ %G118882.2, %normal-dest5462 ]
  %276 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %277 = invoke {}* @cc_safe_symbol_value({}* %276)
          to label %normal-dest3612 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag391:                                           ; preds = %tag862, %header-check-br1293
  %278 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %279 = invoke {}* @cc_safe_fdefinition({}* %278)
          to label %normal-dest3653 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag392:                                           ; preds = %normal-dest7415, %header-check-br4079, %normal-dest2028
  %G117120.0 = phi {}* [ %G117120.1, %normal-dest2028 ], [ %"closure->LAMBDA3275", %header-check-br4079 ], [ %G117120.2, %normal-dest7415 ]
  %ptrtoint3666 = ptrtoint {}* %G117120.0 to i64
  %entry-point-addr-uint3667 = add i64 %ptrtoint3666, 7
  %entry-point-addr3668 = inttoptr i64 %entry-point-addr-uint3667 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3669 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3668, align 8
  %280 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3669({}* %G117120.0, i64 1, {}* %OUT116726.0, {}* null, {}* null, {}* null)
          to label %tag34 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag395:                                           ; preds = %header-check-br5091, %header-check-br1484, %tag366, %tag584, %tag600, %tag223
  br i1 %test3708, label %header-check-br3705, label %tag355

tag396:                                           ; preds = %tag860
  %281 = add i64 %535, 7
  %282 = inttoptr i64 %281 to i64*
  %283 = load i64, i64* %282, align 8
  %"tag fixnum" = shl nuw i64 %283, 2
  %284 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag605

tag397:                                           ; preds = %normal-dest5428, %normal-dest7314, %normal-dest7142, %normal-dest6985
  %285 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %286 = icmp eq {}* %X_TEILLISTE.0, %285
  br i1 %286, label %tag327, label %tag453.preheader

tag453.preheader:                                 ; preds = %tag397
  br label %tag453

tag402:                                           ; preds = %tag34
  %287 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %288 = icmp eq {}* %"%DOLIST-VAR1103.010565", %287
  %.val10397 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G117099.0 = select i1 %288, {}* %.val10397, {}* %287
  %289 = icmp eq {}* %G117099.0, %287
  br i1 %289, label %tag457, label %tag243

tag404:                                           ; preds = %tag745
  %290 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %291 = invoke {}* @cc_safe_fdefinition({}* %290)
          to label %normal-dest3737 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag407:                                           ; preds = %tag388
  %292 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %293 = invoke {}* @cc_safe_fdefinition({}* %292)
          to label %normal-dest3752 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag408:                                           ; preds = %tag102
  %294 = ptrtoint {}* %LENGTH3508.0.ph to i64
  %fixnum-tag-only37678327 = and i64 %294, 3
  %fixnump-test3768 = icmp eq i64 %fixnum-tag-only37678327, 0
  br i1 %fixnump-test3768, label %tag315, label %tag771

tag410:                                           ; preds = %header-check-br1491, %header-check-br1491, %header-check-br1491, %header-check-br1491
  %295 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 566), align 16
  %296 = invoke {}* @cc_safe_fdefinition({}* %295)
          to label %normal-dest3770 unwind label %cleanup-lpad.loopexit

tag411:                                           ; preds = %tag291
  %297 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 451), align 8
  %298 = invoke {}* @cc_safe_fdefinition({}* %297)
          to label %normal-dest3786 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag413:                                           ; preds = %header-check-br1491, %header-check-br2891, %tag821, %tag361, %tag541, %tag354
  br i1 %test3708, label %header-check-br3799, label %tag670

tag414:                                           ; preds = %normal-dest3793, %tag291
  %299 = phi {}* [ %215, %tag291 ], [ %1305, %normal-dest3793 ]
  %spalten-titel.0 = phi {}* [ %spalten-titel.2, %tag291 ], [ %spalten-titel.5, %normal-dest3793 ]
  %300 = icmp eq {}* %G116775.1, %299
  %.zeilen-breite.2 = select i1 %300, {}* inttoptr (i64 120 to {}*), {}* %zeilen-breite.2
  %301 = icmp eq {}* %G116774.1, %299
  %spalten-breite.0 = select i1 %301, {}* inttoptr (i64 120 to {}*), {}* %spalten-breite.2
  %302 = icmp eq {}* %G116773.1, %299
  %seiten-breite.0 = select i1 %302, {}* inttoptr (i64 600 to {}*), {}* %seiten-breite.2
  %303 = icmp eq {}* %G116772.1, %299
  %304 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %stream.0 = select i1 %303, {}* %304, {}* %stream.2
  %305 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 355), align 8
  %306 = invoke {}* @cc_safe_fdefinition({}* %305)
          to label %normal-dest3020 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag416:                                           ; preds = %tag164, %header-check-br7453
  %307 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %308 = invoke {}* @cc_safe_fdefinition({}* %307)
          to label %normal-dest3818 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag419:                                           ; preds = %tag147, %normal-dest6579
  %.sink10279 = phi { {}*, i64 } [ %1932, %normal-dest6579 ], [ %110, %tag147 ]
  %.elt8869 = extractvalue { {}*, i64 } %.sink10279, 0
  %.elt8871 = extractvalue { {}*, i64 } %.sink10279, 1
  %cond8089 = icmp eq i64 %.elt8871, 0
  %309 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116698.2 = select i1 %cond8089, {}* %309, {}* %.elt8869
  %310 = icmp eq {}* %G116698.2, %309
  br i1 %310, label %tag108, label %tag251

tag421:                                           ; preds = %header-check-br1484, %header-check-br1484, %header-check-br1484, %header-check-br1484
  %311 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 566), align 16
  %312 = invoke {}* @cc_safe_fdefinition({}* %311)
          to label %normal-dest3850 unwind label %cleanup-lpad.loopexit

tag423:                                           ; preds = %tag329
  %313 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %314 = invoke {}* @cc_safe_fdefinition({}* %313)
          to label %normal-dest3864 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag426:                                           ; preds = %tag286
  %315 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %316 = invoke {}* @cc_safe_fdefinition({}* %315)
          to label %normal-dest3885 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag430:                                           ; preds = %tag879, %header-check-br4945
  %317 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %318 = invoke {}* @cc_safe_fdefinition({}* %317)
          to label %normal-dest3923 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag432:                                           ; preds = %tag218
  %319 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %320 = invoke {}* @cc_safe_fdefinition({}* %319)
          to label %normal-dest3951 unwind label %cleanup-lpad.loopexit

tag434:                                           ; preds = %normal-dest2056
  %ptrtoint3975 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only3976 = and i64 %ptrtoint3975, 7
  %test3977 = icmp eq i64 %tag-only3976, 1
  br i1 %test3977, label %header-check-br3974, label %tag206

tag440:                                           ; preds = %tag774
  %321 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %322 = invoke {}* @cc_safe_fdefinition({}* %321)
          to label %normal-dest4021 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag442:                                           ; preds = %normal-dest1212, %normal-dest5674, %tag96, %tag78
  %323 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 596), align 16
  %324 = invoke {}* @cc_safe_fdefinition({}* %323)
          to label %normal-dest4035 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag444:                                           ; preds = %normal-dest2498
  %325 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %326 = invoke {}* @cc_safe_fdefinition({}* %325)
          to label %normal-dest4066 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag453:                                           ; preds = %tag453.preheader, %tag425.backedge
  %.val10344 = phi {}* [ %691, %tag425.backedge ], [ %285, %tag453.preheader ]
  %"%DOLIST-VAR1088.010564" = phi {}* [ %"%DOLIST-VAR1088.0.be", %tag425.backedge ], [ %X_TEILLISTE.0, %tag453.preheader ]
  %327 = ptrtoint {}* %"%DOLIST-VAR1088.010564" to i64
  %tag-only41308638 = and i64 %327, 7
  %consp-test4131 = icmp eq i64 %tag-only41308638, 3
  %.val10343 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G117742.0 = select i1 %consp-test4131, {}* %.val10343, {}* %.val10344
  %328 = icmp eq {}* %G117742.0, %.val10344
  br i1 %328, label %tag174, label %tag113

tag456:                                           ; preds = %normal-dest6465, %header-check-br3965, %normal-dest2649
  %G117479.0 = phi {}* [ %G117479.1, %normal-dest2649 ], [ %"closure->LAMBDA3566", %header-check-br3965 ], [ %G117479.2, %normal-dest6465 ]
  %329 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %330 = invoke {}* @cc_safe_fdefinition({}* %329)
          to label %normal-dest4133 unwind label %cleanup-lpad.loopexit

tag457:                                           ; preds = %tag402
  %331 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %332 = invoke {}* @cc_safe_fdefinition({}* %331)
          to label %normal-dest4143 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag458:                                           ; preds = %tag236
  %333 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %334 = invoke {}* @cc_safe_fdefinition({}* %333)
          to label %normal-dest4157 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag459:                                           ; preds = %normal-dest1129
  %335 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %336 = invoke {}* @cc_safe_fdefinition({}* %335)
          to label %normal-dest4171 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag461:                                           ; preds = %normal-dest3020
  %337 = icmp eq i64 %tag-only3024, 6
  %fixnum-tag-only59418264 = and i64 %ptrtoint3023, 3
  %fixnump-test5942 = icmp eq i64 %fixnum-tag-only59418264, 0
  %or.cond10273 = or i1 %337, %fixnump-test5942
  br i1 %or.cond10273, label %tag791, label %tag804

tag462:                                           ; preds = %tag481
  %338 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %339 = invoke {}* @cc_safe_fdefinition({}* %338)
          to label %normal-dest4195 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag471:                                           ; preds = %header-check-br7680, %normal-dest6666, %normal-dest4498
  %G118611.0 = phi {}* [ %G118611.1, %normal-dest4498 ], [ %G118611.2, %normal-dest6666 ], [ %"closure->LAMBDA4881", %header-check-br7680 ]
  %340 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %341 = invoke {}* @cc_safe_fdefinition({}* %340)
          to label %normal-dest4265 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag473:                                           ; preds = %normal-dest2498
  %ptrtoint4304 = ptrtoint {}* %"closure->LAMBDA3275" to i64
  %tag-only4305 = and i64 %ptrtoint4304, 7
  %test4306 = icmp eq i64 %tag-only4305, 1
  br i1 %test4306, label %header-check-br4303, label %tag684

tag474:                                           ; preds = %normal-dest1628, %header-check-br4687
  %342 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %343 = invoke {}* @cc_safe_fdefinition({}* %342)
          to label %normal-dest4313 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag481:                                           ; preds = %normal-dest7658
  %344 = icmp eq {}* %stream.0, %.val10286
  %G119429.0 = select i1 %344, {}* %2164, {}* %.val10286
  %345 = icmp eq {}* %G119429.0, %.val10286
  br i1 %345, label %tag462, label %tag662

tag485:                                           ; preds = %tag512, %header-check-br4102
  %346 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %347 = invoke {}* @cc_safe_fdefinition({}* %346)
          to label %normal-dest4405 unwind label %cleanup-lpad.loopexit

tag486:                                           ; preds = %normal-dest3892, %header-check-br4664
  %348 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %349 = invoke {}* @cc_safe_fdefinition({}* %348)
          to label %normal-dest4419 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag487:                                           ; preds = %normal-dest7187, %normal-dest6694, %header-check-br4586
  %G119179.0 = phi {}* [ %"closure->LAMBDA6825", %header-check-br4586 ], [ %G119179.1, %normal-dest6694 ], [ %G119179.2, %normal-dest7187 ]
  %350 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %351 = invoke {}* @cc_safe_fdefinition({}* %350)
          to label %normal-dest4434 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag488:                                           ; preds = %tag726, %header-check-br2098
  %352 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %353 = invoke {}* @cc_safe_fdefinition({}* %352)
          to label %normal-dest4459 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag492:                                           ; preds = %normal-dest2832
  %ptrtoint4482 = ptrtoint {}* %"closure->LAMBDA2833" to i64
  %tag-only4483 = and i64 %ptrtoint4482, 7
  %test4484 = icmp eq i64 %tag-only4483, 1
  br i1 %test4484, label %header-check-br4481, label %tag514

tag496:                                           ; preds = %normal-dest7674, %header-check-br4224
  %354 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %355 = invoke {}* @cc_safe_fdefinition({}* %354)
          to label %normal-dest4491 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag497:                                           ; preds = %normal-dest3579, %normal-dest3148, %header-check-br1247
  %G117384.0 = phi {}* [ %"closure->LAMBDA3566", %header-check-br1247 ], [ %G117384.1, %normal-dest3148 ], [ %G117384.2, %normal-dest3579 ]
  %356 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %357 = invoke {}* @cc_safe_fdefinition({}* %356)
          to label %normal-dest4505 unwind label %cleanup-lpad.loopexit

tag501:                                           ; preds = %tag339, %header-check-br2605
  %358 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %359 = invoke {}* @cc_safe_fdefinition({}* %358)
          to label %normal-dest4522 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag504:                                           ; preds = %normal-dest4880
  %360 = icmp eq {}* %stream.0, %.val10305
  %G118670.0 = select i1 %360, {}* %1559, {}* %.val10305
  %361 = icmp eq {}* %G118670.0, %.val10305
  br i1 %361, label %tag663, label %tag52

tag509:                                           ; preds = %normal-dest3372
  %362 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %363 = invoke {}* @cc_safe_fdefinition({}* %362)
          to label %normal-dest4573 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag512:                                           ; preds = %tag109
  br i1 %test3708, label %header-check-br4602, label %tag485

tag514:                                           ; preds = %tag492, %header-check-br7832
  %364 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %365 = invoke {}* @cc_safe_fdefinition({}* %364)
          to label %normal-dest4619 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag515:                                           ; preds = %normal-dest7881, %header-check-br1053
  %366 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %367 = invoke {}* @cc_safe_fdefinition({}* %366)
          to label %normal-dest4633 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag521:                                           ; preds = %normal-dest4529, %header-check-br3309, %normal-dest3190
  %G119053.0 = phi {}* [ %G119053.1, %normal-dest3190 ], [ %"closure->LAMBDA5936", %header-check-br3309 ], [ %G119053.2, %normal-dest4529 ]
  %ptrtoint4696 = ptrtoint {}* %G119053.0 to i64
  %entry-point-addr-uint4697 = add i64 %ptrtoint4696, 7
  %entry-point-addr4698 = inttoptr i64 %entry-point-addr-uint4697 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4699 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4698, align 8
  %368 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4699({}* %G119053.0, i64 2, {}* %stream.0, {}* %zeilen-titel.0, {}* null, {}* null)
          to label %tag779 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag522:                                           ; preds = %normal-dest7173
  %ptrtoint4708 = ptrtoint {}* %"closure->LAMBDA4828" to i64
  %tag-only4709 = and i64 %ptrtoint4708, 7
  %test4710 = icmp eq i64 %tag-only4709, 1
  br i1 %test4710, label %header-check-br4707, label %tag151

tag525:                                           ; preds = %normal-dest7201, %normal-dest5920, %header-check-br1353
  %G118851.0 = phi {}* [ %"closure->LAMBDA5775", %header-check-br1353 ], [ %G118851.1, %normal-dest5920 ], [ %G118851.2, %normal-dest7201 ]
  %369 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %370 = invoke {}* @cc_safe_fdefinition({}* %369)
          to label %normal-dest4726 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag526:                                           ; preds = %tag346
  %371 = add i64 %327, 5
  %372 = inttoptr i64 %371 to {}**
  %373 = load {}*, {}** %372, align 8
  %.pre10580 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag425.backedge

tag529:                                           ; preds = %tag779
  %test4780 = icmp eq i64 %tag-only69998324, 1
  br i1 %test4780, label %header-check-br4777, label %tag872

tag535:                                           ; preds = %tag613
  %374 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %375 = invoke {}* @cc_safe_fdefinition({}* %374)
          to label %normal-dest4814 unwind label %cleanup-lpad.loopexit

tag538:                                           ; preds = %normal-dest2271, %tag651
  %Y_ELEMENT.0 = phi {}* [ %442, %tag651 ], [ %Y_ELEMENT.1, %normal-dest2271 ]
  %376 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA4828" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %376, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.15", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.15^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest4827 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag539:                                           ; preds = %normal-dest6318, %normal-dest5353
  %.sink10285 = phi { {}*, i64 } [ %1659, %normal-dest5353 ], [ %1871, %normal-dest6318 ]
  %X_LISTE_ALLES.0 = phi {}* [ %vaarg902, %normal-dest5353 ], [ %.in, %normal-dest6318 ]
  %.elt9162 = extractvalue { {}*, i64 } %.sink10285, 0
  %.elt9164 = extractvalue { {}*, i64 } %.sink10285, 1
  %cond8147 = icmp eq i64 %.elt9164, 0
  %377 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %X_GRENZE.2 = select i1 %cond8147, {}* %377, {}* %.elt9162
  %378 = ptrtoint {}* %X_LISTE_ALLES.0 to i64
  %tag-only48338340 = and i64 %378, 7
  %consp-test4834 = icmp eq i64 %tag-only48338340, 3
  br i1 %consp-test4834, label %tag234, label %tag697

tag541:                                           ; preds = %header-check-br2891, %header-check-br2891, %header-check-br2891, %header-check-br2891
  %379 = ptrtoint {}* %1376 to i64
  %single-float-tag-only4835 = and i64 %379, 7
  %380 = icmp eq i64 %single-float-tag-only4835, 6
  br i1 %380, label %tag413, label %tag361

tag544:                                           ; preds = %tag297
  %381 = add i64 %1361, 7
  %382 = inttoptr i64 %381 to i64*
  %383 = load i64, i64* %382, align 8
  %"tag fixnum4836" = shl nuw i64 %383, 2
  %384 = inttoptr i64 %"tag fixnum4836" to {}*
  br label %tag717

tag546:                                           ; preds = %normal-dest5835
  %ptrtoint4838 = ptrtoint {}* %"closure->LAMBDA4881" to i64
  %tag-only4839 = and i64 %ptrtoint4838, 7
  %test4840 = icmp eq i64 %tag-only4839, 1
  br i1 %test4840, label %header-check-br4837, label %tag142

tag549:                                           ; preds = %normal-dest4119, %normal-dest3204, %header-check-br2145
  %G116829.0 = phi {}* [ %"closure->LAMBDA7765", %header-check-br2145 ], [ %G116829.1, %normal-dest3204 ], [ %G116829.2, %normal-dest4119 ]
  %ptrtoint4853 = ptrtoint {}* %G116829.0 to i64
  %entry-point-addr-uint4854 = add i64 %ptrtoint4853, 7
  %entry-point-addr4855 = inttoptr i64 %entry-point-addr-uint4854 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4856 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4855, align 8
  %385 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4856({}* %G116829.0, i64 1, {}* %OUT116756.0, {}* null, {}* null, {}* null)
          to label %normal-dest4859 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag550:                                           ; preds = %tag126
  %386 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 522), align 16
  %387 = invoke {}* @cc_safe_fdefinition({}* %386)
          to label %normal-dest4867 unwind label %cleanup-lpad.loopexit

tag551:                                           ; preds = %normal-dest7639, %tag830
  %X_ELEMENT1830.0 = phi {}* [ %575, %tag830 ], [ %X_ELEMENT1830.1, %normal-dest7639 ]
  %388 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA4881" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %388, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.18", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.18^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest4880 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag553:                                           ; preds = %normal-dest6615, %header-check-br2409, %normal-dest1806
  %G119117.0 = phi {}* [ %G119117.1, %normal-dest1806 ], [ %"closure->LAMBDA5936", %header-check-br2409 ], [ %G119117.2, %normal-dest6615 ]
  %389 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %390 = invoke {}* @cc_safe_symbol_value({}* %389)
          to label %normal-dest4887 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag555:                                           ; preds = %header-check-br4837, %normal-dest2569, %normal-dest1820
  %G118588.0 = phi {}* [ %G118588.1, %normal-dest1820 ], [ %G118588.2, %normal-dest2569 ], [ %"closure->LAMBDA4881", %header-check-br4837 ]
  %391 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %392 = invoke {}* @cc_safe_fdefinition({}* %391)
          to label %normal-dest4907 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag561:                                           ; preds = %tag791
  %trunc = trunc i64 %540 to i3
  switch i3 %trunc, label %tag105 [
    i3 -2, label %tag729
    i3 1, label %header-check-br2841
  ]

tag562:                                           ; preds = %tag562.preheader, %tag313.backedge
  %.val10340 = phi {}* [ %198, %tag313.backedge ], [ %599, %tag562.preheader ]
  %"%DOLIST-VAR1103.010565" = phi {}* [ %"%DOLIST-VAR1103.0.be", %tag313.backedge ], [ %vaarg898, %tag562.preheader ]
  %393 = ptrtoint {}* %"%DOLIST-VAR1103.010565" to i64
  %tag-only49768621 = and i64 %393, 7
  %consp-test4977 = icmp eq i64 %tag-only49768621, 3
  %.val10339 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G117944.0 = select i1 %consp-test4977, {}* %.val10339, {}* %.val10340
  %394 = icmp eq {}* %G117944.0, %.val10340
  br i1 %394, label %tag195, label %tag651

tag563:                                           ; preds = %tag32, %header-check-br7095
  %395 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %396 = invoke {}* @cc_safe_fdefinition({}* %395)
          to label %normal-dest4979 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag565:                                           ; preds = %header-check-br7359, %normal-dest6708, %normal-dest4334
  %G117512.0 = phi {}* [ %G117512.1, %normal-dest4334 ], [ %G117512.2, %normal-dest6708 ], [ %vaarg906, %header-check-br7359 ]
  %397 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 570), align 16
  %398 = invoke {}* @cc_safe_fdefinition({}* %397)
          to label %normal-dest4993 unwind label %cleanup-lpad.loopexit

tag566:                                           ; preds = %header-check-br7755, %normal-dest7447, %normal-dest3660
  %G119238.0 = phi {}* [ %G119238.1, %normal-dest3660 ], [ %G119238.2, %normal-dest7447 ], [ %"closure->LAMBDA6825", %header-check-br7755 ]
  %399 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %400 = invoke {}* @cc_safe_symbol_value({}* %399)
          to label %normal-dest5033 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag569:                                           ; preds = %tag268
  %401 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %402 = invoke {}* @cc_safe_fdefinition({}* %401)
          to label %normal-dest5069 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag572:                                           ; preds = %header-check-br5988, %normal-dest4014, %normal-dest1384
  %G119094.0 = phi {}* [ %G119094.1, %normal-dest1384 ], [ %G119094.2, %normal-dest4014 ], [ %"closure->LAMBDA5936", %header-check-br5988 ]
  %ptrtoint5099 = ptrtoint {}* %G119094.0 to i64
  %entry-point-addr-uint5100 = add i64 %ptrtoint5099, 7
  %entry-point-addr5101 = inttoptr i64 %entry-point-addr-uint5100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5101, align 8
  %403 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5102({}* %G119094.0, i64 2, {}* %G116514.0, {}* %zeilen-titel.0, {}* null, {}* null)
          to label %normal-dest5105 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag577:                                           ; preds = %header-check-br2035, %header-check-br2035, %header-check-br2035, %header-check-br2035
  %404 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 566), align 16
  %405 = invoke {}* @cc_safe_fdefinition({}* %404)
          to label %normal-dest5154 unwind label %cleanup-lpad.loopexit

tag580:                                           ; preds = %normal-dest1739, %tag580.outer
  br i1 %consp-test5173, label %tag25, label %tag63

tag583:                                           ; preds = %normal-dest4821
  %406 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %407 = invoke {}* @cc_safe_fdefinition({}* %406)
          to label %normal-dest5177 unwind label %cleanup-lpad.loopexit

tag584:                                           ; preds = %header-check-br5091, %header-check-br5091, %header-check-br5091, %header-check-br5091
  %408 = ptrtoint {}* %673 to i64
  %single-float-tag-only5200 = and i64 %408, 7
  %409 = icmp eq i64 %single-float-tag-only5200, 6
  br i1 %409, label %tag395, label %tag600

tag589:                                           ; preds = %normal-dest6680, %header-check-br2575, %normal-dest2092
  %G117333.0 = phi {}* [ %G117333.1, %normal-dest2092 ], [ %vaarg906, %header-check-br2575 ], [ %G117333.2, %normal-dest6680 ]
  %410 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 570), align 16
  %411 = invoke {}* @cc_safe_fdefinition({}* %410)
          to label %normal-dest5202 unwind label %cleanup-lpad.loopexit

tag593:                                           ; preds = %header-check-br4595, %header-check-br4595, %header-check-br4595, %header-check-br4595
  %412 = ptrtoint {}* %2116 to i64
  %single-float-tag-only5241 = and i64 %412, 7
  %fixnum-tag-only24188762 = and i64 %412, 3
  %fixnump-test2419 = icmp ne i64 %fixnum-tag-only24188762, 0
  %test6074 = icmp eq i64 %single-float-tag-only5241, 1
  %or.cond10276 = and i1 %fixnump-test2419, %test6074
  br i1 %or.cond10276, label %header-check-br6071, label %tag890

tag599:                                           ; preds = %tag111, %header-check-br5137
  %413 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %414 = invoke {}* @cc_safe_fdefinition({}* %413)
          to label %normal-dest5264 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag600:                                           ; preds = %tag584
  %fixnum-tag-only52778970 = and i64 %408, 3
  %fixnump-test5278 = icmp ne i64 %fixnum-tag-only52778970, 0
  %test1487 = icmp eq i64 %single-float-tag-only5200, 1
  %or.cond10264 = and i1 %fixnump-test5278, %test1487
  br i1 %or.cond10264, label %header-check-br1484, label %tag395

tag602:                                           ; preds = %tag122, %header-check-br4793
  %415 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %416 = invoke {}* @cc_safe_fdefinition({}* %415)
          to label %normal-dest5280 unwind label %cleanup-lpad.loopexit

tag603:                                           ; preds = %normal-dest6162, %header-check-br5997, %normal-dest947
  %G118054.0 = phi {}* [ %G118054.1, %normal-dest947 ], [ %"closure->LAMBDA7791", %header-check-br5997 ], [ %G118054.2, %normal-dest6162 ]
  %417 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %418 = invoke {}* @cc_safe_fdefinition({}* %417)
          to label %normal-dest5294 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag605:                                           ; preds = %tag767, %normal-dest3303, %tag101, %tag396
  %LAENGE.0 = phi {}* [ %284, %tag396 ], [ null, %tag101 ], [ %LAENGE.2, %normal-dest3303 ], [ %LENGTH3508.0.ph, %tag767 ]
  %419 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 509), align 8
  %420 = invoke {}* @cc_safe_fdefinition({}* %419)
          to label %normal-dest5346 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag607:                                           ; preds = %normal-dest4626, %header-check-br4481, %normal-dest1652
  %G118009.0 = phi {}* [ %G118009.1, %normal-dest1652 ], [ %"closure->LAMBDA2833", %header-check-br4481 ], [ %G118009.2, %normal-dest4626 ]
  %421 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %422 = invoke {}* @cc_safe_symbol_value({}* %421)
          to label %normal-dest5360 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag613:                                           ; preds = %normal-dest2694
  %423 = icmp eq {}* %stream.0, %.val10350
  %G117267.0 = select i1 %423, {}* %1045, {}* %.val10350
  %424 = icmp eq {}* %G117267.0, %.val10350
  br i1 %424, label %tag535, label %tag225

tag615:                                           ; preds = %normal-dest5257, %header-check-br3705, %normal-dest3396
  %G117317.0 = phi {}* [ %G117317.1, %normal-dest3396 ], [ %vaarg906, %header-check-br3705 ], [ %G117317.2, %normal-dest5257 ]
  %ptrtoint5392 = ptrtoint {}* %G117317.0 to i64
  %entry-point-addr-uint5393 = add i64 %ptrtoint5392, 7
  %entry-point-addr5394 = inttoptr i64 %entry-point-addr-uint5393 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5395 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5394, align 8
  %425 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5395({}* %G117317.0, i64 3, {}* %vaarg, {}* %Y_ELEMENT.0, {}* %X_ELEMENT.0, {}* null)
          to label %tag244 unwind label %cleanup-lpad.loopexit

tag618:                                           ; preds = %normal-dest5656, %header-check-br5569, %normal-dest2708
  %G117834.0 = phi {}* [ %G117834.1, %normal-dest2708 ], [ %"closure->LAMBDA4828", %header-check-br5569 ], [ %G117834.2, %normal-dest5656 ]
  %426 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %427 = invoke {}* @cc_safe_symbol_value({}* %426)
          to label %normal-dest5405 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag620:                                           ; preds = %tag56, %header-check-br7566
  %428 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %429 = invoke {}* @cc_safe_fdefinition({}* %428)
          to label %normal-dest5455 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag626:                                           ; preds = %normal-dest1206
  %ptrtoint5481 = ptrtoint {}* %"closure->LAMBDA7765" to i64
  %tag-only5482 = and i64 %ptrtoint5481, 7
  %test5483 = icmp eq i64 %tag-only5482, 1
  br i1 %test5483, label %header-check-br5480, label %tag700

tag629:                                           ; preds = %header-check-br7589, %normal-dest7353, %normal-dest3944
  %G118817.0 = phi {}* [ %G118817.1, %normal-dest3944 ], [ %G118817.2, %normal-dest7353 ], [ %"closure->LAMBDA5775", %header-check-br7589 ]
  %430 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %431 = invoke {}* @cc_safe_fdefinition({}* %430)
          to label %normal-dest5494 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag630:                                           ; preds = %tag351
  %432 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 299), align 8
  %433 = invoke {}* @cc_safe_fdefinition({}* %432)
          to label %normal-dest5533 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag633:                                           ; preds = %tag797
  %434 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %435 = invoke {}* @cc_safe_fdefinition({}* %434)
          to label %normal-dest5546 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag637:                                           ; preds = %normal-dest4827
  %ptrtoint5570 = ptrtoint {}* %"closure->LAMBDA4828" to i64
  %tag-only5571 = and i64 %ptrtoint5570, 7
  %test5572 = icmp eq i64 %tag-only5571, 1
  br i1 %test5572, label %header-check-br5569, label %tag649

tag640:                                           ; preds = %tag124
  %436 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %437 = invoke {}* @cc_safe_fdefinition({}* %436)
          to label %normal-dest5607 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag649:                                           ; preds = %tag637, %header-check-br1775
  %438 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %439 = invoke {}* @cc_safe_fdefinition({}* %438)
          to label %normal-dest5649 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag651:                                           ; preds = %tag562
  %440 = add i64 %393, -3
  %441 = inttoptr i64 %440 to {}**
  %442 = load {}*, {}** %441, align 8
  br label %tag538

tag652:                                           ; preds = %normal-dest6549, %normal-dest4398, %header-check-br2122
  %G117039.0 = phi {}* [ %"closure->LAMBDA2636", %header-check-br2122 ], [ %G117039.1, %normal-dest4398 ], [ %G117039.2, %normal-dest6549 ]
  %ptrtoint5662 = ptrtoint {}* %G117039.0 to i64
  %entry-point-addr-uint5663 = add i64 %ptrtoint5662, 7
  %entry-point-addr5664 = inttoptr i64 %entry-point-addr-uint5663 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5665 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5664, align 8
  %443 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5665({}* %G117039.0, i64 1, {}* %G116747.0, {}* null, {}* null, {}* null)
          to label %normal-dest5668 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag653:                                           ; preds = %header-check-br5191, %normal-dest3559, %normal-dest3517
  %G117226.0 = phi {}* [ %G117226.1, %normal-dest3517 ], [ %G117226.2, %normal-dest3559 ], [ %"closure->LAMBDA2695", %header-check-br5191 ]
  %ptrtoint5686 = ptrtoint {}* %G117226.0 to i64
  %entry-point-addr-uint5687 = add i64 %ptrtoint5686, 7
  %entry-point-addr5688 = inttoptr i64 %entry-point-addr-uint5687 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5689 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5688, align 8
  %444 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5689({}* %G117226.0, i64 1, {}* %OUT1167115185.0, {}* null, {}* null, {}* null)
          to label %tag346 unwind label %cleanup-lpad.loopexit

tag656:                                           ; preds = %header-check-br5818, %normal-dest5131, %normal-dest2234
  %G119412.0 = phi {}* [ %G119412.1, %normal-dest2234 ], [ %G119412.2, %normal-dest5131 ], [ %"closure->LAMBDA7659", %header-check-br5818 ]
  %ptrtoint5711 = ptrtoint {}* %G119412.0 to i64
  %entry-point-addr-uint5712 = add i64 %ptrtoint5711, 7
  %entry-point-addr5713 = inttoptr i64 %entry-point-addr-uint5712 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5714 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5713, align 8
  %445 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5714({}* %G119412.0, i64 2, {}* %G116475.0, {}* %tabellen-titel.0, {}* null, {}* null)
          to label %normal-dest5717 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag657:                                           ; preds = %tag357, %header-check-br6175
  %446 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %447 = invoke {}* @cc_safe_fdefinition({}* %446)
          to label %normal-dest5736 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag658:                                           ; preds = %header-check-br6448, %normal-dest4466, %normal-dest2185
  %G118482.0 = phi {}* [ %G118482.1, %normal-dest2185 ], [ %G118482.2, %normal-dest4466 ], [ %"closure->LAMBDA", %header-check-br6448 ]
  %ptrtoint5749 = ptrtoint {}* %G118482.0 to i64
  %entry-point-addr-uint5750 = add i64 %ptrtoint5749, 7
  %entry-point-addr5751 = inttoptr i64 %entry-point-addr-uint5750 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5752 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5751, align 8
  %448 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5752({}* %G118482.0, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %tag766 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag660:                                           ; preds = %tag234
  %449 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 324), align 16
  %450 = invoke {}* @cc_safe_fdefinition({}* %449)
          to label %normal-dest5761 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag661:                                           ; preds = %normal-dest7173
  %451 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %452 = invoke {}* @cc_safe_fdefinition({}* %451)
          to label %normal-dest5781 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag662:                                           ; preds = %tag481
  %453 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %454 = invoke {}* @cc_safe_fdefinition({}* %453)
          to label %normal-dest5805 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag663:                                           ; preds = %tag504
  %455 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %456 = invoke {}* @cc_safe_fdefinition({}* %455)
          to label %normal-dest5828 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag667:                                           ; preds = %normal-dest6120, %header-check-br5480, %normal-dest4059
  %G116814.0 = phi {}* [ %G116814.1, %normal-dest4059 ], [ %"closure->LAMBDA7765", %header-check-br5480 ], [ %G116814.2, %normal-dest6120 ]
  %ptrtoint5841 = ptrtoint {}* %G116814.0 to i64
  %entry-point-addr-uint5842 = add i64 %ptrtoint5841, 7
  %entry-point-addr5843 = inttoptr i64 %entry-point-addr-uint5842 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5844 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5843, align 8
  %457 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5844({}* %G116814.0, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest5847 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag670:                                           ; preds = %tag413, %header-check-br6411
  %458 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %459 = invoke {}* @cc_safe_fdefinition({}* %458)
          to label %normal-dest5871 unwind label %cleanup-lpad.loopexit

tag672:                                           ; preds = %normal-dest3236, %header-check-br6936
  %460 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %461 = invoke {}* @cc_safe_fdefinition({}* %460)
          to label %normal-dest5885 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag674:                                           ; preds = %tag890, %header-check-br3379
  %462 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %463 = invoke {}* @cc_safe_fdefinition({}* %462)
          to label %normal-dest5899 unwind label %cleanup-lpad.loopexit

tag677:                                           ; preds = %normal-dest1347, %header-check-br3840
  %464 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %465 = invoke {}* @cc_safe_fdefinition({}* %464)
          to label %normal-dest5913 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag681:                                           ; preds = %normal-dest2820, %normal-dest7918, %normal-dest5042, %normal-dest4441
  %466 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA5936" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %466, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.24", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.24^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest5935 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag684:                                           ; preds = %tag473, %header-check-br6739
  %467 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %468 = invoke {}* @cc_safe_fdefinition({}* %467)
          to label %normal-dest5958 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag685:                                           ; preds = %normal-dest1867, %normal-dest4928, %normal-dest4286, %normal-dest2331
  br i1 %consp-test7406, label %tag242, label %tag826

tag686:                                           ; preds = %tag85
  %469 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %470 = invoke {}* @cc_safe_fdefinition({}* %469)
          to label %normal-dest5975 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag687:                                           ; preds = %normal-dest3871
  %ptrtoint5998 = ptrtoint {}* %"closure->LAMBDA7791" to i64
  %tag-only5999 = and i64 %ptrtoint5998, 7
  %test6000 = icmp eq i64 %tag-only5999, 1
  br i1 %test6000, label %header-check-br5997, label %tag704

tag688:                                           ; preds = %normal-dest6086, %normal-dest5878, %header-check-br3799
  %G117496.0 = phi {}* [ %vaarg906, %header-check-br3799 ], [ %G117496.1, %normal-dest5878 ], [ %G117496.2, %normal-dest6086 ]
  %ptrtoint6006 = ptrtoint {}* %G117496.0 to i64
  %entry-point-addr-uint6007 = add i64 %ptrtoint6006, 7
  %entry-point-addr6008 = inttoptr i64 %entry-point-addr-uint6007 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6009 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6008, align 8
  %471 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6009({}* %G117496.0, i64 3, {}* %vaarg, {}* %Y_ELEMENT.0, {}* %X_ELEMENT.0, {}* null)
          to label %tag126 unwind label %cleanup-lpad.loopexit

tag689:                                           ; preds = %header-check-br7823, %normal-dest7231, %normal-dest3930
  %G118794.0 = phi {}* [ %G118794.1, %normal-dest3930 ], [ %G118794.2, %normal-dest7231 ], [ %"closure->LAMBDA5775", %header-check-br7823 ]
  %472 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %473 = invoke {}* @cc_safe_fdefinition({}* %472)
          to label %normal-dest6019 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag692:                                           ; preds = %normal-dest2546, %header-check-br1031
  %474 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %475 = invoke {}* @cc_safe_fdefinition({}* %474)
          to label %normal-dest6058 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag696:                                           ; preds = %tag68
  %476 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %477 = invoke {}* @cc_safe_fdefinition({}* %476)
          to label %normal-dest6093 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag697:                                           ; preds = %tag539
  %478 = icmp eq {}* %X_LISTE_ALLES.0, %377
  %.val10296 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116917.0 = select i1 %478, {}* %.val10296, {}* %377
  %479 = icmp eq {}* %G116917.0, %377
  br i1 %479, label %tag703, label %tag234

tag700:                                           ; preds = %tag626, %header-check-br1926
  %480 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %481 = invoke {}* @cc_safe_fdefinition({}* %480)
          to label %normal-dest6113 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag703:                                           ; preds = %tag697
  %482 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %483 = invoke {}* @cc_safe_fdefinition({}* %482)
          to label %normal-dest6141 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag704:                                           ; preds = %tag687, %header-check-br4472
  %484 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %485 = invoke {}* @cc_safe_fdefinition({}* %484)
          to label %normal-dest6155 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag709:                                           ; preds = %normal-dest4426, %header-check-br3899, %normal-dest3431
  %G117145.0 = phi {}* [ %G117145.1, %normal-dest3431 ], [ %"closure->LAMBDA3275", %header-check-br3899 ], [ %G117145.2, %normal-dest4426 ]
  %ptrtoint6198 = ptrtoint {}* %G117145.0 to i64
  %entry-point-addr-uint6199 = add i64 %ptrtoint6198, 7
  %entry-point-addr6200 = inttoptr i64 %entry-point-addr-uint6199 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6201 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6200, align 8
  %486 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6201({}* %G117145.0, i64 1, {}* %G116732.0, {}* null, {}* null, {}* null)
          to label %normal-dest6204 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag711:                                           ; preds = %tag344
  %487 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %488 = invoke {}* @cc_safe_fdefinition({}* %487)
          to label %normal-dest6237 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag714:                                           ; preds = %normal-dest7549, %header-check-br5560, %normal-dest3474
  %G118357.0 = phi {}* [ %G118357.1, %normal-dest3474 ], [ %"closure->LAMBDA6916", %header-check-br5560 ], [ %G118357.2, %normal-dest7549 ]
  %489 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %490 = invoke {}* @cc_safe_fdefinition({}* %489)
          to label %normal-dest6251 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag716:                                           ; preds = %normal-dest4348, %header-check-br3602, %normal-dest2869
  %G117167.0 = phi {}* [ %G117167.1, %normal-dest2869 ], [ %"closure->LAMBDA3275", %header-check-br3602 ], [ %G117167.2, %normal-dest4348 ]
  %491 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %492 = invoke {}* @cc_safe_symbol_value({}* %491)
          to label %normal-dest6305 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag717:                                           ; preds = %tag351, %normal-dest3502, %tag167, %tag544
  %LAENGE.1 = phi {}* [ %384, %tag544 ], [ null, %tag167 ], [ %LAENGE.3, %normal-dest3502 ], [ %LENGTH.0.ph, %tag351 ]
  %493 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 509), align 8
  %494 = invoke {}* @cc_safe_fdefinition({}* %493)
          to label %normal-dest6318 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag719:                                           ; preds = %header-check-br7887, %normal-dest4640, %normal-dest2050
  %G118131.0 = phi {}* [ %G118131.1, %normal-dest2050 ], [ %G118131.2, %normal-dest4640 ], [ %"closure->LAMBDA7791", %header-check-br7887 ]
  %495 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %496 = invoke {}* @cc_safe_fdefinition({}* %495)
          to label %normal-dest6333 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag724:                                           ; preds = %normal-dest5788, %header-check-br5926
  %497 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %498 = invoke {}* @cc_safe_fdefinition({}* %497)
          to label %normal-dest6421 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag726:                                           ; preds = %normal-dest6244
  %ptrtoint6449 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only6450 = and i64 %ptrtoint6449, 7
  %test6451 = icmp eq i64 %tag-only6450, 1
  br i1 %test6451, label %header-check-br6448, label %tag488

tag729:                                           ; preds = %tag561
  %499 = icmp eq i64 %tag-only3024, 6
  br i1 %499, label %tag794, label %tag105

tag730:                                           ; preds = %normal-dest6535, %normal-dest4384, %header-check-br2376
  %G117273.0 = phi {}* [ %"closure->LAMBDA2695", %header-check-br2376 ], [ %G117273.1, %normal-dest4384 ], [ %G117273.2, %normal-dest6535 ]
  %500 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %501 = invoke {}* @cc_safe_symbol_value({}* %500)
          to label %normal-dest6473 unwind label %cleanup-lpad.loopexit

tag731:                                           ; preds = %tag376
  br i1 %test3708, label %header-check-br6485, label %tag302

tag732:                                           ; preds = %normal-dest4202
  %502 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %503 = invoke {}* @cc_safe_fdefinition({}* %502)
          to label %normal-dest6495 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag733:                                           ; preds = %normal-dest2635
  %ptrtoint6519 = ptrtoint {}* %"closure->LAMBDA2636" to i64
  %tag-only6520 = and i64 %ptrtoint6519, 7
  %test6521 = icmp eq i64 %tag-only6520, 1
  br i1 %test6521, label %header-check-br6518, label %tag13

tag734:                                           ; preds = %tag207, %header-check-br3997
  %504 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %505 = invoke {}* @cc_safe_fdefinition({}* %504)
          to label %normal-dest6528 unwind label %cleanup-lpad.loopexit

tag735:                                           ; preds = %normal-dest2115, %header-check-br982
  %506 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %507 = invoke {}* @cc_safe_fdefinition({}* %506)
          to label %normal-dest6542 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag740:                                           ; preds = %header-check-br6485, %normal-dest6192, %normal-dest3162
  %G117417.0 = phi {}* [ %G117417.1, %normal-dest3162 ], [ %G117417.2, %normal-dest6192 ], [ %vaarg906, %header-check-br6485 ]
  %508 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 570), align 16
  %509 = invoke {}* @cc_safe_fdefinition({}* %508)
          to label %normal-dest6558 unwind label %cleanup-lpad.loopexit

tag741:                                           ; preds = %normal-dest5533, %tag741.outer
  br i1 %consp-test6599, label %tag783, label %tag268

tag744:                                           ; preds = %tag211, %header-check-br7608
  %510 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %511 = invoke {}* @cc_safe_fdefinition({}* %510)
          to label %normal-dest6608 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag745:                                           ; preds = %tag774
  %512 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %532, i64 4)
  %result6621 = extractvalue { i64, i1 } %512, 0
  %overflow6622 = extractvalue { i64, i1 } %512, 1
  %513 = inttoptr i64 %result6621 to {}*
  br i1 %overflow6622, label %tag404, label %tag741.outer.backedge

tag741.outer.backedge:                            ; preds = %tag745, %normal-dest3745, %normal-dest4028
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest4028 ], [ %LENGTH.1, %normal-dest3745 ], [ %513, %tag745 ]
  br label %tag741.outer

tag746:                                           ; preds = %normal-dest2249, %tag244
  %G117307.0 = phi {}* [ %X_PUNKTE_STRING.0, %tag244 ], [ %G117307.1, %normal-dest2249 ]
  %ptrtoint6623 = ptrtoint {}* %672 to i64
  %entry-point-addr-uint6624 = add i64 %ptrtoint6623, 7
  %entry-point-addr6625 = inttoptr i64 %entry-point-addr-uint6624 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6626 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6625, align 8
  %514 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6626({}* %672, i64 2, {}* %G117307.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest6629 unwind label %cleanup-lpad.loopexit

tag750:                                           ; preds = %tag815, %header-check-br4233
  %515 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %516 = invoke {}* @cc_safe_fdefinition({}* %515)
          to label %normal-dest6701 unwind label %cleanup-lpad.loopexit

tag751:                                           ; preds = %header-check-br7689, %normal-dest7385, %normal-dest1540
  %G117948.0 = phi {}* [ %G117948.1, %normal-dest1540 ], [ %G117948.2, %normal-dest7385 ], [ %"closure->LAMBDA2833", %header-check-br7689 ]
  %ptrtoint6714 = ptrtoint {}* %G117948.0 to i64
  %entry-point-addr-uint6715 = add i64 %ptrtoint6714, 7
  %entry-point-addr6716 = inttoptr i64 %entry-point-addr-uint6715 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6717 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6716, align 8
  %517 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6717({}* %G117948.0, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %tag863 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag755:                                           ; preds = %normal-dest4827
  %518 = icmp eq {}* %stream.0, %.val10342
  %G117828.0 = select i1 %518, {}* %1550, {}* %.val10342
  %519 = icmp eq {}* %G117828.0, %.val10342
  br i1 %519, label %tag798, label %tag227

tag757:                                           ; preds = %normal-dest1549, %tag878, %tag795, %normal-dest5723
  %520 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 215), align 8
  %521 = invoke {}* @cc_safe_fdefinition({}* %520)
          to label %normal-dest6755 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag762:                                           ; preds = %normal-dest7470, %tag33
  %G117578.0 = phi {}* [ %X_PUNKTE_STRING.0, %tag33 ], [ %G117578.1, %normal-dest7470 ]
  %ptrtoint6833 = ptrtoint {}* %2115 to i64
  %entry-point-addr-uint6834 = add i64 %ptrtoint6833, 7
  %entry-point-addr6835 = inttoptr i64 %entry-point-addr-uint6834 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6836 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6835, align 8
  %522 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6836({}* %2115, i64 2, {}* %G117578.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest6839 unwind label %cleanup-lpad.loopexit

tag763:                                           ; preds = %normal-dest6244
  %523 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %524 = invoke {}* @cc_safe_fdefinition({}* %523)
          to label %normal-dest6869 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag765:                                           ; preds = %tag266
  %525 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %526 = invoke {}* @cc_safe_fdefinition({}* %525)
          to label %normal-dest6893 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag766:                                           ; preds = %normal-dest2773, %tag840, %normal-dest7520, %tag658
  %527 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA6916" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %527, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.28", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.28^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest6915 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag767:                                           ; preds = %tag102
  %528 = icmp eq {}* %G2095854.0, %.val10295
  %G119002.0 = select i1 %528, {}* %.val10292, {}* %.val10295
  %529 = icmp eq {}* %G119002.0, %.val10295
  br i1 %529, label %tag130, label %tag605

tag770:                                           ; preds = %normal-dest7426
  br i1 %brmerge10567, label %tag890, label %header-check-br4595

tag771:                                           ; preds = %tag408
  %530 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %531 = invoke {}* @cc_safe_fdefinition({}* %530)
          to label %normal-dest4543 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag774:                                           ; preds = %tag157
  %532 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only69349152 = and i64 %532, 3
  %fixnump-test6935 = icmp eq i64 %fixnum-tag-only69349152, 0
  br i1 %fixnump-test6935, label %tag745, label %tag440

tag776:                                           ; preds = %normal-dest7784, %normal-dest6065, %header-check-br2552
  %G117803.0 = phi {}* [ %"closure->LAMBDA4828", %header-check-br2552 ], [ %G117803.1, %normal-dest6065 ], [ %G117803.2, %normal-dest7784 ]
  %533 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %534 = invoke {}* @cc_safe_fdefinition({}* %533)
          to label %normal-dest6946 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag779:                                           ; preds = %tag226, %normal-dest5111, %normal-dest4887, %tag521
  %535 = ptrtoint {}* %vaarg902 to i64
  %tag-only69998324 = and i64 %535, 7
  %consp-test7000 = icmp eq i64 %tag-only69998324, 3
  %.val = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val10289 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119050.0 = select i1 %consp-test7000, {}* %.val, {}* %.val10289
  %536 = icmp eq {}* %G119050.0, %.val10289
  br i1 %536, label %tag529, label %tag580.outer.preheader

tag580.outer.preheader:                           ; preds = %tag779
  br label %tag580.outer

tag783:                                           ; preds = %tag741
  %537 = load {}*, {}** %68, align 8
  %.val10426.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag157

tag784:                                           ; preds = %normal-dest2766, %header-check-br2743, %normal-dest1370
  %G118087.0 = phi {}* [ %G118087.1, %normal-dest1370 ], [ %"closure->LAMBDA7791", %header-check-br2743 ], [ %G118087.2, %normal-dest2766 ]
  %538 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %539 = invoke {}* @cc_safe_fdefinition({}* %538)
          to label %normal-dest7002 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag791:                                           ; preds = %switch.early.test, %switch.early.test, %header-check-br3723, %header-check-br3022, %header-check-br3022, %tag461
  %540 = ptrtoint {}* %seiten-breite.0 to i64
  %fixnum-tag-only71048267 = and i64 %540, 3
  %fixnump-test7105 = icmp eq i64 %fixnum-tag-only71048267, 0
  br i1 %fixnump-test7105, label %tag87, label %tag561

tag794:                                           ; preds = %tag729
  %541 = invoke float @from_object_float({}* %seiten-breite.0)
          to label %normal-dest7106 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag795:                                           ; preds = %normal-dest7061, %normal-dest2929, %header-check-br
  %G119371.0 = phi {}* [ %"closure->LAMBDA7659", %header-check-br ], [ %G119371.1, %normal-dest2929 ], [ %G119371.2, %normal-dest7061 ]
  %ptrtoint7109 = ptrtoint {}* %G119371.0 to i64
  %entry-point-addr-uint7110 = add i64 %ptrtoint7109, 7
  %entry-point-addr7111 = inttoptr i64 %entry-point-addr-uint7110 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7112 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7111, align 8
  %542 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7112({}* %G119371.0, i64 2, {}* %stream.0, {}* %tabellen-titel.0, {}* null, {}* null)
          to label %tag757 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag796:                                           ; preds = %normal-dest5586, %header-check-br4707, %normal-dest1906
  %G117746.0 = phi {}* [ %G117746.1, %normal-dest1906 ], [ %"closure->LAMBDA4828", %header-check-br4707 ], [ %G117746.2, %normal-dest5586 ]
  %543 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %544 = invoke {}* @cc_safe_fdefinition({}* %543)
          to label %normal-dest7121 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag797:                                           ; preds = %normal-dest6915
  %545 = icmp eq {}* %stream.0, %.val10320
  %G118382.0 = select i1 %545, {}* %2002, {}* %.val10320
  %546 = icmp eq {}* %G118382.0, %.val10320
  br i1 %546, label %tag38, label %tag633

tag798:                                           ; preds = %tag755
  %547 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %548 = invoke {}* @cc_safe_fdefinition({}* %547)
          to label %normal-dest7166 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag799:                                           ; preds = %normal-dest4580, %header-check-br2191
  %549 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %550 = invoke {}* @cc_safe_fdefinition({}* %549)
          to label %normal-dest7180 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag804:                                           ; preds = %switch.early.test, %tag461
  %551 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %552 = invoke {}* @cc_safe_fdefinition({}* %551)
          to label %normal-dest7208 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag808:                                           ; preds = %normal-dest4874, %tag126
  %G117486.0 = phi {}* [ %X_PUNKTE_STRING.0, %tag126 ], [ %G117486.1, %normal-dest4874 ]
  %ptrtoint7237 = ptrtoint {}* %1375 to i64
  %entry-point-addr-uint7238 = add i64 %ptrtoint7237, 7
  %entry-point-addr7239 = inttoptr i64 %entry-point-addr-uint7238 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7240 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7239, align 8
  %553 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7240({}* %1375, i64 2, {}* %G117486.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest7243 unwind label %cleanup-lpad.loopexit

tag810:                                           ; preds = %normal-dest6428, %normal-dest5951, %header-check-br5795
  %G117769.0 = phi {}* [ %"closure->LAMBDA4828", %header-check-br5795 ], [ %G117769.1, %normal-dest5951 ], [ %G117769.2, %normal-dest6428 ]
  %554 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %555 = invoke {}* @cc_safe_fdefinition({}* %554)
          to label %normal-dest7293 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag811:                                           ; preds = %tag315
  %556 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %557 = invoke {}* @cc_safe_fdefinition({}* %556)
          to label %normal-dest7332 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag812:                                           ; preds = %normal-dest7583, %header-check-br2935
  %558 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %559 = invoke {}* @cc_safe_fdefinition({}* %558)
          to label %normal-dest7346 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag814:                                           ; preds = %tag294, %header-check-br5639, %normal-dest4250
  %.pre10583 = phi {}* [ %1359, %tag294 ], [ %1359, %header-check-br5639 ], [ %1407, %normal-dest4250 ]
  br label %tag297

tag815:                                           ; preds = %tag354
  br i1 %test3708, label %header-check-br7359, label %tag750

tag817:                                           ; preds = %tag856, %header-check-br5082
  %560 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %561 = invoke {}* @cc_safe_fdefinition({}* %560)
          to label %normal-dest7378 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag821:                                           ; preds = %normal-dest4135
  br i1 %brmerge10567, label %tag413, label %header-check-br2891

tag822:                                           ; preds = %tag822.preheader, %tag28.backedge
  %.val10303 = phi {}* [ %742, %tag28.backedge ], [ %145, %tag822.preheader ]
  %"%DOLIST-VAR1077.010562" = phi {}* [ %"%DOLIST-VAR1077.0.be", %tag28.backedge ], [ %X_TEILLISTE.0, %tag822.preheader ]
  %562 = ptrtoint {}* %"%DOLIST-VAR1077.010562" to i64
  %tag-only74058361 = and i64 %562, 7
  %consp-test7406 = icmp eq i64 %tag-only74058361, 3
  %.val10302 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G118790.0 = select i1 %consp-test7406, {}* %.val10302, {}* %.val10303
  %563 = icmp eq {}* %G118790.0, %.val10303
  br i1 %563, label %tag850, label %tag830

tag823:                                           ; preds = %normal-dest4073, %header-check-br3831
  %564 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %565 = invoke {}* @cc_safe_fdefinition({}* %564)
          to label %normal-dest7408 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag824:                                           ; preds = %normal-dest5705, %normal-dest5287, %header-check-br1674
  %G117571.0 = phi {}* [ %"closure->LAMBDA3566", %header-check-br1674 ], [ %G117571.1, %normal-dest5287 ], [ %G117571.2, %normal-dest5705 ]
  %566 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 147), align 8
  %567 = invoke {}* @cc_safe_symbol_value({}* %566)
          to label %normal-dest7422 unwind label %cleanup-lpad.loopexit

tag826:                                           ; preds = %tag685
  %568 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %569 = icmp eq {}* %"%DOLIST-VAR1077.010562", %568
  %.val10306 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G118581.0 = select i1 %569, {}* %.val10306, {}* %568
  %570 = icmp eq {}* %G118581.0, %568
  br i1 %570, label %tag69, label %tag173

tag829:                                           ; preds = %tag33
  %571 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 522), align 16
  %572 = invoke {}* @cc_safe_fdefinition({}* %571)
          to label %normal-dest7463 unwind label %cleanup-lpad.loopexit

tag830:                                           ; preds = %tag822
  %573 = add i64 %562, -3
  %574 = inttoptr i64 %573 to {}**
  %575 = load {}*, {}** %574, align 8
  br label %tag551

tag831:                                           ; preds = %normal-dest7625
  %576 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %577 = invoke {}* @cc_safe_fdefinition({}* %576)
          to label %normal-dest7477 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag834:                                           ; preds = %normal-dest4964, %header-check-br1980, %normal-dest1732
  %G118521.0 = phi {}* [ %G118521.1, %normal-dest1732 ], [ %"closure->LAMBDA", %header-check-br1980 ], [ %G118521.2, %normal-dest4964 ]
  %ptrtoint7508 = ptrtoint {}* %G118521.0 to i64
  %entry-point-addr-uint7509 = add i64 %ptrtoint7508, 7
  %entry-point-addr7510 = inttoptr i64 %entry-point-addr-uint7509 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7511 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7510, align 8
  %578 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7511({}* %G118521.0, i64 1, {}* %G116573.0, {}* null, {}* null, {}* null)
          to label %normal-dest7514 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag837:                                           ; preds = %normal-dest4821
  %ptrtoint7533 = ptrtoint {}* %"closure->LAMBDA2695" to i64
  %tag-only7534 = and i64 %ptrtoint7533, 7
  %test7535 = icmp eq i64 %tag-only7534, 1
  br i1 %test7535, label %header-check-br7532, label %tag296

tag840:                                           ; preds = %header-check-br6883, %normal-dest3699, %normal-dest3531
  %G118496.0 = phi {}* [ %G118496.1, %normal-dest3531 ], [ %G118496.2, %normal-dest3699 ], [ %"closure->LAMBDA", %header-check-br6883 ]
  %ptrtoint7555 = ptrtoint {}* %G118496.0 to i64
  %entry-point-addr-uint7556 = add i64 %ptrtoint7555, 7
  %entry-point-addr7557 = inttoptr i64 %entry-point-addr-uint7556 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7558 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7557, align 8
  %579 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7558({}* %G118496.0, i64 1, {}* %OUT1165676877.0, {}* null, {}* null, {}* null)
          to label %tag766 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag842:                                           ; preds = %normal-dest6100
  %580 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %581 = invoke {}* @cc_safe_fdefinition({}* %580)
          to label %normal-dest7576 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag845:                                           ; preds = %normal-dest2468
  %ptrtoint7600 = ptrtoint {}* %"closure->LAMBDA3566" to i64
  %tag-only7601 = and i64 %ptrtoint7600, 7
  %test7602 = icmp eq i64 %tag-only7601, 1
  br i1 %test7602, label %header-check-br7599, label %tag348

tag848:                                           ; preds = %tag266
  %582 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 397), align 8
  %583 = invoke {}* @cc_safe_fdefinition({}* %582)
          to label %normal-dest7618 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag850:                                           ; preds = %tag822
  %584 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %585 = invoke {}* @cc_safe_fdefinition({}* %584)
          to label %normal-dest7632 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag580.outer:                                     ; preds = %tag580.outer.backedge, %tag580.outer.preheader
  %LENGTH3508.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag580.outer.preheader ], [ %LENGTH3508.0.ph.be, %tag580.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %vaarg902, %tag580.outer.preheader ], [ %G2095854.0, %tag580.outer.backedge ]
  %586 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only51728325 = and i64 %586, 7
  %consp-test5173 = icmp eq i64 %tag-only51728325, 3
  %587 = add i64 %586, 5
  %588 = inttoptr i64 %587 to {}**
  br label %tag580

tag852:                                           ; preds = %normal-dest7107, %normal-dest3759, %normal-dest3103, %normal-dest1570, %tag388
  %G119528.0 = phi {}* [ %275, %tag388 ], [ %G119528.1, %normal-dest1570 ], [ %1137, %normal-dest3103 ], [ %G119528.2, %normal-dest3759 ], [ %2045, %normal-dest7107 ]
  %ptrtoint7646 = ptrtoint {}* %306 to i64
  %entry-point-addr-uint7647 = add i64 %ptrtoint7646, 7
  %entry-point-addr7648 = inttoptr i64 %entry-point-addr-uint7647 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7649 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7648, align 8
  %589 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7649({}* %306, i64 2, {}* %G119528.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest7652 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag854:                                           ; preds = %normal-dest5835
  %590 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 474), align 16
  %591 = invoke {}* @cc_safe_fdefinition({}* %590)
          to label %normal-dest7667 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag856:                                           ; preds = %normal-dest7625
  %ptrtoint7690 = ptrtoint {}* %"closure->LAMBDA2833" to i64
  %tag-only7691 = and i64 %ptrtoint7690, 7
  %test7692 = icmp eq i64 %tag-only7691, 1
  br i1 %test7692, label %header-check-br7689, label %tag817

tag857:                                           ; preds = %header-check-br3288, %header-check-br3288, %header-check-br3288, %header-check-br3288
  %592 = ptrtoint {}* %1470 to i64
  %single-float-tag-only7698 = and i64 %592, 7
  %593 = icmp eq i64 %single-float-tag-only7698, 6
  br i1 %593, label %tag307, label %tag877

tag858:                                           ; preds = %normal-dest6442, %normal-dest3825, %header-check-br1997
  %G118300.0 = phi {}* [ %"closure->LAMBDA6916", %header-check-br1997 ], [ %G118300.1, %normal-dest3825 ], [ %G118300.2, %normal-dest6442 ]
  %594 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %595 = invoke {}* @cc_safe_fdefinition({}* %594)
          to label %normal-dest7700 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag859:                                           ; preds = %normal-dest2995, %normal-dest7036, %normal-dest6385, %normal-dest5328
  br i1 %consp-test2604, label %tag136, label %tag81

tag860:                                           ; preds = %header-check-br4777, %normal-dest3991, %tag872
  %.val10496 = phi {}* [ %.pre10577, %tag872 ], [ %1349, %normal-dest3991 ], [ %.val10289, %header-check-br4777 ]
  %G118994.0.in = phi {}** [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), %tag872 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %normal-dest3991 ], [ getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), %header-check-br4777 ]
  %G118994.0 = load {}*, {}** %G118994.0.in, align 8
  %596 = icmp eq {}* %G118994.0, %.val10496
  br i1 %596, label %tag101, label %tag396

tag861:                                           ; preds = %normal-dest5614, %header-check-br2168
  %597 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %598 = invoke {}* @cc_safe_fdefinition({}* %597)
          to label %normal-dest7742 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag862:                                           ; preds = %normal-dest6824
  %ptrtoint7756 = ptrtoint {}* %"closure->LAMBDA6825" to i64
  %tag-only7757 = and i64 %ptrtoint7756, 7
  %test7758 = icmp eq i64 %tag-only7757, 1
  br i1 %test7758, label %header-check-br7755, label %tag391

tag863:                                           ; preds = %normal-dest1763, %tag751, %normal-dest5360, %tag189
  %599 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %600 = icmp eq {}* %vaarg898, %599
  br i1 %600, label %tag243, label %tag562.preheader

tag562.preheader:                                 ; preds = %tag863
  br label %tag562

tag866:                                           ; preds = %tag234
  %601 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA7765" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %601, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.32", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.32^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest7764 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag872:                                           ; preds = %tag529, %header-check-br7368, %normal-dest3991
  %.pre10577 = phi {}* [ %.val10289, %tag529 ], [ %.val10289, %header-check-br7368 ], [ %1349, %normal-dest3991 ]
  br label %tag860

tag875:                                           ; preds = %normal-dest4157, %tag236
  %602 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA7791" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %602, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.33", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.33^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest7790 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag877:                                           ; preds = %tag857
  %fixnum-tag-only78108906 = and i64 %592, 3
  %fixnump-test7811 = icmp ne i64 %fixnum-tag-only78108906, 0
  %test2038 = icmp eq i64 %single-float-tag-only7698, 1
  %or.cond10266 = and i1 %fixnump-test7811, %test2038
  br i1 %or.cond10266, label %header-check-br2035, label %tag307

tag878:                                           ; preds = %normal-dest7089, %header-check-br6509, %normal-dest3593
  %G119386.0 = phi {}* [ %G119386.1, %normal-dest3593 ], [ %"closure->LAMBDA7659", %header-check-br6509 ], [ %G119386.2, %normal-dest7089 ]
  %ptrtoint7812 = ptrtoint {}* %G119386.0 to i64
  %entry-point-addr-uint7813 = add i64 %ptrtoint7812, 7
  %entry-point-addr7814 = inttoptr i64 %entry-point-addr-uint7813 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7815 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7814, align 8
  %603 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7815({}* %G119386.0, i64 2, {}* %OUT1164646503.0, {}* %tabellen-titel.0, {}* null, {}* null)
          to label %tag757 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag879:                                           ; preds = %normal-dest6100
  %ptrtoint7824 = ptrtoint {}* %"closure->LAMBDA5775" to i64
  %tag-only7825 = and i64 %ptrtoint7824, 7
  %test7826 = icmp eq i64 %tag-only7825, 1
  br i1 %test7826, label %header-check-br7823, label %tag430

tag882:                                           ; preds = %tag81
  %604 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %605 = invoke {}* @cc_safe_fdefinition({}* %604)
          to label %normal-dest7851 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag884:                                           ; preds = %tag329
  %606 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 477), align 8
  %607 = invoke {}* @cc_safe_fdefinition({}* %606)
          to label %normal-dest7874 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag886:                                           ; preds = %normal-dest7217, %header-check-br3043, %normal-dest2014
  %G119159.0 = phi {}* [ %G119159.1, %normal-dest2014 ], [ %"closure->LAMBDA6825", %header-check-br3043 ], [ %G119159.2, %normal-dest7217 ]
  %608 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %609 = invoke {}* @cc_safe_fdefinition({}* %608)
          to label %normal-dest7911 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag888:                                           ; preds = %normal-dest7749, %header-check-br5621, %normal-dest1115
  %G116854.0 = phi {}* [ %G116854.1, %normal-dest1115 ], [ %"closure->LAMBDA7765", %header-check-br5621 ], [ %G116854.2, %normal-dest7749 ]
  %ptrtoint7936 = ptrtoint {}* %G116854.0 to i64
  %entry-point-addr-uint7937 = add i64 %ptrtoint7936, 7
  %entry-point-addr7938 = inttoptr i64 %entry-point-addr-uint7937 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7939 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7938, align 8
  %610 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7939({}* %G116854.0, i64 1, {}* %G116762.0, {}* null, {}* null, {}* null)
          to label %normal-dest7942 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag890:                                           ; preds = %header-check-br6071, %header-check-br4595, %tag770, %tag593, %tag109
  br i1 %test3708, label %header-check-br7959, label %tag674

cleanup-lpad.loopexit:                            ; preds = %tag14, %tag19, %normal-dest1041, %tag31, %normal-dest1079, %tag57, %normal-dest1234, %tag61, %normal-dest1272, %tag89, %tag108, %normal-dest1582, %normal-dest1594, %tag127, %normal-dest1702, %tag147, %tag174, %normal-dest2062, %tag176, %normal-dest2085, %maybe-more-tests3387, %normal-dest2155, %maybe-more-tests4110, %normal-dest2213, %tag192, %normal-dest2241, %tag210, %normal-dest2391, %normal-dest2397, %tag215, %normal-dest2421, %normal-dest2428, %normal-dest2435, %normal-dest2442, %tag216, %normal-dest2461, %tag225, %normal-dest2505, %tag245, %normal-dest2642, %tag248, %tag251, %normal-dest2715, %maybe-more-tests7507, %normal-dest3030, %tag296, %normal-dest3106, %maybe-more-tests7872, %normal-dest3141, %tag302, %normal-dest3155, %tag303, %normal-dest3169, %maybe-more-tests4564, %normal-dest3321, %tag348, %normal-dest3351, %tag355, %normal-dest3389, %maybe-more-tests6929, %normal-dest3481, %maybe-more-tests5067, %normal-dest3510, %tag382, %normal-dest3552, %tag383, %tag385, %normal-dest3572, %tag410, %normal-dest3770, %tag421, %normal-dest3850, %tag432, %normal-dest3951, %tag456, %normal-dest4133, %maybe-more-tests4241, %normal-dest4327, %maybe-more-tests4005, %normal-dest4377, %tag485, %normal-dest4405, %tag497, %normal-dest4505, %tag535, %normal-dest4814, %tag550, %normal-dest4867, %tag565, %normal-dest4993, %normal-dest5000, %normal-dest5007, %normal-dest5014, %tag577, %normal-dest5154, %tag583, %normal-dest5177, %tag589, %normal-dest5202, %normal-dest5209, %normal-dest5216, %normal-dest5223, %maybe-more-tests1958, %normal-dest5250, %tag602, %normal-dest5280, %maybe-more-tests1174, %normal-dest5379, %tag615, %tag653, %maybe-more-tests4801, %normal-dest5698, %tag670, %normal-dest5871, %tag674, %normal-dest5899, %tag688, %maybe-more-tests6419, %normal-dest6079, %maybe-more-tests1691, %normal-dest6185, %maybe-more-tests5479, %normal-dest6458, %tag730, %normal-dest6473, %tag734, %normal-dest6528, %tag740, %normal-dest6558, %normal-dest6565, %normal-dest6572, %normal-dest6579, %tag746, %normal-dest6629, %normal-dest6641, %maybe-more-tests3227, %normal-dest6673, %tag750, %normal-dest6701, %tag762, %normal-dest6839, %normal-dest6851, %tag808, %normal-dest7243, %normal-dest7255, %normal-dest7267, %normal-dest7273, %tag824, %normal-dest7422, %normal-dest7424, %tag829, %normal-dest7463
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag569, %normal-dest5069, %tag630, %normal-dest5533
  %lpad.loopexit10532 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag404, %normal-dest3737, %tag440, %normal-dest4021
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %tag138, %tag151, %normal-dest1899, %maybe-more-tests3839, %normal-dest2021, %tag195, %normal-dest2263, %tag221, %normal-dest2491, %tag227, %normal-dest2539, %maybe-more-tests1783, %normal-dest2701, %tag271, %normal-dest2862, %tag327, %maybe-more-tests4672, %normal-dest3424, %tag392, %tag426, %normal-dest3885, %tag444, %normal-dest4066, %tag457, %normal-dest4143, %maybe-more-tests5453, %normal-dest4341, %tag486, %normal-dest4419, %tag538, %tag618, %normal-dest5405, %normal-dest5407, %normal-dest5409, %normal-dest5416, %normal-dest5428, %maybe-more-tests4216, %normal-dest5579, %maybe-more-tests6747, %normal-dest5593, %tag649, %normal-dest5649, %tag661, %normal-dest5781, %maybe-more-tests5934, %normal-dest5944, %tag684, %normal-dest5958, %tag692, %normal-dest6058, %tag709, %normal-dest6204, %normal-dest6210, %tag716, %normal-dest6305, %tag724, %normal-dest6421, %tag776, %normal-dest6946, %normal-dest6948, %normal-dest6955, %normal-dest6967, %normal-dest6979, %normal-dest6985, %tag796, %normal-dest7121, %normal-dest7123, %normal-dest7130, %normal-dest7142, %tag798, %normal-dest7166, %tag810, %normal-dest7293, %normal-dest7295, %normal-dest7302, %normal-dest7314, %tag823, %normal-dest7408, %maybe-more-tests1039, %normal-dest7777
  %lpad.loopexit10534 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %normal-dest7874, %tag884, %normal-dest7851, %tag882, %tag875, %normal-dest7036, %normal-dest7025, %normal-dest7018, %normal-dest7011, %normal-dest7004, %normal-dest7002, %tag784, %normal-dest6726, %maybe-more-tests5145, %normal-dest6385, %normal-dest6379, %normal-dest6367, %normal-dest6356, %normal-dest6349, %normal-dest6342, %normal-dest6335, %normal-dest6333, %tag719, %normal-dest6155, %tag704, %normal-dest5328, %normal-dest5317, %normal-dest5310, %normal-dest5303, %normal-dest5296, %normal-dest5294, %tag603, %normal-dest5264, %tag599, %normal-dest4633, %tag515, %normal-dest4157, %tag458, %normal-dest3864, %tag423, %normal-dest2995, %normal-dest2984, %normal-dest2977, %normal-dest2970, %normal-dest2963, %normal-dest2961, %normal-dest2959, %tag284, %normal-dest2759, %maybe-more-tests4663, %normal-dest2730, %tag252, %normal-dest2043, %maybe-more-tests1061, %normal-dest1363, %tag71, %normal-dest944, %maybe-more-tests4480
  %lpad.loopexit10537 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %tag52, %normal-dest1176, %tag69, %normal-dest1325, %tag97, %normal-dest1510, %tag142, %normal-dest1813, %tag146, %normal-dest1827, %normal-dest1829, %normal-dest1837, %normal-dest1849, %normal-dest1861, %normal-dest1867, %tag198, %normal-dest2294, %tag199, %normal-dest2308, %normal-dest2310, %normal-dest2312, %normal-dest2319, %normal-dest2331, %maybe-more-tests4654, %normal-dest2562, %maybe-more-tests3259, %normal-dest2878, %tag471, %normal-dest4265, %normal-dest4267, %normal-dest4274, %normal-dest4286, %tag496, %normal-dest4491, %tag551, %tag555, %normal-dest4907, %normal-dest4909, %normal-dest4916, %normal-dest4928, %tag663, %normal-dest5828, %maybe-more-tests4232, %normal-dest6659, %maybe-more-tests7849, %normal-dest7068, %tag850, %normal-dest7632, %tag854, %normal-dest7667
  %lpad.loopexit10540 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %normal-dest7897, %maybe-more-tests7103, %normal-dest7797, %maybe-more-tests3816, %normal-dest7721, %normal-dest7709, %normal-dest7702, %normal-dest7700, %tag858, %normal-dest7618, %tag848, %normal-dest7576, %tag842, %tag840, %normal-dest7542, %maybe-more-tests4362, %normal-dest7520, %normal-dest7514, %tag834, %normal-dest7477, %tag831, %normal-dest7378, %tag817, %normal-dest7346, %tag812, %normal-dest7224, %maybe-more-tests4953, %normal-dest7194, %maybe-more-tests3848, %tag766, %normal-dest6893, %tag765, %normal-dest6869, %tag763, %tag751, %normal-dest6542, %tag735, %normal-dest6435, %maybe-more-tests7461, %normal-dest6398, %maybe-more-tests963, %normal-dest6318, %tag717, %normal-dest6290, %normal-dest6284, %normal-dest6272, %normal-dest6260, %normal-dest6253, %normal-dest6251, %tag714, %normal-dest6237, %tag711, %normal-dest6141, %tag703, %normal-dest6127, %maybe-more-tests5638, %normal-dest6093, %tag696, %normal-dest6040, %normal-dest6028, %normal-dest6021, %normal-dest6019, %tag689, %normal-dest5913, %tag677, %normal-dest5768, %normal-dest5761, %tag660, %tag658, %normal-dest5674, %normal-dest5668, %tag652, %normal-dest5546, %tag633, %normal-dest5515, %normal-dest5503, %normal-dest5496, %normal-dest5494, %tag629, %normal-dest5455, %tag620, %normal-dest5360, %tag607, %normal-dest4979, %tag563, %normal-dest4957, %maybe-more-tests972, %normal-dest4765, %normal-dest4759, %normal-dest4747, %normal-dest4735, %normal-dest4728, %normal-dest4726, %tag525, %normal-dest4619, %tag514, %normal-dest4459, %tag488, %normal-dest4391, %maybe-more-tests990, %normal-dest4243, %maybe-more-tests5647, %normal-dest4171, %tag459, %normal-dest4035, %tag442, %normal-dest3937, %maybe-more-tests2943, %normal-dest3923, %tag430, %normal-dest3909, %maybe-more-tests1143, %normal-dest3818, %tag416, %normal-dest3692, %maybe-more-tests2482, %normal-dest3635, %normal-dest3623, %normal-dest3616, %normal-dest3614, %normal-dest3612, %tag390, %normal-dest3538, %tag379, %normal-dest3524, %tag378, %normal-dest3495, %tag373, %normal-dest3467, %tag370, %normal-dest3453, %maybe-more-tests1723, %normal-dest3261, %maybe-more-tests981, %normal-dest3120, %tag298, %normal-dest3076, %normal-dest3064, %normal-dest3057, %normal-dest3055, %normal-dest3053, %tag293, %normal-dest2945, %maybe-more-tests7574, %normal-dest2899, %tag277, %tag259, %normal-dest2773, %tag256, %normal-dest2677, %normal-dest2665, %normal-dest2658, %normal-dest2656, %tag247, %tag243, %normal-dest2363, %tag206, %normal-dest2349, %tag205, %normal-dest2280, %maybe-more-tests1943, %tag189, %normal-dest2178, %maybe-more-tests2106, %normal-dest2108, %tag178, %tag173, %normal-dest1967, %tag161, %normal-dest1763, %normal-dest1757, %tag133, %normal-dest1725, %tag129, %normal-dest1645, %maybe-more-tests7840, %normal-dest1533, %maybe-more-tests5090, %tag96, %normal-dest1457, %tag86, %tag78, %normal-dest1398, %tag76, %normal-dest1340, %tag70, %normal-dest1212, %tag55, %normal-dest1122, %tag38, %normal-dest1064, %tag26, %normal-dest999, %tag13
  %lpad.loopexit10543 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit: ; preds = %normal-dest1739, %tag130, %normal-dest1153, %tag45
  %lpad.loopexit10549 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %normal-dest7332, %tag811, %normal-dest4543, %tag771
  %lpad.loopexit.split-lp10550 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %loop-kw-args
  %lpad.loopexit10552 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %normal-dest7948, %normal-dest7942, %tag888, %normal-dest7918, %normal-dest7911, %tag886, %tag878, %tag866, %normal-dest7742, %tag861, %normal-dest7652, %tag852, %normal-dest7440, %maybe-more-tests1301, %normal-dest7210, %maybe-more-tests5869, %tag804, %normal-dest7180, %tag799, %tag795, %normal-dest7107, %normal-dest7106, %tag794, %normal-dest7082, %maybe-more-tests2793, %normal-dest7054, %maybe-more-tests1531, %normal-dest6818, %normal-dest6811, %normal-dest6804, %normal-dest6792, %normal-dest6785, %normal-dest6783, %normal-dest6776, %normal-dest6764, %normal-dest6757, %normal-dest6755, %tag757, %normal-dest6687, %maybe-more-tests2199, %normal-dest6608, %tag744, %normal-dest6495, %tag732, %normal-dest6223, %maybe-more-tests6183, %normal-dest6113, %tag700, %normal-dest5975, %tag686, %tag681, %normal-dest5885, %tag672, %tag667, %normal-dest5805, %tag662, %normal-dest5736, %tag657, %normal-dest5723, %normal-dest5717, %tag656, %normal-dest5607, %tag640, %normal-dest5346, %tag605, %normal-dest5124, %maybe-more-tests4812, %normal-dest5111, %normal-dest5105, %tag572, %normal-dest5042, %normal-dest5035, %normal-dest5033, %tag566, %normal-dest4887, %tag553, %tag549, %tag521, %normal-dest4674, %maybe-more-tests6944, %normal-dest4573, %tag509, %normal-dest4522, %tag501, %normal-dest4441, %normal-dest4434, %tag487, %normal-dest7208, %normal-dest4313, %tag474, %normal-dest4195, %tag462, %normal-dest4112, %maybe-more-tests2083, %normal-dest4052, %maybe-more-tests1934, %normal-dest4007, %maybe-more-tests1317, %normal-dest3984, %maybe-more-tests7376, %normal-dest3786, %tag411, %normal-dest3752, %tag407, %normal-dest3678, %maybe-more-tests4724, %normal-dest3653, %tag391, %normal-dest3586, %tag386, %normal-dest3439, %tag368, %normal-dest3365, %tag349, %normal-dest3296, %tag335, %normal-dest3229, %tag309, %normal-dest3197, %tag306, %normal-dest3183, %maybe-more-tests2613, %normal-dest3103, %normal-dest3102, %tag295, %tag414, %normal-dest2922, %tag280, %normal-dest2820, %normal-dest2814, %normal-dest2802, %normal-dest2795, %tag258, %normal-dest2615, %tag239, %normal-dest2585, %tag235, %tag226, %normal-dest2227, %tag191, %normal-dest2132, %tag179, %normal-dest2007, %tag165, %normal-dest1913, %maybe-more-tests4695, %normal-dest1799, %maybe-more-tests7616, %normal-dest1621, %tag112, %normal-dest1562, %tag105, %normal-dest1549, %tag103, %normal-dest1437, %tag83, %normal-dest1377, %tag72, %normal-dest1199, %tag53, %normal-dest1108, %maybe-more-tests2176, %loop-cont, %error
  %lpad.loopexit.split-lp10553 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit10532, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ], [ %lpad.loopexit10534, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit10537, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit10540, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit10543, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit10549, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp10550, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ], [ %lpad.loopexit10552, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp10553, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @":::global-str-KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 4)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs896 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1897 = add i64 %rem-nargs896, -1
  store i64 %rem-nargs-1897, i64* %"remaining-nargs*", align 8
  %vaarg898 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs900 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1901 = add i64 %rem-nargs900, -1
  store i64 %rem-nargs-1901, i64* %"remaining-nargs*", align 8
  %vaarg902 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs904 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1905 = add i64 %rem-nargs904, -1
  store i64 %rem-nargs-1905, i64* %"remaining-nargs*", align 8
  %vaarg906 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %611 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %612 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %613 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 67), align 8
  %614 = icmp eq i64 %nargs, 4
  br i1 %614, label %kw-exit-block, label %loop-kw-args.preheader

loop-kw-args.preheader:                           ; preds = %continue
  br label %loop-kw-args

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

loop-kw-args:                                     ; preds = %loop-kw-args.preheader, %advance-arg-idx-block
  %G116770.0 = phi {}* [ %G116770.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %G116771.0 = phi {}* [ %G116771.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %G116772.0 = phi {}* [ %G116772.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %stream.1 = phi {}* [ %stream.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G116773.0 = phi {}* [ %G116773.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %seiten-breite.1 = phi {}* [ %seiten-breite.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G116774.0 = phi {}* [ %G116774.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %spalten-breite.1 = phi {}* [ %spalten-breite.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G116775.0 = phi {}* [ %G116775.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %zeilen-breite.1 = phi {}* [ %zeilen-breite.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G116776.0 = phi {}* [ %G116776.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %spalten-titel.1 = phi {}* [ %spalten-titel.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G116777.0 = phi {}* [ %G116777.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %zeilen-titel.1 = phi {}* [ %zeilen-titel.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G116778.0 = phi {}* [ %G116778.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %tabellen-titel.1 = phi {}* [ %tabellen-titel.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %G116779.0 = phi {}* [ %G116779.2, %advance-arg-idx-block ], [ %612, %loop-kw-args.preheader ]
  %tabellen-zugriff.1 = phi {}* [ %tabellen-zugriff.3, %advance-arg-idx-block ], [ undef, %loop-kw-args.preheader ]
  %phi-saw-aok = phi i64 [ %phi-this-was-aok, %advance-arg-idx-block ], [ 0, %loop-kw-args.preheader ]
  %phi-reg-arg-idx = phi i64 [ %623, %advance-arg-idx-block ], [ 4, %loop-kw-args.preheader ]
  %phi-bad-kw-idx = phi i64 [ %phi.aok-bad-good.bad-kw-idx, %advance-arg-idx-block ], [ 65536, %loop-kw-args.preheader ]
  %rem-nargs909 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1910 = add i64 %rem-nargs909, -1
  store i64 %rem-nargs-1910, i64* %"remaining-nargs*", align 8
  %vaarg911 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %rem-nargs912 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1913 = add i64 %rem-nargs912, -1
  store i64 %rem-nargs-1913, i64* %"remaining-nargs*", align 8
  %vaarg914 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  invoke void @cc_ifNotKeywordException({}* %vaarg911, i64 %phi-reg-arg-idx, { i32, i32, i8*, i8* }* nonnull %"va-list*", { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^^DESC")
          to label %normal-dest915 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

kw-exit-block:                                    ; preds = %loop-cont.kw-exit-block_crit_edge, %continue
  %615 = phi {}* [ %612, %continue ], [ %.pre, %loop-cont.kw-exit-block_crit_edge ]
  %G116772.1 = phi {}* [ %612, %continue ], [ %G116772.2, %loop-cont.kw-exit-block_crit_edge ]
  %stream.2 = phi {}* [ undef, %continue ], [ %stream.3, %loop-cont.kw-exit-block_crit_edge ]
  %G116773.1 = phi {}* [ %612, %continue ], [ %G116773.2, %loop-cont.kw-exit-block_crit_edge ]
  %seiten-breite.2 = phi {}* [ undef, %continue ], [ %seiten-breite.3, %loop-cont.kw-exit-block_crit_edge ]
  %G116774.1 = phi {}* [ %612, %continue ], [ %G116774.2, %loop-cont.kw-exit-block_crit_edge ]
  %spalten-breite.2 = phi {}* [ undef, %continue ], [ %spalten-breite.3, %loop-cont.kw-exit-block_crit_edge ]
  %G116775.1 = phi {}* [ %612, %continue ], [ %G116775.2, %loop-cont.kw-exit-block_crit_edge ]
  %zeilen-breite.2 = phi {}* [ undef, %continue ], [ %zeilen-breite.3, %loop-cont.kw-exit-block_crit_edge ]
  %G116776.1 = phi {}* [ %612, %continue ], [ %G116776.2, %loop-cont.kw-exit-block_crit_edge ]
  %spalten-titel.2 = phi {}* [ undef, %continue ], [ %spalten-titel.3, %loop-cont.kw-exit-block_crit_edge ]
  %G116777.1 = phi {}* [ %612, %continue ], [ %G116777.2, %loop-cont.kw-exit-block_crit_edge ]
  %zeilen-titel.2 = phi {}* [ undef, %continue ], [ %zeilen-titel.3, %loop-cont.kw-exit-block_crit_edge ]
  %G116778.1 = phi {}* [ %612, %continue ], [ %G116778.2, %loop-cont.kw-exit-block_crit_edge ]
  %tabellen-titel.2 = phi {}* [ undef, %continue ], [ %tabellen-titel.3, %loop-cont.kw-exit-block_crit_edge ]
  %G116779.1 = phi {}* [ %612, %continue ], [ %G116779.2, %loop-cont.kw-exit-block_crit_edge ]
  %tabellen-zugriff.2 = phi {}* [ undef, %continue ], [ %tabellen-zugriff.3, %loop-cont.kw-exit-block_crit_edge ]
  %616 = icmp eq {}* %G116779.1, %615
  %617 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 448), align 16
  %tabellen-zugriff.0 = select i1 %616, {}* %617, {}* %tabellen-zugriff.2
  %618 = icmp eq {}* %G116778.1, %615
  %619 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 450), align 16
  %tabellen-titel.0 = select i1 %618, {}* %619, {}* %tabellen-titel.2
  %620 = icmp eq {}* %G116777.1, %615
  br i1 %620, label %tag235, label %tag291

loop-cont:                                        ; preds = %advance-arg-idx-block
  invoke void @cc_ifBadKeywordArgumentException(i64 %phi-this-was-aok, i64 %phi.aok-bad-good.bad-kw-idx, {}* %vaarg911, { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* nonnull @"KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^^DESC")
          to label %loop-cont.kw-exit-block_crit_edge unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

loop-cont.kw-exit-block_crit_edge:                ; preds = %loop-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %kw-exit-block

normal-dest915:                                   ; preds = %loop-kw-args
  %621 = icmp eq {}* %613, %vaarg911
  br i1 %621, label %aok-block, label %"kw-:TABELLEN-ZUGRIFF-test"

aok-block:                                        ; preds = %normal-dest915
  %622 = call i64 @cc_allowOtherKeywords(i64 %phi-saw-aok, {}* %vaarg914)
  br label %advance-arg-idx-block

advance-arg-idx-block:                            ; preds = %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test", %"kw-:SEITENLAENGE-test", %"kw-:STREAM-test", %"kw-:SEITEN-BREITE-test", %"kw-:SPALTEN-BREITE-test", %"kw-:ZEILEN-BREITE-test", %"kw-:SPALTEN-TITEL-test", %"kw-:ZEILEN-TITEL-test", %"kw-:TABELLEN-TITEL-test", %"kw-:TABELLEN-ZUGRIFF-test", %not-seen-before-kw-block, %not-seen-before-kw-block917, %not-seen-before-kw-block920, %not-seen-before-kw-block923, %not-seen-before-kw-block926, %not-seen-before-kw-block929, %not-seen-before-kw-block932, %not-seen-before-kw-block935, %not-seen-before-kw-block938, %not-seen-before-kw-block941, %next-kw-block942, %aok-block
  %G116770.2 = phi {}* [ %G116770.0, %aok-block ], [ %G116770.0, %next-kw-block942 ], [ %611, %not-seen-before-kw-block941 ], [ %G116770.0, %not-seen-before-kw-block938 ], [ %G116770.0, %not-seen-before-kw-block935 ], [ %G116770.0, %not-seen-before-kw-block932 ], [ %G116770.0, %not-seen-before-kw-block929 ], [ %G116770.0, %not-seen-before-kw-block926 ], [ %G116770.0, %not-seen-before-kw-block923 ], [ %G116770.0, %not-seen-before-kw-block920 ], [ %G116770.0, %not-seen-before-kw-block917 ], [ %G116770.0, %not-seen-before-kw-block ], [ %G116770.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116770.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116770.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116770.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116770.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116770.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116770.0, %"kw-:SEITEN-BREITE-test" ], [ %G116770.0, %"kw-:STREAM-test" ], [ %G116770.0, %"kw-:SEITENLAENGE-test" ], [ %G116770.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116771.2 = phi {}* [ %G116771.0, %aok-block ], [ %G116771.0, %next-kw-block942 ], [ %G116771.0, %not-seen-before-kw-block941 ], [ %611, %not-seen-before-kw-block938 ], [ %G116771.0, %not-seen-before-kw-block935 ], [ %G116771.0, %not-seen-before-kw-block932 ], [ %G116771.0, %not-seen-before-kw-block929 ], [ %G116771.0, %not-seen-before-kw-block926 ], [ %G116771.0, %not-seen-before-kw-block923 ], [ %G116771.0, %not-seen-before-kw-block920 ], [ %G116771.0, %not-seen-before-kw-block917 ], [ %G116771.0, %not-seen-before-kw-block ], [ %G116771.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116771.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116771.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116771.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116771.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116771.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116771.0, %"kw-:SEITEN-BREITE-test" ], [ %G116771.0, %"kw-:STREAM-test" ], [ %G116771.0, %"kw-:SEITENLAENGE-test" ], [ %G116771.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116772.2 = phi {}* [ %G116772.0, %aok-block ], [ %G116772.0, %next-kw-block942 ], [ %G116772.0, %not-seen-before-kw-block941 ], [ %G116772.0, %not-seen-before-kw-block938 ], [ %611, %not-seen-before-kw-block935 ], [ %G116772.0, %not-seen-before-kw-block932 ], [ %G116772.0, %not-seen-before-kw-block929 ], [ %G116772.0, %not-seen-before-kw-block926 ], [ %G116772.0, %not-seen-before-kw-block923 ], [ %G116772.0, %not-seen-before-kw-block920 ], [ %G116772.0, %not-seen-before-kw-block917 ], [ %G116772.0, %not-seen-before-kw-block ], [ %G116772.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116772.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116772.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116772.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116772.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116772.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116772.0, %"kw-:SEITEN-BREITE-test" ], [ %G116772.0, %"kw-:STREAM-test" ], [ %G116772.0, %"kw-:SEITENLAENGE-test" ], [ %G116772.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %stream.3 = phi {}* [ %stream.1, %aok-block ], [ %stream.1, %next-kw-block942 ], [ %stream.1, %not-seen-before-kw-block941 ], [ %stream.1, %not-seen-before-kw-block938 ], [ %vaarg914, %not-seen-before-kw-block935 ], [ %stream.1, %not-seen-before-kw-block932 ], [ %stream.1, %not-seen-before-kw-block929 ], [ %stream.1, %not-seen-before-kw-block926 ], [ %stream.1, %not-seen-before-kw-block923 ], [ %stream.1, %not-seen-before-kw-block920 ], [ %stream.1, %not-seen-before-kw-block917 ], [ %stream.1, %not-seen-before-kw-block ], [ %stream.1, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %stream.1, %"kw-:TABELLEN-TITEL-test" ], [ %stream.1, %"kw-:ZEILEN-TITEL-test" ], [ %stream.1, %"kw-:SPALTEN-TITEL-test" ], [ %stream.1, %"kw-:ZEILEN-BREITE-test" ], [ %stream.1, %"kw-:SPALTEN-BREITE-test" ], [ %stream.1, %"kw-:SEITEN-BREITE-test" ], [ %stream.1, %"kw-:STREAM-test" ], [ %stream.1, %"kw-:SEITENLAENGE-test" ], [ %stream.1, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116773.2 = phi {}* [ %G116773.0, %aok-block ], [ %G116773.0, %next-kw-block942 ], [ %G116773.0, %not-seen-before-kw-block941 ], [ %G116773.0, %not-seen-before-kw-block938 ], [ %G116773.0, %not-seen-before-kw-block935 ], [ %611, %not-seen-before-kw-block932 ], [ %G116773.0, %not-seen-before-kw-block929 ], [ %G116773.0, %not-seen-before-kw-block926 ], [ %G116773.0, %not-seen-before-kw-block923 ], [ %G116773.0, %not-seen-before-kw-block920 ], [ %G116773.0, %not-seen-before-kw-block917 ], [ %G116773.0, %not-seen-before-kw-block ], [ %G116773.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116773.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116773.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116773.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116773.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116773.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116773.0, %"kw-:SEITEN-BREITE-test" ], [ %G116773.0, %"kw-:STREAM-test" ], [ %G116773.0, %"kw-:SEITENLAENGE-test" ], [ %G116773.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %seiten-breite.3 = phi {}* [ %seiten-breite.1, %aok-block ], [ %seiten-breite.1, %next-kw-block942 ], [ %seiten-breite.1, %not-seen-before-kw-block941 ], [ %seiten-breite.1, %not-seen-before-kw-block938 ], [ %seiten-breite.1, %not-seen-before-kw-block935 ], [ %vaarg914, %not-seen-before-kw-block932 ], [ %seiten-breite.1, %not-seen-before-kw-block929 ], [ %seiten-breite.1, %not-seen-before-kw-block926 ], [ %seiten-breite.1, %not-seen-before-kw-block923 ], [ %seiten-breite.1, %not-seen-before-kw-block920 ], [ %seiten-breite.1, %not-seen-before-kw-block917 ], [ %seiten-breite.1, %not-seen-before-kw-block ], [ %seiten-breite.1, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %seiten-breite.1, %"kw-:TABELLEN-TITEL-test" ], [ %seiten-breite.1, %"kw-:ZEILEN-TITEL-test" ], [ %seiten-breite.1, %"kw-:SPALTEN-TITEL-test" ], [ %seiten-breite.1, %"kw-:ZEILEN-BREITE-test" ], [ %seiten-breite.1, %"kw-:SPALTEN-BREITE-test" ], [ %seiten-breite.1, %"kw-:SEITEN-BREITE-test" ], [ %seiten-breite.1, %"kw-:STREAM-test" ], [ %seiten-breite.1, %"kw-:SEITENLAENGE-test" ], [ %seiten-breite.1, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116774.2 = phi {}* [ %G116774.0, %aok-block ], [ %G116774.0, %next-kw-block942 ], [ %G116774.0, %not-seen-before-kw-block941 ], [ %G116774.0, %not-seen-before-kw-block938 ], [ %G116774.0, %not-seen-before-kw-block935 ], [ %G116774.0, %not-seen-before-kw-block932 ], [ %611, %not-seen-before-kw-block929 ], [ %G116774.0, %not-seen-before-kw-block926 ], [ %G116774.0, %not-seen-before-kw-block923 ], [ %G116774.0, %not-seen-before-kw-block920 ], [ %G116774.0, %not-seen-before-kw-block917 ], [ %G116774.0, %not-seen-before-kw-block ], [ %G116774.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116774.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116774.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116774.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116774.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116774.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116774.0, %"kw-:SEITEN-BREITE-test" ], [ %G116774.0, %"kw-:STREAM-test" ], [ %G116774.0, %"kw-:SEITENLAENGE-test" ], [ %G116774.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %spalten-breite.3 = phi {}* [ %spalten-breite.1, %aok-block ], [ %spalten-breite.1, %next-kw-block942 ], [ %spalten-breite.1, %not-seen-before-kw-block941 ], [ %spalten-breite.1, %not-seen-before-kw-block938 ], [ %spalten-breite.1, %not-seen-before-kw-block935 ], [ %spalten-breite.1, %not-seen-before-kw-block932 ], [ %vaarg914, %not-seen-before-kw-block929 ], [ %spalten-breite.1, %not-seen-before-kw-block926 ], [ %spalten-breite.1, %not-seen-before-kw-block923 ], [ %spalten-breite.1, %not-seen-before-kw-block920 ], [ %spalten-breite.1, %not-seen-before-kw-block917 ], [ %spalten-breite.1, %not-seen-before-kw-block ], [ %spalten-breite.1, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %spalten-breite.1, %"kw-:TABELLEN-TITEL-test" ], [ %spalten-breite.1, %"kw-:ZEILEN-TITEL-test" ], [ %spalten-breite.1, %"kw-:SPALTEN-TITEL-test" ], [ %spalten-breite.1, %"kw-:ZEILEN-BREITE-test" ], [ %spalten-breite.1, %"kw-:SPALTEN-BREITE-test" ], [ %spalten-breite.1, %"kw-:SEITEN-BREITE-test" ], [ %spalten-breite.1, %"kw-:STREAM-test" ], [ %spalten-breite.1, %"kw-:SEITENLAENGE-test" ], [ %spalten-breite.1, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116775.2 = phi {}* [ %G116775.0, %aok-block ], [ %G116775.0, %next-kw-block942 ], [ %G116775.0, %not-seen-before-kw-block941 ], [ %G116775.0, %not-seen-before-kw-block938 ], [ %G116775.0, %not-seen-before-kw-block935 ], [ %G116775.0, %not-seen-before-kw-block932 ], [ %G116775.0, %not-seen-before-kw-block929 ], [ %611, %not-seen-before-kw-block926 ], [ %G116775.0, %not-seen-before-kw-block923 ], [ %G116775.0, %not-seen-before-kw-block920 ], [ %G116775.0, %not-seen-before-kw-block917 ], [ %G116775.0, %not-seen-before-kw-block ], [ %G116775.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116775.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116775.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116775.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116775.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116775.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116775.0, %"kw-:SEITEN-BREITE-test" ], [ %G116775.0, %"kw-:STREAM-test" ], [ %G116775.0, %"kw-:SEITENLAENGE-test" ], [ %G116775.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %zeilen-breite.3 = phi {}* [ %zeilen-breite.1, %aok-block ], [ %zeilen-breite.1, %next-kw-block942 ], [ %zeilen-breite.1, %not-seen-before-kw-block941 ], [ %zeilen-breite.1, %not-seen-before-kw-block938 ], [ %zeilen-breite.1, %not-seen-before-kw-block935 ], [ %zeilen-breite.1, %not-seen-before-kw-block932 ], [ %zeilen-breite.1, %not-seen-before-kw-block929 ], [ %vaarg914, %not-seen-before-kw-block926 ], [ %zeilen-breite.1, %not-seen-before-kw-block923 ], [ %zeilen-breite.1, %not-seen-before-kw-block920 ], [ %zeilen-breite.1, %not-seen-before-kw-block917 ], [ %zeilen-breite.1, %not-seen-before-kw-block ], [ %zeilen-breite.1, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %zeilen-breite.1, %"kw-:TABELLEN-TITEL-test" ], [ %zeilen-breite.1, %"kw-:ZEILEN-TITEL-test" ], [ %zeilen-breite.1, %"kw-:SPALTEN-TITEL-test" ], [ %zeilen-breite.1, %"kw-:ZEILEN-BREITE-test" ], [ %zeilen-breite.1, %"kw-:SPALTEN-BREITE-test" ], [ %zeilen-breite.1, %"kw-:SEITEN-BREITE-test" ], [ %zeilen-breite.1, %"kw-:STREAM-test" ], [ %zeilen-breite.1, %"kw-:SEITENLAENGE-test" ], [ %zeilen-breite.1, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116776.2 = phi {}* [ %G116776.0, %aok-block ], [ %G116776.0, %next-kw-block942 ], [ %G116776.0, %not-seen-before-kw-block941 ], [ %G116776.0, %not-seen-before-kw-block938 ], [ %G116776.0, %not-seen-before-kw-block935 ], [ %G116776.0, %not-seen-before-kw-block932 ], [ %G116776.0, %not-seen-before-kw-block929 ], [ %G116776.0, %not-seen-before-kw-block926 ], [ %611, %not-seen-before-kw-block923 ], [ %G116776.0, %not-seen-before-kw-block920 ], [ %G116776.0, %not-seen-before-kw-block917 ], [ %G116776.0, %not-seen-before-kw-block ], [ %G116776.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116776.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116776.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116776.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116776.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116776.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116776.0, %"kw-:SEITEN-BREITE-test" ], [ %G116776.0, %"kw-:STREAM-test" ], [ %G116776.0, %"kw-:SEITENLAENGE-test" ], [ %G116776.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %spalten-titel.3 = phi {}* [ %spalten-titel.1, %aok-block ], [ %spalten-titel.1, %next-kw-block942 ], [ %spalten-titel.1, %not-seen-before-kw-block941 ], [ %spalten-titel.1, %not-seen-before-kw-block938 ], [ %spalten-titel.1, %not-seen-before-kw-block935 ], [ %spalten-titel.1, %not-seen-before-kw-block932 ], [ %spalten-titel.1, %not-seen-before-kw-block929 ], [ %spalten-titel.1, %not-seen-before-kw-block926 ], [ %vaarg914, %not-seen-before-kw-block923 ], [ %spalten-titel.1, %not-seen-before-kw-block920 ], [ %spalten-titel.1, %not-seen-before-kw-block917 ], [ %spalten-titel.1, %not-seen-before-kw-block ], [ %spalten-titel.1, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %spalten-titel.1, %"kw-:TABELLEN-TITEL-test" ], [ %spalten-titel.1, %"kw-:ZEILEN-TITEL-test" ], [ %spalten-titel.1, %"kw-:SPALTEN-TITEL-test" ], [ %spalten-titel.1, %"kw-:ZEILEN-BREITE-test" ], [ %spalten-titel.1, %"kw-:SPALTEN-BREITE-test" ], [ %spalten-titel.1, %"kw-:SEITEN-BREITE-test" ], [ %spalten-titel.1, %"kw-:STREAM-test" ], [ %spalten-titel.1, %"kw-:SEITENLAENGE-test" ], [ %spalten-titel.1, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116777.2 = phi {}* [ %G116777.0, %aok-block ], [ %G116777.0, %next-kw-block942 ], [ %G116777.0, %not-seen-before-kw-block941 ], [ %G116777.0, %not-seen-before-kw-block938 ], [ %G116777.0, %not-seen-before-kw-block935 ], [ %G116777.0, %not-seen-before-kw-block932 ], [ %G116777.0, %not-seen-before-kw-block929 ], [ %G116777.0, %not-seen-before-kw-block926 ], [ %G116777.0, %not-seen-before-kw-block923 ], [ %611, %not-seen-before-kw-block920 ], [ %G116777.0, %not-seen-before-kw-block917 ], [ %G116777.0, %not-seen-before-kw-block ], [ %G116777.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116777.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116777.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116777.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116777.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116777.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116777.0, %"kw-:SEITEN-BREITE-test" ], [ %G116777.0, %"kw-:STREAM-test" ], [ %G116777.0, %"kw-:SEITENLAENGE-test" ], [ %G116777.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %zeilen-titel.3 = phi {}* [ %zeilen-titel.1, %aok-block ], [ %zeilen-titel.1, %next-kw-block942 ], [ %zeilen-titel.1, %not-seen-before-kw-block941 ], [ %zeilen-titel.1, %not-seen-before-kw-block938 ], [ %zeilen-titel.1, %not-seen-before-kw-block935 ], [ %zeilen-titel.1, %not-seen-before-kw-block932 ], [ %zeilen-titel.1, %not-seen-before-kw-block929 ], [ %zeilen-titel.1, %not-seen-before-kw-block926 ], [ %zeilen-titel.1, %not-seen-before-kw-block923 ], [ %vaarg914, %not-seen-before-kw-block920 ], [ %zeilen-titel.1, %not-seen-before-kw-block917 ], [ %zeilen-titel.1, %not-seen-before-kw-block ], [ %zeilen-titel.1, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %zeilen-titel.1, %"kw-:TABELLEN-TITEL-test" ], [ %zeilen-titel.1, %"kw-:ZEILEN-TITEL-test" ], [ %zeilen-titel.1, %"kw-:SPALTEN-TITEL-test" ], [ %zeilen-titel.1, %"kw-:ZEILEN-BREITE-test" ], [ %zeilen-titel.1, %"kw-:SPALTEN-BREITE-test" ], [ %zeilen-titel.1, %"kw-:SEITEN-BREITE-test" ], [ %zeilen-titel.1, %"kw-:STREAM-test" ], [ %zeilen-titel.1, %"kw-:SEITENLAENGE-test" ], [ %zeilen-titel.1, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116778.2 = phi {}* [ %G116778.0, %aok-block ], [ %G116778.0, %next-kw-block942 ], [ %G116778.0, %not-seen-before-kw-block941 ], [ %G116778.0, %not-seen-before-kw-block938 ], [ %G116778.0, %not-seen-before-kw-block935 ], [ %G116778.0, %not-seen-before-kw-block932 ], [ %G116778.0, %not-seen-before-kw-block929 ], [ %G116778.0, %not-seen-before-kw-block926 ], [ %G116778.0, %not-seen-before-kw-block923 ], [ %G116778.0, %not-seen-before-kw-block920 ], [ %611, %not-seen-before-kw-block917 ], [ %G116778.0, %not-seen-before-kw-block ], [ %G116778.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116778.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116778.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116778.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116778.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116778.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116778.0, %"kw-:SEITEN-BREITE-test" ], [ %G116778.0, %"kw-:STREAM-test" ], [ %G116778.0, %"kw-:SEITENLAENGE-test" ], [ %G116778.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %tabellen-titel.3 = phi {}* [ %tabellen-titel.1, %aok-block ], [ %tabellen-titel.1, %next-kw-block942 ], [ %tabellen-titel.1, %not-seen-before-kw-block941 ], [ %tabellen-titel.1, %not-seen-before-kw-block938 ], [ %tabellen-titel.1, %not-seen-before-kw-block935 ], [ %tabellen-titel.1, %not-seen-before-kw-block932 ], [ %tabellen-titel.1, %not-seen-before-kw-block929 ], [ %tabellen-titel.1, %not-seen-before-kw-block926 ], [ %tabellen-titel.1, %not-seen-before-kw-block923 ], [ %tabellen-titel.1, %not-seen-before-kw-block920 ], [ %vaarg914, %not-seen-before-kw-block917 ], [ %tabellen-titel.1, %not-seen-before-kw-block ], [ %tabellen-titel.1, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %tabellen-titel.1, %"kw-:TABELLEN-TITEL-test" ], [ %tabellen-titel.1, %"kw-:ZEILEN-TITEL-test" ], [ %tabellen-titel.1, %"kw-:SPALTEN-TITEL-test" ], [ %tabellen-titel.1, %"kw-:ZEILEN-BREITE-test" ], [ %tabellen-titel.1, %"kw-:SPALTEN-BREITE-test" ], [ %tabellen-titel.1, %"kw-:SEITEN-BREITE-test" ], [ %tabellen-titel.1, %"kw-:STREAM-test" ], [ %tabellen-titel.1, %"kw-:SEITENLAENGE-test" ], [ %tabellen-titel.1, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %G116779.2 = phi {}* [ %G116779.0, %aok-block ], [ %G116779.0, %next-kw-block942 ], [ %G116779.0, %not-seen-before-kw-block941 ], [ %G116779.0, %not-seen-before-kw-block938 ], [ %G116779.0, %not-seen-before-kw-block935 ], [ %G116779.0, %not-seen-before-kw-block932 ], [ %G116779.0, %not-seen-before-kw-block929 ], [ %G116779.0, %not-seen-before-kw-block926 ], [ %G116779.0, %not-seen-before-kw-block923 ], [ %G116779.0, %not-seen-before-kw-block920 ], [ %G116779.0, %not-seen-before-kw-block917 ], [ %611, %not-seen-before-kw-block ], [ %G116779.0, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %G116779.0, %"kw-:TABELLEN-TITEL-test" ], [ %G116779.0, %"kw-:ZEILEN-TITEL-test" ], [ %G116779.0, %"kw-:SPALTEN-TITEL-test" ], [ %G116779.0, %"kw-:ZEILEN-BREITE-test" ], [ %G116779.0, %"kw-:SPALTEN-BREITE-test" ], [ %G116779.0, %"kw-:SEITEN-BREITE-test" ], [ %G116779.0, %"kw-:STREAM-test" ], [ %G116779.0, %"kw-:SEITENLAENGE-test" ], [ %G116779.0, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %tabellen-zugriff.3 = phi {}* [ %tabellen-zugriff.1, %aok-block ], [ %tabellen-zugriff.1, %next-kw-block942 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block941 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block938 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block935 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block932 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block929 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block926 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block923 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block920 ], [ %tabellen-zugriff.1, %not-seen-before-kw-block917 ], [ %vaarg914, %not-seen-before-kw-block ], [ %tabellen-zugriff.1, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %tabellen-zugriff.1, %"kw-:TABELLEN-TITEL-test" ], [ %tabellen-zugriff.1, %"kw-:ZEILEN-TITEL-test" ], [ %tabellen-zugriff.1, %"kw-:SPALTEN-TITEL-test" ], [ %tabellen-zugriff.1, %"kw-:ZEILEN-BREITE-test" ], [ %tabellen-zugriff.1, %"kw-:SPALTEN-BREITE-test" ], [ %tabellen-zugriff.1, %"kw-:SEITEN-BREITE-test" ], [ %tabellen-zugriff.1, %"kw-:STREAM-test" ], [ %tabellen-zugriff.1, %"kw-:SEITENLAENGE-test" ], [ %tabellen-zugriff.1, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %phi-this-was-aok = phi i64 [ %622, %aok-block ], [ %phi-saw-aok, %next-kw-block942 ], [ %phi-saw-aok, %not-seen-before-kw-block941 ], [ %phi-saw-aok, %not-seen-before-kw-block938 ], [ %phi-saw-aok, %not-seen-before-kw-block935 ], [ %phi-saw-aok, %not-seen-before-kw-block932 ], [ %phi-saw-aok, %not-seen-before-kw-block929 ], [ %phi-saw-aok, %not-seen-before-kw-block926 ], [ %phi-saw-aok, %not-seen-before-kw-block923 ], [ %phi-saw-aok, %not-seen-before-kw-block920 ], [ %phi-saw-aok, %not-seen-before-kw-block917 ], [ %phi-saw-aok, %not-seen-before-kw-block ], [ %phi-saw-aok, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %phi-saw-aok, %"kw-:TABELLEN-TITEL-test" ], [ %phi-saw-aok, %"kw-:ZEILEN-TITEL-test" ], [ %phi-saw-aok, %"kw-:SPALTEN-TITEL-test" ], [ %phi-saw-aok, %"kw-:ZEILEN-BREITE-test" ], [ %phi-saw-aok, %"kw-:SPALTEN-BREITE-test" ], [ %phi-saw-aok, %"kw-:SEITEN-BREITE-test" ], [ %phi-saw-aok, %"kw-:STREAM-test" ], [ %phi-saw-aok, %"kw-:SEITENLAENGE-test" ], [ %phi-saw-aok, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %phi.aok-bad-good.bad-kw-idx = phi i64 [ %phi-bad-kw-idx, %aok-block ], [ %645, %next-kw-block942 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block941 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block938 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block935 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block932 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block929 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block926 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block923 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block920 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block917 ], [ %phi-bad-kw-idx, %not-seen-before-kw-block ], [ %phi-bad-kw-idx, %"kw-:TABELLEN-ZUGRIFF-test" ], [ %phi-bad-kw-idx, %"kw-:TABELLEN-TITEL-test" ], [ %phi-bad-kw-idx, %"kw-:ZEILEN-TITEL-test" ], [ %phi-bad-kw-idx, %"kw-:SPALTEN-TITEL-test" ], [ %phi-bad-kw-idx, %"kw-:ZEILEN-BREITE-test" ], [ %phi-bad-kw-idx, %"kw-:SPALTEN-BREITE-test" ], [ %phi-bad-kw-idx, %"kw-:SEITEN-BREITE-test" ], [ %phi-bad-kw-idx, %"kw-:STREAM-test" ], [ %phi-bad-kw-idx, %"kw-:SEITENLAENGE-test" ], [ %phi-bad-kw-idx, %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test" ]
  %623 = add i64 %phi-reg-arg-idx, 2
  %624 = icmp slt i64 %623, %nargs
  br i1 %624, label %loop-kw-args, label %loop-cont

"kw-:TABELLEN-ZUGRIFF-test":                      ; preds = %normal-dest915
  %625 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 658), align 16
  %626 = call i64 @cc_matchKeywordOnce({}* %625, {}* %vaarg911, {}* %G116779.0)
  switch i64 %626, label %not-seen-before-kw-block [
    i64 0, label %"kw-:TABELLEN-TITEL-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block:                         ; preds = %"kw-:TABELLEN-ZUGRIFF-test"
  br label %advance-arg-idx-block

"kw-:TABELLEN-TITEL-test":                        ; preds = %"kw-:TABELLEN-ZUGRIFF-test"
  %627 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 659), align 8
  %628 = call i64 @cc_matchKeywordOnce({}* %627, {}* %vaarg911, {}* %G116778.0)
  switch i64 %628, label %not-seen-before-kw-block917 [
    i64 0, label %"kw-:ZEILEN-TITEL-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block917:                      ; preds = %"kw-:TABELLEN-TITEL-test"
  br label %advance-arg-idx-block

"kw-:ZEILEN-TITEL-test":                          ; preds = %"kw-:TABELLEN-TITEL-test"
  %629 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 660), align 16
  %630 = call i64 @cc_matchKeywordOnce({}* %629, {}* %vaarg911, {}* %G116777.0)
  switch i64 %630, label %not-seen-before-kw-block920 [
    i64 0, label %"kw-:SPALTEN-TITEL-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block920:                      ; preds = %"kw-:ZEILEN-TITEL-test"
  br label %advance-arg-idx-block

"kw-:SPALTEN-TITEL-test":                         ; preds = %"kw-:ZEILEN-TITEL-test"
  %631 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 661), align 8
  %632 = call i64 @cc_matchKeywordOnce({}* %631, {}* %vaarg911, {}* %G116776.0)
  switch i64 %632, label %not-seen-before-kw-block923 [
    i64 0, label %"kw-:ZEILEN-BREITE-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block923:                      ; preds = %"kw-:SPALTEN-TITEL-test"
  br label %advance-arg-idx-block

"kw-:ZEILEN-BREITE-test":                         ; preds = %"kw-:SPALTEN-TITEL-test"
  %633 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 662), align 16
  %634 = call i64 @cc_matchKeywordOnce({}* %633, {}* %vaarg911, {}* %G116775.0)
  switch i64 %634, label %not-seen-before-kw-block926 [
    i64 0, label %"kw-:SPALTEN-BREITE-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block926:                      ; preds = %"kw-:ZEILEN-BREITE-test"
  br label %advance-arg-idx-block

"kw-:SPALTEN-BREITE-test":                        ; preds = %"kw-:ZEILEN-BREITE-test"
  %635 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 663), align 8
  %636 = call i64 @cc_matchKeywordOnce({}* %635, {}* %vaarg911, {}* %G116774.0)
  switch i64 %636, label %not-seen-before-kw-block929 [
    i64 0, label %"kw-:SEITEN-BREITE-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block929:                      ; preds = %"kw-:SPALTEN-BREITE-test"
  br label %advance-arg-idx-block

"kw-:SEITEN-BREITE-test":                         ; preds = %"kw-:SPALTEN-BREITE-test"
  %637 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 664), align 16
  %638 = call i64 @cc_matchKeywordOnce({}* %637, {}* %vaarg911, {}* %G116773.0)
  switch i64 %638, label %not-seen-before-kw-block932 [
    i64 0, label %"kw-:STREAM-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block932:                      ; preds = %"kw-:SEITEN-BREITE-test"
  br label %advance-arg-idx-block

"kw-:STREAM-test":                                ; preds = %"kw-:SEITEN-BREITE-test"
  %639 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 665), align 8
  %640 = call i64 @cc_matchKeywordOnce({}* %639, {}* %vaarg911, {}* %G116772.0)
  switch i64 %640, label %not-seen-before-kw-block935 [
    i64 0, label %"kw-:SEITENLAENGE-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block935:                      ; preds = %"kw-:STREAM-test"
  br label %advance-arg-idx-block

"kw-:SEITENLAENGE-test":                          ; preds = %"kw-:STREAM-test"
  %641 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 667), align 8
  %642 = call i64 @cc_matchKeywordOnce({}* %641, {}* %vaarg911, {}* %G116771.0)
  switch i64 %642, label %not-seen-before-kw-block938 [
    i64 0, label %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test"
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block938:                      ; preds = %"kw-:SEITENLAENGE-test"
  br label %advance-arg-idx-block

"kw-:FUNKTION-BEI-SEITENUMBRUCH-test":            ; preds = %"kw-:SEITENLAENGE-test"
  %643 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 668), align 16
  %644 = call i64 @cc_matchKeywordOnce({}* %643, {}* %vaarg911, {}* %G116770.0)
  switch i64 %644, label %not-seen-before-kw-block941 [
    i64 0, label %next-kw-block942
    i64 2, label %advance-arg-idx-block
  ]

not-seen-before-kw-block941:                      ; preds = %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test"
  br label %advance-arg-idx-block

next-kw-block942:                                 ; preds = %"kw-:FUNKTION-BEI-SEITENUMBRUCH-test"
  %645 = call i64 @cc_trackFirstUnexpectedKeyword(i64 %phi-bad-kw-idx, i64 %phi-reg-arg-idx)
  br label %advance-arg-idx-block

normal-dest944:                                   ; preds = %maybe-more-tests4480
  %ptrtoint = ptrtoint {}* %1459 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %646 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %1459, i64 1, {}* nonnull %"closure->LAMBDA7791", {}* null, {}* null, {}* null)
          to label %normal-dest947 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest947:                                   ; preds = %normal-dest944
  %.elt8606 = extractvalue { {}*, i64 } %646, 0
  %.elt8608 = extractvalue { {}*, i64 } %646, 1
  %cond8036 = icmp eq i64 %.elt8608, 0
  %647 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118054.1 = select i1 %cond8036, {}* %647, {}* %.elt8606
  br label %tag603

header-check-br:                                  ; preds = %tag4
  %irc-bit-cast953 = bitcast {}* %"closure->LAMBDA7659" to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast953, i64 -9
  %irc-bit-cast954 = bitcast i8* %gep to i64*
  %648 = load i64, i64* %irc-bit-cast954, align 8
  %.off10527 = add i64 %648, -913
  %649 = icmp ult i64 %.off10527, 85
  br i1 %649, label %tag795, label %header-check-br1523

header-check-br955:                               ; preds = %header-check-br1665
  %.off10454 = add i64 %814, -1001
  %650 = icmp ult i64 %.off10454, 5
  br i1 %650, label %maybe-more-tests963, label %tag26

maybe-more-tests963:                              ; preds = %header-check-br955
  %651 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %652 = invoke {}* @cc_safe_fdefinition({}* %651)
          to label %normal-dest6398 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br964:                               ; preds = %header-check-br1980
  %.off10468 = add i64 %881, -1001
  %653 = icmp ult i64 %.off10468, 5
  br i1 %653, label %maybe-more-tests972, label %tag129

maybe-more-tests972:                              ; preds = %header-check-br964
  %654 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %655 = invoke {}* @cc_safe_fdefinition({}* %654)
          to label %normal-dest4957 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br973:                               ; preds = %header-check-br2912
  %.off10440 = add i64 %1090, -1001
  %656 = icmp ult i64 %.off10440, 5
  br i1 %656, label %maybe-more-tests981, label %tag86

maybe-more-tests981:                              ; preds = %header-check-br973
  %657 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %658 = invoke {}* @cc_safe_fdefinition({}* %657)
          to label %normal-dest3261 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br982:                               ; preds = %header-check-br2122
  %.off10438 = add i64 %923, -1001
  %659 = icmp ult i64 %.off10438, 5
  br i1 %659, label %maybe-more-tests990, label %tag735

maybe-more-tests990:                              ; preds = %header-check-br982
  %660 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %661 = invoke {}* @cc_safe_fdefinition({}* %660)
          to label %normal-dest4391 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest999:                                   ; preds = %tag13
  %662 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %663 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %664 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %665 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 595), align 8
  %ptrtoint1000 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint1001 = add i64 %ptrtoint1000, 7
  %entry-point-addr1002 = inttoptr i64 %entry-point-addr-uint1001 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1003 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1002, align 8
  %666 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1003({}* %12, i64 5, {}* %662, {}* %663, {}* %"closure->LAMBDA2636", {}* %664, {}* %665)
          to label %normal-dest1006 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1006:                                  ; preds = %normal-dest999
  %.elt9138 = extractvalue { {}*, i64 } %666, 0
  %.elt9140 = extractvalue { {}*, i64 } %666, 1
  %cond8143 = icmp eq i64 %.elt9140, 0
  %667 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117061.1 = select i1 %cond8143, {}* %667, {}* %.elt9138
  br label %tag55

header-check-br1031:                              ; preds = %header-check-br2552
  %.off10414 = add i64 %1014, -1001
  %668 = icmp ult i64 %.off10414, 5
  br i1 %668, label %maybe-more-tests1039, label %tag692

maybe-more-tests1039:                             ; preds = %header-check-br1031
  %669 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %670 = invoke {}* @cc_safe_fdefinition({}* %669)
          to label %normal-dest7777 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1041:                                  ; preds = %tag19
  %671 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %672 = invoke {}* @cc_safe_fdefinition({}* %671)
          to label %normal-dest1043 unwind label %cleanup-lpad.loopexit

normal-dest1043:                                  ; preds = %normal-dest1041
  %673 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 560), align 16
  %674 = icmp eq {}* %tabellen-zugriff.0, %673
  %.val10387 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val10388 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117365.0 = select i1 %674, {}* %.val10387, {}* %.val10388
  %675 = icmp eq {}* %G117365.0, %.val10388
  br i1 %675, label %tag366, label %tag223

header-check-br1053:                              ; preds = %header-check-br7887
  %.off10332 = add i64 %2218, -1001
  %676 = icmp ult i64 %.off10332, 5
  br i1 %676, label %maybe-more-tests1061, label %tag515

maybe-more-tests1061:                             ; preds = %header-check-br1053
  %677 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %678 = invoke {}* @cc_safe_fdefinition({}* %677)
          to label %normal-dest2043 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1064:                                  ; preds = %tag26
  %679 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %680 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %681 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %682 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 536), align 16
  %ptrtoint1065 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint1066 = add i64 %ptrtoint1065, 7
  %entry-point-addr1067 = inttoptr i64 %entry-point-addr-uint1066 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1068 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1067, align 8
  %683 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1068({}* %20, i64 5, {}* %679, {}* %680, {}* %"closure->LAMBDA6916", {}* %681, {}* %682)
          to label %normal-dest1071 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1071:                                  ; preds = %normal-dest1064
  %.elt8476 = extractvalue { {}*, i64 } %683, 0
  %.elt8478 = extractvalue { {}*, i64 } %683, 1
  %cond8014 = icmp eq i64 %.elt8478, 0
  %684 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118388.1 = select i1 %cond8014, {}* %684, {}* %.elt8476
  br label %tag293

normal-dest1079:                                  ; preds = %tag31
  %685 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %686 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %687 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %688 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint1081 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint1082 = add i64 %ptrtoint1081, 7
  %entry-point-addr1083 = inttoptr i64 %entry-point-addr-uint1082 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1084 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1083, align 8
  %689 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1084({}* %22, i64 5, {}* %685, {}* %686, {}* %"%DOLIST-VAR1088.010564", {}* %687, {}* %688)
          to label %normal-dest1087 unwind label %cleanup-lpad.loopexit

normal-dest1087:                                  ; preds = %normal-dest1079
  %.elt8685 = extractvalue { {}*, i64 } %689, 0
  %.elt8687 = extractvalue { {}*, i64 } %689, 1
  %cond8051 = icmp eq i64 %.elt8687, 0
  %690 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %"%DOLIST-VAR1088.1" = select i1 %cond8051, {}* %690, {}* %.elt8685
  br label %tag425.backedge

tag425.backedge:                                  ; preds = %normal-dest1087, %tag526
  %691 = phi {}* [ %.pre10580, %tag526 ], [ %690, %normal-dest1087 ]
  %"%DOLIST-VAR1088.0.be" = phi {}* [ %373, %tag526 ], [ %"%DOLIST-VAR1088.1", %normal-dest1087 ]
  %692 = icmp eq {}* %"%DOLIST-VAR1088.0.be", %691
  br i1 %692, label %tag327, label %tag453

header-check-br1094:                              ; preds = %tag32
  %irc-bit-cast1098 = bitcast {}* %"closure->LAMBDA2636" to i8*
  %gep1099 = getelementptr inbounds i8, i8* %irc-bit-cast1098, i64 -9
  %irc-bit-cast1100 = bitcast i8* %gep1099 to i64*
  %693 = load i64, i64* %irc-bit-cast1100, align 8
  %.off10441 = add i64 %693, -913
  %694 = icmp ult i64 %.off10441, 85
  br i1 %694, label %tag78, label %header-check-br7095

normal-dest1108:                                  ; preds = %maybe-more-tests2176
  %ptrtoint1109 = ptrtoint {}* %933 to i64
  %entry-point-addr-uint1110 = add i64 %ptrtoint1109, 7
  %entry-point-addr1111 = inttoptr i64 %entry-point-addr-uint1110 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1112 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1111, align 8
  %695 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1112({}* %933, i64 1, {}* nonnull %"closure->LAMBDA7765", {}* null, {}* null, {}* null)
          to label %normal-dest1115 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1115:                                  ; preds = %normal-dest1108
  %.elt9541 = extractvalue { {}*, i64 } %695, 0
  %.elt9543 = extractvalue { {}*, i64 } %695, 1
  %cond8217 = icmp eq i64 %.elt9543, 0
  %696 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116854.1 = select i1 %cond8217, {}* %696, {}* %.elt9541
  br label %tag888

normal-dest1122:                                  ; preds = %tag38
  %ptrtoint1123 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint1124 = add i64 %ptrtoint1123, 7
  %entry-point-addr1125 = inttoptr i64 %entry-point-addr-uint1124 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1126 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1125, align 8
  %697 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1126({}* %26, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1129 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1129:                                  ; preds = %normal-dest1122
  %.elt9326 = extractvalue { {}*, i64 } %697, 0
  %.elt9328 = extractvalue { {}*, i64 } %697, 1
  %cond8177 = icmp eq i64 %.elt9328, 0
  %698 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118349.0 = select i1 %cond8177, {}* %698, {}* %.elt9326
  %699 = icmp eq {}* %G118349.0, %698
  br i1 %699, label %tag164, label %tag459

header-check-br1135:                              ; preds = %header-check-br7490
  %.off10450 = add i64 %2129, -1001
  %700 = icmp ult i64 %.off10450, 5
  br i1 %700, label %maybe-more-tests1143, label %tag76

maybe-more-tests1143:                             ; preds = %header-check-br1135
  %701 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %702 = invoke {}* @cc_safe_fdefinition({}* %701)
          to label %normal-dest3909 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1153:                                  ; preds = %tag45
  %703 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %704 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %705 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %706 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint1154 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint1155 = add i64 %ptrtoint1154, 7
  %entry-point-addr1156 = inttoptr i64 %entry-point-addr-uint1155 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1157 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1156, align 8
  %707 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1157({}* %28, i64 5, {}* %703, {}* %704, {}* %SEQUENCE.0.ph, {}* %705, {}* %706)
          to label %normal-dest1160 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest1160:                                  ; preds = %normal-dest1153
  %.elt9585 = extractvalue { {}*, i64 } %707, 0
  %.elt9587 = extractvalue { {}*, i64 } %707, 1
  %cond8225 = icmp eq i64 %.elt9587, 0
  %708 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G2095854.1 = select i1 %cond8225, {}* %708, {}* %.elt9585
  br label %tag102

header-check-br1166:                              ; preds = %header-check-br2518
  %.off10358 = add i64 %1010, -1001
  %709 = icmp ult i64 %.off10358, 5
  br i1 %709, label %maybe-more-tests1174, label %tag127

maybe-more-tests1174:                             ; preds = %header-check-br1166
  %710 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %711 = invoke {}* @cc_safe_fdefinition({}* %710)
          to label %normal-dest5379 unwind label %cleanup-lpad.loopexit

normal-dest1176:                                  ; preds = %tag52
  %ptrtoint1177 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint1178 = add i64 %ptrtoint1177, 7
  %entry-point-addr1179 = inttoptr i64 %entry-point-addr-uint1178 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1180 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1179, align 8
  %712 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1180({}* %30, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1183 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1183:                                  ; preds = %normal-dest1176
  %.elt8388 = extractvalue { {}*, i64 } %712, 0
  %.elt8390 = extractvalue { {}*, i64 } %712, 1
  %cond7997 = icmp eq i64 %.elt8390, 0
  %713 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116558.0 = select i1 %cond7997, {}* %713, {}* %.elt8388
  %ptrtoint1190 = ptrtoint {}* %"closure->LAMBDA4881" to i64
  %tag-only1191 = and i64 %ptrtoint1190, 7
  %test1192 = icmp eq i64 %tag-only1191, 1
  br i1 %test1192, label %header-check-br1189, label %tag97

header-check-br1189:                              ; preds = %normal-dest1183
  %irc-bit-cast1193 = bitcast {}* %"closure->LAMBDA4881" to i8*
  %gep1194 = getelementptr inbounds i8, i8* %irc-bit-cast1193, i64 -9
  %irc-bit-cast1195 = bitcast i8* %gep1194 to i64*
  %714 = load i64, i64* %irc-bit-cast1195, align 8
  %.off10311 = add i64 %714, -913
  %715 = icmp ult i64 %.off10311, 85
  br i1 %715, label %tag146, label %header-check-br3251

normal-dest1199:                                  ; preds = %tag53
  %ptrtoint1200 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint1201 = add i64 %ptrtoint1200, 7
  %entry-point-addr1202 = inttoptr i64 %entry-point-addr-uint1201 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1203 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1202, align 8
  %716 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1203({}* %32, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1206 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1206:                                  ; preds = %normal-dest1199
  %.elt9545 = extractvalue { {}*, i64 } %716, 0
  %.elt9547 = extractvalue { {}*, i64 } %716, 1
  %cond8218 = icmp eq i64 %.elt9547, 0
  %717 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116846.0 = select i1 %cond8218, {}* %717, {}* %.elt9545
  %718 = icmp eq {}* %G116846.0, %717
  br i1 %718, label %tag626, label %tag179

normal-dest1212:                                  ; preds = %tag55
  %ptrtoint1213 = ptrtoint {}* %G117061.0 to i64
  %entry-point-addr-uint1214 = add i64 %ptrtoint1213, 7
  %entry-point-addr1215 = inttoptr i64 %entry-point-addr-uint1214 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1216 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1215, align 8
  %719 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1216({}* %G117061.0, i64 1, {}* %34, {}* null, {}* null, {}* null)
          to label %tag442 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br1224:                              ; preds = %tag56
  %irc-bit-cast1228 = bitcast {}* %"closure->LAMBDA5775" to i8*
  %gep1229 = getelementptr inbounds i8, i8* %irc-bit-cast1228, i64 -9
  %irc-bit-cast1230 = bitcast i8* %gep1229 to i64*
  %720 = load i64, i64* %irc-bit-cast1230, align 8
  %.off10473 = add i64 %720, -913
  %721 = icmp ult i64 %.off10473, 85
  br i1 %721, label %tag390, label %header-check-br7566

normal-dest1234:                                  ; preds = %tag57
  %ptrtoint1235 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint1236 = add i64 %ptrtoint1235, 7
  %entry-point-addr1237 = inttoptr i64 %entry-point-addr-uint1236 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1238 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1237, align 8
  %722 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1238({}* %36, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest1241 unwind label %cleanup-lpad.loopexit

normal-dest1241:                                  ; preds = %normal-dest1234
  %.elt8849 = extractvalue { {}*, i64 } %722, 0
  %.elt8851 = extractvalue { {}*, i64 } %722, 1
  %cond8084 = icmp eq i64 %.elt8851, 0
  %723 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT116671.0 = select i1 %cond8084, {}* %723, {}* %.elt8849
  %ptrtoint1248 = ptrtoint {}* %"closure->LAMBDA3566" to i64
  %tag-only1249 = and i64 %ptrtoint1248, 7
  %test1250 = icmp eq i64 %tag-only1249, 1
  br i1 %test1250, label %header-check-br1247, label %tag385

header-check-br1247:                              ; preds = %normal-dest1241
  %irc-bit-cast1251 = bitcast {}* %"closure->LAMBDA3566" to i8*
  %gep1252 = getelementptr inbounds i8, i8* %irc-bit-cast1251, i64 -9
  %irc-bit-cast1253 = bitcast i8* %gep1252 to i64*
  %724 = load i64, i64* %irc-bit-cast1253, align 8
  %.off10385 = add i64 %724, -913
  %725 = icmp ult i64 %.off10385, 85
  br i1 %725, label %tag497, label %header-check-br7864

header-check-br1256:                              ; preds = %tag58
  %irc-bit-cast1260 = bitcast {}* %"closure->LAMBDA7765" to i8*
  %gep1261 = getelementptr inbounds i8, i8* %irc-bit-cast1260, i64 -9
  %irc-bit-cast1262 = bitcast i8* %gep1261 to i64*
  %726 = load i64, i64* %irc-bit-cast1262, align 8
  %.off10485 = add i64 %726, -913
  %727 = icmp ult i64 %.off10485, 85
  br i1 %727, label %tag239, label %header-check-br4716

normal-dest1272:                                  ; preds = %tag61
  %ptrtoint1275 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint1276 = add i64 %ptrtoint1275, 7
  %entry-point-addr1277 = inttoptr i64 %entry-point-addr-uint1276 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1278 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1277, align 8
  %728 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1278({}* %40, i64 2, {}* nonnull %tabellen-zugriff.0, {}* nonnull %2116, {}* null, {}* null)
          to label %normal-dest1281 unwind label %cleanup-lpad.loopexit

normal-dest1281:                                  ; preds = %normal-dest1272
  %.elt8765 = extractvalue { {}*, i64 } %728, 0
  %.elt8767 = extractvalue { {}*, i64 } %728, 1
  %cond8066 = icmp eq i64 %.elt8767, 0
  %729 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117627.1 = select i1 %cond8066, {}* %729, {}* %.elt8765
  br label %tag109

header-check-br1293:                              ; preds = %header-check-br7755
  %.off10510 = add i64 %2187, -1001
  %730 = icmp ult i64 %.off10510, 5
  br i1 %730, label %maybe-more-tests1301, label %tag391

maybe-more-tests1301:                             ; preds = %header-check-br1293
  %731 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %732 = invoke {}* @cc_safe_fdefinition({}* %731)
          to label %normal-dest7440 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br1309:                              ; preds = %header-check-br5988
  %.off10504 = add i64 %1798, -1001
  %733 = icmp ult i64 %.off10504, 5
  br i1 %733, label %maybe-more-tests1317, label %tag72

maybe-more-tests1317:                             ; preds = %header-check-br1309
  %734 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %735 = invoke {}* @cc_safe_fdefinition({}* %734)
          to label %normal-dest4007 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1325:                                  ; preds = %tag69
  %736 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %737 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %738 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %739 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint1327 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint1328 = add i64 %ptrtoint1327, 7
  %entry-point-addr1329 = inttoptr i64 %entry-point-addr-uint1328 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1330 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1329, align 8
  %740 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1330({}* %47, i64 5, {}* %736, {}* %737, {}* %"%DOLIST-VAR1077.010562", {}* %738, {}* %739)
          to label %normal-dest1333 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1333:                                  ; preds = %normal-dest1325
  %.elt8380 = extractvalue { {}*, i64 } %740, 0
  %.elt8382 = extractvalue { {}*, i64 } %740, 1
  %cond7995 = icmp eq i64 %.elt8382, 0
  %741 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %"%DOLIST-VAR1077.1" = select i1 %cond7995, {}* %741, {}* %.elt8380
  br label %tag28.backedge

tag28.backedge:                                   ; preds = %normal-dest1333, %tag242
  %742 = phi {}* [ %.pre10578, %tag242 ], [ %741, %normal-dest1333 ]
  %"%DOLIST-VAR1077.0.be" = phi {}* [ %177, %tag242 ], [ %"%DOLIST-VAR1077.1", %normal-dest1333 ]
  %743 = icmp eq {}* %"%DOLIST-VAR1077.0.be", %742
  br i1 %743, label %tag173, label %tag822

normal-dest1340:                                  ; preds = %tag70
  %ptrtoint1341 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint1342 = add i64 %ptrtoint1341, 7
  %entry-point-addr1343 = inttoptr i64 %entry-point-addr-uint1342 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1344 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1343, align 8
  %744 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1344({}* %49, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1347 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1347:                                  ; preds = %normal-dest1340
  %.elt9434 = extractvalue { {}*, i64 } %744, 0
  %.elt9436 = extractvalue { {}*, i64 } %744, 1
  %cond8198 = icmp eq i64 %.elt9436, 0
  %745 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116536.0 = select i1 %cond8198, {}* %745, {}* %.elt9434
  %ptrtoint1354 = ptrtoint {}* %"closure->LAMBDA5775" to i64
  %tag-only1355 = and i64 %ptrtoint1354, 7
  %test1356 = icmp eq i64 %tag-only1355, 1
  br i1 %test1356, label %header-check-br1353, label %tag677

header-check-br1353:                              ; preds = %normal-dest1347
  %irc-bit-cast1357 = bitcast {}* %"closure->LAMBDA5775" to i8*
  %gep1358 = getelementptr inbounds i8, i8* %irc-bit-cast1357, i64 -9
  %irc-bit-cast1359 = bitcast i8* %gep1358 to i64*
  %746 = load i64, i64* %irc-bit-cast1359, align 8
  %.off10477 = add i64 %746, -913
  %747 = icmp ult i64 %.off10477, 85
  br i1 %747, label %tag525, label %header-check-br3840

normal-dest1363:                                  ; preds = %tag71
  %748 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %749 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %750 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %751 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 546), align 16
  %ptrtoint1364 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint1365 = add i64 %ptrtoint1364, 7
  %entry-point-addr1366 = inttoptr i64 %entry-point-addr-uint1365 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1367 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1366, align 8
  %752 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1367({}* %51, i64 5, {}* %748, {}* %749, {}* %"closure->LAMBDA7791", {}* %750, {}* %751)
          to label %normal-dest1370 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1370:                                  ; preds = %normal-dest1363
  %.elt8562 = extractvalue { {}*, i64 } %752, 0
  %.elt8564 = extractvalue { {}*, i64 } %752, 1
  %cond8029 = icmp eq i64 %.elt8564, 0
  %753 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118087.1 = select i1 %cond8029, {}* %753, {}* %.elt8562
  br label %tag784

normal-dest1377:                                  ; preds = %tag72
  %754 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %755 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %756 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %757 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 505), align 8
  %ptrtoint1378 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint1379 = add i64 %ptrtoint1378, 7
  %entry-point-addr1380 = inttoptr i64 %entry-point-addr-uint1379 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1381 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1380, align 8
  %758 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1381({}* %53, i64 5, {}* %754, {}* %755, {}* %"closure->LAMBDA5936", {}* %756, {}* %757)
          to label %normal-dest1384 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1384:                                  ; preds = %normal-dest1377
  %.elt9605 = extractvalue { {}*, i64 } %758, 0
  %.elt9607 = extractvalue { {}*, i64 } %758, 1
  %cond8230 = icmp eq i64 %.elt9607, 0
  %759 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119094.1 = select i1 %cond8230, {}* %759, {}* %.elt9605
  br label %tag572

normal-dest1398:                                  ; preds = %tag76
  %760 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %761 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %762 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %763 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 550), align 16
  %ptrtoint1399 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint1400 = add i64 %ptrtoint1399, 7
  %entry-point-addr1401 = inttoptr i64 %entry-point-addr-uint1400 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1402 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1401, align 8
  %764 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1402({}* %55, i64 5, {}* %760, {}* %761, {}* %"closure->LAMBDA2833", {}* %762, {}* %763)
          to label %normal-dest1405 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1405:                                  ; preds = %normal-dest1398
  %.elt9270 = extractvalue { {}*, i64 } %764, 0
  %.elt9272 = extractvalue { {}*, i64 } %764, 1
  %cond8167 = icmp eq i64 %.elt9272, 0
  %765 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117962.1 = select i1 %cond8167, {}* %765, {}* %.elt9270
  br label %tag189

normal-dest1437:                                  ; preds = %tag83
  %766 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %767 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %768 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %769 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 603), align 8
  %ptrtoint1438 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint1439 = add i64 %ptrtoint1438, 7
  %entry-point-addr1440 = inttoptr i64 %entry-point-addr-uint1439 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1441 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1440, align 8
  %770 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1441({}* %61, i64 5, {}* %766, {}* %767, {}* %"closure->LAMBDA7765", {}* %768, {}* %769)
          to label %normal-dest1444 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1444:                                  ; preds = %normal-dest1437
  %.elt9510 = extractvalue { {}*, i64 } %770, 0
  %.elt9512 = extractvalue { {}*, i64 } %770, 1
  %cond8213 = icmp eq i64 %.elt9512, 0
  %771 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116877.1 = select i1 %cond8213, {}* %771, {}* %.elt9510
  br label %tag239

normal-dest1457:                                  ; preds = %tag86
  %772 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %773 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %774 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %775 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 593), align 8
  %ptrtoint1458 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint1459 = add i64 %ptrtoint1458, 7
  %entry-point-addr1460 = inttoptr i64 %entry-point-addr-uint1459 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1461 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1460, align 8
  %776 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1461({}* %65, i64 5, {}* %772, {}* %773, {}* %"closure->LAMBDA2636", {}* %774, {}* %775)
          to label %normal-dest1464 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1464:                                  ; preds = %normal-dest1457
  %.elt9214 = extractvalue { {}*, i64 } %776, 0
  %.elt9216 = extractvalue { {}*, i64 } %776, 1
  %cond8157 = icmp eq i64 %.elt9216, 0
  %777 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117014.1 = select i1 %cond8157, {}* %777, {}* %.elt9214
  br label %tag96

header-check-br1484:                              ; preds = %tag600
  %irc-bit-cast1488 = bitcast {}* %673 to i8*
  %gep1489 = getelementptr inbounds i8, i8* %irc-bit-cast1488, i64 -9
  %irc-bit-cast1490 = bitcast i8* %gep1489 to i64*
  %778 = load i64, i64* %irc-bit-cast1490, align 8
  %779 = add i64 %778, -1309
  %780 = lshr i64 %779, 3
  %781 = shl i64 %779, 61
  %782 = or i64 %780, %781
  switch i64 %782, label %tag395 [
    i64 2, label %tag421
    i64 4, label %tag421
    i64 5, label %tag421
    i64 0, label %tag421
  ]

header-check-br1491:                              ; preds = %tag361
  %irc-bit-cast1495 = bitcast {}* %1376 to i8*
  %gep1496 = getelementptr inbounds i8, i8* %irc-bit-cast1495, i64 -9
  %irc-bit-cast1497 = bitcast i8* %gep1496 to i64*
  %783 = load i64, i64* %irc-bit-cast1497, align 8
  %784 = add i64 %783, -1309
  %785 = lshr i64 %784, 3
  %786 = shl i64 %784, 61
  %787 = or i64 %785, %786
  switch i64 %787, label %tag413 [
    i64 2, label %tag410
    i64 4, label %tag410
    i64 5, label %tag410
    i64 0, label %tag410
  ]

normal-dest1510:                                  ; preds = %tag97
  %788 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %789 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %790 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %791 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 525), align 8
  %ptrtoint1511 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint1512 = add i64 %ptrtoint1511, 7
  %entry-point-addr1513 = inttoptr i64 %entry-point-addr-uint1512 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1514 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1513, align 8
  %792 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1514({}* %72, i64 5, {}* %788, {}* %789, {}* %"closure->LAMBDA4881", {}* %790, {}* %791)
          to label %normal-dest1517 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1517:                                  ; preds = %normal-dest1510
  %.elt8392 = extractvalue { {}*, i64 } %792, 0
  %.elt8394 = extractvalue { {}*, i64 } %792, 1
  %cond7998 = icmp eq i64 %.elt8394, 0
  %793 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118645.1 = select i1 %cond7998, {}* %793, {}* %.elt8392
  br label %tag146

header-check-br1523:                              ; preds = %header-check-br
  %.off10528 = add i64 %648, -1001
  %794 = icmp ult i64 %.off10528, 5
  br i1 %794, label %maybe-more-tests1531, label %tag280

maybe-more-tests1531:                             ; preds = %header-check-br1523
  %795 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %796 = invoke {}* @cc_safe_fdefinition({}* %795)
          to label %normal-dest7054 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1533:                                  ; preds = %maybe-more-tests5090
  %ptrtoint1534 = ptrtoint {}* %1605 to i64
  %entry-point-addr-uint1535 = add i64 %ptrtoint1534, 7
  %entry-point-addr1536 = inttoptr i64 %entry-point-addr-uint1535 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1537 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1536, align 8
  %797 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1537({}* %1605, i64 1, {}* nonnull %"closure->LAMBDA2833", {}* null, {}* null, {}* null)
          to label %normal-dest1540 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1540:                                  ; preds = %normal-dest1533
  %.elt9290 = extractvalue { {}*, i64 } %797, 0
  %.elt9292 = extractvalue { {}*, i64 } %797, 1
  %cond8170 = icmp eq i64 %.elt9292, 0
  %798 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117948.1 = select i1 %cond8170, {}* %798, {}* %.elt9290
  br label %tag751

normal-dest1549:                                  ; preds = %tag103
  %ptrtoint1550 = ptrtoint {}* %G119435.0 to i64
  %entry-point-addr-uint1551 = add i64 %ptrtoint1550, 7
  %entry-point-addr1552 = inttoptr i64 %entry-point-addr-uint1551 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1553 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1552, align 8
  %799 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1553({}* %G119435.0, i64 2, {}* %78, {}* %tabellen-titel.0, {}* null, {}* null)
          to label %tag757 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1562:                                  ; preds = %tag105
  %ptrtoint1564 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint1565 = add i64 %ptrtoint1564, 7
  %entry-point-addr1566 = inttoptr i64 %entry-point-addr-uint1565 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1567 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1566, align 8
  %800 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1567({}* %80, i64 2, {}* %seiten-breite.0, {}* %.zeilen-breite.2, {}* null, {}* null)
          to label %normal-dest1570 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1570:                                  ; preds = %normal-dest1562
  %.elt8269 = extractvalue { {}*, i64 } %800, 0
  %.elt8271 = extractvalue { {}*, i64 } %800, 1
  %cond = icmp eq i64 %.elt8271, 0
  %801 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119528.1 = select i1 %cond, {}* %801, {}* %.elt8269
  br label %tag852

normal-dest1582:                                  ; preds = %tag108
  %.elt8877 = extractvalue { {}*, i64 } %81, 0
  %.elt8879 = extractvalue { {}*, i64 } %81, 1
  %cond8091 = icmp eq i64 %.elt8879, 0
  %802 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117389.0 = select i1 %cond8091, {}* %802, {}* %.elt8877
  %ptrtoint1588 = ptrtoint {}* %357 to i64
  %entry-point-addr-uint1589 = add i64 %ptrtoint1588, 7
  %entry-point-addr1590 = inttoptr i64 %entry-point-addr-uint1589 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1591 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1590, align 8
  %803 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1591({}* %357, i64 1, {}* %G117389.0, {}* null, {}* null, {}* null)
          to label %normal-dest1594 unwind label %cleanup-lpad.loopexit

normal-dest1594:                                  ; preds = %normal-dest1582
  %.elt8881 = extractvalue { {}*, i64 } %803, 0
  %.elt8883 = extractvalue { {}*, i64 } %803, 1
  %cond8092 = icmp eq i64 %.elt8883, 0
  %804 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117387.0 = select i1 %cond8092, {}* %804, {}* %.elt8881
  %ptrtoint1600 = ptrtoint {}* %G117384.0 to i64
  %entry-point-addr-uint1601 = add i64 %ptrtoint1600, 7
  %entry-point-addr1602 = inttoptr i64 %entry-point-addr-uint1601 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1603 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1602, align 8
  %805 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1603({}* %G117384.0, i64 3, {}* %OUT116671.0, {}* %X_FORMAT.0, {}* %G117387.0, {}* null)
          to label %tag248 unwind label %cleanup-lpad.loopexit

header-check-br1611:                              ; preds = %tag111
  %irc-bit-cast1615 = bitcast {}* %"closure->LAMBDA7791" to i8*
  %gep1616 = getelementptr inbounds i8, i8* %irc-bit-cast1615, i64 -9
  %irc-bit-cast1617 = bitcast i8* %gep1616 to i64*
  %806 = load i64, i64* %irc-bit-cast1617, align 8
  %.off10327 = add i64 %806, -913
  %807 = icmp ult i64 %.off10327, 85
  br i1 %807, label %tag284, label %header-check-br5137

normal-dest1621:                                  ; preds = %tag112
  %ptrtoint1622 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint1623 = add i64 %ptrtoint1622, 7
  %entry-point-addr1624 = inttoptr i64 %entry-point-addr-uint1623 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1625 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1624, align 8
  %808 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1625({}* %85, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1628 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1628:                                  ; preds = %normal-dest1621
  %.elt9657 = extractvalue { {}*, i64 } %808, 0
  %.elt9659 = extractvalue { {}*, i64 } %808, 1
  %cond8239 = icmp eq i64 %.elt9659, 0
  %809 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116497.0 = select i1 %cond8239, {}* %809, {}* %.elt9657
  %ptrtoint1635 = ptrtoint {}* %"closure->LAMBDA6825" to i64
  %tag-only1636 = and i64 %ptrtoint1635, 7
  %test1637 = icmp eq i64 %tag-only1636, 1
  br i1 %test1637, label %header-check-br1634, label %tag474

header-check-br1634:                              ; preds = %normal-dest1628
  %irc-bit-cast1638 = bitcast {}* %"closure->LAMBDA6825" to i8*
  %gep1639 = getelementptr inbounds i8, i8* %irc-bit-cast1638, i64 -9
  %irc-bit-cast1640 = bitcast i8* %gep1639 to i64*
  %810 = load i64, i64* %irc-bit-cast1640, align 8
  %.off10513 = add i64 %810, -913
  %811 = icmp ult i64 %.off10513, 85
  br i1 %811, label %tag258, label %header-check-br4687

normal-dest1645:                                  ; preds = %maybe-more-tests7840
  %ptrtoint1646 = ptrtoint {}* %2203 to i64
  %entry-point-addr-uint1647 = add i64 %ptrtoint1646, 7
  %entry-point-addr1648 = inttoptr i64 %entry-point-addr-uint1647 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1649 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1648, align 8
  %812 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1649({}* %2203, i64 1, {}* nonnull %"closure->LAMBDA2833", {}* null, {}* null, {}* null)
          to label %normal-dest1652 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1652:                                  ; preds = %normal-dest1645
  %.elt9238 = extractvalue { {}*, i64 } %812, 0
  %.elt9240 = extractvalue { {}*, i64 } %812, 1
  %cond8161 = icmp eq i64 %.elt9240, 0
  %813 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118009.1 = select i1 %cond8161, {}* %813, {}* %.elt9238
  br label %tag607

header-check-br1665:                              ; preds = %tag119
  %irc-bit-cast1669 = bitcast {}* %"closure->LAMBDA6916" to i8*
  %gep1670 = getelementptr inbounds i8, i8* %irc-bit-cast1669, i64 -9
  %irc-bit-cast1671 = bitcast i8* %gep1670 to i64*
  %814 = load i64, i64* %irc-bit-cast1671, align 8
  %.off10453 = add i64 %814, -913
  %815 = icmp ult i64 %.off10453, 85
  br i1 %815, label %tag293, label %header-check-br955

header-check-br1674:                              ; preds = %tag122
  %irc-bit-cast1678 = bitcast {}* %"closure->LAMBDA3566" to i8*
  %gep1679 = getelementptr inbounds i8, i8* %irc-bit-cast1678, i64 -9
  %irc-bit-cast1680 = bitcast i8* %gep1679 to i64*
  %816 = load i64, i64* %irc-bit-cast1680, align 8
  %.off10367 = add i64 %816, -913
  %817 = icmp ult i64 %.off10367, 85
  br i1 %817, label %tag824, label %header-check-br4793

header-check-br1683:                              ; preds = %header-check-br6485
  %.off10382 = add i64 %1906, -1001
  %818 = icmp ult i64 %.off10382, 5
  br i1 %818, label %maybe-more-tests1691, label %tag302

maybe-more-tests1691:                             ; preds = %header-check-br1683
  %819 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %820 = invoke {}* @cc_safe_fdefinition({}* %819)
          to label %normal-dest6185 unwind label %cleanup-lpad.loopexit

normal-dest1702:                                  ; preds = %tag127
  %821 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %822 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %823 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %824 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 586), align 16
  %ptrtoint1703 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint1704 = add i64 %ptrtoint1703, 7
  %entry-point-addr1705 = inttoptr i64 %entry-point-addr-uint1704 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1706 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1705, align 8
  %825 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1706({}* %94, i64 5, {}* %821, {}* %822, {}* %"closure->LAMBDA2695", {}* %823, {}* %824)
          to label %normal-dest1709 unwind label %cleanup-lpad.loopexit

normal-dest1709:                                  ; preds = %normal-dest1702
  %.elt8697 = extractvalue { {}*, i64 } %825, 0
  %.elt8699 = extractvalue { {}*, i64 } %825, 1
  %cond8054 = icmp eq i64 %.elt8699, 0
  %826 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117251.1 = select i1 %cond8054, {}* %826, {}* %.elt8697
  br label %tag210

header-check-br1715:                              ; preds = %header-check-br3974
  %.off10464 = add i64 %1346, -1001
  %827 = icmp ult i64 %.off10464, 5
  br i1 %827, label %maybe-more-tests1723, label %tag206

maybe-more-tests1723:                             ; preds = %header-check-br1715
  %828 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %829 = invoke {}* @cc_safe_fdefinition({}* %828)
          to label %normal-dest3453 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1725:                                  ; preds = %tag129
  %830 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %831 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %832 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %833 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 529), align 8
  %ptrtoint1726 = ptrtoint {}* %96 to i64
  %entry-point-addr-uint1727 = add i64 %ptrtoint1726, 7
  %entry-point-addr1728 = inttoptr i64 %entry-point-addr-uint1727 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1729 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1728, align 8
  %834 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1729({}* %96, i64 5, {}* %830, {}* %831, {}* %"closure->LAMBDA", {}* %832, {}* %833)
          to label %normal-dest1732 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1732:                                  ; preds = %normal-dest1725
  %.elt9382 = extractvalue { {}*, i64 } %834, 0
  %.elt9384 = extractvalue { {}*, i64 } %834, 1
  %cond8189 = icmp eq i64 %.elt9384, 0
  %835 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118521.1 = select i1 %cond8189, {}* %835, {}* %.elt9382
  br label %tag834

normal-dest1739:                                  ; preds = %tag130
  %836 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 508), align 16
  %ptrtoint1740 = ptrtoint {}* %98 to i64
  %entry-point-addr-uint1741 = add i64 %ptrtoint1740, 7
  %entry-point-addr1742 = inttoptr i64 %entry-point-addr-uint1741 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1743 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1742, align 8
  %837 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1743({}* %98, i64 2, {}* %G2095854.0, {}* %836, {}* null, {}* null)
          to label %tag580 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest1757:                                  ; preds = %tag133
  %838 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %839 = invoke {}* @cc_safe_fdefinition({}* %838)
          to label %normal-dest1763 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1763:                                  ; preds = %normal-dest1757
  %ptrtoint1764 = ptrtoint {}* %839 to i64
  %entry-point-addr-uint1765 = add i64 %ptrtoint1764, 7
  %entry-point-addr1766 = inttoptr i64 %entry-point-addr-uint1765 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1767 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1766, align 8
  %840 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1767({}* %839, i64 1, {}* %G116638.0, {}* null, {}* null, {}* null)
          to label %tag863 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br1775:                              ; preds = %header-check-br5569
  %.off10410 = add i64 %1701, -1001
  %841 = icmp ult i64 %.off10410, 5
  br i1 %841, label %maybe-more-tests1783, label %tag649

maybe-more-tests1783:                             ; preds = %header-check-br1775
  %842 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %843 = invoke {}* @cc_safe_fdefinition({}* %842)
          to label %normal-dest2701 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1799:                                  ; preds = %maybe-more-tests7616
  %ptrtoint1800 = ptrtoint {}* %2152 to i64
  %entry-point-addr-uint1801 = add i64 %ptrtoint1800, 7
  %entry-point-addr1802 = inttoptr i64 %entry-point-addr-uint1801 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1803 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1802, align 8
  %844 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1803({}* %2152, i64 1, {}* nonnull %"closure->LAMBDA5936", {}* null, {}* null, {}* null)
          to label %normal-dest1806 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1806:                                  ; preds = %normal-dest1799
  %.elt9597 = extractvalue { {}*, i64 } %844, 0
  %.elt9599 = extractvalue { {}*, i64 } %844, 1
  %cond8228 = icmp eq i64 %.elt9599, 0
  %845 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119117.1 = select i1 %cond8228, {}* %845, {}* %.elt9597
  br label %tag553

normal-dest1813:                                  ; preds = %tag142
  %846 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %847 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %848 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %849 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 521), align 8
  %ptrtoint1814 = ptrtoint {}* %107 to i64
  %entry-point-addr-uint1815 = add i64 %ptrtoint1814, 7
  %entry-point-addr1816 = inttoptr i64 %entry-point-addr-uint1815 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1817 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1816, align 8
  %850 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1817({}* %107, i64 5, {}* %846, {}* %847, {}* %"closure->LAMBDA4881", {}* %848, {}* %849)
          to label %normal-dest1820 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1820:                                  ; preds = %normal-dest1813
  %.elt8444 = extractvalue { {}*, i64 } %850, 0
  %.elt8446 = extractvalue { {}*, i64 } %850, 1
  %cond8008 = icmp eq i64 %.elt8446, 0
  %851 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118588.1 = select i1 %cond8008, {}* %851, {}* %.elt8444
  br label %tag555

normal-dest1827:                                  ; preds = %tag146
  %852 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 522), align 16
  %853 = invoke {}* @cc_safe_fdefinition({}* %852)
          to label %normal-dest1829 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1829:                                  ; preds = %normal-dest1827
  %ptrtoint1831 = ptrtoint {}* %853 to i64
  %entry-point-addr-uint1832 = add i64 %ptrtoint1831, 7
  %entry-point-addr1833 = inttoptr i64 %entry-point-addr-uint1832 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1834 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1833, align 8
  %854 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1834({}* %853, i64 2, {}* %X_ELEMENT1830.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest1837 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1837:                                  ; preds = %normal-dest1829
  %.elt8396 = extractvalue { {}*, i64 } %854, 0
  %.elt8398 = extractvalue { {}*, i64 } %854, 1
  %cond7999 = icmp eq i64 %.elt8398, 0
  %855 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118650.0 = select i1 %cond7999, {}* %855, {}* %.elt8396
  %ptrtoint1843 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint1844 = add i64 %ptrtoint1843, 7
  %entry-point-addr1845 = inttoptr i64 %entry-point-addr-uint1844 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1846 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1845, align 8
  %856 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1846({}* %109, i64 1, {}* %G118650.0, {}* null, {}* null, {}* null)
          to label %normal-dest1849 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1849:                                  ; preds = %normal-dest1837
  %.elt8400 = extractvalue { {}*, i64 } %856, 0
  %.elt8402 = extractvalue { {}*, i64 } %856, 1
  %cond8000 = icmp eq i64 %.elt8402, 0
  %857 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118648.0 = select i1 %cond8000, {}* %857, {}* %.elt8400
  %ptrtoint1855 = ptrtoint {}* %G118645.0 to i64
  %entry-point-addr-uint1856 = add i64 %ptrtoint1855, 7
  %entry-point-addr1857 = inttoptr i64 %entry-point-addr-uint1856 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1858 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1857, align 8
  %858 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1858({}* %G118645.0, i64 3, {}* %G116558.0, {}* %X_FORMAT.0, {}* %G118648.0, {}* null)
          to label %normal-dest1861 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1861:                                  ; preds = %normal-dest1849
  %859 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %860 = invoke {}* @cc_safe_fdefinition({}* %859)
          to label %normal-dest1867 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1867:                                  ; preds = %normal-dest1861
  %ptrtoint1868 = ptrtoint {}* %860 to i64
  %entry-point-addr-uint1869 = add i64 %ptrtoint1868, 7
  %entry-point-addr1870 = inttoptr i64 %entry-point-addr-uint1869 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1871 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1870, align 8
  %861 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1871({}* %860, i64 1, {}* %G116558.0, {}* null, {}* null, {}* null)
          to label %tag685 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1899:                                  ; preds = %tag151
  %862 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %863 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %864 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %865 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 554), align 16
  %ptrtoint1900 = ptrtoint {}* %112 to i64
  %entry-point-addr-uint1901 = add i64 %ptrtoint1900, 7
  %entry-point-addr1902 = inttoptr i64 %entry-point-addr-uint1901 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1903 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1902, align 8
  %866 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1903({}* %112, i64 5, {}* %862, {}* %863, {}* %"closure->LAMBDA4828", {}* %864, {}* %865)
          to label %normal-dest1906 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1906:                                  ; preds = %normal-dest1899
  %.elt9114 = extractvalue { {}*, i64 } %866, 0
  %.elt9116 = extractvalue { {}*, i64 } %866, 1
  %cond8138 = icmp eq i64 %.elt9116, 0
  %867 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117746.1 = select i1 %cond8138, {}* %867, {}* %.elt9114
  br label %tag796

normal-dest1913:                                  ; preds = %maybe-more-tests4695
  %ptrtoint1914 = ptrtoint {}* %1522 to i64
  %entry-point-addr-uint1915 = add i64 %ptrtoint1914, 7
  %entry-point-addr1916 = inttoptr i64 %entry-point-addr-uint1915 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1917 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1916, align 8
  %868 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1917({}* %1522, i64 1, {}* nonnull %"closure->LAMBDA6825", {}* null, {}* null, {}* null)
          to label %normal-dest1920 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1920:                                  ; preds = %normal-dest1913
  %.elt9677 = extractvalue { {}*, i64 } %868, 0
  %.elt9679 = extractvalue { {}*, i64 } %868, 1
  %cond8242 = icmp eq i64 %.elt9679, 0
  %869 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119210.1 = select i1 %cond8242, {}* %869, {}* %.elt9677
  br label %tag258

header-check-br1926:                              ; preds = %header-check-br5480
  %.off10494 = add i64 %1685, -1001
  %870 = icmp ult i64 %.off10494, 5
  br i1 %870, label %maybe-more-tests1934, label %tag700

maybe-more-tests1934:                             ; preds = %header-check-br1926
  %871 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %872 = invoke {}* @cc_safe_fdefinition({}* %871)
          to label %normal-dest4052 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br1935:                              ; preds = %header-check-br4184
  %.off10460 = add i64 %1392, -1001
  %873 = icmp ult i64 %.off10460, 5
  br i1 %873, label %maybe-more-tests1943, label %tag205

maybe-more-tests1943:                             ; preds = %header-check-br1935
  %874 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %875 = invoke {}* @cc_safe_fdefinition({}* %874)
          to label %normal-dest2280 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br1950:                              ; preds = %header-check-br3705
  %.off10392 = add i64 %1295, -1001
  %876 = icmp ult i64 %.off10392, 5
  br i1 %876, label %maybe-more-tests1958, label %tag355

maybe-more-tests1958:                             ; preds = %header-check-br1950
  %877 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %878 = invoke {}* @cc_safe_fdefinition({}* %877)
          to label %normal-dest5250 unwind label %cleanup-lpad.loopexit

normal-dest1967:                                  ; preds = %tag161
  %ptrtoint1968 = ptrtoint {}* %116 to i64
  %entry-point-addr-uint1969 = add i64 %ptrtoint1968, 7
  %entry-point-addr1970 = inttoptr i64 %entry-point-addr-uint1969 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1971 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1970, align 8
  %879 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1971({}* %116, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1974 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1974:                                  ; preds = %normal-dest1967
  %.elt9378 = extractvalue { {}*, i64 } %879, 0
  %.elt9380 = extractvalue { {}*, i64 } %879, 1
  %cond8188 = icmp eq i64 %.elt9380, 0
  %880 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116573.0 = select i1 %cond8188, {}* %880, {}* %.elt9378
  %ptrtoint1981 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only1982 = and i64 %ptrtoint1981, 7
  %test1983 = icmp eq i64 %tag-only1982, 1
  br i1 %test1983, label %header-check-br1980, label %tag129

header-check-br1980:                              ; preds = %normal-dest1974
  %irc-bit-cast1984 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1985 = getelementptr inbounds i8, i8* %irc-bit-cast1984, i64 -9
  %irc-bit-cast1986 = bitcast i8* %gep1985 to i64*
  %881 = load i64, i64* %irc-bit-cast1986, align 8
  %.off10467 = add i64 %881, -913
  %882 = icmp ult i64 %.off10467, 85
  br i1 %882, label %tag834, label %header-check-br964

header-check-br1997:                              ; preds = %tag164
  %irc-bit-cast2001 = bitcast {}* %"closure->LAMBDA6916" to i8*
  %gep2002 = getelementptr inbounds i8, i8* %irc-bit-cast2001, i64 -9
  %irc-bit-cast2003 = bitcast i8* %gep2002 to i64*
  %883 = load i64, i64* %irc-bit-cast2003, align 8
  %.off10461 = add i64 %883, -913
  %884 = icmp ult i64 %.off10461, 85
  br i1 %884, label %tag858, label %header-check-br7453

normal-dest2007:                                  ; preds = %tag165
  %885 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %886 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %887 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %888 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 497), align 8
  %ptrtoint2008 = ptrtoint {}* %118 to i64
  %entry-point-addr-uint2009 = add i64 %ptrtoint2008, 7
  %entry-point-addr2010 = inttoptr i64 %entry-point-addr-uint2009 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2011 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2010, align 8
  %889 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2011({}* %118, i64 5, {}* %885, {}* %886, {}* %"closure->LAMBDA6825", {}* %887, {}* %888)
          to label %normal-dest2014 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2014:                                  ; preds = %normal-dest2007
  %.elt9705 = extractvalue { {}*, i64 } %889, 0
  %.elt9707 = extractvalue { {}*, i64 } %889, 1
  %cond8248 = icmp eq i64 %.elt9707, 0
  %890 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119159.1 = select i1 %cond8248, {}* %890, {}* %.elt9705
  br label %tag886

normal-dest2021:                                  ; preds = %maybe-more-tests3839
  %ptrtoint2022 = ptrtoint {}* %1319 to i64
  %entry-point-addr-uint2023 = add i64 %ptrtoint2022, 7
  %entry-point-addr2024 = inttoptr i64 %entry-point-addr-uint2023 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2025 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2024, align 8
  %891 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2025({}* %1319, i64 1, {}* nonnull %"closure->LAMBDA3275", {}* null, {}* null, {}* null)
          to label %normal-dest2028 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2028:                                  ; preds = %normal-dest2021
  %.elt9038 = extractvalue { {}*, i64 } %891, 0
  %.elt9040 = extractvalue { {}*, i64 } %891, 1
  %cond8123 = icmp eq i64 %.elt9040, 0
  %892 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117120.1 = select i1 %cond8123, {}* %892, {}* %.elt9038
  br label %tag392

header-check-br2035:                              ; preds = %tag877
  %irc-bit-cast2039 = bitcast {}* %1470 to i8*
  %gep2040 = getelementptr inbounds i8, i8* %irc-bit-cast2039, i64 -9
  %irc-bit-cast2041 = bitcast i8* %gep2040 to i64*
  %893 = load i64, i64* %irc-bit-cast2041, align 8
  %894 = add i64 %893, -1309
  %895 = lshr i64 %894, 3
  %896 = shl i64 %894, 61
  %897 = or i64 %895, %896
  switch i64 %897, label %tag307 [
    i64 2, label %tag577
    i64 4, label %tag577
    i64 5, label %tag577
    i64 0, label %tag577
  ]

normal-dest2043:                                  ; preds = %maybe-more-tests1061
  %ptrtoint2044 = ptrtoint {}* %678 to i64
  %entry-point-addr-uint2045 = add i64 %ptrtoint2044, 7
  %entry-point-addr2046 = inttoptr i64 %entry-point-addr-uint2045 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2047 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2046, align 8
  %898 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2047({}* %678, i64 1, {}* nonnull %"closure->LAMBDA7791", {}* null, {}* null, {}* null)
          to label %normal-dest2050 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2050:                                  ; preds = %normal-dest2043
  %.elt8550 = extractvalue { {}*, i64 } %898, 0
  %.elt8552 = extractvalue { {}*, i64 } %898, 1
  %cond8026 = icmp eq i64 %.elt8552, 0
  %899 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118131.1 = select i1 %cond8026, {}* %899, {}* %.elt8550
  br label %tag719

normal-dest2056:                                  ; preds = %tag173
  %900 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %901 = icmp eq {}* %stream.0, %900
  %.val10318 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118558.0 = select i1 %901, {}* %900, {}* %.val10318
  %902 = icmp eq {}* %G118558.0, %.val10318
  br i1 %902, label %tag344, label %tag434

normal-dest2062:                                  ; preds = %tag174
  %903 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %904 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %905 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %906 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint2063 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint2064 = add i64 %ptrtoint2063, 7
  %entry-point-addr2065 = inttoptr i64 %entry-point-addr-uint2064 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2066 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2065, align 8
  %907 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2066({}* %123, i64 5, {}* %903, {}* %904, {}* %"%DOLIST-VAR1088.010564", {}* %905, {}* %906)
          to label %normal-dest2069 unwind label %cleanup-lpad.loopexit

normal-dest2069:                                  ; preds = %normal-dest2062
  %.elt8981 = extractvalue { {}*, i64 } %907, 0
  %.elt8983 = extractvalue { {}*, i64 } %907, 1
  %cond8113 = icmp eq i64 %.elt8983, 0
  %908 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %X_ELEMENT.1 = select i1 %cond8113, {}* %908, {}* %.elt8981
  br label %tag383

header-check-br2075:                              ; preds = %header-check-br2145
  %.off10492 = add i64 %927, -1001
  %909 = icmp ult i64 %.off10492, 5
  br i1 %909, label %maybe-more-tests2083, label %tag306

maybe-more-tests2083:                             ; preds = %header-check-br2075
  %910 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %911 = invoke {}* @cc_safe_fdefinition({}* %910)
          to label %normal-dest4112 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2085:                                  ; preds = %tag176
  %912 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %913 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %914 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %915 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 569), align 8
  %ptrtoint2086 = ptrtoint {}* %125 to i64
  %entry-point-addr-uint2087 = add i64 %ptrtoint2086, 7
  %entry-point-addr2088 = inttoptr i64 %entry-point-addr-uint2087 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2089 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2088, align 8
  %916 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2089({}* %125, i64 5, {}* %912, {}* %913, {}* %vaarg906, {}* %914, {}* %915)
          to label %normal-dest2092 unwind label %cleanup-lpad.loopexit

normal-dest2092:                                  ; preds = %normal-dest2085
  %.elt8921 = extractvalue { {}*, i64 } %916, 0
  %.elt8923 = extractvalue { {}*, i64 } %916, 1
  %cond8100 = icmp eq i64 %.elt8923, 0
  %917 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117333.1 = select i1 %cond8100, {}* %917, {}* %.elt8921
  br label %tag589

header-check-br2098:                              ; preds = %header-check-br6448
  %.off10472 = add i64 %1901, -1001
  %918 = icmp ult i64 %.off10472, 5
  br i1 %918, label %maybe-more-tests2106, label %tag488

maybe-more-tests2106:                             ; preds = %header-check-br2098
  %919 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %920 = invoke {}* @cc_safe_fdefinition({}* %919)
          to label %normal-dest2178 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2108:                                  ; preds = %tag178
  %ptrtoint2109 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint2110 = add i64 %ptrtoint2109, 7
  %entry-point-addr2111 = inttoptr i64 %entry-point-addr-uint2110 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2112 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2111, align 8
  %921 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2112({}* %127, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2115 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2115:                                  ; preds = %normal-dest2108
  %.elt9186 = extractvalue { {}*, i64 } %921, 0
  %.elt9188 = extractvalue { {}*, i64 } %921, 1
  %cond8152 = icmp eq i64 %.elt9188, 0
  %922 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116747.0 = select i1 %cond8152, {}* %922, {}* %.elt9186
  %ptrtoint2123 = ptrtoint {}* %"closure->LAMBDA2636" to i64
  %tag-only2124 = and i64 %ptrtoint2123, 7
  %test2125 = icmp eq i64 %tag-only2124, 1
  br i1 %test2125, label %header-check-br2122, label %tag735

header-check-br2122:                              ; preds = %normal-dest2115
  %irc-bit-cast2126 = bitcast {}* %"closure->LAMBDA2636" to i8*
  %gep2127 = getelementptr inbounds i8, i8* %irc-bit-cast2126, i64 -9
  %irc-bit-cast2128 = bitcast i8* %gep2127 to i64*
  %923 = load i64, i64* %irc-bit-cast2128, align 8
  %.off10437 = add i64 %923, -913
  %924 = icmp ult i64 %.off10437, 85
  br i1 %924, label %tag652, label %header-check-br982

normal-dest2132:                                  ; preds = %tag179
  %ptrtoint2133 = ptrtoint {}* %129 to i64
  %entry-point-addr-uint2134 = add i64 %ptrtoint2133, 7
  %entry-point-addr2135 = inttoptr i64 %entry-point-addr-uint2134 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2136 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2135, align 8
  %925 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2136({}* %129, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2139 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2139:                                  ; preds = %normal-dest2132
  %.elt9549 = extractvalue { {}*, i64 } %925, 0
  %.elt9551 = extractvalue { {}*, i64 } %925, 1
  %cond8219 = icmp eq i64 %.elt9551, 0
  %926 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT116756.0 = select i1 %cond8219, {}* %926, {}* %.elt9549
  %ptrtoint2146 = ptrtoint {}* %"closure->LAMBDA7765" to i64
  %tag-only2147 = and i64 %ptrtoint2146, 7
  %test2148 = icmp eq i64 %tag-only2147, 1
  br i1 %test2148, label %header-check-br2145, label %tag306

header-check-br2145:                              ; preds = %normal-dest2139
  %irc-bit-cast2149 = bitcast {}* %"closure->LAMBDA7765" to i8*
  %gep2150 = getelementptr inbounds i8, i8* %irc-bit-cast2149, i64 -9
  %irc-bit-cast2151 = bitcast i8* %gep2150 to i64*
  %927 = load i64, i64* %irc-bit-cast2151, align 8
  %.off10491 = add i64 %927, -913
  %928 = icmp ult i64 %.off10491, 85
  br i1 %928, label %tag549, label %header-check-br2075

normal-dest2155:                                  ; preds = %maybe-more-tests3387
  %ptrtoint2156 = ptrtoint {}* %1212 to i64
  %entry-point-addr-uint2157 = add i64 %ptrtoint2156, 7
  %entry-point-addr2158 = inttoptr i64 %entry-point-addr-uint2157 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2159 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2158, align 8
  %929 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2159({}* %1212, i64 1, {}* nonnull %vaarg906, {}* null, {}* null, {}* null)
          to label %normal-dest2162 unwind label %cleanup-lpad.loopexit

normal-dest2162:                                  ; preds = %normal-dest2155
  %.elt8757 = extractvalue { {}*, i64 } %929, 0
  %.elt8759 = extractvalue { {}*, i64 } %929, 1
  %cond8065 = icmp eq i64 %.elt8759, 0
  %930 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117588.1 = select i1 %cond8065, {}* %930, {}* %.elt8757
  br label %tag14

header-check-br2168:                              ; preds = %header-check-br5621
  %.off10490 = add i64 %1709, -1001
  %931 = icmp ult i64 %.off10490, 5
  br i1 %931, label %maybe-more-tests2176, label %tag861

maybe-more-tests2176:                             ; preds = %header-check-br2168
  %932 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %933 = invoke {}* @cc_safe_fdefinition({}* %932)
          to label %normal-dest1108 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2178:                                  ; preds = %maybe-more-tests2106
  %ptrtoint2179 = ptrtoint {}* %920 to i64
  %entry-point-addr-uint2180 = add i64 %ptrtoint2179, 7
  %entry-point-addr2181 = inttoptr i64 %entry-point-addr-uint2180 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2182 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2181, align 8
  %934 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2182({}* %920, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest2185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2185:                                  ; preds = %normal-dest2178
  %.elt9426 = extractvalue { {}*, i64 } %934, 0
  %.elt9428 = extractvalue { {}*, i64 } %934, 1
  %cond8196 = icmp eq i64 %.elt9428, 0
  %935 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118482.1 = select i1 %cond8196, {}* %935, {}* %.elt9426
  br label %tag658

header-check-br2191:                              ; preds = %header-check-br4586
  %.off10516 = add i64 %1486, -1001
  %936 = icmp ult i64 %.off10516, 5
  br i1 %936, label %maybe-more-tests2199, label %tag799

maybe-more-tests2199:                             ; preds = %header-check-br2191
  %937 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %938 = invoke {}* @cc_safe_fdefinition({}* %937)
          to label %normal-dest6687 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2213:                                  ; preds = %maybe-more-tests4110
  %ptrtoint2214 = ptrtoint {}* %1371 to i64
  %entry-point-addr-uint2215 = add i64 %ptrtoint2214, 7
  %entry-point-addr2216 = inttoptr i64 %entry-point-addr-uint2215 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2217 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2216, align 8
  %939 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2217({}* %1371, i64 1, {}* nonnull %vaarg906, {}* null, {}* null, {}* null)
          to label %normal-dest2220 unwind label %cleanup-lpad.loopexit

normal-dest2220:                                  ; preds = %normal-dest2213
  %.elt8745 = extractvalue { {}*, i64 } %939, 0
  %.elt8747 = extractvalue { {}*, i64 } %939, 1
  %cond8062 = icmp eq i64 %.elt8747, 0
  %940 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117604.1 = select i1 %cond8062, {}* %940, {}* %.elt8745
  br label %tag215

normal-dest2227:                                  ; preds = %tag191
  %941 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %942 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %943 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %944 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 479), align 8
  %ptrtoint2228 = ptrtoint {}* %132 to i64
  %entry-point-addr-uint2229 = add i64 %ptrtoint2228, 7
  %entry-point-addr2230 = inttoptr i64 %entry-point-addr-uint2229 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2231 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2230, align 8
  %945 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2231({}* %132, i64 5, {}* %941, {}* %942, {}* %"closure->LAMBDA7659", {}* %943, {}* %944)
          to label %normal-dest2234 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2234:                                  ; preds = %normal-dest2227
  %.elt9729 = extractvalue { {}*, i64 } %945, 0
  %.elt9731 = extractvalue { {}*, i64 } %945, 1
  %cond8253 = icmp eq i64 %.elt9731, 0
  %946 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119412.1 = select i1 %cond8253, {}* %946, {}* %.elt9729
  br label %tag656

normal-dest2241:                                  ; preds = %tag192
  %947 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 572), align 16
  %ptrtoint2243 = ptrtoint {}* %134 to i64
  %entry-point-addr-uint2244 = add i64 %ptrtoint2243, 7
  %entry-point-addr2245 = inttoptr i64 %entry-point-addr-uint2244 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2246 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2245, align 8
  %948 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2246({}* %134, i64 4, {}* %G116705.2, {}* %spalten-breite.0, {}* %947, {}* inttoptr (i64 370 to {}*))
          to label %normal-dest2249 unwind label %cleanup-lpad.loopexit

normal-dest2249:                                  ; preds = %normal-dest2241
  %.elt8937 = extractvalue { {}*, i64 } %948, 0
  %.elt8939 = extractvalue { {}*, i64 } %948, 1
  %cond8104 = icmp eq i64 %.elt8939, 0
  %949 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117307.1 = select i1 %cond8104, {}* %949, {}* %.elt8937
  br label %tag746

normal-dest2263:                                  ; preds = %tag195
  %950 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %951 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %952 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %953 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint2265 = ptrtoint {}* %136 to i64
  %entry-point-addr-uint2266 = add i64 %ptrtoint2265, 7
  %entry-point-addr2267 = inttoptr i64 %entry-point-addr-uint2266 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2268 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2267, align 8
  %954 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2268({}* %136, i64 5, {}* %950, {}* %951, {}* %"%DOLIST-VAR1103.010565", {}* %952, {}* %953)
          to label %normal-dest2271 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2271:                                  ; preds = %normal-dest2263
  %.elt9134 = extractvalue { {}*, i64 } %954, 0
  %.elt9136 = extractvalue { {}*, i64 } %954, 1
  %cond8142 = icmp eq i64 %.elt9136, 0
  %955 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %Y_ELEMENT.1 = select i1 %cond8142, {}* %955, {}* %.elt9134
  br label %tag538

normal-dest2280:                                  ; preds = %maybe-more-tests1943
  %ptrtoint2281 = ptrtoint {}* %875 to i64
  %entry-point-addr-uint2282 = add i64 %ptrtoint2281, 7
  %entry-point-addr2283 = inttoptr i64 %entry-point-addr-uint2282 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2284 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2283, align 8
  %956 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2284({}* %875, i64 1, {}* nonnull %"closure->LAMBDA6916", {}* null, {}* null, {}* null)
          to label %normal-dest2287 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2287:                                  ; preds = %normal-dest2280
  %.elt9350 = extractvalue { {}*, i64 } %956, 0
  %.elt9352 = extractvalue { {}*, i64 } %956, 1
  %cond8182 = icmp eq i64 %.elt9352, 0
  %957 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118323.1 = select i1 %cond8182, {}* %957, {}* %.elt9350
  br label %tag247

normal-dest2294:                                  ; preds = %tag198
  %958 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %959 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %960 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %961 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 526), align 16
  %ptrtoint2295 = ptrtoint {}* %138 to i64
  %entry-point-addr-uint2296 = add i64 %ptrtoint2295, 7
  %entry-point-addr2297 = inttoptr i64 %entry-point-addr-uint2296 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2298 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2297, align 8
  %962 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2298({}* %138, i64 5, {}* %958, {}* %959, {}* %"closure->LAMBDA4881", {}* %960, {}* %961)
          to label %normal-dest2301 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2301:                                  ; preds = %normal-dest2294
  %.elt8363 = extractvalue { {}*, i64 } %962, 0
  %.elt8365 = extractvalue { {}*, i64 } %962, 1
  %cond7992 = icmp eq i64 %.elt8365, 0
  %963 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118676.1 = select i1 %cond7992, {}* %963, {}* %.elt8363
  br label %tag199

normal-dest2308:                                  ; preds = %tag199
  %964 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %965 = invoke {}* @cc_safe_fdefinition({}* %964)
          to label %normal-dest2310 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2310:                                  ; preds = %normal-dest2308
  %966 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 522), align 16
  %967 = invoke {}* @cc_safe_fdefinition({}* %966)
          to label %normal-dest2312 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2312:                                  ; preds = %normal-dest2310
  %ptrtoint2313 = ptrtoint {}* %967 to i64
  %entry-point-addr-uint2314 = add i64 %ptrtoint2313, 7
  %entry-point-addr2315 = inttoptr i64 %entry-point-addr-uint2314 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2316 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2315, align 8
  %968 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2316({}* %967, i64 2, {}* %X_ELEMENT1830.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest2319 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2319:                                  ; preds = %normal-dest2312
  %.elt8367 = extractvalue { {}*, i64 } %968, 0
  %.elt8369 = extractvalue { {}*, i64 } %968, 1
  %cond7993 = icmp eq i64 %.elt8369, 0
  %969 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118681.0 = select i1 %cond7993, {}* %969, {}* %.elt8367
  %ptrtoint2325 = ptrtoint {}* %965 to i64
  %entry-point-addr-uint2326 = add i64 %ptrtoint2325, 7
  %entry-point-addr2327 = inttoptr i64 %entry-point-addr-uint2326 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2328 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2327, align 8
  %970 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2328({}* %965, i64 1, {}* %G118681.0, {}* null, {}* null, {}* null)
          to label %normal-dest2331 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2331:                                  ; preds = %normal-dest2319
  %.elt8371 = extractvalue { {}*, i64 } %970, 0
  %.elt8373 = extractvalue { {}*, i64 } %970, 1
  %cond7994 = icmp eq i64 %.elt8373, 0
  %971 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118679.0 = select i1 %cond7994, {}* %971, {}* %.elt8371
  %ptrtoint2337 = ptrtoint {}* %G118676.0 to i64
  %entry-point-addr-uint2338 = add i64 %ptrtoint2337, 7
  %entry-point-addr2339 = inttoptr i64 %entry-point-addr-uint2338 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2340 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2339, align 8
  %972 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2340({}* %G118676.0, i64 3, {}* %140, {}* %X_FORMAT.0, {}* %G118679.0, {}* null)
          to label %tag685 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2349:                                  ; preds = %tag205
  %973 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %974 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %975 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %976 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 534), align 16
  %ptrtoint2350 = ptrtoint {}* %142 to i64
  %entry-point-addr-uint2351 = add i64 %ptrtoint2350, 7
  %entry-point-addr2352 = inttoptr i64 %entry-point-addr-uint2351 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2353 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2352, align 8
  %977 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2353({}* %142, i64 5, {}* %973, {}* %974, {}* %"closure->LAMBDA6916", {}* %975, {}* %976)
          to label %normal-dest2356 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2356:                                  ; preds = %normal-dest2349
  %.elt9334 = extractvalue { {}*, i64 } %977, 0
  %.elt9336 = extractvalue { {}*, i64 } %977, 1
  %cond8179 = icmp eq i64 %.elt9336, 0
  %978 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118323.2 = select i1 %cond8179, {}* %978, {}* %.elt9334
  br label %tag247

normal-dest2363:                                  ; preds = %tag206
  %979 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %980 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %981 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %982 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 530), align 16
  %ptrtoint2364 = ptrtoint {}* %144 to i64
  %entry-point-addr-uint2365 = add i64 %ptrtoint2364, 7
  %entry-point-addr2366 = inttoptr i64 %entry-point-addr-uint2365 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2367 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2366, align 8
  %983 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2367({}* %144, i64 5, {}* %979, {}* %980, {}* %"closure->LAMBDA", {}* %981, {}* %982)
          to label %normal-dest2370 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2370:                                  ; preds = %normal-dest2363
  %.elt8468 = extractvalue { {}*, i64 } %983, 0
  %.elt8470 = extractvalue { {}*, i64 } %983, 1
  %cond8013 = icmp eq i64 %.elt8470, 0
  %984 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118543.1 = select i1 %cond8013, {}* %984, {}* %.elt8468
  br label %tag256

header-check-br2376:                              ; preds = %tag207
  %irc-bit-cast2380 = bitcast {}* %"closure->LAMBDA2695" to i8*
  %gep2381 = getelementptr inbounds i8, i8* %irc-bit-cast2380, i64 -9
  %irc-bit-cast2382 = bitcast i8* %gep2381 to i64*
  %985 = load i64, i64* %irc-bit-cast2382, align 8
  %.off10353 = add i64 %985, -913
  %986 = icmp ult i64 %.off10353, 85
  br i1 %986, label %tag730, label %header-check-br3997

normal-dest2391:                                  ; preds = %tag210
  %987 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %988 = invoke {}* @cc_safe_fdefinition({}* %987)
          to label %normal-dest2397 unwind label %cleanup-lpad.loopexit

normal-dest2397:                                  ; preds = %normal-dest2391
  %ptrtoint2398 = ptrtoint {}* %988 to i64
  %entry-point-addr-uint2399 = add i64 %ptrtoint2398, 7
  %entry-point-addr2400 = inttoptr i64 %entry-point-addr-uint2399 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2401 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2400, align 8
  %989 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2401({}* %988, i64 1, {}* %G116717.0, {}* null, {}* null, {}* null)
          to label %tag346 unwind label %cleanup-lpad.loopexit

header-check-br2409:                              ; preds = %tag211
  %irc-bit-cast2413 = bitcast {}* %"closure->LAMBDA5936" to i8*
  %gep2414 = getelementptr inbounds i8, i8* %irc-bit-cast2413, i64 -9
  %irc-bit-cast2415 = bitcast i8* %gep2414 to i64*
  %990 = load i64, i64* %irc-bit-cast2415, align 8
  %.off10499 = add i64 %990, -913
  %991 = icmp ult i64 %.off10499, 85
  br i1 %991, label %tag553, label %header-check-br7608

normal-dest2421:                                  ; preds = %tag215
  %ptrtoint2422 = ptrtoint {}* %149 to i64
  %entry-point-addr-uint2423 = add i64 %ptrtoint2422, 7
  %entry-point-addr2424 = inttoptr i64 %entry-point-addr-uint2423 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2425 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2424, align 8
  %992 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2425({}* %149, i64 2, {}* %Y_ELEMENT.0, {}* %vaarg898, {}* null, {}* null)
          to label %normal-dest2428 unwind label %cleanup-lpad.loopexit

normal-dest2428:                                  ; preds = %normal-dest2421
  %.elt8648 = extractvalue { {}*, i64 } %992, 0
  %.elt8650 = extractvalue { {}*, i64 } %992, 1
  %cond8044 = icmp eq i64 %.elt8650, 0
  %993 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117605.0 = select i1 %cond8044, {}* %993, {}* %.elt8648
  %994 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 570), align 16
  %995 = invoke {}* @cc_safe_fdefinition({}* %994)
          to label %normal-dest2435 unwind label %cleanup-lpad.loopexit

normal-dest2435:                                  ; preds = %normal-dest2428
  %ptrtoint2436 = ptrtoint {}* %995 to i64
  %entry-point-addr-uint2437 = add i64 %ptrtoint2436, 7
  %entry-point-addr2438 = inttoptr i64 %entry-point-addr-uint2437 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2439 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2438, align 8
  %996 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2439({}* %995, i64 2, {}* %X_ELEMENT.0, {}* %vaarg902, {}* null, {}* null)
          to label %normal-dest2442 unwind label %cleanup-lpad.loopexit

normal-dest2442:                                  ; preds = %normal-dest2435
  %.elt8652 = extractvalue { {}*, i64 } %996, 0
  %.elt8654 = extractvalue { {}*, i64 } %996, 1
  %cond8045 = icmp eq i64 %.elt8654, 0
  %997 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117606.0 = select i1 %cond8045, {}* %997, {}* %.elt8652
  %ptrtoint2448 = ptrtoint {}* %G117604.0 to i64
  %entry-point-addr-uint2449 = add i64 %ptrtoint2448, 7
  %entry-point-addr2450 = inttoptr i64 %entry-point-addr-uint2449 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2451 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2450, align 8
  %998 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2451({}* %G117604.0, i64 2, {}* %G117605.0, {}* %G117606.0, {}* null, {}* null)
          to label %tag33 unwind label %cleanup-lpad.loopexit

normal-dest2461:                                  ; preds = %tag216
  %ptrtoint2462 = ptrtoint {}* %151 to i64
  %entry-point-addr-uint2463 = add i64 %ptrtoint2462, 7
  %entry-point-addr2464 = inttoptr i64 %entry-point-addr-uint2463 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2465 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2464, align 8
  %999 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2465({}* %151, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2468 unwind label %cleanup-lpad.loopexit

normal-dest2468:                                  ; preds = %normal-dest2461
  %.elt8845 = extractvalue { {}*, i64 } %999, 0
  %.elt8847 = extractvalue { {}*, i64 } %999, 1
  %cond8083 = icmp eq i64 %.elt8847, 0
  %1000 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117471.0 = select i1 %cond8083, {}* %1000, {}* %.elt8845
  %1001 = icmp eq {}* %G117471.0, %1000
  br i1 %1001, label %tag845, label %tag57

header-check-br2474:                              ; preds = %header-check-br6883
  %.off10470 = add i64 %1996, -1001
  %1002 = icmp ult i64 %.off10470, 5
  br i1 %1002, label %maybe-more-tests2482, label %tag378

maybe-more-tests2482:                             ; preds = %header-check-br2474
  %1003 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1004 = invoke {}* @cc_safe_fdefinition({}* %1003)
          to label %normal-dest3692 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2491:                                  ; preds = %tag221
  %ptrtoint2492 = ptrtoint {}* %155 to i64
  %entry-point-addr-uint2493 = add i64 %ptrtoint2492, 7
  %entry-point-addr2494 = inttoptr i64 %entry-point-addr-uint2493 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2495 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2494, align 8
  %1005 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2495({}* %155, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2498 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2498:                                  ; preds = %normal-dest2491
  %.elt9022 = extractvalue { {}*, i64 } %1005, 0
  %.elt9024 = extractvalue { {}*, i64 } %1005, 1
  %cond8120 = icmp eq i64 %.elt9024, 0
  %1006 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117137.0 = select i1 %cond8120, {}* %1006, {}* %.elt9022
  %1007 = icmp eq {}* %G117137.0, %1006
  br i1 %1007, label %tag473, label %tag444

normal-dest2505:                                  ; preds = %tag225
  %ptrtoint2506 = ptrtoint {}* %159 to i64
  %entry-point-addr-uint2507 = add i64 %ptrtoint2506, 7
  %entry-point-addr2508 = inttoptr i64 %entry-point-addr-uint2507 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2509 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2508, align 8
  %1008 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2509({}* %159, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2512 unwind label %cleanup-lpad.loopexit

normal-dest2512:                                  ; preds = %normal-dest2505
  %.elt8693 = extractvalue { {}*, i64 } %1008, 0
  %.elt8695 = extractvalue { {}*, i64 } %1008, 1
  %cond8053 = icmp eq i64 %.elt8695, 0
  %1009 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116717.0 = select i1 %cond8053, {}* %1009, {}* %.elt8693
  %ptrtoint2519 = ptrtoint {}* %"closure->LAMBDA2695" to i64
  %tag-only2520 = and i64 %ptrtoint2519, 7
  %test2521 = icmp eq i64 %tag-only2520, 1
  br i1 %test2521, label %header-check-br2518, label %tag127

header-check-br2518:                              ; preds = %normal-dest2512
  %irc-bit-cast2522 = bitcast {}* %"closure->LAMBDA2695" to i8*
  %gep2523 = getelementptr inbounds i8, i8* %irc-bit-cast2522, i64 -9
  %irc-bit-cast2524 = bitcast i8* %gep2523 to i64*
  %1010 = load i64, i64* %irc-bit-cast2524, align 8
  %.off10357 = add i64 %1010, -913
  %1011 = icmp ult i64 %.off10357, 85
  br i1 %1011, label %tag210, label %header-check-br1166

normal-dest2539:                                  ; preds = %tag227
  %ptrtoint2540 = ptrtoint {}* %162 to i64
  %entry-point-addr-uint2541 = add i64 %ptrtoint2540, 7
  %entry-point-addr2542 = inttoptr i64 %entry-point-addr-uint2541 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2543 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2542, align 8
  %1012 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2543({}* %162, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2546 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2546:                                  ; preds = %normal-dest2539
  %.elt9058 = extractvalue { {}*, i64 } %1012, 0
  %.elt9060 = extractvalue { {}*, i64 } %1012, 1
  %cond8127 = icmp eq i64 %.elt9060, 0
  %1013 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116660.0 = select i1 %cond8127, {}* %1013, {}* %.elt9058
  %ptrtoint2553 = ptrtoint {}* %"closure->LAMBDA4828" to i64
  %tag-only2554 = and i64 %ptrtoint2553, 7
  %test2555 = icmp eq i64 %tag-only2554, 1
  br i1 %test2555, label %header-check-br2552, label %tag692

header-check-br2552:                              ; preds = %normal-dest2546
  %irc-bit-cast2556 = bitcast {}* %"closure->LAMBDA4828" to i8*
  %gep2557 = getelementptr inbounds i8, i8* %irc-bit-cast2556, i64 -9
  %irc-bit-cast2558 = bitcast i8* %gep2557 to i64*
  %1014 = load i64, i64* %irc-bit-cast2558, align 8
  %.off10413 = add i64 %1014, -913
  %1015 = icmp ult i64 %.off10413, 85
  br i1 %1015, label %tag776, label %header-check-br1031

normal-dest2562:                                  ; preds = %maybe-more-tests4654
  %ptrtoint2563 = ptrtoint {}* %1511 to i64
  %entry-point-addr-uint2564 = add i64 %ptrtoint2563, 7
  %entry-point-addr2565 = inttoptr i64 %entry-point-addr-uint2564 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2566 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2565, align 8
  %1016 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2566({}* %1511, i64 1, {}* nonnull %"closure->LAMBDA4881", {}* null, {}* null, {}* null)
          to label %normal-dest2569 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2569:                                  ; preds = %normal-dest2562
  %.elt8460 = extractvalue { {}*, i64 } %1016, 0
  %.elt8462 = extractvalue { {}*, i64 } %1016, 1
  %cond8011 = icmp eq i64 %.elt8462, 0
  %1017 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118588.2 = select i1 %cond8011, {}* %1017, {}* %.elt8460
  br label %tag555

header-check-br2575:                              ; preds = %tag233
  %1018 = load i64, i64* %irc-bit-cast3711, align 8
  %.off10389 = add i64 %1018, -913
  %1019 = icmp ult i64 %.off10389, 85
  br i1 %1019, label %tag589, label %header-check-br3219

normal-dest2585:                                  ; preds = %tag235
  %1020 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 453), align 8
  %ptrtoint2586 = ptrtoint {}* %167 to i64
  %entry-point-addr-uint2587 = add i64 %ptrtoint2586, 7
  %entry-point-addr2588 = inttoptr i64 %entry-point-addr-uint2587 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2589 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2588, align 8
  %1021 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2589({}* %167, i64 1, {}* %1020, {}* null, {}* null, {}* null)
          to label %normal-dest2592 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2592:                                  ; preds = %normal-dest2585
  %.elt9786 = extractvalue { {}*, i64 } %1021, 0
  %.elt9788 = extractvalue { {}*, i64 } %1021, 1
  %cond8263 = icmp eq i64 %.elt9788, 0
  %1022 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %zeilen-titel.5 = select i1 %cond8263, {}* %1022, {}* %.elt9786
  br label %tag291

header-check-br2605:                              ; preds = %header-check-br3309
  %.off10508 = add i64 %1197, -1001
  %1023 = icmp ult i64 %.off10508, 5
  br i1 %1023, label %maybe-more-tests2613, label %tag501

maybe-more-tests2613:                             ; preds = %header-check-br2605
  %1024 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1025 = invoke {}* @cc_safe_fdefinition({}* %1024)
          to label %normal-dest3183 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2615:                                  ; preds = %tag239
  %ptrtoint2616 = ptrtoint {}* %G116877.0 to i64
  %entry-point-addr-uint2617 = add i64 %ptrtoint2616, 7
  %entry-point-addr2618 = inttoptr i64 %entry-point-addr-uint2617 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2619 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2618, align 8
  %1026 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2619({}* %G116877.0, i64 1, {}* %171, {}* null, {}* null, {}* null)
          to label %normal-dest2622 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2622:                                  ; preds = %normal-dest2615
  %1027 = load i64, i64* bitcast ([784 x {}*]* @CONTAB4236 to i64*), align 16
  br label %tag342

normal-dest2635:                                  ; preds = %tag243
  %1028 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1029 = icmp eq {}* %stream.0, %1028
  %.val10420 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117076.0 = select i1 %1029, {}* %1028, {}* %.val10420
  %1030 = icmp eq {}* %G117076.0, %.val10420
  br i1 %1030, label %tag59, label %tag733

normal-dest2642:                                  ; preds = %tag245
  %1031 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1032 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1033 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1034 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 577), align 8
  %ptrtoint2643 = ptrtoint {}* %182 to i64
  %entry-point-addr-uint2644 = add i64 %ptrtoint2643, 7
  %entry-point-addr2645 = inttoptr i64 %entry-point-addr-uint2644 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2646 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2645, align 8
  %1035 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2646({}* %182, i64 5, {}* %1031, {}* %1032, {}* %"closure->LAMBDA3566", {}* %1033, {}* %1034)
          to label %normal-dest2649 unwind label %cleanup-lpad.loopexit

normal-dest2649:                                  ; preds = %normal-dest2642
  %.elt8777 = extractvalue { {}*, i64 } %1035, 0
  %.elt8779 = extractvalue { {}*, i64 } %1035, 1
  %cond8069 = icmp eq i64 %.elt8779, 0
  %1036 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117479.1 = select i1 %cond8069, {}* %1036, {}* %.elt8777
  br label %tag456

normal-dest2656:                                  ; preds = %tag247
  %1037 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1038 = invoke {}* @cc_safe_fdefinition({}* %1037)
          to label %normal-dest2658 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2658:                                  ; preds = %normal-dest2656
  %1039 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 533), align 8
  %ptrtoint2659 = ptrtoint {}* %1038 to i64
  %entry-point-addr-uint2660 = add i64 %ptrtoint2659, 7
  %entry-point-addr2661 = inttoptr i64 %entry-point-addr-uint2660 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2662 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2661, align 8
  %1040 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2662({}* %1038, i64 1, {}* %1039, {}* null, {}* null, {}* null)
          to label %normal-dest2665 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2665:                                  ; preds = %normal-dest2658
  %.elt9338 = extractvalue { {}*, i64 } %1040, 0
  %.elt9340 = extractvalue { {}*, i64 } %1040, 1
  %cond8180 = icmp eq i64 %.elt9340, 0
  %1041 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118328.0 = select i1 %cond8180, {}* %1041, {}* %.elt9338
  %ptrtoint2671 = ptrtoint {}* %184 to i64
  %entry-point-addr-uint2672 = add i64 %ptrtoint2671, 7
  %entry-point-addr2673 = inttoptr i64 %entry-point-addr-uint2672 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2674 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2673, align 8
  %1042 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2674({}* %184, i64 2, {}* %G118328.0, {}* %1041, {}* null, {}* null)
          to label %normal-dest2677 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2677:                                  ; preds = %normal-dest2665
  %.elt9342 = extractvalue { {}*, i64 } %1042, 0
  %.elt9344 = extractvalue { {}*, i64 } %1042, 1
  %cond8181 = icmp eq i64 %.elt9344, 0
  %1043 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118326.0 = select i1 %cond8181, {}* %1043, {}* %.elt9342
  %ptrtoint2683 = ptrtoint {}* %G118323.0 to i64
  %entry-point-addr-uint2684 = add i64 %ptrtoint2683, 7
  %entry-point-addr2685 = inttoptr i64 %entry-point-addr-uint2684 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2686 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2685, align 8
  %1044 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2686({}* %G118323.0, i64 3, {}* %OUT116582.0, {}* %Y_FORMAT.0, {}* %G118326.0, {}* null)
          to label %tag21 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2694:                                  ; preds = %tag248
  %1045 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1046 = icmp eq {}* %stream.0, %1045
  %.val10350 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117288.0 = select i1 %1046, {}* %1045, {}* %.val10350
  %1047 = icmp eq {}* %G117288.0, %.val10350
  br i1 %1047, label %tag613, label %tag207

normal-dest2701:                                  ; preds = %maybe-more-tests1783
  %ptrtoint2702 = ptrtoint {}* %843 to i64
  %entry-point-addr-uint2703 = add i64 %ptrtoint2702, 7
  %entry-point-addr2704 = inttoptr i64 %entry-point-addr-uint2703 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2705 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2704, align 8
  %1048 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2705({}* %843, i64 1, {}* nonnull %"closure->LAMBDA4828", {}* null, {}* null, {}* null)
          to label %normal-dest2708 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2708:                                  ; preds = %normal-dest2701
  %.elt9054 = extractvalue { {}*, i64 } %1048, 0
  %.elt9056 = extractvalue { {}*, i64 } %1048, 1
  %cond8126 = icmp eq i64 %.elt9056, 0
  %1049 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117834.1 = select i1 %cond8126, {}* %1049, {}* %.elt9054
  br label %tag618

normal-dest2715:                                  ; preds = %tag251
  %1050 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 572), align 16
  %ptrtoint2717 = ptrtoint {}* %187 to i64
  %entry-point-addr-uint2718 = add i64 %ptrtoint2717, 7
  %entry-point-addr2719 = inttoptr i64 %entry-point-addr-uint2718 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2720 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2719, align 8
  %1051 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2720({}* %187, i64 4, {}* %G116698.2, {}* %spalten-breite.0, {}* %1050, {}* inttoptr (i64 370 to {}*))
          to label %normal-dest2723 unwind label %cleanup-lpad.loopexit

normal-dest2723:                                  ; preds = %normal-dest2715
  %.elt8873 = extractvalue { {}*, i64 } %1051, 0
  %.elt8875 = extractvalue { {}*, i64 } %1051, 1
  %cond8090 = icmp eq i64 %.elt8875, 0
  %1052 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117391.1 = select i1 %cond8090, {}* %1052, {}* %.elt8873
  br label %tag108

normal-dest2730:                                  ; preds = %tag252
  %ptrtoint2731 = ptrtoint {}* %189 to i64
  %entry-point-addr-uint2732 = add i64 %ptrtoint2731, 7
  %entry-point-addr2733 = inttoptr i64 %entry-point-addr-uint2732 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2734 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2733, align 8
  %1053 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2734({}* %189, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2737 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2737:                                  ; preds = %normal-dest2730
  %.elt8558 = extractvalue { {}*, i64 } %1053, 0
  %.elt8560 = extractvalue { {}*, i64 } %1053, 1
  %cond8028 = icmp eq i64 %.elt8560, 0
  %1054 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT116604.0 = select i1 %cond8028, {}* %1054, {}* %.elt8558
  %ptrtoint2744 = ptrtoint {}* %"closure->LAMBDA7791" to i64
  %tag-only2745 = and i64 %ptrtoint2744, 7
  %test2746 = icmp eq i64 %tag-only2745, 1
  br i1 %test2746, label %header-check-br2743, label %tag71

header-check-br2743:                              ; preds = %normal-dest2737
  %irc-bit-cast2747 = bitcast {}* %"closure->LAMBDA7791" to i8*
  %gep2748 = getelementptr inbounds i8, i8* %irc-bit-cast2747, i64 -9
  %irc-bit-cast2749 = bitcast i8* %gep2748 to i64*
  %1055 = load i64, i64* %irc-bit-cast2749, align 8
  %.off10333 = add i64 %1055, -913
  %1056 = icmp ult i64 %.off10333, 85
  br i1 %1056, label %tag784, label %header-check-br4655

normal-dest2759:                                  ; preds = %maybe-more-tests4663
  %ptrtoint2760 = ptrtoint {}* %1514 to i64
  %entry-point-addr-uint2761 = add i64 %ptrtoint2760, 7
  %entry-point-addr2762 = inttoptr i64 %entry-point-addr-uint2761 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2763 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2762, align 8
  %1057 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2763({}* %1514, i64 1, {}* nonnull %"closure->LAMBDA7791", {}* null, {}* null, {}* null)
          to label %normal-dest2766 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2766:                                  ; preds = %normal-dest2759
  %.elt8582 = extractvalue { {}*, i64 } %1057, 0
  %.elt8584 = extractvalue { {}*, i64 } %1057, 1
  %cond8032 = icmp eq i64 %.elt8584, 0
  %1058 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118087.2 = select i1 %cond8032, {}* %1058, {}* %.elt8582
  br label %tag784

normal-dest2773:                                  ; preds = %tag256
  %ptrtoint2774 = ptrtoint {}* %G118543.0 to i64
  %entry-point-addr-uint2775 = add i64 %ptrtoint2774, 7
  %entry-point-addr2776 = inttoptr i64 %entry-point-addr-uint2775 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2777 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2776, align 8
  %1059 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2777({}* %G118543.0, i64 1, {}* %191, {}* null, {}* null, {}* null)
          to label %tag766 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br2785:                              ; preds = %header-check-br6509
  %.off10526 = add i64 %1910, -1001
  %1060 = icmp ult i64 %.off10526, 5
  br i1 %1060, label %maybe-more-tests2793, label %tag386

maybe-more-tests2793:                             ; preds = %header-check-br2785
  %1061 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1062 = invoke {}* @cc_safe_fdefinition({}* %1061)
          to label %normal-dest7082 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2795:                                  ; preds = %tag258
  %1063 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 498), align 16
  %ptrtoint2796 = ptrtoint {}* %193 to i64
  %entry-point-addr-uint2797 = add i64 %ptrtoint2796, 7
  %entry-point-addr2798 = inttoptr i64 %entry-point-addr-uint2797 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2799 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2798, align 8
  %1064 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2799({}* %193, i64 1, {}* %1063, {}* null, {}* null, {}* null)
          to label %normal-dest2802 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2802:                                  ; preds = %normal-dest2795
  %.elt9665 = extractvalue { {}*, i64 } %1064, 0
  %.elt9667 = extractvalue { {}*, i64 } %1064, 1
  %cond8241 = icmp eq i64 %.elt9667, 0
  %1065 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119213.0 = select i1 %cond8241, {}* %1065, {}* %.elt9665
  %ptrtoint2808 = ptrtoint {}* %G119210.0 to i64
  %entry-point-addr-uint2809 = add i64 %ptrtoint2808, 7
  %entry-point-addr2810 = inttoptr i64 %entry-point-addr-uint2809 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2811 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2810, align 8
  %1066 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2811({}* %G119210.0, i64 4, {}* %G116497.0, {}* %Y_FORMAT.0, {}* %G119213.0, {}* %spalten-titel.0)
          to label %normal-dest2814 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2814:                                  ; preds = %normal-dest2802
  %1067 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %1068 = invoke {}* @cc_safe_fdefinition({}* %1067)
          to label %normal-dest2820 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2820:                                  ; preds = %normal-dest2814
  %ptrtoint2821 = ptrtoint {}* %1068 to i64
  %entry-point-addr-uint2822 = add i64 %ptrtoint2821, 7
  %entry-point-addr2823 = inttoptr i64 %entry-point-addr-uint2822 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2824 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2823, align 8
  %1069 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2824({}* %1068, i64 1, {}* %G116497.0, {}* null, {}* null, {}* null)
          to label %tag681 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2832:                                  ; preds = %tag259
  %1070 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1071 = icmp eq {}* %stream.0, %1070
  %.val10338 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118024.0 = select i1 %1071, {}* %1070, {}* %.val10338
  %1072 = icmp eq {}* %G118024.0, %.val10338
  br i1 %1072, label %tag266, label %tag492

header-check-br2841:                              ; preds = %tag561
  %irc-bit-cast2845 = bitcast {}* %seiten-breite.0 to i8*
  %gep2846 = getelementptr inbounds i8, i8* %irc-bit-cast2845, i64 -9
  %irc-bit-cast2847 = bitcast i8* %gep2846 to i64*
  %1073 = load i64, i64* %irc-bit-cast2847, align 8
  %1074 = icmp ne i64 %1073, 1325
  %test3025.not = xor i1 %test3025, true
  %brmerge = or i1 %1074, %test3025.not
  br i1 %brmerge, label %tag105, label %header-check-br4611

normal-dest2862:                                  ; preds = %tag271
  %1075 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1076 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1077 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1078 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 591), align 8
  %ptrtoint2863 = ptrtoint {}* %206 to i64
  %entry-point-addr-uint2864 = add i64 %ptrtoint2863, 7
  %entry-point-addr2865 = inttoptr i64 %entry-point-addr-uint2864 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2866 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2865, align 8
  %1079 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2866({}* %206, i64 5, {}* %1075, {}* %1076, {}* %"closure->LAMBDA3275", {}* %1077, {}* %1078)
          to label %normal-dest2869 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2869:                                  ; preds = %normal-dest2862
  %.elt8985 = extractvalue { {}*, i64 } %1079, 0
  %.elt8987 = extractvalue { {}*, i64 } %1079, 1
  %cond8114 = icmp eq i64 %.elt8987, 0
  %1080 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117167.1 = select i1 %cond8114, {}* %1080, {}* %.elt8985
  br label %tag716

normal-dest2878:                                  ; preds = %maybe-more-tests3259
  %ptrtoint2879 = ptrtoint {}* %1183 to i64
  %entry-point-addr-uint2880 = add i64 %ptrtoint2879, 7
  %entry-point-addr2881 = inttoptr i64 %entry-point-addr-uint2880 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2882 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2881, align 8
  %1081 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2882({}* %1183, i64 1, {}* nonnull %"closure->LAMBDA4881", {}* null, {}* null, {}* null)
          to label %normal-dest2885 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2885:                                  ; preds = %normal-dest2878
  %.elt8412 = extractvalue { {}*, i64 } %1081, 0
  %.elt8414 = extractvalue { {}*, i64 } %1081, 1
  %cond8001 = icmp eq i64 %.elt8414, 0
  %1082 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118645.2 = select i1 %cond8001, {}* %1082, {}* %.elt8412
  br label %tag146

header-check-br2891:                              ; preds = %tag821
  %1083 = load i64, i64* %irc-bit-cast5097, align 8
  %1084 = add i64 %1083, -1309
  %1085 = lshr i64 %1084, 3
  %1086 = shl i64 %1084, 61
  %1087 = or i64 %1085, %1086
  switch i64 %1087, label %tag413 [
    i64 2, label %tag541
    i64 4, label %tag541
    i64 5, label %tag541
    i64 0, label %tag541
  ]

normal-dest2899:                                  ; preds = %tag277
  %ptrtoint2900 = ptrtoint {}* %208 to i64
  %entry-point-addr-uint2901 = add i64 %ptrtoint2900, 7
  %entry-point-addr2902 = inttoptr i64 %entry-point-addr-uint2901 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2903 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2902, align 8
  %1088 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2903({}* %208, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest2906 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2906:                                  ; preds = %normal-dest2899
  %.elt9210 = extractvalue { {}*, i64 } %1088, 0
  %.elt9212 = extractvalue { {}*, i64 } %1088, 1
  %cond8156 = icmp eq i64 %.elt9212, 0
  %1089 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT116741.0 = select i1 %cond8156, {}* %1089, {}* %.elt9210
  %ptrtoint2913 = ptrtoint {}* %"closure->LAMBDA2636" to i64
  %tag-only2914 = and i64 %ptrtoint2913, 7
  %test2915 = icmp eq i64 %tag-only2914, 1
  br i1 %test2915, label %header-check-br2912, label %tag86

header-check-br2912:                              ; preds = %normal-dest2906
  %irc-bit-cast2916 = bitcast {}* %"closure->LAMBDA2636" to i8*
  %gep2917 = getelementptr inbounds i8, i8* %irc-bit-cast2916, i64 -9
  %irc-bit-cast2918 = bitcast i8* %gep2917 to i64*
  %1090 = load i64, i64* %irc-bit-cast2918, align 8
  %.off10439 = add i64 %1090, -913
  %1091 = icmp ult i64 %.off10439, 85
  br i1 %1091, label %tag96, label %header-check-br973

normal-dest2922:                                  ; preds = %tag280
  %1092 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1093 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1094 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1095 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 473), align 8
  %ptrtoint2923 = ptrtoint {}* %210 to i64
  %entry-point-addr-uint2924 = add i64 %ptrtoint2923, 7
  %entry-point-addr2925 = inttoptr i64 %entry-point-addr-uint2924 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2926 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2925, align 8
  %1096 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2926({}* %210, i64 5, {}* %1092, {}* %1093, {}* %"closure->LAMBDA7659", {}* %1094, {}* %1095)
          to label %normal-dest2929 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2929:                                  ; preds = %normal-dest2922
  %.elt9765 = extractvalue { {}*, i64 } %1096, 0
  %.elt9767 = extractvalue { {}*, i64 } %1096, 1
  %cond8259 = icmp eq i64 %.elt9767, 0
  %1097 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119371.1 = select i1 %cond8259, {}* %1097, {}* %.elt9765
  br label %tag795

header-check-br2935:                              ; preds = %header-check-br7589
  %.off10480 = add i64 %2146, -1001
  %1098 = icmp ult i64 %.off10480, 5
  br i1 %1098, label %maybe-more-tests2943, label %tag812

maybe-more-tests2943:                             ; preds = %header-check-br2935
  %1099 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1100 = invoke {}* @cc_safe_fdefinition({}* %1099)
          to label %normal-dest3937 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2945:                                  ; preds = %maybe-more-tests7574
  %ptrtoint2946 = ptrtoint {}* %2143 to i64
  %entry-point-addr-uint2947 = add i64 %ptrtoint2946, 7
  %entry-point-addr2948 = inttoptr i64 %entry-point-addr-uint2947 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2949 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2948, align 8
  %1101 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2949({}* %2143, i64 1, {}* nonnull %"closure->LAMBDA5775", {}* null, {}* null, {}* null)
          to label %normal-dest2952 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2952:                                  ; preds = %normal-dest2945
  %.elt9430 = extractvalue { {}*, i64 } %1101, 0
  %.elt9432 = extractvalue { {}*, i64 } %1101, 1
  %cond8197 = icmp eq i64 %.elt9432, 0
  %1102 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118882.1 = select i1 %cond8197, {}* %1102, {}* %.elt9430
  br label %tag390

normal-dest2959:                                  ; preds = %tag284
  %1103 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1104 = invoke {}* @cc_safe_fdefinition({}* %1103)
          to label %normal-dest2961 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2961:                                  ; preds = %normal-dest2959
  %1105 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 540), align 16
  %1106 = invoke {}* @cc_safe_fdefinition({}* %1105)
          to label %normal-dest2963 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2963:                                  ; preds = %normal-dest2961
  %1107 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 542), align 16
  %1108 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint2964 = ptrtoint {}* %1106 to i64
  %entry-point-addr-uint2965 = add i64 %ptrtoint2964, 7
  %entry-point-addr2966 = inttoptr i64 %entry-point-addr-uint2965 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2967 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2966, align 8
  %1109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2967({}* %1106, i64 6, {}* %1107, {}* %spalten-breite.0, {}* %1108, {}* %1108, {}* %1108, {}* null)
          to label %normal-dest2970 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2970:                                  ; preds = %normal-dest2963
  %.elt8497 = extractvalue { {}*, i64 } %1109, 0
  %.elt8499 = extractvalue { {}*, i64 } %1109, 1
  %cond8018 = icmp eq i64 %.elt8499, 0
  %1110 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %RESULT116615.0 = select i1 %cond8018, {}* %1110, {}* %.elt8497
  %1111 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 544), align 16
  %1112 = invoke {}* @cc_safe_fdefinition({}* %1111)
          to label %normal-dest2977 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2977:                                  ; preds = %normal-dest2970
  %1113 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint2978 = ptrtoint {}* %1112 to i64
  %entry-point-addr-uint2979 = add i64 %ptrtoint2978, 7
  %entry-point-addr2980 = inttoptr i64 %entry-point-addr-uint2979 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2981 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2980, align 8
  %1114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2981({}* %1112, i64 4, {}* %RESULT116615.0, {}* inttoptr (i64 362 to {}*), {}* null, {}* %1113)
          to label %normal-dest2984 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2984:                                  ; preds = %normal-dest2977
  %ptrtoint2989 = ptrtoint {}* %1104 to i64
  %entry-point-addr-uint2990 = add i64 %ptrtoint2989, 7
  %entry-point-addr2991 = inttoptr i64 %entry-point-addr-uint2990 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2992 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2991, align 8
  %1115 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2992({}* %1104, i64 1, {}* %RESULT116615.0, {}* null, {}* null, {}* null)
          to label %normal-dest2995 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest2995:                                  ; preds = %normal-dest2984
  %.elt8505 = extractvalue { {}*, i64 } %1115, 0
  %.elt8507 = extractvalue { {}*, i64 } %1115, 1
  %cond8019 = icmp eq i64 %.elt8507, 0
  %1116 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118175.0 = select i1 %cond8019, {}* %1116, {}* %.elt8505
  %ptrtoint3001 = ptrtoint {}* %G118172.0 to i64
  %entry-point-addr-uint3002 = add i64 %ptrtoint3001, 7
  %entry-point-addr3003 = inttoptr i64 %entry-point-addr-uint3002 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3004 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3003, align 8
  %1117 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3004({}* %G118172.0, i64 3, {}* %212, {}* %X_FORMAT.0, {}* %G118175.0, {}* null)
          to label %tag859 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3020:                                  ; preds = %tag414
  %ptrtoint3023 = ptrtoint {}* %.zeilen-breite.2 to i64
  %tag-only3024 = and i64 %ptrtoint3023, 7
  %test3025 = icmp eq i64 %tag-only3024, 1
  br i1 %test3025, label %header-check-br3022, label %tag461

header-check-br3022:                              ; preds = %normal-dest3020
  %irc-bit-cast3026 = bitcast {}* %.zeilen-breite.2 to i8*
  %gep3027 = getelementptr inbounds i8, i8* %irc-bit-cast3026, i64 -9
  %irc-bit-cast3028 = bitcast i8* %gep3027 to i64*
  %1118 = load i64, i64* %irc-bit-cast3028, align 8
  switch i64 %1118, label %header-check-br3723 [
    i64 1325, label %tag791
    i64 1341, label %tag791
  ]

normal-dest3030:                                  ; preds = %maybe-more-tests7507
  %ptrtoint3031 = ptrtoint {}* %2133 to i64
  %entry-point-addr-uint3032 = add i64 %ptrtoint3031, 7
  %entry-point-addr3033 = inttoptr i64 %entry-point-addr-uint3032 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3034 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3033, align 8
  %1119 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3034({}* %2133, i64 1, {}* nonnull %"closure->LAMBDA2695", {}* null, {}* null, {}* null)
          to label %normal-dest3037 unwind label %cleanup-lpad.loopexit

normal-dest3037:                                  ; preds = %normal-dest3030
  %.elt8741 = extractvalue { {}*, i64 } %1119, 0
  %.elt8743 = extractvalue { {}*, i64 } %1119, 1
  %cond8061 = icmp eq i64 %.elt8743, 0
  %1120 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117212.1 = select i1 %cond8061, {}* %1120, {}* %.elt8741
  br label %tag89

header-check-br3043:                              ; preds = %tag290
  %irc-bit-cast3047 = bitcast {}* %"closure->LAMBDA6825" to i8*
  %gep3048 = getelementptr inbounds i8, i8* %irc-bit-cast3047, i64 -9
  %irc-bit-cast3049 = bitcast i8* %gep3048 to i64*
  %1121 = load i64, i64* %irc-bit-cast3049, align 8
  %.off10517 = add i64 %1121, -913
  %1122 = icmp ult i64 %.off10517, 85
  br i1 %1122, label %tag886, label %header-check-br5861

normal-dest3053:                                  ; preds = %tag293
  %1123 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %1124 = invoke {}* @cc_safe_fdefinition({}* %1123)
          to label %normal-dest3055 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3055:                                  ; preds = %normal-dest3053
  %1125 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1126 = invoke {}* @cc_safe_fdefinition({}* %1125)
          to label %normal-dest3057 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3057:                                  ; preds = %normal-dest3055
  %1127 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 533), align 8
  %ptrtoint3058 = ptrtoint {}* %1126 to i64
  %entry-point-addr-uint3059 = add i64 %ptrtoint3058, 7
  %entry-point-addr3060 = inttoptr i64 %entry-point-addr-uint3059 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3061 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3060, align 8
  %1128 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3061({}* %1126, i64 1, {}* %1127, {}* null, {}* null, {}* null)
          to label %normal-dest3064 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3064:                                  ; preds = %normal-dest3057
  %.elt8480 = extractvalue { {}*, i64 } %1128, 0
  %.elt8482 = extractvalue { {}*, i64 } %1128, 1
  %cond8015 = icmp eq i64 %.elt8482, 0
  %1129 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118393.0 = select i1 %cond8015, {}* %1129, {}* %.elt8480
  %ptrtoint3070 = ptrtoint {}* %1124 to i64
  %entry-point-addr-uint3071 = add i64 %ptrtoint3070, 7
  %entry-point-addr3072 = inttoptr i64 %entry-point-addr-uint3071 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3073 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3072, align 8
  %1130 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3073({}* %1124, i64 2, {}* %G118393.0, {}* %1129, {}* null, {}* null)
          to label %normal-dest3076 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3076:                                  ; preds = %normal-dest3064
  %.elt8484 = extractvalue { {}*, i64 } %1130, 0
  %.elt8486 = extractvalue { {}*, i64 } %1130, 1
  %cond8016 = icmp eq i64 %.elt8486, 0
  %1131 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118391.0 = select i1 %cond8016, {}* %1131, {}* %.elt8484
  %ptrtoint3082 = ptrtoint {}* %G118388.0 to i64
  %entry-point-addr-uint3083 = add i64 %ptrtoint3082, 7
  %entry-point-addr3084 = inttoptr i64 %entry-point-addr-uint3083 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3085 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3084, align 8
  %1132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3085({}* %G118388.0, i64 3, {}* %218, {}* %Y_FORMAT.0, {}* %G118391.0, {}* null)
          to label %tag21 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br3093:                              ; preds = %tag294
  %gep3098 = getelementptr inbounds i8, i8* %1360, i64 -9
  %irc-bit-cast3099 = bitcast i8* %gep3098 to i64*
  %1133 = load i64, i64* %irc-bit-cast3099, align 8
  %.off10431 = add i64 %1133, -1081
  %1134 = icmp ult i64 %.off10431, 69
  br i1 %1134, label %tag297, label %header-check-br5639

normal-dest3102:                                  ; preds = %tag295
  %1135 = invoke double @from_object_double({}* nonnull %.zeilen-breite.2)
          to label %normal-dest3103 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3103:                                  ; preds = %normal-dest3102
  %1136 = fsub double %219, %1135
  %1137 = invoke {}* @to_object_double(double %1136)
          to label %tag852 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3106:                                  ; preds = %tag296
  %1138 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1139 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1140 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1141 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 584), align 16
  %ptrtoint3107 = ptrtoint {}* %221 to i64
  %entry-point-addr-uint3108 = add i64 %ptrtoint3107, 7
  %entry-point-addr3109 = inttoptr i64 %entry-point-addr-uint3108 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3110 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3109, align 8
  %1142 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3110({}* %221, i64 5, {}* %1138, {}* %1139, {}* %"closure->LAMBDA2695", {}* %1140, {}* %1141)
          to label %normal-dest3113 unwind label %cleanup-lpad.loopexit

normal-dest3113:                                  ; preds = %normal-dest3106
  %.elt8733 = extractvalue { {}*, i64 } %1142, 0
  %.elt8735 = extractvalue { {}*, i64 } %1142, 1
  %cond8060 = icmp eq i64 %.elt8735, 0
  %1143 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117212.2 = select i1 %cond8060, {}* %1143, {}* %.elt8733
  br label %tag89

normal-dest3120:                                  ; preds = %tag298
  %1144 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1145 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1146 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1147 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 551), align 8
  %ptrtoint3121 = ptrtoint {}* %224 to i64
  %entry-point-addr-uint3122 = add i64 %ptrtoint3121, 7
  %entry-point-addr3123 = inttoptr i64 %entry-point-addr-uint3122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3123, align 8
  %1148 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3124({}* %224, i64 5, {}* %1144, {}* %1145, {}* %"closure->LAMBDA2833", {}* %1146, {}* %1147)
          to label %normal-dest3127 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3127:                                  ; preds = %normal-dest3120
  %.elt9246 = extractvalue { {}*, i64 } %1148, 0
  %.elt9248 = extractvalue { {}*, i64 } %1148, 1
  %cond8163 = icmp eq i64 %.elt9248, 0
  %1149 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117987.1 = select i1 %cond8163, {}* %1149, {}* %.elt9246
  br label %tag133

normal-dest3141:                                  ; preds = %maybe-more-tests7872
  %ptrtoint3142 = ptrtoint {}* %2215 to i64
  %entry-point-addr-uint3143 = add i64 %ptrtoint3142, 7
  %entry-point-addr3144 = inttoptr i64 %entry-point-addr-uint3143 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3145 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3144, align 8
  %1150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3145({}* %2215, i64 1, {}* nonnull %"closure->LAMBDA3566", {}* null, {}* null, {}* null)
          to label %normal-dest3148 unwind label %cleanup-lpad.loopexit

normal-dest3148:                                  ; preds = %normal-dest3141
  %.elt8913 = extractvalue { {}*, i64 } %1150, 0
  %.elt8915 = extractvalue { {}*, i64 } %1150, 1
  %cond8098 = icmp eq i64 %.elt8915, 0
  %1151 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117384.1 = select i1 %cond8098, {}* %1151, {}* %.elt8913
  br label %tag497

normal-dest3155:                                  ; preds = %tag302
  %1152 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1153 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1154 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1155 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 576), align 16
  %ptrtoint3156 = ptrtoint {}* %226 to i64
  %entry-point-addr-uint3157 = add i64 %ptrtoint3156, 7
  %entry-point-addr3158 = inttoptr i64 %entry-point-addr-uint3157 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3159 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3158, align 8
  %1156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3159({}* %226, i64 5, {}* %1152, {}* %1153, {}* %vaarg906, {}* %1154, {}* %1155)
          to label %normal-dest3162 unwind label %cleanup-lpad.loopexit

normal-dest3162:                                  ; preds = %normal-dest3155
  %.elt8857 = extractvalue { {}*, i64 } %1156, 0
  %.elt8859 = extractvalue { {}*, i64 } %1156, 1
  %cond8086 = icmp eq i64 %.elt8859, 0
  %1157 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117417.1 = select i1 %cond8086, {}* %1157, {}* %.elt8857
  br label %tag740

normal-dest3169:                                  ; preds = %tag303
  %1158 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1159 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1160 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1161 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 575), align 8
  %ptrtoint3170 = ptrtoint {}* %228 to i64
  %entry-point-addr-uint3171 = add i64 %ptrtoint3170, 7
  %entry-point-addr3172 = inttoptr i64 %entry-point-addr-uint3171 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3173 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3172, align 8
  %1162 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3173({}* %228, i64 5, {}* %1158, {}* %1159, {}* %vaarg906, {}* %1160, {}* %1161)
          to label %normal-dest3176 unwind label %cleanup-lpad.loopexit

normal-dest3176:                                  ; preds = %normal-dest3169
  %.elt8893 = extractvalue { {}*, i64 } %1162, 0
  %.elt8895 = extractvalue { {}*, i64 } %1162, 1
  %cond8094 = icmp eq i64 %.elt8895, 0
  %1163 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117401.1 = select i1 %cond8094, {}* %1163, {}* %.elt8893
  br label %tag147

normal-dest3183:                                  ; preds = %maybe-more-tests2613
  %ptrtoint3184 = ptrtoint {}* %1025 to i64
  %entry-point-addr-uint3185 = add i64 %ptrtoint3184, 7
  %entry-point-addr3186 = inttoptr i64 %entry-point-addr-uint3185 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3187 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3186, align 8
  %1164 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3187({}* %1025, i64 1, {}* nonnull %"closure->LAMBDA5936", {}* null, {}* null, {}* null)
          to label %normal-dest3190 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3190:                                  ; preds = %normal-dest3183
  %.elt9649 = extractvalue { {}*, i64 } %1164, 0
  %.elt9651 = extractvalue { {}*, i64 } %1164, 1
  %cond8237 = icmp eq i64 %.elt9651, 0
  %1165 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119053.1 = select i1 %cond8237, {}* %1165, {}* %.elt9649
  br label %tag521

normal-dest3197:                                  ; preds = %tag306
  %1166 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1167 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1168 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1169 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 601), align 8
  %ptrtoint3198 = ptrtoint {}* %230 to i64
  %entry-point-addr-uint3199 = add i64 %ptrtoint3198, 7
  %entry-point-addr3200 = inttoptr i64 %entry-point-addr-uint3199 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3201 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3200, align 8
  %1170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3201({}* %230, i64 5, {}* %1166, {}* %1167, {}* %"closure->LAMBDA7765", {}* %1168, {}* %1169)
          to label %normal-dest3204 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3204:                                  ; preds = %normal-dest3197
  %.elt9553 = extractvalue { {}*, i64 } %1170, 0
  %.elt9555 = extractvalue { {}*, i64 } %1170, 1
  %cond8220 = icmp eq i64 %.elt9555, 0
  %1171 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116829.1 = select i1 %cond8220, {}* %1171, {}* %.elt9553
  br label %tag549

header-check-br3210:                              ; preds = %tag307
  %1172 = load i64, i64* %irc-bit-cast3711, align 8
  %.off10383 = add i64 %1172, -913
  %1173 = icmp ult i64 %.off10383, 85
  br i1 %1173, label %tag147, label %header-check-br4556

header-check-br3219:                              ; preds = %header-check-br2575
  %.off10390 = add i64 %1018, -1001
  %1174 = icmp ult i64 %.off10390, 5
  br i1 %1174, label %maybe-more-tests3227, label %tag176

maybe-more-tests3227:                             ; preds = %header-check-br3219
  %1175 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1176 = invoke {}* @cc_safe_fdefinition({}* %1175)
          to label %normal-dest6673 unwind label %cleanup-lpad.loopexit

normal-dest3229:                                  ; preds = %tag309
  %ptrtoint3230 = ptrtoint {}* %232 to i64
  %entry-point-addr-uint3231 = add i64 %ptrtoint3230, 7
  %entry-point-addr3232 = inttoptr i64 %entry-point-addr-uint3231 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3233 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3232, align 8
  %1177 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3233({}* %232, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest3236 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3236:                                  ; preds = %normal-dest3229
  %.elt9625 = extractvalue { {}*, i64 } %1177, 0
  %.elt9627 = extractvalue { {}*, i64 } %1177, 1
  %cond8233 = icmp eq i64 %.elt9627, 0
  %1178 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT116506.0 = select i1 %cond8233, {}* %1178, {}* %.elt9625
  %ptrtoint3243 = ptrtoint {}* %"closure->LAMBDA5936" to i64
  %tag-only3244 = and i64 %ptrtoint3243, 7
  %test3245 = icmp eq i64 %tag-only3244, 1
  br i1 %test3245, label %header-check-br3242, label %tag672

header-check-br3242:                              ; preds = %normal-dest3236
  %irc-bit-cast3246 = bitcast {}* %"closure->LAMBDA5936" to i8*
  %gep3247 = getelementptr inbounds i8, i8* %irc-bit-cast3246, i64 -9
  %irc-bit-cast3248 = bitcast i8* %gep3247 to i64*
  %1179 = load i64, i64* %irc-bit-cast3248, align 8
  %.off10505 = add i64 %1179, -913
  %1180 = icmp ult i64 %.off10505, 85
  br i1 %1180, label %tag226, label %header-check-br6936

header-check-br3251:                              ; preds = %header-check-br1189
  %.off10312 = add i64 %714, -1001
  %1181 = icmp ult i64 %.off10312, 5
  br i1 %1181, label %maybe-more-tests3259, label %tag97

maybe-more-tests3259:                             ; preds = %header-check-br3251
  %1182 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1183 = invoke {}* @cc_safe_fdefinition({}* %1182)
          to label %normal-dest2878 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3261:                                  ; preds = %maybe-more-tests981
  %ptrtoint3262 = ptrtoint {}* %658 to i64
  %entry-point-addr-uint3263 = add i64 %ptrtoint3262, 7
  %entry-point-addr3264 = inttoptr i64 %entry-point-addr-uint3263 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3265 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3264, align 8
  %1184 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3265({}* %658, i64 1, {}* nonnull %"closure->LAMBDA2636", {}* null, {}* null, {}* null)
          to label %normal-dest3268 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3268:                                  ; preds = %normal-dest3261
  %.elt9222 = extractvalue { {}*, i64 } %1184, 0
  %.elt9224 = extractvalue { {}*, i64 } %1184, 1
  %cond8158 = icmp eq i64 %.elt9224, 0
  %1185 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117014.2 = select i1 %cond8158, {}* %1185, {}* %.elt9222
  br label %tag96

normal-dest3274:                                  ; preds = %tag327
  %1186 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1187 = icmp eq {}* %stream.0, %1186
  %.val10396 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117182.0 = select i1 %1187, {}* %1186, {}* %.val10396
  %1188 = icmp eq {}* %G117182.0, %.val10396
  br i1 %1188, label %tag286, label %tag389

header-check-br3288:                              ; preds = %tag262
  %1189 = load i64, i64* %irc-bit-cast5097, align 8
  %1190 = add i64 %1189, -1309
  %1191 = lshr i64 %1190, 3
  %1192 = shl i64 %1190, 61
  %1193 = or i64 %1191, %1192
  switch i64 %1193, label %tag307 [
    i64 2, label %tag857
    i64 4, label %tag857
    i64 5, label %tag857
    i64 0, label %tag857
  ]

normal-dest3296:                                  ; preds = %tag335
  %1194 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 507), align 8
  %ptrtoint3297 = ptrtoint {}* %239 to i64
  %entry-point-addr-uint3298 = add i64 %ptrtoint3297, 7
  %entry-point-addr3299 = inttoptr i64 %entry-point-addr-uint3298 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3300 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3299, align 8
  %1195 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3300({}* %239, i64 2, {}* %vaarg902, {}* %1194, {}* null, {}* null)
          to label %normal-dest3303 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3303:                                  ; preds = %normal-dest3296
  %.elt9589 = extractvalue { {}*, i64 } %1195, 0
  %.elt9591 = extractvalue { {}*, i64 } %1195, 1
  %cond8226 = icmp eq i64 %.elt9591, 0
  %1196 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LAENGE.2 = select i1 %cond8226, {}* %1196, {}* %.elt9589
  br label %tag605

header-check-br3309:                              ; preds = %tag339
  %irc-bit-cast3313 = bitcast {}* %"closure->LAMBDA5936" to i8*
  %gep3314 = getelementptr inbounds i8, i8* %irc-bit-cast3313, i64 -9
  %irc-bit-cast3315 = bitcast i8* %gep3314 to i64*
  %1197 = load i64, i64* %irc-bit-cast3315, align 8
  %.off10507 = add i64 %1197, -913
  %1198 = icmp ult i64 %.off10507, 85
  br i1 %1198, label %tag521, label %header-check-br2605

normal-dest3321:                                  ; preds = %maybe-more-tests4564
  %ptrtoint3322 = ptrtoint {}* %1483 to i64
  %entry-point-addr-uint3323 = add i64 %ptrtoint3322, 7
  %entry-point-addr3324 = inttoptr i64 %entry-point-addr-uint3323 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3325 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3324, align 8
  %1199 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3325({}* %1483, i64 1, {}* nonnull %vaarg906, {}* null, {}* null, {}* null)
          to label %normal-dest3328 unwind label %cleanup-lpad.loopexit

normal-dest3328:                                  ; preds = %normal-dest3321
  %.elt8901 = extractvalue { {}*, i64 } %1199, 0
  %.elt8903 = extractvalue { {}*, i64 } %1199, 1
  %cond8096 = icmp eq i64 %.elt8903, 0
  %1200 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117401.2 = select i1 %cond8096, {}* %1200, {}* %.elt8901
  br label %tag147

normal-dest3351:                                  ; preds = %tag348
  %1201 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1202 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1203 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1204 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 559), align 8
  %ptrtoint3352 = ptrtoint {}* %246 to i64
  %entry-point-addr-uint3353 = add i64 %ptrtoint3352, 7
  %entry-point-addr3354 = inttoptr i64 %entry-point-addr-uint3353 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3355 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3354, align 8
  %1205 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3355({}* %246, i64 5, {}* %1201, {}* %1202, {}* %"closure->LAMBDA3566", {}* %1203, {}* %1204)
          to label %normal-dest3358 unwind label %cleanup-lpad.loopexit

normal-dest3358:                                  ; preds = %normal-dest3351
  %.elt8917 = extractvalue { {}*, i64 } %1205, 0
  %.elt8919 = extractvalue { {}*, i64 } %1205, 1
  %cond8099 = icmp eq i64 %.elt8919, 0
  %1206 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117300.1 = select i1 %cond8099, {}* %1206, {}* %.elt8917
  br label %tag19

normal-dest3365:                                  ; preds = %tag349
  %ptrtoint3366 = ptrtoint {}* %248 to i64
  %entry-point-addr-uint3367 = add i64 %ptrtoint3366, 7
  %entry-point-addr3368 = inttoptr i64 %entry-point-addr-uint3367 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3369 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3368, align 8
  %1207 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3369({}* %248, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest3372 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3372:                                  ; preds = %normal-dest3365
  %.elt9681 = extractvalue { {}*, i64 } %1207, 0
  %.elt9683 = extractvalue { {}*, i64 } %1207, 1
  %cond8243 = icmp eq i64 %.elt9683, 0
  %1208 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119202.0 = select i1 %cond8243, {}* %1208, {}* %.elt9681
  %1209 = icmp eq {}* %G119202.0, %1208
  br i1 %1209, label %tag290, label %tag509

header-check-br3379:                              ; preds = %header-check-br7959
  %.off10366 = add i64 %2230, -1001
  %1210 = icmp ult i64 %.off10366, 5
  br i1 %1210, label %maybe-more-tests3387, label %tag674

maybe-more-tests3387:                             ; preds = %header-check-br3379
  %1211 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1212 = invoke {}* @cc_safe_fdefinition({}* %1211)
          to label %normal-dest2155 unwind label %cleanup-lpad.loopexit

normal-dest3389:                                  ; preds = %tag355
  %1213 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1214 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1215 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1216 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 568), align 16
  %ptrtoint3390 = ptrtoint {}* %254 to i64
  %entry-point-addr-uint3391 = add i64 %ptrtoint3390, 7
  %entry-point-addr3392 = inttoptr i64 %entry-point-addr-uint3391 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3393 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3392, align 8
  %1217 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3393({}* %254, i64 5, {}* %1213, {}* %1214, {}* %vaarg906, {}* %1215, {}* %1216)
          to label %normal-dest3396 unwind label %cleanup-lpad.loopexit

normal-dest3396:                                  ; preds = %normal-dest3389
  %.elt8957 = extractvalue { {}*, i64 } %1217, 0
  %.elt8959 = extractvalue { {}*, i64 } %1217, 1
  %cond8108 = icmp eq i64 %.elt8959, 0
  %1218 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117317.1 = select i1 %cond8108, {}* %1218, {}* %.elt8957
  br label %tag615

header-check-br3402:                              ; preds = %tag357
  %irc-bit-cast3406 = bitcast {}* %"closure->LAMBDA7659" to i8*
  %gep3407 = getelementptr inbounds i8, i8* %irc-bit-cast3406, i64 -9
  %irc-bit-cast3408 = bitcast i8* %gep3407 to i64*
  %1219 = load i64, i64* %irc-bit-cast3408, align 8
  %.off10519 = add i64 %1219, -913
  %1220 = icmp ult i64 %.off10519, 85
  br i1 %1220, label %tag103, label %header-check-br6175

header-check-br3411:                              ; preds = %tag360
  %irc-bit-cast3415 = bitcast {}* %"closure->LAMBDA4881" to i8*
  %gep3416 = getelementptr inbounds i8, i8* %irc-bit-cast3415, i64 -9
  %irc-bit-cast3417 = bitcast i8* %gep3416 to i64*
  %1221 = load i64, i64* %irc-bit-cast3417, align 8
  %.off = add i64 %1221, -913
  %1222 = icmp ult i64 %.off, 85
  br i1 %1222, label %tag199, label %header-check-br7841

normal-dest3424:                                  ; preds = %maybe-more-tests4672
  %ptrtoint3425 = ptrtoint {}* %1517 to i64
  %entry-point-addr-uint3426 = add i64 %ptrtoint3425, 7
  %entry-point-addr3427 = inttoptr i64 %entry-point-addr-uint3426 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3428 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3427, align 8
  %1223 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3428({}* %1517, i64 1, {}* nonnull %"closure->LAMBDA3275", {}* null, {}* null, {}* null)
          to label %normal-dest3431 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3431:                                  ; preds = %normal-dest3424
  %.elt9018 = extractvalue { {}*, i64 } %1223, 0
  %.elt9020 = extractvalue { {}*, i64 } %1223, 1
  %cond8119 = icmp eq i64 %.elt9020, 0
  %1224 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117145.1 = select i1 %cond8119, {}* %1224, {}* %.elt9018
  br label %tag709

normal-dest3439:                                  ; preds = %tag368
  %ptrtoint3440 = ptrtoint {}* %256 to i64
  %entry-point-addr-uint3441 = add i64 %ptrtoint3440, 7
  %entry-point-addr3442 = inttoptr i64 %entry-point-addr-uint3441 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3443 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3442, align 8
  %1225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3443({}* %256, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest3446 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3446:                                  ; preds = %normal-dest3439
  %.elt9621 = extractvalue { {}*, i64 } %1225, 0
  %.elt9623 = extractvalue { {}*, i64 } %1225, 1
  %cond8232 = icmp eq i64 %.elt9623, 0
  %1226 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119086.0 = select i1 %cond8232, {}* %1226, {}* %.elt9621
  %1227 = icmp eq {}* %G119086.0, %1226
  br i1 %1227, label %tag339, label %tag309

normal-dest3453:                                  ; preds = %maybe-more-tests1723
  %ptrtoint3454 = ptrtoint {}* %829 to i64
  %entry-point-addr-uint3455 = add i64 %ptrtoint3454, 7
  %entry-point-addr3456 = inttoptr i64 %entry-point-addr-uint3455 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3457 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3456, align 8
  %1228 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3457({}* %829, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest3460 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3460:                                  ; preds = %normal-dest3453
  %.elt9374 = extractvalue { {}*, i64 } %1228, 0
  %.elt9376 = extractvalue { {}*, i64 } %1228, 1
  %cond8187 = icmp eq i64 %.elt9376, 0
  %1229 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118543.2 = select i1 %cond8187, {}* %1229, {}* %.elt9374
  br label %tag256

normal-dest3467:                                  ; preds = %tag370
  %1230 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1231 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1232 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1233 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 535), align 8
  %ptrtoint3468 = ptrtoint {}* %258 to i64
  %entry-point-addr-uint3469 = add i64 %ptrtoint3468, 7
  %entry-point-addr3470 = inttoptr i64 %entry-point-addr-uint3469 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3471 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3470, align 8
  %1234 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3471({}* %258, i64 5, {}* %1230, {}* %1231, {}* %"closure->LAMBDA6916", {}* %1232, {}* %1233)
          to label %normal-dest3474 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3474:                                  ; preds = %normal-dest3467
  %.elt9302 = extractvalue { {}*, i64 } %1234, 0
  %.elt9304 = extractvalue { {}*, i64 } %1234, 1
  %cond8173 = icmp eq i64 %.elt9304, 0
  %1235 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118357.1 = select i1 %cond8173, {}* %1235, {}* %.elt9302
  br label %tag714

normal-dest3481:                                  ; preds = %maybe-more-tests6929
  %ptrtoint3482 = ptrtoint {}* %2007 to i64
  %entry-point-addr-uint3483 = add i64 %ptrtoint3482, 7
  %entry-point-addr3484 = inttoptr i64 %entry-point-addr-uint3483 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3485 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3484, align 8
  %1236 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3485({}* %2007, i64 1, {}* nonnull %"closure->LAMBDA3566", {}* null, {}* null, {}* null)
          to label %normal-dest3488 unwind label %cleanup-lpad.loopexit

normal-dest3488:                                  ; preds = %normal-dest3481
  %.elt8977 = extractvalue { {}*, i64 } %1236, 0
  %.elt8979 = extractvalue { {}*, i64 } %1236, 1
  %cond8112 = icmp eq i64 %.elt8979, 0
  %1237 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117300.2 = select i1 %cond8112, {}* %1237, {}* %.elt8977
  br label %tag19

normal-dest3495:                                  ; preds = %tag373
  %1238 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 598), align 16
  %ptrtoint3496 = ptrtoint {}* %260 to i64
  %entry-point-addr-uint3497 = add i64 %ptrtoint3496, 7
  %entry-point-addr3498 = inttoptr i64 %entry-point-addr-uint3497 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3499 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3498, align 8
  %1239 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3499({}* %260, i64 2, {}* %.in, {}* %1238, {}* null, {}* null)
          to label %normal-dest3502 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3502:                                  ; preds = %normal-dest3495
  %.elt9174 = extractvalue { {}*, i64 } %1239, 0
  %.elt9176 = extractvalue { {}*, i64 } %1239, 1
  %cond8149 = icmp eq i64 %.elt9176, 0
  %1240 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LAENGE.3 = select i1 %cond8149, {}* %1240, {}* %.elt9174
  br label %tag717

normal-dest3510:                                  ; preds = %maybe-more-tests5067
  %ptrtoint3511 = ptrtoint {}* %1596 to i64
  %entry-point-addr-uint3512 = add i64 %ptrtoint3511, 7
  %entry-point-addr3513 = inttoptr i64 %entry-point-addr-uint3512 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3514 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3513, align 8
  %1241 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3514({}* %1596, i64 1, {}* nonnull %"closure->LAMBDA2695", {}* null, {}* null, {}* null)
          to label %normal-dest3517 unwind label %cleanup-lpad.loopexit

normal-dest3517:                                  ; preds = %normal-dest3510
  %.elt8729 = extractvalue { {}*, i64 } %1241, 0
  %.elt8731 = extractvalue { {}*, i64 } %1241, 1
  %cond8059 = icmp eq i64 %.elt8731, 0
  %1242 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117226.1 = select i1 %cond8059, {}* %1242, {}* %.elt8729
  br label %tag653

normal-dest3524:                                  ; preds = %tag378
  %1243 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1244 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1245 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1246 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 528), align 16
  %ptrtoint3525 = ptrtoint {}* %264 to i64
  %entry-point-addr-uint3526 = add i64 %ptrtoint3525, 7
  %entry-point-addr3527 = inttoptr i64 %entry-point-addr-uint3526 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3528 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3527, align 8
  %1247 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3528({}* %264, i64 5, {}* %1243, {}* %1244, {}* %"closure->LAMBDA", {}* %1245, {}* %1246)
          to label %normal-dest3531 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3531:                                  ; preds = %normal-dest3524
  %.elt9406 = extractvalue { {}*, i64 } %1247, 0
  %.elt9408 = extractvalue { {}*, i64 } %1247, 1
  %cond8193 = icmp eq i64 %.elt9408, 0
  %1248 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118496.1 = select i1 %cond8193, {}* %1248, {}* %.elt9406
  br label %tag840

normal-dest3538:                                  ; preds = %tag379
  %ptrtoint3539 = ptrtoint {}* %266 to i64
  %entry-point-addr-uint3540 = add i64 %ptrtoint3539, 7
  %entry-point-addr3541 = inttoptr i64 %entry-point-addr-uint3540 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3542 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3541, align 8
  %1249 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3542({}* %266, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest3545 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3545:                                  ; preds = %normal-dest3538
  %.elt9206 = extractvalue { {}*, i64 } %1249, 0
  %.elt9208 = extractvalue { {}*, i64 } %1249, 1
  %cond8155 = icmp eq i64 %.elt9208, 0
  %1250 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117031.0 = select i1 %cond8155, {}* %1250, {}* %.elt9206
  %1251 = icmp eq {}* %G117031.0, %1250
  br i1 %1251, label %tag32, label %tag277

normal-dest3552:                                  ; preds = %tag382
  %1252 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1253 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1254 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1255 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 585), align 8
  %ptrtoint3553 = ptrtoint {}* %268 to i64
  %entry-point-addr-uint3554 = add i64 %ptrtoint3553, 7
  %entry-point-addr3555 = inttoptr i64 %entry-point-addr-uint3554 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3556 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3555, align 8
  %1256 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3556({}* %268, i64 5, {}* %1252, {}* %1253, {}* %"closure->LAMBDA2695", {}* %1254, {}* %1255)
          to label %normal-dest3559 unwind label %cleanup-lpad.loopexit

normal-dest3559:                                  ; preds = %normal-dest3552
  %.elt8721 = extractvalue { {}*, i64 } %1256, 0
  %.elt8723 = extractvalue { {}*, i64 } %1256, 1
  %cond8058 = icmp eq i64 %.elt8723, 0
  %1257 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117226.2 = select i1 %cond8058, {}* %1257, {}* %.elt8721
  br label %tag653

normal-dest3565:                                  ; preds = %tag383
  %1258 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1259 = icmp eq {}* %stream.0, %1258
  %.val10346 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117656.0 = select i1 %1259, {}* %1258, {}* %.val10346
  %1260 = icmp eq {}* %G117656.0, %.val10346
  br i1 %1260, label %tag218, label %tag122

normal-dest3572:                                  ; preds = %tag385
  %1261 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1262 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1263 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1264 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 574), align 16
  %ptrtoint3573 = ptrtoint {}* %271 to i64
  %entry-point-addr-uint3574 = add i64 %ptrtoint3573, 7
  %entry-point-addr3575 = inttoptr i64 %entry-point-addr-uint3574 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3576 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3575, align 8
  %1265 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3576({}* %271, i64 5, {}* %1261, {}* %1262, {}* %"closure->LAMBDA3566", {}* %1263, {}* %1264)
          to label %normal-dest3579 unwind label %cleanup-lpad.loopexit

normal-dest3579:                                  ; preds = %normal-dest3572
  %.elt8853 = extractvalue { {}*, i64 } %1265, 0
  %.elt8855 = extractvalue { {}*, i64 } %1265, 1
  %cond8085 = icmp eq i64 %.elt8855, 0
  %1266 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117384.2 = select i1 %cond8085, {}* %1266, {}* %.elt8853
  br label %tag497

normal-dest3586:                                  ; preds = %tag386
  %1267 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1268 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1269 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1270 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 476), align 16
  %ptrtoint3587 = ptrtoint {}* %273 to i64
  %entry-point-addr-uint3588 = add i64 %ptrtoint3587, 7
  %entry-point-addr3589 = inttoptr i64 %entry-point-addr-uint3588 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3590 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3589, align 8
  %1271 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3590({}* %273, i64 5, {}* %1267, {}* %1268, {}* %"closure->LAMBDA7659", {}* %1269, {}* %1270)
          to label %normal-dest3593 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3593:                                  ; preds = %normal-dest3586
  %.elt9753 = extractvalue { {}*, i64 } %1271, 0
  %.elt9755 = extractvalue { {}*, i64 } %1271, 1
  %cond8257 = icmp eq i64 %.elt9755, 0
  %1272 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119386.1 = select i1 %cond8257, {}* %1272, {}* %.elt9753
  br label %tag878

header-check-br3602:                              ; preds = %tag389
  %irc-bit-cast3606 = bitcast {}* %"closure->LAMBDA3275" to i8*
  %gep3607 = getelementptr inbounds i8, i8* %irc-bit-cast3606, i64 -9
  %irc-bit-cast3608 = bitcast i8* %gep3607 to i64*
  %1273 = load i64, i64* %irc-bit-cast3608, align 8
  %.off10399 = add i64 %1273, -913
  %1274 = icmp ult i64 %.off10399, 85
  br i1 %1274, label %tag716, label %header-check-br5445

normal-dest3612:                                  ; preds = %tag390
  %1275 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 386), align 16
  %1276 = invoke {}* @cc_safe_fdefinition({}* %1275)
          to label %normal-dest3614 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3614:                                  ; preds = %normal-dest3612
  %1277 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1278 = invoke {}* @cc_safe_fdefinition({}* %1277)
          to label %normal-dest3616 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3616:                                  ; preds = %normal-dest3614
  %1279 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 513), align 8
  %ptrtoint3617 = ptrtoint {}* %1278 to i64
  %entry-point-addr-uint3618 = add i64 %ptrtoint3617, 7
  %entry-point-addr3619 = inttoptr i64 %entry-point-addr-uint3618 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3620 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3619, align 8
  %1280 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3620({}* %1278, i64 1, {}* %1279, {}* null, {}* null, {}* null)
          to label %normal-dest3623 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3623:                                  ; preds = %normal-dest3616
  %.elt8350 = extractvalue { {}*, i64 } %1280, 0
  %.elt8352 = extractvalue { {}*, i64 } %1280, 1
  %cond7990 = icmp eq i64 %.elt8352, 0
  %1281 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118887.0 = select i1 %cond7990, {}* %1281, {}* %.elt8350
  %ptrtoint3629 = ptrtoint {}* %1276 to i64
  %entry-point-addr-uint3630 = add i64 %ptrtoint3629, 7
  %entry-point-addr3631 = inttoptr i64 %entry-point-addr-uint3630 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3632 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3631, align 8
  %1282 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3632({}* %1276, i64 2, {}* %G118887.0, {}* %1281, {}* null, {}* null)
          to label %normal-dest3635 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3635:                                  ; preds = %normal-dest3623
  %.elt8354 = extractvalue { {}*, i64 } %1282, 0
  %.elt8356 = extractvalue { {}*, i64 } %1282, 1
  %cond7991 = icmp eq i64 %.elt8356, 0
  %1283 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118885.0 = select i1 %cond7991, {}* %1283, {}* %.elt8354
  %ptrtoint3641 = ptrtoint {}* %G118882.0 to i64
  %entry-point-addr-uint3642 = add i64 %ptrtoint3641, 7
  %entry-point-addr3643 = inttoptr i64 %entry-point-addr-uint3642 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3644 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3643, align 8
  %1284 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3644({}* %G118882.0, i64 3, {}* %277, {}* %Y_FORMAT.0, {}* %G118885.0, {}* null)
          to label %tag209 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3653:                                  ; preds = %tag391
  %1285 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1286 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1287 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1288 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 501), align 8
  %ptrtoint3654 = ptrtoint {}* %279 to i64
  %entry-point-addr-uint3655 = add i64 %ptrtoint3654, 7
  %entry-point-addr3656 = inttoptr i64 %entry-point-addr-uint3655 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3657 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3656, align 8
  %1289 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3657({}* %279, i64 5, {}* %1285, {}* %1286, {}* %"closure->LAMBDA6825", {}* %1287, {}* %1288)
          to label %normal-dest3660 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3660:                                  ; preds = %normal-dest3653
  %.elt8305 = extractvalue { {}*, i64 } %1289, 0
  %.elt8307 = extractvalue { {}*, i64 } %1289, 1
  %cond7982 = icmp eq i64 %.elt8307, 0
  %1290 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119238.1 = select i1 %cond7982, {}* %1290, {}* %.elt8305
  br label %tag566

normal-dest3678:                                  ; preds = %maybe-more-tests4724
  %ptrtoint3679 = ptrtoint {}* %1527 to i64
  %entry-point-addr-uint3680 = add i64 %ptrtoint3679, 7
  %entry-point-addr3681 = inttoptr i64 %entry-point-addr-uint3680 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3682 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3681, align 8
  %1291 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3682({}* %1527, i64 1, {}* nonnull %"closure->LAMBDA7765", {}* null, {}* null, {}* null)
          to label %normal-dest3685 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3685:                                  ; preds = %normal-dest3678
  %.elt9521 = extractvalue { {}*, i64 } %1291, 0
  %.elt9523 = extractvalue { {}*, i64 } %1291, 1
  %cond8214 = icmp eq i64 %.elt9523, 0
  %1292 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116877.2 = select i1 %cond8214, {}* %1292, {}* %.elt9521
  br label %tag239

normal-dest3692:                                  ; preds = %maybe-more-tests2482
  %ptrtoint3693 = ptrtoint {}* %1004 to i64
  %entry-point-addr-uint3694 = add i64 %ptrtoint3693, 7
  %entry-point-addr3695 = inttoptr i64 %entry-point-addr-uint3694 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3696 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3695, align 8
  %1293 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3696({}* %1004, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest3699 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3699:                                  ; preds = %normal-dest3692
  %.elt9414 = extractvalue { {}*, i64 } %1293, 0
  %.elt9416 = extractvalue { {}*, i64 } %1293, 1
  %cond8194 = icmp eq i64 %.elt9416, 0
  %1294 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118496.2 = select i1 %cond8194, {}* %1294, {}* %.elt9414
  br label %tag840

header-check-br3705:                              ; preds = %tag395
  %1295 = load i64, i64* %irc-bit-cast3711, align 8
  %.off10391 = add i64 %1295, -913
  %1296 = icmp ult i64 %.off10391, 85
  br i1 %1296, label %tag615, label %header-check-br1950

header-check-br3723:                              ; preds = %header-check-br3022
  %.old = and i64 %ptrtoint3023, 3
  %fixnump-test5942.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test5942.old, label %tag791, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br3723
  switch i64 %1118, label %tag804 [
    i64 1349, label %tag791
    i64 1309, label %tag791
  ]

normal-dest3737:                                  ; preds = %tag404
  %ptrtoint3739 = ptrtoint {}* %291 to i64
  %entry-point-addr-uint3740 = add i64 %ptrtoint3739, 7
  %entry-point-addr3741 = inttoptr i64 %entry-point-addr-uint3740 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3742 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3741, align 8
  %1297 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3742({}* %291, i64 1, {}* %513, {}* null, {}* null, {}* null)
          to label %normal-dest3745 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest3745:                                  ; preds = %normal-dest3737
  %.elt9158 = extractvalue { {}*, i64 } %1297, 0
  %.elt9160 = extractvalue { {}*, i64 } %1297, 1
  %cond8146 = icmp eq i64 %.elt9160, 0
  %1298 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.1 = select i1 %cond8146, {}* %1298, {}* %.elt9158
  br label %tag741.outer.backedge

normal-dest3752:                                  ; preds = %tag407
  %ptrtoint3753 = ptrtoint {}* %293 to i64
  %entry-point-addr-uint3754 = add i64 %ptrtoint3753, 7
  %entry-point-addr3755 = inttoptr i64 %entry-point-addr-uint3754 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3756 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3755, align 8
  %1299 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3756({}* %293, i64 1, {}* %275, {}* null, {}* null, {}* null)
          to label %normal-dest3759 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3759:                                  ; preds = %normal-dest3752
  %.elt9778 = extractvalue { {}*, i64 } %1299, 0
  %.elt9780 = extractvalue { {}*, i64 } %1299, 1
  %cond8261 = icmp eq i64 %.elt9780, 0
  %1300 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119528.2 = select i1 %cond8261, {}* %1300, {}* %.elt9778
  br label %tag852

normal-dest3770:                                  ; preds = %tag410
  %ptrtoint3773 = ptrtoint {}* %296 to i64
  %entry-point-addr-uint3774 = add i64 %ptrtoint3773, 7
  %entry-point-addr3775 = inttoptr i64 %entry-point-addr-uint3774 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3776 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3775, align 8
  %1301 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3776({}* %296, i64 2, {}* nonnull %tabellen-zugriff.0, {}* nonnull %1376, {}* null, {}* null)
          to label %normal-dest3779 unwind label %cleanup-lpad.loopexit

normal-dest3779:                                  ; preds = %normal-dest3770
  %.elt8837 = extractvalue { {}*, i64 } %1301, 0
  %.elt8839 = extractvalue { {}*, i64 } %1301, 1
  %cond8081 = icmp eq i64 %.elt8839, 0
  %1302 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117535.1 = select i1 %cond8081, {}* %1302, {}* %.elt8837
  br label %tag354

normal-dest3786:                                  ; preds = %tag411
  %1303 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 455), align 8
  %ptrtoint3787 = ptrtoint {}* %298 to i64
  %entry-point-addr-uint3788 = add i64 %ptrtoint3787, 7
  %entry-point-addr3789 = inttoptr i64 %entry-point-addr-uint3788 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3790 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3789, align 8
  %1304 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3790({}* %298, i64 1, {}* %1303, {}* null, {}* null, {}* null)
          to label %normal-dest3793 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3793:                                  ; preds = %normal-dest3786
  %.elt9782 = extractvalue { {}*, i64 } %1304, 0
  %.elt9784 = extractvalue { {}*, i64 } %1304, 1
  %cond8262 = icmp eq i64 %.elt9784, 0
  %1305 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %spalten-titel.5 = select i1 %cond8262, {}* %1305, {}* %.elt9782
  br label %tag414

header-check-br3799:                              ; preds = %tag413
  %1306 = load i64, i64* %irc-bit-cast3711, align 8
  %.off10375 = add i64 %1306, -913
  %1307 = icmp ult i64 %.off10375, 85
  br i1 %1307, label %tag688, label %header-check-br6411

header-check-br3808:                              ; preds = %header-check-br6906
  %.off10448 = add i64 %2000, -1001
  %1308 = icmp ult i64 %.off10448, 5
  br i1 %1308, label %maybe-more-tests3816, label %tag298

maybe-more-tests3816:                             ; preds = %header-check-br3808
  %1309 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1310 = invoke {}* @cc_safe_fdefinition({}* %1309)
          to label %normal-dest7797 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3818:                                  ; preds = %tag416
  %1311 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1312 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1313 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1314 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 532), align 16
  %ptrtoint3819 = ptrtoint {}* %308 to i64
  %entry-point-addr-uint3820 = add i64 %ptrtoint3819, 7
  %entry-point-addr3821 = inttoptr i64 %entry-point-addr-uint3820 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3822 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3821, align 8
  %1315 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3822({}* %308, i64 5, {}* %1311, {}* %1312, {}* %"closure->LAMBDA6916", {}* %1313, {}* %1314)
          to label %normal-dest3825 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3825:                                  ; preds = %normal-dest3818
  %.elt9354 = extractvalue { {}*, i64 } %1315, 0
  %.elt9356 = extractvalue { {}*, i64 } %1315, 1
  %cond8183 = icmp eq i64 %.elt9356, 0
  %1316 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118300.1 = select i1 %cond8183, {}* %1316, {}* %.elt9354
  br label %tag858

header-check-br3831:                              ; preds = %header-check-br4079
  %.off10406 = add i64 %1367, -1001
  %1317 = icmp ult i64 %.off10406, 5
  br i1 %1317, label %maybe-more-tests3839, label %tag823

maybe-more-tests3839:                             ; preds = %header-check-br3831
  %1318 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1319 = invoke {}* @cc_safe_fdefinition({}* %1318)
          to label %normal-dest2021 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br3840:                              ; preds = %header-check-br1353
  %.off10478 = add i64 %746, -1001
  %1320 = icmp ult i64 %.off10478, 5
  br i1 %1320, label %maybe-more-tests3848, label %tag677

maybe-more-tests3848:                             ; preds = %header-check-br3840
  %1321 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1322 = invoke {}* @cc_safe_fdefinition({}* %1321)
          to label %normal-dest7194 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3850:                                  ; preds = %tag421
  %ptrtoint3851 = ptrtoint {}* %312 to i64
  %entry-point-addr-uint3852 = add i64 %ptrtoint3851, 7
  %entry-point-addr3853 = inttoptr i64 %entry-point-addr-uint3852 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3854 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3853, align 8
  %1323 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3854({}* %312, i64 2, {}* nonnull %tabellen-zugriff.0, {}* nonnull %673, {}* null, {}* null)
          to label %normal-dest3857 unwind label %cleanup-lpad.loopexit

normal-dest3857:                                  ; preds = %normal-dest3850
  %.elt8973 = extractvalue { {}*, i64 } %1323, 0
  %.elt8975 = extractvalue { {}*, i64 } %1323, 1
  %cond8111 = icmp eq i64 %.elt8975, 0
  %1324 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117356.1 = select i1 %cond8111, {}* %1324, {}* %.elt8973
  br label %tag223

normal-dest3864:                                  ; preds = %tag423
  %ptrtoint3865 = ptrtoint {}* %314 to i64
  %entry-point-addr-uint3866 = add i64 %ptrtoint3865, 7
  %entry-point-addr3867 = inttoptr i64 %entry-point-addr-uint3866 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3868 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3867, align 8
  %1325 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3868({}* %314, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest3871 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3871:                                  ; preds = %normal-dest3864
  %.elt8554 = extractvalue { {}*, i64 } %1325, 0
  %.elt8556 = extractvalue { {}*, i64 } %1325, 1
  %cond8027 = icmp eq i64 %.elt8556, 0
  %1326 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118123.0 = select i1 %cond8027, {}* %1326, {}* %.elt8554
  %1327 = icmp eq {}* %G118123.0, %1326
  br i1 %1327, label %tag687, label %tag252

normal-dest3885:                                  ; preds = %tag426
  %ptrtoint3886 = ptrtoint {}* %316 to i64
  %entry-point-addr-uint3887 = add i64 %ptrtoint3886, 7
  %entry-point-addr3888 = inttoptr i64 %entry-point-addr-uint3887 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3889 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3888, align 8
  %1328 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3889({}* %316, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest3892 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3892:                                  ; preds = %normal-dest3885
  %.elt9002 = extractvalue { {}*, i64 } %1328, 0
  %.elt9004 = extractvalue { {}*, i64 } %1328, 1
  %cond8117 = icmp eq i64 %.elt9004, 0
  %1329 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116732.0 = select i1 %cond8117, {}* %1329, {}* %.elt9002
  %ptrtoint3900 = ptrtoint {}* %"closure->LAMBDA3275" to i64
  %tag-only3901 = and i64 %ptrtoint3900, 7
  %test3902 = icmp eq i64 %tag-only3901, 1
  br i1 %test3902, label %header-check-br3899, label %tag486

header-check-br3899:                              ; preds = %normal-dest3892
  %irc-bit-cast3903 = bitcast {}* %"closure->LAMBDA3275" to i8*
  %gep3904 = getelementptr inbounds i8, i8* %irc-bit-cast3903, i64 -9
  %irc-bit-cast3905 = bitcast i8* %gep3904 to i64*
  %1330 = load i64, i64* %irc-bit-cast3905, align 8
  %.off10403 = add i64 %1330, -913
  %1331 = icmp ult i64 %.off10403, 85
  br i1 %1331, label %tag709, label %header-check-br4664

normal-dest3909:                                  ; preds = %maybe-more-tests1143
  %ptrtoint3910 = ptrtoint {}* %702 to i64
  %entry-point-addr-uint3911 = add i64 %ptrtoint3910, 7
  %entry-point-addr3912 = inttoptr i64 %entry-point-addr-uint3911 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3913 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3912, align 8
  %1332 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3913({}* %702, i64 1, {}* nonnull %"closure->LAMBDA2833", {}* null, {}* null, {}* null)
          to label %normal-dest3916 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3916:                                  ; preds = %normal-dest3909
  %.elt9278 = extractvalue { {}*, i64 } %1332, 0
  %.elt9280 = extractvalue { {}*, i64 } %1332, 1
  %cond8168 = icmp eq i64 %.elt9280, 0
  %1333 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117962.2 = select i1 %cond8168, {}* %1333, {}* %.elt9278
  br label %tag189

normal-dest3923:                                  ; preds = %tag430
  %1334 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1335 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1336 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1337 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 512), align 16
  %ptrtoint3924 = ptrtoint {}* %318 to i64
  %entry-point-addr-uint3925 = add i64 %ptrtoint3924, 7
  %entry-point-addr3926 = inttoptr i64 %entry-point-addr-uint3925 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3927 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3926, align 8
  %1338 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3927({}* %318, i64 5, {}* %1334, {}* %1335, {}* %"closure->LAMBDA5775", {}* %1336, {}* %1337)
          to label %normal-dest3930 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3930:                                  ; preds = %normal-dest3923
  %.elt9490 = extractvalue { {}*, i64 } %1338, 0
  %.elt9492 = extractvalue { {}*, i64 } %1338, 1
  %cond8209 = icmp eq i64 %.elt9492, 0
  %1339 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118794.1 = select i1 %cond8209, {}* %1339, {}* %.elt9490
  br label %tag689

normal-dest3937:                                  ; preds = %maybe-more-tests2943
  %ptrtoint3938 = ptrtoint {}* %1100 to i64
  %entry-point-addr-uint3939 = add i64 %ptrtoint3938, 7
  %entry-point-addr3940 = inttoptr i64 %entry-point-addr-uint3939 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3941 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3940, align 8
  %1340 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3941({}* %1100, i64 1, {}* nonnull %"closure->LAMBDA5775", {}* null, {}* null, {}* null)
          to label %normal-dest3944 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest3944:                                  ; preds = %normal-dest3937
  %.elt9486 = extractvalue { {}*, i64 } %1340, 0
  %.elt9488 = extractvalue { {}*, i64 } %1340, 1
  %cond8208 = icmp eq i64 %.elt9488, 0
  %1341 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118817.1 = select i1 %cond8208, {}* %1341, {}* %.elt9486
  br label %tag629

normal-dest3951:                                  ; preds = %tag432
  %ptrtoint3952 = ptrtoint {}* %320 to i64
  %entry-point-addr-uint3953 = add i64 %ptrtoint3952, 7
  %entry-point-addr3954 = inttoptr i64 %entry-point-addr-uint3953 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3955 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3954, align 8
  %1342 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3955({}* %320, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest3958 unwind label %cleanup-lpad.loopexit

normal-dest3958:                                  ; preds = %normal-dest3951
  %.elt8773 = extractvalue { {}*, i64 } %1342, 0
  %.elt8775 = extractvalue { {}*, i64 } %1342, 1
  %cond8068 = icmp eq i64 %.elt8775, 0
  %1343 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116687.0 = select i1 %cond8068, {}* %1343, {}* %.elt8773
  %ptrtoint3966 = ptrtoint {}* %"closure->LAMBDA3566" to i64
  %tag-only3967 = and i64 %ptrtoint3966, 7
  %test3968 = icmp eq i64 %tag-only3967, 1
  br i1 %test3968, label %header-check-br3965, label %tag245

header-check-br3965:                              ; preds = %normal-dest3958
  %irc-bit-cast3969 = bitcast {}* %"closure->LAMBDA3566" to i8*
  %gep3970 = getelementptr inbounds i8, i8* %irc-bit-cast3969, i64 -9
  %irc-bit-cast3971 = bitcast i8* %gep3970 to i64*
  %1344 = load i64, i64* %irc-bit-cast3971, align 8
  %.off10377 = add i64 %1344, -913
  %1345 = icmp ult i64 %.off10377, 85
  br i1 %1345, label %tag456, label %header-check-br5471

header-check-br3974:                              ; preds = %tag434
  %irc-bit-cast3978 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep3979 = getelementptr inbounds i8, i8* %irc-bit-cast3978, i64 -9
  %irc-bit-cast3980 = bitcast i8* %gep3979 to i64*
  %1346 = load i64, i64* %irc-bit-cast3980, align 8
  %.off10463 = add i64 %1346, -913
  %1347 = icmp ult i64 %.off10463, 85
  br i1 %1347, label %tag256, label %header-check-br1715

normal-dest3984:                                  ; preds = %maybe-more-tests7376
  %ptrtoint3985 = ptrtoint {}* %2099 to i64
  %entry-point-addr-uint3986 = add i64 %ptrtoint3985, 7
  %entry-point-addr3987 = inttoptr i64 %entry-point-addr-uint3986 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3988 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3987, align 8
  %1348 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3988({}* %2099, i64 1, {}* nonnull %vaarg902, {}* null, {}* null, {}* null)
          to label %normal-dest3991 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest3991:                                  ; preds = %normal-dest3984
  %.elt9593 = extractvalue { {}*, i64 } %1348, 0
  %.elt9595 = extractvalue { {}*, i64 } %1348, 1
  %cond8227 = icmp eq i64 %.elt9595, 0
  %1349 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119678.0 = select i1 %cond8227, {}* %1349, {}* %.elt9593
  %1350 = icmp eq {}* %G119678.0, inttoptr (i64 4 to {}*)
  br i1 %1350, label %tag860, label %tag872

header-check-br3997:                              ; preds = %header-check-br2376
  %.off10354 = add i64 %985, -1001
  %1351 = icmp ult i64 %.off10354, 5
  br i1 %1351, label %maybe-more-tests4005, label %tag734

maybe-more-tests4005:                             ; preds = %header-check-br3997
  %1352 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1353 = invoke {}* @cc_safe_fdefinition({}* %1352)
          to label %normal-dest4377 unwind label %cleanup-lpad.loopexit

normal-dest4007:                                  ; preds = %maybe-more-tests1317
  %ptrtoint4008 = ptrtoint {}* %735 to i64
  %entry-point-addr-uint4009 = add i64 %ptrtoint4008, 7
  %entry-point-addr4010 = inttoptr i64 %entry-point-addr-uint4009 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4011 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4010, align 8
  %1354 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4011({}* %735, i64 1, {}* nonnull %"closure->LAMBDA5936", {}* null, {}* null, {}* null)
          to label %normal-dest4014 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4014:                                  ; preds = %normal-dest4007
  %.elt9617 = extractvalue { {}*, i64 } %1354, 0
  %.elt9619 = extractvalue { {}*, i64 } %1354, 1
  %cond8231 = icmp eq i64 %.elt9619, 0
  %1355 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119094.2 = select i1 %cond8231, {}* %1355, {}* %.elt9617
  br label %tag572

normal-dest4021:                                  ; preds = %tag440
  %ptrtoint4022 = ptrtoint {}* %322 to i64
  %entry-point-addr-uint4023 = add i64 %ptrtoint4022, 7
  %entry-point-addr4024 = inttoptr i64 %entry-point-addr-uint4023 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4025 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4024, align 8
  %1356 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4025({}* %322, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest4028 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest4028:                                  ; preds = %normal-dest4021
  %.elt9154 = extractvalue { {}*, i64 } %1356, 0
  %.elt9156 = extractvalue { {}*, i64 } %1356, 1
  %cond8145 = icmp eq i64 %.elt9156, 0
  %1357 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH.2 = select i1 %cond8145, {}* %1357, {}* %.elt9154
  br label %tag741.outer.backedge

normal-dest4035:                                  ; preds = %tag442
  %ptrtoint4036 = ptrtoint {}* %324 to i64
  %entry-point-addr-uint4037 = add i64 %ptrtoint4036, 7
  %entry-point-addr4038 = inttoptr i64 %entry-point-addr-uint4037 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4039 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4038, align 8
  %1358 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4039({}* %324, i64 2, {}* %X_GRENZE.2, {}* %X_LISTE_ALLES.0, {}* null, {}* null)
          to label %normal-dest4042 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4042:                                  ; preds = %normal-dest4035
  %.elt9146 = extractvalue { {}*, i64 } %1358, 0
  %.elt9148 = extractvalue { {}*, i64 } %1358, 1
  %cond8144 = icmp eq i64 %.elt9148, 0
  %1359 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %.in = select i1 %cond8144, {}* %1359, {}* %.elt9146
  %1360 = bitcast {}* %.in to i8*
  %1361 = ptrtoint {}* %.in to i64
  %tag-only40499149 = and i64 %1361, 7
  %consp-test4050 = icmp eq i64 %tag-only40499149, 3
  %.val10421 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %G116993.0 = select i1 %consp-test4050, {}* %.val10421, {}* %1359
  %1362 = icmp eq {}* %G116993.0, %1359
  br i1 %1362, label %tag294, label %tag741.outer.preheader

tag741.outer.preheader:                           ; preds = %normal-dest4042
  br label %tag741.outer

normal-dest4052:                                  ; preds = %maybe-more-tests1934
  %ptrtoint4053 = ptrtoint {}* %872 to i64
  %entry-point-addr-uint4054 = add i64 %ptrtoint4053, 7
  %entry-point-addr4055 = inttoptr i64 %entry-point-addr-uint4054 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4056 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4055, align 8
  %1363 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4056({}* %872, i64 1, {}* nonnull %"closure->LAMBDA7765", {}* null, {}* null, {}* null)
          to label %normal-dest4059 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4059:                                  ; preds = %normal-dest4052
  %.elt9573 = extractvalue { {}*, i64 } %1363, 0
  %.elt9575 = extractvalue { {}*, i64 } %1363, 1
  %cond8223 = icmp eq i64 %.elt9575, 0
  %1364 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116814.1 = select i1 %cond8223, {}* %1364, {}* %.elt9573
  br label %tag667

normal-dest4066:                                  ; preds = %tag444
  %ptrtoint4067 = ptrtoint {}* %326 to i64
  %entry-point-addr-uint4068 = add i64 %ptrtoint4067, 7
  %entry-point-addr4069 = inttoptr i64 %entry-point-addr-uint4068 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4070 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4069, align 8
  %1365 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4070({}* %326, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest4073 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4073:                                  ; preds = %normal-dest4066
  %.elt9026 = extractvalue { {}*, i64 } %1365, 0
  %.elt9028 = extractvalue { {}*, i64 } %1365, 1
  %cond8121 = icmp eq i64 %.elt9028, 0
  %1366 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT116726.0 = select i1 %cond8121, {}* %1366, {}* %.elt9026
  %ptrtoint4080 = ptrtoint {}* %"closure->LAMBDA3275" to i64
  %tag-only4081 = and i64 %ptrtoint4080, 7
  %test4082 = icmp eq i64 %tag-only4081, 1
  br i1 %test4082, label %header-check-br4079, label %tag823

header-check-br4079:                              ; preds = %normal-dest4073
  %irc-bit-cast4083 = bitcast {}* %"closure->LAMBDA3275" to i8*
  %gep4084 = getelementptr inbounds i8, i8* %irc-bit-cast4083, i64 -9
  %irc-bit-cast4085 = bitcast i8* %gep4084 to i64*
  %1367 = load i64, i64* %irc-bit-cast4085, align 8
  %.off10405 = add i64 %1367, -913
  %1368 = icmp ult i64 %.off10405, 85
  br i1 %1368, label %tag392, label %header-check-br3831

header-check-br4102:                              ; preds = %header-check-br4602
  %.off10364 = add i64 %1493, -1001
  %1369 = icmp ult i64 %.off10364, 5
  br i1 %1369, label %maybe-more-tests4110, label %tag485

maybe-more-tests4110:                             ; preds = %header-check-br4102
  %1370 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1371 = invoke {}* @cc_safe_fdefinition({}* %1370)
          to label %normal-dest2213 unwind label %cleanup-lpad.loopexit

normal-dest4112:                                  ; preds = %maybe-more-tests2083
  %ptrtoint4113 = ptrtoint {}* %911 to i64
  %entry-point-addr-uint4114 = add i64 %ptrtoint4113, 7
  %entry-point-addr4115 = inttoptr i64 %entry-point-addr-uint4114 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4116 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4115, align 8
  %1372 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4116({}* %911, i64 1, {}* nonnull %"closure->LAMBDA7765", {}* null, {}* null, {}* null)
          to label %normal-dest4119 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4119:                                  ; preds = %normal-dest4112
  %.elt9561 = extractvalue { {}*, i64 } %1372, 0
  %.elt9563 = extractvalue { {}*, i64 } %1372, 1
  %cond8221 = icmp eq i64 %.elt9563, 0
  %1373 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116829.2 = select i1 %cond8221, {}* %1373, {}* %.elt9561
  br label %tag549

normal-dest4133:                                  ; preds = %tag456
  %1374 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %1375 = invoke {}* @cc_safe_fdefinition({}* %1374)
          to label %normal-dest4135 unwind label %cleanup-lpad.loopexit

normal-dest4135:                                  ; preds = %normal-dest4133
  %1376 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 560), align 16
  %1377 = icmp eq {}* %tabellen-zugriff.0, %1376
  %.val10371 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val10372 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117544.0 = select i1 %1377, {}* %.val10371, {}* %.val10372
  %1378 = icmp eq {}* %G117544.0, %.val10372
  br i1 %1378, label %tag821, label %tag354

normal-dest4143:                                  ; preds = %tag457
  %1379 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1380 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1381 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1382 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint4144 = ptrtoint {}* %332 to i64
  %entry-point-addr-uint4145 = add i64 %ptrtoint4144, 7
  %entry-point-addr4146 = inttoptr i64 %entry-point-addr-uint4145 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4147 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4146, align 8
  %1383 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4147({}* %332, i64 5, {}* %1379, {}* %1380, {}* %"%DOLIST-VAR1103.010565", {}* %1381, {}* %1382)
          to label %normal-dest4150 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4150:                                  ; preds = %normal-dest4143
  %.elt8994 = extractvalue { {}*, i64 } %1383, 0
  %.elt8996 = extractvalue { {}*, i64 } %1383, 1
  %cond8115 = icmp eq i64 %.elt8996, 0
  %1384 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %"%DOLIST-VAR1103.1" = select i1 %cond8115, {}* %1384, {}* %.elt8994
  br label %tag313.backedge

normal-dest4157:                                  ; preds = %tag458
  %1385 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1386 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1387 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1388 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint4158 = ptrtoint {}* %334 to i64
  %entry-point-addr-uint4159 = add i64 %ptrtoint4158, 7
  %entry-point-addr4160 = inttoptr i64 %entry-point-addr-uint4159 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4161 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4160, align 8
  %1389 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4161({}* %334, i64 5, {}* %1385, {}* %1386, {}* %"%DOLIST-VAR.010563", {}* %1387, {}* %1388)
          to label %tag875 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4171:                                  ; preds = %tag459
  %ptrtoint4172 = ptrtoint {}* %336 to i64
  %entry-point-addr-uint4173 = add i64 %ptrtoint4172, 7
  %entry-point-addr4174 = inttoptr i64 %entry-point-addr-uint4173 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4175 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4174, align 8
  %1390 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4175({}* %336, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest4178 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4178:                                  ; preds = %normal-dest4171
  %.elt9330 = extractvalue { {}*, i64 } %1390, 0
  %.elt9332 = extractvalue { {}*, i64 } %1390, 1
  %cond8178 = icmp eq i64 %.elt9332, 0
  %1391 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT116582.0 = select i1 %cond8178, {}* %1391, {}* %.elt9330
  %ptrtoint4185 = ptrtoint {}* %"closure->LAMBDA6916" to i64
  %tag-only4186 = and i64 %ptrtoint4185, 7
  %test4187 = icmp eq i64 %tag-only4186, 1
  br i1 %test4187, label %header-check-br4184, label %tag205

header-check-br4184:                              ; preds = %normal-dest4178
  %irc-bit-cast4188 = bitcast {}* %"closure->LAMBDA6916" to i8*
  %gep4189 = getelementptr inbounds i8, i8* %irc-bit-cast4188, i64 -9
  %irc-bit-cast4190 = bitcast i8* %gep4189 to i64*
  %1392 = load i64, i64* %irc-bit-cast4190, align 8
  %.off10459 = add i64 %1392, -913
  %1393 = icmp ult i64 %.off10459, 85
  br i1 %1393, label %tag247, label %header-check-br1935

normal-dest4195:                                  ; preds = %tag462
  %ptrtoint4196 = ptrtoint {}* %339 to i64
  %entry-point-addr-uint4197 = add i64 %ptrtoint4196, 7
  %entry-point-addr4198 = inttoptr i64 %entry-point-addr-uint4197 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4199 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4198, align 8
  %1394 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4199({}* %339, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest4202 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4202:                                  ; preds = %normal-dest4195
  %.elt9745 = extractvalue { {}*, i64 } %1394, 0
  %.elt9747 = extractvalue { {}*, i64 } %1394, 1
  %cond8255 = icmp eq i64 %.elt9747, 0
  %1395 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119404.0 = select i1 %cond8255, {}* %1395, {}* %.elt9745
  %1396 = icmp eq {}* %G119404.0, %1395
  br i1 %1396, label %tag4, label %tag732

header-check-br4208:                              ; preds = %header-check-br4707
  %.off10418 = add i64 %1523, -1001
  %1397 = icmp ult i64 %.off10418, 5
  br i1 %1397, label %maybe-more-tests4216, label %tag151

maybe-more-tests4216:                             ; preds = %header-check-br4208
  %1398 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1399 = invoke {}* @cc_safe_fdefinition({}* %1398)
          to label %normal-dest5579 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br4224:                              ; preds = %header-check-br7680
  %.off10314 = add i64 %2169, -1001
  %1400 = icmp ult i64 %.off10314, 5
  br i1 %1400, label %maybe-more-tests4232, label %tag496

maybe-more-tests4232:                             ; preds = %header-check-br4224
  %1401 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1402 = invoke {}* @cc_safe_fdefinition({}* %1401)
          to label %normal-dest6659 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br4233:                              ; preds = %header-check-br7359
  %.off10374 = add i64 %2095, -1001
  %1403 = icmp ult i64 %.off10374, 5
  br i1 %1403, label %maybe-more-tests4241, label %tag750

maybe-more-tests4241:                             ; preds = %header-check-br4233
  %1404 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1405 = invoke {}* @cc_safe_fdefinition({}* %1404)
          to label %normal-dest4327 unwind label %cleanup-lpad.loopexit

normal-dest4243:                                  ; preds = %maybe-more-tests5647
  %ptrtoint4244 = ptrtoint {}* %1716 to i64
  %entry-point-addr-uint4245 = add i64 %ptrtoint4244, 7
  %entry-point-addr4246 = inttoptr i64 %entry-point-addr-uint4245 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4247 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4246, align 8
  %1406 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4247({}* %1716, i64 1, {}* nonnull %.in, {}* null, {}* null, {}* null)
          to label %normal-dest4250 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4250:                                  ; preds = %normal-dest4243
  %.elt9178 = extractvalue { {}*, i64 } %1406, 0
  %.elt9180 = extractvalue { {}*, i64 } %1406, 1
  %cond8150 = icmp eq i64 %.elt9180, 0
  %1407 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119674.0 = select i1 %cond8150, {}* %1407, {}* %.elt9178
  %1408 = icmp eq {}* %G119674.0, inttoptr (i64 4 to {}*)
  br i1 %1408, label %tag297, label %tag814

normal-dest4265:                                  ; preds = %tag471
  %1409 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 522), align 16
  %1410 = invoke {}* @cc_safe_fdefinition({}* %1409)
          to label %normal-dest4267 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4267:                                  ; preds = %normal-dest4265
  %ptrtoint4268 = ptrtoint {}* %1410 to i64
  %entry-point-addr-uint4269 = add i64 %ptrtoint4268, 7
  %entry-point-addr4270 = inttoptr i64 %entry-point-addr-uint4269 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4271 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4270, align 8
  %1411 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4271({}* %1410, i64 2, {}* %X_ELEMENT1830.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest4274 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4274:                                  ; preds = %normal-dest4267
  %.elt8428 = extractvalue { {}*, i64 } %1411, 0
  %.elt8430 = extractvalue { {}*, i64 } %1411, 1
  %cond8005 = icmp eq i64 %.elt8430, 0
  %1412 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118616.0 = select i1 %cond8005, {}* %1412, {}* %.elt8428
  %ptrtoint4280 = ptrtoint {}* %341 to i64
  %entry-point-addr-uint4281 = add i64 %ptrtoint4280, 7
  %entry-point-addr4282 = inttoptr i64 %entry-point-addr-uint4281 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4283 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4282, align 8
  %1413 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4283({}* %341, i64 1, {}* %G118616.0, {}* null, {}* null, {}* null)
          to label %normal-dest4286 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4286:                                  ; preds = %normal-dest4274
  %.elt8432 = extractvalue { {}*, i64 } %1413, 0
  %.elt8434 = extractvalue { {}*, i64 } %1413, 1
  %cond8006 = icmp eq i64 %.elt8434, 0
  %1414 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118614.0 = select i1 %cond8006, {}* %1414, {}* %.elt8432
  %ptrtoint4292 = ptrtoint {}* %G118611.0 to i64
  %entry-point-addr-uint4293 = add i64 %ptrtoint4292, 7
  %entry-point-addr4294 = inttoptr i64 %entry-point-addr-uint4293 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4295 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4294, align 8
  %1415 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4295({}* %G118611.0, i64 3, {}* %OUT1165474263.0, {}* %X_FORMAT.0, {}* %G118614.0, {}* null)
          to label %tag685 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br4303:                              ; preds = %tag473
  %irc-bit-cast4307 = bitcast {}* %"closure->LAMBDA3275" to i8*
  %gep4308 = getelementptr inbounds i8, i8* %irc-bit-cast4307, i64 -9
  %irc-bit-cast4309 = bitcast i8* %gep4308 to i64*
  %1416 = load i64, i64* %irc-bit-cast4309, align 8
  %.off10407 = add i64 %1416, -913
  %1417 = icmp ult i64 %.off10407, 85
  br i1 %1417, label %tag138, label %header-check-br6739

normal-dest4313:                                  ; preds = %tag474
  %1418 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1419 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1420 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1421 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 500), align 16
  %ptrtoint4314 = ptrtoint {}* %343 to i64
  %entry-point-addr-uint4315 = add i64 %ptrtoint4314, 7
  %entry-point-addr4316 = inttoptr i64 %entry-point-addr-uint4315 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4317 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4316, align 8
  %1422 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4317({}* %343, i64 5, {}* %1418, {}* %1419, {}* %"closure->LAMBDA6825", {}* %1420, {}* %1421)
          to label %normal-dest4320 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4320:                                  ; preds = %normal-dest4313
  %.elt9661 = extractvalue { {}*, i64 } %1422, 0
  %.elt9663 = extractvalue { {}*, i64 } %1422, 1
  %cond8240 = icmp eq i64 %.elt9663, 0
  %1423 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119210.2 = select i1 %cond8240, {}* %1423, {}* %.elt9661
  br label %tag258

normal-dest4327:                                  ; preds = %maybe-more-tests4241
  %ptrtoint4328 = ptrtoint {}* %1405 to i64
  %entry-point-addr-uint4329 = add i64 %ptrtoint4328, 7
  %entry-point-addr4330 = inttoptr i64 %entry-point-addr-uint4329 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4331 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4330, align 8
  %1424 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4331({}* %1405, i64 1, {}* nonnull %vaarg906, {}* null, {}* null, {}* null)
          to label %normal-dest4334 unwind label %cleanup-lpad.loopexit

normal-dest4334:                                  ; preds = %normal-dest4327
  %.elt8817 = extractvalue { {}*, i64 } %1424, 0
  %.elt8819 = extractvalue { {}*, i64 } %1424, 1
  %cond8077 = icmp eq i64 %.elt8819, 0
  %1425 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117512.1 = select i1 %cond8077, {}* %1425, {}* %.elt8817
  br label %tag565

normal-dest4341:                                  ; preds = %maybe-more-tests5453
  %ptrtoint4342 = ptrtoint {}* %1675 to i64
  %entry-point-addr-uint4343 = add i64 %ptrtoint4342, 7
  %entry-point-addr4344 = inttoptr i64 %entry-point-addr-uint4343 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4345 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4344, align 8
  %1426 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4345({}* %1675, i64 1, {}* nonnull %"closure->LAMBDA3275", {}* null, {}* null, {}* null)
          to label %normal-dest4348 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4348:                                  ; preds = %normal-dest4341
  %.elt8998 = extractvalue { {}*, i64 } %1426, 0
  %.elt9000 = extractvalue { {}*, i64 } %1426, 1
  %cond8116 = icmp eq i64 %.elt9000, 0
  %1427 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117167.2 = select i1 %cond8116, {}* %1427, {}* %.elt8998
  br label %tag716

header-check-br4354:                              ; preds = %header-check-br5560
  %.off10458 = add i64 %1699, -1001
  %1428 = icmp ult i64 %.off10458, 5
  br i1 %1428, label %maybe-more-tests4362, label %tag370

maybe-more-tests4362:                             ; preds = %header-check-br4354
  %1429 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1430 = invoke {}* @cc_safe_fdefinition({}* %1429)
          to label %normal-dest7542 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4369:                                  ; preds = %normal-dest7208
  call void @unreachableError()
  unreachable

normal-dest4377:                                  ; preds = %maybe-more-tests4005
  %ptrtoint4378 = ptrtoint {}* %1353 to i64
  %entry-point-addr-uint4379 = add i64 %ptrtoint4378, 7
  %entry-point-addr4380 = inttoptr i64 %entry-point-addr-uint4379 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4381 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4380, align 8
  %1431 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4381({}* %1353, i64 1, {}* nonnull %"closure->LAMBDA2695", {}* null, {}* null, {}* null)
          to label %normal-dest4384 unwind label %cleanup-lpad.loopexit

normal-dest4384:                                  ; preds = %normal-dest4377
  %.elt8689 = extractvalue { {}*, i64 } %1431, 0
  %.elt8691 = extractvalue { {}*, i64 } %1431, 1
  %cond8052 = icmp eq i64 %.elt8691, 0
  %1432 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117273.1 = select i1 %cond8052, {}* %1432, {}* %.elt8689
  br label %tag730

normal-dest4391:                                  ; preds = %maybe-more-tests990
  %ptrtoint4392 = ptrtoint {}* %661 to i64
  %entry-point-addr-uint4393 = add i64 %ptrtoint4392, 7
  %entry-point-addr4394 = inttoptr i64 %entry-point-addr-uint4393 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4395 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4394, align 8
  %1433 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4395({}* %661, i64 1, {}* nonnull %"closure->LAMBDA2636", {}* null, {}* null, {}* null)
          to label %normal-dest4398 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4398:                                  ; preds = %normal-dest4391
  %.elt9202 = extractvalue { {}*, i64 } %1433, 0
  %.elt9204 = extractvalue { {}*, i64 } %1433, 1
  %cond8154 = icmp eq i64 %.elt9204, 0
  %1434 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117039.1 = select i1 %cond8154, {}* %1434, {}* %.elt9202
  br label %tag652

normal-dest4405:                                  ; preds = %tag485
  %1435 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1436 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1437 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1438 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 582), align 16
  %ptrtoint4406 = ptrtoint {}* %347 to i64
  %entry-point-addr-uint4407 = add i64 %ptrtoint4406, 7
  %entry-point-addr4408 = inttoptr i64 %entry-point-addr-uint4407 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4409 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4408, align 8
  %1439 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4409({}* %347, i64 5, {}* %1435, {}* %1436, {}* %vaarg906, {}* %1437, {}* %1438)
          to label %normal-dest4412 unwind label %cleanup-lpad.loopexit

normal-dest4412:                                  ; preds = %normal-dest4405
  %.elt8644 = extractvalue { {}*, i64 } %1439, 0
  %.elt8646 = extractvalue { {}*, i64 } %1439, 1
  %cond8043 = icmp eq i64 %.elt8646, 0
  %1440 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117604.2 = select i1 %cond8043, {}* %1440, {}* %.elt8644
  br label %tag215

normal-dest4419:                                  ; preds = %tag486
  %1441 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1442 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1443 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1444 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 590), align 16
  %ptrtoint4420 = ptrtoint {}* %349 to i64
  %entry-point-addr-uint4421 = add i64 %ptrtoint4420, 7
  %entry-point-addr4422 = inttoptr i64 %entry-point-addr-uint4421 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4423 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4422, align 8
  %1445 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4423({}* %349, i64 5, {}* %1441, {}* %1442, {}* %"closure->LAMBDA3275", {}* %1443, {}* %1444)
          to label %normal-dest4426 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4426:                                  ; preds = %normal-dest4419
  %.elt9006 = extractvalue { {}*, i64 } %1445, 0
  %.elt9008 = extractvalue { {}*, i64 } %1445, 1
  %cond8118 = icmp eq i64 %.elt9008, 0
  %1446 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117145.2 = select i1 %cond8118, {}* %1446, {}* %.elt9006
  br label %tag709

normal-dest4434:                                  ; preds = %tag487
  %1447 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 498), align 16
  %ptrtoint4435 = ptrtoint {}* %351 to i64
  %entry-point-addr-uint4436 = add i64 %ptrtoint4435, 7
  %entry-point-addr4437 = inttoptr i64 %entry-point-addr-uint4436 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4438 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4437, align 8
  %1448 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4438({}* %351, i64 1, {}* %1447, {}* null, {}* null, {}* null)
          to label %normal-dest4441 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4441:                                  ; preds = %normal-dest4434
  %.elt9693 = extractvalue { {}*, i64 } %1448, 0
  %.elt9695 = extractvalue { {}*, i64 } %1448, 1
  %cond8246 = icmp eq i64 %.elt9695, 0
  %1449 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119182.0 = select i1 %cond8246, {}* %1449, {}* %.elt9693
  %ptrtoint4447 = ptrtoint {}* %G119179.0 to i64
  %entry-point-addr-uint4448 = add i64 %ptrtoint4447, 7
  %entry-point-addr4449 = inttoptr i64 %entry-point-addr-uint4448 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4450 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4449, align 8
  %1450 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4450({}* %G119179.0, i64 4, {}* %OUT1164844432.0, {}* %Y_FORMAT.0, {}* %G119182.0, {}* %spalten-titel.0)
          to label %tag681 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4459:                                  ; preds = %tag488
  %1451 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1452 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1453 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1454 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 527), align 8
  %ptrtoint4460 = ptrtoint {}* %353 to i64
  %entry-point-addr-uint4461 = add i64 %ptrtoint4460, 7
  %entry-point-addr4462 = inttoptr i64 %entry-point-addr-uint4461 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4463 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4462, align 8
  %1455 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4463({}* %353, i64 5, {}* %1451, {}* %1452, {}* %"closure->LAMBDA", {}* %1453, {}* %1454)
          to label %normal-dest4466 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4466:                                  ; preds = %normal-dest4459
  %.elt9418 = extractvalue { {}*, i64 } %1455, 0
  %.elt9420 = extractvalue { {}*, i64 } %1455, 1
  %cond8195 = icmp eq i64 %.elt9420, 0
  %1456 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118482.2 = select i1 %cond8195, {}* %1456, {}* %.elt9418
  br label %tag658

header-check-br4472:                              ; preds = %header-check-br5997
  %.off10336 = add i64 %1800, -1001
  %1457 = icmp ult i64 %.off10336, 5
  br i1 %1457, label %maybe-more-tests4480, label %tag704

maybe-more-tests4480:                             ; preds = %header-check-br4472
  %1458 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1459 = invoke {}* @cc_safe_fdefinition({}* %1458)
          to label %normal-dest944 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br4481:                              ; preds = %tag492
  %irc-bit-cast4485 = bitcast {}* %"closure->LAMBDA2833" to i8*
  %gep4486 = getelementptr inbounds i8, i8* %irc-bit-cast4485, i64 -9
  %irc-bit-cast4487 = bitcast i8* %gep4486 to i64*
  %1460 = load i64, i64* %irc-bit-cast4487, align 8
  %.off10443 = add i64 %1460, -913
  %1461 = icmp ult i64 %.off10443, 85
  br i1 %1461, label %tag607, label %header-check-br7832

normal-dest4491:                                  ; preds = %tag496
  %1462 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1463 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1464 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1465 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 524), align 16
  %ptrtoint4492 = ptrtoint {}* %355 to i64
  %entry-point-addr-uint4493 = add i64 %ptrtoint4492, 7
  %entry-point-addr4494 = inttoptr i64 %entry-point-addr-uint4493 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4495 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4494, align 8
  %1466 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4495({}* %355, i64 5, {}* %1462, {}* %1463, {}* %"closure->LAMBDA4881", {}* %1464, {}* %1465)
          to label %normal-dest4498 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4498:                                  ; preds = %normal-dest4491
  %.elt8424 = extractvalue { {}*, i64 } %1466, 0
  %.elt8426 = extractvalue { {}*, i64 } %1466, 1
  %cond8004 = icmp eq i64 %.elt8426, 0
  %1467 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118611.1 = select i1 %cond8004, {}* %1467, {}* %.elt8424
  br label %tag471

normal-dest4505:                                  ; preds = %tag497
  %1468 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %1469 = invoke {}* @cc_safe_fdefinition({}* %1468)
          to label %normal-dest4507 unwind label %cleanup-lpad.loopexit

normal-dest4507:                                  ; preds = %normal-dest4505
  %1470 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 560), align 16
  %1471 = icmp eq {}* %tabellen-zugriff.0, %1470
  %.val10379 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val10380 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117449.0 = select i1 %1471, {}* %.val10379, {}* %.val10380
  %1472 = icmp eq {}* %G117449.0, %.val10380
  br i1 %1472, label %tag262, label %tag376

normal-dest4522:                                  ; preds = %tag501
  %1473 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1474 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1475 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1476 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 503), align 8
  %ptrtoint4523 = ptrtoint {}* %359 to i64
  %entry-point-addr-uint4524 = add i64 %ptrtoint4523, 7
  %entry-point-addr4525 = inttoptr i64 %entry-point-addr-uint4524 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4526 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4525, align 8
  %1477 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4526({}* %359, i64 5, {}* %1473, {}* %1474, {}* %"closure->LAMBDA5936", {}* %1475, {}* %1476)
          to label %normal-dest4529 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4529:                                  ; preds = %normal-dest4522
  %.elt9641 = extractvalue { {}*, i64 } %1477, 0
  %.elt9643 = extractvalue { {}*, i64 } %1477, 1
  %cond8236 = icmp eq i64 %.elt9643, 0
  %1478 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119053.2 = select i1 %cond8236, {}* %1478, {}* %.elt9641
  br label %tag521

normal-dest4543:                                  ; preds = %tag771
  %ptrtoint4544 = ptrtoint {}* %531 to i64
  %entry-point-addr-uint4545 = add i64 %ptrtoint4544, 7
  %entry-point-addr4546 = inttoptr i64 %entry-point-addr-uint4545 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4547 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4546, align 8
  %1479 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4547({}* %531, i64 2, {}* %LENGTH3508.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest4550 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest4550:                                  ; preds = %normal-dest4543
  %.elt8329 = extractvalue { {}*, i64 } %1479, 0
  %.elt8331 = extractvalue { {}*, i64 } %1479, 1
  %cond7985 = icmp eq i64 %.elt8331, 0
  %1480 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH3508.1 = select i1 %cond7985, {}* %1480, {}* %.elt8329
  br label %tag580.outer.backedge

header-check-br4556:                              ; preds = %header-check-br3210
  %.off10384 = add i64 %1172, -1001
  %1481 = icmp ult i64 %.off10384, 5
  br i1 %1481, label %maybe-more-tests4564, label %tag303

maybe-more-tests4564:                             ; preds = %header-check-br4556
  %1482 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1483 = invoke {}* @cc_safe_fdefinition({}* %1482)
          to label %normal-dest3321 unwind label %cleanup-lpad.loopexit

normal-dest4573:                                  ; preds = %tag509
  %ptrtoint4574 = ptrtoint {}* %363 to i64
  %entry-point-addr-uint4575 = add i64 %ptrtoint4574, 7
  %entry-point-addr4576 = inttoptr i64 %entry-point-addr-uint4575 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4577 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4576, align 8
  %1484 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4577({}* %363, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest4580 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4580:                                  ; preds = %normal-dest4573
  %.elt9685 = extractvalue { {}*, i64 } %1484, 0
  %.elt9687 = extractvalue { {}*, i64 } %1484, 1
  %cond8244 = icmp eq i64 %.elt9687, 0
  %1485 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT1164844432.0 = select i1 %cond8244, {}* %1485, {}* %.elt9685
  %ptrtoint4587 = ptrtoint {}* %"closure->LAMBDA6825" to i64
  %tag-only4588 = and i64 %ptrtoint4587, 7
  %test4589 = icmp eq i64 %tag-only4588, 1
  br i1 %test4589, label %header-check-br4586, label %tag799

header-check-br4586:                              ; preds = %normal-dest4580
  %irc-bit-cast4590 = bitcast {}* %"closure->LAMBDA6825" to i8*
  %gep4591 = getelementptr inbounds i8, i8* %irc-bit-cast4590, i64 -9
  %irc-bit-cast4592 = bitcast i8* %gep4591 to i64*
  %1486 = load i64, i64* %irc-bit-cast4592, align 8
  %.off10515 = add i64 %1486, -913
  %1487 = icmp ult i64 %.off10515, 85
  br i1 %1487, label %tag487, label %header-check-br2191

header-check-br4595:                              ; preds = %tag770
  %1488 = load i64, i64* %irc-bit-cast5097, align 8
  %1489 = add i64 %1488, -1309
  %1490 = lshr i64 %1489, 3
  %1491 = shl i64 %1489, 61
  %1492 = or i64 %1490, %1491
  switch i64 %1492, label %tag890 [
    i64 2, label %tag593
    i64 4, label %tag593
    i64 5, label %tag593
    i64 0, label %tag593
  ]

header-check-br4602:                              ; preds = %tag512
  %1493 = load i64, i64* %irc-bit-cast3711, align 8
  %.off10363 = add i64 %1493, -913
  %1494 = icmp ult i64 %.off10363, 85
  br i1 %1494, label %tag215, label %header-check-br4102

header-check-br4611:                              ; preds = %header-check-br2841
  %irc-bit-cast4615 = bitcast {}* %.zeilen-breite.2 to i8*
  %gep4616 = getelementptr inbounds i8, i8* %irc-bit-cast4615, i64 -9
  %irc-bit-cast4617 = bitcast i8* %gep4616 to i64*
  %1495 = load i64, i64* %irc-bit-cast4617, align 8
  %1496 = icmp eq i64 %1495, 1325
  br i1 %1496, label %tag295, label %tag105

normal-dest4619:                                  ; preds = %tag514
  %1497 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1498 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1499 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1500 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 552), align 16
  %ptrtoint4620 = ptrtoint {}* %365 to i64
  %entry-point-addr-uint4621 = add i64 %ptrtoint4620, 7
  %entry-point-addr4622 = inttoptr i64 %entry-point-addr-uint4621 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4623 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4622, align 8
  %1501 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4623({}* %365, i64 5, {}* %1497, {}* %1498, {}* %"closure->LAMBDA2833", {}* %1499, {}* %1500)
          to label %normal-dest4626 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4626:                                  ; preds = %normal-dest4619
  %.elt8614 = extractvalue { {}*, i64 } %1501, 0
  %.elt8616 = extractvalue { {}*, i64 } %1501, 1
  %cond8038 = icmp eq i64 %.elt8616, 0
  %1502 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118009.2 = select i1 %cond8038, {}* %1502, {}* %.elt8614
  br label %tag607

normal-dest4633:                                  ; preds = %tag515
  %1503 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1504 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1505 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1506 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 547), align 8
  %ptrtoint4634 = ptrtoint {}* %367 to i64
  %entry-point-addr-uint4635 = add i64 %ptrtoint4634, 7
  %entry-point-addr4636 = inttoptr i64 %entry-point-addr-uint4635 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4637 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4636, align 8
  %1507 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4637({}* %367, i64 5, {}* %1503, {}* %1504, {}* %"closure->LAMBDA7791", {}* %1505, {}* %1506)
          to label %normal-dest4640 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4640:                                  ; preds = %normal-dest4633
  %.elt8526 = extractvalue { {}*, i64 } %1507, 0
  %.elt8528 = extractvalue { {}*, i64 } %1507, 1
  %cond8023 = icmp eq i64 %.elt8528, 0
  %1508 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118131.2 = select i1 %cond8023, {}* %1508, {}* %.elt8526
  br label %tag719

header-check-br4646:                              ; preds = %header-check-br4837
  %.off10316 = add i64 %1553, -1001
  %1509 = icmp ult i64 %.off10316, 5
  br i1 %1509, label %maybe-more-tests4654, label %tag142

maybe-more-tests4654:                             ; preds = %header-check-br4646
  %1510 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1511 = invoke {}* @cc_safe_fdefinition({}* %1510)
          to label %normal-dest2562 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br4655:                              ; preds = %header-check-br2743
  %.off10334 = add i64 %1055, -1001
  %1512 = icmp ult i64 %.off10334, 5
  br i1 %1512, label %maybe-more-tests4663, label %tag71

maybe-more-tests4663:                             ; preds = %header-check-br4655
  %1513 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1514 = invoke {}* @cc_safe_fdefinition({}* %1513)
          to label %normal-dest2759 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br4664:                              ; preds = %header-check-br3899
  %.off10404 = add i64 %1330, -1001
  %1515 = icmp ult i64 %.off10404, 5
  br i1 %1515, label %maybe-more-tests4672, label %tag486

maybe-more-tests4672:                             ; preds = %header-check-br4664
  %1516 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1517 = invoke {}* @cc_safe_fdefinition({}* %1516)
          to label %normal-dest3424 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4674:                                  ; preds = %maybe-more-tests6944
  %ptrtoint4675 = ptrtoint {}* %2010 to i64
  %entry-point-addr-uint4676 = add i64 %ptrtoint4675, 7
  %entry-point-addr4677 = inttoptr i64 %entry-point-addr-uint4676 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4678 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4677, align 8
  %1518 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4678({}* %2010, i64 1, {}* nonnull %"closure->LAMBDA5936", {}* null, {}* null, {}* null)
          to label %normal-dest4681 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4681:                                  ; preds = %normal-dest4674
  %.elt9637 = extractvalue { {}*, i64 } %1518, 0
  %.elt9639 = extractvalue { {}*, i64 } %1518, 1
  %cond8235 = icmp eq i64 %.elt9639, 0
  %1519 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119068.1 = select i1 %cond8235, {}* %1519, {}* %.elt9637
  br label %tag226

header-check-br4687:                              ; preds = %header-check-br1634
  %.off10514 = add i64 %810, -1001
  %1520 = icmp ult i64 %.off10514, 5
  br i1 %1520, label %maybe-more-tests4695, label %tag474

maybe-more-tests4695:                             ; preds = %header-check-br4687
  %1521 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1522 = invoke {}* @cc_safe_fdefinition({}* %1521)
          to label %normal-dest1913 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br4707:                              ; preds = %tag522
  %irc-bit-cast4711 = bitcast {}* %"closure->LAMBDA4828" to i8*
  %gep4712 = getelementptr inbounds i8, i8* %irc-bit-cast4711, i64 -9
  %irc-bit-cast4713 = bitcast i8* %gep4712 to i64*
  %1523 = load i64, i64* %irc-bit-cast4713, align 8
  %.off10417 = add i64 %1523, -913
  %1524 = icmp ult i64 %.off10417, 85
  br i1 %1524, label %tag796, label %header-check-br4208

header-check-br4716:                              ; preds = %header-check-br1256
  %.off10486 = add i64 %726, -1001
  %1525 = icmp ult i64 %.off10486, 5
  br i1 %1525, label %maybe-more-tests4724, label %tag83

maybe-more-tests4724:                             ; preds = %header-check-br4716
  %1526 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1527 = invoke {}* @cc_safe_fdefinition({}* %1526)
          to label %normal-dest3678 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4726:                                  ; preds = %tag525
  %1528 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1529 = invoke {}* @cc_safe_fdefinition({}* %1528)
          to label %normal-dest4728 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4728:                                  ; preds = %normal-dest4726
  %1530 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 513), align 8
  %ptrtoint4729 = ptrtoint {}* %1529 to i64
  %entry-point-addr-uint4730 = add i64 %ptrtoint4729, 7
  %entry-point-addr4731 = inttoptr i64 %entry-point-addr-uint4730 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4732 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4731, align 8
  %1531 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4732({}* %1529, i64 1, {}* %1530, {}* null, {}* null, {}* null)
          to label %normal-dest4735 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4735:                                  ; preds = %normal-dest4728
  %.elt9442 = extractvalue { {}*, i64 } %1531, 0
  %.elt9444 = extractvalue { {}*, i64 } %1531, 1
  %cond8200 = icmp eq i64 %.elt9444, 0
  %1532 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118856.0 = select i1 %cond8200, {}* %1532, {}* %.elt9442
  %ptrtoint4741 = ptrtoint {}* %370 to i64
  %entry-point-addr-uint4742 = add i64 %ptrtoint4741, 7
  %entry-point-addr4743 = inttoptr i64 %entry-point-addr-uint4742 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4744 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4743, align 8
  %1533 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4744({}* %370, i64 2, {}* %G118856.0, {}* %1532, {}* null, {}* null)
          to label %normal-dest4747 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4747:                                  ; preds = %normal-dest4735
  %.elt9446 = extractvalue { {}*, i64 } %1533, 0
  %.elt9448 = extractvalue { {}*, i64 } %1533, 1
  %cond8201 = icmp eq i64 %.elt9448, 0
  %1534 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118854.0 = select i1 %cond8201, {}* %1534, {}* %.elt9446
  %ptrtoint4753 = ptrtoint {}* %G118851.0 to i64
  %entry-point-addr-uint4754 = add i64 %ptrtoint4753, 7
  %entry-point-addr4755 = inttoptr i64 %entry-point-addr-uint4754 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4756 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4755, align 8
  %1535 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4756({}* %G118851.0, i64 3, {}* %G116536.0, {}* %Y_FORMAT.0, {}* %G118854.0, {}* null)
          to label %normal-dest4759 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4759:                                  ; preds = %normal-dest4747
  %1536 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %1537 = invoke {}* @cc_safe_fdefinition({}* %1536)
          to label %normal-dest4765 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4765:                                  ; preds = %normal-dest4759
  %ptrtoint4766 = ptrtoint {}* %1537 to i64
  %entry-point-addr-uint4767 = add i64 %ptrtoint4766, 7
  %entry-point-addr4768 = inttoptr i64 %entry-point-addr-uint4767 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4769 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4768, align 8
  %1538 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4769({}* %1537, i64 1, {}* %G116536.0, {}* null, {}* null, {}* null)
          to label %tag209 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br4777:                              ; preds = %tag529
  %irc-bit-cast4781 = bitcast {}* %vaarg902 to i8*
  %gep4782 = getelementptr inbounds i8, i8* %irc-bit-cast4781, i64 -9
  %irc-bit-cast4783 = bitcast i8* %gep4782 to i64*
  %1539 = load i64, i64* %irc-bit-cast4783, align 8
  %.off10497 = add i64 %1539, -1081
  %1540 = icmp ult i64 %.off10497, 69
  br i1 %1540, label %tag860, label %header-check-br7368

header-check-br4793:                              ; preds = %header-check-br1674
  %.off10368 = add i64 %816, -1001
  %1541 = icmp ult i64 %.off10368, 5
  br i1 %1541, label %maybe-more-tests4801, label %tag602

maybe-more-tests4801:                             ; preds = %header-check-br4793
  %1542 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1543 = invoke {}* @cc_safe_fdefinition({}* %1542)
          to label %normal-dest5698 unwind label %cleanup-lpad.loopexit

header-check-br4804:                              ; preds = %header-check-br5818
  %.off10524 = add i64 %1749, -1001
  %1544 = icmp ult i64 %.off10524, 5
  br i1 %1544, label %maybe-more-tests4812, label %tag191

maybe-more-tests4812:                             ; preds = %header-check-br4804
  %1545 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1546 = invoke {}* @cc_safe_fdefinition({}* %1545)
          to label %normal-dest5124 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4814:                                  ; preds = %tag535
  %ptrtoint4815 = ptrtoint {}* %375 to i64
  %entry-point-addr-uint4816 = add i64 %ptrtoint4815, 7
  %entry-point-addr4817 = inttoptr i64 %entry-point-addr-uint4816 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4818 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4817, align 8
  %1547 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4818({}* %375, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest4821 unwind label %cleanup-lpad.loopexit

normal-dest4821:                                  ; preds = %normal-dest4814
  %.elt8713 = extractvalue { {}*, i64 } %1547, 0
  %.elt8715 = extractvalue { {}*, i64 } %1547, 1
  %cond8056 = icmp eq i64 %.elt8715, 0
  %1548 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117243.0 = select i1 %cond8056, {}* %1548, {}* %.elt8713
  %1549 = icmp eq {}* %G117243.0, %1548
  br i1 %1549, label %tag837, label %tag583

normal-dest4827:                                  ; preds = %tag538
  %1550 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1551 = icmp eq {}* %stream.0, %1550
  %.val10342 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117858.0 = select i1 %1551, {}* %1550, {}* %.val10342
  %1552 = icmp eq {}* %G117858.0, %.val10342
  br i1 %1552, label %tag755, label %tag637

header-check-br4837:                              ; preds = %tag546
  %irc-bit-cast4841 = bitcast {}* %"closure->LAMBDA4881" to i8*
  %gep4842 = getelementptr inbounds i8, i8* %irc-bit-cast4841, i64 -9
  %irc-bit-cast4843 = bitcast i8* %gep4842 to i64*
  %1553 = load i64, i64* %irc-bit-cast4843, align 8
  %.off10315 = add i64 %1553, -913
  %1554 = icmp ult i64 %.off10315, 85
  br i1 %1554, label %tag555, label %header-check-br4646

normal-dest4859:                                  ; preds = %tag549
  %1555 = load i64, i64* bitcast ([784 x {}*]* @CONTAB4236 to i64*), align 16
  br label %tag342

normal-dest4867:                                  ; preds = %tag550
  %1556 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 572), align 16
  %ptrtoint4868 = ptrtoint {}* %387 to i64
  %entry-point-addr-uint4869 = add i64 %ptrtoint4868, 7
  %entry-point-addr4870 = inttoptr i64 %entry-point-addr-uint4869 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4871 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4870, align 8
  %1557 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4871({}* %387, i64 4, {}* %G116690.2, {}* %spalten-breite.0, {}* %1556, {}* inttoptr (i64 370 to {}*))
          to label %normal-dest4874 unwind label %cleanup-lpad.loopexit

normal-dest4874:                                  ; preds = %normal-dest4867
  %.elt8797 = extractvalue { {}*, i64 } %1557, 0
  %.elt8799 = extractvalue { {}*, i64 } %1557, 1
  %cond8074 = icmp eq i64 %.elt8799, 0
  %1558 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117486.1 = select i1 %cond8074, {}* %1558, {}* %.elt8797
  br label %tag808

normal-dest4880:                                  ; preds = %tag551
  %1559 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1560 = icmp eq {}* %stream.0, %1559
  %.val10305 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118700.0 = select i1 %1560, {}* %1559, {}* %.val10305
  %1561 = icmp eq {}* %G118700.0, %.val10305
  br i1 %1561, label %tag504, label %tag360

normal-dest4887:                                  ; preds = %tag553
  %ptrtoint4888 = ptrtoint {}* %G119117.0 to i64
  %entry-point-addr-uint4889 = add i64 %ptrtoint4888, 7
  %entry-point-addr4890 = inttoptr i64 %entry-point-addr-uint4889 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4891 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4890, align 8
  %1562 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4891({}* %G119117.0, i64 2, {}* %390, {}* %zeilen-titel.0, {}* null, {}* null)
          to label %tag779 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest4907:                                  ; preds = %tag555
  %1563 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 522), align 16
  %1564 = invoke {}* @cc_safe_fdefinition({}* %1563)
          to label %normal-dest4909 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4909:                                  ; preds = %normal-dest4907
  %ptrtoint4910 = ptrtoint {}* %1564 to i64
  %entry-point-addr-uint4911 = add i64 %ptrtoint4910, 7
  %entry-point-addr4912 = inttoptr i64 %entry-point-addr-uint4911 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4913 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4912, align 8
  %1565 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4913({}* %1564, i64 2, {}* %X_ELEMENT1830.0, {}* %spalten-breite.0, {}* null, {}* null)
          to label %normal-dest4916 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4916:                                  ; preds = %normal-dest4909
  %.elt8448 = extractvalue { {}*, i64 } %1565, 0
  %.elt8450 = extractvalue { {}*, i64 } %1565, 1
  %cond8009 = icmp eq i64 %.elt8450, 0
  %1566 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118593.0 = select i1 %cond8009, {}* %1566, {}* %.elt8448
  %ptrtoint4922 = ptrtoint {}* %392 to i64
  %entry-point-addr-uint4923 = add i64 %ptrtoint4922, 7
  %entry-point-addr4924 = inttoptr i64 %entry-point-addr-uint4923 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4925 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4924, align 8
  %1567 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4925({}* %392, i64 1, {}* %G118593.0, {}* null, {}* null, {}* null)
          to label %normal-dest4928 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4928:                                  ; preds = %normal-dest4916
  %.elt8452 = extractvalue { {}*, i64 } %1567, 0
  %.elt8454 = extractvalue { {}*, i64 } %1567, 1
  %cond8010 = icmp eq i64 %.elt8454, 0
  %1568 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118591.0 = select i1 %cond8010, {}* %1568, {}* %.elt8452
  %ptrtoint4934 = ptrtoint {}* %G118588.0 to i64
  %entry-point-addr-uint4935 = add i64 %ptrtoint4934, 7
  %entry-point-addr4936 = inttoptr i64 %entry-point-addr-uint4935 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4937 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4936, align 8
  %1569 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4937({}* %G118588.0, i64 3, {}* %stream.0, {}* %X_FORMAT.0, {}* %G118591.0, {}* null)
          to label %tag685 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br4945:                              ; preds = %header-check-br7823
  %.off10482 = add i64 %2199, -1001
  %1570 = icmp ult i64 %.off10482, 5
  br i1 %1570, label %maybe-more-tests4953, label %tag430

maybe-more-tests4953:                             ; preds = %header-check-br4945
  %1571 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1572 = invoke {}* @cc_safe_fdefinition({}* %1571)
          to label %normal-dest7224 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4957:                                  ; preds = %maybe-more-tests972
  %ptrtoint4958 = ptrtoint {}* %655 to i64
  %entry-point-addr-uint4959 = add i64 %ptrtoint4958, 7
  %entry-point-addr4960 = inttoptr i64 %entry-point-addr-uint4959 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4961 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4960, align 8
  %1573 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4961({}* %655, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest4964 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4964:                                  ; preds = %normal-dest4957
  %.elt9394 = extractvalue { {}*, i64 } %1573, 0
  %.elt9396 = extractvalue { {}*, i64 } %1573, 1
  %cond8190 = icmp eq i64 %.elt9396, 0
  %1574 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118521.2 = select i1 %cond8190, {}* %1574, {}* %.elt9394
  br label %tag834

normal-dest4979:                                  ; preds = %tag563
  %1575 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1576 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1577 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1578 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 592), align 16
  %ptrtoint4980 = ptrtoint {}* %396 to i64
  %entry-point-addr-uint4981 = add i64 %ptrtoint4980, 7
  %entry-point-addr4982 = inttoptr i64 %entry-point-addr-uint4981 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4983 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4982, align 8
  %1579 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4983({}* %396, i64 5, {}* %1575, {}* %1576, {}* %"closure->LAMBDA2636", {}* %1577, {}* %1578)
          to label %normal-dest4986 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest4986:                                  ; preds = %normal-dest4979
  %.elt9226 = extractvalue { {}*, i64 } %1579, 0
  %.elt9228 = extractvalue { {}*, i64 } %1579, 1
  %cond8159 = icmp eq i64 %.elt9228, 0
  %1580 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117000.1 = select i1 %cond8159, {}* %1580, {}* %.elt9226
  br label %tag78

normal-dest4993:                                  ; preds = %tag565
  %ptrtoint4994 = ptrtoint {}* %398 to i64
  %entry-point-addr-uint4995 = add i64 %ptrtoint4994, 7
  %entry-point-addr4996 = inttoptr i64 %entry-point-addr-uint4995 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4997 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4996, align 8
  %1581 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4997({}* %398, i64 2, {}* %Y_ELEMENT.0, {}* %vaarg898, {}* null, {}* null)
          to label %normal-dest5000 unwind label %cleanup-lpad.loopexit

normal-dest5000:                                  ; preds = %normal-dest4993
  %.elt8785 = extractvalue { {}*, i64 } %1581, 0
  %.elt8787 = extractvalue { {}*, i64 } %1581, 1
  %cond8071 = icmp eq i64 %.elt8787, 0
  %1582 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117513.0 = select i1 %cond8071, {}* %1582, {}* %.elt8785
  %1583 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 570), align 16
  %1584 = invoke {}* @cc_safe_fdefinition({}* %1583)
          to label %normal-dest5007 unwind label %cleanup-lpad.loopexit

normal-dest5007:                                  ; preds = %normal-dest5000
  %ptrtoint5008 = ptrtoint {}* %1584 to i64
  %entry-point-addr-uint5009 = add i64 %ptrtoint5008, 7
  %entry-point-addr5010 = inttoptr i64 %entry-point-addr-uint5009 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5011 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5010, align 8
  %1585 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5011({}* %1584, i64 2, {}* %X_ELEMENT.0, {}* %vaarg902, {}* null, {}* null)
          to label %normal-dest5014 unwind label %cleanup-lpad.loopexit

normal-dest5014:                                  ; preds = %normal-dest5007
  %.elt8789 = extractvalue { {}*, i64 } %1585, 0
  %.elt8791 = extractvalue { {}*, i64 } %1585, 1
  %cond8072 = icmp eq i64 %.elt8791, 0
  %1586 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117514.0 = select i1 %cond8072, {}* %1586, {}* %.elt8789
  %ptrtoint5020 = ptrtoint {}* %G117512.0 to i64
  %entry-point-addr-uint5021 = add i64 %ptrtoint5020, 7
  %entry-point-addr5022 = inttoptr i64 %entry-point-addr-uint5021 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5023 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5022, align 8
  %1587 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5023({}* %G117512.0, i64 2, {}* %G117513.0, {}* %G117514.0, {}* null, {}* null)
          to label %tag126 unwind label %cleanup-lpad.loopexit

normal-dest5033:                                  ; preds = %tag566
  %1588 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1589 = invoke {}* @cc_safe_fdefinition({}* %1588)
          to label %normal-dest5035 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5035:                                  ; preds = %normal-dest5033
  %1590 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 498), align 16
  %ptrtoint5036 = ptrtoint {}* %1589 to i64
  %entry-point-addr-uint5037 = add i64 %ptrtoint5036, 7
  %entry-point-addr5038 = inttoptr i64 %entry-point-addr-uint5037 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5039 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5038, align 8
  %1591 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5039({}* %1589, i64 1, {}* %1590, {}* null, {}* null, {}* null)
          to label %normal-dest5042 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5042:                                  ; preds = %normal-dest5035
  %.elt8309 = extractvalue { {}*, i64 } %1591, 0
  %.elt8311 = extractvalue { {}*, i64 } %1591, 1
  %cond7983 = icmp eq i64 %.elt8311, 0
  %1592 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119241.0 = select i1 %cond7983, {}* %1592, {}* %.elt8309
  %ptrtoint5048 = ptrtoint {}* %G119238.0 to i64
  %entry-point-addr-uint5049 = add i64 %ptrtoint5048, 7
  %entry-point-addr5050 = inttoptr i64 %entry-point-addr-uint5049 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5051 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5050, align 8
  %1593 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5051({}* %G119238.0, i64 4, {}* %400, {}* %Y_FORMAT.0, {}* %G119241.0, {}* %spalten-titel.0)
          to label %tag681 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br5059:                              ; preds = %header-check-br5191
  %.off10360 = add i64 %1623, -1001
  %1594 = icmp ult i64 %.off10360, 5
  br i1 %1594, label %maybe-more-tests5067, label %tag382

maybe-more-tests5067:                             ; preds = %header-check-br5059
  %1595 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1596 = invoke {}* @cc_safe_fdefinition({}* %1595)
          to label %normal-dest3510 unwind label %cleanup-lpad.loopexit

normal-dest5069:                                  ; preds = %tag569
  %1597 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1598 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1599 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1600 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint5070 = ptrtoint {}* %402 to i64
  %entry-point-addr-uint5071 = add i64 %ptrtoint5070, 7
  %entry-point-addr5072 = inttoptr i64 %entry-point-addr-uint5071 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5073 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5072, align 8
  %1601 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5073({}* %402, i64 5, {}* %1597, {}* %1598, {}* %SEQUENCE4048.0.ph, {}* %1599, {}* %1600)
          to label %normal-dest5076 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest5076:                                  ; preds = %normal-dest5069
  %.elt9170 = extractvalue { {}*, i64 } %1601, 0
  %.elt9172 = extractvalue { {}*, i64 } %1601, 1
  %cond8148 = icmp eq i64 %.elt9172, 0
  %1602 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G20958541944.1 = select i1 %cond8148, {}* %1602, {}* %.elt9170
  br label %tag157

header-check-br5082:                              ; preds = %header-check-br7689
  %.off10452 = add i64 %2171, -1001
  %1603 = icmp ult i64 %.off10452, 5
  br i1 %1603, label %maybe-more-tests5090, label %tag817

maybe-more-tests5090:                             ; preds = %header-check-br5082
  %1604 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1605 = invoke {}* @cc_safe_fdefinition({}* %1604)
          to label %normal-dest1533 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br5091:                              ; preds = %tag366
  %1606 = load i64, i64* %irc-bit-cast5097, align 8
  %1607 = add i64 %1606, -1309
  %1608 = lshr i64 %1607, 3
  %1609 = shl i64 %1607, 61
  %1610 = or i64 %1608, %1609
  switch i64 %1610, label %tag395 [
    i64 2, label %tag584
    i64 4, label %tag584
    i64 5, label %tag584
    i64 0, label %tag584
  ]

normal-dest5105:                                  ; preds = %tag572
  %1611 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %1612 = invoke {}* @cc_safe_fdefinition({}* %1611)
          to label %normal-dest5111 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5111:                                  ; preds = %normal-dest5105
  %ptrtoint5112 = ptrtoint {}* %1612 to i64
  %entry-point-addr-uint5113 = add i64 %ptrtoint5112, 7
  %entry-point-addr5114 = inttoptr i64 %entry-point-addr-uint5113 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5115 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5114, align 8
  %1613 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5115({}* %1612, i64 1, {}* %G116514.0, {}* null, {}* null, {}* null)
          to label %tag779 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5124:                                  ; preds = %maybe-more-tests4812
  %ptrtoint5125 = ptrtoint {}* %1546 to i64
  %entry-point-addr-uint5126 = add i64 %ptrtoint5125, 7
  %entry-point-addr5127 = inttoptr i64 %entry-point-addr-uint5126 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5128 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5127, align 8
  %1614 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5128({}* %1546, i64 1, {}* nonnull %"closure->LAMBDA7659", {}* null, {}* null, {}* null)
          to label %normal-dest5131 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5131:                                  ; preds = %normal-dest5124
  %.elt9741 = extractvalue { {}*, i64 } %1614, 0
  %.elt9743 = extractvalue { {}*, i64 } %1614, 1
  %cond8254 = icmp eq i64 %.elt9743, 0
  %1615 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119412.2 = select i1 %cond8254, {}* %1615, {}* %.elt9741
  br label %tag656

header-check-br5137:                              ; preds = %header-check-br1611
  %.off10328 = add i64 %806, -1001
  %1616 = icmp ult i64 %.off10328, 5
  br i1 %1616, label %maybe-more-tests5145, label %tag599

maybe-more-tests5145:                             ; preds = %header-check-br5137
  %1617 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1618 = invoke {}* @cc_safe_fdefinition({}* %1617)
          to label %normal-dest6726 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5154:                                  ; preds = %tag577
  %ptrtoint5155 = ptrtoint {}* %405 to i64
  %entry-point-addr-uint5156 = add i64 %ptrtoint5155, 7
  %entry-point-addr5157 = inttoptr i64 %entry-point-addr-uint5156 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5158 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5157, align 8
  %1619 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5158({}* %405, i64 2, {}* nonnull %tabellen-zugriff.0, {}* nonnull %1470, {}* null, {}* null)
          to label %normal-dest5161 unwind label %cleanup-lpad.loopexit

normal-dest5161:                                  ; preds = %normal-dest5154
  %.elt8909 = extractvalue { {}*, i64 } %1619, 0
  %.elt8911 = extractvalue { {}*, i64 } %1619, 1
  %cond8097 = icmp eq i64 %.elt8911, 0
  %1620 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117440.1 = select i1 %cond8097, {}* %1620, {}* %.elt8909
  br label %tag376

normal-dest5177:                                  ; preds = %tag583
  %ptrtoint5178 = ptrtoint {}* %407 to i64
  %entry-point-addr-uint5179 = add i64 %ptrtoint5178, 7
  %entry-point-addr5180 = inttoptr i64 %entry-point-addr-uint5179 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5181 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5180, align 8
  %1621 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5181({}* %407, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest5184 unwind label %cleanup-lpad.loopexit

normal-dest5184:                                  ; preds = %normal-dest5177
  %.elt8717 = extractvalue { {}*, i64 } %1621, 0
  %.elt8719 = extractvalue { {}*, i64 } %1621, 1
  %cond8057 = icmp eq i64 %.elt8719, 0
  %1622 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT1167115185.0 = select i1 %cond8057, {}* %1622, {}* %.elt8717
  %ptrtoint5192 = ptrtoint {}* %"closure->LAMBDA2695" to i64
  %tag-only5193 = and i64 %ptrtoint5192, 7
  %test5194 = icmp eq i64 %tag-only5193, 1
  br i1 %test5194, label %header-check-br5191, label %tag382

header-check-br5191:                              ; preds = %normal-dest5184
  %irc-bit-cast5195 = bitcast {}* %"closure->LAMBDA2695" to i8*
  %gep5196 = getelementptr inbounds i8, i8* %irc-bit-cast5195, i64 -9
  %irc-bit-cast5197 = bitcast i8* %gep5196 to i64*
  %1623 = load i64, i64* %irc-bit-cast5197, align 8
  %.off10359 = add i64 %1623, -913
  %1624 = icmp ult i64 %.off10359, 85
  br i1 %1624, label %tag653, label %header-check-br5059

normal-dest5202:                                  ; preds = %tag589
  %ptrtoint5203 = ptrtoint {}* %411 to i64
  %entry-point-addr-uint5204 = add i64 %ptrtoint5203, 7
  %entry-point-addr5205 = inttoptr i64 %entry-point-addr-uint5204 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5206 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5205, align 8
  %1625 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5206({}* %411, i64 2, {}* %Y_ELEMENT.0, {}* %vaarg898, {}* null, {}* null)
          to label %normal-dest5209 unwind label %cleanup-lpad.loopexit

normal-dest5209:                                  ; preds = %normal-dest5202
  %.elt8925 = extractvalue { {}*, i64 } %1625, 0
  %.elt8927 = extractvalue { {}*, i64 } %1625, 1
  %cond8101 = icmp eq i64 %.elt8927, 0
  %1626 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117334.0 = select i1 %cond8101, {}* %1626, {}* %.elt8925
  %1627 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 570), align 16
  %1628 = invoke {}* @cc_safe_fdefinition({}* %1627)
          to label %normal-dest5216 unwind label %cleanup-lpad.loopexit

normal-dest5216:                                  ; preds = %normal-dest5209
  %ptrtoint5217 = ptrtoint {}* %1628 to i64
  %entry-point-addr-uint5218 = add i64 %ptrtoint5217, 7
  %entry-point-addr5219 = inttoptr i64 %entry-point-addr-uint5218 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5220 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5219, align 8
  %1629 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5220({}* %1628, i64 2, {}* %X_ELEMENT.0, {}* %vaarg902, {}* null, {}* null)
          to label %normal-dest5223 unwind label %cleanup-lpad.loopexit

normal-dest5223:                                  ; preds = %normal-dest5216
  %.elt8929 = extractvalue { {}*, i64 } %1629, 0
  %.elt8931 = extractvalue { {}*, i64 } %1629, 1
  %cond8102 = icmp eq i64 %.elt8931, 0
  %1630 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117335.0 = select i1 %cond8102, {}* %1630, {}* %.elt8929
  %ptrtoint5229 = ptrtoint {}* %G117333.0 to i64
  %entry-point-addr-uint5230 = add i64 %ptrtoint5229, 7
  %entry-point-addr5231 = inttoptr i64 %entry-point-addr-uint5230 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5232 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5231, align 8
  %1631 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5232({}* %G117333.0, i64 2, {}* %G117334.0, {}* %G117335.0, {}* null, {}* null)
          to label %tag244 unwind label %cleanup-lpad.loopexit

normal-dest5250:                                  ; preds = %maybe-more-tests1958
  %ptrtoint5251 = ptrtoint {}* %878 to i64
  %entry-point-addr-uint5252 = add i64 %ptrtoint5251, 7
  %entry-point-addr5253 = inttoptr i64 %entry-point-addr-uint5252 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5254 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5253, align 8
  %1632 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5254({}* %878, i64 1, {}* nonnull %vaarg906, {}* null, {}* null, {}* null)
          to label %normal-dest5257 unwind label %cleanup-lpad.loopexit

normal-dest5257:                                  ; preds = %normal-dest5250
  %.elt8965 = extractvalue { {}*, i64 } %1632, 0
  %.elt8967 = extractvalue { {}*, i64 } %1632, 1
  %cond8110 = icmp eq i64 %.elt8967, 0
  %1633 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117317.2 = select i1 %cond8110, {}* %1633, {}* %.elt8965
  br label %tag615

normal-dest5264:                                  ; preds = %tag599
  %1634 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1635 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1636 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1637 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 548), align 16
  %ptrtoint5265 = ptrtoint {}* %414 to i64
  %entry-point-addr-uint5266 = add i64 %ptrtoint5265, 7
  %entry-point-addr5267 = inttoptr i64 %entry-point-addr-uint5266 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5268 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5267, align 8
  %1638 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5268({}* %414, i64 5, {}* %1634, {}* %1635, {}* %"closure->LAMBDA7791", {}* %1636, {}* %1637)
          to label %normal-dest5271 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5271:                                  ; preds = %normal-dest5264
  %.elt8493 = extractvalue { {}*, i64 } %1638, 0
  %.elt8495 = extractvalue { {}*, i64 } %1638, 1
  %cond8017 = icmp eq i64 %.elt8495, 0
  %1639 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118172.1 = select i1 %cond8017, {}* %1639, {}* %.elt8493
  br label %tag284

normal-dest5280:                                  ; preds = %tag602
  %1640 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1641 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1642 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1643 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 580), align 16
  %ptrtoint5281 = ptrtoint {}* %416 to i64
  %entry-point-addr-uint5282 = add i64 %ptrtoint5281, 7
  %entry-point-addr5283 = inttoptr i64 %entry-point-addr-uint5282 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5284 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5283, align 8
  %1644 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5284({}* %416, i64 5, {}* %1640, {}* %1641, {}* %"closure->LAMBDA3566", {}* %1642, {}* %1643)
          to label %normal-dest5287 unwind label %cleanup-lpad.loopexit

normal-dest5287:                                  ; preds = %normal-dest5280
  %.elt8640 = extractvalue { {}*, i64 } %1644, 0
  %.elt8642 = extractvalue { {}*, i64 } %1644, 1
  %cond8042 = icmp eq i64 %.elt8642, 0
  %1645 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117571.1 = select i1 %cond8042, {}* %1645, {}* %.elt8640
  br label %tag824

normal-dest5294:                                  ; preds = %tag603
  %1646 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 540), align 16
  %1647 = invoke {}* @cc_safe_fdefinition({}* %1646)
          to label %normal-dest5296 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5296:                                  ; preds = %normal-dest5294
  %1648 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 542), align 16
  %1649 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint5297 = ptrtoint {}* %1647 to i64
  %entry-point-addr-uint5298 = add i64 %ptrtoint5297, 7
  %entry-point-addr5299 = inttoptr i64 %entry-point-addr-uint5298 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5300 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5299, align 8
  %1650 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5300({}* %1647, i64 6, {}* %1648, {}* %spalten-breite.0, {}* %1649, {}* %1649, {}* %1649, {}* null)
          to label %normal-dest5303 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5303:                                  ; preds = %normal-dest5296
  %.elt8590 = extractvalue { {}*, i64 } %1650, 0
  %.elt8592 = extractvalue { {}*, i64 } %1650, 1
  %cond8034 = icmp eq i64 %.elt8592, 0
  %1651 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %RESULT116629.0 = select i1 %cond8034, {}* %1651, {}* %.elt8590
  %1652 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 544), align 16
  %1653 = invoke {}* @cc_safe_fdefinition({}* %1652)
          to label %normal-dest5310 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5310:                                  ; preds = %normal-dest5303
  %1654 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint5311 = ptrtoint {}* %1653 to i64
  %entry-point-addr-uint5312 = add i64 %ptrtoint5311, 7
  %entry-point-addr5313 = inttoptr i64 %entry-point-addr-uint5312 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5314 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5313, align 8
  %1655 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5314({}* %1653, i64 4, {}* %RESULT116629.0, {}* inttoptr (i64 362 to {}*), {}* null, {}* %1654)
          to label %normal-dest5317 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5317:                                  ; preds = %normal-dest5310
  %ptrtoint5322 = ptrtoint {}* %418 to i64
  %entry-point-addr-uint5323 = add i64 %ptrtoint5322, 7
  %entry-point-addr5324 = inttoptr i64 %entry-point-addr-uint5323 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5325 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5324, align 8
  %1656 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5325({}* %418, i64 1, {}* %RESULT116629.0, {}* null, {}* null, {}* null)
          to label %normal-dest5328 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5328:                                  ; preds = %normal-dest5317
  %.elt8598 = extractvalue { {}*, i64 } %1656, 0
  %.elt8600 = extractvalue { {}*, i64 } %1656, 1
  %cond8035 = icmp eq i64 %.elt8600, 0
  %1657 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118057.0 = select i1 %cond8035, {}* %1657, {}* %.elt8598
  %ptrtoint5334 = ptrtoint {}* %G118054.0 to i64
  %entry-point-addr-uint5335 = add i64 %ptrtoint5334, 7
  %entry-point-addr5336 = inttoptr i64 %entry-point-addr-uint5335 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5337 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5336, align 8
  %1658 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5337({}* %G118054.0, i64 3, {}* %stream.0, {}* %X_FORMAT.0, {}* %G118057.0, {}* null)
          to label %tag859 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5346:                                  ; preds = %tag605
  %ptrtoint5347 = ptrtoint {}* %420 to i64
  %entry-point-addr-uint5348 = add i64 %ptrtoint5347, 7
  %entry-point-addr5349 = inttoptr i64 %entry-point-addr-uint5348 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5350 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5349, align 8
  %1659 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5350({}* %420, i64 2, {}* %X_ANZAHL.0, {}* %LAENGE.0, {}* null, {}* null)
          to label %normal-dest5353 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5353:                                  ; preds = %normal-dest5346
  %1660 = ptrtoint {}* %tabellen-zugriff.0 to i64
  %single-float-tag-only3437 = and i64 %1660, 7
  %fixnum-tag-only22778968 = and i64 %1660, 3
  %fixnump-test2278 = icmp ne i64 %fixnum-tag-only22778968, 0
  %test5094 = icmp eq i64 %single-float-tag-only3437, 1
  %or.cond10272 = and i1 %fixnump-test2278, %test5094
  %irc-bit-cast5095 = bitcast {}* %tabellen-zugriff.0 to i8*
  %gep5096 = getelementptr inbounds i8, i8* %irc-bit-cast5095, i64 -9
  %irc-bit-cast5097 = bitcast i8* %gep5096 to i64*
  %ptrtoint3706 = ptrtoint {}* %vaarg906 to i64
  %tag-only3707 = and i64 %ptrtoint3706, 7
  %test3708 = icmp eq i64 %tag-only3707, 1
  %irc-bit-cast3709 = bitcast {}* %vaarg906 to i8*
  %gep3710 = getelementptr inbounds i8, i8* %irc-bit-cast3709, i64 -9
  %irc-bit-cast3711 = bitcast i8* %gep3710 to i64*
  %fixnump-test6556 = icmp eq i64 %fixnum-tag-only22778968, 0
  %test3291 = icmp ne i64 %single-float-tag-only3437, 1
  %brmerge10567 = or i1 %test3291, %fixnump-test6556
  br label %tag539

normal-dest5360:                                  ; preds = %tag607
  %ptrtoint5361 = ptrtoint {}* %G118009.0 to i64
  %entry-point-addr-uint5362 = add i64 %ptrtoint5361, 7
  %entry-point-addr5363 = inttoptr i64 %entry-point-addr-uint5362 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5364 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5363, align 8
  %1661 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5364({}* %G118009.0, i64 1, {}* %422, {}* null, {}* null, {}* null)
          to label %tag863 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5379:                                  ; preds = %maybe-more-tests1174
  %ptrtoint5380 = ptrtoint {}* %711 to i64
  %entry-point-addr-uint5381 = add i64 %ptrtoint5380, 7
  %entry-point-addr5382 = inttoptr i64 %entry-point-addr-uint5381 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5383 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5382, align 8
  %1662 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5383({}* %711, i64 1, {}* nonnull %"closure->LAMBDA2695", {}* null, {}* null, {}* null)
          to label %normal-dest5386 unwind label %cleanup-lpad.loopexit

normal-dest5386:                                  ; preds = %normal-dest5379
  %.elt8709 = extractvalue { {}*, i64 } %1662, 0
  %.elt8711 = extractvalue { {}*, i64 } %1662, 1
  %cond8055 = icmp eq i64 %.elt8711, 0
  %1663 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117251.2 = select i1 %cond8055, {}* %1663, {}* %.elt8709
  br label %tag210

normal-dest5405:                                  ; preds = %tag618
  %1664 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1665 = invoke {}* @cc_safe_fdefinition({}* %1664)
          to label %normal-dest5407 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5407:                                  ; preds = %normal-dest5405
  %1666 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %1667 = invoke {}* @cc_safe_fdefinition({}* %1666)
          to label %normal-dest5409 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5409:                                  ; preds = %normal-dest5407
  %ptrtoint5410 = ptrtoint {}* %1667 to i64
  %entry-point-addr-uint5411 = add i64 %ptrtoint5410, 7
  %entry-point-addr5412 = inttoptr i64 %entry-point-addr-uint5411 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5413 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5412, align 8
  %1668 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5413({}* %1667, i64 2, {}* %Y_ELEMENT.0, {}* %.zeilen-breite.2, {}* null, {}* null)
          to label %normal-dest5416 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5416:                                  ; preds = %normal-dest5409
  %.elt8627 = extractvalue { {}*, i64 } %1668, 0
  %.elt8629 = extractvalue { {}*, i64 } %1668, 1
  %cond8040 = icmp eq i64 %.elt8629, 0
  %1669 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117839.0 = select i1 %cond8040, {}* %1669, {}* %.elt8627
  %ptrtoint5422 = ptrtoint {}* %1665 to i64
  %entry-point-addr-uint5423 = add i64 %ptrtoint5422, 7
  %entry-point-addr5424 = inttoptr i64 %entry-point-addr-uint5423 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5425 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5424, align 8
  %1670 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5425({}* %1665, i64 1, {}* %G117839.0, {}* null, {}* null, {}* null)
          to label %normal-dest5428 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5428:                                  ; preds = %normal-dest5416
  %.elt8631 = extractvalue { {}*, i64 } %1670, 0
  %.elt8633 = extractvalue { {}*, i64 } %1670, 1
  %cond8041 = icmp eq i64 %.elt8633, 0
  %1671 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117837.0 = select i1 %cond8041, {}* %1671, {}* %.elt8631
  %ptrtoint5434 = ptrtoint {}* %G117834.0 to i64
  %entry-point-addr-uint5435 = add i64 %ptrtoint5434, 7
  %entry-point-addr5436 = inttoptr i64 %entry-point-addr-uint5435 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5437 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5436, align 8
  %1672 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5437({}* %G117834.0, i64 3, {}* %427, {}* %Y_FORMAT.0, {}* %G117837.0, {}* null)
          to label %tag397 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br5445:                              ; preds = %header-check-br3602
  %.off10400 = add i64 %1273, -1001
  %1673 = icmp ult i64 %.off10400, 5
  br i1 %1673, label %maybe-more-tests5453, label %tag271

maybe-more-tests5453:                             ; preds = %header-check-br5445
  %1674 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1675 = invoke {}* @cc_safe_fdefinition({}* %1674)
          to label %normal-dest4341 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5455:                                  ; preds = %tag620
  %1676 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1677 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1678 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1679 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 516), align 16
  %ptrtoint5456 = ptrtoint {}* %429 to i64
  %entry-point-addr-uint5457 = add i64 %ptrtoint5456, 7
  %entry-point-addr5458 = inttoptr i64 %entry-point-addr-uint5457 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5459 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5458, align 8
  %1680 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5459({}* %429, i64 5, {}* %1676, {}* %1677, {}* %"closure->LAMBDA5775", {}* %1678, {}* %1679)
          to label %normal-dest5462 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5462:                                  ; preds = %normal-dest5455
  %.elt8346 = extractvalue { {}*, i64 } %1680, 0
  %.elt8348 = extractvalue { {}*, i64 } %1680, 1
  %cond7989 = icmp eq i64 %.elt8348, 0
  %1681 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118882.2 = select i1 %cond7989, {}* %1681, {}* %.elt8346
  br label %tag390

header-check-br5471:                              ; preds = %header-check-br3965
  %.off10378 = add i64 %1344, -1001
  %1682 = icmp ult i64 %.off10378, 5
  br i1 %1682, label %maybe-more-tests5479, label %tag245

maybe-more-tests5479:                             ; preds = %header-check-br5471
  %1683 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1684 = invoke {}* @cc_safe_fdefinition({}* %1683)
          to label %normal-dest6458 unwind label %cleanup-lpad.loopexit

header-check-br5480:                              ; preds = %tag626
  %irc-bit-cast5484 = bitcast {}* %"closure->LAMBDA7765" to i8*
  %gep5485 = getelementptr inbounds i8, i8* %irc-bit-cast5484, i64 -9
  %irc-bit-cast5486 = bitcast i8* %gep5485 to i64*
  %1685 = load i64, i64* %irc-bit-cast5486, align 8
  %.off10493 = add i64 %1685, -913
  %1686 = icmp ult i64 %.off10493, 85
  br i1 %1686, label %tag667, label %header-check-br1926

normal-dest5494:                                  ; preds = %tag629
  %1687 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1688 = invoke {}* @cc_safe_fdefinition({}* %1687)
          to label %normal-dest5496 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5496:                                  ; preds = %normal-dest5494
  %1689 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 513), align 8
  %ptrtoint5497 = ptrtoint {}* %1688 to i64
  %entry-point-addr-uint5498 = add i64 %ptrtoint5497, 7
  %entry-point-addr5499 = inttoptr i64 %entry-point-addr-uint5498 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5500 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5499, align 8
  %1690 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5500({}* %1688, i64 1, {}* %1689, {}* null, {}* null, {}* null)
          to label %normal-dest5503 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5503:                                  ; preds = %normal-dest5496
  %.elt9474 = extractvalue { {}*, i64 } %1690, 0
  %.elt9476 = extractvalue { {}*, i64 } %1690, 1
  %cond8206 = icmp eq i64 %.elt9476, 0
  %1691 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118822.0 = select i1 %cond8206, {}* %1691, {}* %.elt9474
  %ptrtoint5509 = ptrtoint {}* %431 to i64
  %entry-point-addr-uint5510 = add i64 %ptrtoint5509, 7
  %entry-point-addr5511 = inttoptr i64 %entry-point-addr-uint5510 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5512 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5511, align 8
  %1692 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5512({}* %431, i64 2, {}* %G118822.0, {}* %1691, {}* null, {}* null)
          to label %normal-dest5515 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5515:                                  ; preds = %normal-dest5503
  %.elt9478 = extractvalue { {}*, i64 } %1692, 0
  %.elt9480 = extractvalue { {}*, i64 } %1692, 1
  %cond8207 = icmp eq i64 %.elt9480, 0
  %1693 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118820.0 = select i1 %cond8207, {}* %1693, {}* %.elt9478
  %ptrtoint5521 = ptrtoint {}* %G118817.0 to i64
  %entry-point-addr-uint5522 = add i64 %ptrtoint5521, 7
  %entry-point-addr5523 = inttoptr i64 %entry-point-addr-uint5522 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5524 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5523, align 8
  %1694 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5524({}* %G118817.0, i64 3, {}* %OUT1165255492.0, {}* %Y_FORMAT.0, {}* %G118820.0, {}* null)
          to label %tag209 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5533:                                  ; preds = %tag630
  %1695 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 599), align 8
  %ptrtoint5534 = ptrtoint {}* %433 to i64
  %entry-point-addr-uint5535 = add i64 %ptrtoint5534, 7
  %entry-point-addr5536 = inttoptr i64 %entry-point-addr-uint5535 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5537 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5536, align 8
  %1696 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5537({}* %433, i64 2, {}* %G20958541944.0, {}* %1695, {}* null, {}* null)
          to label %tag741 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest5546:                                  ; preds = %tag633
  %ptrtoint5547 = ptrtoint {}* %435 to i64
  %entry-point-addr-uint5548 = add i64 %ptrtoint5547, 7
  %entry-point-addr5549 = inttoptr i64 %entry-point-addr-uint5548 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5550 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5549, align 8
  %1697 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5550({}* %435, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest5553 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5553:                                  ; preds = %normal-dest5546
  %.elt9298 = extractvalue { {}*, i64 } %1697, 0
  %.elt9300 = extractvalue { {}*, i64 } %1697, 1
  %cond8172 = icmp eq i64 %.elt9300, 0
  %1698 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116593.0 = select i1 %cond8172, {}* %1698, {}* %.elt9298
  %ptrtoint5561 = ptrtoint {}* %"closure->LAMBDA6916" to i64
  %tag-only5562 = and i64 %ptrtoint5561, 7
  %test5563 = icmp eq i64 %tag-only5562, 1
  br i1 %test5563, label %header-check-br5560, label %tag370

header-check-br5560:                              ; preds = %normal-dest5553
  %irc-bit-cast5564 = bitcast {}* %"closure->LAMBDA6916" to i8*
  %gep5565 = getelementptr inbounds i8, i8* %irc-bit-cast5564, i64 -9
  %irc-bit-cast5566 = bitcast i8* %gep5565 to i64*
  %1699 = load i64, i64* %irc-bit-cast5566, align 8
  %.off10457 = add i64 %1699, -913
  %1700 = icmp ult i64 %.off10457, 85
  br i1 %1700, label %tag714, label %header-check-br4354

header-check-br5569:                              ; preds = %tag637
  %irc-bit-cast5573 = bitcast {}* %"closure->LAMBDA4828" to i8*
  %gep5574 = getelementptr inbounds i8, i8* %irc-bit-cast5573, i64 -9
  %irc-bit-cast5575 = bitcast i8* %gep5574 to i64*
  %1701 = load i64, i64* %irc-bit-cast5575, align 8
  %.off10409 = add i64 %1701, -913
  %1702 = icmp ult i64 %.off10409, 85
  br i1 %1702, label %tag618, label %header-check-br1775

normal-dest5579:                                  ; preds = %maybe-more-tests4216
  %ptrtoint5580 = ptrtoint {}* %1399 to i64
  %entry-point-addr-uint5581 = add i64 %ptrtoint5580, 7
  %entry-point-addr5582 = inttoptr i64 %entry-point-addr-uint5581 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5583 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5582, align 8
  %1703 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5583({}* %1399, i64 1, {}* nonnull %"closure->LAMBDA4828", {}* null, {}* null, {}* null)
          to label %normal-dest5586 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5586:                                  ; preds = %normal-dest5579
  %.elt9130 = extractvalue { {}*, i64 } %1703, 0
  %.elt9132 = extractvalue { {}*, i64 } %1703, 1
  %cond8141 = icmp eq i64 %.elt9132, 0
  %1704 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117746.2 = select i1 %cond8141, {}* %1704, {}* %.elt9130
  br label %tag796

normal-dest5593:                                  ; preds = %maybe-more-tests6747
  %ptrtoint5594 = ptrtoint {}* %1959 to i64
  %entry-point-addr-uint5595 = add i64 %ptrtoint5594, 7
  %entry-point-addr5596 = inttoptr i64 %entry-point-addr-uint5595 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5597 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5596, align 8
  %1705 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5597({}* %1959, i64 1, {}* nonnull %"closure->LAMBDA3275", {}* null, {}* null, {}* null)
          to label %normal-dest5600 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5600:                                  ; preds = %normal-dest5593
  %.elt9050 = extractvalue { {}*, i64 } %1705, 0
  %.elt9052 = extractvalue { {}*, i64 } %1705, 1
  %cond8125 = icmp eq i64 %.elt9052, 0
  %1706 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117106.1 = select i1 %cond8125, {}* %1706, {}* %.elt9050
  br label %tag138

normal-dest5607:                                  ; preds = %tag640
  %ptrtoint5608 = ptrtoint {}* %437 to i64
  %entry-point-addr-uint5609 = add i64 %ptrtoint5608, 7
  %entry-point-addr5610 = inttoptr i64 %entry-point-addr-uint5609 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5611 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5610, align 8
  %1707 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5611({}* %437, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest5614 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5614:                                  ; preds = %normal-dest5607
  %.elt9525 = extractvalue { {}*, i64 } %1707, 0
  %.elt9527 = extractvalue { {}*, i64 } %1707, 1
  %cond8215 = icmp eq i64 %.elt9527, 0
  %1708 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116762.0 = select i1 %cond8215, {}* %1708, {}* %.elt9525
  %ptrtoint5622 = ptrtoint {}* %"closure->LAMBDA7765" to i64
  %tag-only5623 = and i64 %ptrtoint5622, 7
  %test5624 = icmp eq i64 %tag-only5623, 1
  br i1 %test5624, label %header-check-br5621, label %tag861

header-check-br5621:                              ; preds = %normal-dest5614
  %irc-bit-cast5625 = bitcast {}* %"closure->LAMBDA7765" to i8*
  %gep5626 = getelementptr inbounds i8, i8* %irc-bit-cast5625, i64 -9
  %irc-bit-cast5627 = bitcast i8* %gep5626 to i64*
  %1709 = load i64, i64* %irc-bit-cast5627, align 8
  %.off10489 = add i64 %1709, -913
  %1710 = icmp ult i64 %.off10489, 85
  br i1 %1710, label %tag888, label %header-check-br2168

header-check-br5630:                              ; preds = %header-check-br6518
  %.off10434 = add i64 %1912, -1001
  %1711 = icmp ult i64 %.off10434, 5
  br i1 %1711, label %maybe-more-tests5638, label %tag13

maybe-more-tests5638:                             ; preds = %header-check-br5630
  %1712 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1713 = invoke {}* @cc_safe_fdefinition({}* %1712)
          to label %normal-dest6127 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br5639:                              ; preds = %header-check-br3093
  %.off10432 = add i64 %1133, -1153
  %1714 = icmp ult i64 %.off10432, 149
  br i1 %1714, label %maybe-more-tests5647, label %tag814

maybe-more-tests5647:                             ; preds = %header-check-br5639
  %1715 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 338), align 16
  %1716 = invoke {}* @cc_safe_fdefinition({}* %1715)
          to label %normal-dest4243 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5649:                                  ; preds = %tag649
  %1717 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1718 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1719 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1720 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 557), align 8
  %ptrtoint5650 = ptrtoint {}* %439 to i64
  %entry-point-addr-uint5651 = add i64 %ptrtoint5650, 7
  %entry-point-addr5652 = inttoptr i64 %entry-point-addr-uint5651 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5653 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5652, align 8
  %1721 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5653({}* %439, i64 5, {}* %1717, {}* %1718, {}* %"closure->LAMBDA4828", {}* %1719, {}* %1720)
          to label %normal-dest5656 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5656:                                  ; preds = %normal-dest5649
  %.elt8623 = extractvalue { {}*, i64 } %1721, 0
  %.elt8625 = extractvalue { {}*, i64 } %1721, 1
  %cond8039 = icmp eq i64 %.elt8625, 0
  %1722 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117834.2 = select i1 %cond8039, {}* %1722, {}* %.elt8623
  br label %tag618

normal-dest5668:                                  ; preds = %tag652
  %1723 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %1724 = invoke {}* @cc_safe_fdefinition({}* %1723)
          to label %normal-dest5674 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5674:                                  ; preds = %normal-dest5668
  %ptrtoint5675 = ptrtoint {}* %1724 to i64
  %entry-point-addr-uint5676 = add i64 %ptrtoint5675, 7
  %entry-point-addr5677 = inttoptr i64 %entry-point-addr-uint5676 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5678 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5677, align 8
  %1725 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5678({}* %1724, i64 1, {}* %G116747.0, {}* null, {}* null, {}* null)
          to label %tag442 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5698:                                  ; preds = %maybe-more-tests4801
  %ptrtoint5699 = ptrtoint {}* %1543 to i64
  %entry-point-addr-uint5700 = add i64 %ptrtoint5699, 7
  %entry-point-addr5701 = inttoptr i64 %entry-point-addr-uint5700 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5702 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5701, align 8
  %1726 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5702({}* %1543, i64 1, {}* nonnull %"closure->LAMBDA3566", {}* null, {}* null, {}* null)
          to label %normal-dest5705 unwind label %cleanup-lpad.loopexit

normal-dest5705:                                  ; preds = %normal-dest5698
  %.elt8769 = extractvalue { {}*, i64 } %1726, 0
  %.elt8771 = extractvalue { {}*, i64 } %1726, 1
  %cond8067 = icmp eq i64 %.elt8771, 0
  %1727 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117571.2 = select i1 %cond8067, {}* %1727, {}* %.elt8769
  br label %tag824

normal-dest5717:                                  ; preds = %tag656
  %1728 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %1729 = invoke {}* @cc_safe_fdefinition({}* %1728)
          to label %normal-dest5723 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5723:                                  ; preds = %normal-dest5717
  %ptrtoint5724 = ptrtoint {}* %1729 to i64
  %entry-point-addr-uint5725 = add i64 %ptrtoint5724, 7
  %entry-point-addr5726 = inttoptr i64 %entry-point-addr-uint5725 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5727 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5726, align 8
  %1730 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5727({}* %1729, i64 1, {}* %G116475.0, {}* null, {}* null, {}* null)
          to label %tag757 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5736:                                  ; preds = %tag657
  %1731 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1732 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1733 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1734 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 482), align 16
  %ptrtoint5737 = ptrtoint {}* %447 to i64
  %entry-point-addr-uint5738 = add i64 %ptrtoint5737, 7
  %entry-point-addr5739 = inttoptr i64 %entry-point-addr-uint5738 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5740 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5739, align 8
  %1735 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5740({}* %447, i64 5, {}* %1731, {}* %1732, {}* %"closure->LAMBDA7659", {}* %1733, {}* %1734)
          to label %normal-dest5743 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5743:                                  ; preds = %normal-dest5736
  %.elt8277 = extractvalue { {}*, i64 } %1735, 0
  %.elt8279 = extractvalue { {}*, i64 } %1735, 1
  %cond7976 = icmp eq i64 %.elt8279, 0
  %1736 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119435.1 = select i1 %cond7976, {}* %1736, {}* %.elt8277
  br label %tag103

normal-dest5761:                                  ; preds = %tag660
  %ptrtoint5762 = ptrtoint {}* %450 to i64
  %entry-point-addr-uint5763 = add i64 %ptrtoint5762, 7
  %entry-point-addr5764 = inttoptr i64 %entry-point-addr-uint5763 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5765 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5764, align 8
  %1737 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5765({}* %450, i64 3, {}* %X_LISTE_ALLES.0, {}* null, {}* %X_GRENZE.2, {}* null)
          to label %normal-dest5768 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5768:                                  ; preds = %normal-dest5761
  %.elt8342 = extractvalue { {}*, i64 } %1737, 0
  %.elt8344 = extractvalue { {}*, i64 } %1737, 1
  %cond7988 = icmp eq i64 %.elt8344, 0
  %1738 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %X_TEILLISTE.0 = select i1 %cond7988, {}* %1738, {}* %.elt8342
  %1739 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA5775" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %1739, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.21", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.21^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest5774 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5774:                                  ; preds = %normal-dest5768
  %1740 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1741 = icmp eq {}* %stream.0, %1740
  %.val10301 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118906.0 = select i1 %1741, {}* %1740, {}* %.val10301
  %1742 = icmp eq {}* %G118906.0, %.val10301
  br i1 %1742, label %tag68, label %tag56

normal-dest5781:                                  ; preds = %tag661
  %ptrtoint5782 = ptrtoint {}* %452 to i64
  %entry-point-addr-uint5783 = add i64 %ptrtoint5782, 7
  %entry-point-addr5784 = inttoptr i64 %entry-point-addr-uint5783 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5785 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5784, align 8
  %1743 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5785({}* %452, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest5788 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5788:                                  ; preds = %normal-dest5781
  %.elt9090 = extractvalue { {}*, i64 } %1743, 0
  %.elt9092 = extractvalue { {}*, i64 } %1743, 1
  %cond8133 = icmp eq i64 %.elt9092, 0
  %1744 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT1166495789.0 = select i1 %cond8133, {}* %1744, {}* %.elt9090
  %ptrtoint5796 = ptrtoint {}* %"closure->LAMBDA4828" to i64
  %tag-only5797 = and i64 %ptrtoint5796, 7
  %test5798 = icmp eq i64 %tag-only5797, 1
  br i1 %test5798, label %header-check-br5795, label %tag724

header-check-br5795:                              ; preds = %normal-dest5788
  %irc-bit-cast5799 = bitcast {}* %"closure->LAMBDA4828" to i8*
  %gep5800 = getelementptr inbounds i8, i8* %irc-bit-cast5799, i64 -9
  %irc-bit-cast5801 = bitcast i8* %gep5800 to i64*
  %1745 = load i64, i64* %irc-bit-cast5801, align 8
  %.off10415 = add i64 %1745, -913
  %1746 = icmp ult i64 %.off10415, 85
  br i1 %1746, label %tag810, label %header-check-br5926

normal-dest5805:                                  ; preds = %tag662
  %ptrtoint5806 = ptrtoint {}* %454 to i64
  %entry-point-addr-uint5807 = add i64 %ptrtoint5806, 7
  %entry-point-addr5808 = inttoptr i64 %entry-point-addr-uint5807 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5809 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5808, align 8
  %1747 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5809({}* %454, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest5812 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5812:                                  ; preds = %normal-dest5805
  %.elt9725 = extractvalue { {}*, i64 } %1747, 0
  %.elt9727 = extractvalue { {}*, i64 } %1747, 1
  %cond8252 = icmp eq i64 %.elt9727, 0
  %1748 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116475.0 = select i1 %cond8252, {}* %1748, {}* %.elt9725
  %ptrtoint5819 = ptrtoint {}* %"closure->LAMBDA7659" to i64
  %tag-only5820 = and i64 %ptrtoint5819, 7
  %test5821 = icmp eq i64 %tag-only5820, 1
  br i1 %test5821, label %header-check-br5818, label %tag191

header-check-br5818:                              ; preds = %normal-dest5812
  %irc-bit-cast5822 = bitcast {}* %"closure->LAMBDA7659" to i8*
  %gep5823 = getelementptr inbounds i8, i8* %irc-bit-cast5822, i64 -9
  %irc-bit-cast5824 = bitcast i8* %gep5823 to i64*
  %1749 = load i64, i64* %irc-bit-cast5824, align 8
  %.off10523 = add i64 %1749, -913
  %1750 = icmp ult i64 %.off10523, 85
  br i1 %1750, label %tag656, label %header-check-br4804

normal-dest5828:                                  ; preds = %tag663
  %ptrtoint5829 = ptrtoint {}* %456 to i64
  %entry-point-addr-uint5830 = add i64 %ptrtoint5829, 7
  %entry-point-addr5831 = inttoptr i64 %entry-point-addr-uint5830 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5832 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5831, align 8
  %1751 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5832({}* %456, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest5835 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5835:                                  ; preds = %normal-dest5828
  %.elt8416 = extractvalue { {}*, i64 } %1751, 0
  %.elt8418 = extractvalue { {}*, i64 } %1751, 1
  %cond8002 = icmp eq i64 %.elt8418, 0
  %1752 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118637.0 = select i1 %cond8002, {}* %1752, {}* %.elt8416
  %1753 = icmp eq {}* %G118637.0, %1752
  br i1 %1753, label %tag546, label %tag854

normal-dest5847:                                  ; preds = %tag667
  %1754 = load i64, i64* bitcast ([784 x {}*]* @CONTAB4236 to i64*), align 16
  br label %tag342

header-check-br5861:                              ; preds = %header-check-br3043
  %.off10518 = add i64 %1121, -1001
  %1755 = icmp ult i64 %.off10518, 5
  br i1 %1755, label %maybe-more-tests5869, label %tag165

maybe-more-tests5869:                             ; preds = %header-check-br5861
  %1756 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1757 = invoke {}* @cc_safe_fdefinition({}* %1756)
          to label %normal-dest7210 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5871:                                  ; preds = %tag670
  %1758 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1759 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1760 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1761 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 578), align 16
  %ptrtoint5872 = ptrtoint {}* %459 to i64
  %entry-point-addr-uint5873 = add i64 %ptrtoint5872, 7
  %entry-point-addr5874 = inttoptr i64 %entry-point-addr-uint5873 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5875 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5874, align 8
  %1762 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5875({}* %459, i64 5, {}* %1758, {}* %1759, {}* %vaarg906, {}* %1760, {}* %1761)
          to label %normal-dest5878 unwind label %cleanup-lpad.loopexit

normal-dest5878:                                  ; preds = %normal-dest5871
  %.elt8821 = extractvalue { {}*, i64 } %1762, 0
  %.elt8823 = extractvalue { {}*, i64 } %1762, 1
  %cond8078 = icmp eq i64 %.elt8823, 0
  %1763 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117496.1 = select i1 %cond8078, {}* %1763, {}* %.elt8821
  br label %tag688

normal-dest5885:                                  ; preds = %tag672
  %1764 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1765 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1766 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1767 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 504), align 16
  %ptrtoint5886 = ptrtoint {}* %461 to i64
  %entry-point-addr-uint5887 = add i64 %ptrtoint5886, 7
  %entry-point-addr5888 = inttoptr i64 %entry-point-addr-uint5887 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5889 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5888, align 8
  %1768 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5889({}* %461, i64 5, {}* %1764, {}* %1765, {}* %"closure->LAMBDA5936", {}* %1766, {}* %1767)
          to label %normal-dest5892 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5892:                                  ; preds = %normal-dest5885
  %.elt9629 = extractvalue { {}*, i64 } %1768, 0
  %.elt9631 = extractvalue { {}*, i64 } %1768, 1
  %cond8234 = icmp eq i64 %.elt9631, 0
  %1769 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119068.2 = select i1 %cond8234, {}* %1769, {}* %.elt9629
  br label %tag226

normal-dest5899:                                  ; preds = %tag674
  %1770 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1771 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1772 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1773 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 581), align 8
  %ptrtoint5900 = ptrtoint {}* %463 to i64
  %entry-point-addr-uint5901 = add i64 %ptrtoint5900, 7
  %entry-point-addr5902 = inttoptr i64 %entry-point-addr-uint5901 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5903 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5902, align 8
  %1774 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5903({}* %463, i64 5, {}* %1770, {}* %1771, {}* %vaarg906, {}* %1772, {}* %1773)
          to label %normal-dest5906 unwind label %cleanup-lpad.loopexit

normal-dest5906:                                  ; preds = %normal-dest5899
  %.elt8749 = extractvalue { {}*, i64 } %1774, 0
  %.elt8751 = extractvalue { {}*, i64 } %1774, 1
  %cond8063 = icmp eq i64 %.elt8751, 0
  %1775 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117588.2 = select i1 %cond8063, {}* %1775, {}* %.elt8749
  br label %tag14

normal-dest5913:                                  ; preds = %tag677
  %1776 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1777 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1778 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1779 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 515), align 8
  %ptrtoint5914 = ptrtoint {}* %465 to i64
  %entry-point-addr-uint5915 = add i64 %ptrtoint5914, 7
  %entry-point-addr5916 = inttoptr i64 %entry-point-addr-uint5915 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5917 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5916, align 8
  %1780 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5917({}* %465, i64 5, {}* %1776, {}* %1777, {}* %"closure->LAMBDA5775", {}* %1778, {}* %1779)
          to label %normal-dest5920 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5920:                                  ; preds = %normal-dest5913
  %.elt9438 = extractvalue { {}*, i64 } %1780, 0
  %.elt9440 = extractvalue { {}*, i64 } %1780, 1
  %cond8199 = icmp eq i64 %.elt9440, 0
  %1781 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118851.1 = select i1 %cond8199, {}* %1781, {}* %.elt9438
  br label %tag525

header-check-br5926:                              ; preds = %header-check-br5795
  %.off10416 = add i64 %1745, -1001
  %1782 = icmp ult i64 %.off10416, 5
  br i1 %1782, label %maybe-more-tests5934, label %tag724

maybe-more-tests5934:                             ; preds = %header-check-br5926
  %1783 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1784 = invoke {}* @cc_safe_fdefinition({}* %1783)
          to label %normal-dest5944 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5935:                                  ; preds = %tag681
  %1785 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1786 = icmp eq {}* %stream.0, %1785
  %.val10288 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119133.0 = select i1 %1786, {}* %1785, {}* %.val10288
  %1787 = icmp eq {}* %G119133.0, %.val10288
  br i1 %1787, label %tag85, label %tag211

normal-dest5944:                                  ; preds = %maybe-more-tests5934
  %ptrtoint5945 = ptrtoint {}* %1784 to i64
  %entry-point-addr-uint5946 = add i64 %ptrtoint5945, 7
  %entry-point-addr5947 = inttoptr i64 %entry-point-addr-uint5946 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5948 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5947, align 8
  %1788 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5948({}* %1784, i64 1, {}* nonnull %"closure->LAMBDA4828", {}* null, {}* null, {}* null)
          to label %normal-dest5951 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5951:                                  ; preds = %normal-dest5944
  %.elt9110 = extractvalue { {}*, i64 } %1788, 0
  %.elt9112 = extractvalue { {}*, i64 } %1788, 1
  %cond8137 = icmp eq i64 %.elt9112, 0
  %1789 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117769.1 = select i1 %cond8137, {}* %1789, {}* %.elt9110
  br label %tag810

normal-dest5958:                                  ; preds = %tag684
  %1790 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1791 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1792 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1793 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 588), align 16
  %ptrtoint5959 = ptrtoint {}* %468 to i64
  %entry-point-addr-uint5960 = add i64 %ptrtoint5959, 7
  %entry-point-addr5961 = inttoptr i64 %entry-point-addr-uint5960 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5962 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5961, align 8
  %1794 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5962({}* %468, i64 5, {}* %1790, {}* %1791, {}* %"closure->LAMBDA3275", {}* %1792, {}* %1793)
          to label %normal-dest5965 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest5965:                                  ; preds = %normal-dest5958
  %.elt9042 = extractvalue { {}*, i64 } %1794, 0
  %.elt9044 = extractvalue { {}*, i64 } %1794, 1
  %cond8124 = icmp eq i64 %.elt9044, 0
  %1795 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117106.2 = select i1 %cond8124, {}* %1795, {}* %.elt9042
  br label %tag138

normal-dest5975:                                  ; preds = %tag686
  %ptrtoint5976 = ptrtoint {}* %470 to i64
  %entry-point-addr-uint5977 = add i64 %ptrtoint5976, 7
  %entry-point-addr5978 = inttoptr i64 %entry-point-addr-uint5977 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point5979 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr5978, align 8
  %1796 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point5979({}* %470, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest5982 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest5982:                                  ; preds = %normal-dest5975
  %.elt9601 = extractvalue { {}*, i64 } %1796, 0
  %.elt9603 = extractvalue { {}*, i64 } %1796, 1
  %cond8229 = icmp eq i64 %.elt9603, 0
  %1797 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116514.0 = select i1 %cond8229, {}* %1797, {}* %.elt9601
  %ptrtoint5989 = ptrtoint {}* %"closure->LAMBDA5936" to i64
  %tag-only5990 = and i64 %ptrtoint5989, 7
  %test5991 = icmp eq i64 %tag-only5990, 1
  br i1 %test5991, label %header-check-br5988, label %tag72

header-check-br5988:                              ; preds = %normal-dest5982
  %irc-bit-cast5992 = bitcast {}* %"closure->LAMBDA5936" to i8*
  %gep5993 = getelementptr inbounds i8, i8* %irc-bit-cast5992, i64 -9
  %irc-bit-cast5994 = bitcast i8* %gep5993 to i64*
  %1798 = load i64, i64* %irc-bit-cast5994, align 8
  %.off10503 = add i64 %1798, -913
  %1799 = icmp ult i64 %.off10503, 85
  br i1 %1799, label %tag572, label %header-check-br1309

header-check-br5997:                              ; preds = %tag687
  %irc-bit-cast6001 = bitcast {}* %"closure->LAMBDA7791" to i8*
  %gep6002 = getelementptr inbounds i8, i8* %irc-bit-cast6001, i64 -9
  %irc-bit-cast6003 = bitcast i8* %gep6002 to i64*
  %1800 = load i64, i64* %irc-bit-cast6003, align 8
  %.off10335 = add i64 %1800, -913
  %1801 = icmp ult i64 %.off10335, 85
  br i1 %1801, label %tag603, label %header-check-br4472

normal-dest6019:                                  ; preds = %tag689
  %1802 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1803 = invoke {}* @cc_safe_fdefinition({}* %1802)
          to label %normal-dest6021 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6021:                                  ; preds = %normal-dest6019
  %1804 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 513), align 8
  %ptrtoint6022 = ptrtoint {}* %1803 to i64
  %entry-point-addr-uint6023 = add i64 %ptrtoint6022, 7
  %entry-point-addr6024 = inttoptr i64 %entry-point-addr-uint6023 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6025 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6024, align 8
  %1805 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6025({}* %1803, i64 1, {}* %1804, {}* null, {}* null, {}* null)
          to label %normal-dest6028 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6028:                                  ; preds = %normal-dest6021
  %.elt9494 = extractvalue { {}*, i64 } %1805, 0
  %.elt9496 = extractvalue { {}*, i64 } %1805, 1
  %cond8210 = icmp eq i64 %.elt9496, 0
  %1806 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118799.0 = select i1 %cond8210, {}* %1806, {}* %.elt9494
  %ptrtoint6034 = ptrtoint {}* %473 to i64
  %entry-point-addr-uint6035 = add i64 %ptrtoint6034, 7
  %entry-point-addr6036 = inttoptr i64 %entry-point-addr-uint6035 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6037 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6036, align 8
  %1807 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6037({}* %473, i64 2, {}* %G118799.0, {}* %1806, {}* null, {}* null)
          to label %normal-dest6040 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6040:                                  ; preds = %normal-dest6028
  %.elt9498 = extractvalue { {}*, i64 } %1807, 0
  %.elt9500 = extractvalue { {}*, i64 } %1807, 1
  %cond8211 = icmp eq i64 %.elt9500, 0
  %1808 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118797.0 = select i1 %cond8211, {}* %1808, {}* %.elt9498
  %ptrtoint6046 = ptrtoint {}* %G118794.0 to i64
  %entry-point-addr-uint6047 = add i64 %ptrtoint6046, 7
  %entry-point-addr6048 = inttoptr i64 %entry-point-addr-uint6047 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6049 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6048, align 8
  %1809 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6049({}* %G118794.0, i64 3, {}* %stream.0, {}* %Y_FORMAT.0, {}* %G118797.0, {}* null)
          to label %tag209 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6058:                                  ; preds = %tag692
  %1810 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1811 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1812 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1813 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 556), align 16
  %ptrtoint6059 = ptrtoint {}* %475 to i64
  %entry-point-addr-uint6060 = add i64 %ptrtoint6059, 7
  %entry-point-addr6061 = inttoptr i64 %entry-point-addr-uint6060 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6062 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6061, align 8
  %1814 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6062({}* %475, i64 5, {}* %1810, {}* %1811, {}* %"closure->LAMBDA4828", {}* %1812, {}* %1813)
          to label %normal-dest6065 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6065:                                  ; preds = %normal-dest6058
  %.elt9062 = extractvalue { {}*, i64 } %1814, 0
  %.elt9064 = extractvalue { {}*, i64 } %1814, 1
  %cond8128 = icmp eq i64 %.elt9064, 0
  %1815 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117803.1 = select i1 %cond8128, {}* %1815, {}* %.elt9062
  br label %tag776

header-check-br6071:                              ; preds = %tag593
  %irc-bit-cast6075 = bitcast {}* %2116 to i8*
  %gep6076 = getelementptr inbounds i8, i8* %irc-bit-cast6075, i64 -9
  %irc-bit-cast6077 = bitcast i8* %gep6076 to i64*
  %1816 = load i64, i64* %irc-bit-cast6077, align 8
  %1817 = add i64 %1816, -1309
  %1818 = lshr i64 %1817, 3
  %1819 = shl i64 %1817, 61
  %1820 = or i64 %1818, %1819
  switch i64 %1820, label %tag890 [
    i64 2, label %tag61
    i64 4, label %tag61
    i64 5, label %tag61
    i64 0, label %tag61
  ]

normal-dest6079:                                  ; preds = %maybe-more-tests6419
  %ptrtoint6080 = ptrtoint {}* %1892 to i64
  %entry-point-addr-uint6081 = add i64 %ptrtoint6080, 7
  %entry-point-addr6082 = inttoptr i64 %entry-point-addr-uint6081 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6083 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6082, align 8
  %1821 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6083({}* %1892, i64 1, {}* nonnull %vaarg906, {}* null, {}* null, {}* null)
          to label %normal-dest6086 unwind label %cleanup-lpad.loopexit

normal-dest6086:                                  ; preds = %normal-dest6079
  %.elt8829 = extractvalue { {}*, i64 } %1821, 0
  %.elt8831 = extractvalue { {}*, i64 } %1821, 1
  %cond8080 = icmp eq i64 %.elt8831, 0
  %1822 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117496.2 = select i1 %cond8080, {}* %1822, {}* %.elt8829
  br label %tag688

normal-dest6093:                                  ; preds = %tag696
  %ptrtoint6094 = ptrtoint {}* %477 to i64
  %entry-point-addr-uint6095 = add i64 %ptrtoint6094, 7
  %entry-point-addr6096 = inttoptr i64 %entry-point-addr-uint6095 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6097 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6096, align 8
  %1823 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6097({}* %477, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest6100 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6100:                                  ; preds = %normal-dest6093
  %.elt9462 = extractvalue { {}*, i64 } %1823, 0
  %.elt9464 = extractvalue { {}*, i64 } %1823, 1
  %cond8203 = icmp eq i64 %.elt9464, 0
  %1824 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118843.0 = select i1 %cond8203, {}* %1824, {}* %.elt9462
  %1825 = icmp eq {}* %G118843.0, %1824
  br i1 %1825, label %tag879, label %tag842

normal-dest6113:                                  ; preds = %tag700
  %1826 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1827 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1828 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1829 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 600), align 16
  %ptrtoint6114 = ptrtoint {}* %481 to i64
  %entry-point-addr-uint6115 = add i64 %ptrtoint6114, 7
  %entry-point-addr6116 = inttoptr i64 %entry-point-addr-uint6115 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6117 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6116, align 8
  %1830 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6117({}* %481, i64 5, {}* %1826, {}* %1827, {}* %"closure->LAMBDA7765", {}* %1828, {}* %1829)
          to label %normal-dest6120 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6120:                                  ; preds = %normal-dest6113
  %.elt9565 = extractvalue { {}*, i64 } %1830, 0
  %.elt9567 = extractvalue { {}*, i64 } %1830, 1
  %cond8222 = icmp eq i64 %.elt9567, 0
  %1831 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116814.2 = select i1 %cond8222, {}* %1831, {}* %.elt9565
  br label %tag667

normal-dest6127:                                  ; preds = %maybe-more-tests5638
  %ptrtoint6128 = ptrtoint {}* %1713 to i64
  %entry-point-addr-uint6129 = add i64 %ptrtoint6128, 7
  %entry-point-addr6130 = inttoptr i64 %entry-point-addr-uint6129 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6131 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6130, align 8
  %1832 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6131({}* %1713, i64 1, {}* nonnull %"closure->LAMBDA2636", {}* null, {}* null, {}* null)
          to label %normal-dest6134 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6134:                                  ; preds = %normal-dest6127
  %.elt9182 = extractvalue { {}*, i64 } %1832, 0
  %.elt9184 = extractvalue { {}*, i64 } %1832, 1
  %cond8151 = icmp eq i64 %.elt9184, 0
  %1833 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117061.2 = select i1 %cond8151, {}* %1833, {}* %.elt9182
  br label %tag55

normal-dest6141:                                  ; preds = %tag703
  %1834 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1835 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1836 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1837 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint6142 = ptrtoint {}* %483 to i64
  %entry-point-addr-uint6143 = add i64 %ptrtoint6142, 7
  %entry-point-addr6144 = inttoptr i64 %entry-point-addr-uint6143 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6145 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6144, align 8
  %1838 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6145({}* %483, i64 5, {}* %1834, {}* %1835, {}* %X_LISTE_ALLES.0, {}* %1836, {}* %1837)
          to label %normal-dest6148 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6148:                                  ; preds = %normal-dest6141
  %.elt9577 = extractvalue { {}*, i64 } %1838, 0
  %.elt9579 = extractvalue { {}*, i64 } %1838, 1
  %cond8224 = icmp eq i64 %.elt9579, 0
  %1839 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %object.1 = select i1 %cond8224, {}* %1839, {}* %.elt9577
  br label %tag234

normal-dest6155:                                  ; preds = %tag704
  %1840 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1841 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1842 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1843 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 539), align 8
  %ptrtoint6156 = ptrtoint {}* %485 to i64
  %entry-point-addr-uint6157 = add i64 %ptrtoint6156, 7
  %entry-point-addr6158 = inttoptr i64 %entry-point-addr-uint6157 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6159 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6158, align 8
  %1844 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6159({}* %485, i64 5, {}* %1840, {}* %1841, {}* %"closure->LAMBDA7791", {}* %1842, {}* %1843)
          to label %normal-dest6162 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6162:                                  ; preds = %normal-dest6155
  %.elt8586 = extractvalue { {}*, i64 } %1844, 0
  %.elt8588 = extractvalue { {}*, i64 } %1844, 1
  %cond8033 = icmp eq i64 %.elt8588, 0
  %1845 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118054.2 = select i1 %cond8033, {}* %1845, {}* %.elt8586
  br label %tag603

header-check-br6175:                              ; preds = %header-check-br3402
  %.off10520 = add i64 %1219, -1001
  %1846 = icmp ult i64 %.off10520, 5
  br i1 %1846, label %maybe-more-tests6183, label %tag657

maybe-more-tests6183:                             ; preds = %header-check-br6175
  %1847 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1848 = invoke {}* @cc_safe_fdefinition({}* %1847)
          to label %normal-dest6223 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6185:                                  ; preds = %maybe-more-tests1691
  %ptrtoint6186 = ptrtoint {}* %820 to i64
  %entry-point-addr-uint6187 = add i64 %ptrtoint6186, 7
  %entry-point-addr6188 = inttoptr i64 %entry-point-addr-uint6187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6188, align 8
  %1849 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6189({}* %820, i64 1, {}* nonnull %vaarg906, {}* null, {}* null, {}* null)
          to label %normal-dest6192 unwind label %cleanup-lpad.loopexit

normal-dest6192:                                  ; preds = %normal-dest6185
  %.elt8889 = extractvalue { {}*, i64 } %1849, 0
  %.elt8891 = extractvalue { {}*, i64 } %1849, 1
  %cond8093 = icmp eq i64 %.elt8891, 0
  %1850 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117417.2 = select i1 %cond8093, {}* %1850, {}* %.elt8889
  br label %tag740

normal-dest6204:                                  ; preds = %tag709
  %1851 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %1852 = invoke {}* @cc_safe_fdefinition({}* %1851)
          to label %normal-dest6210 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6210:                                  ; preds = %normal-dest6204
  %ptrtoint6211 = ptrtoint {}* %1852 to i64
  %entry-point-addr-uint6212 = add i64 %ptrtoint6211, 7
  %entry-point-addr6213 = inttoptr i64 %entry-point-addr-uint6212 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6214 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6213, align 8
  %1853 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6214({}* %1852, i64 1, {}* %G116732.0, {}* null, {}* null, {}* null)
          to label %tag34 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6223:                                  ; preds = %maybe-more-tests6183
  %ptrtoint6224 = ptrtoint {}* %1848 to i64
  %entry-point-addr-uint6225 = add i64 %ptrtoint6224, 7
  %entry-point-addr6226 = inttoptr i64 %entry-point-addr-uint6225 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6227 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6226, align 8
  %1854 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6227({}* %1848, i64 1, {}* nonnull %"closure->LAMBDA7659", {}* null, {}* null, {}* null)
          to label %normal-dest6230 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6230:                                  ; preds = %normal-dest6223
  %.elt9721 = extractvalue { {}*, i64 } %1854, 0
  %.elt9723 = extractvalue { {}*, i64 } %1854, 1
  %cond8251 = icmp eq i64 %.elt9723, 0
  %1855 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119435.2 = select i1 %cond8251, {}* %1855, {}* %.elt9721
  br label %tag103

normal-dest6237:                                  ; preds = %tag711
  %ptrtoint6238 = ptrtoint {}* %488 to i64
  %entry-point-addr-uint6239 = add i64 %ptrtoint6238, 7
  %entry-point-addr6240 = inttoptr i64 %entry-point-addr-uint6239 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6241 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6240, align 8
  %1856 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6241({}* %488, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest6244 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6244:                                  ; preds = %normal-dest6237
  %.elt9398 = extractvalue { {}*, i64 } %1856, 0
  %.elt9400 = extractvalue { {}*, i64 } %1856, 1
  %cond8191 = icmp eq i64 %.elt9400, 0
  %1857 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118513.0 = select i1 %cond8191, {}* %1857, {}* %.elt9398
  %1858 = icmp eq {}* %G118513.0, %1857
  br i1 %1858, label %tag726, label %tag763

normal-dest6251:                                  ; preds = %tag714
  %1859 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %1860 = invoke {}* @cc_safe_fdefinition({}* %1859)
          to label %normal-dest6253 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6253:                                  ; preds = %normal-dest6251
  %1861 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 533), align 8
  %ptrtoint6254 = ptrtoint {}* %1860 to i64
  %entry-point-addr-uint6255 = add i64 %ptrtoint6254, 7
  %entry-point-addr6256 = inttoptr i64 %entry-point-addr-uint6255 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6257 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6256, align 8
  %1862 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6257({}* %1860, i64 1, {}* %1861, {}* null, {}* null, {}* null)
          to label %normal-dest6260 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6260:                                  ; preds = %normal-dest6253
  %.elt9306 = extractvalue { {}*, i64 } %1862, 0
  %.elt9308 = extractvalue { {}*, i64 } %1862, 1
  %cond8174 = icmp eq i64 %.elt9308, 0
  %1863 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118362.0 = select i1 %cond8174, {}* %1863, {}* %.elt9306
  %ptrtoint6266 = ptrtoint {}* %490 to i64
  %entry-point-addr-uint6267 = add i64 %ptrtoint6266, 7
  %entry-point-addr6268 = inttoptr i64 %entry-point-addr-uint6267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6268, align 8
  %1864 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6269({}* %490, i64 2, {}* %G118362.0, {}* %1863, {}* null, {}* null)
          to label %normal-dest6272 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6272:                                  ; preds = %normal-dest6260
  %.elt9310 = extractvalue { {}*, i64 } %1864, 0
  %.elt9312 = extractvalue { {}*, i64 } %1864, 1
  %cond8175 = icmp eq i64 %.elt9312, 0
  %1865 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118360.0 = select i1 %cond8175, {}* %1865, {}* %.elt9310
  %ptrtoint6278 = ptrtoint {}* %G118357.0 to i64
  %entry-point-addr-uint6279 = add i64 %ptrtoint6278, 7
  %entry-point-addr6280 = inttoptr i64 %entry-point-addr-uint6279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6280, align 8
  %1866 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6281({}* %G118357.0, i64 3, {}* %G116593.0, {}* %Y_FORMAT.0, {}* %G118360.0, {}* null)
          to label %normal-dest6284 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6284:                                  ; preds = %normal-dest6272
  %1867 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %1868 = invoke {}* @cc_safe_fdefinition({}* %1867)
          to label %normal-dest6290 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6290:                                  ; preds = %normal-dest6284
  %ptrtoint6291 = ptrtoint {}* %1868 to i64
  %entry-point-addr-uint6292 = add i64 %ptrtoint6291, 7
  %entry-point-addr6293 = inttoptr i64 %entry-point-addr-uint6292 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6294 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6293, align 8
  %1869 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6294({}* %1868, i64 1, {}* %G116593.0, {}* null, {}* null, {}* null)
          to label %tag21 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6305:                                  ; preds = %tag716
  %ptrtoint6306 = ptrtoint {}* %G117167.0 to i64
  %entry-point-addr-uint6307 = add i64 %ptrtoint6306, 7
  %entry-point-addr6308 = inttoptr i64 %entry-point-addr-uint6307 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6309 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6308, align 8
  %1870 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6309({}* %G117167.0, i64 1, {}* %492, {}* null, {}* null, {}* null)
          to label %tag34 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6318:                                  ; preds = %tag717
  %ptrtoint6319 = ptrtoint {}* %494 to i64
  %entry-point-addr-uint6320 = add i64 %ptrtoint6319, 7
  %entry-point-addr6321 = inttoptr i64 %entry-point-addr-uint6320 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6322 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6321, align 8
  %1871 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6322({}* %494, i64 2, {}* %X_ANZAHL.0, {}* %LAENGE.1, {}* null, {}* null)
          to label %tag539 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6333:                                  ; preds = %tag719
  %1872 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 540), align 16
  %1873 = invoke {}* @cc_safe_fdefinition({}* %1872)
          to label %normal-dest6335 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6335:                                  ; preds = %normal-dest6333
  %1874 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 542), align 16
  %1875 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint6336 = ptrtoint {}* %1873 to i64
  %entry-point-addr-uint6337 = add i64 %ptrtoint6336, 7
  %entry-point-addr6338 = inttoptr i64 %entry-point-addr-uint6337 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6339 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6338, align 8
  %1876 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6339({}* %1873, i64 6, {}* %1874, {}* %spalten-breite.0, {}* %1875, {}* %1875, {}* %1875, {}* null)
          to label %normal-dest6342 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6342:                                  ; preds = %normal-dest6335
  %.elt8530 = extractvalue { {}*, i64 } %1876, 0
  %.elt8532 = extractvalue { {}*, i64 } %1876, 1
  %cond8024 = icmp eq i64 %.elt8532, 0
  %1877 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %RESULT116620.0 = select i1 %cond8024, {}* %1877, {}* %.elt8530
  %1878 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 544), align 16
  %1879 = invoke {}* @cc_safe_fdefinition({}* %1878)
          to label %normal-dest6349 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6349:                                  ; preds = %normal-dest6342
  %1880 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint6350 = ptrtoint {}* %1879 to i64
  %entry-point-addr-uint6351 = add i64 %ptrtoint6350, 7
  %entry-point-addr6352 = inttoptr i64 %entry-point-addr-uint6351 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6353 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6352, align 8
  %1881 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6353({}* %1879, i64 4, {}* %RESULT116620.0, {}* inttoptr (i64 362 to {}*), {}* null, {}* %1880)
          to label %normal-dest6356 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6356:                                  ; preds = %normal-dest6349
  %ptrtoint6361 = ptrtoint {}* %496 to i64
  %entry-point-addr-uint6362 = add i64 %ptrtoint6361, 7
  %entry-point-addr6363 = inttoptr i64 %entry-point-addr-uint6362 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6364 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6363, align 8
  %1882 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6364({}* %496, i64 1, {}* %RESULT116620.0, {}* null, {}* null, {}* null)
          to label %normal-dest6367 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6367:                                  ; preds = %normal-dest6356
  %.elt8538 = extractvalue { {}*, i64 } %1882, 0
  %.elt8540 = extractvalue { {}*, i64 } %1882, 1
  %cond8025 = icmp eq i64 %.elt8540, 0
  %1883 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118134.0 = select i1 %cond8025, {}* %1883, {}* %.elt8538
  %ptrtoint6373 = ptrtoint {}* %G118131.0 to i64
  %entry-point-addr-uint6374 = add i64 %ptrtoint6373, 7
  %entry-point-addr6375 = inttoptr i64 %entry-point-addr-uint6374 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6376 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6375, align 8
  %1884 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6376({}* %G118131.0, i64 3, {}* %G116617.0, {}* %X_FORMAT.0, {}* %G118134.0, {}* null)
          to label %normal-dest6379 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6379:                                  ; preds = %normal-dest6367
  %1885 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %1886 = invoke {}* @cc_safe_fdefinition({}* %1885)
          to label %normal-dest6385 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6385:                                  ; preds = %normal-dest6379
  %ptrtoint6386 = ptrtoint {}* %1886 to i64
  %entry-point-addr-uint6387 = add i64 %ptrtoint6386, 7
  %entry-point-addr6388 = inttoptr i64 %entry-point-addr-uint6387 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6389 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6388, align 8
  %1887 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6389({}* %1886, i64 1, {}* %G116617.0, {}* null, {}* null, {}* null)
          to label %tag859 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6398:                                  ; preds = %maybe-more-tests963
  %ptrtoint6399 = ptrtoint {}* %652 to i64
  %entry-point-addr-uint6400 = add i64 %ptrtoint6399, 7
  %entry-point-addr6401 = inttoptr i64 %entry-point-addr-uint6400 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6402 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6401, align 8
  %1888 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6402({}* %652, i64 1, {}* nonnull %"closure->LAMBDA6916", {}* null, {}* null, {}* null)
          to label %normal-dest6405 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6405:                                  ; preds = %normal-dest6398
  %.elt9294 = extractvalue { {}*, i64 } %1888, 0
  %.elt9296 = extractvalue { {}*, i64 } %1888, 1
  %cond8171 = icmp eq i64 %.elt9296, 0
  %1889 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118388.2 = select i1 %cond8171, {}* %1889, {}* %.elt9294
  br label %tag293

header-check-br6411:                              ; preds = %header-check-br3799
  %.off10376 = add i64 %1306, -1001
  %1890 = icmp ult i64 %.off10376, 5
  br i1 %1890, label %maybe-more-tests6419, label %tag670

maybe-more-tests6419:                             ; preds = %header-check-br6411
  %1891 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1892 = invoke {}* @cc_safe_fdefinition({}* %1891)
          to label %normal-dest6079 unwind label %cleanup-lpad.loopexit

normal-dest6421:                                  ; preds = %tag724
  %1893 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1894 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1895 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1896 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 555), align 8
  %ptrtoint6422 = ptrtoint {}* %498 to i64
  %entry-point-addr-uint6423 = add i64 %ptrtoint6422, 7
  %entry-point-addr6424 = inttoptr i64 %entry-point-addr-uint6423 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6425 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6424, align 8
  %1897 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6425({}* %498, i64 5, {}* %1893, {}* %1894, {}* %"closure->LAMBDA4828", {}* %1895, {}* %1896)
          to label %normal-dest6428 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6428:                                  ; preds = %normal-dest6421
  %.elt9094 = extractvalue { {}*, i64 } %1897, 0
  %.elt9096 = extractvalue { {}*, i64 } %1897, 1
  %cond8134 = icmp eq i64 %.elt9096, 0
  %1898 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117769.2 = select i1 %cond8134, {}* %1898, {}* %.elt9094
  br label %tag810

normal-dest6435:                                  ; preds = %maybe-more-tests7461
  %ptrtoint6436 = ptrtoint {}* %2123 to i64
  %entry-point-addr-uint6437 = add i64 %ptrtoint6436, 7
  %entry-point-addr6438 = inttoptr i64 %entry-point-addr-uint6437 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6439 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6438, align 8
  %1899 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6439({}* %2123, i64 1, {}* nonnull %"closure->LAMBDA6916", {}* null, {}* null, {}* null)
          to label %normal-dest6442 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6442:                                  ; preds = %normal-dest6435
  %.elt9370 = extractvalue { {}*, i64 } %1899, 0
  %.elt9372 = extractvalue { {}*, i64 } %1899, 1
  %cond8186 = icmp eq i64 %.elt9372, 0
  %1900 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118300.2 = select i1 %cond8186, {}* %1900, {}* %.elt9370
  br label %tag858

header-check-br6448:                              ; preds = %tag726
  %irc-bit-cast6452 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep6453 = getelementptr inbounds i8, i8* %irc-bit-cast6452, i64 -9
  %irc-bit-cast6454 = bitcast i8* %gep6453 to i64*
  %1901 = load i64, i64* %irc-bit-cast6454, align 8
  %.off10471 = add i64 %1901, -913
  %1902 = icmp ult i64 %.off10471, 85
  br i1 %1902, label %tag658, label %header-check-br2098

normal-dest6458:                                  ; preds = %maybe-more-tests5479
  %ptrtoint6459 = ptrtoint {}* %1684 to i64
  %entry-point-addr-uint6460 = add i64 %ptrtoint6459, 7
  %entry-point-addr6461 = inttoptr i64 %entry-point-addr-uint6460 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6462 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6461, align 8
  %1903 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6462({}* %1684, i64 1, {}* nonnull %"closure->LAMBDA3566", {}* null, {}* null, {}* null)
          to label %normal-dest6465 unwind label %cleanup-lpad.loopexit

normal-dest6465:                                  ; preds = %normal-dest6458
  %.elt8841 = extractvalue { {}*, i64 } %1903, 0
  %.elt8843 = extractvalue { {}*, i64 } %1903, 1
  %cond8082 = icmp eq i64 %.elt8843, 0
  %1904 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117479.2 = select i1 %cond8082, {}* %1904, {}* %.elt8841
  br label %tag456

normal-dest6473:                                  ; preds = %tag730
  %ptrtoint6474 = ptrtoint {}* %G117273.0 to i64
  %entry-point-addr-uint6475 = add i64 %ptrtoint6474, 7
  %entry-point-addr6476 = inttoptr i64 %entry-point-addr-uint6475 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6477 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6476, align 8
  %1905 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6477({}* %G117273.0, i64 1, {}* %501, {}* null, {}* null, {}* null)
          to label %tag346 unwind label %cleanup-lpad.loopexit

header-check-br6485:                              ; preds = %tag731
  %1906 = load i64, i64* %irc-bit-cast3711, align 8
  %.off10381 = add i64 %1906, -913
  %1907 = icmp ult i64 %.off10381, 85
  br i1 %1907, label %tag740, label %header-check-br1683

normal-dest6495:                                  ; preds = %tag732
  %ptrtoint6496 = ptrtoint {}* %503 to i64
  %entry-point-addr-uint6497 = add i64 %ptrtoint6496, 7
  %entry-point-addr6498 = inttoptr i64 %entry-point-addr-uint6497 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6499 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6498, align 8
  %1908 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6499({}* %503, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest6502 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6502:                                  ; preds = %normal-dest6495
  %.elt9749 = extractvalue { {}*, i64 } %1908, 0
  %.elt9751 = extractvalue { {}*, i64 } %1908, 1
  %cond8256 = icmp eq i64 %.elt9751, 0
  %1909 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT1164646503.0 = select i1 %cond8256, {}* %1909, {}* %.elt9749
  %ptrtoint6510 = ptrtoint {}* %"closure->LAMBDA7659" to i64
  %tag-only6511 = and i64 %ptrtoint6510, 7
  %test6512 = icmp eq i64 %tag-only6511, 1
  br i1 %test6512, label %header-check-br6509, label %tag386

header-check-br6509:                              ; preds = %normal-dest6502
  %irc-bit-cast6513 = bitcast {}* %"closure->LAMBDA7659" to i8*
  %gep6514 = getelementptr inbounds i8, i8* %irc-bit-cast6513, i64 -9
  %irc-bit-cast6515 = bitcast i8* %gep6514 to i64*
  %1910 = load i64, i64* %irc-bit-cast6515, align 8
  %.off10525 = add i64 %1910, -913
  %1911 = icmp ult i64 %.off10525, 85
  br i1 %1911, label %tag878, label %header-check-br2785

header-check-br6518:                              ; preds = %tag733
  %irc-bit-cast6522 = bitcast {}* %"closure->LAMBDA2636" to i8*
  %gep6523 = getelementptr inbounds i8, i8* %irc-bit-cast6522, i64 -9
  %irc-bit-cast6524 = bitcast i8* %gep6523 to i64*
  %1912 = load i64, i64* %irc-bit-cast6524, align 8
  %.off10433 = add i64 %1912, -913
  %1913 = icmp ult i64 %.off10433, 85
  br i1 %1913, label %tag55, label %header-check-br5630

normal-dest6528:                                  ; preds = %tag734
  %1914 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1915 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1916 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1917 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 587), align 8
  %ptrtoint6529 = ptrtoint {}* %505 to i64
  %entry-point-addr-uint6530 = add i64 %ptrtoint6529, 7
  %entry-point-addr6531 = inttoptr i64 %entry-point-addr-uint6530 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6532 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6531, align 8
  %1918 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6532({}* %505, i64 5, {}* %1914, {}* %1915, {}* %"closure->LAMBDA2695", {}* %1916, {}* %1917)
          to label %normal-dest6535 unwind label %cleanup-lpad.loopexit

normal-dest6535:                                  ; preds = %normal-dest6528
  %.elt8676 = extractvalue { {}*, i64 } %1918, 0
  %.elt8678 = extractvalue { {}*, i64 } %1918, 1
  %cond8050 = icmp eq i64 %.elt8678, 0
  %1919 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117273.2 = select i1 %cond8050, {}* %1919, {}* %.elt8676
  br label %tag730

normal-dest6542:                                  ; preds = %tag735
  %1920 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1921 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1922 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1923 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 594), align 16
  %ptrtoint6543 = ptrtoint {}* %507 to i64
  %entry-point-addr-uint6544 = add i64 %ptrtoint6543, 7
  %entry-point-addr6545 = inttoptr i64 %entry-point-addr-uint6544 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6546 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6545, align 8
  %1924 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6546({}* %507, i64 5, {}* %1920, {}* %1921, {}* %"closure->LAMBDA2636", {}* %1922, {}* %1923)
          to label %normal-dest6549 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6549:                                  ; preds = %normal-dest6542
  %.elt9190 = extractvalue { {}*, i64 } %1924, 0
  %.elt9192 = extractvalue { {}*, i64 } %1924, 1
  %cond8153 = icmp eq i64 %.elt9192, 0
  %1925 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117039.2 = select i1 %cond8153, {}* %1925, {}* %.elt9190
  br label %tag652

normal-dest6558:                                  ; preds = %tag740
  %ptrtoint6559 = ptrtoint {}* %509 to i64
  %entry-point-addr-uint6560 = add i64 %ptrtoint6559, 7
  %entry-point-addr6561 = inttoptr i64 %entry-point-addr-uint6560 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6562 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6561, align 8
  %1926 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6562({}* %509, i64 2, {}* %Y_ELEMENT.0, {}* %vaarg898, {}* null, {}* null)
          to label %normal-dest6565 unwind label %cleanup-lpad.loopexit

normal-dest6565:                                  ; preds = %normal-dest6558
  %.elt8861 = extractvalue { {}*, i64 } %1926, 0
  %.elt8863 = extractvalue { {}*, i64 } %1926, 1
  %cond8087 = icmp eq i64 %.elt8863, 0
  %1927 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117418.0 = select i1 %cond8087, {}* %1927, {}* %.elt8861
  %1928 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 570), align 16
  %1929 = invoke {}* @cc_safe_fdefinition({}* %1928)
          to label %normal-dest6572 unwind label %cleanup-lpad.loopexit

normal-dest6572:                                  ; preds = %normal-dest6565
  %ptrtoint6573 = ptrtoint {}* %1929 to i64
  %entry-point-addr-uint6574 = add i64 %ptrtoint6573, 7
  %entry-point-addr6575 = inttoptr i64 %entry-point-addr-uint6574 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6576 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6575, align 8
  %1930 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6576({}* %1929, i64 2, {}* %X_ELEMENT.0, {}* %vaarg902, {}* null, {}* null)
          to label %normal-dest6579 unwind label %cleanup-lpad.loopexit

normal-dest6579:                                  ; preds = %normal-dest6572
  %.elt8865 = extractvalue { {}*, i64 } %1930, 0
  %.elt8867 = extractvalue { {}*, i64 } %1930, 1
  %cond8088 = icmp eq i64 %.elt8867, 0
  %1931 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117419.0 = select i1 %cond8088, {}* %1931, {}* %.elt8865
  %ptrtoint6585 = ptrtoint {}* %G117417.0 to i64
  %entry-point-addr-uint6586 = add i64 %ptrtoint6585, 7
  %entry-point-addr6587 = inttoptr i64 %entry-point-addr-uint6586 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6588 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6587, align 8
  %1932 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6588({}* %G117417.0, i64 2, {}* %G117418.0, {}* %G117419.0, {}* null, {}* null)
          to label %tag419 unwind label %cleanup-lpad.loopexit

normal-dest6608:                                  ; preds = %tag744
  %1933 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1934 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1935 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1936 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 506), align 16
  %ptrtoint6609 = ptrtoint {}* %511 to i64
  %entry-point-addr-uint6610 = add i64 %ptrtoint6609, 7
  %entry-point-addr6611 = inttoptr i64 %entry-point-addr-uint6610 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6612 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6611, align 8
  %1937 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6612({}* %511, i64 5, {}* %1933, {}* %1934, {}* %"closure->LAMBDA5936", {}* %1935, {}* %1936)
          to label %normal-dest6615 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6615:                                  ; preds = %normal-dest6608
  %.elt8317 = extractvalue { {}*, i64 } %1937, 0
  %.elt8319 = extractvalue { {}*, i64 } %1937, 1
  %cond7984 = icmp eq i64 %.elt8319, 0
  %1938 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119117.2 = select i1 %cond7984, {}* %1938, {}* %.elt8317
  br label %tag553

normal-dest6629:                                  ; preds = %tag746
  %.elt8941 = extractvalue { {}*, i64 } %514, 0
  %.elt8943 = extractvalue { {}*, i64 } %514, 1
  %cond8105 = icmp eq i64 %.elt8943, 0
  %1939 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117305.0 = select i1 %cond8105, {}* %1939, {}* %.elt8941
  %ptrtoint6635 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint6636 = add i64 %ptrtoint6635, 7
  %entry-point-addr6637 = inttoptr i64 %entry-point-addr-uint6636 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6638 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6637, align 8
  %1940 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6638({}* %15, i64 1, {}* %G117305.0, {}* null, {}* null, {}* null)
          to label %normal-dest6641 unwind label %cleanup-lpad.loopexit

normal-dest6641:                                  ; preds = %normal-dest6629
  %.elt8945 = extractvalue { {}*, i64 } %1940, 0
  %.elt8947 = extractvalue { {}*, i64 } %1940, 1
  %cond8106 = icmp eq i64 %.elt8947, 0
  %1941 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117303.0 = select i1 %cond8106, {}* %1941, {}* %.elt8945
  %ptrtoint6647 = ptrtoint {}* %G117300.0 to i64
  %entry-point-addr-uint6648 = add i64 %ptrtoint6647, 7
  %entry-point-addr6649 = inttoptr i64 %entry-point-addr-uint6648 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6650 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6649, align 8
  %1942 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6650({}* %G117300.0, i64 3, {}* %stream.0, {}* %X_FORMAT.0, {}* %G117303.0, {}* null)
          to label %tag248 unwind label %cleanup-lpad.loopexit

normal-dest6659:                                  ; preds = %maybe-more-tests4232
  %ptrtoint6660 = ptrtoint {}* %1402 to i64
  %entry-point-addr-uint6661 = add i64 %ptrtoint6660, 7
  %entry-point-addr6662 = inttoptr i64 %entry-point-addr-uint6661 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6663 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6662, align 8
  %1943 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6663({}* %1402, i64 1, {}* nonnull %"closure->LAMBDA4881", {}* null, {}* null, {}* null)
          to label %normal-dest6666 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6666:                                  ; preds = %normal-dest6659
  %.elt8440 = extractvalue { {}*, i64 } %1943, 0
  %.elt8442 = extractvalue { {}*, i64 } %1943, 1
  %cond8007 = icmp eq i64 %.elt8442, 0
  %1944 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118611.2 = select i1 %cond8007, {}* %1944, {}* %.elt8440
  br label %tag471

normal-dest6673:                                  ; preds = %maybe-more-tests3227
  %ptrtoint6674 = ptrtoint {}* %1176 to i64
  %entry-point-addr-uint6675 = add i64 %ptrtoint6674, 7
  %entry-point-addr6676 = inttoptr i64 %entry-point-addr-uint6675 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6677 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6676, align 8
  %1945 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6677({}* %1176, i64 1, {}* nonnull %vaarg906, {}* null, {}* null, {}* null)
          to label %normal-dest6680 unwind label %cleanup-lpad.loopexit

normal-dest6680:                                  ; preds = %normal-dest6673
  %.elt8953 = extractvalue { {}*, i64 } %1945, 0
  %.elt8955 = extractvalue { {}*, i64 } %1945, 1
  %cond8107 = icmp eq i64 %.elt8955, 0
  %1946 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117333.2 = select i1 %cond8107, {}* %1946, {}* %.elt8953
  br label %tag589

normal-dest6687:                                  ; preds = %maybe-more-tests2199
  %ptrtoint6688 = ptrtoint {}* %938 to i64
  %entry-point-addr-uint6689 = add i64 %ptrtoint6688, 7
  %entry-point-addr6690 = inttoptr i64 %entry-point-addr-uint6689 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6691 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6690, align 8
  %1947 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6691({}* %938, i64 1, {}* nonnull %"closure->LAMBDA6825", {}* null, {}* null, {}* null)
          to label %normal-dest6694 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6694:                                  ; preds = %normal-dest6687
  %.elt9701 = extractvalue { {}*, i64 } %1947, 0
  %.elt9703 = extractvalue { {}*, i64 } %1947, 1
  %cond8247 = icmp eq i64 %.elt9703, 0
  %1948 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119179.1 = select i1 %cond8247, {}* %1948, {}* %.elt9701
  br label %tag487

normal-dest6701:                                  ; preds = %tag750
  %1949 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %1950 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %1951 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %1952 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 579), align 8
  %ptrtoint6702 = ptrtoint {}* %516 to i64
  %entry-point-addr-uint6703 = add i64 %ptrtoint6702, 7
  %entry-point-addr6704 = inttoptr i64 %entry-point-addr-uint6703 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6705 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6704, align 8
  %1953 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6705({}* %516, i64 5, {}* %1949, {}* %1950, {}* %vaarg906, {}* %1951, {}* %1952)
          to label %normal-dest6708 unwind label %cleanup-lpad.loopexit

normal-dest6708:                                  ; preds = %normal-dest6701
  %.elt8781 = extractvalue { {}*, i64 } %1953, 0
  %.elt8783 = extractvalue { {}*, i64 } %1953, 1
  %cond8070 = icmp eq i64 %.elt8783, 0
  %1954 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117512.2 = select i1 %cond8070, {}* %1954, {}* %.elt8781
  br label %tag565

normal-dest6726:                                  ; preds = %maybe-more-tests5145
  %ptrtoint6727 = ptrtoint {}* %1618 to i64
  %entry-point-addr-uint6728 = add i64 %ptrtoint6727, 7
  %entry-point-addr6729 = inttoptr i64 %entry-point-addr-uint6728 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6730 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6729, align 8
  %1955 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6730({}* %1618, i64 1, {}* nonnull %"closure->LAMBDA7791", {}* null, {}* null, {}* null)
          to label %normal-dest6733 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6733:                                  ; preds = %normal-dest6726
  %.elt8518 = extractvalue { {}*, i64 } %1955, 0
  %.elt8520 = extractvalue { {}*, i64 } %1955, 1
  %cond8021 = icmp eq i64 %.elt8520, 0
  %1956 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118172.2 = select i1 %cond8021, {}* %1956, {}* %.elt8518
  br label %tag284

header-check-br6739:                              ; preds = %header-check-br4303
  %.off10408 = add i64 %1416, -1001
  %1957 = icmp ult i64 %.off10408, 5
  br i1 %1957, label %maybe-more-tests6747, label %tag684

maybe-more-tests6747:                             ; preds = %header-check-br6739
  %1958 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %1959 = invoke {}* @cc_safe_fdefinition({}* %1958)
          to label %normal-dest5593 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6755:                                  ; preds = %tag757
  %1960 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %1961 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 483), align 8
  %1962 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 228), align 16
  %1963 = invoke {}* @cc_safe_fdefinition({}* %1962)
          to label %normal-dest6757 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6757:                                  ; preds = %normal-dest6755
  %ptrtoint6758 = ptrtoint {}* %1963 to i64
  %entry-point-addr-uint6759 = add i64 %ptrtoint6758, 7
  %entry-point-addr6760 = inttoptr i64 %entry-point-addr-uint6759 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6761 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6760, align 8
  %1964 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6761({}* %1963, i64 1, {}* %spalten-breite.0, {}* null, {}* null, {}* null)
          to label %normal-dest6764 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6764:                                  ; preds = %normal-dest6757
  %.elt8285 = extractvalue { {}*, i64 } %1964, 0
  %.elt8287 = extractvalue { {}*, i64 } %1964, 1
  %cond7977 = icmp eq i64 %.elt8287, 0
  %1965 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119365.0 = select i1 %cond7977, {}* %1965, {}* %.elt8285
  %1966 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 484), align 16
  %ptrtoint6770 = ptrtoint {}* %521 to i64
  %entry-point-addr-uint6771 = add i64 %ptrtoint6770, 7
  %entry-point-addr6772 = inttoptr i64 %entry-point-addr-uint6771 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6773 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6772, align 8
  %1967 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6773({}* %521, i64 4, {}* %1960, {}* %1961, {}* %G119365.0, {}* %1966)
          to label %normal-dest6776 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6776:                                  ; preds = %normal-dest6764
  %.elt8289 = extractvalue { {}*, i64 } %1967, 0
  %.elt8291 = extractvalue { {}*, i64 } %1967, 1
  %cond7978 = icmp eq i64 %.elt8291, 0
  %1968 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %X_FORMAT.0 = select i1 %cond7978, {}* %1968, {}* %.elt8289
  %1969 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 215), align 8
  %1970 = invoke {}* @cc_safe_fdefinition({}* %1969)
          to label %normal-dest6783 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6783:                                  ; preds = %normal-dest6776
  %1971 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %1972 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 485), align 8
  %1973 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 228), align 16
  %1974 = invoke {}* @cc_safe_fdefinition({}* %1973)
          to label %normal-dest6785 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6785:                                  ; preds = %normal-dest6783
  %ptrtoint6786 = ptrtoint {}* %1974 to i64
  %entry-point-addr-uint6787 = add i64 %ptrtoint6786, 7
  %entry-point-addr6788 = inttoptr i64 %entry-point-addr-uint6787 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6789 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6788, align 8
  %1975 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6789({}* %1974, i64 1, {}* %.zeilen-breite.2, {}* null, {}* null, {}* null)
          to label %normal-dest6792 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6792:                                  ; preds = %normal-dest6785
  %.elt8293 = extractvalue { {}*, i64 } %1975, 0
  %.elt8295 = extractvalue { {}*, i64 } %1975, 1
  %cond7979 = icmp eq i64 %.elt8295, 0
  %1976 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119356.0 = select i1 %cond7979, {}* %1976, {}* %.elt8293
  %1977 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 486), align 16
  %ptrtoint6798 = ptrtoint {}* %1970 to i64
  %entry-point-addr-uint6799 = add i64 %ptrtoint6798, 7
  %entry-point-addr6800 = inttoptr i64 %entry-point-addr-uint6799 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6801 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6800, align 8
  %1978 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6801({}* %1970, i64 4, {}* %1971, {}* %1972, {}* %G119356.0, {}* %1977)
          to label %normal-dest6804 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6804:                                  ; preds = %normal-dest6792
  %.elt8297 = extractvalue { {}*, i64 } %1978, 0
  %.elt8299 = extractvalue { {}*, i64 } %1978, 1
  %cond7980 = icmp eq i64 %.elt8299, 0
  %1979 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %Y_FORMAT.0 = select i1 %cond7980, {}* %1979, {}* %.elt8297
  %1980 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 353), align 8
  %1981 = invoke {}* @cc_safe_fdefinition({}* %1980)
          to label %normal-dest6811 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6811:                                  ; preds = %normal-dest6804
  %1982 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %1983 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 357), align 8
  %ptrtoint6812 = ptrtoint {}* %1981 to i64
  %entry-point-addr-uint6813 = add i64 %ptrtoint6812, 7
  %entry-point-addr6814 = inttoptr i64 %entry-point-addr-uint6813 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6815 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6814, align 8
  %1984 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6815({}* %1981, i64 4, {}* %1982, {}* %spalten-breite.0, {}* %1983, {}* inttoptr (i64 370 to {}*))
          to label %normal-dest6818 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6818:                                  ; preds = %normal-dest6811
  %.elt8301 = extractvalue { {}*, i64 } %1984, 0
  %.elt8303 = extractvalue { {}*, i64 } %1984, 1
  %cond7981 = icmp eq i64 %.elt8303, 0
  %1985 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %X_PUNKTE_STRING.0 = select i1 %cond7981, {}* %1985, {}* %.elt8301
  %1986 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA6825" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %1986, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.25", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.25^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest6824 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6824:                                  ; preds = %normal-dest6818
  %1987 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %1988 = icmp eq {}* %stream.0, %1987
  %.val10287 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119259.0 = select i1 %1988, {}* %1987, {}* %.val10287
  %1989 = icmp eq {}* %G119259.0, %.val10287
  br i1 %1989, label %tag2, label %tag862

normal-dest6839:                                  ; preds = %tag762
  %.elt8664 = extractvalue { {}*, i64 } %522, 0
  %.elt8666 = extractvalue { {}*, i64 } %522, 1
  %cond8048 = icmp eq i64 %.elt8666, 0
  %1990 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117576.0 = select i1 %cond8048, {}* %1990, {}* %.elt8664
  %ptrtoint6845 = ptrtoint {}* %2113 to i64
  %entry-point-addr-uint6846 = add i64 %ptrtoint6845, 7
  %entry-point-addr6847 = inttoptr i64 %entry-point-addr-uint6846 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6848 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6847, align 8
  %1991 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6848({}* %2113, i64 1, {}* %G117576.0, {}* null, {}* null, {}* null)
          to label %normal-dest6851 unwind label %cleanup-lpad.loopexit

normal-dest6851:                                  ; preds = %normal-dest6839
  %.elt8668 = extractvalue { {}*, i64 } %1991, 0
  %.elt8670 = extractvalue { {}*, i64 } %1991, 1
  %cond8049 = icmp eq i64 %.elt8670, 0
  %1992 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117574.0 = select i1 %cond8049, {}* %1992, {}* %.elt8668
  %ptrtoint6857 = ptrtoint {}* %G117571.0 to i64
  %entry-point-addr-uint6858 = add i64 %ptrtoint6857, 7
  %entry-point-addr6859 = inttoptr i64 %entry-point-addr-uint6858 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6860 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6859, align 8
  %1993 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6860({}* %G117571.0, i64 3, {}* %567, {}* %X_FORMAT.0, {}* %G117574.0, {}* null)
          to label %tag248 unwind label %cleanup-lpad.loopexit

normal-dest6869:                                  ; preds = %tag763
  %ptrtoint6870 = ptrtoint {}* %524 to i64
  %entry-point-addr-uint6871 = add i64 %ptrtoint6870, 7
  %entry-point-addr6872 = inttoptr i64 %entry-point-addr-uint6871 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6873 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6872, align 8
  %1994 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6873({}* %524, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest6876 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6876:                                  ; preds = %normal-dest6869
  %.elt9402 = extractvalue { {}*, i64 } %1994, 0
  %.elt9404 = extractvalue { {}*, i64 } %1994, 1
  %cond8192 = icmp eq i64 %.elt9404, 0
  %1995 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT1165676877.0 = select i1 %cond8192, {}* %1995, {}* %.elt9402
  %ptrtoint6884 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only6885 = and i64 %ptrtoint6884, 7
  %test6886 = icmp eq i64 %tag-only6885, 1
  br i1 %test6886, label %header-check-br6883, label %tag378

header-check-br6883:                              ; preds = %normal-dest6876
  %irc-bit-cast6887 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep6888 = getelementptr inbounds i8, i8* %irc-bit-cast6887, i64 -9
  %irc-bit-cast6889 = bitcast i8* %gep6888 to i64*
  %1996 = load i64, i64* %irc-bit-cast6889, align 8
  %.off10469 = add i64 %1996, -913
  %1997 = icmp ult i64 %.off10469, 85
  br i1 %1997, label %tag840, label %header-check-br2474

normal-dest6893:                                  ; preds = %tag765
  %ptrtoint6894 = ptrtoint {}* %526 to i64
  %entry-point-addr-uint6895 = add i64 %ptrtoint6894, 7
  %entry-point-addr6896 = inttoptr i64 %entry-point-addr-uint6895 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6897 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6896, align 8
  %1998 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6897({}* %526, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest6900 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6900:                                  ; preds = %normal-dest6893
  %.elt9242 = extractvalue { {}*, i64 } %1998, 0
  %.elt9244 = extractvalue { {}*, i64 } %1998, 1
  %cond8162 = icmp eq i64 %.elt9244, 0
  %1999 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116638.0 = select i1 %cond8162, {}* %1999, {}* %.elt9242
  %ptrtoint6907 = ptrtoint {}* %"closure->LAMBDA2833" to i64
  %tag-only6908 = and i64 %ptrtoint6907, 7
  %test6909 = icmp eq i64 %tag-only6908, 1
  br i1 %test6909, label %header-check-br6906, label %tag298

header-check-br6906:                              ; preds = %normal-dest6900
  %irc-bit-cast6910 = bitcast {}* %"closure->LAMBDA2833" to i8*
  %gep6911 = getelementptr inbounds i8, i8* %irc-bit-cast6910, i64 -9
  %irc-bit-cast6912 = bitcast i8* %gep6911 to i64*
  %2000 = load i64, i64* %irc-bit-cast6912, align 8
  %.off10447 = add i64 %2000, -913
  %2001 = icmp ult i64 %.off10447, 85
  br i1 %2001, label %tag133, label %header-check-br3808

normal-dest6915:                                  ; preds = %tag766
  %2002 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %2003 = icmp eq {}* %stream.0, %2002
  %.val10320 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118412.0 = select i1 %2003, {}* %2002, {}* %.val10320
  %2004 = icmp eq {}* %G118412.0, %.val10320
  br i1 %2004, label %tag797, label %tag119

header-check-br6921:                              ; preds = %header-check-br7599
  %.off10394 = add i64 %2148, -1001
  %2005 = icmp ult i64 %.off10394, 5
  br i1 %2005, label %maybe-more-tests6929, label %tag348

maybe-more-tests6929:                             ; preds = %header-check-br6921
  %2006 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2007 = invoke {}* @cc_safe_fdefinition({}* %2006)
          to label %normal-dest3481 unwind label %cleanup-lpad.loopexit

header-check-br6936:                              ; preds = %header-check-br3242
  %.off10506 = add i64 %1179, -1001
  %2008 = icmp ult i64 %.off10506, 5
  br i1 %2008, label %maybe-more-tests6944, label %tag672

maybe-more-tests6944:                             ; preds = %header-check-br6936
  %2009 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2010 = invoke {}* @cc_safe_fdefinition({}* %2009)
          to label %normal-dest4674 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest6946:                                  ; preds = %tag776
  %2011 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %2012 = invoke {}* @cc_safe_fdefinition({}* %2011)
          to label %normal-dest6948 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6948:                                  ; preds = %normal-dest6946
  %ptrtoint6949 = ptrtoint {}* %2012 to i64
  %entry-point-addr-uint6950 = add i64 %ptrtoint6949, 7
  %entry-point-addr6951 = inttoptr i64 %entry-point-addr-uint6950 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6952 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6951, align 8
  %2013 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6952({}* %2012, i64 2, {}* %Y_ELEMENT.0, {}* %.zeilen-breite.2, {}* null, {}* null)
          to label %normal-dest6955 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6955:                                  ; preds = %normal-dest6948
  %.elt9066 = extractvalue { {}*, i64 } %2013, 0
  %.elt9068 = extractvalue { {}*, i64 } %2013, 1
  %cond8129 = icmp eq i64 %.elt9068, 0
  %2014 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117808.0 = select i1 %cond8129, {}* %2014, {}* %.elt9066
  %ptrtoint6961 = ptrtoint {}* %534 to i64
  %entry-point-addr-uint6962 = add i64 %ptrtoint6961, 7
  %entry-point-addr6963 = inttoptr i64 %entry-point-addr-uint6962 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6964 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6963, align 8
  %2015 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6964({}* %534, i64 1, {}* %G117808.0, {}* null, {}* null, {}* null)
          to label %normal-dest6967 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6967:                                  ; preds = %normal-dest6955
  %.elt9070 = extractvalue { {}*, i64 } %2015, 0
  %.elt9072 = extractvalue { {}*, i64 } %2015, 1
  %cond8130 = icmp eq i64 %.elt9072, 0
  %2016 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117806.0 = select i1 %cond8130, {}* %2016, {}* %.elt9070
  %ptrtoint6973 = ptrtoint {}* %G117803.0 to i64
  %entry-point-addr-uint6974 = add i64 %ptrtoint6973, 7
  %entry-point-addr6975 = inttoptr i64 %entry-point-addr-uint6974 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6976 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6975, align 8
  %2017 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6976({}* %G117803.0, i64 3, {}* %G116660.0, {}* %Y_FORMAT.0, {}* %G117806.0, {}* null)
          to label %normal-dest6979 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6979:                                  ; preds = %normal-dest6967
  %2018 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %2019 = invoke {}* @cc_safe_fdefinition({}* %2018)
          to label %normal-dest6985 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest6985:                                  ; preds = %normal-dest6979
  %ptrtoint6986 = ptrtoint {}* %2019 to i64
  %entry-point-addr-uint6987 = add i64 %ptrtoint6986, 7
  %entry-point-addr6988 = inttoptr i64 %entry-point-addr-uint6987 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point6989 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr6988, align 8
  %2020 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point6989({}* %2019, i64 1, {}* %G116660.0, {}* null, {}* null, {}* null)
          to label %tag397 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7002:                                  ; preds = %tag784
  %2021 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 540), align 16
  %2022 = invoke {}* @cc_safe_fdefinition({}* %2021)
          to label %normal-dest7004 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7004:                                  ; preds = %normal-dest7002
  %2023 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 542), align 16
  %2024 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint7005 = ptrtoint {}* %2022 to i64
  %entry-point-addr-uint7006 = add i64 %ptrtoint7005, 7
  %entry-point-addr7007 = inttoptr i64 %entry-point-addr-uint7006 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7008 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7007, align 8
  %2025 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7008({}* %2022, i64 6, {}* %2023, {}* %spalten-breite.0, {}* %2024, {}* %2024, {}* %2024, {}* null)
          to label %normal-dest7011 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7011:                                  ; preds = %normal-dest7004
  %.elt8566 = extractvalue { {}*, i64 } %2025, 0
  %.elt8568 = extractvalue { {}*, i64 } %2025, 1
  %cond8030 = icmp eq i64 %.elt8568, 0
  %2026 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %RESULT116625.0 = select i1 %cond8030, {}* %2026, {}* %.elt8566
  %2027 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 544), align 16
  %2028 = invoke {}* @cc_safe_fdefinition({}* %2027)
          to label %normal-dest7018 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7018:                                  ; preds = %normal-dest7011
  %2029 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %ptrtoint7019 = ptrtoint {}* %2028 to i64
  %entry-point-addr-uint7020 = add i64 %ptrtoint7019, 7
  %entry-point-addr7021 = inttoptr i64 %entry-point-addr-uint7020 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7022 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7021, align 8
  %2030 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7022({}* %2028, i64 4, {}* %RESULT116625.0, {}* inttoptr (i64 362 to {}*), {}* null, {}* %2029)
          to label %normal-dest7025 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7025:                                  ; preds = %normal-dest7018
  %ptrtoint7030 = ptrtoint {}* %539 to i64
  %entry-point-addr-uint7031 = add i64 %ptrtoint7030, 7
  %entry-point-addr7032 = inttoptr i64 %entry-point-addr-uint7031 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7033 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7032, align 8
  %2031 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7033({}* %539, i64 1, {}* %RESULT116625.0, {}* null, {}* null, {}* null)
          to label %normal-dest7036 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7036:                                  ; preds = %normal-dest7025
  %.elt8574 = extractvalue { {}*, i64 } %2031, 0
  %.elt8576 = extractvalue { {}*, i64 } %2031, 1
  %cond8031 = icmp eq i64 %.elt8576, 0
  %2032 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118090.0 = select i1 %cond8031, {}* %2032, {}* %.elt8574
  %ptrtoint7042 = ptrtoint {}* %G118087.0 to i64
  %entry-point-addr-uint7043 = add i64 %ptrtoint7042, 7
  %entry-point-addr7044 = inttoptr i64 %entry-point-addr-uint7043 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7045 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7044, align 8
  %2033 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7045({}* %G118087.0, i64 3, {}* %OUT116604.0, {}* %X_FORMAT.0, {}* %G118090.0, {}* null)
          to label %tag859 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7054:                                  ; preds = %maybe-more-tests1531
  %ptrtoint7055 = ptrtoint {}* %796 to i64
  %entry-point-addr-uint7056 = add i64 %ptrtoint7055, 7
  %entry-point-addr7057 = inttoptr i64 %entry-point-addr-uint7056 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7058 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7057, align 8
  %2034 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7058({}* %796, i64 1, {}* nonnull %"closure->LAMBDA7659", {}* null, {}* null, {}* null)
          to label %normal-dest7061 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7061:                                  ; preds = %normal-dest7054
  %.elt9773 = extractvalue { {}*, i64 } %2034, 0
  %.elt9775 = extractvalue { {}*, i64 } %2034, 1
  %cond8260 = icmp eq i64 %.elt9775, 0
  %2035 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119371.2 = select i1 %cond8260, {}* %2035, {}* %.elt9773
  br label %tag795

normal-dest7068:                                  ; preds = %maybe-more-tests7849
  %ptrtoint7069 = ptrtoint {}* %2206 to i64
  %entry-point-addr-uint7070 = add i64 %ptrtoint7069, 7
  %entry-point-addr7071 = inttoptr i64 %entry-point-addr-uint7070 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7072 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7071, align 8
  %2036 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7072({}* %2206, i64 1, {}* nonnull %"closure->LAMBDA4881", {}* null, {}* null, {}* null)
          to label %normal-dest7075 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7075:                                  ; preds = %normal-dest7068
  %.elt8384 = extractvalue { {}*, i64 } %2036, 0
  %.elt8386 = extractvalue { {}*, i64 } %2036, 1
  %cond7996 = icmp eq i64 %.elt8386, 0
  %2037 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118676.2 = select i1 %cond7996, {}* %2037, {}* %.elt8384
  br label %tag199

normal-dest7082:                                  ; preds = %maybe-more-tests2793
  %ptrtoint7083 = ptrtoint {}* %1062 to i64
  %entry-point-addr-uint7084 = add i64 %ptrtoint7083, 7
  %entry-point-addr7085 = inttoptr i64 %entry-point-addr-uint7084 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7086 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7085, align 8
  %2038 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7086({}* %1062, i64 1, {}* nonnull %"closure->LAMBDA7659", {}* null, {}* null, {}* null)
          to label %normal-dest7089 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7089:                                  ; preds = %normal-dest7082
  %.elt9761 = extractvalue { {}*, i64 } %2038, 0
  %.elt9763 = extractvalue { {}*, i64 } %2038, 1
  %cond8258 = icmp eq i64 %.elt9763, 0
  %2039 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119386.2 = select i1 %cond8258, {}* %2039, {}* %.elt9761
  br label %tag878

header-check-br7095:                              ; preds = %header-check-br1094
  %.off10442 = add i64 %693, -1001
  %2040 = icmp ult i64 %.off10442, 5
  br i1 %2040, label %maybe-more-tests7103, label %tag563

maybe-more-tests7103:                             ; preds = %header-check-br7095
  %2041 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2042 = invoke {}* @cc_safe_fdefinition({}* %2041)
          to label %normal-dest7897 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7106:                                  ; preds = %tag794
  %2043 = invoke float @from_object_float({}* %.zeilen-breite.2)
          to label %normal-dest7107 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7107:                                  ; preds = %normal-dest7106
  %2044 = fsub float %541, %2043
  %2045 = invoke {}* @to_object_float(float %2044)
          to label %tag852 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7121:                                  ; preds = %tag796
  %2046 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %2047 = invoke {}* @cc_safe_fdefinition({}* %2046)
          to label %normal-dest7123 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7123:                                  ; preds = %normal-dest7121
  %ptrtoint7124 = ptrtoint {}* %2047 to i64
  %entry-point-addr-uint7125 = add i64 %ptrtoint7124, 7
  %entry-point-addr7126 = inttoptr i64 %entry-point-addr-uint7125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7126, align 8
  %2048 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7127({}* %2047, i64 2, {}* %Y_ELEMENT.0, {}* %.zeilen-breite.2, {}* null, {}* null)
          to label %normal-dest7130 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7130:                                  ; preds = %normal-dest7123
  %.elt9118 = extractvalue { {}*, i64 } %2048, 0
  %.elt9120 = extractvalue { {}*, i64 } %2048, 1
  %cond8139 = icmp eq i64 %.elt9120, 0
  %2049 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117751.0 = select i1 %cond8139, {}* %2049, {}* %.elt9118
  %ptrtoint7136 = ptrtoint {}* %544 to i64
  %entry-point-addr-uint7137 = add i64 %ptrtoint7136, 7
  %entry-point-addr7138 = inttoptr i64 %entry-point-addr-uint7137 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7139 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7138, align 8
  %2050 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7139({}* %544, i64 1, {}* %G117751.0, {}* null, {}* null, {}* null)
          to label %normal-dest7142 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7142:                                  ; preds = %normal-dest7130
  %.elt9122 = extractvalue { {}*, i64 } %2050, 0
  %.elt9124 = extractvalue { {}*, i64 } %2050, 1
  %cond8140 = icmp eq i64 %.elt9124, 0
  %2051 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117749.0 = select i1 %cond8140, {}* %2051, {}* %.elt9122
  %ptrtoint7148 = ptrtoint {}* %G117746.0 to i64
  %entry-point-addr-uint7149 = add i64 %ptrtoint7148, 7
  %entry-point-addr7150 = inttoptr i64 %entry-point-addr-uint7149 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7151 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7150, align 8
  %2052 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7151({}* %G117746.0, i64 3, {}* %stream.0, {}* %Y_FORMAT.0, {}* %G117749.0, {}* null)
          to label %tag397 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7166:                                  ; preds = %tag798
  %ptrtoint7167 = ptrtoint {}* %548 to i64
  %entry-point-addr-uint7168 = add i64 %ptrtoint7167, 7
  %entry-point-addr7169 = inttoptr i64 %entry-point-addr-uint7168 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7170 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7169, align 8
  %2053 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7170({}* %548, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest7173 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7173:                                  ; preds = %normal-dest7166
  %.elt9086 = extractvalue { {}*, i64 } %2053, 0
  %.elt9088 = extractvalue { {}*, i64 } %2053, 1
  %cond8132 = icmp eq i64 %.elt9088, 0
  %2054 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117795.0 = select i1 %cond8132, {}* %2054, {}* %.elt9086
  %2055 = icmp eq {}* %G117795.0, %2054
  br i1 %2055, label %tag522, label %tag661

normal-dest7180:                                  ; preds = %tag799
  %2056 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %2057 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %2058 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %2059 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 499), align 8
  %ptrtoint7181 = ptrtoint {}* %550 to i64
  %entry-point-addr-uint7182 = add i64 %ptrtoint7181, 7
  %entry-point-addr7183 = inttoptr i64 %entry-point-addr-uint7182 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7184 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7183, align 8
  %2060 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7184({}* %550, i64 5, {}* %2056, {}* %2057, {}* %"closure->LAMBDA6825", {}* %2058, {}* %2059)
          to label %normal-dest7187 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7187:                                  ; preds = %normal-dest7180
  %.elt9689 = extractvalue { {}*, i64 } %2060, 0
  %.elt9691 = extractvalue { {}*, i64 } %2060, 1
  %cond8245 = icmp eq i64 %.elt9691, 0
  %2061 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119179.2 = select i1 %cond8245, {}* %2061, {}* %.elt9689
  br label %tag487

normal-dest7194:                                  ; preds = %maybe-more-tests3848
  %ptrtoint7195 = ptrtoint {}* %1322 to i64
  %entry-point-addr-uint7196 = add i64 %ptrtoint7195, 7
  %entry-point-addr7197 = inttoptr i64 %entry-point-addr-uint7196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7197, align 8
  %2062 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7198({}* %1322, i64 1, {}* nonnull %"closure->LAMBDA5775", {}* null, {}* null, {}* null)
          to label %normal-dest7201 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7201:                                  ; preds = %normal-dest7194
  %.elt9458 = extractvalue { {}*, i64 } %2062, 0
  %.elt9460 = extractvalue { {}*, i64 } %2062, 1
  %cond8202 = icmp eq i64 %.elt9460, 0
  %2063 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118851.2 = select i1 %cond8202, {}* %2063, {}* %.elt9458
  br label %tag525

normal-dest7208:                                  ; preds = %tag804
  %2064 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %2065 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %2066 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %2067 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 336), align 16
  %ptrtoint4363 = ptrtoint {}* %552 to i64
  %entry-point-addr-uint4364 = add i64 %ptrtoint4363, 7
  %entry-point-addr4365 = inttoptr i64 %entry-point-addr-uint4364 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4366 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4365, align 8
  %2068 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4366({}* %552, i64 5, {}* %2064, {}* %2065, {}* %.zeilen-breite.2, {}* %2066, {}* %2067)
          to label %normal-dest4369 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7210:                                  ; preds = %maybe-more-tests5869
  %ptrtoint7211 = ptrtoint {}* %1757 to i64
  %entry-point-addr-uint7212 = add i64 %ptrtoint7211, 7
  %entry-point-addr7213 = inttoptr i64 %entry-point-addr-uint7212 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7214 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7213, align 8
  %2069 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7214({}* %1757, i64 1, {}* nonnull %"closure->LAMBDA6825", {}* null, {}* null, {}* null)
          to label %normal-dest7217 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7217:                                  ; preds = %normal-dest7210
  %.elt9717 = extractvalue { {}*, i64 } %2069, 0
  %.elt9719 = extractvalue { {}*, i64 } %2069, 1
  %cond8250 = icmp eq i64 %.elt9719, 0
  %2070 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119159.2 = select i1 %cond8250, {}* %2070, {}* %.elt9717
  br label %tag886

normal-dest7224:                                  ; preds = %maybe-more-tests4953
  %ptrtoint7225 = ptrtoint {}* %1572 to i64
  %entry-point-addr-uint7226 = add i64 %ptrtoint7225, 7
  %entry-point-addr7227 = inttoptr i64 %entry-point-addr-uint7226 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7228 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7227, align 8
  %2071 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7228({}* %1572, i64 1, {}* nonnull %"closure->LAMBDA5775", {}* null, {}* null, {}* null)
          to label %normal-dest7231 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7231:                                  ; preds = %normal-dest7224
  %.elt9506 = extractvalue { {}*, i64 } %2071, 0
  %.elt9508 = extractvalue { {}*, i64 } %2071, 1
  %cond8212 = icmp eq i64 %.elt9508, 0
  %2072 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118794.2 = select i1 %cond8212, {}* %2072, {}* %.elt9506
  br label %tag689

normal-dest7243:                                  ; preds = %tag808
  %.elt8801 = extractvalue { {}*, i64 } %553, 0
  %.elt8803 = extractvalue { {}*, i64 } %553, 1
  %cond8075 = icmp eq i64 %.elt8803, 0
  %2073 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117484.0 = select i1 %cond8075, {}* %2073, {}* %.elt8801
  %ptrtoint7249 = ptrtoint {}* %330 to i64
  %entry-point-addr-uint7250 = add i64 %ptrtoint7249, 7
  %entry-point-addr7251 = inttoptr i64 %entry-point-addr-uint7250 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7252 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7251, align 8
  %2074 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7252({}* %330, i64 1, {}* %G117484.0, {}* null, {}* null, {}* null)
          to label %normal-dest7255 unwind label %cleanup-lpad.loopexit

normal-dest7255:                                  ; preds = %normal-dest7243
  %.elt8805 = extractvalue { {}*, i64 } %2074, 0
  %.elt8807 = extractvalue { {}*, i64 } %2074, 1
  %cond8076 = icmp eq i64 %.elt8807, 0
  %2075 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117482.0 = select i1 %cond8076, {}* %2075, {}* %.elt8805
  %ptrtoint7261 = ptrtoint {}* %G117479.0 to i64
  %entry-point-addr-uint7262 = add i64 %ptrtoint7261, 7
  %entry-point-addr7263 = inttoptr i64 %entry-point-addr-uint7262 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7264 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7263, align 8
  %2076 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7264({}* %G117479.0, i64 3, {}* %G116687.0, {}* %X_FORMAT.0, {}* %G117482.0, {}* null)
          to label %normal-dest7267 unwind label %cleanup-lpad.loopexit

normal-dest7267:                                  ; preds = %normal-dest7255
  %2077 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %2078 = invoke {}* @cc_safe_fdefinition({}* %2077)
          to label %normal-dest7273 unwind label %cleanup-lpad.loopexit

normal-dest7273:                                  ; preds = %normal-dest7267
  %ptrtoint7274 = ptrtoint {}* %2078 to i64
  %entry-point-addr-uint7275 = add i64 %ptrtoint7274, 7
  %entry-point-addr7276 = inttoptr i64 %entry-point-addr-uint7275 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7277 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7276, align 8
  %2079 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7277({}* %2078, i64 1, {}* %G116687.0, {}* null, {}* null, {}* null)
          to label %tag248 unwind label %cleanup-lpad.loopexit

normal-dest7293:                                  ; preds = %tag810
  %2080 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %2081 = invoke {}* @cc_safe_fdefinition({}* %2080)
          to label %normal-dest7295 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7295:                                  ; preds = %normal-dest7293
  %ptrtoint7296 = ptrtoint {}* %2081 to i64
  %entry-point-addr-uint7297 = add i64 %ptrtoint7296, 7
  %entry-point-addr7298 = inttoptr i64 %entry-point-addr-uint7297 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7299 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7298, align 8
  %2082 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7299({}* %2081, i64 2, {}* %Y_ELEMENT.0, {}* %.zeilen-breite.2, {}* null, {}* null)
          to label %normal-dest7302 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7302:                                  ; preds = %normal-dest7295
  %.elt9098 = extractvalue { {}*, i64 } %2082, 0
  %.elt9100 = extractvalue { {}*, i64 } %2082, 1
  %cond8135 = icmp eq i64 %.elt9100, 0
  %2083 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117774.0 = select i1 %cond8135, {}* %2083, {}* %.elt9098
  %ptrtoint7308 = ptrtoint {}* %555 to i64
  %entry-point-addr-uint7309 = add i64 %ptrtoint7308, 7
  %entry-point-addr7310 = inttoptr i64 %entry-point-addr-uint7309 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7311 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7310, align 8
  %2084 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7311({}* %555, i64 1, {}* %G117774.0, {}* null, {}* null, {}* null)
          to label %normal-dest7314 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7314:                                  ; preds = %normal-dest7302
  %.elt9102 = extractvalue { {}*, i64 } %2084, 0
  %.elt9104 = extractvalue { {}*, i64 } %2084, 1
  %cond8136 = icmp eq i64 %.elt9104, 0
  %2085 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117772.0 = select i1 %cond8136, {}* %2085, {}* %.elt9102
  %ptrtoint7320 = ptrtoint {}* %G117769.0 to i64
  %entry-point-addr-uint7321 = add i64 %ptrtoint7320, 7
  %entry-point-addr7322 = inttoptr i64 %entry-point-addr-uint7321 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7323 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7322, align 8
  %2086 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7323({}* %G117769.0, i64 3, {}* %OUT1166495789.0, {}* %Y_FORMAT.0, {}* %G117772.0, {}* null)
          to label %tag397 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7332:                                  ; preds = %tag811
  %ptrtoint7333 = ptrtoint {}* %557 to i64
  %entry-point-addr-uint7334 = add i64 %ptrtoint7333, 7
  %entry-point-addr7335 = inttoptr i64 %entry-point-addr-uint7334 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7336 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7335, align 8
  %2087 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7336({}* %557, i64 1, {}* %234, {}* null, {}* null, {}* null)
          to label %normal-dest7339 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest7339:                                  ; preds = %normal-dest7332
  %.elt8333 = extractvalue { {}*, i64 } %2087, 0
  %.elt8335 = extractvalue { {}*, i64 } %2087, 1
  %cond7986 = icmp eq i64 %.elt8335, 0
  %2088 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %LENGTH3508.2 = select i1 %cond7986, {}* %2088, {}* %.elt8333
  br label %tag580.outer.backedge

normal-dest7346:                                  ; preds = %tag812
  %2089 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %2090 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %2091 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %2092 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 514), align 16
  %ptrtoint7347 = ptrtoint {}* %559 to i64
  %entry-point-addr-uint7348 = add i64 %ptrtoint7347, 7
  %entry-point-addr7349 = inttoptr i64 %entry-point-addr-uint7348 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7350 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7349, align 8
  %2093 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7350({}* %559, i64 5, {}* %2089, {}* %2090, {}* %"closure->LAMBDA5775", {}* %2091, {}* %2092)
          to label %normal-dest7353 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7353:                                  ; preds = %normal-dest7346
  %.elt9470 = extractvalue { {}*, i64 } %2093, 0
  %.elt9472 = extractvalue { {}*, i64 } %2093, 1
  %cond8205 = icmp eq i64 %.elt9472, 0
  %2094 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118817.2 = select i1 %cond8205, {}* %2094, {}* %.elt9470
  br label %tag629

header-check-br7359:                              ; preds = %tag815
  %2095 = load i64, i64* %irc-bit-cast3711, align 8
  %.off10373 = add i64 %2095, -913
  %2096 = icmp ult i64 %.off10373, 85
  br i1 %2096, label %tag565, label %header-check-br4233

header-check-br7368:                              ; preds = %header-check-br4777
  %.off10498 = add i64 %1539, -1153
  %2097 = icmp ult i64 %.off10498, 149
  br i1 %2097, label %maybe-more-tests7376, label %tag872

maybe-more-tests7376:                             ; preds = %header-check-br7368
  %2098 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 338), align 16
  %2099 = invoke {}* @cc_safe_fdefinition({}* %2098)
          to label %normal-dest3984 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7378:                                  ; preds = %tag817
  %2100 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %2101 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %2102 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %2103 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 549), align 8
  %ptrtoint7379 = ptrtoint {}* %561 to i64
  %entry-point-addr-uint7380 = add i64 %ptrtoint7379, 7
  %entry-point-addr7381 = inttoptr i64 %entry-point-addr-uint7380 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7382 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7381, align 8
  %2104 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7382({}* %561, i64 5, {}* %2100, {}* %2101, {}* %"closure->LAMBDA2833", {}* %2102, {}* %2103)
          to label %normal-dest7385 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7385:                                  ; preds = %normal-dest7378
  %.elt9282 = extractvalue { {}*, i64 } %2104, 0
  %.elt9284 = extractvalue { {}*, i64 } %2104, 1
  %cond8169 = icmp eq i64 %.elt9284, 0
  %2105 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117948.2 = select i1 %cond8169, {}* %2105, {}* %.elt9282
  br label %tag751

normal-dest7408:                                  ; preds = %tag823
  %2106 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %2107 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %2108 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %2109 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 589), align 8
  %ptrtoint7409 = ptrtoint {}* %565 to i64
  %entry-point-addr-uint7410 = add i64 %ptrtoint7409, 7
  %entry-point-addr7411 = inttoptr i64 %entry-point-addr-uint7410 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7412 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7411, align 8
  %2110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7412({}* %565, i64 5, {}* %2106, {}* %2107, {}* %"closure->LAMBDA3275", {}* %2108, {}* %2109)
          to label %normal-dest7415 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7415:                                  ; preds = %normal-dest7408
  %.elt9030 = extractvalue { {}*, i64 } %2110, 0
  %.elt9032 = extractvalue { {}*, i64 } %2110, 1
  %cond8122 = icmp eq i64 %.elt9032, 0
  %2111 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117120.2 = select i1 %cond8122, {}* %2111, {}* %.elt9030
  br label %tag392

normal-dest7422:                                  ; preds = %tag824
  %2112 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %2113 = invoke {}* @cc_safe_fdefinition({}* %2112)
          to label %normal-dest7424 unwind label %cleanup-lpad.loopexit

normal-dest7424:                                  ; preds = %normal-dest7422
  %2114 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 403), align 8
  %2115 = invoke {}* @cc_safe_fdefinition({}* %2114)
          to label %normal-dest7426 unwind label %cleanup-lpad.loopexit

normal-dest7426:                                  ; preds = %normal-dest7424
  %2116 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 560), align 16
  %2117 = icmp eq {}* %tabellen-zugriff.0, %2116
  %.val10347 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.val10348 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117636.0 = select i1 %2117, {}* %.val10347, {}* %.val10348
  %2118 = icmp eq {}* %G117636.0, %.val10348
  br i1 %2118, label %tag770, label %tag109

normal-dest7440:                                  ; preds = %maybe-more-tests1301
  %ptrtoint7441 = ptrtoint {}* %732 to i64
  %entry-point-addr-uint7442 = add i64 %ptrtoint7441, 7
  %entry-point-addr7443 = inttoptr i64 %entry-point-addr-uint7442 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7444 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7443, align 8
  %2119 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7444({}* %732, i64 1, {}* nonnull %"closure->LAMBDA6825", {}* null, {}* null, {}* null)
          to label %normal-dest7447 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7447:                                  ; preds = %normal-dest7440
  %.elt9653 = extractvalue { {}*, i64 } %2119, 0
  %.elt9655 = extractvalue { {}*, i64 } %2119, 1
  %cond8238 = icmp eq i64 %.elt9655, 0
  %2120 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119238.2 = select i1 %cond8238, {}* %2120, {}* %.elt9653
  br label %tag566

header-check-br7453:                              ; preds = %header-check-br1997
  %.off10462 = add i64 %883, -1001
  %2121 = icmp ult i64 %.off10462, 5
  br i1 %2121, label %maybe-more-tests7461, label %tag416

maybe-more-tests7461:                             ; preds = %header-check-br7453
  %2122 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2123 = invoke {}* @cc_safe_fdefinition({}* %2122)
          to label %normal-dest6435 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7463:                                  ; preds = %tag829
  %2124 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 572), align 16
  %ptrtoint7464 = ptrtoint {}* %572 to i64
  %entry-point-addr-uint7465 = add i64 %ptrtoint7464, 7
  %entry-point-addr7466 = inttoptr i64 %entry-point-addr-uint7465 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7467 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7466, align 8
  %2125 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7467({}* %572, i64 4, {}* %G116682.2, {}* %spalten-breite.0, {}* %2124, {}* inttoptr (i64 370 to {}*))
          to label %normal-dest7470 unwind label %cleanup-lpad.loopexit

normal-dest7470:                                  ; preds = %normal-dest7463
  %.elt8660 = extractvalue { {}*, i64 } %2125, 0
  %.elt8662 = extractvalue { {}*, i64 } %2125, 1
  %cond8047 = icmp eq i64 %.elt8662, 0
  %2126 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117578.1 = select i1 %cond8047, {}* %2126, {}* %.elt8660
  br label %tag762

normal-dest7477:                                  ; preds = %tag831
  %ptrtoint7478 = ptrtoint {}* %577 to i64
  %entry-point-addr-uint7479 = add i64 %ptrtoint7478, 7
  %entry-point-addr7480 = inttoptr i64 %entry-point-addr-uint7479 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7481 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7480, align 8
  %2127 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7481({}* %577, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest7484 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7484:                                  ; preds = %normal-dest7477
  %.elt9266 = extractvalue { {}*, i64 } %2127, 0
  %.elt9268 = extractvalue { {}*, i64 } %2127, 1
  %cond8166 = icmp eq i64 %.elt9268, 0
  %2128 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT1166322200.0 = select i1 %cond8166, {}* %2128, {}* %.elt9266
  %ptrtoint7491 = ptrtoint {}* %"closure->LAMBDA2833" to i64
  %tag-only7492 = and i64 %ptrtoint7491, 7
  %test7493 = icmp eq i64 %tag-only7492, 1
  br i1 %test7493, label %header-check-br7490, label %tag76

header-check-br7490:                              ; preds = %normal-dest7484
  %irc-bit-cast7494 = bitcast {}* %"closure->LAMBDA2833" to i8*
  %gep7495 = getelementptr inbounds i8, i8* %irc-bit-cast7494, i64 -9
  %irc-bit-cast7496 = bitcast i8* %gep7495 to i64*
  %2129 = load i64, i64* %irc-bit-cast7496, align 8
  %.off10449 = add i64 %2129, -913
  %2130 = icmp ult i64 %.off10449, 85
  br i1 %2130, label %tag189, label %header-check-br1135

header-check-br7499:                              ; preds = %header-check-br7532
  %.off10362 = add i64 %2137, -1001
  %2131 = icmp ult i64 %.off10362, 5
  br i1 %2131, label %maybe-more-tests7507, label %tag296

maybe-more-tests7507:                             ; preds = %header-check-br7499
  %2132 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2133 = invoke {}* @cc_safe_fdefinition({}* %2132)
          to label %normal-dest3030 unwind label %cleanup-lpad.loopexit

normal-dest7514:                                  ; preds = %tag834
  %2134 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %2135 = invoke {}* @cc_safe_fdefinition({}* %2134)
          to label %normal-dest7520 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7520:                                  ; preds = %normal-dest7514
  %ptrtoint7521 = ptrtoint {}* %2135 to i64
  %entry-point-addr-uint7522 = add i64 %ptrtoint7521, 7
  %entry-point-addr7523 = inttoptr i64 %entry-point-addr-uint7522 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7524 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7523, align 8
  %2136 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7524({}* %2135, i64 1, {}* %G116573.0, {}* null, {}* null, {}* null)
          to label %tag766 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br7532:                              ; preds = %tag837
  %irc-bit-cast7536 = bitcast {}* %"closure->LAMBDA2695" to i8*
  %gep7537 = getelementptr inbounds i8, i8* %irc-bit-cast7536, i64 -9
  %irc-bit-cast7538 = bitcast i8* %gep7537 to i64*
  %2137 = load i64, i64* %irc-bit-cast7538, align 8
  %.off10361 = add i64 %2137, -913
  %2138 = icmp ult i64 %.off10361, 85
  br i1 %2138, label %tag89, label %header-check-br7499

normal-dest7542:                                  ; preds = %maybe-more-tests4362
  %ptrtoint7543 = ptrtoint {}* %1430 to i64
  %entry-point-addr-uint7544 = add i64 %ptrtoint7543, 7
  %entry-point-addr7545 = inttoptr i64 %entry-point-addr-uint7544 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7546 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7545, align 8
  %2139 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7546({}* %1430, i64 1, {}* nonnull %"closure->LAMBDA6916", {}* null, {}* null, {}* null)
          to label %normal-dest7549 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7549:                                  ; preds = %normal-dest7542
  %.elt9322 = extractvalue { {}*, i64 } %2139, 0
  %.elt9324 = extractvalue { {}*, i64 } %2139, 1
  %cond8176 = icmp eq i64 %.elt9324, 0
  %2140 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118357.2 = select i1 %cond8176, {}* %2140, {}* %.elt9322
  br label %tag714

header-check-br7566:                              ; preds = %header-check-br1224
  %.off10474 = add i64 %720, -1001
  %2141 = icmp ult i64 %.off10474, 5
  br i1 %2141, label %maybe-more-tests7574, label %tag620

maybe-more-tests7574:                             ; preds = %header-check-br7566
  %2142 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2143 = invoke {}* @cc_safe_fdefinition({}* %2142)
          to label %normal-dest2945 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7576:                                  ; preds = %tag842
  %ptrtoint7577 = ptrtoint {}* %581 to i64
  %entry-point-addr-uint7578 = add i64 %ptrtoint7577, 7
  %entry-point-addr7579 = inttoptr i64 %entry-point-addr-uint7578 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7580 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7579, align 8
  %2144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7580({}* %581, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest7583 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7583:                                  ; preds = %normal-dest7576
  %.elt9466 = extractvalue { {}*, i64 } %2144, 0
  %.elt9468 = extractvalue { {}*, i64 } %2144, 1
  %cond8204 = icmp eq i64 %.elt9468, 0
  %2145 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT1165255492.0 = select i1 %cond8204, {}* %2145, {}* %.elt9466
  %ptrtoint7590 = ptrtoint {}* %"closure->LAMBDA5775" to i64
  %tag-only7591 = and i64 %ptrtoint7590, 7
  %test7592 = icmp eq i64 %tag-only7591, 1
  br i1 %test7592, label %header-check-br7589, label %tag812

header-check-br7589:                              ; preds = %normal-dest7583
  %irc-bit-cast7593 = bitcast {}* %"closure->LAMBDA5775" to i8*
  %gep7594 = getelementptr inbounds i8, i8* %irc-bit-cast7593, i64 -9
  %irc-bit-cast7595 = bitcast i8* %gep7594 to i64*
  %2146 = load i64, i64* %irc-bit-cast7595, align 8
  %.off10479 = add i64 %2146, -913
  %2147 = icmp ult i64 %.off10479, 85
  br i1 %2147, label %tag629, label %header-check-br2935

header-check-br7599:                              ; preds = %tag845
  %irc-bit-cast7603 = bitcast {}* %"closure->LAMBDA3566" to i8*
  %gep7604 = getelementptr inbounds i8, i8* %irc-bit-cast7603, i64 -9
  %irc-bit-cast7605 = bitcast i8* %gep7604 to i64*
  %2148 = load i64, i64* %irc-bit-cast7605, align 8
  %.off10393 = add i64 %2148, -913
  %2149 = icmp ult i64 %.off10393, 85
  br i1 %2149, label %tag19, label %header-check-br6921

header-check-br7608:                              ; preds = %header-check-br2409
  %.off10500 = add i64 %990, -1001
  %2150 = icmp ult i64 %.off10500, 5
  br i1 %2150, label %maybe-more-tests7616, label %tag744

maybe-more-tests7616:                             ; preds = %header-check-br7608
  %2151 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2152 = invoke {}* @cc_safe_fdefinition({}* %2151)
          to label %normal-dest1799 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7618:                                  ; preds = %tag848
  %ptrtoint7619 = ptrtoint {}* %583 to i64
  %entry-point-addr-uint7620 = add i64 %ptrtoint7619, 7
  %entry-point-addr7621 = inttoptr i64 %entry-point-addr-uint7620 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7622 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7621, align 8
  %2153 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7622({}* %583, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest7625 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7625:                                  ; preds = %normal-dest7618
  %.elt9262 = extractvalue { {}*, i64 } %2153, 0
  %.elt9264 = extractvalue { {}*, i64 } %2153, 1
  %cond8165 = icmp eq i64 %.elt9264, 0
  %2154 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117979.0 = select i1 %cond8165, {}* %2154, {}* %.elt9262
  %2155 = icmp eq {}* %G117979.0, %2154
  br i1 %2155, label %tag856, label %tag831

normal-dest7632:                                  ; preds = %tag850
  %2156 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %2157 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %2158 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %2159 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint7633 = ptrtoint {}* %585 to i64
  %entry-point-addr-uint7634 = add i64 %ptrtoint7633, 7
  %entry-point-addr7635 = inttoptr i64 %entry-point-addr-uint7634 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7636 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7635, align 8
  %2160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7636({}* %585, i64 5, {}* %2156, {}* %2157, {}* %"%DOLIST-VAR1077.010562", {}* %2158, {}* %2159)
          to label %normal-dest7639 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7639:                                  ; preds = %normal-dest7632
  %.elt8464 = extractvalue { {}*, i64 } %2160, 0
  %.elt8466 = extractvalue { {}*, i64 } %2160, 1
  %cond8012 = icmp eq i64 %.elt8466, 0
  %2161 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %X_ELEMENT1830.1 = select i1 %cond8012, {}* %2161, {}* %.elt8464
  br label %tag551

normal-dest7652:                                  ; preds = %tag852
  %.elt8273 = extractvalue { {}*, i64 } %589, 0
  %.elt8275 = extractvalue { {}*, i64 } %589, 1
  %cond7975 = icmp eq i64 %.elt8275, 0
  %2162 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %X_ANZAHL.0 = select i1 %cond7975, {}* %2162, {}* %.elt8273
  %2163 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA7659" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %2163, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.31", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.31^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest7658 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7658:                                  ; preds = %normal-dest7652
  %2164 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %2165 = icmp eq {}* %stream.0, %2164
  %.val10286 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119451.0 = select i1 %2165, {}* %2164, {}* %.val10286
  %2166 = icmp eq {}* %G119451.0, %.val10286
  br i1 %2166, label %tag481, label %tag357

normal-dest7667:                                  ; preds = %tag854
  %ptrtoint7668 = ptrtoint {}* %591 to i64
  %entry-point-addr-uint7669 = add i64 %ptrtoint7668, 7
  %entry-point-addr7670 = inttoptr i64 %entry-point-addr-uint7669 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7671 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7670, align 8
  %2167 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7671({}* %591, i64 1, {}* %stream.0, {}* null, {}* null, {}* null)
          to label %normal-dest7674 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7674:                                  ; preds = %normal-dest7667
  %.elt8420 = extractvalue { {}*, i64 } %2167, 0
  %.elt8422 = extractvalue { {}*, i64 } %2167, 1
  %cond8003 = icmp eq i64 %.elt8422, 0
  %2168 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %OUT1165474263.0 = select i1 %cond8003, {}* %2168, {}* %.elt8420
  %ptrtoint7681 = ptrtoint {}* %"closure->LAMBDA4881" to i64
  %tag-only7682 = and i64 %ptrtoint7681, 7
  %test7683 = icmp eq i64 %tag-only7682, 1
  br i1 %test7683, label %header-check-br7680, label %tag496

header-check-br7680:                              ; preds = %normal-dest7674
  %irc-bit-cast7684 = bitcast {}* %"closure->LAMBDA4881" to i8*
  %gep7685 = getelementptr inbounds i8, i8* %irc-bit-cast7684, i64 -9
  %irc-bit-cast7686 = bitcast i8* %gep7685 to i64*
  %2169 = load i64, i64* %irc-bit-cast7686, align 8
  %.off10313 = add i64 %2169, -913
  %2170 = icmp ult i64 %.off10313, 85
  br i1 %2170, label %tag471, label %header-check-br4224

header-check-br7689:                              ; preds = %tag856
  %irc-bit-cast7693 = bitcast {}* %"closure->LAMBDA2833" to i8*
  %gep7694 = getelementptr inbounds i8, i8* %irc-bit-cast7693, i64 -9
  %irc-bit-cast7695 = bitcast i8* %gep7694 to i64*
  %2171 = load i64, i64* %irc-bit-cast7695, align 8
  %.off10451 = add i64 %2171, -913
  %2172 = icmp ult i64 %.off10451, 85
  br i1 %2172, label %tag751, label %header-check-br5082

normal-dest7700:                                  ; preds = %tag858
  %2173 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %2174 = invoke {}* @cc_safe_fdefinition({}* %2173)
          to label %normal-dest7702 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7702:                                  ; preds = %normal-dest7700
  %2175 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 533), align 8
  %ptrtoint7703 = ptrtoint {}* %2174 to i64
  %entry-point-addr-uint7704 = add i64 %ptrtoint7703, 7
  %entry-point-addr7705 = inttoptr i64 %entry-point-addr-uint7704 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7706 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7705, align 8
  %2176 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7706({}* %2174, i64 1, {}* %2175, {}* null, {}* null, {}* null)
          to label %normal-dest7709 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7709:                                  ; preds = %normal-dest7702
  %.elt9358 = extractvalue { {}*, i64 } %2176, 0
  %.elt9360 = extractvalue { {}*, i64 } %2176, 1
  %cond8184 = icmp eq i64 %.elt9360, 0
  %2177 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118305.0 = select i1 %cond8184, {}* %2177, {}* %.elt9358
  %ptrtoint7715 = ptrtoint {}* %595 to i64
  %entry-point-addr-uint7716 = add i64 %ptrtoint7715, 7
  %entry-point-addr7717 = inttoptr i64 %entry-point-addr-uint7716 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7718 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7717, align 8
  %2178 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7718({}* %595, i64 2, {}* %G118305.0, {}* %2177, {}* null, {}* null)
          to label %normal-dest7721 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7721:                                  ; preds = %normal-dest7709
  %.elt9362 = extractvalue { {}*, i64 } %2178, 0
  %.elt9364 = extractvalue { {}*, i64 } %2178, 1
  %cond8185 = icmp eq i64 %.elt9364, 0
  %2179 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118303.0 = select i1 %cond8185, {}* %2179, {}* %.elt9362
  %ptrtoint7727 = ptrtoint {}* %G118300.0 to i64
  %entry-point-addr-uint7728 = add i64 %ptrtoint7727, 7
  %entry-point-addr7729 = inttoptr i64 %entry-point-addr-uint7728 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7730 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7729, align 8
  %2180 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7730({}* %G118300.0, i64 3, {}* %stream.0, {}* %Y_FORMAT.0, {}* %G118303.0, {}* null)
          to label %tag21 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7742:                                  ; preds = %tag861
  %2181 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %2182 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %2183 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %2184 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 602), align 16
  %ptrtoint7743 = ptrtoint {}* %598 to i64
  %entry-point-addr-uint7744 = add i64 %ptrtoint7743, 7
  %entry-point-addr7745 = inttoptr i64 %entry-point-addr-uint7744 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7746 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7745, align 8
  %2185 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7746({}* %598, i64 5, {}* %2181, {}* %2182, {}* %"closure->LAMBDA7765", {}* %2183, {}* %2184)
          to label %normal-dest7749 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7749:                                  ; preds = %normal-dest7742
  %.elt9529 = extractvalue { {}*, i64 } %2185, 0
  %.elt9531 = extractvalue { {}*, i64 } %2185, 1
  %cond8216 = icmp eq i64 %.elt9531, 0
  %2186 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116854.2 = select i1 %cond8216, {}* %2186, {}* %.elt9529
  br label %tag888

header-check-br7755:                              ; preds = %tag862
  %irc-bit-cast7759 = bitcast {}* %"closure->LAMBDA6825" to i8*
  %gep7760 = getelementptr inbounds i8, i8* %irc-bit-cast7759, i64 -9
  %irc-bit-cast7761 = bitcast i8* %gep7760 to i64*
  %2187 = load i64, i64* %irc-bit-cast7761, align 8
  %.off10509 = add i64 %2187, -913
  %2188 = icmp ult i64 %.off10509, 85
  br i1 %2188, label %tag566, label %header-check-br1293

normal-dest7764:                                  ; preds = %tag866
  %2189 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %2190 = icmp eq {}* %stream.0, %2189
  %.val10484 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116892.0 = select i1 %2190, {}* %2189, {}* %.val10484
  %2191 = icmp eq {}* %G116892.0, %.val10484
  br i1 %2191, label %tag124, label %tag58

normal-dest7777:                                  ; preds = %maybe-more-tests1039
  %ptrtoint7778 = ptrtoint {}* %670 to i64
  %entry-point-addr-uint7779 = add i64 %ptrtoint7778, 7
  %entry-point-addr7780 = inttoptr i64 %entry-point-addr-uint7779 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7781 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7780, align 8
  %2192 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7781({}* %670, i64 1, {}* nonnull %"closure->LAMBDA4828", {}* null, {}* null, {}* null)
          to label %normal-dest7784 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7784:                                  ; preds = %normal-dest7777
  %.elt9082 = extractvalue { {}*, i64 } %2192, 0
  %.elt9084 = extractvalue { {}*, i64 } %2192, 1
  %cond8131 = icmp eq i64 %.elt9084, 0
  %2193 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117803.2 = select i1 %cond8131, {}* %2193, {}* %.elt9082
  br label %tag776

normal-dest7790:                                  ; preds = %tag875
  %2194 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %2195 = icmp eq {}* %stream.0, %2194
  %.val10324 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118206.0 = select i1 %2195, {}* %2194, {}* %.val10324
  %2196 = icmp eq {}* %G118206.0, %.val10324
  br i1 %2196, label %tag329, label %tag111

normal-dest7797:                                  ; preds = %maybe-more-tests3816
  %ptrtoint7798 = ptrtoint {}* %1310 to i64
  %entry-point-addr-uint7799 = add i64 %ptrtoint7798, 7
  %entry-point-addr7800 = inttoptr i64 %entry-point-addr-uint7799 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7801 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7800, align 8
  %2197 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7801({}* %1310, i64 1, {}* nonnull %"closure->LAMBDA2833", {}* null, {}* null, {}* null)
          to label %normal-dest7804 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7804:                                  ; preds = %normal-dest7797
  %.elt9258 = extractvalue { {}*, i64 } %2197, 0
  %.elt9260 = extractvalue { {}*, i64 } %2197, 1
  %cond8164 = icmp eq i64 %.elt9260, 0
  %2198 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117987.2 = select i1 %cond8164, {}* %2198, {}* %.elt9258
  br label %tag133

header-check-br7823:                              ; preds = %tag879
  %irc-bit-cast7827 = bitcast {}* %"closure->LAMBDA5775" to i8*
  %gep7828 = getelementptr inbounds i8, i8* %irc-bit-cast7827, i64 -9
  %irc-bit-cast7829 = bitcast i8* %gep7828 to i64*
  %2199 = load i64, i64* %irc-bit-cast7829, align 8
  %.off10481 = add i64 %2199, -913
  %2200 = icmp ult i64 %.off10481, 85
  br i1 %2200, label %tag689, label %header-check-br4945

header-check-br7832:                              ; preds = %header-check-br4481
  %.off10444 = add i64 %1460, -1001
  %2201 = icmp ult i64 %.off10444, 5
  br i1 %2201, label %maybe-more-tests7840, label %tag514

maybe-more-tests7840:                             ; preds = %header-check-br7832
  %2202 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2203 = invoke {}* @cc_safe_fdefinition({}* %2202)
          to label %normal-dest1645 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

header-check-br7841:                              ; preds = %header-check-br3411
  %.off10308 = add i64 %1221, -1001
  %2204 = icmp ult i64 %.off10308, 5
  br i1 %2204, label %maybe-more-tests7849, label %tag198

maybe-more-tests7849:                             ; preds = %header-check-br7841
  %2205 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2206 = invoke {}* @cc_safe_fdefinition({}* %2205)
          to label %normal-dest7068 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7851:                                  ; preds = %tag882
  %2207 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 10), align 16
  %2208 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 12), align 16
  %2209 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 16), align 16
  %2210 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %ptrtoint7852 = ptrtoint {}* %605 to i64
  %entry-point-addr-uint7853 = add i64 %ptrtoint7852, 7
  %entry-point-addr7854 = inttoptr i64 %entry-point-addr-uint7853 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7855 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7854, align 8
  %2211 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7855({}* %605, i64 5, {}* %2207, {}* %2208, {}* %"%DOLIST-VAR.010563", {}* %2209, {}* %2210)
          to label %normal-dest7858 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7858:                                  ; preds = %normal-dest7851
  %.elt8514 = extractvalue { {}*, i64 } %2211, 0
  %.elt8516 = extractvalue { {}*, i64 } %2211, 1
  %cond8020 = icmp eq i64 %.elt8516, 0
  %2212 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %"%DOLIST-VAR.1" = select i1 %cond8020, {}* %2212, {}* %.elt8514
  br label %tag345.backedge

header-check-br7864:                              ; preds = %header-check-br1247
  %.off10386 = add i64 %724, -1001
  %2213 = icmp ult i64 %.off10386, 5
  br i1 %2213, label %maybe-more-tests7872, label %tag385

maybe-more-tests7872:                             ; preds = %header-check-br7864
  %2214 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 24), align 16
  %2215 = invoke {}* @cc_safe_fdefinition({}* %2214)
          to label %normal-dest3141 unwind label %cleanup-lpad.loopexit

normal-dest7874:                                  ; preds = %tag884
  %ptrtoint7875 = ptrtoint {}* %607 to i64
  %entry-point-addr-uint7876 = add i64 %ptrtoint7875, 7
  %entry-point-addr7877 = inttoptr i64 %entry-point-addr-uint7876 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7878 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7877, align 8
  %2216 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7878({}* %607, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest7881 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7881:                                  ; preds = %normal-dest7874
  %.elt8522 = extractvalue { {}*, i64 } %2216, 0
  %.elt8524 = extractvalue { {}*, i64 } %2216, 1
  %cond8022 = icmp eq i64 %.elt8524, 0
  %2217 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G116617.0 = select i1 %cond8022, {}* %2217, {}* %.elt8522
  %ptrtoint7888 = ptrtoint {}* %"closure->LAMBDA7791" to i64
  %tag-only7889 = and i64 %ptrtoint7888, 7
  %test7890 = icmp eq i64 %tag-only7889, 1
  br i1 %test7890, label %header-check-br7887, label %tag515

header-check-br7887:                              ; preds = %normal-dest7881
  %irc-bit-cast7891 = bitcast {}* %"closure->LAMBDA7791" to i8*
  %gep7892 = getelementptr inbounds i8, i8* %irc-bit-cast7891, i64 -9
  %irc-bit-cast7893 = bitcast i8* %gep7892 to i64*
  %2218 = load i64, i64* %irc-bit-cast7893, align 8
  %.off10331 = add i64 %2218, -913
  %2219 = icmp ult i64 %.off10331, 85
  br i1 %2219, label %tag719, label %header-check-br1053

normal-dest7897:                                  ; preds = %maybe-more-tests7103
  %ptrtoint7898 = ptrtoint {}* %2042 to i64
  %entry-point-addr-uint7899 = add i64 %ptrtoint7898, 7
  %entry-point-addr7900 = inttoptr i64 %entry-point-addr-uint7899 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7901 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7900, align 8
  %2220 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7901({}* %2042, i64 1, {}* nonnull %"closure->LAMBDA2636", {}* null, {}* null, {}* null)
          to label %normal-dest7904 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest7904:                                  ; preds = %normal-dest7897
  %.elt9234 = extractvalue { {}*, i64 } %2220, 0
  %.elt9236 = extractvalue { {}*, i64 } %2220, 1
  %cond8160 = icmp eq i64 %.elt9236, 0
  %2221 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117000.2 = select i1 %cond8160, {}* %2221, {}* %.elt9234
  br label %tag78

normal-dest7911:                                  ; preds = %tag886
  %2222 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 498), align 16
  %ptrtoint7912 = ptrtoint {}* %609 to i64
  %entry-point-addr-uint7913 = add i64 %ptrtoint7912, 7
  %entry-point-addr7914 = inttoptr i64 %entry-point-addr-uint7913 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7915 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7914, align 8
  %2223 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7915({}* %609, i64 1, {}* %2222, {}* null, {}* null, {}* null)
          to label %normal-dest7918 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7918:                                  ; preds = %normal-dest7911
  %.elt9709 = extractvalue { {}*, i64 } %2223, 0
  %.elt9711 = extractvalue { {}*, i64 } %2223, 1
  %cond8249 = icmp eq i64 %.elt9711, 0
  %2224 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119162.0 = select i1 %cond8249, {}* %2224, {}* %.elt9709
  %ptrtoint7924 = ptrtoint {}* %G119159.0 to i64
  %entry-point-addr-uint7925 = add i64 %ptrtoint7924, 7
  %entry-point-addr7926 = inttoptr i64 %entry-point-addr-uint7925 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7927 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7926, align 8
  %2225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7927({}* %G119159.0, i64 4, {}* %stream.0, {}* %Y_FORMAT.0, {}* %G119162.0, {}* %spalten-titel.0)
          to label %tag681 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7942:                                  ; preds = %tag888
  %2226 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 480), align 16
  %2227 = invoke {}* @cc_safe_fdefinition({}* %2226)
          to label %normal-dest7948 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7948:                                  ; preds = %normal-dest7942
  %ptrtoint7949 = ptrtoint {}* %2227 to i64
  %entry-point-addr-uint7950 = add i64 %ptrtoint7949, 7
  %entry-point-addr7951 = inttoptr i64 %entry-point-addr-uint7950 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point7952 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr7951, align 8
  %2228 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point7952({}* %2227, i64 1, {}* %G116762.0, {}* null, {}* null, {}* null)
          to label %normal-dest7955 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest7955:                                  ; preds = %normal-dest7948
  %.elt9537 = extractvalue { {}*, i64 } %2228, 0
  %2229 = ptrtoint {}* %.elt9537 to i64
  %.elt9539 = extractvalue { {}*, i64 } %2228, 1
  br label %tag342

header-check-br7959:                              ; preds = %tag890
  %2230 = load i64, i64* %irc-bit-cast3711, align 8
  %.off10365 = add i64 %2230, -913
  %2231 = icmp ult i64 %.off10365, 85
  br i1 %2231, label %tag14, label %header-check-br3379
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.7"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !73 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest5, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 471), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.8"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !74 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest5, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 471), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.9"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !75 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest5, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 518), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 583), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 2, {}* %13, {}* %vaarg, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %15 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %16 = insertvalue { {}*, i64 } %15, i64 1, 1
  ret { {}*, i64 } %16
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.10"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !76 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest5, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 471), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.11"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !77 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest5, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 471), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.12"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !78 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure116 = alloca [136 x i8], align 1
  %stack-allocated-closure116.sub = getelementptr inbounds [136 x i8], [136 x i8]* %stack-allocated-closure116, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest24
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest25 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest106, %tag2
  %format-arg-116674.0 = phi {}* [ %format-arg-116674.1, %tag2 ], [ %format-arg-116674.2, %normal-dest106 ]
  call void @cc_writeCell({}* %23, {}* %format-arg-116674.0)
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest34 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest28, %normal-dest24
  %format-arg-116673.0 = phi {}* [ %format-arg-116673.1149, %normal-dest24 ], [ %format-arg-116673.2, %normal-dest28 ]
  call void @cc_writeCell({}* %22, {}* %format-arg-116673.0)
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %14 = icmp eq {}* %G116678.0, %13
  br i1 %14, label %tag3, label %tag1

tag3:                                             ; preds = %tag2
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest99 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest99, %tag3, %normal-dest78, %normal-dest71, %normal-dest64, %normal-dest58, %normal-dest46, %normal-dest39, %normal-dest38, %normal-dest36, %normal-dest34, %tag1, %normal-dest25, %tag, %normal-dest23, %normal-dest22, %process-rest-argument, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-116673.1149 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G116679.0147 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %G116678.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %format-arg-116674.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = invoke {}* @cc_makeCell()
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %process-rest-argument
  %22 = invoke {}* @cc_makeCell()
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest22
  %23 = invoke {}* @cc_makeCell()
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest23
  call void @cc_writeCell({}* %21, {}* %vaarg)
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %25 = icmp eq {}* %G116679.0147, %24
  br i1 %25, label %tag, label %tag2

normal-dest25:                                    ; preds = %tag
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 558), align 16
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %26, {}* %27, {}* %28, {}* %29, {}* %30, {}* %31, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %.elt139 = extractvalue { {}*, i64 } %32, 0
  %.elt141 = extractvalue { {}*, i64 } %32, 1
  %cond115 = icmp eq i64 %.elt141, 0
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116673.2 = select i1 %cond115, {}* %33, {}* %.elt139
  br label %tag2

normal-dest34:                                    ; preds = %tag1
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest34
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest36
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %39, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.13", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.13^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest38
  %ptrtoint40 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint41 = add i64 %ptrtoint40, 7
  %entry-point-addr42 = inttoptr i64 %entry-point-addr-uint41 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point43 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr42, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point43({}* %37, i64 2, {}* %38, {}* %"closure->LAMBDA", {}* null, {}* null)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest39
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt118 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt118, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117680.0 = select i1 %cond, {}* %41, {}* %.elt
  %ptrtoint52 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint53 = add i64 %ptrtoint52, 7
  %entry-point-addr54 = inttoptr i64 %entry-point-addr-uint53 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point55 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr54, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point55({}* %35, i64 1, {}* %G117680.0, {}* null, {}* null, {}* null)
          to label %normal-dest58 unwind label %cleanup-lpad

normal-dest58:                                    ; preds = %normal-dest46
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %45 = invoke {}* @cc_safe_symbol_value({}* %44)
          to label %normal-dest64 unwind label %cleanup-lpad

normal-dest64:                                    ; preds = %normal-dest58
  %.elt122 = extractvalue { {}*, i64 } %42, 1
  %cond112 = icmp eq i64 %.elt122, 0
  %.elt120 = extractvalue { {}*, i64 } %42, 0
  %G117676.0 = select i1 %cond112, {}* %43, {}* %.elt120
  %ptrtoint65 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint66 = add i64 %ptrtoint65, 7
  %entry-point-addr67 = inttoptr i64 %entry-point-addr-uint66 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point68 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr67, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point68({}* %12, i64 2, {}* %G117676.0, {}* %45, {}* null, {}* null)
          to label %normal-dest71 unwind label %cleanup-lpad

normal-dest71:                                    ; preds = %normal-dest64
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 254), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest78 unwind label %cleanup-lpad

normal-dest78:                                    ; preds = %normal-dest71
  %.elt126 = extractvalue { {}*, i64 } %46, 1
  %cond113 = icmp eq i64 %.elt126, 0
  %.elt124 = extractvalue { {}*, i64 } %46, 0
  %G116677.0 = select i1 %cond113, {}* %47, {}* %.elt124
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA82" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure116.sub, {}* %51, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.14", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.14^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 3, {}* %23, {}* %22, {}* %21)
  %ptrtoint83 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %49, i64 3, {}* %50, {}* %G116677.0, {}* %"closure->LAMBDA82", {}* null)
          to label %normal-dest89 unwind label %cleanup-lpad

normal-dest89:                                    ; preds = %normal-dest78
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %53 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %54 = insertvalue { {}*, i64 } %53, i64 1, 1
  ret { {}*, i64 } %54

normal-dest99:                                    ; preds = %tag3
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %56 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %58 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 558), align 16
  %60 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint100 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint101 = add i64 %ptrtoint100, 7
  %entry-point-addr102 = inttoptr i64 %entry-point-addr-uint101 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point103 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr102, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point103({}* %16, i64 7, {}* %55, {}* %56, {}* %57, {}* %58, {}* %59, {}* %60, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest106 unwind label %cleanup-lpad

normal-dest106:                                   ; preds = %normal-dest99
  %.elt135 = extractvalue { {}*, i64 } %61, 0
  %.elt137 = extractvalue { {}*, i64 } %61, 1
  %cond114 = icmp eq i64 %.elt137, 0
  %62 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116674.2 = select i1 %cond114, {}* %62, {}* %.elt135
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.13"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !79 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.13^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.13^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 488), align 16
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 489), align 8
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt21 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt21, 0
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117690.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 491), align 8
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 558), align 16
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 11, {}* %14, {}* %15, {}* %16, {}* %17, {}* %G117690.0, {}* %22, {}* %21, {}* %23, {}* %24, {}* %25, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %26
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.14"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !80 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.14^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest7, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 2, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !32
  %18 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %19 = bitcast %"class.core::T_O"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %22 = bitcast %"class.core::T_O"** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !32
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 495), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %26 = add i64 %17, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8, !tbaa !32
  %29 = add i64 %20, -3
  %30 = inttoptr i64 %29 to {}**
  %31 = load {}*, {}** %30, align 8, !tbaa !32
  %32 = add i64 %23, -3
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8, !tbaa !32
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %28, {}* %31, {}* %34, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest7
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %35
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.15"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !81 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure116 = alloca [136 x i8], align 1
  %stack-allocated-closure116.sub = getelementptr inbounds [136 x i8], [136 x i8]* %stack-allocated-closure116, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest90, %tag2
  %format-arg-116652.0 = phi {}* [ %format-arg-116652.1, %tag2 ], [ %format-arg-116652.2, %normal-dest90 ]
  call void @cc_writeCell({}* %23, {}* %format-arg-116652.0)
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest27 unwind label %cleanup-lpad

tag1:                                             ; preds = %tag2
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest83 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest106, %normal-dest24
  %format-arg-116651.0 = phi {}* [ %format-arg-116651.1149, %normal-dest24 ], [ %format-arg-116651.2, %normal-dest106 ]
  call void @cc_writeCell({}* %22, {}* %format-arg-116651.0)
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %14 = icmp eq {}* %G116656.0, %13
  br i1 %14, label %tag1, label %tag

tag3:                                             ; preds = %normal-dest24
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest99 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest99, %tag3, %normal-dest83, %tag1, %normal-dest64, %normal-dest57, %normal-dest50, %normal-dest44, %normal-dest35, %normal-dest32, %normal-dest31, %normal-dest29, %normal-dest27, %tag, %normal-dest23, %normal-dest22, %process-rest-argument, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-116651.1149 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G116657.0147 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %G116656.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %format-arg-116652.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = invoke {}* @cc_makeCell()
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %process-rest-argument
  %22 = invoke {}* @cc_makeCell()
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest22
  %23 = invoke {}* @cc_makeCell()
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest23
  call void @cc_writeCell({}* %21, {}* %vaarg)
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %25 = icmp eq {}* %G116657.0147, %24
  br i1 %25, label %tag3, label %tag2

normal-dest27:                                    ; preds = %tag
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest27
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest29
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %31, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.16", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.16^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest31
  %ptrtoint = ptrtoint {}* %29 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %29, i64 2, {}* %30, {}* %"closure->LAMBDA", {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest32
  %.elt = extractvalue { {}*, i64 } %32, 0
  %.elt118 = extractvalue { {}*, i64 } %32, 1
  %cond = icmp eq i64 %.elt118, 0
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117882.0 = select i1 %cond, {}* %33, {}* %.elt
  %ptrtoint38 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint39 = add i64 %ptrtoint38, 7
  %entry-point-addr40 = inttoptr i64 %entry-point-addr-uint39 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point41 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr40, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point41({}* %27, i64 1, {}* %G117882.0, {}* null, {}* null, {}* null)
          to label %normal-dest44 unwind label %cleanup-lpad

normal-dest44:                                    ; preds = %normal-dest35
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %37 = invoke {}* @cc_safe_symbol_value({}* %36)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest44
  %.elt122 = extractvalue { {}*, i64 } %34, 1
  %cond112 = icmp eq i64 %.elt122, 0
  %.elt120 = extractvalue { {}*, i64 } %34, 0
  %G117878.0 = select i1 %cond112, {}* %35, {}* %.elt120
  %ptrtoint51 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint52 = add i64 %ptrtoint51, 7
  %entry-point-addr53 = inttoptr i64 %entry-point-addr-uint52 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point54 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr53, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point54({}* %10, i64 2, {}* %G117878.0, {}* %37, {}* null, {}* null)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest50
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 254), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest64 unwind label %cleanup-lpad

normal-dest64:                                    ; preds = %normal-dest57
  %.elt126 = extractvalue { {}*, i64 } %38, 1
  %cond113 = icmp eq i64 %.elt126, 0
  %.elt124 = extractvalue { {}*, i64 } %38, 0
  %G116655.0 = select i1 %cond113, {}* %39, {}* %.elt124
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA68" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure116.sub, {}* %43, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.17", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.17^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 3, {}* %23, {}* %22, {}* %21)
  %ptrtoint69 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %41, i64 3, {}* %42, {}* %G116655.0, {}* %"closure->LAMBDA68", {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest64
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %45 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %46 = insertvalue { {}*, i64 } %45, i64 1, 1
  ret { {}*, i64 } %46

normal-dest83:                                    ; preds = %tag1
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %49 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 553), align 8
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint84 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %12, i64 7, {}* %47, {}* %48, {}* %49, {}* %50, {}* %51, {}* %52, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %.elt135 = extractvalue { {}*, i64 } %53, 0
  %.elt137 = extractvalue { {}*, i64 } %53, 1
  %cond114 = icmp eq i64 %.elt137, 0
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116652.2 = select i1 %cond114, {}* %54, {}* %.elt135
  br label %tag

normal-dest99:                                    ; preds = %tag3
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %56 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %58 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 553), align 8
  %60 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint100 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint101 = add i64 %ptrtoint100, 7
  %entry-point-addr102 = inttoptr i64 %entry-point-addr-uint101 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point103 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr102, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point103({}* %16, i64 7, {}* %55, {}* %56, {}* %57, {}* %58, {}* %59, {}* %60, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest106 unwind label %cleanup-lpad

normal-dest106:                                   ; preds = %normal-dest99
  %.elt139 = extractvalue { {}*, i64 } %61, 0
  %.elt141 = extractvalue { {}*, i64 } %61, 1
  %cond115 = icmp eq i64 %.elt141, 0
  %62 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116651.2 = select i1 %cond115, {}* %62, {}* %.elt139
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.16"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !82 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.16^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.16^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 488), align 16
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 489), align 8
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt21 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt21, 0
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G117892.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 491), align 8
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 553), align 8
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 11, {}* %14, {}* %15, {}* %16, {}* %17, {}* %G117892.0, {}* %22, {}* %21, {}* %23, {}* %24, {}* %25, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %26
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.17"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !83 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.17^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest7, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 2, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !32
  %18 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %19 = bitcast %"class.core::T_O"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %22 = bitcast %"class.core::T_O"** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !32
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 495), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %26 = add i64 %17, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8, !tbaa !32
  %29 = add i64 %20, -3
  %30 = inttoptr i64 %29 to {}**
  %31 = load {}*, {}** %30, align 8, !tbaa !32
  %32 = add i64 %23, -3
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8, !tbaa !32
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %28, {}* %31, {}* %34, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest7
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %35
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.18"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !84 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure130 = alloca [136 x i8], align 1
  %stack-allocated-closure130.sub = getelementptr inbounds [136 x i8], [136 x i8]* %stack-allocated-closure130, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest24
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest25 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest28, %normal-dest24
  %format-arg-116549.0 = phi {}* [ %format-arg-116549.1167, %normal-dest24 ], [ %format-arg-116549.2, %normal-dest28 ]
  call void @cc_writeCell({}* %22, {}* %format-arg-116549.0)
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %12 = icmp eq {}* %G116554.0, %11
  br i1 %12, label %tag2, label %tag3

tag2:                                             ; preds = %tag1
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest34 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest41, %tag1
  %format-arg-116550.0 = phi {}* [ %format-arg-116550.1, %tag1 ], [ %format-arg-116550.2, %normal-dest41 ]
  call void @cc_writeCell({}* %23, {}* %format-arg-116550.0)
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest50 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest111, %normal-dest105, %normal-dest94, %normal-dest87, %normal-dest80, %normal-dest74, %normal-dest62, %normal-dest55, %normal-dest54, %normal-dest52, %normal-dest50, %tag3, %normal-dest34, %tag2, %normal-dest25, %tag, %normal-dest23, %normal-dest22, %process-rest-argument, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-116549.1167 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G116555.0165 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %G116554.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %format-arg-116550.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = invoke {}* @cc_makeCell()
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %process-rest-argument
  %22 = invoke {}* @cc_makeCell()
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest22
  %23 = invoke {}* @cc_makeCell()
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest23
  call void @cc_writeCell({}* %21, {}* %vaarg)
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %25 = icmp eq {}* %G116555.0165, %24
  br i1 %25, label %tag, label %tag1

normal-dest25:                                    ; preds = %tag
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 517), align 8
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %26, {}* %27, {}* %28, {}* %29, {}* %30, {}* %31, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %.elt157 = extractvalue { {}*, i64 } %32, 0
  %.elt159 = extractvalue { {}*, i64 } %32, 1
  %cond129 = icmp eq i64 %.elt159, 0
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116549.2 = select i1 %cond129, {}* %33, {}* %.elt157
  br label %tag1

normal-dest34:                                    ; preds = %tag2
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 517), align 8
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint35 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %14, i64 7, {}* %34, {}* %35, {}* %36, {}* %37, {}* %38, {}* %39, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest34
  %.elt153 = extractvalue { {}*, i64 } %40, 0
  %.elt155 = extractvalue { {}*, i64 } %40, 1
  %cond128 = icmp eq i64 %.elt155, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116550.2 = select i1 %cond128, {}* %41, {}* %.elt153
  br label %tag3

normal-dest50:                                    ; preds = %tag3
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest50
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest52
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %47, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.19", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.19^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest54
  %ptrtoint56 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %45, i64 2, {}* %46, {}* %"closure->LAMBDA", {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %.elt = extractvalue { {}*, i64 } %48, 0
  %.elt132 = extractvalue { {}*, i64 } %48, 1
  %cond = icmp eq i64 %.elt132, 0
  %49 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118728.0 = select i1 %cond, {}* %49, {}* %.elt
  %ptrtoint68 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint69 = add i64 %ptrtoint68, 7
  %entry-point-addr70 = inttoptr i64 %entry-point-addr-uint69 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point71 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr70, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point71({}* %43, i64 1, {}* %G118728.0, {}* null, {}* null, {}* null)
          to label %normal-dest74 unwind label %cleanup-lpad

normal-dest74:                                    ; preds = %normal-dest62
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %53 = invoke {}* @cc_safe_symbol_value({}* %52)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest74
  %.elt136 = extractvalue { {}*, i64 } %50, 1
  %cond126 = icmp eq i64 %.elt136, 0
  %.elt134 = extractvalue { {}*, i64 } %50, 0
  %G118724.0 = select i1 %cond126, {}* %51, {}* %.elt134
  %ptrtoint81 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint82 = add i64 %ptrtoint81, 7
  %entry-point-addr83 = inttoptr i64 %entry-point-addr-uint82 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point84 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr83, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point84({}* %16, i64 2, {}* %G118724.0, {}* %53, {}* null, {}* null)
          to label %normal-dest87 unwind label %cleanup-lpad

normal-dest87:                                    ; preds = %normal-dest80
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %56 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 254), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest94 unwind label %cleanup-lpad

normal-dest94:                                    ; preds = %normal-dest87
  %.elt140 = extractvalue { {}*, i64 } %54, 1
  %cond127 = icmp eq i64 %.elt140, 0
  %.elt138 = extractvalue { {}*, i64 } %54, 0
  %G116553.0 = select i1 %cond127, {}* %55, {}* %.elt138
  %58 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA98" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure130.sub, {}* %59, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.20", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.20^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 3, {}* %23, {}* %22, {}* %21)
  %ptrtoint99 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %57, i64 3, {}* %58, {}* %G116553.0, {}* %"closure->LAMBDA98", {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad

normal-dest105:                                   ; preds = %normal-dest94
  %61 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 518), align 16
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest111 unwind label %cleanup-lpad

normal-dest111:                                   ; preds = %normal-dest105
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 520), align 16
  %64 = ptrtoint {}* %21 to i64
  %65 = add i64 %64, -3
  %66 = inttoptr i64 %65 to {}**
  %67 = load {}*, {}** %66, align 8, !tbaa !32
  %ptrtoint113 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint114 = add i64 %ptrtoint113, 7
  %entry-point-addr115 = inttoptr i64 %entry-point-addr-uint114 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point116 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr115, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point116({}* %62, i64 2, {}* %63, {}* %67, {}* null, {}* null)
          to label %normal-dest119 unwind label %cleanup-lpad

normal-dest119:                                   ; preds = %normal-dest111
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %69 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %70 = insertvalue { {}*, i64 } %69, i64 1, 1
  ret { {}*, i64 } %70
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.19"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !85 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.19^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.19^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 488), align 16
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 489), align 8
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt21 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt21, 0
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118738.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 491), align 8
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 517), align 8
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 11, {}* %14, {}* %15, {}* %16, {}* %17, {}* %G118738.0, {}* %22, {}* %21, {}* %23, {}* %24, {}* %25, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %26
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.20"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !86 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.20^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest7, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 2, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !32
  %18 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %19 = bitcast %"class.core::T_O"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %22 = bitcast %"class.core::T_O"** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !32
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 495), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %26 = add i64 %17, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8, !tbaa !32
  %29 = add i64 %20, -3
  %30 = inttoptr i64 %29 to {}**
  %31 = load {}*, {}** %30, align 8, !tbaa !32
  %32 = add i64 %23, -3
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8, !tbaa !32
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %28, {}* %31, {}* %34, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest7
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %35
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.21"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !87 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure116 = alloca [136 x i8], align 1
  %stack-allocated-closure116.sub = getelementptr inbounds [136 x i8], [136 x i8]* %stack-allocated-closure116, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %tag1
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest25 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest41, %normal-dest24
  %format-arg-116527.0 = phi {}* [ %format-arg-116527.1149, %normal-dest24 ], [ %format-arg-116527.2, %normal-dest41 ]
  call void @cc_writeCell({}* %22, {}* %format-arg-116527.0)
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %12 = icmp eq {}* %G116532.0, %11
  br i1 %12, label %tag, label %tag3

tag2:                                             ; preds = %normal-dest24
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest34 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %tag1
  %format-arg-116528.0 = phi {}* [ %format-arg-116528.1, %tag1 ], [ %format-arg-116528.2, %normal-dest28 ]
  call void @cc_writeCell({}* %23, {}* %format-arg-116528.0)
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest50 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest94, %normal-dest87, %normal-dest80, %normal-dest74, %normal-dest62, %normal-dest55, %normal-dest54, %normal-dest52, %normal-dest50, %tag3, %normal-dest34, %tag2, %normal-dest25, %tag, %normal-dest23, %normal-dest22, %process-rest-argument, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-116527.1149 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G116533.0147 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %G116532.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %format-arg-116528.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = invoke {}* @cc_makeCell()
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %process-rest-argument
  %22 = invoke {}* @cc_makeCell()
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest22
  %23 = invoke {}* @cc_makeCell()
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest23
  call void @cc_writeCell({}* %21, {}* %vaarg)
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %25 = icmp eq {}* %G116533.0147, %24
  br i1 %25, label %tag2, label %tag1

normal-dest25:                                    ; preds = %tag
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 511), align 8
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %26, {}* %27, {}* %28, {}* %29, {}* %30, {}* %31, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %.elt135 = extractvalue { {}*, i64 } %32, 0
  %.elt137 = extractvalue { {}*, i64 } %32, 1
  %cond114 = icmp eq i64 %.elt137, 0
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116528.2 = select i1 %cond114, {}* %33, {}* %.elt135
  br label %tag3

normal-dest34:                                    ; preds = %tag2
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 511), align 8
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint35 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %14, i64 7, {}* %34, {}* %35, {}* %36, {}* %37, {}* %38, {}* %39, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest34
  %.elt139 = extractvalue { {}*, i64 } %40, 0
  %.elt141 = extractvalue { {}*, i64 } %40, 1
  %cond115 = icmp eq i64 %.elt141, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116527.2 = select i1 %cond115, {}* %41, {}* %.elt139
  br label %tag1

normal-dest50:                                    ; preds = %tag3
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest50
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest52
  %46 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %47, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.22", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.22^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest54
  %ptrtoint56 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %45, i64 2, {}* %46, {}* %"closure->LAMBDA", {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %.elt = extractvalue { {}*, i64 } %48, 0
  %.elt118 = extractvalue { {}*, i64 } %48, 1
  %cond = icmp eq i64 %.elt118, 0
  %49 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118930.0 = select i1 %cond, {}* %49, {}* %.elt
  %ptrtoint68 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint69 = add i64 %ptrtoint68, 7
  %entry-point-addr70 = inttoptr i64 %entry-point-addr-uint69 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point71 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr70, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point71({}* %43, i64 1, {}* %G118930.0, {}* null, {}* null, {}* null)
          to label %normal-dest74 unwind label %cleanup-lpad

normal-dest74:                                    ; preds = %normal-dest62
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %53 = invoke {}* @cc_safe_symbol_value({}* %52)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest74
  %.elt122 = extractvalue { {}*, i64 } %50, 1
  %cond112 = icmp eq i64 %.elt122, 0
  %.elt120 = extractvalue { {}*, i64 } %50, 0
  %G118926.0 = select i1 %cond112, {}* %51, {}* %.elt120
  %ptrtoint81 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint82 = add i64 %ptrtoint81, 7
  %entry-point-addr83 = inttoptr i64 %entry-point-addr-uint82 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point84 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr83, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point84({}* %16, i64 2, {}* %G118926.0, {}* %53, {}* null, {}* null)
          to label %normal-dest87 unwind label %cleanup-lpad

normal-dest87:                                    ; preds = %normal-dest80
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %56 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 254), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest94 unwind label %cleanup-lpad

normal-dest94:                                    ; preds = %normal-dest87
  %.elt126 = extractvalue { {}*, i64 } %54, 1
  %cond113 = icmp eq i64 %.elt126, 0
  %.elt124 = extractvalue { {}*, i64 } %54, 0
  %G116531.0 = select i1 %cond113, {}* %55, {}* %.elt124
  %58 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA98" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure116.sub, {}* %59, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.23", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.23^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 3, {}* %23, {}* %22, {}* %21)
  %ptrtoint99 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %57, i64 3, {}* %58, {}* %G116531.0, {}* %"closure->LAMBDA98", {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad

normal-dest105:                                   ; preds = %normal-dest94
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %61 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %62 = insertvalue { {}*, i64 } %61, i64 1, 1
  ret { {}*, i64 } %62
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.22"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !88 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.22^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.22^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 488), align 16
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 489), align 8
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt21 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt21, 0
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118940.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 491), align 8
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 511), align 8
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 11, {}* %14, {}* %15, {}* %16, {}* %17, {}* %G118940.0, {}* %22, {}* %21, {}* %23, {}* %24, {}* %25, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %26
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.23"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !89 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.23^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest7, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 2, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !32
  %18 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %19 = bitcast %"class.core::T_O"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %22 = bitcast %"class.core::T_O"** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !32
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 495), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %26 = add i64 %17, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8, !tbaa !32
  %29 = add i64 %20, -3
  %30 = inttoptr i64 %29 to {}**
  %31 = load {}*, {}** %30, align 8, !tbaa !32
  %32 = add i64 %23, -3
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8, !tbaa !32
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %28, {}* %31, {}* %34, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest7
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %35
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.24"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !90 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %process-rest-argument
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest14, %process-rest-argument
  %format-arg-116508.0 = phi {}* [ %format-arg-116508.1, %process-rest-argument ], [ %format-arg-116508.2, %normal-dest14 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 469), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest18 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest31, %normal-dest25, %normal-dest18, %tag1, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-116508.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G116511.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %18 = icmp eq {}* %G116511.0, %17
  br i1 %18, label %tag, label %tag1

normal-dest11:                                    ; preds = %tag
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %20 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 502), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %19, {}* %20, {}* %21, {}* %22, {}* %23, {}* %24, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %.elt55 = extractvalue { {}*, i64 } %25, 0
  %.elt57 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt57, 0
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116508.2 = select i1 %cond, {}* %26, {}* %.elt55
  br label %tag1

normal-dest18:                                    ; preds = %tag1
  %ptrtoint19 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %12, i64 2, {}* %format-arg-116508.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 471), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest25
  %ptrtoint32 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %29, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest31
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.25"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !91 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure170 = alloca [136 x i8], align 1
  %stack-allocated-closure170.sub = getelementptr inbounds [136 x i8], [136 x i8]* %stack-allocated-closure170, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest35
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest36 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest159, %tag4
  %format-arg-116488.0 = phi {}* [ %format-arg-116488.1, %tag4 ], [ %format-arg-116488.2, %normal-dest159 ]
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest43 unwind label %cleanup-lpad

tag2:                                             ; preds = %tag3
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest134 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest39, %normal-dest35
  %format-arg-116486.0 = phi {}* [ %format-arg-116486.1216219, %normal-dest35 ], [ %format-arg-116486.2, %normal-dest39 ]
  call void @cc_writeCell({}* %26, {}* %format-arg-116486.0)
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %16 = icmp eq {}* %G116493.0223, %15
  br i1 %16, label %tag2, label %tag4

tag4:                                             ; preds = %normal-dest141, %tag3
  %format-arg-116487.0 = phi {}* [ %format-arg-116487.1225, %tag3 ], [ %format-arg-116487.2, %normal-dest141 ]
  call void @cc_writeCell({}* %27, {}* %format-arg-116487.0)
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %18 = icmp eq {}* %G116492.0, %17
  br i1 %18, label %tag5, label %tag1

tag5:                                             ; preds = %tag4
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest152 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest152, %tag5, %normal-dest134, %tag2, %normal-dest118, %normal-dest112, %normal-dest104, %normal-dest98, %normal-dest87, %normal-dest80, %normal-dest73, %normal-dest67, %normal-dest55, %normal-dest48, %normal-dest47, %normal-dest45, %normal-dest43, %tag1, %normal-dest36, %tag, %normal-dest34, %normal-dest33, %process-rest-argument, %error
  %21 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %21

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs10 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-111 = add i64 %rem-nargs10, -1
  store i64 %rem-nargs-111, i64* %"remaining-nargs*", align 8
  %vaarg12 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args17 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args17, label %opt-cont16, label %opt-cont.opt-cont16.thread_crit_edge

opt-cont.opt-cont16.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-cont16:                                       ; preds = %opt-cont
  %rem-nargs18 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-119 = add i64 %rem-nargs18, -1
  store i64 %rem-nargs-119, i64* %"remaining-nargs*", align 8
  %vaarg20 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args25 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args25, label %opt-cont16.opt-init23_crit_edge, label %opt-arg22

opt-cont16.opt-init23_crit_edge:                  ; preds = %opt-cont16
  %.pre227 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-arg22:                                        ; preds = %opt-cont16
  %rem-nargs26 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-127 = add i64 %rem-nargs26, -1
  store i64 %rem-nargs-127, i64* %"remaining-nargs*", align 8
  %vaarg28 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont16.opt-init23_crit_edge, %opt-cont.opt-cont16.thread_crit_edge, %opt-cont.thread, %opt-arg22
  %format-arg-116487.1225 = phi {}* [ %vaarg20, %opt-arg22 ], [ %vaarg20, %opt-cont16.opt-init23_crit_edge ], [ undef, %opt-cont.opt-cont16.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G116493.0223 = phi {}* [ %22, %opt-arg22 ], [ %22, %opt-cont16.opt-init23_crit_edge ], [ %.pre, %opt-cont.opt-cont16.thread_crit_edge ], [ %23, %opt-cont.thread ]
  %G116494.0214221 = phi {}* [ %22, %opt-arg22 ], [ %22, %opt-cont16.opt-init23_crit_edge ], [ %22, %opt-cont.opt-cont16.thread_crit_edge ], [ %23, %opt-cont.thread ]
  %format-arg-116486.1216219 = phi {}* [ %vaarg12, %opt-arg22 ], [ %vaarg12, %opt-cont16.opt-init23_crit_edge ], [ %vaarg12, %opt-cont.opt-cont16.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G116492.0 = phi {}* [ %22, %opt-arg22 ], [ %.pre227, %opt-cont16.opt-init23_crit_edge ], [ %.pre, %opt-cont.opt-cont16.thread_crit_edge ], [ %23, %opt-cont.thread ]
  %format-arg-116488.1 = phi {}* [ %vaarg28, %opt-arg22 ], [ undef, %opt-cont16.opt-init23_crit_edge ], [ undef, %opt-cont.opt-cont16.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %24 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %25 = invoke {}* @cc_makeCell()
          to label %normal-dest33 unwind label %cleanup-lpad

normal-dest33:                                    ; preds = %process-rest-argument
  %26 = invoke {}* @cc_makeCell()
          to label %normal-dest34 unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %normal-dest33
  %27 = invoke {}* @cc_makeCell()
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest34
  call void @cc_writeCell({}* %25, {}* %vaarg)
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %29 = icmp eq {}* %G116494.0214221, %28
  br i1 %29, label %tag, label %tag3

normal-dest36:                                    ; preds = %tag
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %32 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 487), align 8
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %30, {}* %31, {}* %32, {}* %33, {}* %34, {}* %35, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest36
  %.elt205 = extractvalue { {}*, i64 } %36, 0
  %.elt207 = extractvalue { {}*, i64 } %36, 1
  %cond169 = icmp eq i64 %.elt207, 0
  %37 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116486.2 = select i1 %cond169, {}* %37, {}* %.elt205
  br label %tag3

normal-dest43:                                    ; preds = %tag1
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest43
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest47:                                    ; preds = %normal-dest45
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %43, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.26", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.26^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest47
  %ptrtoint49 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint50 = add i64 %ptrtoint49, 7
  %entry-point-addr51 = inttoptr i64 %entry-point-addr-uint50 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point52 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr51, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point52({}* %41, i64 2, {}* %42, {}* %"closure->LAMBDA", {}* null, {}* null)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest48
  %.elt = extractvalue { {}*, i64 } %44, 0
  %.elt172 = extractvalue { {}*, i64 } %44, 1
  %cond = icmp eq i64 %.elt172, 0
  %45 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119290.0 = select i1 %cond, {}* %45, {}* %.elt
  %ptrtoint61 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %39, i64 1, {}* %G119290.0, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest55
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %49 = invoke {}* @cc_safe_symbol_value({}* %48)
          to label %normal-dest73 unwind label %cleanup-lpad

normal-dest73:                                    ; preds = %normal-dest67
  %.elt176 = extractvalue { {}*, i64 } %46, 1
  %cond165 = icmp eq i64 %.elt176, 0
  %.elt174 = extractvalue { {}*, i64 } %46, 0
  %G119286.0 = select i1 %cond165, {}* %47, {}* %.elt174
  %ptrtoint74 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %12, i64 2, {}* %G119286.0, {}* %49, {}* null, {}* null)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest73
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 254), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest87 unwind label %cleanup-lpad

normal-dest87:                                    ; preds = %normal-dest80
  %.elt180 = extractvalue { {}*, i64 } %50, 1
  %cond166 = icmp eq i64 %.elt180, 0
  %.elt178 = extractvalue { {}*, i64 } %50, 0
  %G116491.0 = select i1 %cond166, {}* %51, {}* %.elt178
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA91" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure170.sub, {}* %55, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.27", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.27^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 3, {}* %27, {}* %26, {}* %25)
  %ptrtoint92 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %53, i64 3, {}* %54, {}* %G116491.0, {}* %"closure->LAMBDA91", {}* null)
          to label %normal-dest98 unwind label %cleanup-lpad

normal-dest98:                                    ; preds = %normal-dest87
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 469), align 8
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest104 unwind label %cleanup-lpad

normal-dest104:                                   ; preds = %normal-dest98
  %59 = ptrtoint {}* %25 to i64
  %60 = add i64 %59, -3
  %61 = inttoptr i64 %60 to {}**
  %62 = load {}*, {}** %61, align 8, !tbaa !32
  %ptrtoint106 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint107 = add i64 %ptrtoint106, 7
  %entry-point-addr108 = inttoptr i64 %entry-point-addr-uint107 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point109 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr108, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point109({}* %58, i64 2, {}* %format-arg-116488.0, {}* %62, {}* null, {}* null)
          to label %normal-dest112 unwind label %cleanup-lpad

normal-dest112:                                   ; preds = %normal-dest104
  %64 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 471), align 8
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest118 unwind label %cleanup-lpad

normal-dest118:                                   ; preds = %normal-dest112
  %66 = load {}*, {}** %61, align 8, !tbaa !32
  %ptrtoint120 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint121 = add i64 %ptrtoint120, 7
  %entry-point-addr122 = inttoptr i64 %entry-point-addr-uint121 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point123 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr122, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point123({}* %65, i64 1, {}* %66, {}* null, {}* null, {}* null)
          to label %normal-dest126 unwind label %cleanup-lpad

normal-dest126:                                   ; preds = %normal-dest118
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %68 = insertvalue { {}*, i64 } undef, {}* %24, 0
  %69 = insertvalue { {}*, i64 } %68, i64 1, 1
  ret { {}*, i64 } %69

normal-dest134:                                   ; preds = %tag2
  %70 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %71 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %72 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %73 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %74 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 487), align 8
  %75 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint135 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint136 = add i64 %ptrtoint135, 7
  %entry-point-addr137 = inttoptr i64 %entry-point-addr-uint136 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point138 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr137, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point138({}* %14, i64 7, {}* %70, {}* %71, {}* %72, {}* %73, {}* %74, {}* %75, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest141 unwind label %cleanup-lpad

normal-dest141:                                   ; preds = %normal-dest134
  %.elt201 = extractvalue { {}*, i64 } %76, 0
  %.elt203 = extractvalue { {}*, i64 } %76, 1
  %cond168 = icmp eq i64 %.elt203, 0
  %77 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116487.2 = select i1 %cond168, {}* %77, {}* %.elt201
  br label %tag4

normal-dest152:                                   ; preds = %tag5
  %78 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %79 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %80 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %81 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %82 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 487), align 8
  %83 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint153 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint154 = add i64 %ptrtoint153, 7
  %entry-point-addr155 = inttoptr i64 %entry-point-addr-uint154 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point156 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr155, align 8
  %84 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point156({}* %20, i64 7, {}* %78, {}* %79, {}* %80, {}* %81, {}* %82, {}* %83, {}* inttoptr (i64 12 to {}*))
          to label %normal-dest159 unwind label %cleanup-lpad

normal-dest159:                                   ; preds = %normal-dest152
  %.elt197 = extractvalue { {}*, i64 } %84, 0
  %.elt199 = extractvalue { {}*, i64 } %84, 1
  %cond167 = icmp eq i64 %.elt199, 0
  %85 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116488.2 = select i1 %cond167, {}* %85, {}* %.elt197
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.26"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !92 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.26^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.26^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 488), align 16
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 489), align 8
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt21 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt21, 0
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119300.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 491), align 8
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 487), align 8
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 11, {}* %14, {}* %15, {}* %16, {}* %17, {}* %G119300.0, {}* %22, {}* %21, {}* %23, {}* %24, {}* %25, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %26
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.27"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !93 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.27^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest7, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 2, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !32
  %18 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %19 = bitcast %"class.core::T_O"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %22 = bitcast %"class.core::T_O"** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !32
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 495), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %26 = add i64 %17, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8, !tbaa !32
  %29 = add i64 %20, -3
  %30 = inttoptr i64 %29 to {}**
  %31 = load {}*, {}** %30, align 8, !tbaa !32
  %32 = add i64 %23, -3
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8, !tbaa !32
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %28, {}* %31, {}* %34, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest7
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %35
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.28"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !94 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure116 = alloca [136 x i8], align 1
  %stack-allocated-closure116.sub = getelementptr inbounds [136 x i8], [136 x i8]* %stack-allocated-closure116, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest104, %tag3
  %format-arg-116585.0 = phi {}* [ %format-arg-116585.1, %tag3 ], [ %format-arg-116585.2, %normal-dest104 ]
  call void @cc_writeCell({}* %23, {}* %format-arg-116585.0)
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest27 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest24
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest83 unwind label %cleanup-lpad

tag2:                                             ; preds = %tag3
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest97 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest90, %normal-dest24
  %format-arg-116584.0 = phi {}* [ %format-arg-116584.1149, %normal-dest24 ], [ %format-arg-116584.2, %normal-dest90 ]
  call void @cc_writeCell({}* %22, {}* %format-arg-116584.0)
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %16 = icmp eq {}* %G116589.0, %15
  br i1 %16, label %tag2, label %tag

cleanup-lpad:                                     ; preds = %normal-dest97, %tag2, %normal-dest83, %tag1, %normal-dest64, %normal-dest57, %normal-dest50, %normal-dest44, %normal-dest35, %normal-dest32, %normal-dest31, %normal-dest29, %normal-dest27, %tag, %normal-dest23, %normal-dest22, %process-rest-argument, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-116584.1149 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G116590.0147 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %G116589.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %format-arg-116585.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = invoke {}* @cc_makeCell()
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %process-rest-argument
  %22 = invoke {}* @cc_makeCell()
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest22
  %23 = invoke {}* @cc_makeCell()
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest23
  call void @cc_writeCell({}* %21, {}* %vaarg)
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %25 = icmp eq {}* %G116590.0147, %24
  br i1 %25, label %tag1, label %tag3

normal-dest27:                                    ; preds = %tag
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest27
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest29
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %31, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.29", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.29^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest31
  %ptrtoint = ptrtoint {}* %29 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %29, i64 2, {}* %30, {}* %"closure->LAMBDA", {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest32
  %.elt = extractvalue { {}*, i64 } %32, 0
  %.elt118 = extractvalue { {}*, i64 } %32, 1
  %cond = icmp eq i64 %.elt118, 0
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118436.0 = select i1 %cond, {}* %33, {}* %.elt
  %ptrtoint38 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint39 = add i64 %ptrtoint38, 7
  %entry-point-addr40 = inttoptr i64 %entry-point-addr-uint39 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point41 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr40, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point41({}* %27, i64 1, {}* %G118436.0, {}* null, {}* null, {}* null)
          to label %normal-dest44 unwind label %cleanup-lpad

normal-dest44:                                    ; preds = %normal-dest35
  %35 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %37 = invoke {}* @cc_safe_symbol_value({}* %36)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest44
  %.elt122 = extractvalue { {}*, i64 } %34, 1
  %cond112 = icmp eq i64 %.elt122, 0
  %.elt120 = extractvalue { {}*, i64 } %34, 0
  %G118432.0 = select i1 %cond112, {}* %35, {}* %.elt120
  %ptrtoint51 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint52 = add i64 %ptrtoint51, 7
  %entry-point-addr53 = inttoptr i64 %entry-point-addr-uint52 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point54 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr53, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point54({}* %10, i64 2, {}* %G118432.0, {}* %37, {}* null, {}* null)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest50
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 254), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest64 unwind label %cleanup-lpad

normal-dest64:                                    ; preds = %normal-dest57
  %.elt126 = extractvalue { {}*, i64 } %38, 1
  %cond113 = icmp eq i64 %.elt126, 0
  %.elt124 = extractvalue { {}*, i64 } %38, 0
  %G116588.0 = select i1 %cond113, {}* %39, {}* %.elt124
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA68" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure116.sub, {}* %43, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.30", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.30^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 3, {}* %23, {}* %22, {}* %21)
  %ptrtoint69 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %41, i64 3, {}* %42, {}* %G116588.0, {}* %"closure->LAMBDA68", {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest64
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %45 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %46 = insertvalue { {}*, i64 } %45, i64 1, 1
  ret { {}*, i64 } %46

normal-dest83:                                    ; preds = %tag1
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %49 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 531), align 8
  %52 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint84 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %12, i64 7, {}* %47, {}* %48, {}* %49, {}* %50, {}* %51, {}* %52, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %.elt139 = extractvalue { {}*, i64 } %53, 0
  %.elt141 = extractvalue { {}*, i64 } %53, 1
  %cond115 = icmp eq i64 %.elt141, 0
  %54 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116584.2 = select i1 %cond115, {}* %54, {}* %.elt139
  br label %tag3

normal-dest97:                                    ; preds = %tag2
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %56 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %57 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %58 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %59 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 531), align 8
  %60 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint98 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint99 = add i64 %ptrtoint98, 7
  %entry-point-addr100 = inttoptr i64 %entry-point-addr-uint99 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr100, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point101({}* %14, i64 7, {}* %55, {}* %56, {}* %57, {}* %58, {}* %59, {}* %60, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest104 unwind label %cleanup-lpad

normal-dest104:                                   ; preds = %normal-dest97
  %.elt135 = extractvalue { {}*, i64 } %61, 0
  %.elt137 = extractvalue { {}*, i64 } %61, 1
  %cond114 = icmp eq i64 %.elt137, 0
  %62 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116585.2 = select i1 %cond114, {}* %62, {}* %.elt135
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.29"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !95 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.29^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.29^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 488), align 16
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 489), align 8
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt21 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt21, 0
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118446.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 491), align 8
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 531), align 8
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 11, {}* %14, {}* %15, {}* %16, {}* %17, {}* %G118446.0, {}* %22, {}* %21, {}* %23, {}* %24, {}* %25, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %26
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.30"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !96 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.30^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest7, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 2, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !32
  %18 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %19 = bitcast %"class.core::T_O"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %22 = bitcast %"class.core::T_O"** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !32
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 495), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %26 = add i64 %17, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8, !tbaa !32
  %29 = add i64 %20, -3
  %30 = inttoptr i64 %29 to {}**
  %31 = load {}*, {}** %30, align 8, !tbaa !32
  %32 = add i64 %23, -3
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8, !tbaa !32
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %28, {}* %31, {}* %34, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest7
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %35
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.31"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !97 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag4:                                             ; preds = %normal-dest85
  %9 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %21, i64 4)
  %result = extractvalue { i64, i1 } %9, 0
  %overflow = extractvalue { i64, i1 } %9, 1
  %10 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag9, label %tag18.backedge

tag18.backedge:                                   ; preds = %tag4, %normal-dest53, %normal-dest64
  %I.0.be = phi {}* [ %I.1, %normal-dest53 ], [ %I.2, %normal-dest64 ], [ %10, %tag4 ]
  br label %tag18

tag9:                                             ; preds = %tag4
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 116), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit

tag11:                                            ; preds = %normal-dest85
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 118), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest57 unwind label %cleanup-lpad.loopexit

tag12:                                            ; preds = %tag18
  %15 = icmp slt {}* %I.0, inttoptr (i64 8 to {}*)
  br i1 %15, label %tag14, label %tag15

tag14:                                            ; preds = %tag12
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %tag21

tag15:                                            ; preds = %tag12, %tag21
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %17 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %18 = insertvalue { {}*, i64 } %17, i64 1, 1
  ret { {}*, i64 } %18

tag17:                                            ; preds = %tag21
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 471), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %tag18.backedge, %tag18.preheader
  %I.0 = phi {}* [ null, %tag18.preheader ], [ %I.0.be, %tag18.backedge ]
  %21 = ptrtoint {}* %I.0 to i64
  %fixnum-tag-only94169 = and i64 %21, 3
  %fixnump-test95 = icmp eq i64 %fixnum-tag-only94169, 0
  br i1 %fixnump-test95, label %tag12, label %tag29

tag21:                                            ; preds = %normal-dest157, %tag14
  %22 = phi {}* [ %.pre, %tag14 ], [ %50, %normal-dest157 ]
  %G119460.0 = phi {}* [ %16, %tag14 ], [ %G119460.1, %normal-dest157 ]
  %23 = icmp eq {}* %G119460.0, %22
  br i1 %23, label %tag15, label %tag17

tag25:                                            ; preds = %process-rest-argument
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit.split-lp

tag28:                                            ; preds = %normal-dest116, %process-rest-argument
  %format-arg-116466.0 = phi {}* [ %format-arg-116466.1, %process-rest-argument ], [ %format-arg-116466.2, %normal-dest116 ]
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 469), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit.split-lp

tag29:                                            ; preds = %tag18
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 120), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag9, %normal-dest49, %tag11, %normal-dest57, %tag17, %normal-dest78, %tag29, %normal-dest150
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %tag25, %normal-dest109, %tag28, %normal-dest137
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %rem-nargs36 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-137 = add i64 %rem-nargs36, -1
  store i64 %rem-nargs-137, i64* %"remaining-nargs*", align 8
  %vaarg38 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %G116472.0 = phi {}* [ %30, %opt-arg ], [ %31, %opt-init ]
  %format-arg-116466.1 = phi {}* [ %vaarg38, %opt-arg ], [ undef, %opt-init ]
  %32 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %34 = icmp eq {}* %G116472.0, %33
  br i1 %34, label %tag25, label %tag28

normal-dest49:                                    ; preds = %tag9
  %ptrtoint50 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint50, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %10, {}* null, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad.loopexit

normal-dest53:                                    ; preds = %normal-dest49
  %.elt184 = extractvalue { {}*, i64 } %35, 0
  %.elt186 = extractvalue { {}*, i64 } %35, 1
  %cond165 = icmp eq i64 %.elt186, 0
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %I.1 = select i1 %cond165, {}* %36, {}* %.elt184
  br label %tag18.backedge

normal-dest57:                                    ; preds = %tag11
  %ptrtoint58 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint59 = add i64 %ptrtoint58, 7
  %entry-point-addr60 = inttoptr i64 %entry-point-addr-uint59 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point61 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr60, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point61({}* %14, i64 2, {}* %I.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest64 unwind label %cleanup-lpad.loopexit

normal-dest64:                                    ; preds = %normal-dest57
  %.elt180 = extractvalue { {}*, i64 } %37, 0
  %.elt182 = extractvalue { {}*, i64 } %37, 1
  %cond164 = icmp eq i64 %.elt182, 0
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %I.2 = select i1 %cond164, {}* %38, {}* %.elt180
  br label %tag18.backedge

normal-dest78:                                    ; preds = %tag17
  %ptrtoint79 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint80 = add i64 %ptrtoint79, 7
  %entry-point-addr81 = inttoptr i64 %entry-point-addr-uint80 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point82 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr81, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point82({}* %20, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest85 unwind label %cleanup-lpad.loopexit

normal-dest85:                                    ; preds = %normal-dest78
  br i1 %fixnump-test95, label %tag4, label %tag11

normal-dest109:                                   ; preds = %tag25
  %40 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %42 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 466), align 16
  %45 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint110 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint111 = add i64 %ptrtoint110, 7
  %entry-point-addr112 = inttoptr i64 %entry-point-addr-uint111 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point113 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr112, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point113({}* %25, i64 7, {}* %40, {}* %41, {}* %42, {}* %43, {}* %44, {}* %45, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest116:                                   ; preds = %normal-dest109
  %.elt191 = extractvalue { {}*, i64 } %46, 0
  %.elt193 = extractvalue { {}*, i64 } %46, 1
  %cond166 = icmp eq i64 %.elt193, 0
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116466.2 = select i1 %cond166, {}* %47, {}* %.elt191
  br label %tag28

normal-dest137:                                   ; preds = %tag28
  %ptrtoint138 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint139 = add i64 %ptrtoint138, 7
  %entry-point-addr140 = inttoptr i64 %entry-point-addr-uint139 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point141 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr140, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point141({}* %27, i64 2, {}* %format-arg-116466.0, {}* %vaarg, {}* null, {}* null)
          to label %tag18.preheader unwind label %cleanup-lpad.loopexit.split-lp

tag18.preheader:                                  ; preds = %normal-dest137
  br label %tag18

normal-dest150:                                   ; preds = %tag29
  %ptrtoint151 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint152 = add i64 %ptrtoint151, 7
  %entry-point-addr153 = inttoptr i64 %entry-point-addr-uint152 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point154 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr153, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point154({}* %29, i64 2, {}* %I.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest157 unwind label %cleanup-lpad.loopexit

normal-dest157:                                   ; preds = %normal-dest150
  %.elt171 = extractvalue { {}*, i64 } %49, 0
  %.elt173 = extractvalue { {}*, i64 } %49, 1
  %cond = icmp eq i64 %.elt173, 0
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G119460.1 = select i1 %cond, {}* %50, {}* %.elt171
  br label %tag21
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.32"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !98 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

cleanup-lpad:                                     ; preds = %normal-dest5, %continue, %error
  %9 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %9

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %10 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 471), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest5:                                     ; preds = %continue
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %10, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.33"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !99 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %stack-allocated-closure130 = alloca [136 x i8], align 1
  %stack-allocated-closure130.sub = getelementptr inbounds [136 x i8], [136 x i8]* %stack-allocated-closure130, i64 0, i64 0
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest120, %normal-dest24
  %format-arg-116606.0 = phi {}* [ %format-arg-116606.1167, %normal-dest24 ], [ %format-arg-116606.2, %normal-dest120 ]
  call void @cc_writeCell({}* %22, {}* %format-arg-116606.0)
  %9 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %10 = icmp eq {}* %G116611.0, %9
  br i1 %10, label %tag1, label %tag2

tag1:                                             ; preds = %tag
  %11 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest27 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest30, %tag
  %format-arg-116607.0 = phi {}* [ %format-arg-116607.1, %tag ], [ %format-arg-116607.2, %normal-dest30 ]
  call void @cc_writeCell({}* %23, {}* %format-arg-116607.0)
  %13 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest36 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest24
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest113 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest113, %tag3, %normal-dest97, %normal-dest91, %normal-dest80, %normal-dest73, %normal-dest66, %normal-dest60, %normal-dest48, %normal-dest41, %normal-dest40, %normal-dest38, %normal-dest36, %tag2, %normal-dest27, %tag1, %normal-dest23, %normal-dest22, %process-rest-argument, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-116606.1167 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G116612.0165 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %G116611.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %format-arg-116607.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = invoke {}* @cc_makeCell()
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %process-rest-argument
  %22 = invoke {}* @cc_makeCell()
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest22
  %23 = invoke {}* @cc_makeCell()
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest23
  call void @cc_writeCell({}* %21, {}* %vaarg)
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %25 = icmp eq {}* %G116612.0165, %24
  br i1 %25, label %tag3, label %tag

normal-dest27:                                    ; preds = %tag1
  %26 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %27 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %28 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %29 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %30 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 537), align 8
  %31 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 7, {}* %26, {}* %27, {}* %28, {}* %29, {}* %30, {}* %31, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %normal-dest27
  %.elt153 = extractvalue { {}*, i64 } %32, 0
  %.elt155 = extractvalue { {}*, i64 } %32, 1
  %cond128 = icmp eq i64 %.elt155, 0
  %33 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116607.2 = select i1 %cond128, {}* %33, {}* %.elt153
  br label %tag2

normal-dest36:                                    ; preds = %tag2
  %34 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest36
  %36 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest40 unwind label %cleanup-lpad

normal-dest40:                                    ; preds = %normal-dest38
  %38 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %39 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %39, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.34", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.34^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 0)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest40
  %ptrtoint42 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %37, i64 2, {}* %38, {}* %"closure->LAMBDA", {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt132 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt132, 0
  %41 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118234.0 = select i1 %cond, {}* %41, {}* %.elt
  %ptrtoint54 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint55 = add i64 %ptrtoint54, 7
  %entry-point-addr56 = inttoptr i64 %entry-point-addr-uint55 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point57 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr56, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point57({}* %35, i64 1, {}* %G118234.0, {}* null, {}* null, {}* null)
          to label %normal-dest60 unwind label %cleanup-lpad

normal-dest60:                                    ; preds = %normal-dest48
  %43 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %44 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %45 = invoke {}* @cc_safe_symbol_value({}* %44)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest60
  %.elt136 = extractvalue { {}*, i64 } %42, 1
  %cond126 = icmp eq i64 %.elt136, 0
  %.elt134 = extractvalue { {}*, i64 } %42, 0
  %G118230.0 = select i1 %cond126, {}* %43, {}* %.elt134
  %ptrtoint67 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint68 = add i64 %ptrtoint67, 7
  %entry-point-addr69 = inttoptr i64 %entry-point-addr-uint68 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point70 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr69, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point70({}* %14, i64 2, {}* %G118230.0, {}* %45, {}* null, {}* null)
          to label %normal-dest73 unwind label %cleanup-lpad

normal-dest73:                                    ; preds = %normal-dest66
  %47 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %48 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 254), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest73
  %.elt140 = extractvalue { {}*, i64 } %46, 1
  %cond127 = icmp eq i64 %.elt140, 0
  %.elt138 = extractvalue { {}*, i64 } %46, 0
  %G116610.0 = select i1 %cond127, {}* %47, {}* %.elt138
  %50 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 493), align 8
  %51 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 182), align 16
  %"closure->LAMBDA84" = call {}* (i8*, {}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_stack_enclose(i8* nonnull %stack-allocated-closure130.sub, {}* %51, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.35", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.35^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8009, i64 253, i64 0, i64 3, {}* %23, {}* %22, {}* %21)
  %ptrtoint85 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint86 = add i64 %ptrtoint85, 7
  %entry-point-addr87 = inttoptr i64 %entry-point-addr-uint86 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point88 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr87, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point88({}* %49, i64 3, {}* %50, {}* %G116610.0, {}* %"closure->LAMBDA84", {}* null)
          to label %normal-dest91 unwind label %cleanup-lpad

normal-dest91:                                    ; preds = %normal-dest80
  %53 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 518), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest97 unwind label %cleanup-lpad

normal-dest97:                                    ; preds = %normal-dest91
  %55 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 538), align 16
  %56 = ptrtoint {}* %21 to i64
  %57 = add i64 %56, -3
  %58 = inttoptr i64 %57 to {}**
  %59 = load {}*, {}** %58, align 8, !tbaa !32
  %ptrtoint99 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %54, i64 2, {}* %55, {}* %59, {}* null, {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad

normal-dest105:                                   ; preds = %normal-dest97
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %61 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %62 = insertvalue { {}*, i64 } %61, i64 1, 1
  ret { {}*, i64 } %62

normal-dest113:                                   ; preds = %tag3
  %63 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %64 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %65 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %66 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %67 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 537), align 8
  %68 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint114 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint115 = add i64 %ptrtoint114, 7
  %entry-point-addr116 = inttoptr i64 %entry-point-addr-uint115 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point117 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr116, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point117({}* %16, i64 7, {}* %63, {}* %64, {}* %65, {}* %66, {}* %67, {}* %68, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest120 unwind label %cleanup-lpad

normal-dest120:                                   ; preds = %normal-dest113
  %.elt157 = extractvalue { {}*, i64 } %69, 0
  %.elt159 = extractvalue { {}*, i64 } %69, 1
  %cond129 = icmp eq i64 %.elt159, 0
  %70 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %format-arg-116606.2 = select i1 %cond129, {}* %70, {}* %.elt157
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.34"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !100 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.34^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.34^DESC" to %0*)) #7
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  %15 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %16 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 488), align 16
  %17 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 489), align 8
  %18 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt21 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt21, 0
  %21 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  %G118244.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 491), align 8
  %23 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 537), align 8
  %25 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 11, {}* %14, {}* %15, {}* %16, {}* %17, {}* %G118244.0, {}* %22, {}* %21, {}* %23, {}* %24, {}* %25, {}* inttoptr (i64 4 to {}*))
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %26
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.35"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !101 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.35^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest7, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 2, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !32
  %18 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 1, i32 0
  %19 = bitcast %"class.core::T_O"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !32
  %21 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %22 = bitcast %"class.core::T_O"** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !32
  %24 = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 495), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %26 = add i64 %17, -3
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8, !tbaa !32
  %29 = add i64 %20, -3
  %30 = inttoptr i64 %29 to {}**
  %31 = load {}*, {}** %30, align 8, !tbaa !32
  %32 = add i64 %23, -3
  %33 = inttoptr i64 %32 to {}**
  %34 = load {}*, {}** %33, align 8, !tbaa !32
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 3, {}* %28, {}* %31, {}* %34, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest7
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %35
}

; Function Attrs: uwtable
define internal void @RUN-ALL.36() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !102 {
entry:
  tail call void @ltvc_make_nil({ i8*, i8*, i64 }* nonnull @constants-table, i64 0)
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-<", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-COMMON-LISP, i64 0, i64 0))
  %"CONTAB[4]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 4), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 3, {}* %"CONTAB[4]*")
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 2), align 16
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 1, {}* %"CONTAB[2]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CONS, i64 0, i64 0))
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 6), align 16
  %"CONTAB[3]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 5, {}* %"CONTAB[6]*", {}* %"CONTAB[3]*1")
  tail call void @ltvc_make_t({ i8*, i8*, i64 }* nonnull @constants-table, i64 7)
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ERROR, i64 0, i64 0))
  %"CONTAB[9]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 9), align 8
  %"CONTAB[3]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 8, {}* %"CONTAB[9]*", {}* %"CONTAB[3]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-TYPE-ERROR, i64 0, i64 0))
  %"CONTAB[11]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 11), align 8
  %"CONTAB[3]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 10, {}* %"CONTAB[11]*", {}* %"CONTAB[3]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-DATUM, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KEYWORD, i64 0, i64 0))
  %"CONTAB[15]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 15), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 14, {}* %"CONTAB[15]*")
  %"CONTAB[13]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 13), align 8
  %"CONTAB[14]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 12, {}* %"CONTAB[13]*", {}* %"CONTAB[14]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-EXPECTED-TYPE, i64 0, i64 0))
  %"CONTAB[17]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 17), align 8
  %"CONTAB[14]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 16, {}* %"CONTAB[17]*", {}* %"CONTAB[14]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-LIST, i64 0, i64 0))
  %"CONTAB[19]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 19), align 8
  %"CONTAB[3]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 18, {}* %"CONTAB[19]*", {}* %"CONTAB[3]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-FUNCTION, i64 0, i64 0))
  %"CONTAB[21]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 21), align 8
  %"CONTAB[3]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 20, {}* %"CONTAB[21]*", {}* %"CONTAB[3]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SYMBOL, i64 0, i64 0))
  %"CONTAB[23]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 23), align 8
  %"CONTAB[3]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 22, {}* %"CONTAB[23]*", {}* %"CONTAB[3]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SYMBOL-FUNCTION, i64 0, i64 0))
  %"CONTAB[25]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 25), align 8
  %"CONTAB[3]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 24, {}* %"CONTAB[25]*", {}* %"CONTAB[3]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-OR, i64 0, i64 0))
  %"CONTAB[28]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 28), align 16
  %"CONTAB[3]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 27, {}* %"CONTAB[28]*", {}* %"CONTAB[3]*9")
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 26, i64 3, {}* %"CONTAB[27]*", {}* %"CONTAB[22]*", {}* %"CONTAB[20]*")
  %"CONTAB[27]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 29, i64 3, {}* %"CONTAB[27]*10", {}* %"CONTAB[22]*11", {}* %"CONTAB[20]*12")
  %"CONTAB[27]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 30, i64 3, {}* %"CONTAB[27]*13", {}* %"CONTAB[22]*14", {}* %"CONTAB[20]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-FDEFINITION, i64 0, i64 0))
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 32), align 16
  %"CONTAB[3]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 31, {}* %"CONTAB[32]*", {}* %"CONTAB[3]*16")
  %"CONTAB[27]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 33, i64 3, {}* %"CONTAB[27]*17", {}* %"CONTAB[22]*18", {}* %"CONTAB[20]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-KLH=MIN-LISTE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 37, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-COMMON-LISP-USER, i64 0, i64 0))
  %"CONTAB[37]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 37), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 36, {}* %"CONTAB[37]*")
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 35), align 8
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 34, {}* %"CONTAB[35]*", {}* %"CONTAB[36]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SETF-LAMBDA-LIST, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CORE, i64 0, i64 0))
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 41), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 40, {}* %"CONTAB[41]*")
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 39), align 8
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 38, {}* %"CONTAB[39]*", {}* %"CONTAB[40]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 44, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-SEQUENZ, i64 0, i64 0))
  %"CONTAB[44]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 44), align 16
  %"CONTAB[36]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 43, {}* %"CONTAB[44]*", {}* %"CONTAB[36]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-TESTFUNKTION, i64 0, i64 0))
  %"CONTAB[46]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 46), align 16
  %"CONTAB[36]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 45, {}* %"CONTAB[46]*", {}* %"CONTAB[36]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"str-&KEY", i64 0, i64 0))
  %"CONTAB[48]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 48), align 16
  %"CONTAB[3]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 47, {}* %"CONTAB[48]*", {}* %"CONTAB[3]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 51, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-VERGLEICHSFUNKTION, i64 0, i64 0))
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 51), align 8
  %"CONTAB[36]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 50, {}* %"CONTAB[51]*", {}* %"CONTAB[36]*23")
  %"CONTAB[20]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  %"CONTAB[1]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 1), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 52, i64 2, {}* %"CONTAB[20]*24", {}* %"CONTAB[1]*")
  %"CONTAB[50]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 50), align 16
  %"CONTAB[52]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 52), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 49, i64 2, {}* %"CONTAB[50]*", {}* %"CONTAB[52]*")
  %"CONTAB[43]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 43), align 8
  %"CONTAB[45]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 45), align 8
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 49), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 42, i64 4, {}* %"CONTAB[43]*", {}* %"CONTAB[45]*", {}* %"CONTAB[47]*", {}* %"CONTAB[49]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SET-SOURCE-INFO, i64 0, i64 0))
  %"CONTAB[54]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 54), align 16
  %"CONTAB[40]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 53, {}* %"CONTAB[54]*", {}* %"CONTAB[40]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 57, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-CURRENT-SOURCE-FILE, i64 0, i64 0))
  %"CONTAB[57]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 57), align 8
  %"CONTAB[40]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 56, {}* %"CONTAB[57]*", {}* %"CONTAB[40]*26")
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 55, i64 4, {}* %"CONTAB[56]*", {}* inttoptr (i64 6532 to {}*), {}* inttoptr (i64 148 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 59, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-*CURRENT-FORM-LINENO*", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 61, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-COMPILER, i64 0, i64 0))
  %"CONTAB[61]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 61), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 60, {}* %"CONTAB[61]*")
  %"CONTAB[59]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 59), align 8
  %"CONTAB[60]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 60), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 58, {}* %"CONTAB[59]*", {}* %"CONTAB[60]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 63, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TOP-LEVEL, i64 0, i64 0))
  %"CONTAB[63]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 63), align 8
  %"CONTAB[40]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 62, {}* %"CONTAB[63]*", {}* %"CONTAB[40]*27")
  %"CONTAB[20]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  %"CONTAB[1]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 1), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 66, i64 2, {}* %"CONTAB[20]*28", {}* %"CONTAB[1]*29")
  %"CONTAB[50]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 50), align 16
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 66), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 65, i64 2, {}* %"CONTAB[50]*30", {}* %"CONTAB[66]*")
  %"CONTAB[43]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 43), align 8
  %"CONTAB[45]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 45), align 8
  %"CONTAB[47]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[65]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 65), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 64, i64 4, {}* %"CONTAB[43]*31", {}* %"CONTAB[45]*32", {}* %"CONTAB[47]*33", {}* %"CONTAB[65]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 68, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-ALLOW-OTHER-KEYS, i64 0, i64 0))
  %"CONTAB[68]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 68), align 16
  %"CONTAB[14]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 67, {}* %"CONTAB[68]*", {}* %"CONTAB[14]*34")
  %"CONTAB[51]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 51), align 8
  %"CONTAB[14]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 69, {}* %"CONTAB[51]*35", {}* %"CONTAB[14]*36")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^1^TOP-COMPILE-FILE", i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"str-klh=funktionen.lisp^1^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-EQL, i64 0, i64 0))
  %"CONTAB[71]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 71), align 8
  %"CONTAB[3]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 70, {}* %"CONTAB[71]*", {}* %"CONTAB[3]*37")
  %"CONTAB[27]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 72, i64 3, {}* %"CONTAB[27]*38", {}* %"CONTAB[22]*39", {}* %"CONTAB[20]*40")
  %"CONTAB[27]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 73, i64 3, {}* %"CONTAB[27]*41", {}* %"CONTAB[22]*42", {}* %"CONTAB[20]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 75, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN, i64 0, i64 0))
  %"CONTAB[75]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 75), align 8
  %"CONTAB[36]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 74, {}* %"CONTAB[75]*", {}* %"CONTAB[36]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 78, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-LISTE, i64 0, i64 0))
  %"CONTAB[78]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 78), align 16
  %"CONTAB[36]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 77, {}* %"CONTAB[78]*", {}* %"CONTAB[36]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-NACH, i64 0, i64 0))
  %"CONTAB[80]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 80), align 16
  %"CONTAB[36]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 79, {}* %"CONTAB[80]*", {}* %"CONTAB[36]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 82, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-WEN, i64 0, i64 0))
  %"CONTAB[82]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 82), align 16
  %"CONTAB[36]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 81, {}* %"CONTAB[82]*", {}* %"CONTAB[36]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 85, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-VERGLEICHSTEST, i64 0, i64 0))
  %"CONTAB[85]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 85), align 8
  %"CONTAB[36]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 84, {}* %"CONTAB[85]*", {}* %"CONTAB[36]*48")
  %"CONTAB[20]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 70), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 86, i64 2, {}* %"CONTAB[20]*49", {}* %"CONTAB[70]*")
  %"CONTAB[84]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 84), align 16
  %"CONTAB[86]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 86), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 83, i64 2, {}* %"CONTAB[84]*", {}* %"CONTAB[86]*")
  %"CONTAB[77]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 77), align 8
  %"CONTAB[79]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 79), align 8
  %"CONTAB[81]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 81), align 8
  %"CONTAB[47]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[83]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 83), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 76, i64 5, {}* %"CONTAB[77]*", {}* %"CONTAB[79]*", {}* %"CONTAB[81]*", {}* %"CONTAB[47]*50", {}* %"CONTAB[83]*")
  %"CONTAB[56]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 87, i64 4, {}* %"CONTAB[56]*51", {}* inttoptr (i64 8164 to {}*), {}* inttoptr (i64 192 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[20]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  %"CONTAB[70]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 70), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 90, i64 2, {}* %"CONTAB[20]*52", {}* %"CONTAB[70]*53")
  %"CONTAB[84]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 84), align 16
  %"CONTAB[90]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 90), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 89, i64 2, {}* %"CONTAB[84]*54", {}* %"CONTAB[90]*")
  %"CONTAB[77]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 77), align 8
  %"CONTAB[79]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 79), align 8
  %"CONTAB[81]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 81), align 8
  %"CONTAB[47]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 89), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 88, i64 5, {}* %"CONTAB[77]*55", {}* %"CONTAB[79]*56", {}* %"CONTAB[81]*57", {}* %"CONTAB[47]*58", {}* %"CONTAB[89]*")
  %"CONTAB[85]*59" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 85), align 8
  %"CONTAB[14]*60" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 91, {}* %"CONTAB[85]*59", {}* %"CONTAB[14]*60")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^48^TOP-COMPILE-FILE", i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"str-klh=funktionen.lisp^48^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-*", i64 0, i64 0))
  %"CONTAB[93]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 93), align 8
  %"CONTAB[3]*61" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 92, {}* %"CONTAB[93]*", {}* %"CONTAB[3]*61")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 95, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-**", i64 0, i64 0))
  %"CONTAB[95]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 95), align 8
  %"CONTAB[3]*62" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 94, {}* %"CONTAB[95]*", {}* %"CONTAB[3]*62")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 97, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str-***", i64 0, i64 0))
  %"CONTAB[97]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 97), align 8
  %"CONTAB[3]*63" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 96, {}* %"CONTAB[97]*", {}* %"CONTAB[3]*63")
  ret void
}

; Function Attrs: nounwind
declare void @ltvc_make_nil({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_base_string({ i8*, i8*, i64 }*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_package({ i8*, i8*, i64 }*, i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_symbol({ i8*, i8*, i64 }*, i64, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_t({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_list({ i8*, i8*, i64 }*, i64, i64, ...) local_unnamed_addr #1

declare void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.37() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !103 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-+", i64 0, i64 0))
  %"CONTAB[99]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 99), align 8
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 98, {}* %"CONTAB[99]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 101, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-++", i64 0, i64 0))
  %"CONTAB[101]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 101), align 8
  %"CONTAB[3]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 100, {}* %"CONTAB[101]*", {}* %"CONTAB[3]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 103, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str-+++", i64 0, i64 0))
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 103), align 8
  %"CONTAB[3]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 102, {}* %"CONTAB[103]*", {}* %"CONTAB[3]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-/", i64 0, i64 0))
  %"CONTAB[105]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 105), align 8
  %"CONTAB[3]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 104, {}* %"CONTAB[105]*", {}* %"CONTAB[3]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 107, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-//", i64 0, i64 0))
  %"CONTAB[107]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 107), align 8
  %"CONTAB[3]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 106, {}* %"CONTAB[107]*", {}* %"CONTAB[3]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 109, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str-///", i64 0, i64 0))
  %"CONTAB[109]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 109), align 8
  %"CONTAB[3]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 108, {}* %"CONTAB[109]*", {}* %"CONTAB[3]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 111, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FIXNUM, i64 0, i64 0))
  %"CONTAB[111]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 111), align 8
  %"CONTAB[3]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 110, {}* %"CONTAB[111]*", {}* %"CONTAB[3]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 113, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SINGLE-FLOAT, i64 0, i64 0))
  %"CONTAB[113]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 113), align 8
  %"CONTAB[3]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 112, {}* %"CONTAB[113]*", {}* %"CONTAB[3]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 115, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-DOUBLE-FLOAT, i64 0, i64 0))
  %"CONTAB[115]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 115), align 8
  %"CONTAB[3]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 114, {}* %"CONTAB[115]*", {}* %"CONTAB[3]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 117, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM, i64 0, i64 0))
  %"CONTAB[117]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 117), align 8
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 116, {}* %"CONTAB[117]*", {}* %"CONTAB[40]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 119, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-+", i64 0, i64 0))
  %"CONTAB[119]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 119), align 8
  %"CONTAB[40]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 118, {}* %"CONTAB[119]*", {}* %"CONTAB[40]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 121, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-<", i64 0, i64 0))
  %"CONTAB[121]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 121), align 8
  %"CONTAB[40]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 120, {}* %"CONTAB[121]*", {}* %"CONTAB[40]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ROOM, i64 0, i64 0))
  %"CONTAB[123]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 123), align 8
  %"CONTAB[3]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 122, {}* %"CONTAB[123]*", {}* %"CONTAB[3]*11")
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 124, i64 3, {}* %"CONTAB[27]*", {}* %"CONTAB[22]*", {}* %"CONTAB[20]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 126, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-KLH=MULTIPLE-GC-SOFORT", i64 0, i64 0))
  %"CONTAB[126]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 126), align 16
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 125, {}* %"CONTAB[126]*", {}* %"CONTAB[36]*")
  %"CONTAB[122]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 122), align 16
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 128, i64 2, {}* %"CONTAB[122]*", {}* %"CONTAB[7]*")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[128]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 128), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 127, i64 2, {}* %"CONTAB[47]*", {}* %"CONTAB[128]*")
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 129, i64 4, {}* %"CONTAB[56]*", {}* inttoptr (i64 9520 to {}*), {}* inttoptr (i64 232 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 132, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-AND, i64 0, i64 0))
  %"CONTAB[132]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 132), align 16
  %"CONTAB[3]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 131, {}* %"CONTAB[132]*", {}* %"CONTAB[3]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 136, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-INTEGER, i64 0, i64 0))
  %"CONTAB[136]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 136), align 16
  %"CONTAB[3]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 135, {}* %"CONTAB[136]*", {}* %"CONTAB[3]*13")
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 135), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 134, i64 3, {}* %"CONTAB[135]*", {}* null, {}* inttoptr (i64 20 to {}*))
  %"CONTAB[131]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 131), align 8
  %"CONTAB[134]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 134), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 133, i64 2, {}* %"CONTAB[131]*", {}* %"CONTAB[134]*")
  %"CONTAB[131]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 131), align 8
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 130, i64 2, {}* %"CONTAB[131]*14", {}* %"CONTAB[133]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 138, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str->=", i64 0, i64 0))
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 138), align 16
  %"CONTAB[3]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 137, {}* %"CONTAB[138]*", {}* %"CONTAB[3]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 140, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-<=", i64 0, i64 0))
  %"CONTAB[140]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 140), align 16
  %"CONTAB[3]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 139, {}* %"CONTAB[140]*", {}* %"CONTAB[3]*16")
  %"CONTAB[135]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 135), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 143, i64 3, {}* %"CONTAB[135]*17", {}* null, {}* inttoptr (i64 20 to {}*))
  %"CONTAB[131]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 131), align 8
  %"CONTAB[143]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 143), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 142, i64 2, {}* %"CONTAB[131]*18", {}* %"CONTAB[143]*")
  %"CONTAB[131]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 131), align 8
  %"CONTAB[142]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 142), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 141, i64 2, {}* %"CONTAB[131]*19", {}* %"CONTAB[142]*")
  %"CONTAB[122]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 122), align 16
  %"CONTAB[7]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 145, i64 2, {}* %"CONTAB[122]*20", {}* %"CONTAB[7]*21")
  %"CONTAB[47]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[145]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 145), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 144, i64 2, {}* %"CONTAB[47]*22", {}* %"CONTAB[145]*")
  %"CONTAB[123]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 123), align 8
  %"CONTAB[14]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 146, {}* %"CONTAB[123]*23", {}* %"CONTAB[14]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^58^TOP-COMPILE-FILE", i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"str-klh=funktionen.lisp^58^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 148, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-*STANDARD-OUTPUT*", i64 0, i64 0))
  %"CONTAB[148]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 148), align 16
  %"CONTAB[3]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 147, {}* %"CONTAB[148]*", {}* %"CONTAB[3]*24")
  %"CONTAB[27]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 149, i64 3, {}* %"CONTAB[27]*25", {}* %"CONTAB[22]*26", {}* %"CONTAB[20]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 151, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-KLH=FENSTERSTREAM-ERZEUGEN", i64 0, i64 0))
  %"CONTAB[151]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 151), align 8
  %"CONTAB[36]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 150, {}* %"CONTAB[151]*", {}* %"CONTAB[36]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 154, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-KLASSE, i64 0, i64 0))
  %"CONTAB[154]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 154), align 16
  %"CONTAB[36]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 153, {}* %"CONTAB[154]*", {}* %"CONTAB[36]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 156, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str-&REST", i64 0, i64 0))
  %"CONTAB[156]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 156), align 16
  %"CONTAB[3]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 155, {}* %"CONTAB[156]*", {}* %"CONTAB[3]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 158, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-PARAMETER, i64 0, i64 0))
  %"CONTAB[158]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 158), align 16
  %"CONTAB[36]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 157, {}* %"CONTAB[158]*", {}* %"CONTAB[36]*31")
  %"CONTAB[153]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 153), align 8
  %"CONTAB[155]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[157]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 157), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 152, i64 3, {}* %"CONTAB[153]*", {}* %"CONTAB[155]*", {}* %"CONTAB[157]*")
  %"CONTAB[56]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 159, i64 4, {}* %"CONTAB[56]*32", {}* inttoptr (i64 10440 to {}*), {}* inttoptr (i64 264 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[153]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 153), align 8
  %"CONTAB[155]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[157]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 157), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 160, i64 3, {}* %"CONTAB[153]*33", {}* %"CONTAB[155]*34", {}* %"CONTAB[157]*35")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^66^TOP-COMPILE-FILE", i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"str-klh=funktionen.lisp^66^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 163, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-WINDOW-SIZE, i64 0, i64 0))
  %"CONTAB[163]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 163), align 8
  %"CONTAB[14]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 162, {}* %"CONTAB[163]*", {}* %"CONTAB[14]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 165, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-VIEW-SIZE, i64 0, i64 0))
  %"CONTAB[165]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 165), align 8
  %"CONTAB[14]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 164, {}* %"CONTAB[165]*", {}* %"CONTAB[14]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 167, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-WINDOW-POSITION, i64 0, i64 0))
  %"CONTAB[167]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 167), align 8
  %"CONTAB[14]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 166, {}* %"CONTAB[167]*", {}* %"CONTAB[14]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 169, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-VIEW-POSITION, i64 0, i64 0))
  %"CONTAB[169]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 169), align 8
  %"CONTAB[14]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 168, {}* %"CONTAB[169]*", {}* %"CONTAB[14]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 171, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-WINDOW-FONT, i64 0, i64 0))
  %"CONTAB[171]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 171), align 8
  %"CONTAB[14]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 170, {}* %"CONTAB[171]*", {}* %"CONTAB[14]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 173, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-VIEW-FONT, i64 0, i64 0))
  %"CONTAB[173]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 173), align 8
  %"CONTAB[14]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 172, {}* %"CONTAB[173]*", {}* %"CONTAB[14]*41")
  %"CONTAB[162]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 162), align 16
  %"CONTAB[164]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 164), align 16
  %"CONTAB[166]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 166), align 16
  %"CONTAB[168]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 168), align 16
  %"CONTAB[170]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 170), align 16
  %"CONTAB[172]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 172), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 161, i64 6, {}* %"CONTAB[162]*", {}* %"CONTAB[164]*", {}* %"CONTAB[166]*", {}* %"CONTAB[168]*", {}* %"CONTAB[170]*", {}* %"CONTAB[172]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-GETF, i64 0, i64 0))
  %"CONTAB[175]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 175), align 8
  %"CONTAB[3]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 174, {}* %"CONTAB[175]*", {}* %"CONTAB[3]*42")
  %"CONTAB[27]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 176, i64 3, {}* %"CONTAB[27]*43", {}* %"CONTAB[22]*44", {}* %"CONTAB[20]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 178, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-KLH-PARAMETERLISTE-TRANSFORMIEREN, i64 0, i64 0))
  %"CONTAB[178]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 178), align 16
  %"CONTAB[36]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 177, {}* %"CONTAB[178]*", {}* %"CONTAB[36]*46")
  %"CONTAB[77]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 77), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 179, i64 1, {}* %"CONTAB[77]*")
  %"CONTAB[56]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 180, i64 4, {}* %"CONTAB[56]*47", {}* inttoptr (i64 11600 to {}*), {}* inttoptr (i64 292 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[77]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 77), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 181, i64 1, {}* %"CONTAB[77]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 183, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LAMBDA, i64 0, i64 0))
  %"CONTAB[183]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 183), align 8
  %"CONTAB[3]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 182, {}* %"CONTAB[183]*", {}* %"CONTAB[3]*49")
  %"CONTAB[77]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 77), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 184, i64 1, {}* %"CONTAB[77]*50")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^73^TOP-COMPILE-FILE", i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"str-klh=funktionen.lisp^73^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[27]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 185, i64 3, {}* %"CONTAB[27]*51", {}* %"CONTAB[22]*52", {}* %"CONTAB[20]*53")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 187, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"str-KLH=FENSTERSTREAM-NACH-OBEN-GEHEN", i64 0, i64 0))
  %"CONTAB[187]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 187), align 8
  %"CONTAB[36]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 186, {}* %"CONTAB[187]*", {}* %"CONTAB[36]*54")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-STREAM, i64 0, i64 0))
  %"CONTAB[190]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 190), align 16
  %"CONTAB[3]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 189, {}* %"CONTAB[190]*", {}* %"CONTAB[3]*55")
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 188, i64 1, {}* %"CONTAB[189]*")
  %"CONTAB[56]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 191, i64 4, {}* %"CONTAB[56]*56", {}* inttoptr (i64 14556 to {}*), {}* inttoptr (i64 368 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[189]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 192, i64 1, {}* %"CONTAB[189]*57")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^92^TOP-COMPILE-FILE", i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"str-klh=funktionen.lisp^92^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 194, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-EQUAL, i64 0, i64 0))
  %"CONTAB[194]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 194), align 16
  %"CONTAB[3]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 193, {}* %"CONTAB[194]*", {}* %"CONTAB[3]*58")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.38() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !104 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.36)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.37)
  ret void
}

declare void @cc_invoke_sub_run_all_function(void ()*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.39() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !105 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 196, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-STRING-TRIM, i64 0, i64 0))
  %"CONTAB[196]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 196), align 16
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 195, {}* %"CONTAB[196]*", {}* %"CONTAB[3]*")
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 197, i64 1, {}* inttoptr (i64 258 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 198, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 200, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-READ-FROM-STRING, i64 0, i64 0))
  %"CONTAB[200]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 200), align 16
  %"CONTAB[3]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 199, {}* %"CONTAB[200]*", {}* %"CONTAB[3]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 202, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-SUBSTITUTE, i64 0, i64 0))
  %"CONTAB[202]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 202), align 16
  %"CONTAB[3]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 201, {}* %"CONTAB[202]*", {}* %"CONTAB[3]*2")
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 203, i64 3, {}* %"CONTAB[27]*", {}* %"CONTAB[22]*", {}* %"CONTAB[20]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 205, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-KLH=MACH_ATOM", i64 0, i64 0))
  %"CONTAB[205]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 205), align 8
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 204, {}* %"CONTAB[205]*", {}* %"CONTAB[36]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 208, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-TEXT, i64 0, i64 0))
  %"CONTAB[208]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 208), align 16
  %"CONTAB[36]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 207, {}* %"CONTAB[208]*", {}* %"CONTAB[36]*3")
  %"CONTAB[207]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 207), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 206, i64 1, {}* %"CONTAB[207]*")
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 209, i64 4, {}* %"CONTAB[56]*", {}* inttoptr (i64 15844 to {}*), {}* inttoptr (i64 428 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[207]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 207), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 210, i64 1, {}* %"CONTAB[207]*4")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^107^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^107^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 211, i64 1, {}* inttoptr (i64 258 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 212, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 214, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-NUMBERP, i64 0, i64 0))
  %"CONTAB[214]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 214), align 16
  %"CONTAB[3]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 213, {}* %"CONTAB[214]*", {}* %"CONTAB[3]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 216, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-CONCATENATE, i64 0, i64 0))
  %"CONTAB[216]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 216), align 16
  %"CONTAB[3]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 215, {}* %"CONTAB[216]*", {}* %"CONTAB[3]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 218, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-STRING, i64 0, i64 0))
  %"CONTAB[218]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 218), align 16
  %"CONTAB[3]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 217, {}* %"CONTAB[218]*", {}* %"CONTAB[3]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 219, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-_, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 221, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-KLH=WAS_NACH_STRING", i64 0, i64 0))
  %"CONTAB[221]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 221), align 8
  %"CONTAB[36]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 220, {}* %"CONTAB[221]*", {}* %"CONTAB[36]*8")
  %"CONTAB[27]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 222, i64 3, {}* %"CONTAB[27]*9", {}* %"CONTAB[22]*10", {}* %"CONTAB[20]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 224, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"str-KLH=MACH_SYMBOL", i64 0, i64 0))
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 224), align 16
  %"CONTAB[36]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 223, {}* %"CONTAB[224]*", {}* %"CONTAB[36]*12")
  %"CONTAB[207]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 207), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 225, i64 1, {}* %"CONTAB[207]*13")
  %"CONTAB[56]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 226, i64 4, {}* %"CONTAB[56]*14", {}* inttoptr (i64 16412 to {}*), {}* inttoptr (i64 448 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[207]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 207), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 227, i64 1, {}* %"CONTAB[207]*15")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^112^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^112^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 229, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-B=ERZEUGE-STRING", i64 0, i64 0))
  %"CONTAB[229]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 229), align 8
  %"CONTAB[36]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 228, {}* %"CONTAB[229]*", {}* %"CONTAB[36]*16")
  %"CONTAB[27]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 230, i64 3, {}* %"CONTAB[27]*17", {}* %"CONTAB[22]*18", {}* %"CONTAB[20]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 233, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-WAS, i64 0, i64 0))
  %"CONTAB[233]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 233), align 8
  %"CONTAB[36]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 232, {}* %"CONTAB[233]*", {}* %"CONTAB[36]*20")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 231, i64 1, {}* %"CONTAB[232]*")
  %"CONTAB[56]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 234, i64 4, {}* %"CONTAB[56]*21", {}* inttoptr (i64 17636 to {}*), {}* inttoptr (i64 492 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[232]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 235, i64 1, {}* %"CONTAB[232]*22")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^123^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^123^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 237, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-PROBE-FILE, i64 0, i64 0))
  %"CONTAB[237]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 237), align 8
  %"CONTAB[3]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 236, {}* %"CONTAB[237]*", {}* %"CONTAB[3]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 239, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-DELETE-FILE, i64 0, i64 0))
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 239), align 8
  %"CONTAB[3]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 238, {}* %"CONTAB[239]*", {}* %"CONTAB[3]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 241, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-OPEN, i64 0, i64 0))
  %"CONTAB[241]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 241), align 8
  %"CONTAB[3]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 240, {}* %"CONTAB[241]*", {}* %"CONTAB[3]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 243, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-DIRECTION, i64 0, i64 0))
  %"CONTAB[243]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 243), align 8
  %"CONTAB[14]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 242, {}* %"CONTAB[243]*", {}* %"CONTAB[14]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 245, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-OUTPUT, i64 0, i64 0))
  %"CONTAB[245]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 245), align 8
  %"CONTAB[14]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 244, {}* %"CONTAB[245]*", {}* %"CONTAB[14]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 247, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-IF-EXISTS, i64 0, i64 0))
  %"CONTAB[247]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 247), align 8
  %"CONTAB[14]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 246, {}* %"CONTAB[247]*", {}* %"CONTAB[14]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 249, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-OVERWRITE, i64 0, i64 0))
  %"CONTAB[249]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 249), align 8
  %"CONTAB[14]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 248, {}* %"CONTAB[249]*", {}* %"CONTAB[14]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 251, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-IF-DOES-NOT-EXIST, i64 0, i64 0))
  %"CONTAB[251]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 251), align 8
  %"CONTAB[14]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 250, {}* %"CONTAB[251]*", {}* %"CONTAB[14]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 253, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-CREATE, i64 0, i64 0))
  %"CONTAB[253]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 253), align 8
  %"CONTAB[14]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 252, {}* %"CONTAB[253]*", {}* %"CONTAB[14]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 255, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-CALL-WITH-VARIABLE-BOUND, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 257, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-CLEAVIR-PRIMOP, i64 0, i64 0))
  %"CONTAB[257]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 257), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 256, {}* %"CONTAB[257]*")
  %"CONTAB[255]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 255), align 8
  %"CONTAB[256]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 256), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 254, {}* %"CONTAB[255]*", {}* %"CONTAB[256]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 259, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-FUNWIND-PROTECT, i64 0, i64 0))
  %"CONTAB[259]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 259), align 8
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 258, {}* %"CONTAB[259]*", {}* %"CONTAB[40]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 261, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str-MULTIPLE-VALUE-PROG1-FUNCTION, i64 0, i64 0))
  %"CONTAB[261]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 261), align 8
  %"CONTAB[40]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 260, {}* %"CONTAB[261]*", {}* %"CONTAB[40]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 263, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-APPLY, i64 0, i64 0))
  %"CONTAB[263]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 263), align 8
  %"CONTAB[3]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 262, {}* %"CONTAB[263]*", {}* %"CONTAB[3]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 265, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-CLOSE, i64 0, i64 0))
  %"CONTAB[265]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 265), align 8
  %"CONTAB[3]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 264, {}* %"CONTAB[265]*", {}* %"CONTAB[3]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 267, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ABORT, i64 0, i64 0))
  %"CONTAB[267]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 267), align 8
  %"CONTAB[14]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 266, {}* %"CONTAB[267]*", {}* %"CONTAB[14]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 269, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-SET-MAC-FILE-TYPE, i64 0, i64 0))
  %"CONTAB[269]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 269), align 8
  %"CONTAB[36]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 268, {}* %"CONTAB[269]*", {}* %"CONTAB[36]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 271, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-SET-MAC-FILE-CREATOR, i64 0, i64 0))
  %"CONTAB[271]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 271), align 8
  %"CONTAB[36]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 270, {}* %"CONTAB[271]*", {}* %"CONTAB[36]*36")
  %"CONTAB[27]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 272, i64 3, {}* %"CONTAB[27]*37", {}* %"CONTAB[22]*38", {}* %"CONTAB[20]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 274, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-KLH=AUSGABE_AUF_DATEI", i64 0, i64 0))
  %"CONTAB[274]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 274), align 16
  %"CONTAB[36]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 273, {}* %"CONTAB[274]*", {}* %"CONTAB[36]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 277, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-PFADNAME, i64 0, i64 0))
  %"CONTAB[277]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 277), align 8
  %"CONTAB[36]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 276, {}* %"CONTAB[277]*", {}* %"CONTAB[36]*41")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 279, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-FUNKTION, i64 0, i64 0))
  %"CONTAB[279]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 279), align 8
  %"CONTAB[36]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 278, {}* %"CONTAB[279]*", {}* %"CONTAB[36]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 281, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-PARAMETER_LISTE, i64 0, i64 0))
  %"CONTAB[281]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 281), align 8
  %"CONTAB[36]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 280, {}* %"CONTAB[281]*", {}* %"CONTAB[36]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 283, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-MAC-FILE-TYPE, i64 0, i64 0))
  %"CONTAB[283]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 283), align 8
  %"CONTAB[36]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 282, {}* %"CONTAB[283]*", {}* %"CONTAB[36]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 285, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-MAC-FILE-CREATOR, i64 0, i64 0))
  %"CONTAB[285]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 285), align 8
  %"CONTAB[36]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 284, {}* %"CONTAB[285]*", {}* %"CONTAB[36]*45")
  %"CONTAB[276]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 276), align 16
  %"CONTAB[278]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 278), align 16
  %"CONTAB[280]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 280), align 16
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[282]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 282), align 16
  %"CONTAB[284]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 284), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 275, i64 6, {}* %"CONTAB[276]*", {}* %"CONTAB[278]*", {}* %"CONTAB[280]*", {}* %"CONTAB[47]*", {}* %"CONTAB[282]*", {}* %"CONTAB[284]*")
  %"CONTAB[56]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 286, i64 4, {}* %"CONTAB[56]*46", {}* inttoptr (i64 17884 to {}*), {}* inttoptr (i64 508 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[276]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 276), align 16
  %"CONTAB[278]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 278), align 16
  %"CONTAB[280]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 280), align 16
  %"CONTAB[47]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[282]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 282), align 16
  %"CONTAB[284]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 284), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 287, i64 6, {}* %"CONTAB[276]*47", {}* %"CONTAB[278]*48", {}* %"CONTAB[280]*49", {}* %"CONTAB[47]*50", {}* %"CONTAB[282]*51", {}* %"CONTAB[284]*52")
  %"CONTAB[283]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 283), align 8
  %"CONTAB[14]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 288, {}* %"CONTAB[283]*53", {}* %"CONTAB[14]*54")
  %"CONTAB[285]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 285), align 8
  %"CONTAB[14]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 289, {}* %"CONTAB[285]*55", {}* %"CONTAB[14]*56")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^127^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^127^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 291, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-ARRAY-DIMENSIONS, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.40() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !106 {
entry:
  %"CONTAB[291]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 291), align 8
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 290, {}* %"CONTAB[291]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 293, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-ARRAY-INDEX, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 295, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-EXT, i64 0, i64 0))
  %"CONTAB[295]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 295), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 294, {}* %"CONTAB[295]*")
  %"CONTAB[293]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 293), align 8
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 294), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 292, {}* %"CONTAB[293]*", {}* %"CONTAB[294]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 298, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-NULL, i64 0, i64 0))
  %"CONTAB[298]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 298), align 16
  %"CONTAB[3]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 297, {}* %"CONTAB[298]*", {}* %"CONTAB[3]*1")
  %"CONTAB[5]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[292]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 292), align 16
  %"CONTAB[297]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 296, i64 3, {}* %"CONTAB[5]*", {}* %"CONTAB[292]*", {}* %"CONTAB[297]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 300, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-ETYPECASE-ERROR, i64 0, i64 0))
  %"CONTAB[300]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 300), align 16
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 299, {}* %"CONTAB[300]*", {}* %"CONTAB[40]*")
  %"CONTAB[5]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[292]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 292), align 16
  %"CONTAB[297]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 302, i64 3, {}* %"CONTAB[5]*2", {}* %"CONTAB[292]*3", {}* %"CONTAB[297]*4")
  %"CONTAB[292]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 292), align 16
  %"CONTAB[302]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 302), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 301, i64 3, {}* %"CONTAB[292]*5", {}* %"CONTAB[302]*", {}* %"CONTAB[18]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 304, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str-MAKE-SIMPLE-MDARRAY-T, i64 0, i64 0))
  %"CONTAB[304]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 304), align 16
  %"CONTAB[40]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 303, {}* %"CONTAB[304]*", {}* %"CONTAB[40]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 306, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-MAKE-SIMPLE-VECTOR-T, i64 0, i64 0))
  %"CONTAB[306]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 306), align 16
  %"CONTAB[40]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 305, {}* %"CONTAB[306]*", {}* %"CONTAB[40]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 308, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-AREF, i64 0, i64 0))
  %"CONTAB[308]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 308), align 16
  %"CONTAB[3]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 307, {}* %"CONTAB[308]*", {}* %"CONTAB[3]*8")
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 309, i64 3, {}* %"CONTAB[27]*", {}* %"CONTAB[22]*", {}* %"CONTAB[20]*")
  %"CONTAB[27]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 310, i64 3, {}* %"CONTAB[27]*9", {}* %"CONTAB[22]*10", {}* %"CONTAB[20]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 312, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-KLH=SPIEGEL_ARRAY", i64 0, i64 0))
  %"CONTAB[312]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 312), align 16
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 311, {}* %"CONTAB[312]*", {}* %"CONTAB[36]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 315, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ARRAY, i64 0, i64 0))
  %"CONTAB[315]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 315), align 8
  %"CONTAB[3]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 314, {}* %"CONTAB[315]*", {}* %"CONTAB[3]*12")
  %"CONTAB[314]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 314), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 313, i64 1, {}* %"CONTAB[314]*")
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 316, i64 4, {}* %"CONTAB[56]*", {}* inttoptr (i64 21012 to {}*), {}* inttoptr (i64 588 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[314]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 314), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 317, i64 1, {}* %"CONTAB[314]*13")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^147^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^147^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 319, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-VECTOR, i64 0, i64 0))
  %"CONTAB[319]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 319), align 8
  %"CONTAB[3]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 318, {}* %"CONTAB[319]*", {}* %"CONTAB[3]*14")
  %"CONTAB[5]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[318]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 318), align 16
  %"CONTAB[297]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 320, i64 3, {}* %"CONTAB[5]*15", {}* %"CONTAB[318]*", {}* %"CONTAB[297]*16")
  %"CONTAB[5]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[297]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 321, i64 2, {}* %"CONTAB[5]*17", {}* %"CONTAB[297]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 323, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str-TWO-ARG-<=", i64 0, i64 0))
  %"CONTAB[323]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 323), align 8
  %"CONTAB[40]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 322, {}* %"CONTAB[323]*", {}* %"CONTAB[40]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 325, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SUBSEQ, i64 0, i64 0))
  %"CONTAB[325]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 325), align 8
  %"CONTAB[3]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 324, {}* %"CONTAB[325]*", {}* %"CONTAB[3]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 327, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TWO-ARG--, i64 0, i64 0))
  %"CONTAB[327]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 327), align 8
  %"CONTAB[40]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 326, {}* %"CONTAB[327]*", {}* %"CONTAB[40]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 328, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-., i64 0, i64 0))
  %"CONTAB[27]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 329, i64 3, {}* %"CONTAB[27]*22", {}* %"CONTAB[22]*23", {}* %"CONTAB[20]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 331, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-KLH=STRING_KUERZEN", i64 0, i64 0))
  %"CONTAB[331]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 331), align 8
  %"CONTAB[36]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 330, {}* %"CONTAB[331]*", {}* %"CONTAB[36]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 334, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-MAX_LAENGE, i64 0, i64 0))
  %"CONTAB[334]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 334), align 16
  %"CONTAB[36]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 333, {}* %"CONTAB[334]*", {}* %"CONTAB[36]*26")
  %"CONTAB[217]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %"CONTAB[333]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 333), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 332, i64 2, {}* %"CONTAB[217]*", {}* %"CONTAB[333]*")
  %"CONTAB[56]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 335, i64 4, {}* %"CONTAB[56]*27", {}* inttoptr (i64 22248 to {}*), {}* inttoptr (i64 636 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 337, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-NUMBER, i64 0, i64 0))
  %"CONTAB[337]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 337), align 8
  %"CONTAB[3]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 336, {}* %"CONTAB[337]*", {}* %"CONTAB[3]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 339, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-ARRAY-RANK, i64 0, i64 0))
  %"CONTAB[339]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 339), align 8
  %"CONTAB[3]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 338, {}* %"CONTAB[339]*", {}* %"CONTAB[3]*29")
  %"CONTAB[217]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  %"CONTAB[333]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 333), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 340, i64 2, {}* %"CONTAB[217]*30", {}* %"CONTAB[333]*31")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^159^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^159^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[27]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 341, i64 3, {}* %"CONTAB[27]*32", {}* %"CONTAB[22]*33", {}* %"CONTAB[20]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 343, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-KLH=WAS_NACH_KURZEN_STRING", i64 0, i64 0))
  %"CONTAB[343]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 343), align 8
  %"CONTAB[36]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 342, {}* %"CONTAB[343]*", {}* %"CONTAB[36]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 346, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LAENGE, i64 0, i64 0))
  %"CONTAB[346]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 346), align 16
  %"CONTAB[36]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 345, {}* %"CONTAB[346]*", {}* %"CONTAB[36]*36")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  %"CONTAB[345]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 345), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 344, i64 2, {}* %"CONTAB[232]*", {}* %"CONTAB[345]*")
  %"CONTAB[56]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 347, i64 4, {}* %"CONTAB[56]*37", {}* inttoptr (i64 23636 to {}*), {}* inttoptr (i64 696 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[232]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  %"CONTAB[345]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 345), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 348, i64 2, {}* %"CONTAB[232]*38", {}* %"CONTAB[345]*39")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^174^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^174^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[5]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[318]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 318), align 16
  %"CONTAB[297]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 349, i64 3, {}* %"CONTAB[5]*40", {}* %"CONTAB[318]*41", {}* %"CONTAB[297]*42")
  %"CONTAB[5]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[297]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 350, i64 2, {}* %"CONTAB[5]*43", {}* %"CONTAB[297]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 352, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG->", i64 0, i64 0))
  %"CONTAB[352]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 352), align 16
  %"CONTAB[40]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 351, {}* %"CONTAB[352]*", {}* %"CONTAB[40]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 354, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-MAKE-SEQUENCE, i64 0, i64 0))
  %"CONTAB[354]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 354), align 16
  %"CONTAB[3]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 353, {}* %"CONTAB[354]*", {}* %"CONTAB[3]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 356, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-CEILING, i64 0, i64 0))
  %"CONTAB[356]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 356), align 16
  %"CONTAB[3]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 355, {}* %"CONTAB[356]*", {}* %"CONTAB[3]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 358, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-INITIAL-ELEMENT, i64 0, i64 0))
  %"CONTAB[358]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 358), align 16
  %"CONTAB[14]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 357, {}* %"CONTAB[358]*", {}* %"CONTAB[14]*")
  %"CONTAB[27]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 359, i64 3, {}* %"CONTAB[27]*48", {}* %"CONTAB[22]*49", {}* %"CONTAB[20]*50")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 361, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-KLH=MACHE-ZENTRIERT", i64 0, i64 0))
  %"CONTAB[361]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 361), align 8
  %"CONTAB[36]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 360, {}* %"CONTAB[361]*", {}* %"CONTAB[36]*51")
  %"CONTAB[232]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  %"CONTAB[345]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 345), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 362, i64 2, {}* %"CONTAB[232]*52", {}* %"CONTAB[345]*53")
  %"CONTAB[56]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 363, i64 4, {}* %"CONTAB[56]*54", {}* inttoptr (i64 24100 to {}*), {}* inttoptr (i64 720 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[232]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  %"CONTAB[345]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 345), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 364, i64 2, {}* %"CONTAB[232]*55", {}* %"CONTAB[345]*56")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^180^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^180^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 366, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FORMAT, i64 0, i64 0))
  %"CONTAB[366]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 366), align 16
  %"CONTAB[3]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 365, {}* %"CONTAB[366]*", {}* %"CONTAB[3]*57")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 367, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 369, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-KLH=FUELLE_AUF", i64 0, i64 0))
  %"CONTAB[369]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 369), align 8
  %"CONTAB[36]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 368, {}* %"CONTAB[369]*", {}* %"CONTAB[36]*58")
  %"CONTAB[27]*59" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*60" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*61" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 370, i64 3, {}* %"CONTAB[27]*59", {}* %"CONTAB[22]*60", {}* %"CONTAB[20]*61")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 372, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str-KLH=FORMAT", i64 0, i64 0))
  %"CONTAB[372]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 372), align 16
  %"CONTAB[36]*62" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 371, {}* %"CONTAB[372]*", {}* %"CONTAB[36]*62")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 375, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-MAXIMUM, i64 0, i64 0))
  %"CONTAB[375]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 375), align 8
  %"CONTAB[36]*63" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 374, {}* %"CONTAB[375]*", {}* %"CONTAB[36]*63")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 377, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-FORMATSTRING, i64 0, i64 0))
  %"CONTAB[377]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 377), align 8
  %"CONTAB[36]*64" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 376, {}* %"CONTAB[377]*", {}* %"CONTAB[36]*64")
  %"CONTAB[374]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 374), align 16
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[376]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 376), align 16
  %"CONTAB[157]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 157), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 373, i64 4, {}* %"CONTAB[374]*", {}* %"CONTAB[189]*", {}* %"CONTAB[376]*", {}* %"CONTAB[157]*")
  %"CONTAB[56]*65" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 378, i64 4, {}* %"CONTAB[56]*65", {}* inttoptr (i64 26320 to {}*), {}* inttoptr (i64 792 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[374]*66" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 374), align 16
  %"CONTAB[189]*67" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[376]*68" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 376), align 16
  %"CONTAB[157]*69" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 157), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 379, i64 4, {}* %"CONTAB[374]*66", {}* %"CONTAB[189]*67", {}* %"CONTAB[376]*68", {}* %"CONTAB[157]*69")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^198^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^198^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 381, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-MAPCAR, i64 0, i64 0))
  %"CONTAB[381]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 381), align 8
  %"CONTAB[3]*70" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 380, {}* %"CONTAB[381]*", {}* %"CONTAB[3]*70")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 383, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-EVAL, i64 0, i64 0))
  %"CONTAB[383]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 383), align 8
  %"CONTAB[3]*71" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 382, {}* %"CONTAB[383]*", {}* %"CONTAB[3]*71")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 385, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-APPEND, i64 0, i64 0))
  %"CONTAB[385]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 385), align 8
  %"CONTAB[3]*72" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 384, {}* %"CONTAB[385]*", {}* %"CONTAB[3]*72")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 387, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-BACKQUOTE-APPEND, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.41() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !107 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.39)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.40)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.42() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !108 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.38)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.41)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.43() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !109 {
entry:
  %"CONTAB[387]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 387), align 8
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 386, {}* %"CONTAB[387]*", {}* %"CONTAB[40]*")
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 388, i64 3, {}* %"CONTAB[27]*", {}* %"CONTAB[22]*", {}* %"CONTAB[20]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 390, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-KLH=FORMAT_LISTE", i64 0, i64 0))
  %"CONTAB[390]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 390), align 16
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 389, {}* %"CONTAB[390]*", {}* %"CONTAB[36]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 393, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-MAXIMUM_LISTE, i64 0, i64 0))
  %"CONTAB[393]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 393), align 8
  %"CONTAB[36]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 392, {}* %"CONTAB[393]*", {}* %"CONTAB[36]*1")
  %"CONTAB[392]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 392), align 16
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[376]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 376), align 16
  %"CONTAB[155]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[280]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 280), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 391, i64 5, {}* %"CONTAB[392]*", {}* %"CONTAB[189]*", {}* %"CONTAB[376]*", {}* %"CONTAB[155]*", {}* %"CONTAB[280]*")
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 394, i64 4, {}* %"CONTAB[56]*", {}* inttoptr (i64 26980 to {}*), {}* inttoptr (i64 812 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[392]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 392), align 16
  %"CONTAB[189]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[376]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 376), align 16
  %"CONTAB[155]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[280]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 280), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 395, i64 5, {}* %"CONTAB[392]*2", {}* %"CONTAB[189]*3", {}* %"CONTAB[376]*4", {}* %"CONTAB[155]*5", {}* %"CONTAB[280]*6")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  %"CONTAB[374]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 374), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 396, i64 2, {}* %"CONTAB[232]*", {}* %"CONTAB[374]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^203^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^203^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 398, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-STRINGP, i64 0, i64 0))
  %"CONTAB[398]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 398), align 16
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 397, {}* %"CONTAB[398]*", {}* %"CONTAB[3]*")
  %"CONTAB[5]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[318]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 318), align 16
  %"CONTAB[297]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 399, i64 3, {}* %"CONTAB[5]*", {}* %"CONTAB[318]*", {}* %"CONTAB[297]*")
  %"CONTAB[5]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[297]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 400, i64 2, {}* %"CONTAB[5]*7", {}* %"CONTAB[297]*8")
  %"CONTAB[5]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[318]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 318), align 16
  %"CONTAB[297]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 401, i64 3, {}* %"CONTAB[5]*9", {}* %"CONTAB[318]*10", {}* %"CONTAB[297]*11")
  %"CONTAB[5]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[297]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 402, i64 2, {}* %"CONTAB[5]*12", {}* %"CONTAB[297]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 404, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-B=STRING-ABSCHNEIDEN", i64 0, i64 0))
  %"CONTAB[404]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 404), align 16
  %"CONTAB[36]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 403, {}* %"CONTAB[404]*", {}* %"CONTAB[36]*14")
  %"CONTAB[27]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 405, i64 3, {}* %"CONTAB[27]*15", {}* %"CONTAB[22]*16", {}* %"CONTAB[20]*17")
  %"CONTAB[232]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  %"CONTAB[345]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 345), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 406, i64 2, {}* %"CONTAB[232]*18", {}* %"CONTAB[345]*")
  %"CONTAB[56]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 407, i64 4, {}* %"CONTAB[56]*19", {}* inttoptr (i64 28472 to {}*), {}* inttoptr (i64 852 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[232]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 232), align 16
  %"CONTAB[345]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 345), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 408, i64 2, {}* %"CONTAB[232]*20", {}* %"CONTAB[345]*21")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^213^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^213^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[27]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 409, i64 3, {}* %"CONTAB[27]*22", {}* %"CONTAB[22]*23", {}* %"CONTAB[20]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 411, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-KLH=KREUZ_PRODUKT", i64 0, i64 0))
  %"CONTAB[411]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 411), align 8
  %"CONTAB[36]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 410, {}* %"CONTAB[411]*", {}* %"CONTAB[36]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 414, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-L1, i64 0, i64 0))
  %"CONTAB[414]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 414), align 16
  %"CONTAB[36]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 413, {}* %"CONTAB[414]*", {}* %"CONTAB[36]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 416, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-L2, i64 0, i64 0))
  %"CONTAB[416]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 416), align 16
  %"CONTAB[36]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 415, {}* %"CONTAB[416]*", {}* %"CONTAB[36]*27")
  %"CONTAB[413]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 413), align 8
  %"CONTAB[415]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 415), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 412, i64 2, {}* %"CONTAB[413]*", {}* %"CONTAB[415]*")
  %"CONTAB[56]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 417, i64 4, {}* %"CONTAB[56]*28", {}* inttoptr (i64 29620 to {}*), {}* inttoptr (i64 888 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[413]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 413), align 8
  %"CONTAB[415]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 415), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 418, i64 2, {}* %"CONTAB[413]*29", {}* %"CONTAB[415]*30")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^222^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^222^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[5]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[318]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 318), align 16
  %"CONTAB[297]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 419, i64 3, {}* %"CONTAB[5]*31", {}* %"CONTAB[318]*32", {}* %"CONTAB[297]*33")
  %"CONTAB[5]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[297]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 420, i64 2, {}* %"CONTAB[5]*34", {}* %"CONTAB[297]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 422, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-=", i64 0, i64 0))
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 422), align 16
  %"CONTAB[40]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 421, {}* %"CONTAB[422]*", {}* %"CONTAB[40]*36")
  %"CONTAB[27]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 423, i64 3, {}* %"CONTAB[27]*37", {}* %"CONTAB[22]*38", {}* %"CONTAB[20]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 425, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-KLH=N-FILTER", i64 0, i64 0))
  %"CONTAB[425]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 425), align 8
  %"CONTAB[36]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 424, {}* %"CONTAB[425]*", {}* %"CONTAB[36]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 428, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ZAHL, i64 0, i64 0))
  %"CONTAB[428]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 428), align 16
  %"CONTAB[36]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 427, {}* %"CONTAB[428]*", {}* %"CONTAB[36]*41")
  %"CONTAB[77]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 77), align 8
  %"CONTAB[427]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 427), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 426, i64 2, {}* %"CONTAB[77]*", {}* %"CONTAB[427]*")
  %"CONTAB[56]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 429, i64 4, {}* %"CONTAB[56]*42", {}* inttoptr (i64 30260 to {}*), {}* inttoptr (i64 928 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 431, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-SET-DOCUMENTATION, i64 0, i64 0))
  %"CONTAB[431]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 431), align 8
  %"CONTAB[40]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 430, {}* %"CONTAB[431]*", {}* %"CONTAB[40]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 432, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-kuerze liste auf laenge zahl", i64 0, i64 0))
  %"CONTAB[77]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 77), align 8
  %"CONTAB[427]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 427), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 433, i64 2, {}* %"CONTAB[77]*44", {}* %"CONTAB[427]*45")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^232^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^232^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 435, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-B=LEERSTRING-P", i64 0, i64 0))
  %"CONTAB[435]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 435), align 8
  %"CONTAB[36]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 434, {}* %"CONTAB[435]*", {}* %"CONTAB[36]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 437, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-B=LESE-VON-STRING", i64 0, i64 0))
  %"CONTAB[437]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 437), align 8
  %"CONTAB[36]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 436, {}* %"CONTAB[437]*", {}* %"CONTAB[36]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 439, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-B=KONKATENIERE-NACH-STRING", i64 0, i64 0))
  %"CONTAB[439]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 439), align 8
  %"CONTAB[36]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 438, {}* %"CONTAB[439]*", {}* %"CONTAB[36]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 440, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-(", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 441, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-)", i64 0, i64 0))
  %"CONTAB[27]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 442, i64 3, {}* %"CONTAB[27]*49", {}* %"CONTAB[22]*50", {}* %"CONTAB[20]*51")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 444, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-KLH=LESE_LISP_AUS_STRING", i64 0, i64 0))
  %"CONTAB[444]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 444), align 16
  %"CONTAB[36]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 443, {}* %"CONTAB[444]*", {}* %"CONTAB[36]*52")
  %"CONTAB[217]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 445, i64 1, {}* %"CONTAB[217]*")
  %"CONTAB[56]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 446, i64 4, {}* %"CONTAB[56]*53", {}* inttoptr (i64 31376 to {}*), {}* inttoptr (i64 980 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[217]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 217), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 447, i64 1, {}* %"CONTAB[217]*54")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^245^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^245^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 449, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-ELEMENT, i64 0, i64 0))
  %"CONTAB[449]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 449), align 8
  %"CONTAB[14]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 448, {}* %"CONTAB[449]*", {}* %"CONTAB[14]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 450, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 452, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"str-COKE=S", i64 0, i64 0))
  %"CONTAB[452]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 452), align 16
  %"CONTAB[36]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 451, {}* %"CONTAB[452]*", {}* %"CONTAB[36]*55")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 454, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-ZEILEN, i64 0, i64 0))
  %"CONTAB[454]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 454), align 16
  %"CONTAB[14]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 453, {}* %"CONTAB[454]*", {}* %"CONTAB[14]*56")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 456, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-SPALTEN, i64 0, i64 0))
  %"CONTAB[456]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 456), align 16
  %"CONTAB[14]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 455, {}* %"CONTAB[456]*", {}* %"CONTAB[14]*57")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 458, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-BELIEBIG, i64 0, i64 0))
  %"CONTAB[458]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 458), align 16
  %"CONTAB[14]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 457, {}* %"CONTAB[458]*", {}* %"CONTAB[14]*58")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 460, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-FORMAT-ERROR, i64 0, i64 0))
  %"CONTAB[460]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 460), align 16
  %"CONTAB[40]*59" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 459, {}* %"CONTAB[460]*", {}* %"CONTAB[40]*59")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 462, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-COMPLAINT, i64 0, i64 0))
  %"CONTAB[462]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 462), align 16
  %"CONTAB[14]*60" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 461, {}* %"CONTAB[462]*", {}* %"CONTAB[14]*60")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 463, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-Required argument missing", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 465, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-CONTROL-STRING, i64 0, i64 0))
  %"CONTAB[465]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 465), align 8
  %"CONTAB[14]*61" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 464, {}* %"CONTAB[465]*", {}* %"CONTAB[14]*61")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 466, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str-~A~2%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 468, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-OFFSET, i64 0, i64 0))
  %"CONTAB[468]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 468), align 16
  %"CONTAB[14]*62" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 467, {}* %"CONTAB[468]*", {}* %"CONTAB[14]*62")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 470, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PRINC, i64 0, i64 0))
  %"CONTAB[470]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 470), align 16
  %"CONTAB[3]*63" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 469, {}* %"CONTAB[470]*", {}* %"CONTAB[3]*63")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 472, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-TERPRI, i64 0, i64 0))
  %"CONTAB[472]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 472), align 16
  %"CONTAB[3]*64" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 471, {}* %"CONTAB[472]*", {}* %"CONTAB[3]*64")
  %"CONTAB[27]*65" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*66" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*67" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 473, i64 3, {}* %"CONTAB[27]*65", {}* %"CONTAB[22]*66", {}* %"CONTAB[20]*67")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 475, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str-MAKE-STRING-OUTPUT-STREAM-FROM-STRING, i64 0, i64 0))
  %"CONTAB[475]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 475), align 8
  %"CONTAB[40]*68" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 474, {}* %"CONTAB[475]*", {}* %"CONTAB[40]*68")
  %"CONTAB[27]*69" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*70" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*71" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 476, i64 3, {}* %"CONTAB[27]*69", {}* %"CONTAB[22]*70", {}* %"CONTAB[20]*71")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 478, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str-MAKE-STRING-OUTPUT-STREAM, i64 0, i64 0))
  %"CONTAB[478]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 478), align 16
  %"CONTAB[3]*72" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 477, {}* %"CONTAB[478]*", {}* %"CONTAB[3]*72")
  %"CONTAB[27]*73" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*74" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*75" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 479, i64 3, {}* %"CONTAB[27]*73", {}* %"CONTAB[22]*74", {}* %"CONTAB[20]*75")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 481, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-GET-OUTPUT-STREAM-STRING, i64 0, i64 0))
  %"CONTAB[481]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 481), align 8
  %"CONTAB[3]*76" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 480, {}* %"CONTAB[481]*", {}* %"CONTAB[3]*76")
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.44() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !110 {
entry:
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 482, i64 3, {}* %"CONTAB[27]*", {}* %"CONTAB[22]*", {}* %"CONTAB[20]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 483, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-~", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 484, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-A, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 485, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-~", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-A, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 487, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"str-~?~A~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 488, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-~A~%while processing indirect format string:", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 490, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-ARGUMENTS, i64 0, i64 0))
  %"CONTAB[490]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 490), align 16
  %"CONTAB[14]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 489, {}* %"CONTAB[490]*", {}* %"CONTAB[14]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 492, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-PRINT-BANNER, i64 0, i64 0))
  %"CONTAB[492]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 492), align 16
  %"CONTAB[14]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 491, {}* %"CONTAB[492]*", {}* %"CONTAB[14]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 494, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-*HANDLER-CLUSTERS*", i64 0, i64 0))
  %"CONTAB[494]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 494), align 16
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 493, {}* %"CONTAB[494]*", {}* %"CONTAB[40]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 496, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-FORMATTER-AUX, i64 0, i64 0))
  %"CONTAB[496]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 496), align 16
  %"CONTAB[40]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 495, {}* %"CONTAB[496]*", {}* %"CONTAB[40]*2")
  %"CONTAB[27]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 497, i64 3, {}* %"CONTAB[27]*3", {}* %"CONTAB[22]*4", {}* %"CONTAB[20]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 498, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  %"CONTAB[27]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 499, i64 3, {}* %"CONTAB[27]*6", {}* %"CONTAB[22]*7", {}* %"CONTAB[20]*8")
  %"CONTAB[27]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 500, i64 3, {}* %"CONTAB[27]*9", {}* %"CONTAB[22]*10", {}* %"CONTAB[20]*11")
  %"CONTAB[27]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 501, i64 3, {}* %"CONTAB[27]*12", {}* %"CONTAB[22]*13", {}* %"CONTAB[20]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 502, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"str-~A~%", i64 0, i64 0))
  %"CONTAB[27]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 503, i64 3, {}* %"CONTAB[27]*15", {}* %"CONTAB[22]*16", {}* %"CONTAB[20]*17")
  %"CONTAB[27]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 504, i64 3, {}* %"CONTAB[27]*18", {}* %"CONTAB[22]*19", {}* %"CONTAB[20]*20")
  %"CONTAB[27]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 505, i64 3, {}* %"CONTAB[27]*21", {}* %"CONTAB[22]*22", {}* %"CONTAB[20]*23")
  %"CONTAB[27]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 506, i64 3, {}* %"CONTAB[27]*24", {}* %"CONTAB[22]*25", {}* %"CONTAB[20]*26")
  %"CONTAB[5]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[318]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 318), align 16
  %"CONTAB[297]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 507, i64 3, {}* %"CONTAB[5]*", {}* %"CONTAB[318]*", {}* %"CONTAB[297]*")
  %"CONTAB[5]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[297]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 508, i64 2, {}* %"CONTAB[5]*27", {}* %"CONTAB[297]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 510, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-MIN, i64 0, i64 0))
  %"CONTAB[510]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 510), align 16
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 509, {}* %"CONTAB[510]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 511, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-~?", i64 0, i64 0))
  %"CONTAB[27]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 512, i64 3, {}* %"CONTAB[27]*29", {}* %"CONTAB[22]*30", {}* %"CONTAB[20]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 513, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  %"CONTAB[27]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 514, i64 3, {}* %"CONTAB[27]*32", {}* %"CONTAB[22]*33", {}* %"CONTAB[20]*34")
  %"CONTAB[27]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 515, i64 3, {}* %"CONTAB[27]*35", {}* %"CONTAB[22]*36", {}* %"CONTAB[20]*37")
  %"CONTAB[27]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 516, i64 3, {}* %"CONTAB[27]*38", {}* %"CONTAB[22]*39", {}* %"CONTAB[20]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 517, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str-~?|", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 519, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-WRITE-STRING, i64 0, i64 0))
  %"CONTAB[519]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 519), align 8
  %"CONTAB[3]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 518, {}* %"CONTAB[519]*", {}* %"CONTAB[3]*41")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 520, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-|", i64 0, i64 0))
  %"CONTAB[27]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 521, i64 3, {}* %"CONTAB[27]*42", {}* %"CONTAB[22]*43", {}* %"CONTAB[20]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 523, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-B=ZENTRIERE-LISPAUSDRUCK", i64 0, i64 0))
  %"CONTAB[523]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 523), align 8
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 522, {}* %"CONTAB[523]*", {}* %"CONTAB[36]*")
  %"CONTAB[27]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 524, i64 3, {}* %"CONTAB[27]*45", {}* %"CONTAB[22]*46", {}* %"CONTAB[20]*47")
  %"CONTAB[27]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 525, i64 3, {}* %"CONTAB[27]*48", {}* %"CONTAB[22]*49", {}* %"CONTAB[20]*50")
  %"CONTAB[27]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 526, i64 3, {}* %"CONTAB[27]*51", {}* %"CONTAB[22]*52", {}* %"CONTAB[20]*53")
  %"CONTAB[27]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 527, i64 3, {}* %"CONTAB[27]*54", {}* %"CONTAB[22]*55", {}* %"CONTAB[20]*56")
  %"CONTAB[27]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*59" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 528, i64 3, {}* %"CONTAB[27]*57", {}* %"CONTAB[22]*58", {}* %"CONTAB[20]*59")
  %"CONTAB[27]*60" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*61" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*62" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 529, i64 3, {}* %"CONTAB[27]*60", {}* %"CONTAB[22]*61", {}* %"CONTAB[20]*62")
  %"CONTAB[27]*63" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*64" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*65" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 530, i64 3, {}* %"CONTAB[27]*63", {}* %"CONTAB[22]*64", {}* %"CONTAB[20]*65")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 531, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-~?", i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.45() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !111 {
entry:
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 532, i64 3, {}* %"CONTAB[27]*", {}* %"CONTAB[22]*", {}* %"CONTAB[20]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 533, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  %"CONTAB[27]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 534, i64 3, {}* %"CONTAB[27]*1", {}* %"CONTAB[22]*2", {}* %"CONTAB[20]*3")
  %"CONTAB[27]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 535, i64 3, {}* %"CONTAB[27]*4", {}* %"CONTAB[22]*5", {}* %"CONTAB[20]*6")
  %"CONTAB[27]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 536, i64 3, {}* %"CONTAB[27]*7", {}* %"CONTAB[22]*8", {}* %"CONTAB[20]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 537, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"str-~?-", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 538, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str--, i64 0, i64 0))
  %"CONTAB[27]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 539, i64 3, {}* %"CONTAB[27]*10", {}* %"CONTAB[22]*11", {}* %"CONTAB[20]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 541, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-MAKE-VECTOR, i64 0, i64 0))
  %"CONTAB[541]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 541), align 8
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 540, {}* %"CONTAB[541]*", {}* %"CONTAB[40]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 543, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-CHARACTER, i64 0, i64 0))
  %"CONTAB[543]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 543), align 8
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 542, {}* %"CONTAB[543]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 545, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-FILL-ARRAY-WITH-ELT, i64 0, i64 0))
  %"CONTAB[545]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 545), align 8
  %"CONTAB[40]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 544, {}* %"CONTAB[545]*", {}* %"CONTAB[40]*13")
  %"CONTAB[27]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 546, i64 3, {}* %"CONTAB[27]*14", {}* %"CONTAB[22]*15", {}* %"CONTAB[20]*16")
  %"CONTAB[27]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 547, i64 3, {}* %"CONTAB[27]*17", {}* %"CONTAB[22]*18", {}* %"CONTAB[20]*19")
  %"CONTAB[27]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 548, i64 3, {}* %"CONTAB[27]*20", {}* %"CONTAB[22]*21", {}* %"CONTAB[20]*22")
  %"CONTAB[27]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 549, i64 3, {}* %"CONTAB[27]*23", {}* %"CONTAB[22]*24", {}* %"CONTAB[20]*25")
  %"CONTAB[27]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 550, i64 3, {}* %"CONTAB[27]*26", {}* %"CONTAB[22]*27", {}* %"CONTAB[20]*28")
  %"CONTAB[27]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 551, i64 3, {}* %"CONTAB[27]*29", {}* %"CONTAB[22]*30", {}* %"CONTAB[20]*31")
  %"CONTAB[27]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 552, i64 3, {}* %"CONTAB[27]*32", {}* %"CONTAB[22]*33", {}* %"CONTAB[20]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 553, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-~?", i64 0, i64 0))
  %"CONTAB[27]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 554, i64 3, {}* %"CONTAB[27]*35", {}* %"CONTAB[22]*36", {}* %"CONTAB[20]*37")
  %"CONTAB[27]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 555, i64 3, {}* %"CONTAB[27]*38", {}* %"CONTAB[22]*39", {}* %"CONTAB[20]*40")
  %"CONTAB[27]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 556, i64 3, {}* %"CONTAB[27]*41", {}* %"CONTAB[22]*42", {}* %"CONTAB[20]*43")
  %"CONTAB[27]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 557, i64 3, {}* %"CONTAB[27]*44", {}* %"CONTAB[22]*45", {}* %"CONTAB[20]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 558, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-~?", i64 0, i64 0))
  %"CONTAB[27]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 559, i64 3, {}* %"CONTAB[27]*47", {}* %"CONTAB[22]*48", {}* %"CONTAB[20]*49")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 561, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-INDEX, i64 0, i64 0))
  %"CONTAB[561]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 561), align 8
  %"CONTAB[14]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 560, {}* %"CONTAB[561]*", {}* %"CONTAB[14]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 563, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-EQ-INCOMPARABLE, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 565, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-CLASP-CLEAVIR, i64 0, i64 0))
  %"CONTAB[565]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 565), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 564, {}* %"CONTAB[565]*")
  %"CONTAB[563]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 563), align 8
  %"CONTAB[564]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 564), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 562, {}* %"CONTAB[563]*", {}* %"CONTAB[564]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 567, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-EQL-UNDERLYING, i64 0, i64 0))
  %"CONTAB[567]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 567), align 8
  %"CONTAB[40]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 566, {}* %"CONTAB[567]*", {}* %"CONTAB[40]*50")
  %"CONTAB[27]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 568, i64 3, {}* %"CONTAB[27]*51", {}* %"CONTAB[22]*52", {}* %"CONTAB[20]*53")
  %"CONTAB[27]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 569, i64 3, {}* %"CONTAB[27]*54", {}* %"CONTAB[22]*55", {}* %"CONTAB[20]*56")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 571, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-POSITION, i64 0, i64 0))
  %"CONTAB[571]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 571), align 8
  %"CONTAB[3]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 570, {}* %"CONTAB[571]*", {}* %"CONTAB[3]*57")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 573, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-AUFFUELLZEICHEN, i64 0, i64 0))
  %"CONTAB[573]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 573), align 8
  %"CONTAB[14]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 572, {}* %"CONTAB[573]*", {}* %"CONTAB[14]*58")
  %"CONTAB[27]*59" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*60" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*61" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 574, i64 3, {}* %"CONTAB[27]*59", {}* %"CONTAB[22]*60", {}* %"CONTAB[20]*61")
  %"CONTAB[27]*62" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*63" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*64" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 575, i64 3, {}* %"CONTAB[27]*62", {}* %"CONTAB[22]*63", {}* %"CONTAB[20]*64")
  %"CONTAB[27]*65" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*66" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*67" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 576, i64 3, {}* %"CONTAB[27]*65", {}* %"CONTAB[22]*66", {}* %"CONTAB[20]*67")
  %"CONTAB[27]*68" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*69" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*70" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 577, i64 3, {}* %"CONTAB[27]*68", {}* %"CONTAB[22]*69", {}* %"CONTAB[20]*70")
  %"CONTAB[27]*71" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*72" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*73" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 578, i64 3, {}* %"CONTAB[27]*71", {}* %"CONTAB[22]*72", {}* %"CONTAB[20]*73")
  %"CONTAB[27]*74" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*75" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*76" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 579, i64 3, {}* %"CONTAB[27]*74", {}* %"CONTAB[22]*75", {}* %"CONTAB[20]*76")
  %"CONTAB[27]*77" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*78" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*79" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 580, i64 3, {}* %"CONTAB[27]*77", {}* %"CONTAB[22]*78", {}* %"CONTAB[20]*79")
  %"CONTAB[27]*80" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*81" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*82" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 581, i64 3, {}* %"CONTAB[27]*80", {}* %"CONTAB[22]*81", {}* %"CONTAB[20]*82")
  %"CONTAB[27]*83" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*84" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*85" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 582, i64 3, {}* %"CONTAB[27]*83", {}* %"CONTAB[22]*84", {}* %"CONTAB[20]*85")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.46() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !112 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.44)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.45)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.47() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !113 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.43)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.46)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.48() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !114 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 583, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str-|", i64 0, i64 0))
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 584, i64 3, {}* %"CONTAB[27]*", {}* %"CONTAB[22]*", {}* %"CONTAB[20]*")
  %"CONTAB[27]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 585, i64 3, {}* %"CONTAB[27]*1", {}* %"CONTAB[22]*2", {}* %"CONTAB[20]*3")
  %"CONTAB[27]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 586, i64 3, {}* %"CONTAB[27]*4", {}* %"CONTAB[22]*5", {}* %"CONTAB[20]*6")
  %"CONTAB[27]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 587, i64 3, {}* %"CONTAB[27]*7", {}* %"CONTAB[22]*8", {}* %"CONTAB[20]*9")
  %"CONTAB[27]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 588, i64 3, {}* %"CONTAB[27]*10", {}* %"CONTAB[22]*11", {}* %"CONTAB[20]*12")
  %"CONTAB[27]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 589, i64 3, {}* %"CONTAB[27]*13", {}* %"CONTAB[22]*14", {}* %"CONTAB[20]*15")
  %"CONTAB[27]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 590, i64 3, {}* %"CONTAB[27]*16", {}* %"CONTAB[22]*17", {}* %"CONTAB[20]*18")
  %"CONTAB[27]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 591, i64 3, {}* %"CONTAB[27]*19", {}* %"CONTAB[22]*20", {}* %"CONTAB[20]*21")
  %"CONTAB[27]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 592, i64 3, {}* %"CONTAB[27]*22", {}* %"CONTAB[22]*23", {}* %"CONTAB[20]*24")
  %"CONTAB[27]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 593, i64 3, {}* %"CONTAB[27]*25", {}* %"CONTAB[22]*26", {}* %"CONTAB[20]*27")
  %"CONTAB[27]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 594, i64 3, {}* %"CONTAB[27]*28", {}* %"CONTAB[22]*29", {}* %"CONTAB[20]*30")
  %"CONTAB[27]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 595, i64 3, {}* %"CONTAB[27]*31", {}* %"CONTAB[22]*32", {}* %"CONTAB[20]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 597, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-NTHCDR, i64 0, i64 0))
  %"CONTAB[597]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 597), align 8
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 596, {}* %"CONTAB[597]*", {}* %"CONTAB[3]*")
  %"CONTAB[5]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[318]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 318), align 16
  %"CONTAB[297]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 598, i64 3, {}* %"CONTAB[5]*", {}* %"CONTAB[318]*", {}* %"CONTAB[297]*")
  %"CONTAB[5]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 5), align 8
  %"CONTAB[297]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 297), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 599, i64 2, {}* %"CONTAB[5]*34", {}* %"CONTAB[297]*35")
  %"CONTAB[27]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 600, i64 3, {}* %"CONTAB[27]*36", {}* %"CONTAB[22]*37", {}* %"CONTAB[20]*38")
  %"CONTAB[27]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 601, i64 3, {}* %"CONTAB[27]*39", {}* %"CONTAB[22]*40", {}* %"CONTAB[20]*41")
  %"CONTAB[27]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 602, i64 3, {}* %"CONTAB[27]*42", {}* %"CONTAB[22]*43", {}* %"CONTAB[20]*44")
  %"CONTAB[27]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 603, i64 3, {}* %"CONTAB[27]*45", {}* %"CONTAB[22]*46", {}* %"CONTAB[20]*47")
  %"CONTAB[27]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 27), align 8
  %"CONTAB[22]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 22), align 16
  %"CONTAB[20]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 20), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 604, i64 3, {}* %"CONTAB[27]*48", {}* %"CONTAB[22]*49", {}* %"CONTAB[20]*50")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 606, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-KLH=TABELLE-AUSGEBEN_2", i64 0, i64 0))
  %"CONTAB[606]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 606), align 16
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 605, {}* %"CONTAB[606]*", {}* %"CONTAB[36]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 609, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-ZEILENBESCHRIFTUNG, i64 0, i64 0))
  %"CONTAB[609]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 609), align 8
  %"CONTAB[36]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 608, {}* %"CONTAB[609]*", {}* %"CONTAB[36]*51")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 611, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-SPALTENBESCHRIFTUNG, i64 0, i64 0))
  %"CONTAB[611]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 611), align 8
  %"CONTAB[36]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 610, {}* %"CONTAB[611]*", {}* %"CONTAB[36]*52")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 613, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-TABELLEN-FUNKTION, i64 0, i64 0))
  %"CONTAB[613]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 613), align 8
  %"CONTAB[36]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 612, {}* %"CONTAB[613]*", {}* %"CONTAB[36]*53")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 616, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-TABELLEN-ZUGRIFF, i64 0, i64 0))
  %"CONTAB[616]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 616), align 16
  %"CONTAB[36]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 615, {}* %"CONTAB[616]*", {}* %"CONTAB[36]*54")
  %"CONTAB[615]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 615), align 8
  %"CONTAB[448]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 448), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 614, i64 2, {}* %"CONTAB[615]*", {}* %"CONTAB[448]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 619, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-TABELLEN-TITEL, i64 0, i64 0))
  %"CONTAB[619]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 619), align 8
  %"CONTAB[36]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 618, {}* %"CONTAB[619]*", {}* %"CONTAB[36]*55")
  %"CONTAB[618]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 618), align 16
  %"CONTAB[450]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 450), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 617, i64 2, {}* %"CONTAB[618]*", {}* %"CONTAB[450]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 622, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-ZEILEN-TITEL, i64 0, i64 0))
  %"CONTAB[622]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 622), align 16
  %"CONTAB[36]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 621, {}* %"CONTAB[622]*", {}* %"CONTAB[36]*56")
  %"CONTAB[451]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 451), align 8
  %"CONTAB[453]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 453), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 623, i64 2, {}* %"CONTAB[451]*", {}* %"CONTAB[453]*")
  %"CONTAB[621]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 621), align 8
  %"CONTAB[623]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 623), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 620, i64 2, {}* %"CONTAB[621]*", {}* %"CONTAB[623]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 626, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-SPALTEN-TITEL, i64 0, i64 0))
  %"CONTAB[626]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 626), align 16
  %"CONTAB[36]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 625, {}* %"CONTAB[626]*", {}* %"CONTAB[36]*57")
  %"CONTAB[451]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 451), align 8
  %"CONTAB[455]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 455), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 627, i64 2, {}* %"CONTAB[451]*58", {}* %"CONTAB[455]*")
  %"CONTAB[625]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 625), align 8
  %"CONTAB[627]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 627), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 624, i64 2, {}* %"CONTAB[625]*", {}* %"CONTAB[627]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 630, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-ZEILEN-BREITE, i64 0, i64 0))
  %"CONTAB[630]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 630), align 16
  %"CONTAB[36]*59" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 629, {}* %"CONTAB[630]*", {}* %"CONTAB[36]*59")
  %"CONTAB[629]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 629), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 628, i64 2, {}* %"CONTAB[629]*", {}* inttoptr (i64 120 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 633, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-SPALTEN-BREITE, i64 0, i64 0))
  %"CONTAB[633]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 633), align 8
  %"CONTAB[36]*60" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 632, {}* %"CONTAB[633]*", {}* %"CONTAB[36]*60")
  %"CONTAB[632]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 632), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 631, i64 2, {}* %"CONTAB[632]*", {}* inttoptr (i64 120 to {}*))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.49() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !115 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 636, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-SEITEN-BREITE, i64 0, i64 0))
  %"CONTAB[636]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 636), align 16
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 635, {}* %"CONTAB[636]*", {}* %"CONTAB[36]*")
  %"CONTAB[635]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 635), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 634, i64 2, {}* %"CONTAB[635]*", {}* inttoptr (i64 600 to {}*))
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 637, i64 2, {}* %"CONTAB[189]*", {}* %"CONTAB[7]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 640, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SEITENLAENGE, i64 0, i64 0))
  %"CONTAB[640]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 640), align 16
  %"CONTAB[36]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 639, {}* %"CONTAB[640]*", {}* %"CONTAB[36]*1")
  %"CONTAB[639]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 639), align 8
  %"CONTAB[457]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 457), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 638, i64 2, {}* %"CONTAB[639]*", {}* %"CONTAB[457]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 643, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str-FUNKTION-BEI-SEITENUMBRUCH, i64 0, i64 0))
  %"CONTAB[643]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 643), align 8
  %"CONTAB[36]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 36), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 642, {}* %"CONTAB[643]*", {}* %"CONTAB[36]*2")
  %"CONTAB[642]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 642), align 16
  %"CONTAB[0]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 641, i64 2, {}* %"CONTAB[642]*", {}* %"CONTAB[0]*")
  %"CONTAB[153]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 153), align 8
  %"CONTAB[608]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 608), align 16
  %"CONTAB[610]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 610), align 16
  %"CONTAB[612]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 612), align 16
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[614]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 614), align 16
  %"CONTAB[617]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 617), align 8
  %"CONTAB[620]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 620), align 16
  %"CONTAB[624]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 624), align 16
  %"CONTAB[628]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 628), align 16
  %"CONTAB[631]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 631), align 8
  %"CONTAB[634]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 634), align 16
  %"CONTAB[637]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 637), align 8
  %"CONTAB[638]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 638), align 16
  %"CONTAB[641]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 641), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 607, i64 15, {}* %"CONTAB[153]*", {}* %"CONTAB[608]*", {}* %"CONTAB[610]*", {}* %"CONTAB[612]*", {}* %"CONTAB[47]*", {}* %"CONTAB[614]*", {}* %"CONTAB[617]*", {}* %"CONTAB[620]*", {}* %"CONTAB[624]*", {}* %"CONTAB[628]*", {}* %"CONTAB[631]*", {}* %"CONTAB[634]*", {}* %"CONTAB[637]*", {}* %"CONTAB[638]*", {}* %"CONTAB[641]*")
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 56), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 644, i64 4, {}* %"CONTAB[56]*", {}* inttoptr (i64 32040 to {}*), {}* inttoptr (i64 1012 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[615]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 615), align 8
  %"CONTAB[448]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 448), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 646, i64 2, {}* %"CONTAB[615]*", {}* %"CONTAB[448]*")
  %"CONTAB[618]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 618), align 16
  %"CONTAB[450]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 450), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 647, i64 2, {}* %"CONTAB[618]*", {}* %"CONTAB[450]*")
  %"CONTAB[451]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 451), align 8
  %"CONTAB[453]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 453), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 649, i64 2, {}* %"CONTAB[451]*", {}* %"CONTAB[453]*")
  %"CONTAB[621]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 621), align 8
  %"CONTAB[649]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 649), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 648, i64 2, {}* %"CONTAB[621]*", {}* %"CONTAB[649]*")
  %"CONTAB[451]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 451), align 8
  %"CONTAB[455]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 455), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 651, i64 2, {}* %"CONTAB[451]*3", {}* %"CONTAB[455]*")
  %"CONTAB[625]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 625), align 8
  %"CONTAB[651]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 651), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 650, i64 2, {}* %"CONTAB[625]*", {}* %"CONTAB[651]*")
  %"CONTAB[629]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 629), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 652, i64 2, {}* %"CONTAB[629]*", {}* inttoptr (i64 120 to {}*))
  %"CONTAB[632]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 632), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 653, i64 2, {}* %"CONTAB[632]*", {}* inttoptr (i64 120 to {}*))
  %"CONTAB[635]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 635), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 654, i64 2, {}* %"CONTAB[635]*4", {}* inttoptr (i64 600 to {}*))
  %"CONTAB[189]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[7]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 7), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 655, i64 2, {}* %"CONTAB[189]*5", {}* %"CONTAB[7]*6")
  %"CONTAB[639]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 639), align 8
  %"CONTAB[457]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 457), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 656, i64 2, {}* %"CONTAB[639]*7", {}* %"CONTAB[457]*8")
  %"CONTAB[642]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 642), align 16
  %"CONTAB[0]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 657, i64 2, {}* %"CONTAB[642]*9", {}* %"CONTAB[0]*10")
  %"CONTAB[153]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 153), align 8
  %"CONTAB[608]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 608), align 16
  %"CONTAB[610]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 610), align 16
  %"CONTAB[612]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 612), align 16
  %"CONTAB[47]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 47), align 8
  %"CONTAB[646]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 646), align 16
  %"CONTAB[647]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 647), align 8
  %"CONTAB[648]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 648), align 16
  %"CONTAB[650]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 650), align 16
  %"CONTAB[652]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 652), align 16
  %"CONTAB[653]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 653), align 8
  %"CONTAB[654]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 654), align 16
  %"CONTAB[655]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 655), align 8
  %"CONTAB[656]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 656), align 16
  %"CONTAB[657]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 657), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 645, i64 15, {}* %"CONTAB[153]*11", {}* %"CONTAB[608]*12", {}* %"CONTAB[610]*13", {}* %"CONTAB[612]*14", {}* %"CONTAB[47]*15", {}* %"CONTAB[646]*", {}* %"CONTAB[647]*", {}* %"CONTAB[648]*", {}* %"CONTAB[650]*", {}* %"CONTAB[652]*", {}* %"CONTAB[653]*", {}* %"CONTAB[654]*", {}* %"CONTAB[655]*", {}* %"CONTAB[656]*", {}* %"CONTAB[657]*")
  %"CONTAB[616]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 616), align 16
  %"CONTAB[14]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 658, {}* %"CONTAB[616]*", {}* %"CONTAB[14]*")
  %"CONTAB[619]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 619), align 8
  %"CONTAB[14]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 659, {}* %"CONTAB[619]*", {}* %"CONTAB[14]*16")
  %"CONTAB[622]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 622), align 16
  %"CONTAB[14]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 660, {}* %"CONTAB[622]*", {}* %"CONTAB[14]*17")
  %"CONTAB[626]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 626), align 16
  %"CONTAB[14]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 661, {}* %"CONTAB[626]*", {}* %"CONTAB[14]*18")
  %"CONTAB[630]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 630), align 16
  %"CONTAB[14]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 662, {}* %"CONTAB[630]*", {}* %"CONTAB[14]*19")
  %"CONTAB[633]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 633), align 8
  %"CONTAB[14]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 663, {}* %"CONTAB[633]*", {}* %"CONTAB[14]*20")
  %"CONTAB[636]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 636), align 16
  %"CONTAB[14]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 664, {}* %"CONTAB[636]*21", {}* %"CONTAB[14]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 666, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-STREAM, i64 0, i64 0))
  %"CONTAB[666]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 666), align 16
  %"CONTAB[14]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 665, {}* %"CONTAB[666]*", {}* %"CONTAB[14]*23")
  %"CONTAB[640]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 640), align 16
  %"CONTAB[14]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 667, {}* %"CONTAB[640]*24", {}* %"CONTAB[14]*25")
  %"CONTAB[643]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 643), align 8
  %"CONTAB[14]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 14), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 668, {}* %"CONTAB[643]*26", {}* %"CONTAB[14]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 671, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-&OPTIONAL", i64 0, i64 0))
  %"CONTAB[671]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 671), align 8
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 670, {}* %"CONTAB[671]*", {}* %"CONTAB[3]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 673, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ARGS, i64 0, i64 0))
  %"CONTAB[673]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 673), align 8
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 40), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 672, {}* %"CONTAB[673]*", {}* %"CONTAB[40]*")
  %"CONTAB[189]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[155]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 669, i64 4, {}* %"CONTAB[189]*28", {}* %"CONTAB[670]*", {}* %"CONTAB[155]*", {}* %"CONTAB[672]*")
  %"CONTAB[189]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[155]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 674, i64 4, {}* %"CONTAB[189]*29", {}* %"CONTAB[670]*30", {}* %"CONTAB[155]*31", {}* %"CONTAB[672]*32")
  %"CONTAB[189]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[155]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 675, i64 4, {}* %"CONTAB[189]*33", {}* %"CONTAB[670]*34", {}* %"CONTAB[155]*35", {}* %"CONTAB[672]*36")
  %"CONTAB[189]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[155]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 676, i64 4, {}* %"CONTAB[189]*37", {}* %"CONTAB[670]*38", {}* %"CONTAB[155]*39", {}* %"CONTAB[672]*40")
  %"CONTAB[189]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[155]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 677, i64 4, {}* %"CONTAB[189]*41", {}* %"CONTAB[670]*42", {}* %"CONTAB[155]*43", {}* %"CONTAB[672]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 681, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116673, i64 0, i64 0))
  %"CONTAB[681]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 681), align 8
  %"CONTAB[0]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 680, {}* %"CONTAB[681]*", {}* %"CONTAB[0]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 685, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-QUOTE, i64 0, i64 0))
  %"CONTAB[685]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 685), align 8
  %"CONTAB[3]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 684, {}* %"CONTAB[685]*", {}* %"CONTAB[3]*46")
  %"CONTAB[684]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 683, i64 2, {}* %"CONTAB[684]*", {}* %"CONTAB[459]*")
  %"CONTAB[8]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[683]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 683), align 8
  %"CONTAB[461]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[558]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 558), align 16
  %"CONTAB[467]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 682, i64 8, {}* %"CONTAB[8]*", {}* %"CONTAB[683]*", {}* %"CONTAB[461]*", {}* %"CONTAB[463]*", {}* %"CONTAB[464]*", {}* %"CONTAB[558]*", {}* %"CONTAB[467]*", {}* inttoptr (i64 4 to {}*))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.50() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !116 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.48)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.49)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.51() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !117 {
entry:
  %"CONTAB[680]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 680), align 16
  %"CONTAB[682]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 682), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 679, i64 2, {}* %"CONTAB[680]*", {}* %"CONTAB[682]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 688, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116674, i64 0, i64 0))
  %"CONTAB[688]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 688), align 16
  %"CONTAB[0]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 687, {}* %"CONTAB[688]*", {}* %"CONTAB[0]*")
  %"CONTAB[684]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 690, i64 2, {}* %"CONTAB[684]*", {}* %"CONTAB[459]*")
  %"CONTAB[8]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[690]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 690), align 16
  %"CONTAB[461]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[558]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 558), align 16
  %"CONTAB[467]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 689, i64 8, {}* %"CONTAB[8]*", {}* %"CONTAB[690]*", {}* %"CONTAB[461]*", {}* %"CONTAB[463]*", {}* %"CONTAB[464]*", {}* %"CONTAB[558]*", {}* %"CONTAB[467]*", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[687]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 687), align 8
  %"CONTAB[689]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 689), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 686, i64 2, {}* %"CONTAB[687]*", {}* %"CONTAB[689]*")
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[679]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 679), align 8
  %"CONTAB[686]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 686), align 16
  %"CONTAB[155]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 678, i64 6, {}* %"CONTAB[189]*", {}* %"CONTAB[670]*", {}* %"CONTAB[679]*", {}* %"CONTAB[686]*", {}* %"CONTAB[155]*", {}* %"CONTAB[672]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 693, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-CONDITION, i64 0, i64 0))
  %"CONTAB[693]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 693), align 8
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 3), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 692, {}* %"CONTAB[693]*", {}* %"CONTAB[3]*")
  %"CONTAB[692]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 692), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 691, i64 1, {}* %"CONTAB[692]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 697, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116651, i64 0, i64 0))
  %"CONTAB[697]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 697), align 8
  %"CONTAB[0]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 696, {}* %"CONTAB[697]*", {}* %"CONTAB[0]*1")
  %"CONTAB[684]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 699, i64 2, {}* %"CONTAB[684]*2", {}* %"CONTAB[459]*3")
  %"CONTAB[8]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[699]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 699), align 8
  %"CONTAB[461]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[553]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 553), align 8
  %"CONTAB[467]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 698, i64 8, {}* %"CONTAB[8]*4", {}* %"CONTAB[699]*", {}* %"CONTAB[461]*5", {}* %"CONTAB[463]*6", {}* %"CONTAB[464]*7", {}* %"CONTAB[553]*", {}* %"CONTAB[467]*8", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[696]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 696), align 16
  %"CONTAB[698]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 698), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 695, i64 2, {}* %"CONTAB[696]*", {}* %"CONTAB[698]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 702, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116652, i64 0, i64 0))
  %"CONTAB[702]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 702), align 16
  %"CONTAB[0]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 701, {}* %"CONTAB[702]*", {}* %"CONTAB[0]*9")
  %"CONTAB[684]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 704, i64 2, {}* %"CONTAB[684]*10", {}* %"CONTAB[459]*11")
  %"CONTAB[8]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[704]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 704), align 16
  %"CONTAB[461]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[553]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 553), align 8
  %"CONTAB[467]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 703, i64 8, {}* %"CONTAB[8]*12", {}* %"CONTAB[704]*", {}* %"CONTAB[461]*13", {}* %"CONTAB[463]*14", {}* %"CONTAB[464]*15", {}* %"CONTAB[553]*16", {}* %"CONTAB[467]*17", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[701]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 701), align 8
  %"CONTAB[703]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 703), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 700, i64 2, {}* %"CONTAB[701]*", {}* %"CONTAB[703]*")
  %"CONTAB[189]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[695]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 695), align 8
  %"CONTAB[700]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 700), align 16
  %"CONTAB[155]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 694, i64 6, {}* %"CONTAB[189]*18", {}* %"CONTAB[670]*19", {}* %"CONTAB[695]*", {}* %"CONTAB[700]*", {}* %"CONTAB[155]*20", {}* %"CONTAB[672]*21")
  %"CONTAB[692]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 692), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 705, i64 1, {}* %"CONTAB[692]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 709, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116549, i64 0, i64 0))
  %"CONTAB[709]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 709), align 8
  %"CONTAB[0]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 708, {}* %"CONTAB[709]*", {}* %"CONTAB[0]*23")
  %"CONTAB[684]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 711, i64 2, {}* %"CONTAB[684]*24", {}* %"CONTAB[459]*25")
  %"CONTAB[8]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[711]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 711), align 8
  %"CONTAB[461]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[517]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 517), align 8
  %"CONTAB[467]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 710, i64 8, {}* %"CONTAB[8]*26", {}* %"CONTAB[711]*", {}* %"CONTAB[461]*27", {}* %"CONTAB[463]*28", {}* %"CONTAB[464]*29", {}* %"CONTAB[517]*", {}* %"CONTAB[467]*30", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[708]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 708), align 16
  %"CONTAB[710]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 710), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 707, i64 2, {}* %"CONTAB[708]*", {}* %"CONTAB[710]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 714, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116550, i64 0, i64 0))
  %"CONTAB[714]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 714), align 16
  %"CONTAB[0]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 713, {}* %"CONTAB[714]*", {}* %"CONTAB[0]*31")
  %"CONTAB[684]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 716, i64 2, {}* %"CONTAB[684]*32", {}* %"CONTAB[459]*33")
  %"CONTAB[8]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[716]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 716), align 16
  %"CONTAB[461]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[517]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 517), align 8
  %"CONTAB[467]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 715, i64 8, {}* %"CONTAB[8]*34", {}* %"CONTAB[716]*", {}* %"CONTAB[461]*35", {}* %"CONTAB[463]*36", {}* %"CONTAB[464]*37", {}* %"CONTAB[517]*38", {}* %"CONTAB[467]*39", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[713]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 713), align 8
  %"CONTAB[715]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 715), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 712, i64 2, {}* %"CONTAB[713]*", {}* %"CONTAB[715]*")
  %"CONTAB[189]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[707]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 707), align 8
  %"CONTAB[712]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 712), align 16
  %"CONTAB[155]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 706, i64 6, {}* %"CONTAB[189]*40", {}* %"CONTAB[670]*41", {}* %"CONTAB[707]*", {}* %"CONTAB[712]*", {}* %"CONTAB[155]*42", {}* %"CONTAB[672]*43")
  %"CONTAB[692]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 692), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 717, i64 1, {}* %"CONTAB[692]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 721, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116527, i64 0, i64 0))
  %"CONTAB[721]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 721), align 8
  %"CONTAB[0]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 720, {}* %"CONTAB[721]*", {}* %"CONTAB[0]*45")
  %"CONTAB[684]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 723, i64 2, {}* %"CONTAB[684]*46", {}* %"CONTAB[459]*47")
  %"CONTAB[8]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[723]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 723), align 8
  %"CONTAB[461]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[511]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 511), align 8
  %"CONTAB[467]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 722, i64 8, {}* %"CONTAB[8]*48", {}* %"CONTAB[723]*", {}* %"CONTAB[461]*49", {}* %"CONTAB[463]*50", {}* %"CONTAB[464]*51", {}* %"CONTAB[511]*", {}* %"CONTAB[467]*52", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[720]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 720), align 16
  %"CONTAB[722]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 722), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 719, i64 2, {}* %"CONTAB[720]*", {}* %"CONTAB[722]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 726, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116528, i64 0, i64 0))
  %"CONTAB[726]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 726), align 16
  %"CONTAB[0]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 725, {}* %"CONTAB[726]*", {}* %"CONTAB[0]*53")
  %"CONTAB[684]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 728, i64 2, {}* %"CONTAB[684]*54", {}* %"CONTAB[459]*55")
  %"CONTAB[8]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[728]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 728), align 16
  %"CONTAB[461]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*59" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[511]*60" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 511), align 8
  %"CONTAB[467]*61" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 727, i64 8, {}* %"CONTAB[8]*56", {}* %"CONTAB[728]*", {}* %"CONTAB[461]*57", {}* %"CONTAB[463]*58", {}* %"CONTAB[464]*59", {}* %"CONTAB[511]*60", {}* %"CONTAB[467]*61", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[725]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 725), align 8
  %"CONTAB[727]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 727), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 724, i64 2, {}* %"CONTAB[725]*", {}* %"CONTAB[727]*")
  %"CONTAB[189]*62" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*63" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[719]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 719), align 8
  %"CONTAB[724]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 724), align 16
  %"CONTAB[155]*64" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*65" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 718, i64 6, {}* %"CONTAB[189]*62", {}* %"CONTAB[670]*63", {}* %"CONTAB[719]*", {}* %"CONTAB[724]*", {}* %"CONTAB[155]*64", {}* %"CONTAB[672]*65")
  %"CONTAB[692]*66" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 692), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 729, i64 1, {}* %"CONTAB[692]*66")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 733, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116508, i64 0, i64 0))
  %"CONTAB[733]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 733), align 8
  %"CONTAB[0]*67" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 732, {}* %"CONTAB[733]*", {}* %"CONTAB[0]*67")
  %"CONTAB[684]*68" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*69" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 735, i64 2, {}* %"CONTAB[684]*68", {}* %"CONTAB[459]*69")
  %"CONTAB[8]*70" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[735]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 735), align 8
  %"CONTAB[461]*71" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*72" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*73" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[502]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 502), align 16
  %"CONTAB[467]*74" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 734, i64 8, {}* %"CONTAB[8]*70", {}* %"CONTAB[735]*", {}* %"CONTAB[461]*71", {}* %"CONTAB[463]*72", {}* %"CONTAB[464]*73", {}* %"CONTAB[502]*", {}* %"CONTAB[467]*74", {}* inttoptr (i64 4 to {}*))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.52() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !118 {
entry:
  %"CONTAB[732]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 732), align 16
  %"CONTAB[734]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 734), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 731, i64 2, {}* %"CONTAB[732]*", {}* %"CONTAB[734]*")
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[731]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 731), align 8
  %"CONTAB[155]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 730, i64 5, {}* %"CONTAB[189]*", {}* %"CONTAB[670]*", {}* %"CONTAB[731]*", {}* %"CONTAB[155]*", {}* %"CONTAB[672]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 739, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116486, i64 0, i64 0))
  %"CONTAB[739]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 739), align 8
  %"CONTAB[0]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 738, {}* %"CONTAB[739]*", {}* %"CONTAB[0]*")
  %"CONTAB[684]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 741, i64 2, {}* %"CONTAB[684]*", {}* %"CONTAB[459]*")
  %"CONTAB[8]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[741]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 741), align 8
  %"CONTAB[461]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[487]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 487), align 8
  %"CONTAB[467]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 740, i64 8, {}* %"CONTAB[8]*", {}* %"CONTAB[741]*", {}* %"CONTAB[461]*", {}* %"CONTAB[463]*", {}* %"CONTAB[464]*", {}* %"CONTAB[487]*", {}* %"CONTAB[467]*", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[738]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 738), align 16
  %"CONTAB[740]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 740), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 737, i64 2, {}* %"CONTAB[738]*", {}* %"CONTAB[740]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 744, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116487, i64 0, i64 0))
  %"CONTAB[744]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 744), align 16
  %"CONTAB[0]*1" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 743, {}* %"CONTAB[744]*", {}* %"CONTAB[0]*1")
  %"CONTAB[684]*2" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*3" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 746, i64 2, {}* %"CONTAB[684]*2", {}* %"CONTAB[459]*3")
  %"CONTAB[8]*4" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[746]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 746), align 16
  %"CONTAB[461]*5" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*6" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*7" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[487]*8" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 487), align 8
  %"CONTAB[467]*9" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 745, i64 8, {}* %"CONTAB[8]*4", {}* %"CONTAB[746]*", {}* %"CONTAB[461]*5", {}* %"CONTAB[463]*6", {}* %"CONTAB[464]*7", {}* %"CONTAB[487]*8", {}* %"CONTAB[467]*9", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[743]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 743), align 8
  %"CONTAB[745]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 745), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 742, i64 2, {}* %"CONTAB[743]*", {}* %"CONTAB[745]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 749, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116488, i64 0, i64 0))
  %"CONTAB[749]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 749), align 8
  %"CONTAB[0]*10" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 748, {}* %"CONTAB[749]*", {}* %"CONTAB[0]*10")
  %"CONTAB[684]*11" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*12" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 751, i64 2, {}* %"CONTAB[684]*11", {}* %"CONTAB[459]*12")
  %"CONTAB[8]*13" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[751]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 751), align 8
  %"CONTAB[461]*14" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*15" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*16" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[487]*17" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 487), align 8
  %"CONTAB[467]*18" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 750, i64 8, {}* %"CONTAB[8]*13", {}* %"CONTAB[751]*", {}* %"CONTAB[461]*14", {}* %"CONTAB[463]*15", {}* %"CONTAB[464]*16", {}* %"CONTAB[487]*17", {}* %"CONTAB[467]*18", {}* inttoptr (i64 12 to {}*))
  %"CONTAB[748]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 748), align 16
  %"CONTAB[750]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 750), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 747, i64 2, {}* %"CONTAB[748]*", {}* %"CONTAB[750]*")
  %"CONTAB[189]*19" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*20" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[737]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 737), align 8
  %"CONTAB[742]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 742), align 16
  %"CONTAB[747]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 747), align 8
  %"CONTAB[155]*21" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*22" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 736, i64 7, {}* %"CONTAB[189]*19", {}* %"CONTAB[670]*20", {}* %"CONTAB[737]*", {}* %"CONTAB[742]*", {}* %"CONTAB[747]*", {}* %"CONTAB[155]*21", {}* %"CONTAB[672]*22")
  %"CONTAB[692]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 692), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 752, i64 1, {}* %"CONTAB[692]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 756, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116584, i64 0, i64 0))
  %"CONTAB[756]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 756), align 16
  %"CONTAB[0]*23" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 755, {}* %"CONTAB[756]*", {}* %"CONTAB[0]*23")
  %"CONTAB[684]*24" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*25" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 758, i64 2, {}* %"CONTAB[684]*24", {}* %"CONTAB[459]*25")
  %"CONTAB[8]*26" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[758]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 758), align 16
  %"CONTAB[461]*27" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*28" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*29" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[531]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 531), align 8
  %"CONTAB[467]*30" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 757, i64 8, {}* %"CONTAB[8]*26", {}* %"CONTAB[758]*", {}* %"CONTAB[461]*27", {}* %"CONTAB[463]*28", {}* %"CONTAB[464]*29", {}* %"CONTAB[531]*", {}* %"CONTAB[467]*30", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[755]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 755), align 8
  %"CONTAB[757]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 757), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 754, i64 2, {}* %"CONTAB[755]*", {}* %"CONTAB[757]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 761, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116585, i64 0, i64 0))
  %"CONTAB[761]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 761), align 8
  %"CONTAB[0]*31" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 760, {}* %"CONTAB[761]*", {}* %"CONTAB[0]*31")
  %"CONTAB[684]*32" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*33" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 763, i64 2, {}* %"CONTAB[684]*32", {}* %"CONTAB[459]*33")
  %"CONTAB[8]*34" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[763]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 763), align 8
  %"CONTAB[461]*35" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*36" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*37" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[531]*38" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 531), align 8
  %"CONTAB[467]*39" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 762, i64 8, {}* %"CONTAB[8]*34", {}* %"CONTAB[763]*", {}* %"CONTAB[461]*35", {}* %"CONTAB[463]*36", {}* %"CONTAB[464]*37", {}* %"CONTAB[531]*38", {}* %"CONTAB[467]*39", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[760]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 760), align 16
  %"CONTAB[762]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 762), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 759, i64 2, {}* %"CONTAB[760]*", {}* %"CONTAB[762]*")
  %"CONTAB[189]*40" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*41" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[754]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 754), align 16
  %"CONTAB[759]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 759), align 8
  %"CONTAB[155]*42" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*43" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 753, i64 6, {}* %"CONTAB[189]*40", {}* %"CONTAB[670]*41", {}* %"CONTAB[754]*", {}* %"CONTAB[759]*", {}* %"CONTAB[155]*42", {}* %"CONTAB[672]*43")
  %"CONTAB[692]*44" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 692), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 764, i64 1, {}* %"CONTAB[692]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 768, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116466, i64 0, i64 0))
  %"CONTAB[768]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 768), align 16
  %"CONTAB[0]*45" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 767, {}* %"CONTAB[768]*", {}* %"CONTAB[0]*45")
  %"CONTAB[684]*46" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*47" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 770, i64 2, {}* %"CONTAB[684]*46", {}* %"CONTAB[459]*47")
  %"CONTAB[8]*48" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[770]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 770), align 16
  %"CONTAB[461]*49" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*50" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*51" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[466]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 466), align 16
  %"CONTAB[467]*52" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 769, i64 8, {}* %"CONTAB[8]*48", {}* %"CONTAB[770]*", {}* %"CONTAB[461]*49", {}* %"CONTAB[463]*50", {}* %"CONTAB[464]*51", {}* %"CONTAB[466]*", {}* %"CONTAB[467]*52", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[767]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 767), align 8
  %"CONTAB[769]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 769), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 766, i64 2, {}* %"CONTAB[767]*", {}* %"CONTAB[769]*")
  %"CONTAB[189]*53" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*54" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[766]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 766), align 16
  %"CONTAB[155]*55" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*56" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 765, i64 5, {}* %"CONTAB[189]*53", {}* %"CONTAB[670]*54", {}* %"CONTAB[766]*", {}* %"CONTAB[155]*55", {}* %"CONTAB[672]*56")
  %"CONTAB[189]*57" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*58" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[155]*59" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*60" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 771, i64 4, {}* %"CONTAB[189]*57", {}* %"CONTAB[670]*58", {}* %"CONTAB[155]*59", {}* %"CONTAB[672]*60")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 775, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116606, i64 0, i64 0))
  %"CONTAB[775]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 775), align 8
  %"CONTAB[0]*61" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 774, {}* %"CONTAB[775]*", {}* %"CONTAB[0]*61")
  %"CONTAB[684]*62" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*63" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 777, i64 2, {}* %"CONTAB[684]*62", {}* %"CONTAB[459]*63")
  %"CONTAB[8]*64" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[777]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 777), align 8
  %"CONTAB[461]*65" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*66" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*67" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[537]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 537), align 8
  %"CONTAB[467]*68" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 776, i64 8, {}* %"CONTAB[8]*64", {}* %"CONTAB[777]*", {}* %"CONTAB[461]*65", {}* %"CONTAB[463]*66", {}* %"CONTAB[464]*67", {}* %"CONTAB[537]*", {}* %"CONTAB[467]*68", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[774]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 774), align 16
  %"CONTAB[776]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 776), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 773, i64 2, {}* %"CONTAB[774]*", {}* %"CONTAB[776]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 780, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-116607, i64 0, i64 0))
  %"CONTAB[780]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 780), align 16
  %"CONTAB[0]*69" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 0), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 779, {}* %"CONTAB[780]*", {}* %"CONTAB[0]*69")
  %"CONTAB[684]*70" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 684), align 16
  %"CONTAB[459]*71" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 459), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 782, i64 2, {}* %"CONTAB[684]*70", {}* %"CONTAB[459]*71")
  %"CONTAB[8]*72" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 8), align 16
  %"CONTAB[782]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 782), align 16
  %"CONTAB[461]*73" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 461), align 8
  %"CONTAB[463]*74" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 463), align 8
  %"CONTAB[464]*75" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 464), align 16
  %"CONTAB[537]*76" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 537), align 8
  %"CONTAB[467]*77" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 467), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 781, i64 8, {}* %"CONTAB[8]*72", {}* %"CONTAB[782]*", {}* %"CONTAB[461]*73", {}* %"CONTAB[463]*74", {}* %"CONTAB[464]*75", {}* %"CONTAB[537]*76", {}* %"CONTAB[467]*77", {}* inttoptr (i64 4 to {}*))
  %"CONTAB[779]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 779), align 8
  %"CONTAB[781]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 781), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 778, i64 2, {}* %"CONTAB[779]*", {}* %"CONTAB[781]*")
  %"CONTAB[189]*78" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 189), align 8
  %"CONTAB[670]*79" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 670), align 16
  %"CONTAB[773]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 773), align 8
  %"CONTAB[778]*" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 778), align 16
  %"CONTAB[155]*80" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 155), align 8
  %"CONTAB[672]*81" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 672), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 772, i64 6, {}* %"CONTAB[189]*78", {}* %"CONTAB[670]*79", {}* %"CONTAB[773]*", {}* %"CONTAB[778]*", {}* %"CONTAB[155]*80", {}* %"CONTAB[672]*81")
  %"CONTAB[692]*82" = load {}*, {}** getelementptr inbounds ([784 x {}*], [784 x {}*]* @CONTAB4236, i64 0, i64 692), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 783, i64 1, {}* %"CONTAB[692]*82")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"klh=funktionen.lisp^253^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-klh=funktionen.lisp^253^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.53() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !119 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.51)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.52)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.54() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !120 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.50)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.53)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.55() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !121 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.47)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.54)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.56() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !122 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.42)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.55)
  ret void
}

; Function Attrs: nounwind
declare void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }*, {}**, i64, {}*) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @CLASP-CTOR() #0 personality i32 (...)* @__gxx_personality_v0 {
entry:
  tail call void @cc_register_startup_function(void ()* nonnull @RUN-ALL)
  ret void
}

declare void @cc_register_startup_function(void ()*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @cc_error_too_few_arguments(i64, i64, %0*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @cc_error_too_many_arguments(i64, i64, %0*) local_unnamed_addr #6

attributes #0 = { uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #1 = { nounwind "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #2 = { ssp uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #3 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #4 = { nounwind readnone speculatable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #5 = { nounwind uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn }

!llvm.ident = !{!0, !1}
!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5, !6, !7, !8}

!0 = !{!"Clasp"}
!1 = !{!"clang version 5.0.1 (tags/RELEASE_501/final)"}
!2 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !3, producer: "clasp Common Lisp compiler", isOptimized: false, flags: "-v", runtimeVersion: 1, splitDebugFilename: "the-split-name.log", emissionKind: LineTablesOnly, enums: !4)
!3 = !DIFile(filename: "klh=funktionen.lisp", directory: "/Users/karstenpoeck/lisp/coke/program")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"PIC Level", i32 2}
!9 = distinct !DISubprogram(name: "RUN-ALL", linkageName: "RUN-ALL", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed_fixed)
!13 = distinct !DISubprogram(name: "klh=funktionen.lisp^1^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^1^TOP-COMPILE-FILE", scope: !3, file: !3, line: 1, type: !10, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !2, variables: !4)
!14 = !{!15, !19, i64 16}
!15 = !{!"_ZTS13__va_list_tag", !16, i64 0, !16, i64 4, !19, i64 8, !19, i64 16}
!16 = !{!"int", !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C++ TBAA"}
!19 = !{!"any pointer", !17, i64 0}
!20 = !{!15, !16, i64 0}
!21 = !{!22, !22, i64 0}
!22 = !{!"long", !17, i64 0}
!23 = distinct !DISubprogram(name: "KLH=MIN-LISTE^COMMON-LISP-USER^FN^^", linkageName: "KLH=MIN-LISTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 1, type: !10, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !2, variables: !4)
!24 = distinct !DISubprogram(name: "klh=funktionen.lisp^48^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^48^TOP-COMPILE-FILE", scope: !3, file: !3, line: 48, type: !10, isLocal: false, isDefinition: true, scopeLine: 48, isOptimized: false, unit: !2, variables: !4)
!25 = distinct !DISubprogram(name: "KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^", linkageName: "KLH-IN-LISTE-DESTRUKTIV-EINFUEGEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 48, type: !10, isLocal: false, isDefinition: true, scopeLine: 48, isOptimized: false, unit: !2, variables: !4)
!26 = distinct !DISubprogram(name: "klh=funktionen.lisp^58^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^58^TOP-COMPILE-FILE", scope: !3, file: !3, line: 58, type: !10, isLocal: false, isDefinition: true, scopeLine: 58, isOptimized: false, unit: !2, variables: !4)
!27 = distinct !DISubprogram(name: "KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^", linkageName: "KLH=MULTIPLE-GC-SOFORT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 58, type: !10, isLocal: false, isDefinition: true, scopeLine: 58, isOptimized: false, unit: !2, variables: !4)
!28 = distinct !DISubprogram(name: "klh=funktionen.lisp^66^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^66^TOP-COMPILE-FILE", scope: !3, file: !3, line: 66, type: !10, isLocal: false, isDefinition: true, scopeLine: 66, isOptimized: false, unit: !2, variables: !4)
!29 = distinct !DISubprogram(name: "KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^", linkageName: "KLH=FENSTERSTREAM-ERZEUGEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 66, type: !10, isLocal: false, isDefinition: true, scopeLine: 66, isOptimized: false, unit: !2, variables: !4)
!30 = distinct !DISubprogram(name: "klh=funktionen.lisp^73^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^73^TOP-COMPILE-FILE", scope: !3, file: !3, line: 73, type: !10, isLocal: false, isDefinition: true, scopeLine: 73, isOptimized: false, unit: !2, variables: !4)
!31 = distinct !DISubprogram(name: "KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^", linkageName: "KLH-PARAMETERLISTE-TRANSFORMIEREN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 73, type: !10, isLocal: false, isDefinition: true, scopeLine: 73, isOptimized: false, unit: !2, variables: !4)
!32 = !{!33, !19, i64 0}
!33 = !{!"_ZTSN7gctools9smart_ptrIN4core3T_OEEE", !19, i64 0}
!34 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 73, type: !10, isLocal: false, isDefinition: true, scopeLine: 73, isOptimized: false, unit: !2, variables: !4)
!35 = distinct !DISubprogram(name: "klh=funktionen.lisp^92^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^92^TOP-COMPILE-FILE", scope: !3, file: !3, line: 92, type: !10, isLocal: false, isDefinition: true, scopeLine: 92, isOptimized: false, unit: !2, variables: !4)
!36 = distinct !DISubprogram(name: "KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^", linkageName: "KLH=FENSTERSTREAM-NACH-OBEN-GEHEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 92, type: !10, isLocal: false, isDefinition: true, scopeLine: 92, isOptimized: false, unit: !2, variables: !4)
!37 = distinct !DISubprogram(name: "klh=funktionen.lisp^107^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^107^TOP-COMPILE-FILE", scope: !3, file: !3, line: 107, type: !10, isLocal: false, isDefinition: true, scopeLine: 107, isOptimized: false, unit: !2, variables: !4)
!38 = distinct !DISubprogram(name: "KLH=MACH_ATOM^COMMON-LISP-USER^FN^^", linkageName: "KLH=MACH_ATOM^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 107, type: !10, isLocal: false, isDefinition: true, scopeLine: 107, isOptimized: false, unit: !2, variables: !4)
!39 = distinct !DISubprogram(name: "klh=funktionen.lisp^112^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^112^TOP-COMPILE-FILE", scope: !3, file: !3, line: 112, type: !10, isLocal: false, isDefinition: true, scopeLine: 112, isOptimized: false, unit: !2, variables: !4)
!40 = distinct !DISubprogram(name: "KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^", linkageName: "KLH=MACH_SYMBOL^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 112, type: !10, isLocal: false, isDefinition: true, scopeLine: 112, isOptimized: false, unit: !2, variables: !4)
!41 = distinct !DISubprogram(name: "klh=funktionen.lisp^123^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^123^TOP-COMPILE-FILE", scope: !3, file: !3, line: 123, type: !10, isLocal: false, isDefinition: true, scopeLine: 123, isOptimized: false, unit: !2, variables: !4)
!42 = distinct !DISubprogram(name: "KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^", linkageName: "KLH=WAS_NACH_STRING^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 123, type: !10, isLocal: false, isDefinition: true, scopeLine: 123, isOptimized: false, unit: !2, variables: !4)
!43 = distinct !DISubprogram(name: "klh=funktionen.lisp^127^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^127^TOP-COMPILE-FILE", scope: !3, file: !3, line: 127, type: !10, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !2, variables: !4)
!44 = distinct !DISubprogram(name: "KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^", linkageName: "KLH=AUSGABE_AUF_DATEI^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 127, type: !10, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !2, variables: !4)
!45 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 127, type: !10, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !2, variables: !4)
!46 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 127, type: !10, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !2, variables: !4)
!47 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 127, type: !10, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !2, variables: !4)
!48 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 127, type: !10, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !2, variables: !4)
!49 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 127, type: !10, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !2, variables: !4)
!50 = distinct !DISubprogram(name: "klh=funktionen.lisp^147^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^147^TOP-COMPILE-FILE", scope: !3, file: !3, line: 147, type: !10, isLocal: false, isDefinition: true, scopeLine: 147, isOptimized: false, unit: !2, variables: !4)
!51 = distinct !DISubprogram(name: "KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^", linkageName: "KLH=SPIEGEL_ARRAY^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 147, type: !10, isLocal: false, isDefinition: true, scopeLine: 147, isOptimized: false, unit: !2, variables: !4)
!52 = distinct !DISubprogram(name: "klh=funktionen.lisp^159^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^159^TOP-COMPILE-FILE", scope: !3, file: !3, line: 159, type: !10, isLocal: false, isDefinition: true, scopeLine: 159, isOptimized: false, unit: !2, variables: !4)
!53 = distinct !DISubprogram(name: "KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^", linkageName: "KLH=STRING_KUERZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 159, type: !10, isLocal: false, isDefinition: true, scopeLine: 159, isOptimized: false, unit: !2, variables: !4)
!54 = distinct !DISubprogram(name: "klh=funktionen.lisp^174^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^174^TOP-COMPILE-FILE", scope: !3, file: !3, line: 174, type: !10, isLocal: false, isDefinition: true, scopeLine: 174, isOptimized: false, unit: !2, variables: !4)
!55 = distinct !DISubprogram(name: "KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^", linkageName: "KLH=WAS_NACH_KURZEN_STRING^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 174, type: !10, isLocal: false, isDefinition: true, scopeLine: 174, isOptimized: false, unit: !2, variables: !4)
!56 = distinct !DISubprogram(name: "klh=funktionen.lisp^180^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^180^TOP-COMPILE-FILE", scope: !3, file: !3, line: 180, type: !10, isLocal: false, isDefinition: true, scopeLine: 180, isOptimized: false, unit: !2, variables: !4)
!57 = distinct !DISubprogram(name: "KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^", linkageName: "KLH=MACHE-ZENTRIERT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 180, type: !10, isLocal: false, isDefinition: true, scopeLine: 180, isOptimized: false, unit: !2, variables: !4)
!58 = distinct !DISubprogram(name: "klh=funktionen.lisp^198^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^198^TOP-COMPILE-FILE", scope: !3, file: !3, line: 198, type: !10, isLocal: false, isDefinition: true, scopeLine: 198, isOptimized: false, unit: !2, variables: !4)
!59 = distinct !DISubprogram(name: "KLH=FORMAT^COMMON-LISP-USER^FN^^", linkageName: "KLH=FORMAT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 198, type: !10, isLocal: false, isDefinition: true, scopeLine: 198, isOptimized: false, unit: !2, variables: !4)
!60 = distinct !DISubprogram(name: "klh=funktionen.lisp^203^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^203^TOP-COMPILE-FILE", scope: !3, file: !3, line: 203, type: !10, isLocal: false, isDefinition: true, scopeLine: 203, isOptimized: false, unit: !2, variables: !4)
!61 = distinct !DISubprogram(name: "KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^", linkageName: "KLH=FORMAT_LISTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 203, type: !10, isLocal: false, isDefinition: true, scopeLine: 203, isOptimized: false, unit: !2, variables: !4)
!62 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 203, type: !10, isLocal: false, isDefinition: true, scopeLine: 203, isOptimized: false, unit: !2, variables: !4)
!63 = distinct !DISubprogram(name: "klh=funktionen.lisp^213^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^213^TOP-COMPILE-FILE", scope: !3, file: !3, line: 213, type: !10, isLocal: false, isDefinition: true, scopeLine: 213, isOptimized: false, unit: !2, variables: !4)
!64 = distinct !DISubprogram(name: "KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^", linkageName: "KLH=FUELLE_AUF^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 213, type: !10, isLocal: false, isDefinition: true, scopeLine: 213, isOptimized: false, unit: !2, variables: !4)
!65 = distinct !DISubprogram(name: "klh=funktionen.lisp^222^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^222^TOP-COMPILE-FILE", scope: !3, file: !3, line: 222, type: !10, isLocal: false, isDefinition: true, scopeLine: 222, isOptimized: false, unit: !2, variables: !4)
!66 = distinct !DISubprogram(name: "KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^", linkageName: "KLH=KREUZ_PRODUKT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 222, type: !10, isLocal: false, isDefinition: true, scopeLine: 222, isOptimized: false, unit: !2, variables: !4)
!67 = distinct !DISubprogram(name: "klh=funktionen.lisp^232^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^232^TOP-COMPILE-FILE", scope: !3, file: !3, line: 232, type: !10, isLocal: false, isDefinition: true, scopeLine: 232, isOptimized: false, unit: !2, variables: !4)
!68 = distinct !DISubprogram(name: "KLH=N-FILTER^COMMON-LISP-USER^FN^^", linkageName: "KLH=N-FILTER^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 232, type: !10, isLocal: false, isDefinition: true, scopeLine: 232, isOptimized: false, unit: !2, variables: !4)
!69 = distinct !DISubprogram(name: "klh=funktionen.lisp^245^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^245^TOP-COMPILE-FILE", scope: !3, file: !3, line: 245, type: !10, isLocal: false, isDefinition: true, scopeLine: 245, isOptimized: false, unit: !2, variables: !4)
!70 = distinct !DISubprogram(name: "KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^", linkageName: "KLH=LESE_LISP_AUS_STRING^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 245, type: !10, isLocal: false, isDefinition: true, scopeLine: 245, isOptimized: false, unit: !2, variables: !4)
!71 = distinct !DISubprogram(name: "klh=funktionen.lisp^253^TOP-COMPILE-FILE", linkageName: "klh=funktionen.lisp^253^TOP-COMPILE-FILE", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!72 = distinct !DISubprogram(name: "KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", linkageName: "KLH=TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!73 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!74 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!75 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!76 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!77 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!78 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!79 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!80 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!81 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!82 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!83 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!84 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!85 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!86 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!87 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!88 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!89 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!90 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!91 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!92 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!93 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!94 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!95 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!96 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!97 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!98 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!99 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!100 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!101 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 253, type: !10, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !2, variables: !4)
!102 = distinct !DISubprogram(name: "RUN-ALL.36", linkageName: "RUN-ALL.36", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!103 = distinct !DISubprogram(name: "RUN-ALL.37", linkageName: "RUN-ALL.37", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!104 = distinct !DISubprogram(name: "RUN-ALL.38", linkageName: "RUN-ALL.38", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!105 = distinct !DISubprogram(name: "RUN-ALL.39", linkageName: "RUN-ALL.39", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!106 = distinct !DISubprogram(name: "RUN-ALL.40", linkageName: "RUN-ALL.40", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!107 = distinct !DISubprogram(name: "RUN-ALL.41", linkageName: "RUN-ALL.41", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!108 = distinct !DISubprogram(name: "RUN-ALL.42", linkageName: "RUN-ALL.42", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!109 = distinct !DISubprogram(name: "RUN-ALL.43", linkageName: "RUN-ALL.43", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!110 = distinct !DISubprogram(name: "RUN-ALL.44", linkageName: "RUN-ALL.44", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!111 = distinct !DISubprogram(name: "RUN-ALL.45", linkageName: "RUN-ALL.45", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!112 = distinct !DISubprogram(name: "RUN-ALL.46", linkageName: "RUN-ALL.46", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!113 = distinct !DISubprogram(name: "RUN-ALL.47", linkageName: "RUN-ALL.47", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!114 = distinct !DISubprogram(name: "RUN-ALL.48", linkageName: "RUN-ALL.48", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!115 = distinct !DISubprogram(name: "RUN-ALL.49", linkageName: "RUN-ALL.49", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!116 = distinct !DISubprogram(name: "RUN-ALL.50", linkageName: "RUN-ALL.50", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!117 = distinct !DISubprogram(name: "RUN-ALL.51", linkageName: "RUN-ALL.51", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!118 = distinct !DISubprogram(name: "RUN-ALL.52", linkageName: "RUN-ALL.52", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!119 = distinct !DISubprogram(name: "RUN-ALL.53", linkageName: "RUN-ALL.53", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!120 = distinct !DISubprogram(name: "RUN-ALL.54", linkageName: "RUN-ALL.54", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!121 = distinct !DISubprogram(name: "RUN-ALL.55", linkageName: "RUN-ALL.55", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!122 = distinct !DISubprogram(name: "RUN-ALL.56", linkageName: "RUN-ALL.56", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
