; ModuleID = '/Users/karstenpoeck/lisp/coke/helpers/n-queens-scheduling.lisp'
source_filename = "/Users/karstenpoeck/lisp/coke/helpers/n-queens-scheduling.lisp"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

%0 = type { i8*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }
%1 = type { %2, %0*, %"class.gctools::smart_ptr", i32, %"class.gctools::GCArray_moveable.7" }
%2 = type { %"class.core::Closure_O", %"class.gctools::smart_ptr", %3, i64, i64, i64, i64 }
%3 = type { %4* }
%4 = type { %"class.core::General_O", %"class.gctools::smart_ptr.1", %5, %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", i64, i8, i8, %"class.gctools::smart_ptr" }
%5 = type { %"class.core::T_O" }
%"class.core::Closure_O" = type { %"class.core::NamedFunction_O" }
%"class.core::NamedFunction_O" = type { %"class.core::Function_O", %"class.gctools::smart_ptr" }
%"class.core::Function_O" = type { %"class.core::General_O", %"struct.std::__1::atomic" }
%"class.core::General_O" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { { %"class.core::T_O"*, i64 } (%"class.core::T_O"*, i64, %"class.core::T_O"*, %"class.core::T_O"*, %"class.core::T_O"*, %"class.core::T_O"*, ...)* }
%"class.core::T_O" = type { i8 }
%"class.gctools::smart_ptr.1" = type { %"class.core::SimpleString_O"* }
%"class.core::SimpleString_O" = type { %"class.core::AbstractSimpleVector_O" }
%"class.core::AbstractSimpleVector_O" = type { %"class.core::Array_O" }
%"class.core::Array_O" = type { %"class.core::General_O", [0 x i64] }
%"class.gctools::smart_ptr" = type { %"class.core::T_O"* }
%"class.gctools::GCArray_moveable.7" = type { i64, [0 x %"class.gctools::smart_ptr"] }

@":::global-str-/Users/karstenpoeck/lisp/coke/helpers/n-queens-scheduling.lisp" = private unnamed_addr constant [63 x i8] c"/Users/karstenpoeck/lisp/coke/helpers/n-queens-scheduling.lisp\00"
@source-file-info-handle = internal global i32 -1
@constants-table = internal global { i8*, i8*, i64 } undef
@"n-queens-scheduling.lisp^1^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^1^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^1^TOP-COMPILE-FILE" = private unnamed_addr constant [44 x i8] c"n-queens-scheduling.lisp^1^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^40^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^40^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 37, i64 53, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^40^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^40^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^54^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^54^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^54^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^54^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^56^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^56^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 72, i64 78, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^56^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^56^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^62^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^62^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 82, i64 86, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^62^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^62^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^65^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^65^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 90, i64 96, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^65^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^65^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^68^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^68^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 99, i64 103, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^68^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^68^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^71^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^71^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=ERZEUGE-RUECKVERZEIGERUNG^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=ERZEUGE-RUECKVERZEIGERUNG^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 133, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^71^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^71^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^76^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^76^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=VORZUORDNUNG-STARTEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=VORZUORDNUNG-STARTEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 171, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^76^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^76^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^98^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^98^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 186, i64 190, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^98^TOP-COMPILE-FILE" = private unnamed_addr constant [45 x i8] c"n-queens-scheduling.lisp^98^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^117^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^117^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 204, i64 225, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^117^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^117^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^153^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^153^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DAMENTEST^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DAMENTEST^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 296, i64 305, i64 10, i64 0, i64 1, i64 0 }
@":::global-str-LAMBDA^COMMON-LISP^FN^^" = private unnamed_addr constant [24 x i8] c"LAMBDA^COMMON-LISP^FN^^\00"
@"LAMBDA^COMMON-LISP^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 307, i64 309, i64 10, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.1^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.1", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 307, i64 321, i64 10, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.2^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.2", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 307, i64 322, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^153^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^153^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^170^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^170^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=FEIND_KONSISTENZCHECK^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=FEIND_KONSISTENZCHECK^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 346, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^170^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^170^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^184^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^184^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=ERGEBNIS-KONSISTENZCHECK^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=ERGEBNIS-KONSISTENZCHECK^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 352, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^184^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^184^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^192^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^192^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^192^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^192^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^193^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE.3^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE.3", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=VOR_MINIMUM_IN_AGENDA_SUCHEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=VOR_MINIMUM_IN_AGENDA_SUCHEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 369, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^193^TOP-COMPILE-FILE.3" = private unnamed_addr constant [48 x i8] c"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE.3\00"
@"n-queens-scheduling.lisp^207^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^207^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND-ZEIGE_DISLIKE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND-ZEIGE_DISLIKE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 363, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^207^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^207^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^213^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^213^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND-ZEIGE_FEINDE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND-ZEIGE_FEINDE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 377, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^213^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^213^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^219^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^219^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND-ZEIGE_DAMEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND-ZEIGE_DAMEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 381, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^219^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^219^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^225^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^225^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND-ZEIGE_OMEGA^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND-ZEIGE_OMEGA^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 365, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^225^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^225^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^230^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^230^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=BERECHNE_DISLIKE_DER_ZEILEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=BERECHNE_DISLIKE_DER_ZEILEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 361, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^230^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^230^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^236^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^236^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 393, i64 399, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^236^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^236^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^239^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^239^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 405, i64 409, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^239^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^239^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^245^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^245^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=AKTUALISIERE_ALLE_DOMAINS^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=AKTUALISIERE_ALLE_DOMAINS^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 357, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^245^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^245^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^251^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^251^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND-ZEIGE_DOMAIN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND-ZEIGE_DOMAIN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 359, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^251^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^251^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^254^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^254^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 419, i64 425, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^254^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^254^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^259^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^259^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 402, i64 431, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^259^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^259^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^272^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^272^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 433, i64 437, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^272^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^272^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^275^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^275^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 441, i64 445, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^275^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^275^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^287^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^287^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 449, i64 453, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^287^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^287^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^290^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^290^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 474, i64 484, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^290^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^290^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^298^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^298^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 388, i64 566, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^298^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^298^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^393^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^393^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 556, i64 572, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^393^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^393^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^398^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^398^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 554, i64 586, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^398^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^398^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^421^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^421^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=VOR_SUCHEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=VOR_SUCHEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 588, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^421^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^421^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^426^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^426^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 384, i64 596, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^426^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^426^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^440^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^440^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 598, i64 602, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^440^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^440^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^444^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^444^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=AUSGABE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=AUSGABE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 604, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^444^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^444^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^480^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^480^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 615, i64 627, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^480^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^480^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^555^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^555^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 634, i64 638, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^555^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^555^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^578^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^578^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 642, i64 648, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^578^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^578^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^595^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^595^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 652, i64 658, i64 10, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.4^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.4", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 307, i64 659, i64 10, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.5^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.5", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 307, i64 660, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^595^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^595^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^605^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^605^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 338, i64 666, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^605^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^605^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^609^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^609^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 668, i64 677, i64 676, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^609^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^609^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^617^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^617^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 679, i64 683, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^617^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^617^TOP-COMPILE-FILE\00"
@"n-queens-scheduling.lisp^620^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"n-queens-scheduling.lisp^620^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 8, i64 10, i64 10, i64 0, i64 1, i64 0 }
@"ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 685, i64 689, i64 10, i64 0, i64 1, i64 0 }
@"str-n-queens-scheduling.lisp^620^TOP-COMPILE-FILE" = private unnamed_addr constant [46 x i8] c"n-queens-scheduling.lisp^620^TOP-COMPILE-FILE\00"
@"str-*MAKE-SPECIAL" = private unnamed_addr constant [14 x i8] c"*MAKE-SPECIAL\00"
@str-CORE = private unnamed_addr constant [5 x i8] c"CORE\00"
@"str-*ND_ANZAHL_DER_DAMEN*" = private unnamed_addr constant [22 x i8] c"*ND_ANZAHL_DER_DAMEN*\00"
@str-COMMON-LISP-USER = private unnamed_addr constant [17 x i8] c"COMMON-LISP-USER\00"
@str-TOP-LEVEL = private unnamed_addr constant [10 x i8] c"TOP-LEVEL\00"
@"str-B=KONKATENIERE-NACH-ATOM" = private unnamed_addr constant [25 x i8] c"B=KONKATENIERE-NACH-ATOM\00"
@str-Zeile_ = private unnamed_addr constant [7 x i8] c"Zeile_\00"
@str-FDEFINITION = private unnamed_addr constant [12 x i8] c"FDEFINITION\00"
@str-COMMON-LISP = private unnamed_addr constant [12 x i8] c"COMMON-LISP\00"
@str-FUNCTION = private unnamed_addr constant [9 x i8] c"FUNCTION\00"
@str-SYMBOL = private unnamed_addr constant [7 x i8] c"SYMBOL\00"
@str-SYMBOL-FUNCTION = private unnamed_addr constant [16 x i8] c"SYMBOL-FUNCTION\00"
@str-ERROR = private unnamed_addr constant [6 x i8] c"ERROR\00"
@str-TYPE-ERROR = private unnamed_addr constant [11 x i8] c"TYPE-ERROR\00"
@str-DATUM = private unnamed_addr constant [6 x i8] c"DATUM\00"
@str-KEYWORD = private unnamed_addr constant [8 x i8] c"KEYWORD\00"
@str-EXPECTED-TYPE = private unnamed_addr constant [14 x i8] c"EXPECTED-TYPE\00"
@str-OR = private unnamed_addr constant [3 x i8] c"OR\00"
@"str-ND=ZEILE_AUS_INDEX" = private unnamed_addr constant [19 x i8] c"ND=ZEILE_AUS_INDEX\00"
@str-SETF-LAMBDA-LIST = private unnamed_addr constant [17 x i8] c"SETF-LAMBDA-LIST\00"
@str-INDEX = private unnamed_addr constant [6 x i8] c"INDEX\00"
@str-SET-SOURCE-INFO = private unnamed_addr constant [16 x i8] c"SET-SOURCE-INFO\00"
@str-CURRENT-SOURCE-FILE = private unnamed_addr constant [20 x i8] c"CURRENT-SOURCE-FILE\00"
@"str-*CURRENT-FORM-LINENO*" = private unnamed_addr constant [22 x i8] c"*CURRENT-FORM-LINENO*\00"
@str-COMPILER = private unnamed_addr constant [9 x i8] c"COMPILER\00"
@str-ND_ABBILDUNGSHASHTABELLE = private unnamed_addr constant [25 x i8] c"ND_ABBILDUNGSHASHTABELLE\00"
@str-BOUNDP = private unnamed_addr constant [7 x i8] c"BOUNDP\00"
@str-HASH-TABLE-P = private unnamed_addr constant [13 x i8] c"HASH-TABLE-P\00"
@str-CLRHASH = private unnamed_addr constant [8 x i8] c"CLRHASH\00"
@str-MAKE-HASH-TABLE = private unnamed_addr constant [16 x i8] c"MAKE-HASH-TABLE\00"
@str-TEST = private unnamed_addr constant [5 x i8] c"TEST\00"
@str-EQUAL = private unnamed_addr constant [6 x i8] c"EQUAL\00"
@str-SIZE = private unnamed_addr constant [5 x i8] c"SIZE\00"
@"str-ND=HASPTABELLEERZEUGEN/RUECKSETZEN" = private unnamed_addr constant [35 x i8] c"ND=HASPTABELLEERZEUGEN/RUECKSETZEN\00"
@str-ANZAHL = private unnamed_addr constant [7 x i8] c"ANZAHL\00"
@str-GETHASH = private unnamed_addr constant [8 x i8] c"GETHASH\00"
@"str-ND=DAME_AUS_INDEX_SCHNELL" = private unnamed_addr constant [26 x i8] c"ND=DAME_AUS_INDEX_SCHNELL\00"
@str-HASH-TABLE-SETF-GETHASH = private unnamed_addr constant [24 x i8] c"HASH-TABLE-SETF-GETHASH\00"
@"str-ND=DAMEN-UND-INDEX-EINTRAGEN" = private unnamed_addr constant [29 x i8] c"ND=DAMEN-UND-INDEX-EINTRAGEN\00"
@str-DAME = private unnamed_addr constant [5 x i8] c"DAME\00"
@str-dame_ = private unnamed_addr constant [6 x i8] c"dame_\00"
@"str-ND=DAME_AUS_INDEX" = private unnamed_addr constant [18 x i8] c"ND=DAME_AUS_INDEX\00"
@"str-YAS=ALLE" = private unnamed_addr constant [9 x i8] c"YAS=ALLE\00"
@str-DAMEN = private unnamed_addr constant [6 x i8] c"DAMEN\00"
@str-CONS = private unnamed_addr constant [5 x i8] c"CONS\00"
@str-VECTOR = private unnamed_addr constant [7 x i8] c"VECTOR\00"
@str-NULL = private unnamed_addr constant [5 x i8] c"NULL\00"
@str-ETYPECASE-ERROR = private unnamed_addr constant [16 x i8] c"ETYPECASE-ERROR\00"
@str-LIST = private unnamed_addr constant [5 x i8] c"LIST\00"
@str-FIXNUM = private unnamed_addr constant [7 x i8] c"FIXNUM\00"
@str-SINGLE-FLOAT = private unnamed_addr constant [13 x i8] c"SINGLE-FLOAT\00"
@str-DOUBLE-FLOAT = private unnamed_addr constant [13 x i8] c"DOUBLE-FLOAT\00"
@str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM = private unnamed_addr constant [34 x i8] c"CONVERT-OVERFLOW-RESULT-TO-BIGNUM\00"
@"str-TWO-ARG-+" = private unnamed_addr constant [10 x i8] c"TWO-ARG-+\00"
@"str-YAS=LESE_WERT" = private unnamed_addr constant [14 x i8] c"YAS=LESE_WERT\00"
@"str-ND=ERZEUGE-RUECKVERZEIGERUNG" = private unnamed_addr constant [29 x i8] c"ND=ERZEUGE-RUECKVERZEIGERUNG\00"
@str-ARRAY-RANK = private unnamed_addr constant [11 x i8] c"ARRAY-RANK\00"
@str-ZEILEN = private unnamed_addr constant [7 x i8] c"ZEILEN\00"
@"str-YAS=SCHREIBE_WERT" = private unnamed_addr constant [18 x i8] c"YAS=SCHREIBE_WERT\00"
@str-AKTUELLES_DISLIKE = private unnamed_addr constant [18 x i8] c"AKTUELLES_DISLIKE\00"
@str-ARRAY-INDEX = private unnamed_addr constant [12 x i8] c"ARRAY-INDEX\00"
@str-EXT = private unnamed_addr constant [4 x i8] c"EXT\00"
@str-MAKE-SIMPLE-MDARRAY-T = private unnamed_addr constant [22 x i8] c"MAKE-SIMPLE-MDARRAY-T\00"
@str-MAKE-SIMPLE-VECTOR-T = private unnamed_addr constant [21 x i8] c"MAKE-SIMPLE-VECTOR-T\00"
@str-INFORMANT = private unnamed_addr constant [10 x i8] c"INFORMANT\00"
@str-EINGABE = private unnamed_addr constant [8 x i8] c"EINGABE\00"
@str-AKTUELLE_FEINDE = private unnamed_addr constant [16 x i8] c"AKTUELLE_FEINDE\00"
@str-ALLE_ANDEREN_ZEILEN = private unnamed_addr constant [20 x i8] c"ALLE_ANDEREN_ZEILEN\00"
@str-REMOVE = private unnamed_addr constant [7 x i8] c"REMOVE\00"
@"str-ND=VORZUORDNUNG-STARTEN" = private unnamed_addr constant [24 x i8] c"ND=VORZUORDNUNG-STARTEN\00"
@"str->=" = private unnamed_addr constant [3 x i8] c">=\00"
@"str-<=" = private unnamed_addr constant [3 x i8] c"<=\00"
@"str-YAS=LOESCHE_ALLE_KINDER" = private unnamed_addr constant [24 x i8] c"YAS=LOESCHE_ALLE_KINDER\00"
@"str-YAS=NEUE_INSTANZ" = private unnamed_addr constant [17 x i8] c"YAS=NEUE_INSTANZ\00"
@"str-TWO-ARG-<" = private unnamed_addr constant [10 x i8] c"TWO-ARG-<\00"
@"str-ND=OBJEKTE-ERZEUGEN" = private unnamed_addr constant [20 x i8] c"ND=OBJEKTE-ERZEUGEN\00"
@str-IHRE_DAME = private unnamed_addr constant [10 x i8] c"IHRE_DAME\00"
@str-EQ-INCOMPARABLE = private unnamed_addr constant [16 x i8] c"EQ-INCOMPARABLE\00"
@str-CLASP-CLEAVIR = private unnamed_addr constant [14 x i8] c"CLASP-CLEAVIR\00"
@str-EQL-UNDERLYING = private unnamed_addr constant [15 x i8] c"EQL-UNDERLYING\00"
@str-ABS = private unnamed_addr constant [4 x i8] c"ABS\00"
@str-TWO-ARG-- = private unnamed_addr constant [10 x i8] c"TWO-ARG--\00"
@"str-ND=ERZEUGE_STOER_DAMEN_VALUES" = private unnamed_addr constant [30 x i8] c"ND=ERZEUGE_STOER_DAMEN_VALUES\00"
@str-STOERZEILE = private unnamed_addr constant [11 x i8] c"STOERZEILE\00"
@str-MEINE_ZEILE = private unnamed_addr constant [12 x i8] c"MEINE_ZEILE\00"
@"str-&OPTIONAL" = private unnamed_addr constant [10 x i8] c"&OPTIONAL\00"
@str-STOERDAME = private unnamed_addr constant [10 x i8] c"STOERDAME\00"
@"str-$?" = private unnamed_addr constant [3 x i8] c"$?\00"
@str-QUOTE = private unnamed_addr constant [6 x i8] c"QUOTE\00"
@str-NUMBER = private unnamed_addr constant [7 x i8] c"NUMBER\00"
@str-Damentest = private unnamed_addr constant [10 x i8] c"Damentest\00"
@"str-KLH=MULTIPLE-GC-SOFORT" = private unnamed_addr constant [23 x i8] c"KLH=MULTIPLE-GC-SOFORT\00"
@str-ROOM = private unnamed_addr constant [5 x i8] c"ROOM\00"
@str-FORMAT-ERROR = private unnamed_addr constant [13 x i8] c"FORMAT-ERROR\00"
@str-COMPLAINT = private unnamed_addr constant [10 x i8] c"COMPLAINT\00"
@"str-Required argument missing" = private unnamed_addr constant [26 x i8] c"Required argument missing\00"
@str-CONTROL-STRING = private unnamed_addr constant [15 x i8] c"CONTROL-STRING\00"
@"str-Bei ~A Damen ;;;;;" = private unnamed_addr constant [19 x i8] c"Bei ~A Damen ;;;;;\00"
@str-OFFSET = private unnamed_addr constant [7 x i8] c"OFFSET\00"
@str-WRITE-STRING = private unnamed_addr constant [13 x i8] c"WRITE-STRING\00"
@"str-Bei " = private unnamed_addr constant [5 x i8] c"Bei \00"
@str-PRINC = private unnamed_addr constant [6 x i8] c"PRINC\00"
@"str- Damen ;;;;;" = private unnamed_addr constant [13 x i8] c" Damen ;;;;;\00"
@str-STRINGP = private unnamed_addr constant [8 x i8] c"STRINGP\00"
@str-MAKE-STRING-OUTPUT-STREAM-FROM-STRING = private unnamed_addr constant [38 x i8] c"MAKE-STRING-OUTPUT-STREAM-FROM-STRING\00"
@str-MAKE-STRING-OUTPUT-STREAM = private unnamed_addr constant [26 x i8] c"MAKE-STRING-OUTPUT-STREAM\00"
@str-GET-OUTPUT-STREAM-STRING = private unnamed_addr constant [25 x i8] c"GET-OUTPUT-STREAM-STRING\00"
@"str-*STANDARD-OUTPUT*" = private unnamed_addr constant [18 x i8] c"*STANDARD-OUTPUT*\00"
@"str-PRO=STARTE_ALGORITHMUS" = private unnamed_addr constant [23 x i8] c"PRO=STARTE_ALGORITHMUS\00"
@"str-PRO=CONSTRAINLISTE_HERSTELLEN" = private unnamed_addr constant [30 x i8] c"PRO=CONSTRAINLISTE_HERSTELLEN\00"
@str-PRINT = private unnamed_addr constant [6 x i8] c"PRINT\00"
@str-BACKQUOTE-APPEND = private unnamed_addr constant [17 x i8] c"BACKQUOTE-APPEND\00"
@str-VERSAGT = private unnamed_addr constant [8 x i8] c"VERSAGT\00"
@str-BEI = private unnamed_addr constant [4 x i8] c"BEI\00"
@str-TERPRI = private unnamed_addr constant [7 x i8] c"TERPRI\00"
@"str-~20A --> ~a~%" = private unnamed_addr constant [14 x i8] c"~20A --> ~a~%\00"
@str-FORMAT-PRINC = private unnamed_addr constant [13 x i8] c"FORMAT-PRINC\00"
@"str- --> " = private unnamed_addr constant [6 x i8] c" --> \00"
@"str-CWR=SPEICHERE_FALL" = private unnamed_addr constant [19 x i8] c"CWR=SPEICHERE_FALL\00"
@"str-B=KONKATENIERE-NACH-STRING" = private unnamed_addr constant [27 x i8] c"B=KONKATENIERE-NACH-STRING\00"
@"str-Faelle;Damenfaelle-" = private unnamed_addr constant [20 x i8] c"Faelle;Damenfaelle-\00"
@"str-ND=DAMENTEST" = private unnamed_addr constant [13 x i8] c"ND=DAMENTEST\00"
@str-DISTANZ = private unnamed_addr constant [8 x i8] c"DISTANZ\00"
@str-RECHNER = private unnamed_addr constant [8 x i8] c"RECHNER\00"
@str-LAMBDA = private unnamed_addr constant [7 x i8] c"LAMBDA\00"
@str-STREAM = private unnamed_addr constant [7 x i8] c"STREAM\00"
@str-FORMAT-ARG-233456 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-233456\00"
@"str-&REST" = private unnamed_addr constant [6 x i8] c"&REST\00"
@str-ARGS = private unnamed_addr constant [5 x i8] c"ARGS\00"
@str-FORMAT-ARG-233493 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-233493\00"
@str-FORMAT-ARG-233494 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-233494\00"
@str-SIMPLE-VECTOR = private unnamed_addr constant [14 x i8] c"SIMPLE-VECTOR\00"
@"str-TWO-ARG-<=" = private unnamed_addr constant [11 x i8] c"TWO-ARG-<=\00"
@"str-Invalid index ~d for vector of length ~d" = private unnamed_addr constant [41 x i8] c"Invalid index ~d for vector of length ~d\00"
@"str-ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN" = private unnamed_addr constant [36 x i8] c"ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN\00"
@"str-B=MENGEN-GLEICH-P" = private unnamed_addr constant [18 x i8] c"B=MENGEN-GLEICH-P\00"
@str-BREAK = private unnamed_addr constant [6 x i8] c"BREAK\00"
@"str-zeile ~A spalte ~A gespeichert ~A errechnet ~A" = private unnamed_addr constant [47 x i8] c"zeile ~A spalte ~A gespeichert ~A errechnet ~A\00"
@"str-ND=FEIND_KONSISTENZCHECK" = private unnamed_addr constant [25 x i8] c"ND=FEIND_KONSISTENZCHECK\00"
@str-FEHLER = private unnamed_addr constant [7 x i8] c"FEHLER\00"
@"str-ND=ERGEBNIS-KONSISTENZCHECK" = private unnamed_addr constant [28 x i8] c"ND=ERGEBNIS-KONSISTENZCHECK\00"
@str-ND_DEBUG = private unnamed_addr constant [9 x i8] c"ND_DEBUG\00"
@"str-ND=AKTUALISIERE_ALLE_DOMAINS" = private unnamed_addr constant [29 x i8] c"ND=AKTUALISIERE_ALLE_DOMAINS\00"
@str-ND-ZEIGE_DOMAIN = private unnamed_addr constant [16 x i8] c"ND-ZEIGE_DOMAIN\00"
@"str-ND=BERECHNE_DISLIKE_DER_ZEILEN" = private unnamed_addr constant [31 x i8] c"ND=BERECHNE_DISLIKE_DER_ZEILEN\00"
@str-ND-ZEIGE_DISLIKE = private unnamed_addr constant [17 x i8] c"ND-ZEIGE_DISLIKE\00"
@str-ND-ZEIGE_OMEGA = private unnamed_addr constant [15 x i8] c"ND-ZEIGE_OMEGA\00"
@"str-eine Iteration" = private unnamed_addr constant [15 x i8] c"eine Iteration\00"
@"str-ND=VOR_MINIMUM_IN_AGENDA_SUCHEN" = private unnamed_addr constant [32 x i8] c"ND=VOR_MINIMUM_IN_AGENDA_SUCHEN\00"
@str-AKTUELLES_FEINDE = private unnamed_addr constant [17 x i8] c"AKTUELLES_FEINDE\00"
@str-ND-ZEIGE_FEINDE = private unnamed_addr constant [16 x i8] c"ND-ZEIGE_FEINDE\00"
@str-ND-ZEIGE_DAMEN = private unnamed_addr constant [15 x i8] c"ND-ZEIGE_DAMEN\00"
@"str-ND=BERECHNE_OMEGA" = private unnamed_addr constant [18 x i8] c"ND=BERECHNE_OMEGA\00"
@"str-ND=BERECHNE_DISLIKE_EINER_ZEILE" = private unnamed_addr constant [32 x i8] c"ND=BERECHNE_DISLIKE_EINER_ZEILE\00"
@"str-ND=DRINGLICHKEIT_IJCAI" = private unnamed_addr constant [23 x i8] c"ND=DRINGLICHKEIT_IJCAI\00"
@str-PAAR = private unnamed_addr constant [5 x i8] c"PAAR\00"
@str-NEGATE = private unnamed_addr constant [7 x i8] c"NEGATE\00"
@"str-ND=LAENGE_DES_AKTUELLEN_DOMAINS" = private unnamed_addr constant [32 x i8] c"ND=LAENGE_DES_AKTUELLEN_DOMAINS\00"
@"str-ND=DOMAIN-DRINGLICHKEIT" = private unnamed_addr constant [24 x i8] c"ND=DOMAIN-DRINGLICHKEIT\00"
@str-LAENGE_DOMAIN = private unnamed_addr constant [14 x i8] c"LAENGE_DOMAIN\00"
@str-PROGRAMM = private unnamed_addr constant [9 x i8] c"PROGRAMM\00"
@"str-ND=DAME_IM_DOMAIN_ENTHALTEN_P" = private unnamed_addr constant [30 x i8] c"ND=DAME_IM_DOMAIN_ENTHALTEN_P\00"
@str-ZEILE = private unnamed_addr constant [6 x i8] c"ZEILE\00"
@"str-ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL" = private unnamed_addr constant [40 x i8] c"ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL\00"
@"str-ND=AKTUELLES_DOMAIN_LEER_P" = private unnamed_addr constant [27 x i8] c"ND=AKTUELLES_DOMAIN_LEER_P\00"
@"str-TWO-ARG-=" = private unnamed_addr constant [10 x i8] c"TWO-ARG-=\00"
@"str-ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL" = private unnamed_addr constant [35 x i8] c"ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL\00"
@str-DM-TOO-FEW-ARGUMENTS = private unnamed_addr constant [21 x i8] c"DM-TOO-FEW-ARGUMENTS\00"
@str-DM-TOO-MANY-ARGUMENTS = private unnamed_addr constant [22 x i8] c"DM-TOO-MANY-ARGUMENTS\00"
@str-GENSYM = private unnamed_addr constant [7 x i8] c"GENSYM\00"
@str-DAMENINDEX- = private unnamed_addr constant [12 x i8] c"DAMENINDEX-\00"
@str-DOTIMES = private unnamed_addr constant [8 x i8] c"DOTIMES\00"
@str-LENGTH = private unnamed_addr constant [7 x i8] c"LENGTH\00"
@str-WHEN = private unnamed_addr constant [5 x i8] c"WHEN\00"
@str-SVREF = private unnamed_addr constant [6 x i8] c"SVREF\00"
@str-LET = private unnamed_addr constant [4 x i8] c"LET\00"
@str-MACRO-FUNCTION = private unnamed_addr constant [15 x i8] c"MACRO-FUNCTION\00"
@"str-ND=MIT-DAMEN-MEINES-DOMAINS" = private unnamed_addr constant [28 x i8] c"ND=MIT-DAMEN-MEINES-DOMAINS\00"
@str-DAMENBEZEICHNER = private unnamed_addr constant [16 x i8] c"DAMENBEZEICHNER\00"
@"str-&BODY" = private unnamed_addr constant [6 x i8] c"&BODY\00"
@str-BODY = private unnamed_addr constant [5 x i8] c"BODY\00"
@str-G236240 = private unnamed_addr constant [8 x i8] c"G236240\00"
@str-G236239 = private unnamed_addr constant [8 x i8] c"G236239\00"
@"str-&AUX" = private unnamed_addr constant [5 x i8] c"&AUX\00"
@str-G236241 = private unnamed_addr constant [8 x i8] c"G236241\00"
@str-CDR = private unnamed_addr constant [4 x i8] c"CDR\00"
@str-THE = private unnamed_addr constant [4 x i8] c"THE\00"
@str-G236242 = private unnamed_addr constant [8 x i8] c"G236242\00"
@str-PROGN = private unnamed_addr constant [6 x i8] c"PROGN\00"
@str-IF = private unnamed_addr constant [3 x i8] c"IF\00"
@str-PROG1 = private unnamed_addr constant [6 x i8] c"PROG1\00"
@str-CAR = private unnamed_addr constant [4 x i8] c"CAR\00"
@str-SETQ = private unnamed_addr constant [5 x i8] c"SETQ\00"
@str-G236243 = private unnamed_addr constant [8 x i8] c"G236243\00"
@"str-ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES" = private unnamed_addr constant [38 x i8] c"ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES\00"
@"str-ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P" = private unnamed_addr constant [36 x i8] c"ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P\00"
@"str-TWO-ARG-/" = private unnamed_addr constant [10 x i8] c"TWO-ARG-/\00"
@"str-TWO-ARG-*" = private unnamed_addr constant [10 x i8] c"TWO-ARG-*\00"
@str-DAMENINDEX = private unnamed_addr constant [11 x i8] c"DAMENINDEX\00"
@"str-TWO-ARG->=" = private unnamed_addr constant [11 x i8] c"TWO-ARG->=\00"
@str-STOERINDEX = private unnamed_addr constant [11 x i8] c"STOERINDEX\00"
@str-MEINE_ZEILE_INDEX = private unnamed_addr constant [18 x i8] c"MEINE_ZEILE_INDEX\00"
@str-STOERDAMEN-INDEX = private unnamed_addr constant [17 x i8] c"STOERDAMEN-INDEX\00"
@str-MAXIMUM = private unnamed_addr constant [8 x i8] c"MAXIMUM\00"
@"str-ND=VOR_SUCHEN" = private unnamed_addr constant [14 x i8] c"ND=VOR_SUCHEN\00"
@"str-ND=DAMEN_SCHLUESSEL" = private unnamed_addr constant [20 x i8] c"ND=DAMEN_SCHLUESSEL\00"
@"str-ND=AUSGABE" = private unnamed_addr constant [11 x i8] c"ND=AUSGABE\00"
@str-PROPAGIERT = private unnamed_addr constant [11 x i8] c"PROPAGIERT\00"
@str-SICHERN = private unnamed_addr constant [8 x i8] c"SICHERN\00"
@"str-ND=PARAMETER_BEKANNT" = private unnamed_addr constant [21 x i8] c"ND=PARAMETER_BEKANNT\00"
@str-ICH = private unnamed_addr constant [4 x i8] c"ICH\00"
@str-VON_WEM = private unnamed_addr constant [8 x i8] c"VON_WEM\00"
@str-WAS = private unnamed_addr constant [4 x i8] c"WAS\00"
@str-WERT = private unnamed_addr constant [5 x i8] c"WERT\00"
@str-DELETE = private unnamed_addr constant [7 x i8] c"DELETE\00"
@"str-ND=PARAMETER_UNBEKANNT" = private unnamed_addr constant [23 x i8] c"ND=PARAMETER_UNBEKANNT\00"
@str-NEQ = private unnamed_addr constant [4 x i8] c"NEQ\00"
@"str-ND=STOER_DIAGNONAL_DAMEN" = private unnamed_addr constant [25 x i8] c"ND=STOER_DIAGNONAL_DAMEN\00"
@str-SPALTE = private unnamed_addr constant [7 x i8] c"SPALTE\00"
@str-REMOVE-IF-NOT = private unnamed_addr constant [14 x i8] c"REMOVE-IF-NOT\00"
@"str-ND=ZEILEN_MIT_DAME_IN_SPALTE" = private unnamed_addr constant [29 x i8] c"ND=ZEILEN_MIT_DAME_IN_SPALTE\00"
@str-AUSSER_ZEILE = private unnamed_addr constant [13 x i8] c"AUSSER_ZEILE\00"
@str-UNION = private unnamed_addr constant [6 x i8] c"UNION\00"
@"str-ND=SUCHE_FEIND_ZEILEN" = private unnamed_addr constant [22 x i8] c"ND=SUCHE_FEIND_ZEILEN\00"
@str-AUSGANGSZEILE = private unnamed_addr constant [14 x i8] c"AUSGANGSZEILE\00"
@str-SET-DOCUMENTATION = private unnamed_addr constant [18 x i8] c"SET-DOCUMENTATION\00"
@"str-In zeile ist eine Dame, die in einem Constraint vorkommt,\0D\0A   suche alle zeilen mit Dame, die diese Dame Schlagen koennen" = private unnamed_addr constant [122 x i8] c"In zeile ist eine Dame, die in einem Constraint vorkommt,\0D\0A   suche alle zeilen mit Dame, die diese Dame Schlagen koennen\00"
@"str-ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN" = private unnamed_addr constant [39 x i8] c"ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN\00"
@"str-ND=SUCHE-START-DAMEN" = private unnamed_addr constant [21 x i8] c"ND=SUCHE-START-DAMEN\00"
@CONTAB4906 = internal global [690 x {}*] undef
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 3, void ()* @CLASP-CTOR, i8* null }]

; Function Attrs: uwtable
define internal void @RUN-ALL() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !9 {
entry:
  tail call void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }* nonnull @constants-table, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 0), i64 690, {}* null)
  tail call void @ltvc_assign_source_file_info_handle(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/helpers/n-queens-scheduling.lisp", i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/helpers/n-queens-scheduling.lisp", i64 0, i64 0), i64 0, i32 1, i32* nonnull @source-file-info-handle)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.24)
  ret void
}

; Function Attrs: nounwind
declare i32 @__gxx_personality_v0(...) #1

; Function Attrs: nounwind
declare void @ltvc_assign_source_file_info_handle(i8*, i8*, i64, i32, i32*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^1^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !13 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^1^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 0), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 4), align 16
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 1, {}* %14, {}* null, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 4), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %17 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %18 = insertvalue { {}*, i64 } %17, i64 1, 1
  ret { {}*, i64 } %18
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #1

; Function Attrs: nounwind
declare void @cc_pop_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @cc_push_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*, { i32, i32, i8*, i8* }*, i64) local_unnamed_addr #1

declare {}* @cc_safe_fdefinition({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^40^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !23 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^40^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G232368.0 = phi {}* [ %18, %header-check-br ], [ %G232368.1, %normal-dest63 ], [ %G232368.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 37), align 8
  %ptrtoint22 = ptrtoint {}* %G232368.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G232368.0, i64 2, {}* %"closure->ND=ZEILE_AUS_INDEX", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest56, %tag3, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 37), align 8
  %"closure->ND=ZEILE_AUS_INDEX" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1641, i64 40, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 41), align 8
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->ND=ZEILE_AUS_INDEX", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 46), align 16
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->ND=ZEILE_AUS_INDEX", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 204 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 37), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 34), align 16
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232368.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag2

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232368.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !24 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 11), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 13), align 8
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %14, {}* %farg0, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

declare {}* @cc_enclose({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) local_unnamed_addr #3

declare {}* @cc_safe_setfdefinition({}*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_setSymbolValue({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^54^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !25 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^54^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest23
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  call void @cc_setSymbolValue({}* %11, {}* %24)
  br label %tag3

tag3:                                             ; preds = %normal-dest23, %tag
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14

cleanup-lpad:                                     ; preds = %10, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 0), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 56), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  %ptrtoint17 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %21, i64 1, {}* %22, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt33 = extractvalue { {}*, i64 } %23, 0
  %.elt35 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt35, 0
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %object.0 = select i1 %cond, {}* %24, {}* %.elt33
  %25 = icmp eq {}* %object.0, %24
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232395.0 = select i1 %25, {}* %.val, {}* %24
  %26 = icmp eq {}* %G232395.0, %24
  br i1 %26, label %tag3, label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^56^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !26 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^56^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G232424.0 = phi {}* [ %18, %header-check-br ], [ %G232424.1, %normal-dest17 ], [ %G232424.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 72), align 16
  %ptrtoint34 = ptrtoint {}* %G232424.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G232424.0, i64 2, {}* %"closure->ND=HASPTABELLEERZEUGEN/RUECKSETZEN", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag2, %normal-dest21, %tag1, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 72), align 16
  %"closure->ND=HASPTABELLEERZEUGEN/RUECKSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2140, i64 56, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232424.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

normal-dest21:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 71), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232424.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag2

normal-dest40:                                    ; preds = %tag2
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 74), align 16
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->ND=HASPTABELLEERZEUGEN/RUECKSETZEN", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 77), align 8
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->ND=HASPTABELLEERZEUGEN/RUECKSETZEN", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 224 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 72), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !27 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc61 unwind label %cleanup-lpad

.noexc61:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 61), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest14 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest16, %normal-dest10
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 63), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest29 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest31, %normal-dest29, %tag1, %normal-dest16, %normal-dest14, %tag, %normal-dest7, %normal-dest6, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 59), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  %19 = invoke {}* @cc_safe_symbol_value({}* %18)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest6
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %19, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt49 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt49, 0
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232456.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = icmp eq {}* %G232456.0, %21
  br i1 %22, label %tag1, label %tag

normal-dest14:                                    ; preds = %tag
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  %24 = invoke {}* @cc_safe_symbol_value({}* %23)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest14
  %ptrtoint17 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %12, i64 1, {}* %24, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %tag1
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 65), align 8
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 67), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest29
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 69), align 8
  %ptrtoint32 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %14, i64 4, {}* %26, {}* %28, {}* %29, {}* %farg0)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest31
  %.elt55 = extractvalue { {}*, i64 } %30, 0
  %.elt57 = extractvalue { {}*, i64 } %30, 1
  %cond47 = icmp eq i64 %.elt57, 0
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232408.0 = select i1 %cond47, {}* %31, {}* %.elt55
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  call void @cc_setSymbolValue({}* %32, {}* %G232408.0)
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %G232408.0, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34
}

declare {}* @cc_safe_symbol_value({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^62^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !28 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^62^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G232479.0 = phi {}* [ %18, %header-check-br ], [ %G232479.1, %normal-dest17 ], [ %G232479.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 82), align 16
  %ptrtoint43 = ptrtoint {}* %G232479.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G232479.0, i64 2, {}* %"closure->ND=DAME_AUS_INDEX_SCHNELL", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 82), align 16
  %"closure->ND=DAME_AUS_INDEX_SCHNELL" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2369, i64 62, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 81), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232479.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232479.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 84), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=DAME_AUS_INDEX_SCHNELL", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 85), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=DAME_AUS_INDEX_SCHNELL", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 248 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 82), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !29 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc15 unwind label %cleanup-lpad

.noexc15:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 79), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  %15 = invoke {}* @cc_safe_symbol_value({}* %14)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %15, {}* null, {}* null)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest6
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %16
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^65^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !30 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^65^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G232524.0 = phi {}* [ %18, %header-check-br ], [ %G232524.1, %normal-dest54 ], [ %G232524.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 90), align 16
  %ptrtoint13 = ptrtoint {}* %G232524.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G232524.0, i64 2, {}* %"closure->ND=DAMEN-UND-INDEX-EINTRAGEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag3, %normal-dest47, %maybe-more-tests81, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 90), align 16
  %"closure->ND=DAMEN-UND-INDEX-EINTRAGEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2458, i64 65, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 92), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND=DAMEN-UND-INDEX-EINTRAGEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 95), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND=DAMEN-UND-INDEX-EINTRAGEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 260 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 90), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests81
  %ptrtoint48 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232524.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag

normal-dest60:                                    ; preds = %tag3
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 89), align 8
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232524.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag3

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest47 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !31 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc19 unwind label %cleanup-lpad

.noexc19:                                         ; preds = %13
  unreachable

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest10, %normal-dest5, %normal-dest
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %11
  %15 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 54), align 16
  %16 = invoke {}* @cc_safe_symbol_value({}* %15)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 87), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %18 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %18, i64 3, {}* %16, {}* %farg0, {}* %farg1, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %19
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^68^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !32 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^68^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G232566.0 = phi {}* [ %18, %header-check-br ], [ %G232566.1, %normal-dest26 ], [ %G232566.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 99), align 8
  %ptrtoint29 = ptrtoint {}* %G232566.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G232566.0, i64 2, {}* %"closure->ND=DAME_AUS_INDEX", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 99), align 8
  %"closure->ND=DAME_AUS_INDEX" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2567, i64 68, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232566.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 101), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->ND=DAME_AUS_INDEX", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 102), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->ND=DAME_AUS_INDEX", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 272 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 99), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 98), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232566.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !33 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 11), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 97), align 8
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %14, {}* %farg0, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^71^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !34 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^71^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G232607.0 = phi {}* [ %18, %header-check-br ], [ %G232607.1, %normal-dest54 ], [ %G232607.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 133), align 8
  %ptrtoint13 = ptrtoint {}* %G232607.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G232607.0, i64 2, {}* %"closure->ND=ERZEUGE-RUECKVERZEIGERUNG", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 133), align 8
  %"closure->ND=ERZEUGE-RUECKVERZEIGERUNG" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=ERZEUGE-RUECKVERZEIGERUNG^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERZEUGE-RUECKVERZEIGERUNG^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2648, i64 71, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND=ERZEUGE-RUECKVERZEIGERUNG", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 135), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND=ERZEUGE-RUECKVERZEIGERUNG", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 284 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 133), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 132), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232607.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232607.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=ERZEUGE-RUECKVERZEIGERUNG^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !35 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERZEUGE-RUECKVERZEIGERUNG^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %tag19
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest82 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag1:                                             ; preds = %normal-dest78
  %test = icmp eq i64 %tag-only329, 1
  br i1 %test, label %header-check-br, label %tag64

tag6:                                             ; preds = %tag36
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag46.outer:                                      ; preds = %tag46.outer.backedge, %tag46.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag46.outer.preheader ], [ %LENGTH.0.ph.be, %tag46.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in, %tag46.outer.preheader ], [ %G2095854.0, %tag46.outer.backedge ]
  %15 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only257330 = and i64 %15, 7
  %consp-test258 = icmp eq i64 %tag-only257330, 3
  %16 = add i64 %15, 5
  %17 = inttoptr i64 %16 to {}**
  br label %tag46

tag9:                                             ; preds = %tag28, %tag18.backedge, %normal-dest199
  %18 = phi {}* [ %106, %normal-dest199 ], [ %24, %tag18.backedge ], [ %39, %tag28 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %19 = insertvalue { {}*, i64 } undef, {}* %18, 0
  %20 = insertvalue { {}*, i64 } %19, i64 1, 1
  ret { {}*, i64 } %20

tag12:                                            ; preds = %normal-dest284
  %21 = add i64 %59, 5
  %22 = inttoptr i64 %21 to {}**
  %23 = load {}*, {}** %22, align 8
  %.pre426 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag18.backedge

tag18.backedge:                                   ; preds = %tag12, %normal-dest130
  %24 = phi {}* [ %.pre426, %tag12 ], [ %87, %normal-dest130 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %23, %tag12 ], [ %"%DOLIST-VAR.1", %normal-dest130 ]
  %25 = icmp eq {}* %"%DOLIST-VAR.0.be", %24
  br i1 %25, label %tag9, label %tag59

tag15:                                            ; preds = %tag28
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit

tag19:                                            ; preds = %tag67
  %28 = icmp eq {}* %G2095854.0, %.val405
  %G232695.0 = select i1 %28, {}* %.val402, {}* %.val405
  %29 = icmp eq {}* %G232695.0, %.val405
  br i1 %29, label %tag, label %tag24

tag20:                                            ; preds = %tag29
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag22:                                            ; preds = %tag59
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest152 unwind label %cleanup-lpad.loopexit

tag24:                                            ; preds = %tag19, %normal-dest113, %tag36, %tag49
  %G232677.0 = phi {}* [ %55, %tag49 ], [ null, %tag36 ], [ %G232677.1, %normal-dest113 ], [ %LENGTH.0.ph, %tag19 ]
  %ptrtoint180 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint181 = add i64 %ptrtoint180, 7
  %entry-point-addr182 = inttoptr i64 %entry-point-addr-uint181 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point183 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr182, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point183({}* %66, i64 1, {}* %G232677.0, {}* null, {}* null, {}* null)
          to label %normal-dest186 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag25:                                            ; preds = %tag59
  %35 = add i64 %59, -3
  %36 = inttoptr i64 %35 to {}**
  %37 = load {}*, {}** %36, align 8
  br label %tag55

tag27:                                            ; preds = %header-check-br, %normal-dest239, %tag64
  %.val411 = phi {}* [ %.pre, %tag64 ], [ %111, %normal-dest239 ], [ %71, %header-check-br ]
  %G232687.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag64 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %normal-dest239 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br ]
  %G232687.0 = load {}*, {}** %G232687.0.in, align 16
  %38 = icmp eq {}* %G232687.0, %.val411
  br i1 %38, label %tag36, label %tag49

tag28:                                            ; preds = %normal-dest284
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %40 = icmp eq {}* %"%DOLIST-VAR.0421", %39
  %.val408 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232638.0 = select i1 %40, {}* %.val408, {}* %39
  %41 = icmp eq {}* %G232638.0, %39
  br i1 %41, label %tag15, label %tag9

tag29:                                            ; preds = %tag46
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %43 = icmp eq {}* %SEQUENCE.0.ph, %42
  %.val400 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232736.0 = select i1 %43, {}* %.val400, {}* %42
  %44 = icmp eq {}* %G232736.0, %42
  br i1 %44, label %tag20, label %tag67

tag30:                                            ; preds = %tag63
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest216 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag32:                                            ; preds = %tag67
  %47 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only332 = and i64 %47, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only332, 0
  br i1 %fixnump-test, label %tag63, label %tag40

tag36:                                            ; preds = %tag27
  %48 = icmp eq {}* %.in, %.val411
  %.val410 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232683.0 = select i1 %48, {}* %.val410, {}* %.val411
  %49 = icmp eq {}* %G232683.0, %.val411
  br i1 %49, label %tag6, label %tag24

tag40:                                            ; preds = %tag32
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest167 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag46:                                            ; preds = %normal-dest82, %tag46.outer
  br i1 %consp-test258, label %tag52, label %tag29

tag49:                                            ; preds = %tag27
  %52 = add i64 %73, 7
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %"tag fixnum" = shl nuw i64 %54, 2
  %55 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag24

tag52:                                            ; preds = %tag46
  %56 = load {}*, {}** %17, align 8
  %.val403.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag67

tag55:                                            ; preds = %normal-dest160, %tag25
  %DAME.0 = phi {}* [ %37, %tag25 ], [ %DAME.1, %normal-dest160 ]
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 90), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest263 unwind label %cleanup-lpad.loopexit

tag59:                                            ; preds = %tag59.preheader, %tag18.backedge
  %.val407 = phi {}* [ %24, %tag18.backedge ], [ %106, %tag59.preheader ]
  %"%DOLIST-VAR.0421" = phi {}* [ %"%DOLIST-VAR.0.be", %tag18.backedge ], [ %"%DOLIST-VAR.2", %tag59.preheader ]
  %59 = ptrtoint {}* %"%DOLIST-VAR.0421" to i64
  %tag-only297349 = and i64 %59, 7
  %consp-test298 = icmp eq i64 %tag-only297349, 3
  %.val406 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232669.0 = select i1 %consp-test298, {}* %.val406, {}* %.val407
  %60 = icmp eq {}* %G232669.0, %.val407
  br i1 %60, label %tag22, label %tag25

tag63:                                            ; preds = %tag32
  %61 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %47, i64 4)
  %result = extractvalue { i64, i1 } %61, 0
  %overflow = extractvalue { i64, i1 } %61, 1
  %62 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag30, label %tag46.outer.backedge

tag46.outer.backedge:                             ; preds = %tag63, %normal-dest223, %normal-dest174
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.1, %normal-dest174 ], [ %LENGTH.2, %normal-dest223 ], [ %62, %tag63 ]
  br label %tag46.outer

tag64:                                            ; preds = %tag1, %header-check-br299, %normal-dest239
  %.pre = phi {}* [ %71, %tag1 ], [ %71, %header-check-br299 ], [ %111, %normal-dest239 ]
  br label %tag27

tag67:                                            ; preds = %tag29, %normal-dest145, %tag52
  %.val405 = phi {}* [ %.val403.pre, %tag52 ], [ %93, %normal-dest145 ], [ %42, %tag29 ]
  %G2095854.0 = phi {}* [ %56, %tag52 ], [ %G2095854.1, %normal-dest145 ], [ %42, %tag29 ]
  %63 = ptrtoint {}* %G2095854.0 to i64
  %tag-only316331 = and i64 %63, 7
  %consp-test317 = icmp eq i64 %tag-only316331, 3
  %.val402 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232724.0 = select i1 %consp-test317, {}* %.val402, {}* %.val405
  %64 = icmp eq {}* %G232724.0, %.val405
  br i1 %64, label %tag19, label %tag32

cleanup-lpad.loopexit:                            ; preds = %tag15, %normal-dest123, %tag22, %normal-dest152, %tag55, %normal-dest263, %normal-dest265, %normal-dest272
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag, %normal-dest82, %tag20, %normal-dest137
  %lpad.loopexit416 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag40, %normal-dest167, %tag30, %normal-dest216
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %normal-dest232, %maybe-more-tests307, %normal-dest192, %normal-dest186, %tag24, %normal-dest106, %tag6, %normal-dest75, %normal-dest73, %normal-dest
  %lpad.loopexit.split-lp414 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp414, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit416, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 72), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest73:                                    ; preds = %normal-dest
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest75:                                    ; preds = %normal-dest73
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 106), align 16
  %ptrtoint = ptrtoint {}* %68 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %68, i64 1, {}* %69, {}* null, {}* null, {}* null)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest78:                                    ; preds = %normal-dest75
  %.elt = extractvalue { {}*, i64 } %70, 0
  %.elt328 = extractvalue { {}*, i64 } %70, 1
  %cond = icmp eq i64 %.elt328, 0
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %71, {}* %.elt
  %72 = bitcast {}* %.in to i8*
  %73 = ptrtoint {}* %.in to i64
  %tag-only329 = and i64 %73, 7
  %consp-test = icmp eq i64 %tag-only329, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232743.0 = select i1 %consp-test, {}* %.val, {}* %71
  %74 = icmp eq {}* %G232743.0, %71
  br i1 %74, label %tag1, label %tag46.outer.preheader

tag46.outer.preheader:                            ; preds = %normal-dest78
  br label %tag46.outer

normal-dest82:                                    ; preds = %tag
  %75 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 119), align 8
  %ptrtoint83 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %12, i64 2, {}* %G2095854.0, {}* %75, {}* null, {}* null)
          to label %tag46 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

header-check-br:                                  ; preds = %tag1
  %gep = getelementptr inbounds i8, i8* %72, i64 -9
  %irc-bit-cast97 = bitcast i8* %gep to i64*
  %77 = load i64, i64* %irc-bit-cast97, align 8
  %.off = add i64 %77, -1081
  %78 = icmp ult i64 %.off, 69
  br i1 %78, label %tag27, label %header-check-br299

normal-dest106:                                   ; preds = %tag6
  %79 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 116), align 16
  %ptrtoint107 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint108 = add i64 %ptrtoint107, 7
  %entry-point-addr109 = inttoptr i64 %entry-point-addr-uint108 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point110 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr109, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point110({}* %14, i64 2, {}* %.in, {}* %79, {}* null, {}* null)
          to label %normal-dest113 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest113:                                   ; preds = %normal-dest106
  %.elt379 = extractvalue { {}*, i64 } %80, 0
  %.elt381 = extractvalue { {}*, i64 } %80, 1
  %cond325 = icmp eq i64 %.elt381, 0
  %81 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232677.1 = select i1 %cond325, {}* %81, {}* %.elt379
  br label %tag24

normal-dest123:                                   ; preds = %tag15
  %82 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %83 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %84 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %85 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint124 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint125 = add i64 %ptrtoint124, 7
  %entry-point-addr126 = inttoptr i64 %entry-point-addr-uint125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr126, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point127({}* %27, i64 5, {}* %82, {}* %83, {}* %"%DOLIST-VAR.0421", {}* %84, {}* %85)
          to label %normal-dest130 unwind label %cleanup-lpad.loopexit

normal-dest130:                                   ; preds = %normal-dest123
  %.elt360 = extractvalue { {}*, i64 } %86, 0
  %.elt362 = extractvalue { {}*, i64 } %86, 1
  %cond322 = icmp eq i64 %.elt362, 0
  %87 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond322, {}* %87, {}* %.elt360
  br label %tag18.backedge

normal-dest137:                                   ; preds = %tag20
  %88 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %90 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %91 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint139 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint140 = add i64 %ptrtoint139, 7
  %entry-point-addr141 = inttoptr i64 %entry-point-addr-uint140 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point142 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr141, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point142({}* %31, i64 5, {}* %88, {}* %89, {}* %SEQUENCE.0.ph, {}* %90, {}* %91)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest145:                                   ; preds = %normal-dest137
  %.elt375 = extractvalue { {}*, i64 } %92, 0
  %.elt377 = extractvalue { {}*, i64 } %92, 1
  %cond324 = icmp eq i64 %.elt377, 0
  %93 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G2095854.1 = select i1 %cond324, {}* %93, {}* %.elt375
  br label %tag67

normal-dest152:                                   ; preds = %tag22
  %94 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %95 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %96 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %97 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint154 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint155 = add i64 %ptrtoint154, 7
  %entry-point-addr156 = inttoptr i64 %entry-point-addr-uint155 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point157 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr156, align 8
  %98 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point157({}* %33, i64 5, {}* %94, {}* %95, {}* %"%DOLIST-VAR.0421", {}* %96, {}* %97)
          to label %normal-dest160 unwind label %cleanup-lpad.loopexit

normal-dest160:                                   ; preds = %normal-dest152
  %.elt364 = extractvalue { {}*, i64 } %98, 0
  %.elt366 = extractvalue { {}*, i64 } %98, 1
  %cond323 = icmp eq i64 %.elt366, 0
  %99 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DAME.1 = select i1 %cond323, {}* %99, {}* %.elt364
  br label %tag55

normal-dest167:                                   ; preds = %tag40
  %ptrtoint168 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint169 = add i64 %ptrtoint168, 7
  %entry-point-addr170 = inttoptr i64 %entry-point-addr-uint169 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point171 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr170, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point171({}* %51, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest174 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest174:                                   ; preds = %normal-dest167
  %.elt334 = extractvalue { {}*, i64 } %100, 0
  %.elt336 = extractvalue { {}*, i64 } %100, 1
  %cond318 = icmp eq i64 %.elt336, 0
  %101 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.1 = select i1 %cond318, {}* %101, {}* %.elt334
  br label %tag46.outer.backedge

normal-dest186:                                   ; preds = %tag24
  %102 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %103 = invoke {}* @cc_safe_fdefinition({}* %102)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest192:                                   ; preds = %normal-dest186
  %104 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 106), align 16
  %ptrtoint193 = ptrtoint {}* %103 to i64
  %entry-point-addr-uint194 = add i64 %ptrtoint193, 7
  %entry-point-addr195 = inttoptr i64 %entry-point-addr-uint194 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point196 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr195, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point196({}* %103, i64 1, {}* %104, {}* null, {}* null, {}* null)
          to label %normal-dest199 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest199:                                   ; preds = %normal-dest192
  %.elt346 = extractvalue { {}*, i64 } %105, 0
  %.elt348 = extractvalue { {}*, i64 } %105, 1
  %cond320 = icmp eq i64 %.elt348, 0
  %106 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond320, {}* %106, {}* %.elt346
  %107 = icmp eq {}* %"%DOLIST-VAR.2", %106
  br i1 %107, label %tag9, label %tag59.preheader

tag59.preheader:                                  ; preds = %normal-dest199
  br label %tag59

normal-dest216:                                   ; preds = %tag30
  %ptrtoint217 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint218 = add i64 %ptrtoint217, 7
  %entry-point-addr219 = inttoptr i64 %entry-point-addr-uint218 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point220 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr219, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point220({}* %46, i64 1, {}* %62, {}* null, {}* null, {}* null)
          to label %normal-dest223 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest223:                                   ; preds = %normal-dest216
  %.elt338 = extractvalue { {}*, i64 } %108, 0
  %.elt340 = extractvalue { {}*, i64 } %108, 1
  %cond319 = icmp eq i64 %.elt340, 0
  %109 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.2 = select i1 %cond319, {}* %109, {}* %.elt338
  br label %tag46.outer.backedge

normal-dest232:                                   ; preds = %maybe-more-tests307
  %ptrtoint233 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint234 = add i64 %ptrtoint233, 7
  %entry-point-addr235 = inttoptr i64 %entry-point-addr-uint234 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point236 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr235, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point236({}* %121, i64 1, {}* nonnull %.in, {}* null, {}* null, {}* null)
          to label %normal-dest239 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest239:                                   ; preds = %normal-dest232
  %.elt383 = extractvalue { {}*, i64 } %110, 0
  %.elt385 = extractvalue { {}*, i64 } %110, 1
  %cond326 = icmp eq i64 %.elt385, 0
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232751.0 = select i1 %cond326, {}* %111, {}* %.elt383
  %112 = icmp eq {}* %G232751.0, inttoptr (i64 4 to {}*)
  br i1 %112, label %tag27, label %tag64

normal-dest263:                                   ; preds = %tag55
  %113 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %114 = invoke {}* @cc_safe_fdefinition({}* %113)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit

normal-dest265:                                   ; preds = %normal-dest263
  %115 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint266 = ptrtoint {}* %114 to i64
  %entry-point-addr-uint267 = add i64 %ptrtoint266, 7
  %entry-point-addr268 = inttoptr i64 %entry-point-addr-uint267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr268, align 8
  %116 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point269({}* %114, i64 2, {}* %DAME.0, {}* %115, {}* null, {}* null)
          to label %normal-dest272 unwind label %cleanup-lpad.loopexit

normal-dest272:                                   ; preds = %normal-dest265
  %.elt351 = extractvalue { {}*, i64 } %116, 0
  %.elt353 = extractvalue { {}*, i64 } %116, 1
  %cond321 = icmp eq i64 %.elt353, 0
  %117 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232646.0 = select i1 %cond321, {}* %117, {}* %.elt351
  %ptrtoint278 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint279 = add i64 %ptrtoint278, 7
  %entry-point-addr280 = inttoptr i64 %entry-point-addr-uint279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr280, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point281({}* %58, i64 2, {}* %G232646.0, {}* %DAME.0, {}* null, {}* null)
          to label %normal-dest284 unwind label %cleanup-lpad.loopexit

normal-dest284:                                   ; preds = %normal-dest272
  br i1 %consp-test298, label %tag12, label %tag28

header-check-br299:                               ; preds = %header-check-br
  %.off412 = add i64 %77, -1153
  %119 = icmp ult i64 %.off412, 149
  br i1 %119, label %maybe-more-tests307, label %tag64

maybe-more-tests307:                              ; preds = %header-check-br299
  %120 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 136), align 16
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest232 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp
}

declare float @from_object_float({}*) local_unnamed_addr #3

declare {}* @to_object_float(float) local_unnamed_addr #3

declare double @from_object_double({}*) local_unnamed_addr #3

declare {}* @to_object_double(double) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^76^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !36 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^76^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G232791.0 = phi {}* [ %18, %header-check-br ], [ %G232791.1, %normal-dest17 ], [ %G232791.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 171), align 8
  %ptrtoint34 = ptrtoint {}* %G232791.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G232791.0, i64 2, {}* %"closure->ND=VORZUORDNUNG-STARTEN", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag3, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 171), align 8
  %"closure->ND=VORZUORDNUNG-STARTEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=VORZUORDNUNG-STARTEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=VORZUORDNUNG-STARTEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2854, i64 76, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232791.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 170), align 16
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232791.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag3

normal-dest40:                                    ; preds = %tag3
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->ND=VORZUORDNUNG-STARTEN", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 173), align 8
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->ND=VORZUORDNUNG-STARTEN", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 304 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 171), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=VORZUORDNUNG-STARTEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !37 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=VORZUORDNUNG-STARTEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %tag60
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 153), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest154 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %tag60
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest171 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %normal-dest519
  %.elt892 = extractvalue { {}*, i64 } %224, 0
  %.elt894 = extractvalue { {}*, i64 } %224, 1
  %cond784 = icmp eq i64 %.elt894, 0
  %15 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233062.0 = select i1 %cond784, {}* %15, {}* %.elt892
  %16 = icmp eq {}* %G233062.0, %15
  %.val1050 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232893.0.pre = select i1 %16, {}* %15, {}* %.val1050
  %17 = icmp eq {}* %G232893.0.pre, %15
  br i1 %17, label %tag85, label %tag16

tag9:                                             ; preds = %tag27
  %18 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only802 = and i64 %18, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only802, 0
  br i1 %fixnump-test, label %tag95, label %tag114

tag10:                                            ; preds = %tag66
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag16:                                            ; preds = %tag8
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 155), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest201 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %header-check-br, %normal-dest389, %tag65, %normal-dest663, %tag140, %tag136
  %.val10221055 = phi {}* [ %256, %tag136 ], [ %107, %header-check-br ], [ %195, %normal-dest389 ], [ %107, %tag65 ], [ %256, %normal-dest663 ], [ %107, %tag140 ]
  %23 = icmp eq {}* %.in931, %.val10221055
  %brmerge991 = or i1 %consp-test413, %23
  %.val1021 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232915.0 = select i1 %brmerge991, {}* %.val1021, {}* %.val10221055
  %24 = icmp eq {}* %G232915.0, %.val10221055
  br i1 %24, label %tag58, label %tag55

tag22:                                            ; preds = %tag65
  %25 = add i64 %ptrtoint467, -3
  %26 = inttoptr i64 %25 to {}**
  %27 = load {}*, {}** %26, align 8
  %ptrtoint214 = ptrtoint {}* %27 to i64
  %tag-only215 = and i64 %ptrtoint214, 7
  %test = icmp eq i64 %tag-only215, 1
  br i1 %test, label %header-check-br, label %tag140

tag27:                                            ; preds = %tag35, %normal-dest325, %tag33
  %.val1006 = phi {}* [ %.val1004.pre, %tag33 ], [ %187, %normal-dest325 ], [ %33, %tag35 ]
  %G2095854.0 = phi {}* [ %32, %tag33 ], [ %G2095854.1, %normal-dest325 ], [ %33, %tag35 ]
  %28 = ptrtoint {}* %G2095854.0 to i64
  %tag-only225801 = and i64 %28, 7
  %consp-test226 = icmp eq i64 %tag-only225801, 3
  %.val1003 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G233028.0 = select i1 %consp-test226, {}* %.val1003, {}* %.val1006
  %29 = icmp eq {}* %G233028.0, %.val1006
  br i1 %29, label %tag115, label %tag9

tag31:                                            ; preds = %normal-dest512
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 176), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest228 unwind label %cleanup-lpad.loopexit

tag33:                                            ; preds = %tag142
  %32 = load {}*, {}** %140, align 8
  %.val1004.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag27

tag34:                                            ; preds = %normal-dest567
  %.old = and i64 %ptrtoint574, 3
  %fixnump-test243.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test243.old, label %tag104, label %tag85

tag35:                                            ; preds = %tag142
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %34 = icmp eq {}* %SEQUENCE.0.ph, %33
  %.val1001 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G233040.0 = select i1 %34, {}* %.val1001, {}* %33
  %35 = icmp eq {}* %G233040.0, %33
  br i1 %35, label %tag50, label %tag27

tag36:                                            ; preds = %normal-dest460
  %.old989 = and i64 %ptrtoint467, 3
  %fixnump-test251.old = icmp eq i64 %.old989, 0
  br i1 %fixnump-test251.old, label %tag126, label %tag72

tag38:                                            ; preds = %normal-dest713
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 176), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest260 unwind label %cleanup-lpad.loopexit

tag43:                                            ; preds = %normal-dest490
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest276 unwind label %cleanup-lpad.loopexit

tag47:                                            ; preds = %tag115
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest290 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag48:                                            ; preds = %tag131
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest303 unwind label %cleanup-lpad.loopexit

tag50:                                            ; preds = %tag35
  %44 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest318 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag51:                                            ; preds = %normal-dest150
  %test334 = icmp eq i64 %tag-only799, 1
  br i1 %test334, label %header-check-br331, label %tag66

tag52:                                            ; preds = %normal-dest641
  %46 = add i64 %71, 5
  %47 = inttoptr i64 %46 to {}**
  %48 = load {}*, {}** %47, align 8
  %.pre1044 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag107.backedge

tag55:                                            ; preds = %tag18
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 153), align 8
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest341 unwind label %cleanup-lpad.loopexit

tag56:                                            ; preds = %normal-dest283, %tag77
  %51 = phi {}* [ %.val1011, %tag77 ], [ %.pre1043, %normal-dest283 ]
  %G232862.0 = phi {}* [ %73, %tag77 ], [ %G232862.1, %normal-dest283 ]
  %ptrtoint354 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint355 = add i64 %ptrtoint354, 7
  %entry-point-addr356 = inttoptr i64 %entry-point-addr-uint355 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point357 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr356, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point357({}* %84, i64 3, {}* %G232862.0, {}* %234, {}* %51, {}* null)
          to label %tag109 unwind label %cleanup-lpad.loopexit

tag57:                                            ; preds = %tag76
  %53 = add i64 %71, -3
  %54 = inttoptr i64 %53 to {}**
  %55 = load {}*, {}** %54, align 8
  br label %tag82

tag58:                                            ; preds = %tag18
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest368 unwind label %cleanup-lpad.loopexit

tag60:                                            ; preds = %header-check-br573, %header-check-br415, %normal-dest235, %tag85, %normal-dest512, %tag130, %tag117
  %consp-test4881057 = phi i1 [ true, %tag117 ], [ true, %header-check-br415 ], [ true, %normal-dest235 ], [ false, %tag85 ], [ true, %normal-dest512 ], [ true, %tag130 ], [ false, %header-check-br573 ]
  %.val10161054 = phi {}* [ %161, %tag117 ], [ %82, %header-check-br415 ], [ %161, %normal-dest235 ], [ %82, %tag85 ], [ %222, %normal-dest512 ], [ %82, %tag130 ], [ %234, %header-check-br573 ]
  %58 = icmp eq {}* %.in, %.val10161054
  %brmerge = or i1 %consp-test4881057, %58
  %.val1015 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232858.0 = select i1 %brmerge, {}* %.val1015, {}* %.val10161054
  %59 = icmp eq {}* %G232858.0, %.val10161054
  br i1 %59, label %tag7, label %tag2

tag61:                                            ; preds = %tag140, %header-check-br
  %60 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 174), align 16
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest382 unwind label %cleanup-lpad.loopexit

tag62:                                            ; preds = %tag115, %normal-dest192, %tag66, %tag135
  %G232760.0 = phi {}* [ %132, %tag135 ], [ null, %tag66 ], [ %G232760.1, %normal-dest192 ], [ %LENGTH.0.ph, %tag115 ]
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %62, {}* %G232760.0)
  %63 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest396 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag65:                                            ; preds = %tag111
  %consp-test413 = icmp eq i64 %tag-only468, 3
  br i1 %consp-test413, label %tag22, label %tag18

tag66:                                            ; preds = %normal-dest747, %tag51, %header-check-br753, %tag96
  %.val1023 = phi {}* [ %.val1024, %tag96 ], [ %.val, %tag51 ], [ %.val, %header-check-br753 ], [ %G232991.0.pre.pre, %normal-dest747 ]
  %.val10241053 = phi {}* [ %.val1024, %tag96 ], [ %145, %tag51 ], [ %145, %header-check-br753 ], [ %270, %normal-dest747 ]
  %65 = icmp eq {}* %.in951, %.val10241053
  %G232987.0 = select i1 %65, {}* %.val1023, {}* %.val10241053
  %66 = icmp eq {}* %G232987.0, %.val10241053
  br i1 %66, label %tag10, label %tag62

tag69:                                            ; preds = %normal-dest430
  %67 = load {}*, {}** %26, align 8
  br label %tag127

tag70:                                            ; preds = %tag85
  %68 = add i64 %ptrtoint574, -3
  %69 = inttoptr i64 %68 to {}**
  %70 = load {}*, {}** %69, align 8
  %ptrtoint416 = ptrtoint {}* %70 to i64
  %tag-only417 = and i64 %ptrtoint416, 7
  %test418 = icmp eq i64 %tag-only417, 1
  br i1 %test418, label %header-check-br415, label %tag130

tag72:                                            ; preds = %header-check-br466, %normal-dest713, %normal-dest267, %tag36
  %.pre = phi {}* [ %210, %header-check-br466 ], [ %267, %normal-dest713 ], [ %164, %normal-dest267 ], [ %210, %tag36 ]
  br label %tag111

tag76:                                            ; preds = %tag76.preheader, %tag107.backedge
  %.val1008 = phi {}* [ %180, %tag107.backedge ], [ %199, %tag76.preheader ]
  %"%DOLIST-VAR.01034" = phi {}* [ %"%DOLIST-VAR.0.be", %tag107.backedge ], [ %"%DOLIST-VAR.2", %tag76.preheader ]
  %71 = ptrtoint {}* %"%DOLIST-VAR.01034" to i64
  %tag-only427815 = and i64 %71, 7
  %consp-test428 = icmp eq i64 %tag-only427815, 3
  %.val1007 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232973.0 = select i1 %consp-test428, {}* %.val1007, {}* %.val1008
  %72 = icmp eq {}* %G232973.0, %.val1008
  br i1 %72, label %tag125, label %tag57

tag77:                                            ; preds = %normal-dest490
  %73 = load {}*, {}** %69, align 8
  br label %tag56

tag78:                                            ; preds = %tag136
  %74 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 155), align 8
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest430 unwind label %cleanup-lpad.loopexit

tag80:                                            ; preds = %tag95
  %76 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest437 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag82:                                            ; preds = %normal-dest699, %tag57
  %ZEILE.0 = phi {}* [ %55, %tag57 ], [ %ZEILE.1, %normal-dest699 ]
  %78 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest451 unwind label %cleanup-lpad.loopexit

tag84:                                            ; preds = %normal-dest430
  %80 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %81 = invoke {}* @cc_safe_fdefinition({}* %80)
          to label %normal-dest474 unwind label %cleanup-lpad.loopexit

tag85:                                            ; preds = %tag34, %normal-dest540, %tag8
  %82 = phi {}* [ %15, %tag8 ], [ %234, %tag34 ], [ %226, %normal-dest540 ]
  %consp-test488 = icmp eq i64 %tag-only575, 3
  br i1 %consp-test488, label %tag70, label %tag60

tag87:                                            ; preds = %tag117
  %83 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 155), align 8
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest490 unwind label %cleanup-lpad.loopexit

tag88:                                            ; preds = %tag131, %tag107.backedge, %normal-dest403
  %85 = phi {}* [ %199, %normal-dest403 ], [ %180, %tag107.backedge ], [ %126, %tag131 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %86 = insertvalue { {}*, i64 } undef, {}* %85, 0
  %87 = insertvalue { {}*, i64 } %86, i64 1, 1
  ret { {}*, i64 } %87

tag95:                                            ; preds = %tag9
  %88 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %18, i64 4)
  %result = extractvalue { i64, i1 } %88, 0
  %overflow = extractvalue { i64, i1 } %88, 1
  %89 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag80, label %tag142.outer.backedge

tag142.outer.backedge:                            ; preds = %tag95, %normal-dest444, %normal-dest677
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest677 ], [ %LENGTH.1, %normal-dest444 ], [ %89, %tag95 ]
  br label %tag142.outer

tag96:                                            ; preds = %normal-dest747, %header-check-br331
  %.val1024 = phi {}* [ %145, %header-check-br331 ], [ %270, %normal-dest747 ]
  %G232991.0 = phi {}* [ %.val, %header-check-br331 ], [ %G232991.0.pre.pre, %normal-dest747 ]
  %90 = icmp eq {}* %G232991.0, %.val1024
  br i1 %90, label %tag66, label %tag135

tag100:                                           ; preds = %tag130, %header-check-br415
  %91 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 174), align 16
  %92 = invoke {}* @cc_safe_fdefinition({}* %91)
          to label %normal-dest505 unwind label %cleanup-lpad.loopexit

tag102:                                           ; preds = %normal-dest540
  %93 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 176), align 16
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest519 unwind label %cleanup-lpad.loopexit

tag104:                                           ; preds = %header-check-br573, %tag34
  %95 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 174), align 16
  %96 = invoke {}* @cc_safe_fdefinition({}* %95)
          to label %normal-dest533 unwind label %cleanup-lpad.loopexit

tag106:                                           ; preds = %normal-dest341, %tag127, %normal-dest581, %normal-dest368
  %.sink999 = phi { {}*, i64 } [ %193, %normal-dest368 ], [ %239, %normal-dest581 ], [ %125, %tag127 ], [ %191, %normal-dest341 ]
  %.elt898 = extractvalue { {}*, i64 } %.sink999, 0
  %.elt900 = extractvalue { {}*, i64 } %.sink999, 1
  %cond785 = icmp eq i64 %.elt900, 0
  %97 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232903.4 = select i1 %cond785, {}* %97, {}* %.elt898
  %98 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %99 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 159), align 8
  %ptrtoint546 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint547 = add i64 %ptrtoint546, 7
  %entry-point-addr548 = inttoptr i64 %entry-point-addr-uint547 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point549 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr548, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point549({}* %79, i64 5, {}* %ZEILE.0, {}* %206, {}* %G232903.4, {}* %98, {}* %99)
          to label %normal-dest552 unwind label %cleanup-lpad.loopexit

tag108:                                           ; preds = %tag111
  %101 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 155), align 8
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest581 unwind label %cleanup-lpad.loopexit

tag109:                                           ; preds = %normal-dest154, %tag56, %normal-dest201, %normal-dest171
  %.sink997 = phi { {}*, i64 } [ %152, %normal-dest171 ], [ %157, %normal-dest201 ], [ %52, %tag56 ], [ %150, %normal-dest154 ]
  %.elt862 = extractvalue { {}*, i64 } %.sink997, 0
  %.elt864 = extractvalue { {}*, i64 } %.sink997, 1
  %cond777 = icmp eq i64 %.elt864, 0
  %103 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232846.4 = select i1 %cond777, {}* %103, {}* %.elt862
  %104 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %105 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 159), align 8
  %ptrtoint594 = ptrtoint {}* %229 to i64
  %entry-point-addr-uint595 = add i64 %ptrtoint594, 7
  %entry-point-addr596 = inttoptr i64 %entry-point-addr-uint595 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point597 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr596, align 8
  %106 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point597({}* %229, i64 5, {}* %ZEILE.0, {}* %230, {}* %G232846.4, {}* %104, {}* %105)
          to label %normal-dest600 unwind label %cleanup-lpad.loopexit

tag111:                                           ; preds = %normal-dest267, %tag72
  %107 = phi {}* [ %.pre, %tag72 ], [ %164, %normal-dest267 ]
  %G232950.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag72 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %normal-dest267 ]
  %G232950.0 = load {}*, {}** %G232950.0.in, align 16
  %108 = icmp eq {}* %G232950.0, %107
  br i1 %108, label %tag65, label %tag108

tag113:                                           ; preds = %normal-dest389
  %109 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 176), align 16
  %110 = invoke {}* @cc_safe_fdefinition({}* %109)
          to label %normal-dest656 unwind label %cleanup-lpad.loopexit

tag114:                                           ; preds = %tag9
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %112 = invoke {}* @cc_safe_fdefinition({}* %111)
          to label %normal-dest670 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag115:                                           ; preds = %tag27
  %113 = icmp eq {}* %G2095854.0, %.val1006
  %G232999.0 = select i1 %113, {}* %.val1003, {}* %.val1006
  %114 = icmp eq {}* %G232999.0, %.val1006
  br i1 %114, label %tag47, label %tag62

tag117:                                           ; preds = %normal-dest235
  %115 = add i64 %ptrtoint574, 5
  %116 = inttoptr i64 %115 to {}**
  %117 = load {}*, {}** %116, align 8
  %118 = icmp eq {}* %117, %161
  %.val1047 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232885.0.pre = select i1 %118, {}* %.val1047, {}* %161
  %119 = icmp eq {}* %G232885.0.pre, %161
  br i1 %119, label %tag60, label %tag87

tag125:                                           ; preds = %tag76
  %120 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest692 unwind label %cleanup-lpad.loopexit

tag126:                                           ; preds = %header-check-br466, %tag36
  %122 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 174), align 16
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest706 unwind label %cleanup-lpad.loopexit

tag127:                                           ; preds = %normal-dest481, %tag69
  %124 = phi {}* [ %.val1018, %tag69 ], [ %219, %normal-dest481 ]
  %G232919.0 = phi {}* [ %67, %tag69 ], [ %G232919.1, %normal-dest481 ]
  %ptrtoint719 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint720 = add i64 %ptrtoint719, 7
  %entry-point-addr721 = inttoptr i64 %entry-point-addr-uint720 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point722 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr721, align 8
  %125 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point722({}* %75, i64 3, {}* %G232919.0, {}* %210, {}* %124, {}* null)
          to label %tag106 unwind label %cleanup-lpad.loopexit

tag130:                                           ; preds = %tag70
  %.old993 = and i64 %ptrtoint416, 3
  %fixnump-test732.old = icmp eq i64 %.old993, 0
  br i1 %fixnump-test732.old, label %tag100, label %tag60

tag131:                                           ; preds = %normal-dest641
  %126 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %127 = icmp eq {}* %"%DOLIST-VAR.01034", %126
  %.val1009 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232822.0 = select i1 %127, {}* %.val1009, {}* %126
  %128 = icmp eq {}* %G232822.0, %126
  br i1 %128, label %tag48, label %tag88

tag135:                                           ; preds = %tag96
  %129 = add i64 %147, 7
  %130 = inttoptr i64 %129 to i64*
  %131 = load i64, i64* %130, align 8
  %"tag fixnum" = shl nuw i64 %131, 2
  %132 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag62

tag136:                                           ; preds = %normal-dest663
  %133 = add i64 %ptrtoint467, 5
  %134 = inttoptr i64 %133 to {}**
  %135 = load {}*, {}** %134, align 8
  %136 = icmp eq {}* %135, %256
  %.val1051 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G232942.0.pre = select i1 %136, {}* %.val1051, {}* %256
  %137 = icmp eq {}* %G232942.0.pre, %256
  br i1 %137, label %tag18, label %tag78

tag140:                                           ; preds = %tag22
  %.old995 = and i64 %ptrtoint214, 3
  %fixnump-test763.old = icmp eq i64 %.old995, 0
  br i1 %fixnump-test763.old, label %tag61, label %tag18

tag142.outer:                                     ; preds = %tag142.outer.backedge, %tag142.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag142.outer.preheader ], [ %LENGTH.0.ph.be, %tag142.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in951, %tag142.outer.preheader ], [ %G2095854.0, %tag142.outer.backedge ]
  %138 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only765800 = and i64 %138, 7
  %consp-test766 = icmp eq i64 %tag-only765800, 3
  %139 = add i64 %138, 5
  %140 = inttoptr i64 %139 to {}**
  br label %tag142

tag142:                                           ; preds = %normal-dest290, %tag142.outer
  br i1 %consp-test766, label %tag33, label %tag35

cleanup-lpad.loopexit:                            ; preds = %tag2, %normal-dest154, %tag7, %normal-dest171, %tag16, %normal-dest201, %tag31, %normal-dest228, %tag38, %normal-dest260, %tag43, %normal-dest276, %tag48, %normal-dest303, %tag55, %normal-dest341, %tag56, %tag58, %normal-dest368, %tag61, %normal-dest382, %tag78, %tag82, %normal-dest451, %normal-dest453, %tag84, %normal-dest474, %tag87, %tag100, %normal-dest505, %tag102, %normal-dest519, %tag104, %normal-dest533, %tag106, %normal-dest552, %normal-dest558, %normal-dest560, %tag108, %normal-dest581, %tag109, %normal-dest600, %normal-dest606, %normal-dest608, %normal-dest610, %normal-dest617, %normal-dest629, %tag113, %normal-dest656, %tag125, %normal-dest692, %tag126, %normal-dest706, %tag127
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag47, %normal-dest290, %tag50, %normal-dest318
  %lpad.loopexit1029 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag80, %normal-dest437, %tag114, %normal-dest670
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %normal-dest740, %maybe-more-tests761, %normal-dest396, %tag62, %normal-dest185, %tag10, %normal-dest147, %normal-dest
  %lpad.loopexit.split-lp1027 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp1027, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit1029, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %141 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %142 = invoke {}* @cc_safe_fdefinition({}* %141)
          to label %normal-dest147 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest147:                                   ; preds = %normal-dest
  %143 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 106), align 16
  %ptrtoint = ptrtoint {}* %142 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %142, i64 1, {}* %143, {}* null, {}* null, {}* null)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest150:                                   ; preds = %normal-dest147
  %.elt = extractvalue { {}*, i64 } %144, 0
  %.elt798 = extractvalue { {}*, i64 } %144, 1
  %cond = icmp eq i64 %.elt798, 0
  %145 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in951 = select i1 %cond, {}* %145, {}* %.elt
  %146 = bitcast {}* %.in951 to i8*
  %147 = ptrtoint {}* %.in951 to i64
  %tag-only799 = and i64 %147, 7
  %consp-test = icmp eq i64 %tag-only799, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G233047.0 = select i1 %consp-test, {}* %.val, {}* %145
  %148 = icmp eq {}* %G233047.0, %145
  br i1 %148, label %tag51, label %tag142.outer.preheader

tag142.outer.preheader:                           ; preds = %normal-dest150
  br label %tag142.outer

normal-dest154:                                   ; preds = %tag2
  %149 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %ptrtoint155 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint156 = add i64 %ptrtoint155, 7
  %entry-point-addr157 = inttoptr i64 %entry-point-addr-uint156 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point158 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr157, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point158({}* %12, i64 3, {}* %.in, {}* %234, {}* %149, {}* null)
          to label %tag109 unwind label %cleanup-lpad.loopexit

normal-dest171:                                   ; preds = %tag7
  %151 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 164), align 16
  %ptrtoint172 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint173 = add i64 %ptrtoint172, 7
  %entry-point-addr174 = inttoptr i64 %entry-point-addr-uint173 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point175 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr174, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point175({}* %14, i64 2, {}* %.in, {}* %151, {}* null, {}* null)
          to label %tag109 unwind label %cleanup-lpad.loopexit

normal-dest185:                                   ; preds = %tag10
  %153 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 138), align 16
  %ptrtoint186 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint187 = add i64 %ptrtoint186, 7
  %entry-point-addr188 = inttoptr i64 %entry-point-addr-uint187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr188, align 8
  %154 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point189({}* %20, i64 2, {}* %.in951, {}* %153, {}* null, {}* null)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest192:                                   ; preds = %normal-dest185
  %.elt948 = extractvalue { {}*, i64 } %154, 0
  %.elt950 = extractvalue { {}*, i64 } %154, 1
  %cond795 = icmp eq i64 %.elt950, 0
  %155 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232760.1 = select i1 %cond795, {}* %155, {}* %.elt948
  br label %tag62

normal-dest201:                                   ; preds = %tag16
  %156 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %ptrtoint202 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint203 = add i64 %ptrtoint202, 7
  %entry-point-addr204 = inttoptr i64 %entry-point-addr-uint203 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point205 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr204, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point205({}* %22, i64 3, {}* %.in, {}* %234, {}* %156, {}* null)
          to label %tag109 unwind label %cleanup-lpad.loopexit

header-check-br:                                  ; preds = %tag22
  %irc-bit-cast216 = bitcast {}* %27 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast216, i64 -9
  %irc-bit-cast217 = bitcast i8* %gep to i64*
  %158 = load i64, i64* %irc-bit-cast217, align 8
  %159 = icmp eq i64 %158, 1349
  %fixnum-tag-only762914 = and i64 %ptrtoint214, 3
  %fixnump-test763 = icmp eq i64 %fixnum-tag-only762914, 0
  %or.cond996 = or i1 %fixnump-test763, %159
  br i1 %or.cond996, label %tag61, label %tag18

normal-dest228:                                   ; preds = %tag31
  %ptrtoint229 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint230 = add i64 %ptrtoint229, 7
  %entry-point-addr231 = inttoptr i64 %entry-point-addr-uint230 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point232 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr231, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point232({}* %31, i64 2, {}* %70, {}* inttoptr (i64 9223372036854775800 to {}*), {}* null, {}* null)
          to label %normal-dest235 unwind label %cleanup-lpad.loopexit

normal-dest235:                                   ; preds = %normal-dest228
  %.elt884 = extractvalue { {}*, i64 } %160, 0
  %.elt886 = extractvalue { {}*, i64 } %160, 1
  %cond782 = icmp eq i64 %.elt886, 0
  %161 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233071.0 = select i1 %cond782, {}* %161, {}* %.elt884
  %162 = icmp eq {}* %G233071.0, %161
  br i1 %162, label %tag60, label %tag117

normal-dest260:                                   ; preds = %tag38
  %ptrtoint261 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint262 = add i64 %ptrtoint261, 7
  %entry-point-addr263 = inttoptr i64 %entry-point-addr-uint262 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point264 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr263, align 8
  %163 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point264({}* %37, i64 2, {}* %.in931, {}* inttoptr (i64 9223372036854775800 to {}*), {}* null, {}* null)
          to label %normal-dest267 unwind label %cleanup-lpad.loopexit

normal-dest267:                                   ; preds = %normal-dest260
  %.elt928 = extractvalue { {}*, i64 } %163, 0
  %.elt930 = extractvalue { {}*, i64 } %163, 1
  %cond792 = icmp eq i64 %.elt930, 0
  %164 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233056.0 = select i1 %cond792, {}* %164, {}* %.elt928
  %165 = icmp eq {}* %G233056.0, %164
  br i1 %165, label %tag72, label %tag111

normal-dest276:                                   ; preds = %tag43
  %166 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %167 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %168 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %169 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint277 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint278 = add i64 %ptrtoint277, 7
  %entry-point-addr279 = inttoptr i64 %entry-point-addr-uint278 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point280 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr279, align 8
  %170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point280({}* %39, i64 5, {}* %166, {}* %167, {}* %.in, {}* %168, {}* %169)
          to label %normal-dest283 unwind label %cleanup-lpad.loopexit

normal-dest283:                                   ; preds = %normal-dest276
  %.elt866 = extractvalue { {}*, i64 } %170, 0
  %.elt868 = extractvalue { {}*, i64 } %170, 1
  %cond778 = icmp eq i64 %.elt868, 0
  %171 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232862.1 = select i1 %cond778, {}* %171, {}* %.elt866
  %.pre1043 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag56

normal-dest290:                                   ; preds = %tag47
  %172 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 139), align 8
  %ptrtoint291 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint292 = add i64 %ptrtoint291, 7
  %entry-point-addr293 = inttoptr i64 %entry-point-addr-uint292 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point294 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr293, align 8
  %173 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point294({}* %41, i64 2, {}* %G2095854.0, {}* %172, {}* null, {}* null)
          to label %tag142 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest303:                                   ; preds = %tag48
  %174 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %175 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %176 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %177 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint305 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint306 = add i64 %ptrtoint305, 7
  %entry-point-addr307 = inttoptr i64 %entry-point-addr-uint306 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point308 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr307, align 8
  %178 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point308({}* %43, i64 5, {}* %174, {}* %175, {}* %"%DOLIST-VAR.01034", {}* %176, {}* %177)
          to label %normal-dest311 unwind label %cleanup-lpad.loopexit

normal-dest311:                                   ; preds = %normal-dest303
  %.elt856 = extractvalue { {}*, i64 } %178, 0
  %.elt858 = extractvalue { {}*, i64 } %178, 1
  %cond776 = icmp eq i64 %.elt858, 0
  %179 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond776, {}* %179, {}* %.elt856
  br label %tag107.backedge

tag107.backedge:                                  ; preds = %normal-dest311, %tag52
  %180 = phi {}* [ %.pre1044, %tag52 ], [ %179, %normal-dest311 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %48, %tag52 ], [ %"%DOLIST-VAR.1", %normal-dest311 ]
  %181 = icmp eq {}* %"%DOLIST-VAR.0.be", %180
  br i1 %181, label %tag88, label %tag76

normal-dest318:                                   ; preds = %tag50
  %182 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %183 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %184 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %185 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint319 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint320 = add i64 %ptrtoint319, 7
  %entry-point-addr321 = inttoptr i64 %entry-point-addr-uint320 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point322 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr321, align 8
  %186 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point322({}* %45, i64 5, {}* %182, {}* %183, {}* %SEQUENCE.0.ph, {}* %184, {}* %185)
          to label %normal-dest325 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest325:                                   ; preds = %normal-dest318
  %.elt944 = extractvalue { {}*, i64 } %186, 0
  %.elt946 = extractvalue { {}*, i64 } %186, 1
  %cond794 = icmp eq i64 %.elt946, 0
  %187 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G2095854.1 = select i1 %cond794, {}* %187, {}* %.elt944
  br label %tag27

header-check-br331:                               ; preds = %tag51
  %gep336 = getelementptr inbounds i8, i8* %146, i64 -9
  %irc-bit-cast337 = bitcast i8* %gep336 to i64*
  %188 = load i64, i64* %irc-bit-cast337, align 8
  %.off = add i64 %188, -1081
  %189 = icmp ult i64 %.off, 69
  br i1 %189, label %tag96, label %header-check-br753

normal-dest341:                                   ; preds = %tag55
  %190 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint342 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint343 = add i64 %ptrtoint342, 7
  %entry-point-addr344 = inttoptr i64 %entry-point-addr-uint343 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point345 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr344, align 8
  %191 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point345({}* %50, i64 3, {}* %.in931, {}* %210, {}* %190, {}* null)
          to label %tag106 unwind label %cleanup-lpad.loopexit

normal-dest368:                                   ; preds = %tag58
  %192 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 151), align 8
  %ptrtoint369 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint370 = add i64 %ptrtoint369, 7
  %entry-point-addr371 = inttoptr i64 %entry-point-addr-uint370 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point372 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr371, align 8
  %193 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point372({}* %57, i64 2, {}* %.in931, {}* %192, {}* null, {}* null)
          to label %tag106 unwind label %cleanup-lpad.loopexit

normal-dest382:                                   ; preds = %tag61
  %ptrtoint383 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint384 = add i64 %ptrtoint383, 7
  %entry-point-addr385 = inttoptr i64 %entry-point-addr-uint384 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point386 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr385, align 8
  %194 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point386({}* %61, i64 2, {}* %27, {}* null, {}* null, {}* null)
          to label %normal-dest389 unwind label %cleanup-lpad.loopexit

normal-dest389:                                   ; preds = %normal-dest382
  %.elt916 = extractvalue { {}*, i64 } %194, 0
  %.elt918 = extractvalue { {}*, i64 } %194, 1
  %cond789 = icmp eq i64 %.elt918, 0
  %195 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233084.0 = select i1 %cond789, {}* %195, {}* %.elt916
  %196 = icmp eq {}* %G233084.0, %195
  br i1 %196, label %tag18, label %tag113

normal-dest396:                                   ; preds = %tag62
  %197 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint397 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint398 = add i64 %ptrtoint397, 7
  %entry-point-addr399 = inttoptr i64 %entry-point-addr-uint398 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point400 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr399, align 8
  %198 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point400({}* %64, i64 1, {}* %197, {}* null, {}* null, {}* null)
          to label %normal-dest403 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest403:                                   ; preds = %normal-dest396
  %.elt812 = extractvalue { {}*, i64 } %198, 0
  %.elt814 = extractvalue { {}*, i64 } %198, 1
  %cond769 = icmp eq i64 %.elt814, 0
  %199 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond769, {}* %199, {}* %.elt812
  %200 = icmp eq {}* %"%DOLIST-VAR.2", %199
  br i1 %200, label %tag88, label %tag76.preheader

tag76.preheader:                                  ; preds = %normal-dest403
  br label %tag76

header-check-br415:                               ; preds = %tag70
  %irc-bit-cast419 = bitcast {}* %70 to i8*
  %gep420 = getelementptr inbounds i8, i8* %irc-bit-cast419, i64 -9
  %irc-bit-cast421 = bitcast i8* %gep420 to i64*
  %201 = load i64, i64* %irc-bit-cast421, align 8
  %202 = icmp eq i64 %201, 1349
  %fixnum-tag-only731878 = and i64 %ptrtoint416, 3
  %fixnump-test732 = icmp eq i64 %fixnum-tag-only731878, 0
  %or.cond994 = or i1 %fixnump-test732, %202
  br i1 %or.cond994, label %tag100, label %tag60

normal-dest430:                                   ; preds = %tag78
  %.val1017 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.val1018 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %203 = icmp eq {}* %.val1017, %.val1018
  br i1 %203, label %tag84, label %tag69

normal-dest437:                                   ; preds = %tag80
  %ptrtoint438 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint439 = add i64 %ptrtoint438, 7
  %entry-point-addr440 = inttoptr i64 %entry-point-addr-uint439 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point441 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr440, align 8
  %204 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point441({}* %77, i64 1, {}* %89, {}* null, {}* null, {}* null)
          to label %normal-dest444 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest444:                                   ; preds = %normal-dest437
  %.elt808 = extractvalue { {}*, i64 } %204, 0
  %.elt810 = extractvalue { {}*, i64 } %204, 1
  %cond768 = icmp eq i64 %.elt810, 0
  %205 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.1 = select i1 %cond768, {}* %205, {}* %.elt808
  br label %tag142.outer.backedge

normal-dest451:                                   ; preds = %tag82
  %206 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 144), align 16
  %207 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %208 = invoke {}* @cc_safe_fdefinition({}* %207)
          to label %normal-dest453 unwind label %cleanup-lpad.loopexit

normal-dest453:                                   ; preds = %normal-dest451
  %ptrtoint454 = ptrtoint {}* %208 to i64
  %entry-point-addr-uint455 = add i64 %ptrtoint454, 7
  %entry-point-addr456 = inttoptr i64 %entry-point-addr-uint455 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point457 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr456, align 8
  %209 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point457({}* %208, i64 1, {}* %G232760.0, {}* null, {}* null, {}* null)
          to label %normal-dest460 unwind label %cleanup-lpad.loopexit

normal-dest460:                                   ; preds = %normal-dest453
  %.elt817 = extractvalue { {}*, i64 } %209, 0
  %.elt819 = extractvalue { {}*, i64 } %209, 1
  %cond770 = icmp eq i64 %.elt819, 0
  %210 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in931 = select i1 %cond770, {}* %210, {}* %.elt817
  %ptrtoint467 = ptrtoint {}* %.in931 to i64
  %tag-only468 = and i64 %ptrtoint467, 7
  %test469 = icmp eq i64 %tag-only468, 1
  br i1 %test469, label %header-check-br466, label %tag36

header-check-br466:                               ; preds = %normal-dest460
  %211 = bitcast {}* %.in931 to i8*
  %gep471 = getelementptr inbounds i8, i8* %211, i64 -9
  %irc-bit-cast472 = bitcast i8* %gep471 to i64*
  %212 = load i64, i64* %irc-bit-cast472, align 8
  %213 = icmp eq i64 %212, 1349
  %fixnum-tag-only250820 = and i64 %ptrtoint467, 3
  %fixnump-test251 = icmp eq i64 %fixnum-tag-only250820, 0
  %or.cond990 = or i1 %fixnump-test251, %213
  br i1 %or.cond990, label %tag126, label %tag72

normal-dest474:                                   ; preds = %tag84
  %214 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %215 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %216 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %217 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint475 = ptrtoint {}* %81 to i64
  %entry-point-addr-uint476 = add i64 %ptrtoint475, 7
  %entry-point-addr477 = inttoptr i64 %entry-point-addr-uint476 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point478 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr477, align 8
  %218 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point478({}* %81, i64 5, {}* %214, {}* %215, {}* %.in931, {}* %216, {}* %217)
          to label %normal-dest481 unwind label %cleanup-lpad.loopexit

normal-dest481:                                   ; preds = %normal-dest474
  %.elt902 = extractvalue { {}*, i64 } %218, 0
  %.elt904 = extractvalue { {}*, i64 } %218, 1
  %cond786 = icmp eq i64 %.elt904, 0
  %219 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232919.1 = select i1 %cond786, {}* %219, {}* %.elt902
  br label %tag127

normal-dest490:                                   ; preds = %tag87
  %.val1011 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.val1012 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %220 = icmp eq {}* %.val1011, %.val1012
  br i1 %220, label %tag43, label %tag77

normal-dest505:                                   ; preds = %tag100
  %ptrtoint506 = ptrtoint {}* %92 to i64
  %entry-point-addr-uint507 = add i64 %ptrtoint506, 7
  %entry-point-addr508 = inttoptr i64 %entry-point-addr-uint507 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point509 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr508, align 8
  %221 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point509({}* %92, i64 2, {}* %70, {}* null, {}* null, {}* null)
          to label %normal-dest512 unwind label %cleanup-lpad.loopexit

normal-dest512:                                   ; preds = %normal-dest505
  %.elt880 = extractvalue { {}*, i64 } %221, 0
  %.elt882 = extractvalue { {}*, i64 } %221, 1
  %cond781 = icmp eq i64 %.elt882, 0
  %222 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233074.0 = select i1 %cond781, {}* %222, {}* %.elt880
  %223 = icmp eq {}* %G233074.0, %222
  br i1 %223, label %tag60, label %tag31

normal-dest519:                                   ; preds = %tag102
  %ptrtoint520 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint521 = add i64 %ptrtoint520, 7
  %entry-point-addr522 = inttoptr i64 %entry-point-addr-uint521 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point523 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr522, align 8
  %224 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point523({}* %94, i64 2, {}* %.in, {}* inttoptr (i64 9223372036854775800 to {}*), {}* null, {}* null)
          to label %tag8 unwind label %cleanup-lpad.loopexit

normal-dest533:                                   ; preds = %tag104
  %ptrtoint534 = ptrtoint {}* %96 to i64
  %entry-point-addr-uint535 = add i64 %ptrtoint534, 7
  %entry-point-addr536 = inttoptr i64 %entry-point-addr-uint535 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point537 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr536, align 8
  %225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point537({}* %96, i64 2, {}* %.in, {}* null, {}* null, {}* null)
          to label %normal-dest540 unwind label %cleanup-lpad.loopexit

normal-dest540:                                   ; preds = %normal-dest533
  %.elt888 = extractvalue { {}*, i64 } %225, 0
  %.elt890 = extractvalue { {}*, i64 } %225, 1
  %cond783 = icmp eq i64 %.elt890, 0
  %226 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233065.0 = select i1 %cond783, {}* %226, {}* %.elt888
  %227 = icmp eq {}* %G233065.0, %226
  br i1 %227, label %tag85, label %tag102

normal-dest552:                                   ; preds = %tag106
  %228 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %229 = invoke {}* @cc_safe_fdefinition({}* %228)
          to label %normal-dest558 unwind label %cleanup-lpad.loopexit

normal-dest558:                                   ; preds = %normal-dest552
  %230 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %231 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %232 = invoke {}* @cc_safe_fdefinition({}* %231)
          to label %normal-dest560 unwind label %cleanup-lpad.loopexit

normal-dest560:                                   ; preds = %normal-dest558
  %ptrtoint561 = ptrtoint {}* %232 to i64
  %entry-point-addr-uint562 = add i64 %ptrtoint561, 7
  %entry-point-addr563 = inttoptr i64 %entry-point-addr-uint562 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point564 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr563, align 8
  %233 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point564({}* %232, i64 1, {}* %G232760.0, {}* null, {}* null, {}* null)
          to label %normal-dest567 unwind label %cleanup-lpad.loopexit

normal-dest567:                                   ; preds = %normal-dest560
  %.elt830 = extractvalue { {}*, i64 } %233, 0
  %.elt832 = extractvalue { {}*, i64 } %233, 1
  %cond772 = icmp eq i64 %.elt832, 0
  %234 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond772, {}* %234, {}* %.elt830
  %ptrtoint574 = ptrtoint {}* %.in to i64
  %tag-only575 = and i64 %ptrtoint574, 7
  %test576 = icmp eq i64 %tag-only575, 1
  br i1 %test576, label %header-check-br573, label %tag34

header-check-br573:                               ; preds = %normal-dest567
  %235 = bitcast {}* %.in to i8*
  %gep578 = getelementptr inbounds i8, i8* %235, i64 -9
  %irc-bit-cast579 = bitcast i8* %gep578 to i64*
  %236 = load i64, i64* %irc-bit-cast579, align 8
  %237 = icmp eq i64 %236, 1349
  %fixnum-tag-only242833 = and i64 %ptrtoint574, 3
  %fixnump-test243 = icmp eq i64 %fixnum-tag-only242833, 0
  %or.cond988 = or i1 %fixnump-test243, %237
  br i1 %or.cond988, label %tag104, label %tag60

normal-dest581:                                   ; preds = %tag108
  %238 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint582 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint583 = add i64 %ptrtoint582, 7
  %entry-point-addr584 = inttoptr i64 %entry-point-addr-uint583 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point585 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr584, align 8
  %239 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point585({}* %102, i64 3, {}* %.in931, {}* %210, {}* %238, {}* null)
          to label %tag106 unwind label %cleanup-lpad.loopexit

normal-dest600:                                   ; preds = %tag109
  %240 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %241 = invoke {}* @cc_safe_fdefinition({}* %240)
          to label %normal-dest606 unwind label %cleanup-lpad.loopexit

normal-dest606:                                   ; preds = %normal-dest600
  %242 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 166), align 16
  %243 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 168), align 16
  %244 = invoke {}* @cc_safe_fdefinition({}* %243)
          to label %normal-dest608 unwind label %cleanup-lpad.loopexit

normal-dest608:                                   ; preds = %normal-dest606
  %245 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %246 = invoke {}* @cc_safe_fdefinition({}* %245)
          to label %normal-dest610 unwind label %cleanup-lpad.loopexit

normal-dest610:                                   ; preds = %normal-dest608
  %247 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint611 = ptrtoint {}* %246 to i64
  %entry-point-addr-uint612 = add i64 %ptrtoint611, 7
  %entry-point-addr613 = inttoptr i64 %entry-point-addr-uint612 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point614 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr613, align 8
  %248 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point614({}* %246, i64 1, {}* %247, {}* null, {}* null, {}* null)
          to label %normal-dest617 unwind label %cleanup-lpad.loopexit

normal-dest617:                                   ; preds = %normal-dest610
  %.elt843 = extractvalue { {}*, i64 } %248, 0
  %.elt845 = extractvalue { {}*, i64 } %248, 1
  %cond774 = icmp eq i64 %.elt845, 0
  %249 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232837.0 = select i1 %cond774, {}* %249, {}* %.elt843
  %ptrtoint623 = ptrtoint {}* %244 to i64
  %entry-point-addr-uint624 = add i64 %ptrtoint623, 7
  %entry-point-addr625 = inttoptr i64 %entry-point-addr-uint624 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point626 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr625, align 8
  %250 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point626({}* %244, i64 2, {}* %ZEILE.0, {}* %G232837.0, {}* null, {}* null)
          to label %normal-dest629 unwind label %cleanup-lpad.loopexit

normal-dest629:                                   ; preds = %normal-dest617
  %.elt847 = extractvalue { {}*, i64 } %250, 0
  %.elt849 = extractvalue { {}*, i64 } %250, 1
  %cond775 = icmp eq i64 %.elt849, 0
  %251 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G232832.0 = select i1 %cond775, {}* %251, {}* %.elt847
  %252 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %253 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 159), align 8
  %ptrtoint635 = ptrtoint {}* %241 to i64
  %entry-point-addr-uint636 = add i64 %ptrtoint635, 7
  %entry-point-addr637 = inttoptr i64 %entry-point-addr-uint636 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point638 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr637, align 8
  %254 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point638({}* %241, i64 5, {}* %ZEILE.0, {}* %242, {}* %G232832.0, {}* %252, {}* %253)
          to label %normal-dest641 unwind label %cleanup-lpad.loopexit

normal-dest641:                                   ; preds = %normal-dest629
  br i1 %consp-test428, label %tag52, label %tag131

normal-dest656:                                   ; preds = %tag113
  %ptrtoint657 = ptrtoint {}* %110 to i64
  %entry-point-addr-uint658 = add i64 %ptrtoint657, 7
  %entry-point-addr659 = inttoptr i64 %entry-point-addr-uint658 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point660 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr659, align 8
  %255 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point660({}* %110, i64 2, {}* %27, {}* inttoptr (i64 9223372036854775800 to {}*), {}* null, {}* null)
          to label %normal-dest663 unwind label %cleanup-lpad.loopexit

normal-dest663:                                   ; preds = %normal-dest656
  %.elt920 = extractvalue { {}*, i64 } %255, 0
  %.elt922 = extractvalue { {}*, i64 } %255, 1
  %cond790 = icmp eq i64 %.elt922, 0
  %256 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233081.0 = select i1 %cond790, {}* %256, {}* %.elt920
  %257 = icmp eq {}* %G233081.0, %256
  br i1 %257, label %tag18, label %tag136

normal-dest670:                                   ; preds = %tag114
  %ptrtoint671 = ptrtoint {}* %112 to i64
  %entry-point-addr-uint672 = add i64 %ptrtoint671, 7
  %entry-point-addr673 = inttoptr i64 %entry-point-addr-uint672 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point674 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr673, align 8
  %258 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point674({}* %112, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest677 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest677:                                   ; preds = %normal-dest670
  %.elt804 = extractvalue { {}*, i64 } %258, 0
  %.elt806 = extractvalue { {}*, i64 } %258, 1
  %cond767 = icmp eq i64 %.elt806, 0
  %259 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.2 = select i1 %cond767, {}* %259, {}* %.elt804
  br label %tag142.outer.backedge

normal-dest692:                                   ; preds = %tag125
  %260 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %261 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %262 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %263 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint693 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint694 = add i64 %ptrtoint693, 7
  %entry-point-addr695 = inttoptr i64 %entry-point-addr-uint694 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point696 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr695, align 8
  %264 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point696({}* %121, i64 5, {}* %260, {}* %261, {}* %"%DOLIST-VAR.01034", {}* %262, {}* %263)
          to label %normal-dest699 unwind label %cleanup-lpad.loopexit

normal-dest699:                                   ; preds = %normal-dest692
  %.elt933 = extractvalue { {}*, i64 } %264, 0
  %.elt935 = extractvalue { {}*, i64 } %264, 1
  %cond793 = icmp eq i64 %.elt935, 0
  %265 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ZEILE.1 = select i1 %cond793, {}* %265, {}* %.elt933
  br label %tag82

normal-dest706:                                   ; preds = %tag126
  %ptrtoint707 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint708 = add i64 %ptrtoint707, 7
  %entry-point-addr709 = inttoptr i64 %entry-point-addr-uint708 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point710 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr709, align 8
  %266 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point710({}* %123, i64 2, {}* %.in931, {}* null, {}* null, {}* null)
          to label %normal-dest713 unwind label %cleanup-lpad.loopexit

normal-dest713:                                   ; preds = %normal-dest706
  %.elt924 = extractvalue { {}*, i64 } %266, 0
  %.elt926 = extractvalue { {}*, i64 } %266, 1
  %cond791 = icmp eq i64 %.elt926, 0
  %267 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233059.0 = select i1 %cond791, {}* %267, {}* %.elt924
  %268 = icmp eq {}* %G233059.0, %267
  br i1 %268, label %tag72, label %tag38

normal-dest740:                                   ; preds = %maybe-more-tests761
  %ptrtoint741 = ptrtoint {}* %274 to i64
  %entry-point-addr-uint742 = add i64 %ptrtoint741, 7
  %entry-point-addr743 = inttoptr i64 %entry-point-addr-uint742 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point744 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr743, align 8
  %269 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point744({}* %274, i64 1, {}* nonnull %.in951, {}* null, {}* null, {}* null)
          to label %normal-dest747 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest747:                                   ; preds = %normal-dest740
  %.elt953 = extractvalue { {}*, i64 } %269, 0
  %.elt955 = extractvalue { {}*, i64 } %269, 1
  %cond796 = icmp eq i64 %.elt955, 0
  %270 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233086.0 = select i1 %cond796, {}* %270, {}* %.elt953
  %271 = icmp eq {}* %G233086.0, inttoptr (i64 4 to {}*)
  %G232991.0.pre.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br i1 %271, label %tag96, label %tag66

header-check-br753:                               ; preds = %header-check-br331
  %.off1025 = add i64 %188, -1153
  %272 = icmp ult i64 %.off1025, 149
  br i1 %272, label %maybe-more-tests761, label %tag66

maybe-more-tests761:                              ; preds = %header-check-br753
  %273 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 136), align 16
  %274 = invoke {}* @cc_safe_fdefinition({}* %273)
          to label %normal-dest740 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^98^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !38 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^98^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G233136.0 = phi {}* [ %18, %header-check-br ], [ %G233136.1, %normal-dest17 ], [ %G233136.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 186), align 16
  %ptrtoint20 = ptrtoint {}* %G233136.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G233136.0, i64 2, {}* %"closure->ND=OBJEKTE-ERZEUGEN", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 186), align 16
  %"closure->ND=OBJEKTE-ERZEUGEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 3809, i64 98, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 185), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233136.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 188), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->ND=OBJEKTE-ERZEUGEN", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 189), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->ND=OBJEKTE-ERZEUGEN", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 392 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 186), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233136.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !39 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc344 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc344:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag15
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest55 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag3:                                             ; preds = %tag49
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest62 unwind label %cleanup-lpad.loopexit

tag4:                                             ; preds = %normal-dest261
  %15 = add i64 %23, 5
  %16 = inttoptr i64 %15 to {}**
  %17 = load {}*, {}** %16, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag7.backedge

tag8:                                             ; preds = %normal-dest212
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest111 unwind label %cleanup-lpad.loopexit

tag10:                                            ; preds = %tag11
  %20 = add i64 %23, -3
  %21 = inttoptr i64 %20 to {}**
  %22 = load {}*, {}** %21, align 8
  br label %tag48

tag11:                                            ; preds = %tag11.preheader, %tag7.backedge
  %.val351 = phi {}* [ %63, %tag7.backedge ], [ %55, %tag11.preheader ]
  %"%DOLIST-VAR.0357" = phi {}* [ %"%DOLIST-VAR.0.be", %tag7.backedge ], [ %54, %tag11.preheader ]
  %23 = ptrtoint {}* %"%DOLIST-VAR.0357" to i64
  %tag-only85289 = and i64 %23, 7
  %consp-test = icmp eq i64 %tag-only85289, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G233271.0 = select i1 %consp-test, {}* %.val, {}* %.val351
  %24 = icmp eq {}* %G233271.0, %.val351
  br i1 %24, label %tag45, label %tag10

tag13:                                            ; preds = %tag27
  %25 = icmp slt {}* %Y.0, %farg0
  br i1 %25, label %tag23, label %tag47

tag14:                                            ; preds = %tag15, %tag7.backedge, %normal-dest
  %26 = ptrtoint {}* %farg0 to i64
  %fixnum-tag-only342 = and i64 %26, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only342, 0
  %single-float-tag-only237 = and i64 %26, 7
  %27 = icmp eq i64 %single-float-tag-only237, 6
  %test = icmp ne i64 %single-float-tag-only237, 1
  %irc-bit-cast77 = bitcast {}* %farg0 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast77, i64 -9
  %irc-bit-cast78 = bitcast i8* %gep to i64*
  br label %tag29

tag15:                                            ; preds = %normal-dest261
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %29 = icmp eq {}* %"%DOLIST-VAR.0357", %28
  %.val352 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G233245.0 = select i1 %29, {}* %.val352, {}* %28
  %30 = icmp eq {}* %G233245.0, %28
  br i1 %30, label %tag, label %tag14

tag20:                                            ; preds = %normal-dest277, %tag47, %tag32, %tag31, %tag30, %tag24, %tag23
  %G233156.0 = phi {}* [ %34, %tag23 ], [ %47, %tag47 ], [ %42, %tag31 ], [ %35, %tag24 ], [ %41, %tag30 ], [ %43, %tag32 ], [ %G233156.1, %normal-dest277 ]
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %32 = icmp eq {}* %G233156.0, %31
  br i1 %32, label %tag26, label %tag28

tag22:                                            ; preds = %header-check-br
  %33 = invoke double @from_object_double({}* nonnull %Y.0)
          to label %normal-dest133 unwind label %cleanup-lpad.loopexit

tag23:                                            ; preds = %tag13
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag20

tag24:                                            ; preds = %normal-dest227
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag20

tag26:                                            ; preds = %tag20
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %G233156.0, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

tag27:                                            ; preds = %tag29
  br i1 %fixnump-test, label %tag13, label %tag50

tag28:                                            ; preds = %tag20
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 99), align 8
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit

tag29:                                            ; preds = %tag29.backedge, %tag14
  %Y.0 = phi {}* [ null, %tag14 ], [ %Y.0.be, %tag29.backedge ]
  %40 = ptrtoint {}* %Y.0 to i64
  %fixnum-tag-only223301 = and i64 %40, 3
  %fixnump-test224 = icmp eq i64 %fixnum-tag-only223301, 0
  br i1 %fixnump-test224, label %tag27, label %tag44

tag30:                                            ; preds = %normal-dest134
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag20

tag31:                                            ; preds = %normal-dest227
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag20

tag32:                                            ; preds = %normal-dest134
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag20

tag36:                                            ; preds = %tag41
  %44 = invoke float @from_object_float({}* %Y.0)
          to label %normal-dest226 unwind label %cleanup-lpad.loopexit

tag41:                                            ; preds = %tag44
  br i1 %27, label %tag36, label %tag50

tag44:                                            ; preds = %tag29
  %trunc = trunc i64 %40 to i3
  switch i3 %trunc, label %tag50 [
    i3 -2, label %tag41
    i3 1, label %header-check-br87
  ]

tag45:                                            ; preds = %tag11
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest240 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag47:                                            ; preds = %tag13
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag20

tag48:                                            ; preds = %normal-dest247, %tag10
  %KLASSE.0 = phi {}* [ %22, %tag10 ], [ %KLASSE.1, %normal-dest247 ]
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 179), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag49:                                            ; preds = %normal-dest212
  %50 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %40, i64 4)
  %result = extractvalue { i64, i1 } %50, 0
  %overflow = extractvalue { i64, i1 } %50, 1
  %51 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag3, label %tag29.backedge

tag29.backedge:                                   ; preds = %tag49, %normal-dest69, %normal-dest118
  %Y.0.be = phi {}* [ %Y.1, %normal-dest69 ], [ %Y.2, %normal-dest118 ], [ %51, %tag49 ]
  br label %tag29

tag50:                                            ; preds = %header-check-br87, %tag44, %tag41, %tag27, %header-check-br
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest270 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag3, %normal-dest62, %tag8, %normal-dest111, %tag22, %normal-dest133, %tag28, %normal-dest138, %normal-dest145, %normal-dest152, %normal-dest159, %normal-dest166, %normal-dest173, %normal-dest179, %normal-dest186, %normal-dest192, %normal-dest199, %normal-dest205, %tag36, %normal-dest226, %tag50, %normal-dest270
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest254, %tag48, %normal-dest240, %tag45, %normal-dest55, %tag
  %lpad.loopexit354 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %9
  %lpad.loopexit.split-lp355 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit354, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp355, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 178), align 16
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %56 = icmp eq {}* %54, %55
  br i1 %56, label %tag14, label %tag11.preheader

tag11.preheader:                                  ; preds = %normal-dest
  br label %tag11

normal-dest55:                                    ; preds = %tag
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %60 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %57, {}* %58, {}* %"%DOLIST-VAR.0357", {}* %59, {}* %60)
          to label %normal-dest58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest58:                                    ; preds = %normal-dest55
  %.elt294 = extractvalue { {}*, i64 } %61, 0
  %.elt296 = extractvalue { {}*, i64 } %61, 1
  %cond = icmp eq i64 %.elt296, 0
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %62, {}* %.elt294
  br label %tag7.backedge

tag7.backedge:                                    ; preds = %normal-dest58, %tag4
  %63 = phi {}* [ %.pre, %tag4 ], [ %62, %normal-dest58 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %17, %tag4 ], [ %"%DOLIST-VAR.1", %normal-dest58 ]
  %64 = icmp eq {}* %"%DOLIST-VAR.0.be", %63
  br i1 %64, label %tag14, label %tag11

normal-dest62:                                    ; preds = %tag3
  %ptrtoint63 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint64 = add i64 %ptrtoint63, 7
  %entry-point-addr65 = inttoptr i64 %entry-point-addr-uint64 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point66 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr65, align 8
  %65 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point66({}* %14, i64 1, {}* %51, {}* null, {}* null, {}* null)
          to label %normal-dest69 unwind label %cleanup-lpad.loopexit

normal-dest69:                                    ; preds = %normal-dest62
  %.elt336 = extractvalue { {}*, i64 } %65, 0
  %.elt338 = extractvalue { {}*, i64 } %65, 1
  %cond288 = icmp eq i64 %.elt338, 0
  %66 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %Y.1 = select i1 %cond288, {}* %66, {}* %.elt336
  br label %tag29.backedge

header-check-br:                                  ; preds = %header-check-br87
  %67 = load i64, i64* %irc-bit-cast78, align 8
  %68 = icmp eq i64 %67, 1325
  br i1 %68, label %tag22, label %tag50

header-check-br87:                                ; preds = %tag44
  %irc-bit-cast91 = bitcast {}* %Y.0 to i8*
  %gep92 = getelementptr inbounds i8, i8* %irc-bit-cast91, i64 -9
  %irc-bit-cast93 = bitcast i8* %gep92 to i64*
  %69 = load i64, i64* %irc-bit-cast93, align 8
  %70 = icmp ne i64 %69, 1325
  %brmerge = or i1 %test, %70
  br i1 %brmerge, label %tag50, label %header-check-br

normal-dest111:                                   ; preds = %tag8
  %ptrtoint112 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint113 = add i64 %ptrtoint112, 7
  %entry-point-addr114 = inttoptr i64 %entry-point-addr-uint113 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point115 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr114, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point115({}* %19, i64 2, {}* %Y.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest118 unwind label %cleanup-lpad.loopexit

normal-dest118:                                   ; preds = %normal-dest111
  %.elt332 = extractvalue { {}*, i64 } %71, 0
  %.elt334 = extractvalue { {}*, i64 } %71, 1
  %cond287 = icmp eq i64 %.elt334, 0
  %72 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %Y.2 = select i1 %cond287, {}* %72, {}* %.elt332
  br label %tag29.backedge

normal-dest133:                                   ; preds = %tag22
  %73 = invoke double @from_object_double({}* nonnull %farg0)
          to label %normal-dest134 unwind label %cleanup-lpad.loopexit

normal-dest134:                                   ; preds = %normal-dest133
  %74 = fcmp olt double %33, %73
  br i1 %74, label %tag30, label %tag32

normal-dest138:                                   ; preds = %tag28
  %ptrtoint139 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint140 = add i64 %ptrtoint139, 7
  %entry-point-addr141 = inttoptr i64 %entry-point-addr-uint140 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point142 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr141, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point142({}* %39, i64 1, {}* %Y.0, {}* null, {}* null, {}* null)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit

normal-dest145:                                   ; preds = %normal-dest138
  %.elt307 = extractvalue { {}*, i64 } %75, 0
  %.elt309 = extractvalue { {}*, i64 } %75, 1
  %cond285 = icmp eq i64 %.elt309, 0
  %76 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233119.0 = select i1 %cond285, {}* %76, {}* %.elt307
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 37), align 8
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest152 unwind label %cleanup-lpad.loopexit

normal-dest152:                                   ; preds = %normal-dest145
  %ptrtoint153 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint154 = add i64 %ptrtoint153, 7
  %entry-point-addr155 = inttoptr i64 %entry-point-addr-uint154 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point156 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr155, align 8
  %79 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point156({}* %78, i64 1, {}* %Y.0, {}* null, {}* null, {}* null)
          to label %normal-dest159 unwind label %cleanup-lpad.loopexit

normal-dest159:                                   ; preds = %normal-dest152
  %.elt311 = extractvalue { {}*, i64 } %79, 0
  %.elt313 = extractvalue { {}*, i64 } %79, 1
  %cond286 = icmp eq i64 %.elt313, 0
  %80 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233120.0 = select i1 %cond286, {}* %80, {}* %.elt311
  %81 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 181), align 8
  %82 = invoke {}* @cc_safe_fdefinition({}* %81)
          to label %normal-dest166 unwind label %cleanup-lpad.loopexit

normal-dest166:                                   ; preds = %normal-dest159
  %83 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 106), align 16
  %ptrtoint167 = ptrtoint {}* %82 to i64
  %entry-point-addr-uint168 = add i64 %ptrtoint167, 7
  %entry-point-addr169 = inttoptr i64 %entry-point-addr-uint168 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point170 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr169, align 8
  %84 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point170({}* %82, i64 2, {}* %G233119.0, {}* %83, {}* null, {}* null)
          to label %normal-dest173 unwind label %cleanup-lpad.loopexit

normal-dest173:                                   ; preds = %normal-dest166
  %85 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest179 unwind label %cleanup-lpad.loopexit

normal-dest179:                                   ; preds = %normal-dest173
  %87 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %88 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 159), align 8
  %ptrtoint180 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint181 = add i64 %ptrtoint180, 7
  %entry-point-addr182 = inttoptr i64 %entry-point-addr-uint181 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point183 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr182, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point183({}* %86, i64 5, {}* %G233119.0, {}* %87, {}* %Y.0, {}* %88, {}* %89)
          to label %normal-dest186 unwind label %cleanup-lpad.loopexit

normal-dest186:                                   ; preds = %normal-dest179
  %91 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 181), align 8
  %92 = invoke {}* @cc_safe_fdefinition({}* %91)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit

normal-dest192:                                   ; preds = %normal-dest186
  %93 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint193 = ptrtoint {}* %92 to i64
  %entry-point-addr-uint194 = add i64 %ptrtoint193, 7
  %entry-point-addr195 = inttoptr i64 %entry-point-addr-uint194 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point196 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr195, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point196({}* %92, i64 2, {}* %G233120.0, {}* %93, {}* null, {}* null)
          to label %normal-dest199 unwind label %cleanup-lpad.loopexit

normal-dest199:                                   ; preds = %normal-dest192
  %95 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %96 = invoke {}* @cc_safe_fdefinition({}* %95)
          to label %normal-dest205 unwind label %cleanup-lpad.loopexit

normal-dest205:                                   ; preds = %normal-dest199
  %97 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %98 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %99 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 159), align 8
  %ptrtoint206 = ptrtoint {}* %96 to i64
  %entry-point-addr-uint207 = add i64 %ptrtoint206, 7
  %entry-point-addr208 = inttoptr i64 %entry-point-addr-uint207 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point209 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr208, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point209({}* %96, i64 5, {}* %G233120.0, {}* %97, {}* %Y.0, {}* %98, {}* %99)
          to label %normal-dest212 unwind label %cleanup-lpad.loopexit

normal-dest212:                                   ; preds = %normal-dest205
  br i1 %fixnump-test224, label %tag49, label %tag8

normal-dest226:                                   ; preds = %tag36
  %101 = invoke float @from_object_float({}* %farg0)
          to label %normal-dest227 unwind label %cleanup-lpad.loopexit

normal-dest227:                                   ; preds = %normal-dest226
  %102 = fcmp olt float %44, %101
  br i1 %102, label %tag31, label %tag24

normal-dest240:                                   ; preds = %tag45
  %103 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %104 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %105 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %106 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint241 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint242 = add i64 %ptrtoint241, 7
  %entry-point-addr243 = inttoptr i64 %entry-point-addr-uint242 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point244 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr243, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point244({}* %46, i64 5, {}* %103, {}* %104, {}* %"%DOLIST-VAR.0357", {}* %105, {}* %106)
          to label %normal-dest247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest247:                                   ; preds = %normal-dest240
  %.elt298 = extractvalue { {}*, i64 } %107, 0
  %.elt300 = extractvalue { {}*, i64 } %107, 1
  %cond283 = icmp eq i64 %.elt300, 0
  %108 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %KLASSE.1 = select i1 %cond283, {}* %108, {}* %.elt298
  br label %tag48

normal-dest254:                                   ; preds = %tag48
  %ptrtoint255 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint256 = add i64 %ptrtoint255, 7
  %entry-point-addr257 = inttoptr i64 %entry-point-addr-uint256 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point258 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr257, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point258({}* %49, i64 1, {}* %KLASSE.0, {}* null, {}* null, {}* null)
          to label %normal-dest261 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest261:                                   ; preds = %normal-dest254
  br i1 %consp-test, label %tag4, label %tag15

normal-dest270:                                   ; preds = %tag50
  %ptrtoint271 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint272 = add i64 %ptrtoint271, 7
  %entry-point-addr273 = inttoptr i64 %entry-point-addr-uint272 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point274 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr273, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point274({}* %53, i64 2, {}* %Y.0, {}* %farg0, {}* null, {}* null)
          to label %normal-dest277 unwind label %cleanup-lpad.loopexit

normal-dest277:                                   ; preds = %normal-dest270
  %.elt303 = extractvalue { {}*, i64 } %110, 0
  %.elt305 = extractvalue { {}*, i64 } %110, 1
  %cond284 = icmp eq i64 %.elt305, 0
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233156.1 = select i1 %cond284, {}* %111, {}* %.elt303
  br label %tag20
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^117^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !40 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^117^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G233293.0 = phi {}* [ %18, %header-check-br ], [ %G233293.1, %normal-dest17 ], [ %G233293.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 204), align 16
  %ptrtoint43 = ptrtoint {}* %G233293.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G233293.0, i64 2, {}* %"closure->ND=ERZEUGE_STOER_DAMEN_VALUES", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %tag1, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 204), align 16
  %"closure->ND=ERZEUGE_STOER_DAMEN_VALUES" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4460, i64 117, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233293.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

normal-dest21:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 203), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233293.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 206), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=ERZEUGE_STOER_DAMEN_VALUES", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 222), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=ERZEUGE_STOER_DAMEN_VALUES", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 564 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 204), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !41 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %cond = icmp eq i64 %nargs, 3
  br i1 %cond, label %req-bb, label %case-opt0-bb

tag4:                                             ; preds = %header-check-br406
  %11 = invoke double @from_object_double({}* nonnull %.in621)
          to label %normal-dest108 unwind label %cleanup-lpad

tag6:                                             ; preds = %header-check-br249
  %12 = invoke double @from_object_double({}* nonnull %.in609)
          to label %normal-dest112 unwind label %cleanup-lpad

tag7:                                             ; preds = %tag61
  %13 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only117 = and i64 %13, 7
  %fixnum-tag-only273627 = and i64 %13, 3
  %fixnump-test274 = icmp ne i64 %fixnum-tag-only273627, 0
  %test298 = icmp eq i64 %single-float-tag-only117, 1
  %or.cond657 = and i1 %fixnump-test274, %test298
  br i1 %or.cond657, label %header-check-br295, label %tag16

tag8:                                             ; preds = %tag17
  %14 = icmp eq i64 %tag-only486, 6
  br i1 %14, label %tag51, label %tag78

tag10:                                            ; preds = %tag85, %normal-dest519
  %return-value.sroa.35.0 = phi i64 [ 2, %normal-dest519 ], [ 1, %tag85 ]
  %return-value.sroa.0.0.in = phi {}* [ %DIA1_OBJEKT.0, %normal-dest519 ], [ %.in669, %tag85 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %15 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %16 = insertvalue { {}*, i64 } %15, i64 %return-value.sroa.35.0, 1
  ret { {}*, i64 } %16

tag12:                                            ; preds = %normal-dest286, %normal-dest276, %normal-dest234, %normal-dest109, %tag56
  %G233380.0 = phi {}* [ %46, %tag56 ], [ %77, %normal-dest109 ], [ %G233380.1, %normal-dest234 ], [ %130, %normal-dest276 ], [ %G233380.2, %normal-dest286 ]
  %ptrtoint133 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint133, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %G233380.0, {}* null, {}* null, {}* null)
          to label %normal-dest136 unwind label %cleanup-lpad

tag16:                                            ; preds = %header-check-br173, %header-check-br295, %tag23, %tag70, %tag7, %tag85
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 199), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest181 unwind label %cleanup-lpad

tag17:                                            ; preds = %tag83
  %trunc665 = trunc i64 %64 to i3
  switch i3 %trunc665, label %tag78 [
    i3 -2, label %tag8
    i3 1, label %header-check-br532
  ]

tag20:                                            ; preds = %tag56
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest227 unwind label %cleanup-lpad

tag21:                                            ; preds = %switch.early.test674, %tag73
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest241 unwind label %cleanup-lpad

tag23:                                            ; preds = %header-check-br295, %header-check-br295, %header-check-br295, %header-check-br295
  %24 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only243 = and i64 %24, 7
  %25 = icmp eq i64 %single-float-tag-only243, 6
  br i1 %25, label %tag16, label %tag70

tag24:                                            ; preds = %tag42
  %fixnum-tag-only244622 = and i64 %ptrtoint212, 3
  %fixnump-test245 = icmp eq i64 %fixnum-tag-only244622, 0
  br i1 %fixnump-test245, label %tag56, label %tag33

tag25:                                            ; preds = %tag58
  %26 = icmp eq i64 %tag-only213, 6
  br i1 %26, label %tag32, label %tag33

tag26:                                            ; preds = %switch.early.test, %tag75
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest248 unwind label %cleanup-lpad

tag30:                                            ; preds = %tag82
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest260 unwind label %cleanup-lpad

tag32:                                            ; preds = %tag25
  %31 = invoke float @from_object_float({}* %.in621)
          to label %normal-dest275 unwind label %cleanup-lpad

tag33:                                            ; preds = %header-check-br126, %tag58, %header-check-br406, %tag25, %tag24
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 201), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest279 unwind label %cleanup-lpad

tag35:                                            ; preds = %tag64
  %34 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %93, i64 %50)
  %result = extractvalue { i64, i1 } %34, 0
  %overflow = extractvalue { i64, i1 } %34, 1
  %35 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag38, label %tag77

tag38:                                            ; preds = %tag35
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest303 unwind label %cleanup-lpad

tag40:                                            ; preds = %tag80, %header-check-br505, %tag79, %tag72, %header-check-br424, %tag64
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest324 unwind label %cleanup-lpad

tag42:                                            ; preds = %switch.early.test, %switch.early.test, %header-check-br101, %header-check-br211, %header-check-br211, %tag75
  %40 = ptrtoint {}* %.in621 to i64
  %fixnum-tag-only337568 = and i64 %40, 3
  %fixnump-test338 = icmp eq i64 %fixnum-tag-only337568, 0
  br i1 %fixnump-test338, label %tag24, label %tag58

tag44:                                            ; preds = %header-check-br173, %header-check-br173, %header-check-br173, %header-check-br173
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 197), align 8
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest342 unwind label %cleanup-lpad

tag51:                                            ; preds = %tag8
  %43 = invoke float @from_object_float({}* %.in609)
          to label %normal-dest376 unwind label %cleanup-lpad

tag55:                                            ; preds = %header-check-br505
  %44 = invoke double @from_object_double({}* nonnull %.in599)
          to label %normal-dest379 unwind label %cleanup-lpad

tag56:                                            ; preds = %tag24
  %45 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %40, i64 %ptrtoint212)
  %result382 = extractvalue { i64, i1 } %45, 0
  %overflow383 = extractvalue { i64, i1 } %45, 1
  %46 = inttoptr i64 %result382 to {}*
  br i1 %overflow383, label %tag20, label %tag12

tag58:                                            ; preds = %tag42
  %trunc = trunc i64 %40 to i3
  switch i3 %trunc, label %tag33 [
    i3 -2, label %tag25
    i3 1, label %header-check-br126
  ]

tag61:                                            ; preds = %normal-dest441, %req-bb
  %.in668 = phi {}* [ %67, %req-bb ], [ %159, %normal-dest441 ]
  %47 = phi {}* [ %68, %req-bb ], [ %.val.pre, %normal-dest441 ]
  %stoerdame.0 = phi {}* [ %farg2, %req-bb ], [ %stoerdame.2, %normal-dest441 ]
  %48 = icmp eq {}* %farg0, %farg1
  %G233426.0 = select i1 %48, {}* %47, {}* %.in668
  %49 = icmp eq {}* %G233426.0, %.in668
  br i1 %49, label %tag7, label %tag85

tag64:                                            ; preds = %normal-dest148
  %50 = ptrtoint {}* %.in615 to i64
  %fixnum-tag-only401616 = and i64 %50, 3
  %fixnump-test402 = icmp eq i64 %fixnum-tag-only401616, 0
  br i1 %fixnump-test402, label %tag35, label %tag40

tag65:                                            ; preds = %tag72
  %51 = invoke float @from_object_float({}* %.in599)
          to label %normal-dest403 unwind label %cleanup-lpad

tag68:                                            ; preds = %tag83
  br i1 %fixnump-test158, label %tag82, label %tag78

tag70:                                            ; preds = %tag23
  %fixnum-tag-only422629 = and i64 %24, 3
  %fixnump-test423 = icmp ne i64 %fixnum-tag-only422629, 0
  %test176 = icmp eq i64 %single-float-tag-only243, 1
  %or.cond = and i1 %fixnump-test423, %test176
  br i1 %or.cond, label %header-check-br173, label %tag16

tag72:                                            ; preds = %tag80
  %52 = ptrtoint {}* %.in615 to i64
  %single-float-tag-only431 = and i64 %52, 7
  %53 = icmp eq i64 %single-float-tag-only431, 6
  br i1 %53, label %tag65, label %tag40

tag73:                                            ; preds = %normal-dest477
  %54 = icmp eq i64 %tag-only486, 6
  %brmerge654 = or i1 %54, %fixnump-test158
  br i1 %brmerge654, label %tag83, label %tag21

tag74:                                            ; preds = %72, %req-bb
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest434 unwind label %cleanup-lpad

tag75:                                            ; preds = %normal-dest205
  %57 = icmp eq i64 %tag-only213, 6
  %fixnum-tag-only399563 = and i64 %ptrtoint212, 3
  %fixnump-test400 = icmp eq i64 %fixnum-tag-only399563, 0
  %or.cond658 = or i1 %57, %fixnump-test400
  br i1 %or.cond658, label %tag42, label %tag26

tag77:                                            ; preds = %normal-dest404, %normal-dest380, %normal-dest331, %normal-dest310, %tag35
  %G233347.0 = phi {}* [ %35, %tag35 ], [ %G233347.1, %normal-dest310 ], [ %G233347.2, %normal-dest331 ], [ %149, %normal-dest380 ], [ %152, %normal-dest404 ]
  %ptrtoint455 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint456 = add i64 %ptrtoint455, 7
  %entry-point-addr457 = inttoptr i64 %entry-point-addr-uint456 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point458 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr457, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point458({}* %86, i64 1, {}* %G233347.0, {}* null, {}* null, {}* null)
          to label %normal-dest461 unwind label %cleanup-lpad

tag78:                                            ; preds = %tag17, %header-check-br532, %tag68, %header-check-br249, %tag8
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 201), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest492 unwind label %cleanup-lpad

tag79:                                            ; preds = %header-check-br424
  %ptrtoint506 = ptrtoint {}* %.in615 to i64
  %tag-only507 = and i64 %ptrtoint506, 7
  %test508 = icmp eq i64 %tag-only507, 1
  br i1 %test508, label %header-check-br505, label %tag40

tag80:                                            ; preds = %normal-dest148
  %trunc664 = trunc i64 %93 to i3
  switch i3 %trunc664, label %tag40 [
    i3 -2, label %tag72
    i3 1, label %header-check-br424
  ]

tag81:                                            ; preds = %normal-dest499, %normal-dest377, %normal-dest267, %normal-dest114, %tag82
  %G233314.0 = phi {}* [ %63, %tag82 ], [ %80, %normal-dest114 ], [ %G233314.1, %normal-dest267 ], [ %146, %normal-dest377 ], [ %G233314.2, %normal-dest499 ]
  %ptrtoint513 = ptrtoint {}* %162 to i64
  %entry-point-addr-uint514 = add i64 %ptrtoint513, 7
  %entry-point-addr515 = inttoptr i64 %entry-point-addr-uint514 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point516 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr515, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point516({}* %162, i64 1, {}* %G233314.0, {}* null, {}* null, {}* null)
          to label %normal-dest519 unwind label %cleanup-lpad

tag82:                                            ; preds = %tag68
  %62 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %64, i64 %93)
  %result528 = extractvalue { i64, i1 } %62, 0
  %overflow529 = extractvalue { i64, i1 } %62, 1
  %63 = inttoptr i64 %result528 to {}*
  br i1 %overflow529, label %tag30, label %tag81

tag83:                                            ; preds = %switch.early.test674, %switch.early.test674, %header-check-br413, %header-check-br484, %header-check-br484, %tag73
  %64 = ptrtoint {}* %.in609 to i64
  %fixnum-tag-only530600 = and i64 %64, 3
  %fixnump-test531 = icmp eq i64 %fixnum-tag-only530600, 0
  br i1 %fixnump-test531, label %tag68, label %tag17

tag85:                                            ; preds = %tag61, %normal-dest349
  %.in669 = phi {}* [ %143, %normal-dest349 ], [ %.in668, %tag61 ]
  %G233417.0 = phi {}* [ %G233417.1, %normal-dest349 ], [ %47, %tag61 ]
  %65 = icmp eq {}* %G233417.0, %.in669
  br i1 %65, label %tag16, label %tag10

cleanup-lpad:                                     ; preds = %74, %71, %tag81, %normal-dest492, %tag78, %normal-dest470, %normal-dest468, %normal-dest461, %tag77, %normal-dest434, %tag74, %normal-dest404, %normal-dest403, %tag65, %normal-dest241, %normal-dest380, %normal-dest379, %tag55, %normal-dest377, %normal-dest376, %tag51, %normal-dest248, %normal-dest342, %tag44, %normal-dest324, %tag40, %normal-dest303, %tag38, %normal-dest279, %tag33, %normal-dest276, %normal-dest275, %tag32, %normal-dest260, %tag30, %tag26, %tag21, %normal-dest227, %tag20, %normal-dest198, %normal-dest190, %normal-dest183, %normal-dest181, %tag16, %normal-dest141, %normal-dest139, %normal-dest136, %tag12, %normal-dest114, %normal-dest112, %tag6, %normal-dest109, %normal-dest108, %tag4
  %66 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %66

req-bb:                                           ; preds = %entry
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %68 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %69 = icmp eq {}* %68, %67
  br i1 %69, label %tag74, label %tag61

case-opt0-bb:                                     ; preds = %entry
  %70 = icmp ult i64 %nargs, 2
  br i1 %70, label %71, label %72

; <label>:71:                                     ; preds = %case-opt0-bb
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %71
  unreachable

; <label>:72:                                     ; preds = %case-opt0-bb
  %73 = icmp ugt i64 %nargs, 3
  br i1 %73, label %74, label %tag74

; <label>:74:                                     ; preds = %72
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc639 unwind label %cleanup-lpad

.noexc639:                                        ; preds = %74
  unreachable

header-check-br101:                               ; preds = %header-check-br211
  %.old = and i64 %ptrtoint212, 3
  %fixnump-test400.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test400.old, label %tag42, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br101
  switch i64 %111, label %tag26 [
    i64 1349, label %tag42
    i64 1309, label %tag42
  ]

normal-dest108:                                   ; preds = %tag4
  %75 = invoke double @from_object_double({}* nonnull %.in)
          to label %normal-dest109 unwind label %cleanup-lpad

normal-dest109:                                   ; preds = %normal-dest108
  %76 = fsub double %11, %75
  %77 = invoke {}* @to_object_double(double %76)
          to label %tag12 unwind label %cleanup-lpad

normal-dest112:                                   ; preds = %tag6
  %78 = invoke double @from_object_double({}* nonnull %.in599)
          to label %normal-dest114 unwind label %cleanup-lpad

normal-dest114:                                   ; preds = %normal-dest112
  %79 = fsub double %12, %78
  %80 = invoke {}* @to_object_double(double %79)
          to label %tag81 unwind label %cleanup-lpad

header-check-br126:                               ; preds = %tag58
  %gep131 = getelementptr inbounds i8, i8* %104, i64 -9
  %irc-bit-cast132 = bitcast i8* %gep131 to i64*
  %81 = load i64, i64* %irc-bit-cast132, align 8
  %82 = icmp ne i64 %81, 1325
  %test214.not = xor i1 %test214, true
  %brmerge662 = or i1 %82, %test214.not
  br i1 %brmerge662, label %tag33, label %header-check-br406

normal-dest136:                                   ; preds = %tag12
  %.elt574 = extractvalue { {}*, i64 } %17, 0
  %.elt576 = extractvalue { {}*, i64 } %17, 1
  %cond542 = icmp eq i64 %.elt576, 0
  %83 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in599 = select i1 %cond542, {}* %83, {}* %.elt574
  %84 = bitcast {}* %.in599 to i8*
  %85 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 82), align 16
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest139 unwind label %cleanup-lpad

normal-dest139:                                   ; preds = %normal-dest136
  %87 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest141 unwind label %cleanup-lpad

normal-dest141:                                   ; preds = %normal-dest139
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint142 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint143 = add i64 %ptrtoint142, 7
  %entry-point-addr144 = inttoptr i64 %entry-point-addr-uint143 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point145 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr144, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point145({}* %88, i64 2, {}* %stoerdame.0, {}* %89, {}* null, {}* null)
          to label %normal-dest148 unwind label %cleanup-lpad

normal-dest148:                                   ; preds = %normal-dest141
  %.elt578 = extractvalue { {}*, i64 } %90, 0
  %.elt580 = extractvalue { {}*, i64 } %90, 1
  %cond543 = icmp eq i64 %.elt580, 0
  %91 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in615 = select i1 %cond543, {}* %91, {}* %.elt578
  %92 = bitcast {}* %.in615 to i8*
  %93 = ptrtoint {}* %.in599 to i64
  %fixnum-tag-only157581 = and i64 %93, 3
  %fixnump-test158 = icmp eq i64 %fixnum-tag-only157581, 0
  br i1 %fixnump-test158, label %tag64, label %tag80

header-check-br173:                               ; preds = %tag70
  %irc-bit-cast177 = bitcast {}* %farg1 to i8*
  %gep178 = getelementptr inbounds i8, i8* %irc-bit-cast177, i64 -9
  %irc-bit-cast179 = bitcast i8* %gep178 to i64*
  %94 = load i64, i64* %irc-bit-cast179, align 8
  %95 = add i64 %94, -1309
  %96 = lshr i64 %95, 3
  %97 = shl i64 %95, 61
  %98 = or i64 %96, %97
  switch i64 %98, label %tag16 [
    i64 2, label %tag44
    i64 4, label %tag44
    i64 5, label %tag44
    i64 0, label %tag44
  ]

normal-dest181:                                   ; preds = %tag16
  %99 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %100 = invoke {}* @cc_safe_fdefinition({}* %99)
          to label %normal-dest183 unwind label %cleanup-lpad

normal-dest183:                                   ; preds = %normal-dest181
  %101 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint184 = ptrtoint {}* %100 to i64
  %entry-point-addr-uint185 = add i64 %ptrtoint184, 7
  %entry-point-addr186 = inttoptr i64 %entry-point-addr-uint185 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point187 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr186, align 8
  %102 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point187({}* %100, i64 2, {}* %farg0, {}* %101, {}* null, {}* null)
          to label %normal-dest190 unwind label %cleanup-lpad

normal-dest190:                                   ; preds = %normal-dest183
  %.elt556 = extractvalue { {}*, i64 } %102, 0
  %.elt558 = extractvalue { {}*, i64 } %102, 1
  %cond539 = icmp eq i64 %.elt558, 0
  %103 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in621 = select i1 %cond539, {}* %103, {}* %.elt556
  %104 = bitcast {}* %.in621 to i8*
  %105 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %106 = invoke {}* @cc_safe_fdefinition({}* %105)
          to label %normal-dest198 unwind label %cleanup-lpad

normal-dest198:                                   ; preds = %normal-dest190
  %107 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint199 = ptrtoint {}* %106 to i64
  %entry-point-addr-uint200 = add i64 %ptrtoint199, 7
  %entry-point-addr201 = inttoptr i64 %entry-point-addr-uint200 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point202 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr201, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point202({}* %106, i64 2, {}* %farg1, {}* %107, {}* null, {}* null)
          to label %normal-dest205 unwind label %cleanup-lpad

normal-dest205:                                   ; preds = %normal-dest198
  %.elt560 = extractvalue { {}*, i64 } %108, 0
  %.elt562 = extractvalue { {}*, i64 } %108, 1
  %cond540 = icmp eq i64 %.elt562, 0
  %109 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond540, {}* %109, {}* %.elt560
  %110 = bitcast {}* %.in to i8*
  %ptrtoint212 = ptrtoint {}* %.in to i64
  %tag-only213 = and i64 %ptrtoint212, 7
  %test214 = icmp eq i64 %tag-only213, 1
  br i1 %test214, label %header-check-br211, label %tag75

header-check-br211:                               ; preds = %normal-dest205
  %gep216 = getelementptr inbounds i8, i8* %110, i64 -9
  %irc-bit-cast217 = bitcast i8* %gep216 to i64*
  %111 = load i64, i64* %irc-bit-cast217, align 8
  switch i64 %111, label %header-check-br101 [
    i64 1325, label %tag42
    i64 1341, label %tag42
  ]

normal-dest227:                                   ; preds = %tag20
  %ptrtoint228 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint229 = add i64 %ptrtoint228, 7
  %entry-point-addr230 = inttoptr i64 %entry-point-addr-uint229 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point231 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr230, align 8
  %112 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point231({}* %21, i64 1, {}* %46, {}* null, {}* null, {}* null)
          to label %normal-dest234 unwind label %cleanup-lpad

normal-dest234:                                   ; preds = %normal-dest227
  %.elt624 = extractvalue { {}*, i64 } %112, 0
  %.elt626 = extractvalue { {}*, i64 } %112, 1
  %cond551 = icmp eq i64 %.elt626, 0
  %113 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233380.1 = select i1 %cond551, {}* %113, {}* %.elt624
  br label %tag12

normal-dest241:                                   ; preds = %tag21
  %114 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %115 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %116 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %117 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 223), align 8
  %ptrtoint385 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint386 = add i64 %ptrtoint385, 7
  %entry-point-addr387 = inttoptr i64 %entry-point-addr-uint386 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point388 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr387, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point388({}* %23, i64 5, {}* %114, {}* %115, {}* %.in599, {}* %116, {}* %117)
          to label %normal-dest391 unwind label %cleanup-lpad

normal-dest248:                                   ; preds = %tag26
  %119 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %120 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %121 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %122 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 223), align 8
  %ptrtoint355 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint356 = add i64 %ptrtoint355, 7
  %entry-point-addr357 = inttoptr i64 %entry-point-addr-uint356 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point358 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr357, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point358({}* %28, i64 5, {}* %119, {}* %120, {}* %.in, {}* %121, {}* %122)
          to label %normal-dest361 unwind label %cleanup-lpad

header-check-br249:                               ; preds = %header-check-br532
  %gep254 = getelementptr inbounds i8, i8* %84, i64 -9
  %irc-bit-cast255 = bitcast i8* %gep254 to i64*
  %124 = load i64, i64* %irc-bit-cast255, align 8
  %125 = icmp eq i64 %124, 1325
  br i1 %125, label %tag6, label %tag78

normal-dest260:                                   ; preds = %tag30
  %ptrtoint261 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint262 = add i64 %ptrtoint261, 7
  %entry-point-addr263 = inttoptr i64 %entry-point-addr-uint262 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point264 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr263, align 8
  %126 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point264({}* %30, i64 1, {}* %63, {}* null, {}* null, {}* null)
          to label %normal-dest267 unwind label %cleanup-lpad

normal-dest267:                                   ; preds = %normal-dest260
  %.elt612 = extractvalue { {}*, i64 } %126, 0
  %.elt614 = extractvalue { {}*, i64 } %126, 1
  %cond549 = icmp eq i64 %.elt614, 0
  %127 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233314.1 = select i1 %cond549, {}* %127, {}* %.elt612
  br label %tag81

normal-dest275:                                   ; preds = %tag32
  %128 = invoke float @from_object_float({}* %.in)
          to label %normal-dest276 unwind label %cleanup-lpad

normal-dest276:                                   ; preds = %normal-dest275
  %129 = fsub float %31, %128
  %130 = invoke {}* @to_object_float(float %129)
          to label %tag12 unwind label %cleanup-lpad

normal-dest279:                                   ; preds = %tag33
  %ptrtoint280 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint281 = add i64 %ptrtoint280, 7
  %entry-point-addr282 = inttoptr i64 %entry-point-addr-uint281 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point283 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr282, align 8
  %131 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point283({}* %33, i64 2, {}* %.in621, {}* %.in, {}* null, {}* null)
          to label %normal-dest286 unwind label %cleanup-lpad

normal-dest286:                                   ; preds = %normal-dest279
  %.elt570 = extractvalue { {}*, i64 } %131, 0
  %.elt572 = extractvalue { {}*, i64 } %131, 1
  %cond541 = icmp eq i64 %.elt572, 0
  %132 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233380.2 = select i1 %cond541, {}* %132, {}* %.elt570
  br label %tag12

header-check-br295:                               ; preds = %tag7
  %irc-bit-cast299 = bitcast {}* %farg0 to i8*
  %gep300 = getelementptr inbounds i8, i8* %irc-bit-cast299, i64 -9
  %irc-bit-cast301 = bitcast i8* %gep300 to i64*
  %133 = load i64, i64* %irc-bit-cast301, align 8
  %134 = add i64 %133, -1309
  %135 = lshr i64 %134, 3
  %136 = shl i64 %134, 61
  %137 = or i64 %135, %136
  switch i64 %137, label %tag16 [
    i64 2, label %tag23
    i64 4, label %tag23
    i64 5, label %tag23
    i64 0, label %tag23
  ]

normal-dest303:                                   ; preds = %tag38
  %ptrtoint304 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint305 = add i64 %ptrtoint304, 7
  %entry-point-addr306 = inttoptr i64 %entry-point-addr-uint305 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point307 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr306, align 8
  %138 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point307({}* %37, i64 1, {}* %35, {}* null, {}* null, {}* null)
          to label %normal-dest310 unwind label %cleanup-lpad

normal-dest310:                                   ; preds = %normal-dest303
  %.elt618 = extractvalue { {}*, i64 } %138, 0
  %.elt620 = extractvalue { {}*, i64 } %138, 1
  %cond550 = icmp eq i64 %.elt620, 0
  %139 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233347.1 = select i1 %cond550, {}* %139, {}* %.elt618
  br label %tag77

normal-dest324:                                   ; preds = %tag40
  %ptrtoint325 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint326 = add i64 %ptrtoint325, 7
  %entry-point-addr327 = inttoptr i64 %entry-point-addr-uint326 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point328 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr327, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point328({}* %39, i64 2, {}* %.in599, {}* %.in615, {}* null, {}* null)
          to label %normal-dest331 unwind label %cleanup-lpad

normal-dest331:                                   ; preds = %normal-dest324
  %.elt583 = extractvalue { {}*, i64 } %140, 0
  %.elt585 = extractvalue { {}*, i64 } %140, 1
  %cond544 = icmp eq i64 %.elt585, 0
  %141 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233347.2 = select i1 %cond544, {}* %141, {}* %.elt583
  br label %tag77

normal-dest342:                                   ; preds = %tag44
  %ptrtoint343 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint344 = add i64 %ptrtoint343, 7
  %entry-point-addr345 = inttoptr i64 %entry-point-addr-uint344 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point346 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr345, align 8
  %142 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point346({}* %42, i64 2, {}* nonnull %farg0, {}* nonnull %farg1, {}* null, {}* null)
          to label %normal-dest349 unwind label %cleanup-lpad

normal-dest349:                                   ; preds = %normal-dest342
  %.elt632 = extractvalue { {}*, i64 } %142, 0
  %.elt634 = extractvalue { {}*, i64 } %142, 1
  %cond552 = icmp eq i64 %.elt634, 0
  %143 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233417.1 = select i1 %cond552, {}* %143, {}* %.elt632
  br label %tag85

normal-dest361:                                   ; preds = %normal-dest248
  call void @unreachableError()
  unreachable

normal-dest376:                                   ; preds = %tag51
  %144 = invoke float @from_object_float({}* %.in599)
          to label %normal-dest377 unwind label %cleanup-lpad

normal-dest377:                                   ; preds = %normal-dest376
  %145 = fsub float %43, %144
  %146 = invoke {}* @to_object_float(float %145)
          to label %tag81 unwind label %cleanup-lpad

normal-dest379:                                   ; preds = %tag55
  %147 = invoke double @from_object_double({}* nonnull %.in615)
          to label %normal-dest380 unwind label %cleanup-lpad

normal-dest380:                                   ; preds = %normal-dest379
  %148 = fadd double %44, %147
  %149 = invoke {}* @to_object_double(double %148)
          to label %tag77 unwind label %cleanup-lpad

normal-dest391:                                   ; preds = %normal-dest241
  call void @unreachableError()
  unreachable

normal-dest403:                                   ; preds = %tag65
  %150 = invoke float @from_object_float({}* %.in615)
          to label %normal-dest404 unwind label %cleanup-lpad

normal-dest404:                                   ; preds = %normal-dest403
  %151 = fadd float %51, %150
  %152 = invoke {}* @to_object_float(float %151)
          to label %tag77 unwind label %cleanup-lpad

header-check-br406:                               ; preds = %header-check-br126
  %gep411 = getelementptr inbounds i8, i8* %110, i64 -9
  %irc-bit-cast412 = bitcast i8* %gep411 to i64*
  %153 = load i64, i64* %irc-bit-cast412, align 8
  %154 = icmp eq i64 %153, 1325
  br i1 %154, label %tag4, label %tag33

header-check-br413:                               ; preds = %header-check-br484
  br i1 %fixnump-test158, label %tag83, label %switch.early.test674

switch.early.test674:                             ; preds = %header-check-br413
  switch i64 %169, label %tag21 [
    i64 1349, label %tag83
    i64 1309, label %tag83
  ]

header-check-br424:                               ; preds = %tag80
  %gep429 = getelementptr inbounds i8, i8* %84, i64 -9
  %irc-bit-cast430 = bitcast i8* %gep429 to i64*
  %155 = load i64, i64* %irc-bit-cast430, align 8
  %156 = icmp eq i64 %155, 1325
  br i1 %156, label %tag79, label %tag40

normal-dest434:                                   ; preds = %tag74
  %157 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint435 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint436 = add i64 %ptrtoint435, 7
  %entry-point-addr437 = inttoptr i64 %entry-point-addr-uint436 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point438 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr437, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point438({}* %56, i64 2, {}* %farg0, {}* %157, {}* null, {}* null)
          to label %normal-dest441 unwind label %cleanup-lpad

normal-dest441:                                   ; preds = %normal-dest434
  %.elt636 = extractvalue { {}*, i64 } %158, 0
  %.elt638 = extractvalue { {}*, i64 } %158, 1
  %cond553 = icmp eq i64 %.elt638, 0
  %159 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %stoerdame.2 = select i1 %cond553, {}* %159, {}* %.elt636
  %.val.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag61

normal-dest461:                                   ; preds = %tag77
  %.elt587 = extractvalue { {}*, i64 } %58, 0
  %.elt589 = extractvalue { {}*, i64 } %58, 1
  %cond545 = icmp eq i64 %.elt589, 0
  %160 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DIA1_OBJEKT.0 = select i1 %cond545, {}* %160, {}* %.elt587
  %161 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 82), align 16
  %162 = invoke {}* @cc_safe_fdefinition({}* %161)
          to label %normal-dest468 unwind label %cleanup-lpad

normal-dest468:                                   ; preds = %normal-dest461
  %163 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %164 = invoke {}* @cc_safe_fdefinition({}* %163)
          to label %normal-dest470 unwind label %cleanup-lpad

normal-dest470:                                   ; preds = %normal-dest468
  %165 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint471 = ptrtoint {}* %164 to i64
  %entry-point-addr-uint472 = add i64 %ptrtoint471, 7
  %entry-point-addr473 = inttoptr i64 %entry-point-addr-uint472 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point474 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr473, align 8
  %166 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point474({}* %164, i64 2, {}* %stoerdame.0, {}* %165, {}* null, {}* null)
          to label %normal-dest477 unwind label %cleanup-lpad

normal-dest477:                                   ; preds = %normal-dest470
  %.elt591 = extractvalue { {}*, i64 } %166, 0
  %.elt593 = extractvalue { {}*, i64 } %166, 1
  %cond546 = icmp eq i64 %.elt593, 0
  %167 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in609 = select i1 %cond546, {}* %167, {}* %.elt591
  %168 = bitcast {}* %.in609 to i8*
  %tag-only486 = and i64 %93, 7
  %test487 = icmp eq i64 %tag-only486, 1
  br i1 %test487, label %header-check-br484, label %tag73

header-check-br484:                               ; preds = %normal-dest477
  %gep489 = getelementptr inbounds i8, i8* %84, i64 -9
  %irc-bit-cast490 = bitcast i8* %gep489 to i64*
  %169 = load i64, i64* %irc-bit-cast490, align 8
  switch i64 %169, label %header-check-br413 [
    i64 1325, label %tag83
    i64 1341, label %tag83
  ]

normal-dest492:                                   ; preds = %tag78
  %ptrtoint493 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint494 = add i64 %ptrtoint493, 7
  %entry-point-addr495 = inttoptr i64 %entry-point-addr-uint494 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point496 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr495, align 8
  %170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point496({}* %60, i64 2, {}* %.in609, {}* %.in599, {}* null, {}* null)
          to label %normal-dest499 unwind label %cleanup-lpad

normal-dest499:                                   ; preds = %normal-dest492
  %.elt602 = extractvalue { {}*, i64 } %170, 0
  %.elt604 = extractvalue { {}*, i64 } %170, 1
  %cond547 = icmp eq i64 %.elt604, 0
  %171 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233314.2 = select i1 %cond547, {}* %171, {}* %.elt602
  br label %tag81

header-check-br505:                               ; preds = %tag79
  %gep510 = getelementptr inbounds i8, i8* %92, i64 -9
  %irc-bit-cast511 = bitcast i8* %gep510 to i64*
  %172 = load i64, i64* %irc-bit-cast511, align 8
  %173 = icmp eq i64 %172, 1325
  br i1 %173, label %tag55, label %tag40

normal-dest519:                                   ; preds = %tag81
  %.elt606 = extractvalue { {}*, i64 } %61, 0
  %.elt608 = extractvalue { {}*, i64 } %61, 1
  %cond548 = icmp eq i64 %.elt608, 0
  %174 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DIA2_OBJEKT.0 = select i1 %cond548, {}* %174, {}* %.elt606
  %gep527 = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  store {}* %DIA2_OBJEKT.0, {}** %gep527, align 8
  br label %tag10

header-check-br532:                               ; preds = %tag17
  %gep537 = getelementptr inbounds i8, i8* %168, i64 -9
  %irc-bit-cast538 = bitcast i8* %gep537 to i64*
  %175 = load i64, i64* %irc-bit-cast538, align 8
  %176 = icmp ne i64 %175, 1325
  %test487.not = xor i1 %test487, true
  %brmerge = or i1 %176, %test487.not
  br i1 %brmerge, label %tag78, label %header-check-br249
}

; Function Attrs: nounwind
declare void @unreachableError() local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind
declare [0 x {}*]* @cc_multipleValuesArrayAddress() local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^153^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !42 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^153^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G233529.0 = phi {}* [ %18, %header-check-br ], [ %G233529.1, %normal-dest54 ], [ %G233529.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 296), align 16
  %ptrtoint13 = ptrtoint {}* %G233529.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G233529.0, i64 2, {}* %"closure->ND=DAMENTEST", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 296), align 16
  %"closure->ND=DAMENTEST" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DAMENTEST^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMENTEST^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5612, i64 153, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 298), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND=DAMENTEST", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 304), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND=DAMENTEST", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 612 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 296), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 295), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233529.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233529.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DAMENTEST^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !43 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %cond = icmp eq i64 %nargs, 3
  br i1 %cond, label %tag74, label %case-opt0-bb

tag:                                              ; preds = %normal-dest737
  switch i3 %trunc2463, label %tag53 [
    i3 -2, label %tag124
    i3 1, label %header-check-br916
  ]

tag1:                                             ; preds = %normal-dest1000
  switch i3 %trunc2463, label %tag162 [
    i3 -2, label %tag62
    i3 1, label %header-check-br1528
  ]

tag6:                                             ; preds = %normal-dest494
  %9 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 250), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest288 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag8:                                             ; preds = %normal-dest1872, %header-check-br1099
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest302 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag9:                                             ; preds = %normal-dest1268
  %ptrtoint316 = ptrtoint {}* %"closure->LAMBDA1269" to i64
  %tag-only317 = and i64 %ptrtoint316, 7
  %test318 = icmp eq i64 %tag-only317, 1
  br i1 %test318, label %header-check-br315, label %tag133

tag13:                                            ; preds = %normal-dest1243, %normal-dest797, %normal-dest614, %normal-dest550, %tag172
  %G234235.0 = phi {}* [ %117, %tag172 ], [ %G234235.1, %normal-dest550 ], [ %G234235.2, %normal-dest614 ], [ %255, %normal-dest797 ], [ %348, %normal-dest1243 ]
  %ptrtoint362 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint363 = add i64 %ptrtoint362, 7
  %entry-point-addr364 = inttoptr i64 %entry-point-addr-uint363 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point365 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr364, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point365({}* %34, i64 1, {}* %G234235.0, {}* null, {}* null, {}* null)
          to label %normal-dest368 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag22:                                            ; preds = %tag137
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest452 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag23:                                            ; preds = %tag23.backedge, %tag74
  %X466.0 = phi {}* [ null, %tag74 ], [ %X466.0.be, %tag23.backedge ]
  %16 = ptrtoint {}* %X466.0 to i64
  %fixnum-tag-only1986 = and i64 %16, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only1986, 0
  br i1 %fixnump-test, label %tag218, label %tag184

tag26:                                            ; preds = %header-check-br404
  %17 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest471 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag27:                                            ; preds = %normal-dest1786, %normal-dest1728, %header-check-br1016
  %G233868.0 = phi {}* [ %"closure->LAMBDA495", %header-check-br1016 ], [ %G233868.1, %normal-dest1728 ], [ %G233868.2, %normal-dest1786 ]
  %ptrtoint474 = ptrtoint {}* %G233868.0 to i64
  %entry-point-addr-uint475 = add i64 %ptrtoint474, 7
  %entry-point-addr476 = inttoptr i64 %entry-point-addr-uint475 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point477 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr476, align 8
  %18 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point477({}* %G233868.0, i64 1, {}* %215, {}* null, {}* null, {}* null)
          to label %tag227 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag29:                                            ; preds = %normal-dest1587
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 307), align 8
  %"closure->LAMBDA495" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %19, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.1", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.1^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5612, i64 153, i64 0, i64 0)
          to label %normal-dest494 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag30:                                            ; preds = %normal-dest601
  br i1 %fixnump-test, label %tag172, label %tag40

tag32:                                            ; preds = %header-check-br257
  %20 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest504 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag34:                                            ; preds = %header-check-br1484
  %21 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest507 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag35:                                            ; preds = %tag220
  %22 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest512 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag36:                                            ; preds = %tag163
  %23 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %49, i64 %16)
  %result = extractvalue { i64, i1 } %23, 0
  %overflow = extractvalue { i64, i1 } %23, 1
  %24 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag206, label %tag156

tag38:                                            ; preds = %normal-dest1309, %normal-dest1284, %normal-dest1158
  br i1 %consp-test1047, label %tag236, label %tag173

tag40:                                            ; preds = %tag59, %header-check-br1610, %header-check-br1464, %tag66, %tag30
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest542 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag42:                                            ; preds = %tag62
  %27 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest556 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag44:                                            ; preds = %header-check-br1891, %normal-dest1253, %normal-dest807
  %G233929.0 = phi {}* [ %G233929.1, %normal-dest807 ], [ %G233929.2, %normal-dest1253 ], [ %"closure->LAMBDA495", %header-check-br1891 ]
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 262), align 16
  %29 = invoke {}* @cc_safe_symbol_value({}* %28)
          to label %normal-dest560 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag45:                                            ; preds = %normal-dest1197, %header-check-br485
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest573 unwind label %cleanup-lpad.loopexit

tag48:                                            ; preds = %normal-dest1327
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag226

tag50:                                            ; preds = %tag226
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 186), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest601 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag51:                                            ; preds = %tag172
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest607 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag53:                                            ; preds = %tag, %tag198, %header-check-br1484, %tag124, %header-check-br916
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest621 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag54:                                            ; preds = %normal-dest1830, %normal-dest1458, %normal-dest1239, %normal-dest514, %tag95
  %G233646.0 = phi {}* [ %60, %tag95 ], [ %226, %normal-dest514 ], [ %345, %normal-dest1239 ], [ %G233646.1, %normal-dest1458 ], [ %G233646.2, %normal-dest1830 ]
  %ptrtoint634 = ptrtoint {}* %263 to i64
  %entry-point-addr-uint635 = add i64 %ptrtoint634, 7
  %entry-point-addr636 = inttoptr i64 %entry-point-addr-uint635 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point637 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr636, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point637({}* %263, i64 2, {}* %264, {}* %G233646.0, {}* null, {}* null)
          to label %normal-dest640 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag58:                                            ; preds = %tag174
  switch i3 %trunc2463, label %tag71 [
    i3 -2, label %tag186
    i3 1, label %header-check-br444
  ]

tag59:                                            ; preds = %normal-dest601
  switch i3 %trunc2463, label %tag40 [
    i3 -2, label %tag66
    i3 1, label %header-check-br1610
  ]

tag62:                                            ; preds = %tag1
  %single-float-tag-only691 = and i64 %16, 7
  %40 = icmp eq i64 %single-float-tag-only691, 6
  br i1 %40, label %tag42, label %tag162

tag65:                                            ; preds = %normal-dest1601, %normal-dest628, %normal-dest509, %normal-dest460, %tag137
  %G234159.0 = phi {}* [ %91, %tag137 ], [ %G234159.1, %normal-dest460 ], [ %223, %normal-dest509 ], [ %G234159.2, %normal-dest628 ], [ %418, %normal-dest1601 ]
  %ptrtoint710 = ptrtoint {}* %G234157.0 to i64
  %entry-point-addr-uint711 = add i64 %ptrtoint710, 7
  %entry-point-addr712 = inttoptr i64 %entry-point-addr-uint711 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point713 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr712, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point713({}* %G234157.0, i64 2, {}* %44, {}* %G234159.0, {}* null, {}* null)
          to label %tag185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag66:                                            ; preds = %tag59
  %single-float-tag-only721 = and i64 %16, 7
  %42 = icmp eq i64 %single-float-tag-only721, 6
  br i1 %42, label %tag145, label %tag40

tag68:                                            ; preds = %normal-dest1403, %header-check-br821, %normal-dest272
  %G234157.0 = phi {}* [ %G234157.1, %normal-dest272 ], [ %"closure->LAMBDA", %header-check-br821 ], [ %G234157.2, %normal-dest1403 ]
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 262), align 16
  %44 = invoke {}* @cc_safe_symbol_value({}* %43)
          to label %normal-dest737 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag69:                                            ; preds = %normal-dest640, %normal-dest890
  br i1 %fixnump-test, label %tag131, label %tag159

tag70:                                            ; preds = %header-check-br1914, %normal-dest1674, %normal-dest1441
  %G233882.0 = phi {}* [ %G233882.1, %normal-dest1441 ], [ %G233882.2, %normal-dest1674 ], [ %"closure->LAMBDA495", %header-check-br1914 ]
  %ptrtoint746 = ptrtoint {}* %G233882.0 to i64
  %entry-point-addr-uint747 = add i64 %ptrtoint746, 7
  %entry-point-addr748 = inttoptr i64 %entry-point-addr-uint747 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point749 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr748, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point749({}* %G233882.0, i64 1, {}* %OUT233471.0, {}* null, {}* null, {}* null)
          to label %tag227 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag71:                                            ; preds = %tag58, %tag229, %tag186, %header-check-br444, %header-check-br404
  %46 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest758 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag73:                                            ; preds = %normal-dest816
  switch i3 %trunc2463, label %tag169 [
    i3 -2, label %tag220
    i3 1, label %header-check-br1603
  ]

tag74:                                            ; preds = %165, %entry
  %48 = ptrtoint {}* %farg0 to i64
  %fixnum-tag-only17682337 = and i64 %48, 3
  %fixnump-test1769 = icmp eq i64 %fixnum-tag-only17682337, 0
  %49 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only6041989 = and i64 %49, 3
  %fixnump-test605 = icmp eq i64 %fixnum-tag-only6041989, 0
  %trunc2463 = trunc i64 %49 to i3
  %irc-bit-cast913 = bitcast {}* %farg1 to i8*
  %gep914 = getelementptr inbounds i8, i8* %irc-bit-cast913, i64 -9
  %irc-bit-cast915 = bitcast i8* %gep914 to i64*
  %single-float-tag-only1005 = and i64 %48, 7
  %50 = icmp eq i64 %single-float-tag-only1005, 6
  %test537 = icmp ne i64 %single-float-tag-only1005, 1
  %irc-bit-cast538 = bitcast {}* %farg0 to i8*
  %gep539 = getelementptr inbounds i8, i8* %irc-bit-cast538, i64 -9
  %irc-bit-cast540 = bitcast i8* %gep539 to i64*
  br label %tag23

tag77:                                            ; preds = %tag199
  switch i3 %trunc2463, label %tag176 [
    i3 -2, label %tag200
    i3 1, label %header-check-br909
  ]

tag81:                                            ; preds = %tag229
  %51 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %49, i64 %16)
  %result785 = extractvalue { i64, i1 } %51, 0
  %overflow786 = extractvalue { i64, i1 } %51, 1
  %52 = inttoptr i64 %result785 to {}*
  br i1 %overflow786, label %tag183, label %tag217

tag83:                                            ; preds = %header-check-br1464
  %53 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest796 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag86:                                            ; preds = %tag240, %header-check-br1657
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest800 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag87:                                            ; preds = %normal-dest1049
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag226

tag88:                                            ; preds = %tag173, %tag19.backedge, %normal-dest1814
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 290), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest814 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag89:                                            ; preds = %normal-dest386
  %ptrtoint822 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only823 = and i64 %ptrtoint822, 7
  %test824 = icmp eq i64 %tag-only823, 1
  br i1 %test824, label %header-check-br821, label %tag164

tag95:                                            ; preds = %tag113
  %59 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %49, i64 %16)
  %result870 = extractvalue { i64, i1 } %59, 0
  %overflow871 = extractvalue { i64, i1 } %59, 1
  %60 = inttoptr i64 %result870 to {}*
  br i1 %overflow871, label %tag231, label %tag54

tag96:                                            ; preds = %normal-dest1655, %normal-dest1625, %normal-dest1387, %normal-dest558, %tag235
  %G233606.0 = phi {}* [ %157, %tag235 ], [ %233, %normal-dest558 ], [ %G233606.1, %normal-dest1387 ], [ %G233606.2, %normal-dest1625 ], [ %430, %normal-dest1655 ]
  %ptrtoint872 = ptrtoint {}* %298 to i64
  %entry-point-addr-uint873 = add i64 %ptrtoint872, 7
  %entry-point-addr874 = inttoptr i64 %entry-point-addr-uint873 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point875 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr874, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point875({}* %298, i64 1, {}* %G233606.0, {}* null, {}* null, {}* null)
          to label %normal-dest878 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag98:                                            ; preds = %tag226
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %62 = insertvalue { {}*, i64 } undef, {}* %G233549.0, 0
  %63 = insertvalue { {}*, i64 } %62, i64 1, 1
  ret { {}*, i64 } %63

tag103:                                           ; preds = %normal-dest1708
  %ptrtoint945 = ptrtoint {}* %"closure->LAMBDA1269" to i64
  %tag-only946 = and i64 %ptrtoint945, 7
  %test947 = icmp eq i64 %tag-only946, 1
  br i1 %test947, label %header-check-br944, label %tag104

tag104:                                           ; preds = %tag103, %header-check-br1631
  %64 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest954 unwind label %cleanup-lpad.loopexit

tag105:                                           ; preds = %normal-dest1587
  %66 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %67 = invoke {}* @cc_safe_fdefinition({}* %66)
          to label %normal-dest968 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag106:                                           ; preds = %tag184
  br i1 %50, label %tag115, label %tag119

tag108:                                           ; preds = %normal-dest1800
  %ptrtoint1008 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only1009 = and i64 %ptrtoint1008, 7
  %test1010 = icmp eq i64 %tag-only1009, 1
  br i1 %test1010, label %header-check-br1007, label %tag139

tag110:                                           ; preds = %tag114
  %68 = add i64 %71, -3
  %69 = inttoptr i64 %68 to {}**
  %70 = load {}*, {}** %69, align 8
  br label %tag148

tag111:                                           ; preds = %normal-dest295
  %ptrtoint1017 = ptrtoint {}* %"closure->LAMBDA495" to i64
  %tag-only1018 = and i64 %ptrtoint1017, 7
  %test1019 = icmp eq i64 %tag-only1018, 1
  br i1 %test1019, label %header-check-br1016, label %tag221

tag113:                                           ; preds = %normal-dest816
  br i1 %fixnump-test, label %tag95, label %tag169

tag114:                                           ; preds = %tag114.preheader, %tag19.backedge
  %.val2442 = phi {}* [ %400, %tag19.backedge ], [ %460, %tag114.preheader ]
  %"%DOLIST-VAR.02469" = phi {}* [ %"%DOLIST-VAR.0.be", %tag19.backedge ], [ %"%DOLIST-VAR.2", %tag114.preheader ]
  %71 = ptrtoint {}* %"%DOLIST-VAR.02469" to i64
  %tag-only10462035 = and i64 %71, 7
  %consp-test1047 = icmp eq i64 %tag-only10462035, 3
  %.val2441 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G233861.0 = select i1 %consp-test1047, {}* %.val2441, {}* %.val2442
  %72 = icmp eq {}* %G233861.0, %.val2442
  br i1 %72, label %tag121, label %tag110

tag115:                                           ; preds = %tag106
  %73 = invoke float @from_object_float({}* %X466.0)
          to label %normal-dest1048 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag119:                                           ; preds = %header-check-br836, %tag184, %tag218, %tag106, %header-check-br534
  %74 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest1068 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag121:                                           ; preds = %tag114
  %76 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest1082 unwind label %cleanup-lpad.loopexit

tag123:                                           ; preds = %normal-dest1049
  %78 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag226

tag124:                                           ; preds = %tag
  %single-float-tag-only1095 = and i64 %16, 7
  %79 = icmp eq i64 %single-float-tag-only1095, 6
  br i1 %79, label %tag190, label %tag53

tag125:                                           ; preds = %tag186
  %80 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest1096 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag131:                                           ; preds = %tag69
  %81 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %16, i64 4)
  %result666 = extractvalue { i64, i1 } %81, 0
  %overflow667 = extractvalue { i64, i1 } %81, 1
  %82 = inttoptr i64 %result666 to {}*
  br i1 %overflow667, label %tag157, label %tag23.backedge

tag23.backedge:                                   ; preds = %tag131, %normal-dest1359, %normal-dest1373
  %X466.0.be = phi {}* [ %X466.1, %normal-dest1359 ], [ %X466.2, %normal-dest1373 ], [ %82, %tag131 ]
  br label %tag23

tag132:                                           ; preds = %normal-dest1858, %normal-dest961, %header-check-br944
  %G233694.0 = phi {}* [ %"closure->LAMBDA1269", %header-check-br944 ], [ %G233694.1, %normal-dest961 ], [ %G233694.2, %normal-dest1858 ]
  %83 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest1151 unwind label %cleanup-lpad.loopexit

tag133:                                           ; preds = %tag9, %header-check-br1328
  %85 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest1176 unwind label %cleanup-lpad.loopexit

tag134:                                           ; preds = %normal-dest1708
  %87 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 253), align 8
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest1190 unwind label %cleanup-lpad.loopexit

tag135:                                           ; preds = %normal-dest1327
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag226

tag137:                                           ; preds = %tag198
  %90 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %49, i64 %16)
  %result1222 = extractvalue { i64, i1 } %90, 0
  %overflow1223 = extractvalue { i64, i1 } %90, 1
  %91 = inttoptr i64 %result1222 to {}*
  br i1 %overflow1223, label %tag22, label %tag65

tag138:                                           ; preds = %tag158
  %92 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag226

tag139:                                           ; preds = %tag108, %header-check-br411
  %93 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest1225 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag140:                                           ; preds = %header-check-br1770
  %95 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest1238 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag145:                                           ; preds = %tag66
  %96 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest1242 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag148:                                           ; preds = %normal-dest1089, %tag110
  %WER.0 = phi {}* [ %70, %tag110 ], [ %WER.1, %normal-dest1089 ]
  %97 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 307), align 8
  %"closure->LAMBDA1269" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %97, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.2", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5612, i64 153, i64 0, i64 0)
          to label %normal-dest1268 unwind label %cleanup-lpad.loopexit

tag150:                                           ; preds = %normal-dest1183, %normal-dest428, %header-check-br315
  %G233773.0 = phi {}* [ %"closure->LAMBDA1269", %header-check-br315 ], [ %G233773.1, %normal-dest428 ], [ %G233773.2, %normal-dest1183 ]
  %98 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 262), align 16
  %99 = invoke {}* @cc_safe_symbol_value({}* %98)
          to label %normal-dest1275 unwind label %cleanup-lpad.loopexit

tag151:                                           ; preds = %header-check-br1204, %normal-dest700, %normal-dest580
  %G233714.0 = phi {}* [ %G233714.1, %normal-dest580 ], [ %G233714.2, %normal-dest700 ], [ %"closure->LAMBDA1269", %header-check-br1204 ]
  %100 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest1302 unwind label %cleanup-lpad.loopexit

tag152:                                           ; preds = %header-check-br534
  %102 = invoke double @from_object_double({}* nonnull %X466.0)
          to label %normal-dest1326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag156:                                           ; preds = %normal-dest1694, %normal-dest1499, %normal-dest1448, %normal-dest505, %tag36
  %G234017.0 = phi {}* [ %24, %tag36 ], [ %220, %normal-dest505 ], [ %385, %normal-dest1448 ], [ %G234017.1, %normal-dest1499 ], [ %G234017.2, %normal-dest1694 ]
  %ptrtoint1340 = ptrtoint {}* %G234015.0 to i64
  %entry-point-addr-uint1341 = add i64 %ptrtoint1340, 7
  %entry-point-addr1342 = inttoptr i64 %entry-point-addr-uint1341 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1343 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1342, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1343({}* %G234015.0, i64 2, {}* %192, {}* %G234017.0, {}* null, {}* null)
          to label %tag185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag157:                                           ; preds = %tag131
  %104 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %105 = invoke {}* @cc_safe_fdefinition({}* %104)
          to label %normal-dest1352 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag158:                                           ; preds = %tag218
  %106 = icmp slt {}* %X466.0, %farg0
  br i1 %106, label %tag138, label %tag197

tag159:                                           ; preds = %tag69
  %107 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %108 = invoke {}* @cc_safe_fdefinition({}* %107)
          to label %normal-dest1366 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag162:                                           ; preds = %tag1, %tag238, %header-check-br1528, %tag62, %header-check-br657
  %109 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %110 = invoke {}* @cc_safe_fdefinition({}* %109)
          to label %normal-dest1380 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag163:                                           ; preds = %tag199
  br i1 %fixnump-test, label %tag36, label %tag176

tag164:                                           ; preds = %tag89, %header-check-br1519
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %112 = invoke {}* @cc_safe_fdefinition({}* %111)
          to label %normal-dest1396 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag168:                                           ; preds = %tag200
  %113 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest1447 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag169:                                           ; preds = %tag73, %tag220, %header-check-br1770, %header-check-br1603, %tag113
  %114 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %115 = invoke {}* @cc_safe_fdefinition({}* %114)
          to label %normal-dest1451 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag172:                                           ; preds = %tag30
  %116 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %49, i64 %16)
  %result1471 = extractvalue { i64, i1 } %116, 0
  %overflow1472 = extractvalue { i64, i1 } %116, 1
  %117 = inttoptr i64 %result1471 to {}*
  br i1 %overflow1472, label %tag51, label %tag13

tag173:                                           ; preds = %tag38
  %118 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %119 = icmp eq {}* %"%DOLIST-VAR.02469", %118
  %.val2443 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G233687.0 = select i1 %119, {}* %.val2443, {}* %118
  %120 = icmp eq {}* %G233687.0, %118
  br i1 %120, label %tag177, label %tag88

tag174:                                           ; preds = %header-check-br1878, %normal-dest1142, %normal-dest309
  %G234056.0 = phi {}* [ %G234056.1, %normal-dest309 ], [ %G234056.2, %normal-dest1142 ], [ %"closure->LAMBDA", %header-check-br1878 ]
  br i1 %fixnump-test605, label %tag229, label %tag58

tag176:                                           ; preds = %tag77, %tag200, %tag163, %header-check-br909, %header-check-br257
  %121 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %122 = invoke {}* @cc_safe_fdefinition({}* %121)
          to label %normal-dest1492 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag177:                                           ; preds = %tag173
  %123 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %124 = invoke {}* @cc_safe_fdefinition({}* %123)
          to label %normal-dest1506 unwind label %cleanup-lpad.loopexit

tag183:                                           ; preds = %tag81
  %125 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %126 = invoke {}* @cc_safe_fdefinition({}* %125)
          to label %normal-dest1552 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag184:                                           ; preds = %tag23
  %trunc = trunc i64 %16 to i3
  switch i3 %trunc, label %tag119 [
    i3 -2, label %tag106
    i3 1, label %header-check-br836
  ]

tag185:                                           ; preds = %tag65, %tag217, %tag156
  %127 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 264), align 16
  %128 = invoke {}* @cc_safe_fdefinition({}* %127)
          to label %normal-dest1567 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag186:                                           ; preds = %tag58
  %single-float-tag-only1599 = and i64 %16, 7
  %129 = icmp eq i64 %single-float-tag-only1599, 6
  br i1 %129, label %tag125, label %tag71

tag190:                                           ; preds = %tag124
  %130 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest1600 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag193:                                           ; preds = %tag235
  %131 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %132 = invoke {}* @cc_safe_fdefinition({}* %131)
          to label %normal-dest1618 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag197:                                           ; preds = %tag158
  %133 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag226

tag198:                                           ; preds = %normal-dest737
  br i1 %fixnump-test, label %tag137, label %tag53

tag199:                                           ; preds = %normal-dest1232, %normal-dest1033, %header-check-br1007
  %G234015.0 = phi {}* [ %"closure->LAMBDA", %header-check-br1007 ], [ %G234015.1, %normal-dest1033 ], [ %G234015.2, %normal-dest1232 ]
  br i1 %fixnump-test605, label %tag163, label %tag77

tag200:                                           ; preds = %tag77
  %single-float-tag-only1646 = and i64 %16, 7
  %134 = icmp eq i64 %single-float-tag-only1646, 6
  br i1 %134, label %tag168, label %tag176

tag202:                                           ; preds = %header-check-br657
  %135 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest1654 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag204:                                           ; preds = %normal-dest1908, %header-check-br278
  %136 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %137 = invoke {}* @cc_safe_fdefinition({}* %136)
          to label %normal-dest1667 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag206:                                           ; preds = %tag36
  %138 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %139 = invoke {}* @cc_safe_fdefinition({}* %138)
          to label %normal-dest1687 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag208:                                           ; preds = %normal-dest1268
  %140 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 250), align 16
  %141 = invoke {}* @cc_safe_fdefinition({}* %140)
          to label %normal-dest1701 unwind label %cleanup-lpad.loopexit

tag217:                                           ; preds = %normal-dest1559, %normal-dest1097, %normal-dest765, %normal-dest472, %tag81
  %G234058.0 = phi {}* [ %52, %tag81 ], [ %211, %normal-dest472 ], [ %G234058.1, %normal-dest765 ], [ %317, %normal-dest1097 ], [ %G234058.2, %normal-dest1559 ]
  %ptrtoint1757 = ptrtoint {}* %G234056.0 to i64
  %entry-point-addr-uint1758 = add i64 %ptrtoint1757, 7
  %entry-point-addr1759 = inttoptr i64 %entry-point-addr-uint1758 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1760 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1759, align 8
  %142 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1760({}* %G234056.0, i64 2, {}* %OUT2334541479.0, {}* %G234058.0, {}* null, {}* null)
          to label %tag185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag218:                                           ; preds = %tag23
  br i1 %fixnump-test1769, label %tag158, label %tag119

tag220:                                           ; preds = %tag73
  %single-float-tag-only1777 = and i64 %16, 7
  %143 = icmp eq i64 %single-float-tag-only1777, 6
  br i1 %143, label %tag35, label %tag169

tag221:                                           ; preds = %tag111, %header-check-br434
  %144 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %145 = invoke {}* @cc_safe_fdefinition({}* %144)
          to label %normal-dest1779 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag223:                                           ; preds = %normal-dest386
  %146 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 250), align 16
  %147 = invoke {}* @cc_safe_fdefinition({}* %146)
          to label %normal-dest1793 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag226:                                           ; preds = %normal-dest1075, %tag197, %tag138, %tag135, %tag123, %tag87, %tag48
  %G233549.0 = phi {}* [ %92, %tag138 ], [ %133, %tag197 ], [ %56, %tag87 ], [ %78, %tag123 ], [ %89, %tag135 ], [ %32, %tag48 ], [ %G233549.1, %normal-dest1075 ]
  %148 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %149 = icmp eq {}* %G233549.0, %148
  br i1 %149, label %tag98, label %tag50

tag227:                                           ; preds = %tag27, %tag70, %normal-dest560
  %150 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %151 = invoke {}* @cc_safe_fdefinition({}* %150)
          to label %normal-dest1807 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag229:                                           ; preds = %tag174
  br i1 %fixnump-test, label %tag81, label %tag71

tag231:                                           ; preds = %tag95
  %152 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %153 = invoke {}* @cc_safe_fdefinition({}* %152)
          to label %normal-dest1823 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag234:                                           ; preds = %normal-dest1800
  %154 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 253), align 8
  %155 = invoke {}* @cc_safe_fdefinition({}* %154)
          to label %normal-dest1865 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag235:                                           ; preds = %tag238
  %156 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %49, i64 %16)
  %result1887 = extractvalue { i64, i1 } %156, 0
  %overflow1888 = extractvalue { i64, i1 } %156, 1
  %157 = inttoptr i64 %result1887 to {}*
  br i1 %overflow1888, label %tag193, label %tag96

tag236:                                           ; preds = %tag38
  %158 = add i64 %71, 5
  %159 = inttoptr i64 %158 to {}**
  %160 = load {}*, {}** %159, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag19.backedge

tag238:                                           ; preds = %normal-dest1000
  br i1 %fixnump-test, label %tag235, label %tag162

tag240:                                           ; preds = %normal-dest494
  %ptrtoint1892 = ptrtoint {}* %"closure->LAMBDA495" to i64
  %tag-only1893 = and i64 %ptrtoint1892, 7
  %test1894 = icmp eq i64 %tag-only1893, 1
  br i1 %test1894, label %header-check-br1891, label %tag86

tag241:                                           ; preds = %normal-dest295
  %161 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 253), align 8
  %162 = invoke {}* @cc_safe_fdefinition({}* %161)
          to label %normal-dest1901 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

cleanup-lpad.loopexit:                            ; preds = %maybe-more-tests1336, %normal-dest421, %tag45, %normal-dest573, %maybe-more-tests493, %normal-dest693, %tag104, %normal-dest954, %tag121, %normal-dest1082, %tag132, %normal-dest1151, %normal-dest1158, %tag133, %normal-dest1176, %tag134, %normal-dest1190, %tag148, %tag150, %normal-dest1275, %normal-dest1277, %normal-dest1284, %tag151, %normal-dest1302, %normal-dest1309, %tag177, %normal-dest1506, %tag208, %normal-dest1701, %maybe-more-tests1639, %normal-dest1851
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest1901, %tag241, %normal-dest1865, %tag234, %normal-dest1823, %tag231, %normal-dest1807, %tag227, %normal-dest1793, %tag223, %normal-dest1779, %tag221, %tag217, %normal-dest1721, %maybe-more-tests442, %normal-dest1687, %tag206, %normal-dest1667, %tag204, %normal-dest1655, %normal-dest1654, %tag202, %normal-dest1618, %tag193, %normal-dest1601, %normal-dest1600, %tag190, %normal-dest1580, %normal-dest1574, %normal-dest1567, %tag185, %normal-dest1552, %tag183, %normal-dest1492, %tag176, %normal-dest1451, %tag169, %normal-dest1448, %normal-dest1447, %tag168, %normal-dest1434, %maybe-more-tests286, %normal-dest1396, %tag164, %normal-dest1380, %tag162, %normal-dest1366, %tag159, %normal-dest1352, %tag157, %tag156, %normal-dest1326, %tag152, %normal-dest1246, %maybe-more-tests1665, %normal-dest1243, %normal-dest1242, %tag145, %normal-dest1239, %normal-dest1238, %tag140, %normal-dest1225, %tag139, %normal-dest1135, %maybe-more-tests1107, %normal-dest1097, %normal-dest1096, %tag125, %normal-dest1068, %tag119, %normal-dest1048, %tag115, %normal-dest1026, %maybe-more-tests419, %normal-dest993, %normal-dest986, %normal-dest979, %normal-dest972, %normal-dest970, %normal-dest968, %tag105, %normal-dest890, %normal-dest878, %tag96, %normal-dest814, %tag88, %normal-dest800, %tag86, %normal-dest797, %normal-dest796, %tag83, %normal-dest758, %tag71, %tag70, %tag68, %tag65, %normal-dest640, %tag54, %normal-dest621, %tag53, %normal-dest607, %tag51, %tag50, %normal-dest560, %tag44, %normal-dest558, %normal-dest556, %tag42, %normal-dest542, %tag40, %normal-dest514, %normal-dest512, %tag35, %normal-dest509, %normal-dest507, %tag34, %normal-dest505, %normal-dest504, %tag32, %tag29, %tag27, %normal-dest472, %normal-dest471, %tag26, %normal-dest452, %tag22, %normal-dest381, %normal-dest374, %normal-dest368, %tag13, %normal-dest302, %tag8, %normal-dest288, %tag6, %normal-dest265, %maybe-more-tests1527
  %lpad.loopexit2466 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %167, %164
  %lpad.loopexit.split-lp2467 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit2466, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp2467, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

case-opt0-bb:                                     ; preds = %entry
  %163 = icmp ult i64 %nargs, 2
  br i1 %163, label %164, label %165

; <label>:164:                                    ; preds = %case-opt0-bb
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMENTEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %164
  unreachable

; <label>:165:                                    ; preds = %case-opt0-bb
  %166 = icmp ugt i64 %nargs, 3
  br i1 %166, label %167, label %tag74

; <label>:167:                                    ; preds = %165
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMENTEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc2370 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc2370:                                       ; preds = %167
  unreachable

header-check-br257:                               ; preds = %header-check-br909
  %irc-bit-cast261 = bitcast {}* %X466.0 to i8*
  %gep262 = getelementptr inbounds i8, i8* %irc-bit-cast261, i64 -9
  %irc-bit-cast263 = bitcast i8* %gep262 to i64*
  %168 = load i64, i64* %irc-bit-cast263, align 8
  %169 = icmp eq i64 %168, 1325
  br i1 %169, label %tag32, label %tag176

normal-dest265:                                   ; preds = %maybe-more-tests1527
  %ptrtoint266 = ptrtoint {}* %404 to i64
  %entry-point-addr-uint267 = add i64 %ptrtoint266, 7
  %entry-point-addr268 = inttoptr i64 %entry-point-addr-uint267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr268, align 8
  %170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point269({}* %404, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest272 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest272:                                   ; preds = %normal-dest265
  %.elt2244 = extractvalue { {}*, i64 } %170, 0
  %.elt2246 = extractvalue { {}*, i64 } %170, 1
  %cond1969 = icmp eq i64 %.elt2246, 0
  %171 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234157.1 = select i1 %cond1969, {}* %171, {}* %.elt2244
  br label %tag68

header-check-br278:                               ; preds = %header-check-br1914
  %.off2454 = add i64 %474, -1001
  %172 = icmp ult i64 %.off2454, 5
  br i1 %172, label %maybe-more-tests286, label %tag204

maybe-more-tests286:                              ; preds = %header-check-br278
  %173 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %174 = invoke {}* @cc_safe_fdefinition({}* %173)
          to label %normal-dest1434 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest288:                                   ; preds = %tag6
  %ptrtoint289 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint290 = add i64 %ptrtoint289, 7
  %entry-point-addr291 = inttoptr i64 %entry-point-addr-uint290 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point292 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr291, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point292({}* %10, i64 1, {}* %215, {}* null, {}* null, {}* null)
          to label %normal-dest295 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest295:                                   ; preds = %normal-dest288
  %.elt2177 = extractvalue { {}*, i64 } %175, 0
  %.elt2179 = extractvalue { {}*, i64 } %175, 1
  %cond1956 = icmp eq i64 %.elt2179, 0
  %176 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233899.0 = select i1 %cond1956, {}* %176, {}* %.elt2177
  %177 = icmp eq {}* %G233899.0, %176
  br i1 %177, label %tag111, label %tag241

normal-dest302:                                   ; preds = %tag8
  %178 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %179 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %180 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %181 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 255), align 8
  %ptrtoint303 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint304 = add i64 %ptrtoint303, 7
  %entry-point-addr305 = inttoptr i64 %entry-point-addr-uint304 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point306 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr305, align 8
  %182 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point306({}* %12, i64 5, {}* %178, {}* %179, {}* %"closure->LAMBDA", {}* %180, {}* %181)
          to label %normal-dest309 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest309:                                   ; preds = %normal-dest302
  %.elt2286 = extractvalue { {}*, i64 } %182, 0
  %.elt2288 = extractvalue { {}*, i64 } %182, 1
  %cond1977 = icmp eq i64 %.elt2288, 0
  %183 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234056.1 = select i1 %cond1977, {}* %183, {}* %.elt2286
  br label %tag174

header-check-br315:                               ; preds = %tag9
  %irc-bit-cast319 = bitcast {}* %"closure->LAMBDA1269" to i8*
  %gep320 = getelementptr inbounds i8, i8* %irc-bit-cast319, i64 -9
  %irc-bit-cast321 = bitcast i8* %gep320 to i64*
  %184 = load i64, i64* %irc-bit-cast321, align 8
  %.off = add i64 %184, -913
  %185 = icmp ult i64 %.off, 85
  br i1 %185, label %tag150, label %header-check-br1328

normal-dest368:                                   ; preds = %tag13
  %186 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 230), align 16
  %187 = invoke {}* @cc_safe_fdefinition({}* %186)
          to label %normal-dest374 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest374:                                   ; preds = %normal-dest368
  %188 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 232), align 16
  %189 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint375 = ptrtoint {}* %187 to i64
  %entry-point-addr-uint376 = add i64 %ptrtoint375, 7
  %entry-point-addr377 = inttoptr i64 %entry-point-addr-uint376 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point378 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr377, align 8
  %190 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point378({}* %187, i64 2, {}* %188, {}* %189, {}* null, {}* null)
          to label %normal-dest381 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest381:                                   ; preds = %normal-dest374
  %191 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 307), align 8
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %191, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5612, i64 153, i64 0, i64 0)
          to label %normal-dest386 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest386:                                   ; preds = %normal-dest381
  %192 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %193 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %194 = icmp eq {}* %192, %193
  br i1 %194, label %tag223, label %tag89

header-check-br404:                               ; preds = %header-check-br444
  %irc-bit-cast408 = bitcast {}* %X466.0 to i8*
  %gep409 = getelementptr inbounds i8, i8* %irc-bit-cast408, i64 -9
  %irc-bit-cast410 = bitcast i8* %gep409 to i64*
  %195 = load i64, i64* %irc-bit-cast410, align 8
  %196 = icmp eq i64 %195, 1325
  br i1 %196, label %tag26, label %tag71

header-check-br411:                               ; preds = %header-check-br1007
  %.off2465 = add i64 %299, -1001
  %197 = icmp ult i64 %.off2465, 5
  br i1 %197, label %maybe-more-tests419, label %tag139

maybe-more-tests419:                              ; preds = %header-check-br411
  %198 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %199 = invoke {}* @cc_safe_fdefinition({}* %198)
          to label %normal-dest1026 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest421:                                   ; preds = %maybe-more-tests1336
  %ptrtoint422 = ptrtoint {}* %368 to i64
  %entry-point-addr-uint423 = add i64 %ptrtoint422, 7
  %entry-point-addr424 = inttoptr i64 %entry-point-addr-uint423 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point425 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr424, align 8
  %200 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point425({}* %368, i64 1, {}* nonnull %"closure->LAMBDA1269", {}* null, {}* null, {}* null)
          to label %normal-dest428 unwind label %cleanup-lpad.loopexit

normal-dest428:                                   ; preds = %normal-dest421
  %.elt2054 = extractvalue { {}*, i64 } %200, 0
  %.elt2056 = extractvalue { {}*, i64 } %200, 1
  %cond1933 = icmp eq i64 %.elt2056, 0
  %201 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233773.1 = select i1 %cond1933, {}* %201, {}* %.elt2054
  br label %tag150

header-check-br434:                               ; preds = %header-check-br1016
  %.off2456 = add i64 %301, -1001
  %202 = icmp ult i64 %.off2456, 5
  br i1 %202, label %maybe-more-tests442, label %tag221

maybe-more-tests442:                              ; preds = %header-check-br434
  %203 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %204 = invoke {}* @cc_safe_fdefinition({}* %203)
          to label %normal-dest1721 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br444:                               ; preds = %tag58
  %205 = load i64, i64* %irc-bit-cast915, align 8
  %206 = icmp eq i64 %205, 1325
  %tag-only406 = and i64 %16, 7
  %test407 = icmp eq i64 %tag-only406, 1
  %or.cond2433 = and i1 %test407, %206
  br i1 %or.cond2433, label %header-check-br404, label %tag71

normal-dest452:                                   ; preds = %tag22
  %ptrtoint454 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint455 = add i64 %ptrtoint454, 7
  %entry-point-addr456 = inttoptr i64 %entry-point-addr-uint455 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point457 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr456, align 8
  %207 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point457({}* %15, i64 1, {}* %91, {}* null, {}* null, {}* null)
          to label %normal-dest460 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest460:                                   ; preds = %normal-dest452
  %.elt2240 = extractvalue { {}*, i64 } %207, 0
  %.elt2242 = extractvalue { {}*, i64 } %207, 1
  %cond1968 = icmp eq i64 %.elt2242, 0
  %208 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234159.1 = select i1 %cond1968, {}* %208, {}* %.elt2240
  br label %tag65

normal-dest471:                                   ; preds = %tag26
  %209 = invoke double @from_object_double({}* nonnull %X466.0)
          to label %normal-dest472 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest472:                                   ; preds = %normal-dest471
  %210 = fadd double %17, %209
  %211 = invoke {}* @to_object_double(double %210)
          to label %tag217 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br485:                               ; preds = %header-check-br1204
  %.off2447 = add i64 %335, -1001
  %212 = icmp ult i64 %.off2447, 5
  br i1 %212, label %maybe-more-tests493, label %tag45

maybe-more-tests493:                              ; preds = %header-check-br485
  %213 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %214 = invoke {}* @cc_safe_fdefinition({}* %213)
          to label %normal-dest693 unwind label %cleanup-lpad.loopexit

normal-dest494:                                   ; preds = %tag29
  %215 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %216 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %217 = icmp eq {}* %215, %216
  br i1 %217, label %tag6, label %tag240

normal-dest504:                                   ; preds = %tag32
  %218 = invoke double @from_object_double({}* nonnull %X466.0)
          to label %normal-dest505 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest505:                                   ; preds = %normal-dest504
  %219 = fadd double %20, %218
  %220 = invoke {}* @to_object_double(double %219)
          to label %tag156 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest507:                                   ; preds = %tag34
  %221 = invoke double @from_object_double({}* nonnull %X466.0)
          to label %normal-dest509 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest509:                                   ; preds = %normal-dest507
  %222 = fadd double %21, %221
  %223 = invoke {}* @to_object_double(double %222)
          to label %tag65 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest512:                                   ; preds = %tag35
  %224 = invoke float @from_object_float({}* %X466.0)
          to label %normal-dest514 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest514:                                   ; preds = %normal-dest512
  %225 = fadd float %22, %224
  %226 = invoke {}* @to_object_float(float %225)
          to label %tag54 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br534:                               ; preds = %header-check-br836
  %227 = load i64, i64* %irc-bit-cast540, align 8
  %228 = icmp eq i64 %227, 1325
  br i1 %228, label %tag152, label %tag119

normal-dest542:                                   ; preds = %tag40
  %ptrtoint544 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint545 = add i64 %ptrtoint544, 7
  %entry-point-addr546 = inttoptr i64 %entry-point-addr-uint545 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point547 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr546, align 8
  %229 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point547({}* %26, i64 2, {}* %farg1, {}* %X466.0, {}* null, {}* null)
          to label %normal-dest550 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest550:                                   ; preds = %normal-dest542
  %.elt1991 = extractvalue { {}*, i64 } %229, 0
  %.elt1993 = extractvalue { {}*, i64 } %229, 1
  %cond1924 = icmp eq i64 %.elt1993, 0
  %230 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234235.1 = select i1 %cond1924, {}* %230, {}* %.elt1991
  br label %tag13

normal-dest556:                                   ; preds = %tag42
  %231 = invoke float @from_object_float({}* %X466.0)
          to label %normal-dest558 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest558:                                   ; preds = %normal-dest556
  %232 = fadd float %27, %231
  %233 = invoke {}* @to_object_float(float %232)
          to label %tag96 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest560:                                   ; preds = %tag44
  %ptrtoint561 = ptrtoint {}* %G233929.0 to i64
  %entry-point-addr-uint562 = add i64 %ptrtoint561, 7
  %entry-point-addr563 = inttoptr i64 %entry-point-addr-uint562 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point564 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr563, align 8
  %234 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point564({}* %G233929.0, i64 1, {}* %29, {}* null, {}* null, {}* null)
          to label %tag227 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest573:                                   ; preds = %tag45
  %235 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %236 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %237 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %238 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 287), align 8
  %ptrtoint574 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint575 = add i64 %ptrtoint574, 7
  %entry-point-addr576 = inttoptr i64 %entry-point-addr-uint575 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point577 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr576, align 8
  %239 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point577({}* %31, i64 5, {}* %235, {}* %236, {}* %"closure->LAMBDA1269", {}* %237, {}* %238)
          to label %normal-dest580 unwind label %cleanup-lpad.loopexit

normal-dest580:                                   ; preds = %normal-dest573
  %.elt2090 = extractvalue { {}*, i64 } %239, 0
  %.elt2092 = extractvalue { {}*, i64 } %239, 1
  %cond1940 = icmp eq i64 %.elt2092, 0
  %240 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233714.1 = select i1 %cond1940, {}* %240, {}* %.elt2090
  br label %tag151

normal-dest601:                                   ; preds = %tag50
  br i1 %fixnump-test605, label %tag30, label %tag59

normal-dest607:                                   ; preds = %tag51
  %ptrtoint608 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint609 = add i64 %ptrtoint608, 7
  %entry-point-addr610 = inttoptr i64 %entry-point-addr-uint609 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point611 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr610, align 8
  %241 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point611({}* %36, i64 1, {}* %117, {}* null, {}* null, {}* null)
          to label %normal-dest614 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest614:                                   ; preds = %normal-dest607
  %.elt2331 = extractvalue { {}*, i64 } %241, 0
  %.elt2333 = extractvalue { {}*, i64 } %241, 1
  %cond1985 = icmp eq i64 %.elt2333, 0
  %242 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234235.2 = select i1 %cond1985, {}* %242, {}* %.elt2331
  br label %tag13

normal-dest621:                                   ; preds = %tag53
  %ptrtoint622 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint623 = add i64 %ptrtoint622, 7
  %entry-point-addr624 = inttoptr i64 %entry-point-addr-uint623 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point625 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr624, align 8
  %243 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point625({}* %38, i64 2, {}* %farg1, {}* %X466.0, {}* null, {}* null)
          to label %normal-dest628 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest628:                                   ; preds = %normal-dest621
  %.elt2008 = extractvalue { {}*, i64 } %243, 0
  %.elt2010 = extractvalue { {}*, i64 } %243, 1
  %cond1926 = icmp eq i64 %.elt2010, 0
  %244 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234159.2 = select i1 %cond1926, {}* %244, {}* %.elt2008
  br label %tag65

normal-dest640:                                   ; preds = %tag54
  %.elt2131 = extractvalue { {}*, i64 } %39, 0
  %.elt2133 = extractvalue { {}*, i64 } %39, 1
  %cond1948 = icmp eq i64 %.elt2133, 0
  %245 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233643.0 = select i1 %cond1948, {}* %245, {}* %.elt2131
  %ptrtoint646 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint647 = add i64 %ptrtoint646, 7
  %entry-point-addr648 = inttoptr i64 %entry-point-addr-uint647 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point649 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr648, align 8
  %246 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point649({}* %58, i64 1, {}* %G233643.0, {}* null, {}* null, {}* null)
          to label %tag69 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br657:                               ; preds = %header-check-br1528
  %irc-bit-cast661 = bitcast {}* %X466.0 to i8*
  %gep662 = getelementptr inbounds i8, i8* %irc-bit-cast661, i64 -9
  %irc-bit-cast663 = bitcast i8* %gep662 to i64*
  %247 = load i64, i64* %irc-bit-cast663, align 8
  %248 = icmp eq i64 %247, 1325
  br i1 %248, label %tag202, label %tag162

normal-dest693:                                   ; preds = %maybe-more-tests493
  %ptrtoint694 = ptrtoint {}* %214 to i64
  %entry-point-addr-uint695 = add i64 %ptrtoint694, 7
  %entry-point-addr696 = inttoptr i64 %entry-point-addr-uint695 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point697 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr696, align 8
  %249 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point697({}* %214, i64 1, {}* nonnull %"closure->LAMBDA1269", {}* null, {}* null, {}* null)
          to label %normal-dest700 unwind label %cleanup-lpad.loopexit

normal-dest700:                                   ; preds = %normal-dest693
  %.elt2102 = extractvalue { {}*, i64 } %249, 0
  %.elt2104 = extractvalue { {}*, i64 } %249, 1
  %cond1942 = icmp eq i64 %.elt2104, 0
  %250 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233714.2 = select i1 %cond1942, {}* %250, {}* %.elt2102
  br label %tag151

normal-dest737:                                   ; preds = %tag68
  br i1 %fixnump-test605, label %tag198, label %tag

normal-dest758:                                   ; preds = %tag71
  %ptrtoint759 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint760 = add i64 %ptrtoint759, 7
  %entry-point-addr761 = inttoptr i64 %entry-point-addr-uint760 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point762 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr761, align 8
  %251 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point762({}* %47, i64 2, {}* %farg1, {}* %X466.0, {}* null, {}* null)
          to label %normal-dest765 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest765:                                   ; preds = %normal-dest758
  %.elt2291 = extractvalue { {}*, i64 } %251, 0
  %.elt2293 = extractvalue { {}*, i64 } %251, 1
  %cond1978 = icmp eq i64 %.elt2293, 0
  %252 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234058.1 = select i1 %cond1978, {}* %252, {}* %.elt2291
  br label %tag217

normal-dest796:                                   ; preds = %tag83
  %253 = invoke double @from_object_double({}* nonnull %X466.0)
          to label %normal-dest797 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest797:                                   ; preds = %normal-dest796
  %254 = fadd double %53, %253
  %255 = invoke {}* @to_object_double(double %254)
          to label %tag13 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest800:                                   ; preds = %tag86
  %256 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %257 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %258 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %259 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 281), align 8
  %ptrtoint801 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint802 = add i64 %ptrtoint801, 7
  %entry-point-addr803 = inttoptr i64 %entry-point-addr-uint802 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point804 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr803, align 8
  %260 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point804({}* %55, i64 5, {}* %256, {}* %257, {}* %"closure->LAMBDA495", {}* %258, {}* %259)
          to label %normal-dest807 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest807:                                   ; preds = %normal-dest800
  %.elt2024 = extractvalue { {}*, i64 } %260, 0
  %.elt2026 = extractvalue { {}*, i64 } %260, 1
  %cond1928 = icmp eq i64 %.elt2026, 0
  %261 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233929.1 = select i1 %cond1928, {}* %261, {}* %.elt2024
  br label %tag44

normal-dest814:                                   ; preds = %tag88
  %262 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 292), align 16
  %263 = invoke {}* @cc_safe_fdefinition({}* %262)
          to label %normal-dest816 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest816:                                   ; preds = %normal-dest814
  %264 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 294), align 16
  br i1 %fixnump-test605, label %tag113, label %tag73

header-check-br821:                               ; preds = %tag89
  %irc-bit-cast825 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep826 = getelementptr inbounds i8, i8* %irc-bit-cast825, i64 -9
  %irc-bit-cast827 = bitcast i8* %gep826 to i64*
  %265 = load i64, i64* %irc-bit-cast827, align 8
  %.off2458 = add i64 %265, -913
  %266 = icmp ult i64 %.off2458, 85
  br i1 %266, label %tag68, label %header-check-br1519

header-check-br836:                               ; preds = %tag184
  %irc-bit-cast840 = bitcast {}* %X466.0 to i8*
  %gep841 = getelementptr inbounds i8, i8* %irc-bit-cast840, i64 -9
  %irc-bit-cast842 = bitcast i8* %gep841 to i64*
  %267 = load i64, i64* %irc-bit-cast842, align 8
  %268 = icmp ne i64 %267, 1325
  %brmerge = or i1 %test537, %268
  br i1 %brmerge, label %tag119, label %header-check-br534

normal-dest878:                                   ; preds = %tag96
  %.elt2222 = extractvalue { {}*, i64 } %61, 0
  %.elt2224 = extractvalue { {}*, i64 } %61, 1
  %cond1965 = icmp eq i64 %.elt2224, 0
  %269 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233603.0 = select i1 %cond1965, {}* %269, {}* %.elt2222
  %ptrtoint884 = ptrtoint {}* %286 to i64
  %entry-point-addr-uint885 = add i64 %ptrtoint884, 7
  %entry-point-addr886 = inttoptr i64 %entry-point-addr-uint885 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point887 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr886, align 8
  %270 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point887({}* %286, i64 4, {}* %G233601.0, {}* %G233602.0, {}* %G233603.0, {}* %269)
          to label %normal-dest890 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest890:                                   ; preds = %normal-dest878
  %.elt2226 = extractvalue { {}*, i64 } %270, 0
  %.elt2228 = extractvalue { {}*, i64 } %270, 1
  %cond1966 = icmp eq i64 %.elt2228, 0
  %271 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233599.0 = select i1 %cond1966, {}* %271, {}* %.elt2226
  %ptrtoint896 = ptrtoint {}* %67 to i64
  %entry-point-addr-uint897 = add i64 %ptrtoint896, 7
  %entry-point-addr898 = inttoptr i64 %entry-point-addr-uint897 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point899 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr898, align 8
  %272 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point899({}* %67, i64 1, {}* %G233599.0, {}* null, {}* null, {}* null)
          to label %tag69 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br909:                               ; preds = %tag77
  %273 = load i64, i64* %irc-bit-cast915, align 8
  %274 = icmp eq i64 %273, 1325
  %tag-only259 = and i64 %16, 7
  %test260 = icmp eq i64 %tag-only259, 1
  %or.cond = and i1 %test260, %274
  br i1 %or.cond, label %header-check-br257, label %tag176

header-check-br916:                               ; preds = %tag
  %275 = load i64, i64* %irc-bit-cast915, align 8
  %276 = icmp eq i64 %275, 1325
  %tag-only1486 = and i64 %16, 7
  %test1487 = icmp eq i64 %tag-only1486, 1
  %or.cond2436 = and i1 %test1487, %276
  br i1 %or.cond2436, label %header-check-br1484, label %tag53

header-check-br944:                               ; preds = %tag103
  %irc-bit-cast948 = bitcast {}* %"closure->LAMBDA1269" to i8*
  %gep949 = getelementptr inbounds i8, i8* %irc-bit-cast948, i64 -9
  %irc-bit-cast950 = bitcast i8* %gep949 to i64*
  %277 = load i64, i64* %irc-bit-cast950, align 8
  %.off2448 = add i64 %277, -913
  %278 = icmp ult i64 %.off2448, 85
  br i1 %278, label %tag132, label %header-check-br1631

normal-dest954:                                   ; preds = %tag104
  %279 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %280 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %281 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %282 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 286), align 16
  %ptrtoint955 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint956 = add i64 %ptrtoint955, 7
  %entry-point-addr957 = inttoptr i64 %entry-point-addr-uint956 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point958 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr957, align 8
  %283 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point958({}* %65, i64 5, {}* %279, {}* %280, {}* %"closure->LAMBDA1269", {}* %281, {}* %282)
          to label %normal-dest961 unwind label %cleanup-lpad.loopexit

normal-dest961:                                   ; preds = %normal-dest954
  %.elt2106 = extractvalue { {}*, i64 } %283, 0
  %.elt2108 = extractvalue { {}*, i64 } %283, 1
  %cond1943 = icmp eq i64 %.elt2108, 0
  %284 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233694.1 = select i1 %cond1943, {}* %284, {}* %.elt2106
  br label %tag132

normal-dest968:                                   ; preds = %tag105
  %285 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %286 = invoke {}* @cc_safe_fdefinition({}* %285)
          to label %normal-dest970 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest970:                                   ; preds = %normal-dest968
  %287 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %288 = invoke {}* @cc_safe_fdefinition({}* %287)
          to label %normal-dest972 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest972:                                   ; preds = %normal-dest970
  %289 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 272), align 16
  %ptrtoint973 = ptrtoint {}* %288 to i64
  %entry-point-addr-uint974 = add i64 %ptrtoint973, 7
  %entry-point-addr975 = inttoptr i64 %entry-point-addr-uint974 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point976 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr975, align 8
  %290 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point976({}* %288, i64 1, {}* %289, {}* null, {}* null, {}* null)
          to label %normal-dest979 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest979:                                   ; preds = %normal-dest972
  %.elt2209 = extractvalue { {}*, i64 } %290, 0
  %.elt2211 = extractvalue { {}*, i64 } %290, 1
  %cond1962 = icmp eq i64 %.elt2211, 0
  %291 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233601.0 = select i1 %cond1962, {}* %291, {}* %.elt2209
  %292 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %293 = invoke {}* @cc_safe_fdefinition({}* %292)
          to label %normal-dest986 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest986:                                   ; preds = %normal-dest979
  %294 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 274), align 16
  %ptrtoint987 = ptrtoint {}* %293 to i64
  %entry-point-addr-uint988 = add i64 %ptrtoint987, 7
  %entry-point-addr989 = inttoptr i64 %entry-point-addr-uint988 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point990 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr989, align 8
  %295 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point990({}* %293, i64 1, {}* %294, {}* null, {}* null, {}* null)
          to label %normal-dest993 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest993:                                   ; preds = %normal-dest986
  %.elt2213 = extractvalue { {}*, i64 } %295, 0
  %.elt2215 = extractvalue { {}*, i64 } %295, 1
  %cond1963 = icmp eq i64 %.elt2215, 0
  %296 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233602.0 = select i1 %cond1963, {}* %296, {}* %.elt2213
  %297 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %298 = invoke {}* @cc_safe_fdefinition({}* %297)
          to label %normal-dest1000 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1000:                                  ; preds = %normal-dest993
  br i1 %fixnump-test605, label %tag238, label %tag1

header-check-br1007:                              ; preds = %tag108
  %irc-bit-cast1011 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1012 = getelementptr inbounds i8, i8* %irc-bit-cast1011, i64 -9
  %irc-bit-cast1013 = bitcast i8* %gep1012 to i64*
  %299 = load i64, i64* %irc-bit-cast1013, align 8
  %.off2464 = add i64 %299, -913
  %300 = icmp ult i64 %.off2464, 85
  br i1 %300, label %tag199, label %header-check-br411

header-check-br1016:                              ; preds = %tag111
  %irc-bit-cast1020 = bitcast {}* %"closure->LAMBDA495" to i8*
  %gep1021 = getelementptr inbounds i8, i8* %irc-bit-cast1020, i64 -9
  %irc-bit-cast1022 = bitcast i8* %gep1021 to i64*
  %301 = load i64, i64* %irc-bit-cast1022, align 8
  %.off2455 = add i64 %301, -913
  %302 = icmp ult i64 %.off2455, 85
  br i1 %302, label %tag27, label %header-check-br434

normal-dest1026:                                  ; preds = %maybe-more-tests419
  %ptrtoint1027 = ptrtoint {}* %199 to i64
  %entry-point-addr-uint1028 = add i64 %ptrtoint1027, 7
  %entry-point-addr1029 = inttoptr i64 %entry-point-addr-uint1028 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1030 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1029, align 8
  %303 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1030({}* %199, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1033 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1033:                                  ; preds = %normal-dest1026
  %.elt2326 = extractvalue { {}*, i64 } %303, 0
  %.elt2328 = extractvalue { {}*, i64 } %303, 1
  %cond1984 = icmp eq i64 %.elt2328, 0
  %304 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234015.1 = select i1 %cond1984, {}* %304, {}* %.elt2326
  br label %tag199

normal-dest1048:                                  ; preds = %tag115
  %305 = invoke float @from_object_float({}* %farg0)
          to label %normal-dest1049 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1049:                                  ; preds = %normal-dest1048
  %306 = fcmp olt float %73, %305
  br i1 %306, label %tag87, label %tag123

normal-dest1068:                                  ; preds = %tag119
  %ptrtoint1069 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint1070 = add i64 %ptrtoint1069, 7
  %entry-point-addr1071 = inttoptr i64 %entry-point-addr-uint1070 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1072 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1071, align 8
  %307 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1072({}* %75, i64 2, {}* %X466.0, {}* %farg0, {}* null, {}* null)
          to label %normal-dest1075 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1075:                                  ; preds = %normal-dest1068
  %.elt = extractvalue { {}*, i64 } %307, 0
  %.elt1988 = extractvalue { {}*, i64 } %307, 1
  %cond1923 = icmp eq i64 %.elt1988, 0
  %308 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233549.1 = select i1 %cond1923, {}* %308, {}* %.elt
  br label %tag226

normal-dest1082:                                  ; preds = %tag121
  %309 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %310 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %311 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %312 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint1083 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint1084 = add i64 %ptrtoint1083, 7
  %entry-point-addr1085 = inttoptr i64 %entry-point-addr-uint1084 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1086 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1085, align 8
  %313 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1086({}* %77, i64 5, {}* %309, {}* %310, {}* %"%DOLIST-VAR.02469", {}* %311, {}* %312)
          to label %normal-dest1089 unwind label %cleanup-lpad.loopexit

normal-dest1089:                                  ; preds = %normal-dest1082
  %.elt2122 = extractvalue { {}*, i64 } %313, 0
  %.elt2124 = extractvalue { {}*, i64 } %313, 1
  %cond1946 = icmp eq i64 %.elt2124, 0
  %314 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %WER.1 = select i1 %cond1946, {}* %314, {}* %.elt2122
  br label %tag148

normal-dest1096:                                  ; preds = %tag125
  %315 = invoke float @from_object_float({}* %X466.0)
          to label %normal-dest1097 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1097:                                  ; preds = %normal-dest1096
  %316 = fadd float %80, %315
  %317 = invoke {}* @to_object_float(float %316)
          to label %tag217 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br1099:                              ; preds = %header-check-br1878
  %.off2462 = add i64 %468, -1001
  %318 = icmp ult i64 %.off2462, 5
  br i1 %318, label %maybe-more-tests1107, label %tag8

maybe-more-tests1107:                             ; preds = %header-check-br1099
  %319 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %320 = invoke {}* @cc_safe_fdefinition({}* %319)
          to label %normal-dest1135 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1135:                                  ; preds = %maybe-more-tests1107
  %ptrtoint1136 = ptrtoint {}* %320 to i64
  %entry-point-addr-uint1137 = add i64 %ptrtoint1136, 7
  %entry-point-addr1138 = inttoptr i64 %entry-point-addr-uint1137 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1139 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1138, align 8
  %321 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1139({}* %320, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1142 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1142:                                  ; preds = %normal-dest1135
  %.elt2304 = extractvalue { {}*, i64 } %321, 0
  %.elt2306 = extractvalue { {}*, i64 } %321, 1
  %cond1980 = icmp eq i64 %.elt2306, 0
  %322 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234056.2 = select i1 %cond1980, {}* %322, {}* %.elt2304
  br label %tag174

normal-dest1151:                                  ; preds = %tag132
  %323 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint1152 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint1153 = add i64 %ptrtoint1152, 7
  %entry-point-addr1154 = inttoptr i64 %entry-point-addr-uint1153 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1155 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1154, align 8
  %324 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1155({}* %84, i64 2, {}* %WER.0, {}* %323, {}* null, {}* null)
          to label %normal-dest1158 unwind label %cleanup-lpad.loopexit

normal-dest1158:                                  ; preds = %normal-dest1151
  %.elt2110 = extractvalue { {}*, i64 } %324, 0
  %.elt2112 = extractvalue { {}*, i64 } %324, 1
  %cond1944 = icmp eq i64 %.elt2112, 0
  %325 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233697.0 = select i1 %cond1944, {}* %325, {}* %.elt2110
  %ptrtoint1164 = ptrtoint {}* %G233694.0 to i64
  %entry-point-addr-uint1165 = add i64 %ptrtoint1164, 7
  %entry-point-addr1166 = inttoptr i64 %entry-point-addr-uint1165 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1167 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1166, align 8
  %326 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1167({}* %G233694.0, i64 3, {}* %351, {}* %WER.0, {}* %G233697.0, {}* null)
          to label %tag38 unwind label %cleanup-lpad.loopexit

normal-dest1176:                                  ; preds = %tag133
  %327 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %328 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %329 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %330 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 289), align 8
  %ptrtoint1177 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint1178 = add i64 %ptrtoint1177, 7
  %entry-point-addr1179 = inttoptr i64 %entry-point-addr-uint1178 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1180 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1179, align 8
  %331 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1180({}* %86, i64 5, {}* %327, {}* %328, {}* %"closure->LAMBDA1269", {}* %329, {}* %330)
          to label %normal-dest1183 unwind label %cleanup-lpad.loopexit

normal-dest1183:                                  ; preds = %normal-dest1176
  %.elt2037 = extractvalue { {}*, i64 } %331, 0
  %.elt2039 = extractvalue { {}*, i64 } %331, 1
  %cond1930 = icmp eq i64 %.elt2039, 0
  %332 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233773.2 = select i1 %cond1930, {}* %332, {}* %.elt2037
  br label %tag150

normal-dest1190:                                  ; preds = %tag134
  %ptrtoint1191 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint1192 = add i64 %ptrtoint1191, 7
  %entry-point-addr1193 = inttoptr i64 %entry-point-addr-uint1192 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1194 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1193, align 8
  %333 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1194({}* %88, i64 1, {}* %351, {}* null, {}* null, {}* null)
          to label %normal-dest1197 unwind label %cleanup-lpad.loopexit

normal-dest1197:                                  ; preds = %normal-dest1190
  %.elt2086 = extractvalue { {}*, i64 } %333, 0
  %.elt2088 = extractvalue { {}*, i64 } %333, 1
  %cond1939 = icmp eq i64 %.elt2088, 0
  %334 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %OUT2334911198.0 = select i1 %cond1939, {}* %334, {}* %.elt2086
  %ptrtoint1205 = ptrtoint {}* %"closure->LAMBDA1269" to i64
  %tag-only1206 = and i64 %ptrtoint1205, 7
  %test1207 = icmp eq i64 %tag-only1206, 1
  br i1 %test1207, label %header-check-br1204, label %tag45

header-check-br1204:                              ; preds = %normal-dest1197
  %irc-bit-cast1208 = bitcast {}* %"closure->LAMBDA1269" to i8*
  %gep1209 = getelementptr inbounds i8, i8* %irc-bit-cast1208, i64 -9
  %irc-bit-cast1210 = bitcast i8* %gep1209 to i64*
  %335 = load i64, i64* %irc-bit-cast1210, align 8
  %.off2446 = add i64 %335, -913
  %336 = icmp ult i64 %.off2446, 85
  br i1 %336, label %tag151, label %header-check-br485

normal-dest1225:                                  ; preds = %tag139
  %337 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %338 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %339 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %340 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 252), align 16
  %ptrtoint1226 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint1227 = add i64 %ptrtoint1226, 7
  %entry-point-addr1228 = inttoptr i64 %entry-point-addr-uint1227 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1229 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1228, align 8
  %341 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1229({}* %94, i64 5, {}* %337, {}* %338, {}* %"closure->LAMBDA", {}* %339, {}* %340)
          to label %normal-dest1232 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1232:                                  ; preds = %normal-dest1225
  %.elt2308 = extractvalue { {}*, i64 } %341, 0
  %.elt2310 = extractvalue { {}*, i64 } %341, 1
  %cond1981 = icmp eq i64 %.elt2310, 0
  %342 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234015.2 = select i1 %cond1981, {}* %342, {}* %.elt2308
  br label %tag199

normal-dest1238:                                  ; preds = %tag140
  %343 = invoke double @from_object_double({}* nonnull %X466.0)
          to label %normal-dest1239 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1239:                                  ; preds = %normal-dest1238
  %344 = fadd double %95, %343
  %345 = invoke {}* @to_object_double(double %344)
          to label %tag54 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1242:                                  ; preds = %tag145
  %346 = invoke float @from_object_float({}* %X466.0)
          to label %normal-dest1243 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1243:                                  ; preds = %normal-dest1242
  %347 = fadd float %96, %346
  %348 = invoke {}* @to_object_float(float %347)
          to label %tag13 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1246:                                  ; preds = %maybe-more-tests1665
  %ptrtoint1247 = ptrtoint {}* %433 to i64
  %entry-point-addr-uint1248 = add i64 %ptrtoint1247, 7
  %entry-point-addr1249 = inttoptr i64 %entry-point-addr-uint1248 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1250 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1249, align 8
  %349 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1250({}* %433, i64 1, {}* nonnull %"closure->LAMBDA495", {}* null, {}* null, {}* null)
          to label %normal-dest1253 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1253:                                  ; preds = %normal-dest1246
  %.elt2153 = extractvalue { {}*, i64 } %349, 0
  %.elt2155 = extractvalue { {}*, i64 } %349, 1
  %cond1952 = icmp eq i64 %.elt2155, 0
  %350 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233929.2 = select i1 %cond1952, {}* %350, {}* %.elt2153
  br label %tag44

normal-dest1268:                                  ; preds = %tag148
  %351 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %352 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %353 = icmp eq {}* %351, %352
  br i1 %353, label %tag208, label %tag9

normal-dest1275:                                  ; preds = %tag150
  %354 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %355 = invoke {}* @cc_safe_fdefinition({}* %354)
          to label %normal-dest1277 unwind label %cleanup-lpad.loopexit

normal-dest1277:                                  ; preds = %normal-dest1275
  %356 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint1278 = ptrtoint {}* %355 to i64
  %entry-point-addr-uint1279 = add i64 %ptrtoint1278, 7
  %entry-point-addr1280 = inttoptr i64 %entry-point-addr-uint1279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1280, align 8
  %357 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1281({}* %355, i64 2, {}* %WER.0, {}* %356, {}* null, {}* null)
          to label %normal-dest1284 unwind label %cleanup-lpad.loopexit

normal-dest1284:                                  ; preds = %normal-dest1277
  %.elt2041 = extractvalue { {}*, i64 } %357, 0
  %.elt2043 = extractvalue { {}*, i64 } %357, 1
  %cond1931 = icmp eq i64 %.elt2043, 0
  %358 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233776.0 = select i1 %cond1931, {}* %358, {}* %.elt2041
  %ptrtoint1290 = ptrtoint {}* %G233773.0 to i64
  %entry-point-addr-uint1291 = add i64 %ptrtoint1290, 7
  %entry-point-addr1292 = inttoptr i64 %entry-point-addr-uint1291 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1293 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1292, align 8
  %359 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1293({}* %G233773.0, i64 3, {}* %99, {}* %WER.0, {}* %G233776.0, {}* null)
          to label %tag38 unwind label %cleanup-lpad.loopexit

normal-dest1302:                                  ; preds = %tag151
  %360 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint1303 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint1304 = add i64 %ptrtoint1303, 7
  %entry-point-addr1305 = inttoptr i64 %entry-point-addr-uint1304 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1306 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1305, align 8
  %361 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1306({}* %101, i64 2, {}* %WER.0, {}* %360, {}* null, {}* null)
          to label %normal-dest1309 unwind label %cleanup-lpad.loopexit

normal-dest1309:                                  ; preds = %normal-dest1302
  %.elt2094 = extractvalue { {}*, i64 } %361, 0
  %.elt2096 = extractvalue { {}*, i64 } %361, 1
  %cond1941 = icmp eq i64 %.elt2096, 0
  %362 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233717.0 = select i1 %cond1941, {}* %362, {}* %.elt2094
  %ptrtoint1315 = ptrtoint {}* %G233714.0 to i64
  %entry-point-addr-uint1316 = add i64 %ptrtoint1315, 7
  %entry-point-addr1317 = inttoptr i64 %entry-point-addr-uint1316 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1318 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1317, align 8
  %363 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1318({}* %G233714.0, i64 3, {}* %OUT2334911198.0, {}* %WER.0, {}* %G233717.0, {}* null)
          to label %tag38 unwind label %cleanup-lpad.loopexit

normal-dest1326:                                  ; preds = %tag152
  %364 = invoke double @from_object_double({}* nonnull %farg0)
          to label %normal-dest1327 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1327:                                  ; preds = %normal-dest1326
  %365 = fcmp olt double %102, %364
  br i1 %365, label %tag135, label %tag48

header-check-br1328:                              ; preds = %header-check-br315
  %.off2445 = add i64 %184, -1001
  %366 = icmp ult i64 %.off2445, 5
  br i1 %366, label %maybe-more-tests1336, label %tag133

maybe-more-tests1336:                             ; preds = %header-check-br1328
  %367 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %368 = invoke {}* @cc_safe_fdefinition({}* %367)
          to label %normal-dest421 unwind label %cleanup-lpad.loopexit

normal-dest1352:                                  ; preds = %tag157
  %ptrtoint1353 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint1354 = add i64 %ptrtoint1353, 7
  %entry-point-addr1355 = inttoptr i64 %entry-point-addr-uint1354 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1356 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1355, align 8
  %369 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1356({}* %105, i64 1, {}* %82, {}* null, {}* null, {}* null)
          to label %normal-dest1359 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1359:                                  ; preds = %normal-dest1352
  %.elt2144 = extractvalue { {}*, i64 } %369, 0
  %.elt2146 = extractvalue { {}*, i64 } %369, 1
  %cond1950 = icmp eq i64 %.elt2146, 0
  %370 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %X466.1 = select i1 %cond1950, {}* %370, {}* %.elt2144
  br label %tag23.backedge

normal-dest1366:                                  ; preds = %tag159
  %ptrtoint1367 = ptrtoint {}* %108 to i64
  %entry-point-addr-uint1368 = add i64 %ptrtoint1367, 7
  %entry-point-addr1369 = inttoptr i64 %entry-point-addr-uint1368 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1370 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1369, align 8
  %371 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1370({}* %108, i64 2, {}* %X466.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest1373 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1373:                                  ; preds = %normal-dest1366
  %.elt2140 = extractvalue { {}*, i64 } %371, 0
  %.elt2142 = extractvalue { {}*, i64 } %371, 1
  %cond1949 = icmp eq i64 %.elt2142, 0
  %372 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %X466.2 = select i1 %cond1949, {}* %372, {}* %.elt2140
  br label %tag23.backedge

normal-dest1380:                                  ; preds = %tag162
  %ptrtoint1381 = ptrtoint {}* %110 to i64
  %entry-point-addr-uint1382 = add i64 %ptrtoint1381, 7
  %entry-point-addr1383 = inttoptr i64 %entry-point-addr-uint1382 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1384 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1383, align 8
  %373 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1384({}* %110, i64 2, {}* %farg1, {}* %X466.0, {}* null, {}* null)
          to label %normal-dest1387 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1387:                                  ; preds = %normal-dest1380
  %.elt2218 = extractvalue { {}*, i64 } %373, 0
  %.elt2220 = extractvalue { {}*, i64 } %373, 1
  %cond1964 = icmp eq i64 %.elt2220, 0
  %374 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233606.1 = select i1 %cond1964, {}* %374, {}* %.elt2218
  br label %tag96

normal-dest1396:                                  ; preds = %tag164
  %375 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %376 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %377 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %378 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 261), align 8
  %ptrtoint1397 = ptrtoint {}* %112 to i64
  %entry-point-addr-uint1398 = add i64 %ptrtoint1397, 7
  %entry-point-addr1399 = inttoptr i64 %entry-point-addr-uint1398 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1400 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1399, align 8
  %379 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1400({}* %112, i64 5, {}* %375, {}* %376, {}* %"closure->LAMBDA", {}* %377, {}* %378)
          to label %normal-dest1403 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1403:                                  ; preds = %normal-dest1396
  %.elt2003 = extractvalue { {}*, i64 } %379, 0
  %.elt2005 = extractvalue { {}*, i64 } %379, 1
  %cond1925 = icmp eq i64 %.elt2005, 0
  %380 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234157.2 = select i1 %cond1925, {}* %380, {}* %.elt2003
  br label %tag68

normal-dest1434:                                  ; preds = %maybe-more-tests286
  %ptrtoint1435 = ptrtoint {}* %174 to i64
  %entry-point-addr-uint1436 = add i64 %ptrtoint1435, 7
  %entry-point-addr1437 = inttoptr i64 %entry-point-addr-uint1436 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1438 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1437, align 8
  %381 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1438({}* %174, i64 1, {}* nonnull %"closure->LAMBDA495", {}* null, {}* null, {}* null)
          to label %normal-dest1441 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1441:                                  ; preds = %normal-dest1434
  %.elt2193 = extractvalue { {}*, i64 } %381, 0
  %.elt2195 = extractvalue { {}*, i64 } %381, 1
  %cond1959 = icmp eq i64 %.elt2195, 0
  %382 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233882.1 = select i1 %cond1959, {}* %382, {}* %.elt2193
  br label %tag70

normal-dest1447:                                  ; preds = %tag168
  %383 = invoke float @from_object_float({}* %X466.0)
          to label %normal-dest1448 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1448:                                  ; preds = %normal-dest1447
  %384 = fadd float %113, %383
  %385 = invoke {}* @to_object_float(float %384)
          to label %tag156 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1451:                                  ; preds = %tag169
  %ptrtoint1452 = ptrtoint {}* %115 to i64
  %entry-point-addr-uint1453 = add i64 %ptrtoint1452, 7
  %entry-point-addr1454 = inttoptr i64 %entry-point-addr-uint1453 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1455 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1454, align 8
  %386 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1455({}* %115, i64 2, {}* %farg1, {}* %X466.0, {}* null, {}* null)
          to label %normal-dest1458 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1458:                                  ; preds = %normal-dest1451
  %.elt2127 = extractvalue { {}*, i64 } %386, 0
  %.elt2129 = extractvalue { {}*, i64 } %386, 1
  %cond1947 = icmp eq i64 %.elt2129, 0
  %387 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233646.1 = select i1 %cond1947, {}* %387, {}* %.elt2127
  br label %tag54

header-check-br1464:                              ; preds = %header-check-br1610
  %irc-bit-cast1468 = bitcast {}* %X466.0 to i8*
  %gep1469 = getelementptr inbounds i8, i8* %irc-bit-cast1468, i64 -9
  %irc-bit-cast1470 = bitcast i8* %gep1469 to i64*
  %388 = load i64, i64* %irc-bit-cast1470, align 8
  %389 = icmp eq i64 %388, 1325
  br i1 %389, label %tag83, label %tag40

header-check-br1484:                              ; preds = %header-check-br916
  %irc-bit-cast1488 = bitcast {}* %X466.0 to i8*
  %gep1489 = getelementptr inbounds i8, i8* %irc-bit-cast1488, i64 -9
  %irc-bit-cast1490 = bitcast i8* %gep1489 to i64*
  %390 = load i64, i64* %irc-bit-cast1490, align 8
  %391 = icmp eq i64 %390, 1325
  br i1 %391, label %tag34, label %tag53

normal-dest1492:                                  ; preds = %tag176
  %ptrtoint1493 = ptrtoint {}* %122 to i64
  %entry-point-addr-uint1494 = add i64 %ptrtoint1493, 7
  %entry-point-addr1495 = inttoptr i64 %entry-point-addr-uint1494 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1496 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1495, align 8
  %392 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1496({}* %122, i64 2, {}* %farg1, {}* %X466.0, {}* null, {}* null)
          to label %normal-dest1499 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1499:                                  ; preds = %normal-dest1492
  %.elt2313 = extractvalue { {}*, i64 } %392, 0
  %.elt2315 = extractvalue { {}*, i64 } %392, 1
  %cond1982 = icmp eq i64 %.elt2315, 0
  %393 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234017.1 = select i1 %cond1982, {}* %393, {}* %.elt2313
  br label %tag156

normal-dest1506:                                  ; preds = %tag177
  %394 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %395 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %396 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %397 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint1507 = ptrtoint {}* %124 to i64
  %entry-point-addr-uint1508 = add i64 %ptrtoint1507, 7
  %entry-point-addr1509 = inttoptr i64 %entry-point-addr-uint1508 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1510 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1509, align 8
  %398 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1510({}* %124, i64 5, {}* %394, {}* %395, {}* %"%DOLIST-VAR.02469", {}* %396, {}* %397)
          to label %normal-dest1513 unwind label %cleanup-lpad.loopexit

normal-dest1513:                                  ; preds = %normal-dest1506
  %.elt2050 = extractvalue { {}*, i64 } %398, 0
  %.elt2052 = extractvalue { {}*, i64 } %398, 1
  %cond1932 = icmp eq i64 %.elt2052, 0
  %399 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond1932, {}* %399, {}* %.elt2050
  br label %tag19.backedge

tag19.backedge:                                   ; preds = %normal-dest1513, %tag236
  %400 = phi {}* [ %.pre, %tag236 ], [ %399, %normal-dest1513 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %160, %tag236 ], [ %"%DOLIST-VAR.1", %normal-dest1513 ]
  %401 = icmp eq {}* %"%DOLIST-VAR.0.be", %400
  br i1 %401, label %tag88, label %tag114

header-check-br1519:                              ; preds = %header-check-br821
  %.off2459 = add i64 %265, -1001
  %402 = icmp ult i64 %.off2459, 5
  br i1 %402, label %maybe-more-tests1527, label %tag164

maybe-more-tests1527:                             ; preds = %header-check-br1519
  %403 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %404 = invoke {}* @cc_safe_fdefinition({}* %403)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br1528:                              ; preds = %tag1
  %405 = load i64, i64* %irc-bit-cast915, align 8
  %406 = icmp eq i64 %405, 1325
  %tag-only659 = and i64 %16, 7
  %test660 = icmp eq i64 %tag-only659, 1
  %or.cond2434 = and i1 %test660, %406
  br i1 %or.cond2434, label %header-check-br657, label %tag162

normal-dest1552:                                  ; preds = %tag183
  %ptrtoint1553 = ptrtoint {}* %126 to i64
  %entry-point-addr-uint1554 = add i64 %ptrtoint1553, 7
  %entry-point-addr1555 = inttoptr i64 %entry-point-addr-uint1554 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1556 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1555, align 8
  %407 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1556({}* %126, i64 1, {}* %52, {}* null, {}* null, {}* null)
          to label %normal-dest1559 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1559:                                  ; preds = %normal-dest1552
  %.elt2300 = extractvalue { {}*, i64 } %407, 0
  %.elt2302 = extractvalue { {}*, i64 } %407, 1
  %cond1979 = icmp eq i64 %.elt2302, 0
  %408 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234058.2 = select i1 %cond1979, {}* %408, {}* %.elt2300
  br label %tag217

normal-dest1567:                                  ; preds = %tag185
  %ptrtoint1568 = ptrtoint {}* %128 to i64
  %entry-point-addr-uint1569 = add i64 %ptrtoint1568, 7
  %entry-point-addr1570 = inttoptr i64 %entry-point-addr-uint1569 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1571 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1570, align 8
  %409 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1571({}* %128, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1574 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1574:                                  ; preds = %normal-dest1567
  %410 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 266), align 16
  %411 = invoke {}* @cc_safe_fdefinition({}* %410)
          to label %normal-dest1580 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1580:                                  ; preds = %normal-dest1574
  %ptrtoint1581 = ptrtoint {}* %411 to i64
  %entry-point-addr-uint1582 = add i64 %ptrtoint1581, 7
  %entry-point-addr1583 = inttoptr i64 %entry-point-addr-uint1582 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1584 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1583, align 8
  %412 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1584({}* %411, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1587 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1587:                                  ; preds = %normal-dest1580
  %.elt2020 = extractvalue { {}*, i64 } %412, 0
  %.elt2022 = extractvalue { {}*, i64 } %412, 1
  %cond1927 = icmp eq i64 %.elt2022, 0
  %413 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x1588.0 = select i1 %cond1927, {}* %413, {}* %.elt2020
  %414 = icmp eq {}* %x1588.0, %413
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234005.0 = select i1 %414, {}* %.val, {}* %413
  %415 = icmp eq {}* %G234005.0, %413
  br i1 %415, label %tag105, label %tag29

normal-dest1600:                                  ; preds = %tag190
  %416 = invoke float @from_object_float({}* %X466.0)
          to label %normal-dest1601 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1601:                                  ; preds = %normal-dest1600
  %417 = fadd float %130, %416
  %418 = invoke {}* @to_object_float(float %417)
          to label %tag65 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br1603:                              ; preds = %tag73
  %419 = load i64, i64* %irc-bit-cast915, align 8
  %420 = icmp eq i64 %419, 1325
  %tag-only1772 = and i64 %16, 7
  %test1773 = icmp eq i64 %tag-only1772, 1
  %or.cond2437 = and i1 %test1773, %420
  br i1 %or.cond2437, label %header-check-br1770, label %tag169

header-check-br1610:                              ; preds = %tag59
  %421 = load i64, i64* %irc-bit-cast915, align 8
  %422 = icmp eq i64 %421, 1325
  %tag-only1466 = and i64 %16, 7
  %test1467 = icmp eq i64 %tag-only1466, 1
  %or.cond2435 = and i1 %test1467, %422
  br i1 %or.cond2435, label %header-check-br1464, label %tag40

normal-dest1618:                                  ; preds = %tag193
  %ptrtoint1619 = ptrtoint {}* %132 to i64
  %entry-point-addr-uint1620 = add i64 %ptrtoint1619, 7
  %entry-point-addr1621 = inttoptr i64 %entry-point-addr-uint1620 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1622 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1621, align 8
  %423 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1622({}* %132, i64 1, {}* %157, {}* null, {}* null, {}* null)
          to label %normal-dest1625 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1625:                                  ; preds = %normal-dest1618
  %.elt2235 = extractvalue { {}*, i64 } %423, 0
  %.elt2237 = extractvalue { {}*, i64 } %423, 1
  %cond1967 = icmp eq i64 %.elt2237, 0
  %424 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233606.2 = select i1 %cond1967, {}* %424, {}* %.elt2235
  br label %tag96

header-check-br1631:                              ; preds = %header-check-br944
  %.off2449 = add i64 %277, -1001
  %425 = icmp ult i64 %.off2449, 5
  br i1 %425, label %maybe-more-tests1639, label %tag104

maybe-more-tests1639:                             ; preds = %header-check-br1631
  %426 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %427 = invoke {}* @cc_safe_fdefinition({}* %426)
          to label %normal-dest1851 unwind label %cleanup-lpad.loopexit

normal-dest1654:                                  ; preds = %tag202
  %428 = invoke double @from_object_double({}* nonnull %X466.0)
          to label %normal-dest1655 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1655:                                  ; preds = %normal-dest1654
  %429 = fadd double %135, %428
  %430 = invoke {}* @to_object_double(double %429)
          to label %tag96 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br1657:                              ; preds = %header-check-br1891
  %.off2452 = add i64 %470, -1001
  %431 = icmp ult i64 %.off2452, 5
  br i1 %431, label %maybe-more-tests1665, label %tag86

maybe-more-tests1665:                             ; preds = %header-check-br1657
  %432 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %433 = invoke {}* @cc_safe_fdefinition({}* %432)
          to label %normal-dest1246 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1667:                                  ; preds = %tag204
  %434 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %435 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %436 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %437 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 279), align 8
  %ptrtoint1668 = ptrtoint {}* %137 to i64
  %entry-point-addr-uint1669 = add i64 %ptrtoint1668, 7
  %entry-point-addr1670 = inttoptr i64 %entry-point-addr-uint1669 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1671 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1670, align 8
  %438 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1671({}* %137, i64 5, {}* %434, {}* %435, {}* %"closure->LAMBDA495", {}* %436, {}* %437)
          to label %normal-dest1674 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1674:                                  ; preds = %normal-dest1667
  %.elt2185 = extractvalue { {}*, i64 } %438, 0
  %.elt2187 = extractvalue { {}*, i64 } %438, 1
  %cond1958 = icmp eq i64 %.elt2187, 0
  %439 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233882.2 = select i1 %cond1958, {}* %439, {}* %.elt2185
  br label %tag70

normal-dest1687:                                  ; preds = %tag206
  %ptrtoint1688 = ptrtoint {}* %139 to i64
  %entry-point-addr-uint1689 = add i64 %ptrtoint1688, 7
  %entry-point-addr1690 = inttoptr i64 %entry-point-addr-uint1689 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1691 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1690, align 8
  %440 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1691({}* %139, i64 1, {}* %24, {}* null, {}* null, {}* null)
          to label %normal-dest1694 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1694:                                  ; preds = %normal-dest1687
  %.elt2322 = extractvalue { {}*, i64 } %440, 0
  %.elt2324 = extractvalue { {}*, i64 } %440, 1
  %cond1983 = icmp eq i64 %.elt2324, 0
  %441 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234017.2 = select i1 %cond1983, {}* %441, {}* %.elt2322
  br label %tag156

normal-dest1701:                                  ; preds = %tag208
  %ptrtoint1702 = ptrtoint {}* %141 to i64
  %entry-point-addr-uint1703 = add i64 %ptrtoint1702, 7
  %entry-point-addr1704 = inttoptr i64 %entry-point-addr-uint1703 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1705 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1704, align 8
  %442 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1705({}* %141, i64 1, {}* %351, {}* null, {}* null, {}* null)
          to label %normal-dest1708 unwind label %cleanup-lpad.loopexit

normal-dest1708:                                  ; preds = %normal-dest1701
  %.elt2082 = extractvalue { {}*, i64 } %442, 0
  %.elt2084 = extractvalue { {}*, i64 } %442, 1
  %cond1938 = icmp eq i64 %.elt2084, 0
  %443 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233737.0 = select i1 %cond1938, {}* %443, {}* %.elt2082
  %444 = icmp eq {}* %G233737.0, %443
  br i1 %444, label %tag103, label %tag134

normal-dest1721:                                  ; preds = %maybe-more-tests442
  %ptrtoint1722 = ptrtoint {}* %204 to i64
  %entry-point-addr-uint1723 = add i64 %ptrtoint1722, 7
  %entry-point-addr1724 = inttoptr i64 %entry-point-addr-uint1723 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1725 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1724, align 8
  %445 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1725({}* %204, i64 1, {}* nonnull %"closure->LAMBDA495", {}* null, {}* null, {}* null)
          to label %normal-dest1728 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1728:                                  ; preds = %normal-dest1721
  %.elt2205 = extractvalue { {}*, i64 } %445, 0
  %.elt2207 = extractvalue { {}*, i64 } %445, 1
  %cond1961 = icmp eq i64 %.elt2207, 0
  %446 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233868.1 = select i1 %cond1961, {}* %446, {}* %.elt2205
  br label %tag27

header-check-br1770:                              ; preds = %header-check-br1603
  %irc-bit-cast1774 = bitcast {}* %X466.0 to i8*
  %gep1775 = getelementptr inbounds i8, i8* %irc-bit-cast1774, i64 -9
  %irc-bit-cast1776 = bitcast i8* %gep1775 to i64*
  %447 = load i64, i64* %irc-bit-cast1776, align 8
  %448 = icmp eq i64 %447, 1325
  br i1 %448, label %tag140, label %tag169

normal-dest1779:                                  ; preds = %tag221
  %449 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %450 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %451 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %452 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 278), align 16
  %ptrtoint1780 = ptrtoint {}* %145 to i64
  %entry-point-addr-uint1781 = add i64 %ptrtoint1780, 7
  %entry-point-addr1782 = inttoptr i64 %entry-point-addr-uint1781 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1783 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1782, align 8
  %453 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1783({}* %145, i64 5, {}* %449, {}* %450, {}* %"closure->LAMBDA495", {}* %451, {}* %452)
          to label %normal-dest1786 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1786:                                  ; preds = %normal-dest1779
  %.elt2197 = extractvalue { {}*, i64 } %453, 0
  %.elt2199 = extractvalue { {}*, i64 } %453, 1
  %cond1960 = icmp eq i64 %.elt2199, 0
  %454 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233868.2 = select i1 %cond1960, {}* %454, {}* %.elt2197
  br label %tag27

normal-dest1793:                                  ; preds = %tag223
  %ptrtoint1794 = ptrtoint {}* %147 to i64
  %entry-point-addr-uint1795 = add i64 %ptrtoint1794, 7
  %entry-point-addr1796 = inttoptr i64 %entry-point-addr-uint1795 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1797 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1796, align 8
  %455 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1797({}* %147, i64 1, {}* %192, {}* null, {}* null, {}* null)
          to label %normal-dest1800 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1800:                                  ; preds = %normal-dest1793
  %.elt2278 = extractvalue { {}*, i64 } %455, 0
  %.elt2280 = extractvalue { {}*, i64 } %455, 1
  %cond1975 = icmp eq i64 %.elt2280, 0
  %456 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234100.0 = select i1 %cond1975, {}* %456, {}* %.elt2278
  %457 = icmp eq {}* %G234100.0, %456
  br i1 %457, label %tag108, label %tag234

normal-dest1807:                                  ; preds = %tag227
  %458 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint1808 = ptrtoint {}* %151 to i64
  %entry-point-addr-uint1809 = add i64 %ptrtoint1808, 7
  %entry-point-addr1810 = inttoptr i64 %entry-point-addr-uint1809 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1811 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1810, align 8
  %459 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1811({}* %151, i64 1, {}* %458, {}* null, {}* null, {}* null)
          to label %normal-dest1814 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1814:                                  ; preds = %normal-dest1807
  %.elt2032 = extractvalue { {}*, i64 } %459, 0
  %.elt2034 = extractvalue { {}*, i64 } %459, 1
  %cond1929 = icmp eq i64 %.elt2034, 0
  %460 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond1929, {}* %460, {}* %.elt2032
  %461 = icmp eq {}* %"%DOLIST-VAR.2", %460
  br i1 %461, label %tag88, label %tag114.preheader

tag114.preheader:                                 ; preds = %normal-dest1814
  br label %tag114

normal-dest1823:                                  ; preds = %tag231
  %ptrtoint1824 = ptrtoint {}* %153 to i64
  %entry-point-addr-uint1825 = add i64 %ptrtoint1824, 7
  %entry-point-addr1826 = inttoptr i64 %entry-point-addr-uint1825 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1827 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1826, align 8
  %462 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1827({}* %153, i64 1, {}* %60, {}* null, {}* null, {}* null)
          to label %normal-dest1830 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1830:                                  ; preds = %normal-dest1823
  %.elt2149 = extractvalue { {}*, i64 } %462, 0
  %.elt2151 = extractvalue { {}*, i64 } %462, 1
  %cond1951 = icmp eq i64 %.elt2151, 0
  %463 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233646.2 = select i1 %cond1951, {}* %463, {}* %.elt2149
  br label %tag54

normal-dest1851:                                  ; preds = %maybe-more-tests1639
  %ptrtoint1852 = ptrtoint {}* %427 to i64
  %entry-point-addr-uint1853 = add i64 %ptrtoint1852, 7
  %entry-point-addr1854 = inttoptr i64 %entry-point-addr-uint1853 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1855 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1854, align 8
  %464 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1855({}* %427, i64 1, {}* nonnull %"closure->LAMBDA1269", {}* null, {}* null, {}* null)
          to label %normal-dest1858 unwind label %cleanup-lpad.loopexit

normal-dest1858:                                  ; preds = %normal-dest1851
  %.elt2118 = extractvalue { {}*, i64 } %464, 0
  %.elt2120 = extractvalue { {}*, i64 } %464, 1
  %cond1945 = icmp eq i64 %.elt2120, 0
  %465 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233694.2 = select i1 %cond1945, {}* %465, {}* %.elt2118
  br label %tag132

normal-dest1865:                                  ; preds = %tag234
  %ptrtoint1866 = ptrtoint {}* %155 to i64
  %entry-point-addr-uint1867 = add i64 %ptrtoint1866, 7
  %entry-point-addr1868 = inttoptr i64 %entry-point-addr-uint1867 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1869 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1868, align 8
  %466 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1869({}* %155, i64 1, {}* %192, {}* null, {}* null, {}* null)
          to label %normal-dest1872 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1872:                                  ; preds = %normal-dest1865
  %.elt2282 = extractvalue { {}*, i64 } %466, 0
  %.elt2284 = extractvalue { {}*, i64 } %466, 1
  %cond1976 = icmp eq i64 %.elt2284, 0
  %467 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %OUT2334541479.0 = select i1 %cond1976, {}* %467, {}* %.elt2282
  %ptrtoint1879 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only1880 = and i64 %ptrtoint1879, 7
  %test1881 = icmp eq i64 %tag-only1880, 1
  br i1 %test1881, label %header-check-br1878, label %tag8

header-check-br1878:                              ; preds = %normal-dest1872
  %irc-bit-cast1882 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1883 = getelementptr inbounds i8, i8* %irc-bit-cast1882, i64 -9
  %irc-bit-cast1884 = bitcast i8* %gep1883 to i64*
  %468 = load i64, i64* %irc-bit-cast1884, align 8
  %.off2461 = add i64 %468, -913
  %469 = icmp ult i64 %.off2461, 85
  br i1 %469, label %tag174, label %header-check-br1099

header-check-br1891:                              ; preds = %tag240
  %irc-bit-cast1895 = bitcast {}* %"closure->LAMBDA495" to i8*
  %gep1896 = getelementptr inbounds i8, i8* %irc-bit-cast1895, i64 -9
  %irc-bit-cast1897 = bitcast i8* %gep1896 to i64*
  %470 = load i64, i64* %irc-bit-cast1897, align 8
  %.off2451 = add i64 %470, -913
  %471 = icmp ult i64 %.off2451, 85
  br i1 %471, label %tag44, label %header-check-br1657

normal-dest1901:                                  ; preds = %tag241
  %ptrtoint1902 = ptrtoint {}* %162 to i64
  %entry-point-addr-uint1903 = add i64 %ptrtoint1902, 7
  %entry-point-addr1904 = inttoptr i64 %entry-point-addr-uint1903 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1905 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1904, align 8
  %472 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1905({}* %162, i64 1, {}* %215, {}* null, {}* null, {}* null)
          to label %normal-dest1908 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1908:                                  ; preds = %normal-dest1901
  %.elt2181 = extractvalue { {}*, i64 } %472, 0
  %.elt2183 = extractvalue { {}*, i64 } %472, 1
  %cond1957 = icmp eq i64 %.elt2183, 0
  %473 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %OUT233471.0 = select i1 %cond1957, {}* %473, {}* %.elt2181
  %ptrtoint1915 = ptrtoint {}* %"closure->LAMBDA495" to i64
  %tag-only1916 = and i64 %ptrtoint1915, 7
  %test1917 = icmp eq i64 %tag-only1916, 1
  br i1 %test1917, label %header-check-br1914, label %tag204

header-check-br1914:                              ; preds = %normal-dest1908
  %irc-bit-cast1918 = bitcast {}* %"closure->LAMBDA495" to i8*
  %gep1919 = getelementptr inbounds i8, i8* %irc-bit-cast1918, i64 -9
  %irc-bit-cast1920 = bitcast i8* %gep1919 to i64*
  %474 = load i64, i64* %irc-bit-cast1920, align 8
  %.off2453 = add i64 %474, -913
  %475 = icmp ult i64 %.off2453, 85
  br i1 %475, label %tag70, label %header-check-br278
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !44 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest53, %process-rest-argument
  %format-arg-233456.0 = phi {}* [ %format-arg-233456.1, %process-rest-argument ], [ %format-arg-233456.2, %normal-dest53 ]
  %9 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 244), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest11 unwind label %cleanup-lpad

tag1:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest46 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest46, %tag1, %normal-dest31, %normal-dest25, %normal-dest18, %normal-dest14, %normal-dest11, %tag, %error
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-init, label %opt-arg

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-arg:                                          ; preds = %continue
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %rem-nargs6 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-17 = add i64 %rem-nargs6, -1
  store i64 %rem-nargs-17, i64* %"remaining-nargs*", align 8
  %vaarg8 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

opt-init:                                         ; preds = %continue
  %15 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-arg, %opt-init
  %format-arg-233456.1 = phi {}* [ %vaarg8, %opt-arg ], [ undef, %opt-init ]
  %G233459.0 = phi {}* [ %14, %opt-arg ], [ %15, %opt-init ]
  %16 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %18 = icmp eq {}* %G233459.0, %17
  br i1 %18, label %tag1, label %tag

normal-dest11:                                    ; preds = %tag
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 246), align 16
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 2, {}* %19, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 247), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest14
  %ptrtoint19 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint20 = add i64 %ptrtoint19, 7
  %entry-point-addr21 = inttoptr i64 %entry-point-addr-uint20 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point22 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr21, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point22({}* %22, i64 2, {}* %format-arg-233456.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest18
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 244), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 249), align 8
  %ptrtoint32 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %25, i64 2, {}* %26, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest31
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %28 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %29 = insertvalue { {}*, i64 } %28, i64 1, 1
  ret { {}*, i64 } %29

normal-dest46:                                    ; preds = %tag1
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 234), align 16
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 236), align 16
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 238), align 16
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 239), align 8
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 241), align 8
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 242), align 16
  %ptrtoint47 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %12, i64 7, {}* %30, {}* %31, {}* %32, {}* %33, {}* %34, {}* %35, {}* inttoptr (i64 20 to {}*))
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %.elt72 = extractvalue { {}*, i64 } %36, 0
  %.elt74 = extractvalue { {}*, i64 } %36, 1
  %cond = icmp eq i64 %.elt74, 0
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %format-arg-233456.2 = select i1 %cond, {}* %37, {}* %.elt72
  br label %tag
}

declare void @va_notEnoughArgumentsException(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }*, i64*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.1"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !45 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag2:                                             ; preds = %tag23
  %9 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag7

tag5:                                             ; preds = %tag29
  %10 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %11 = invoke {}* @cc_safe_fdefinition({}* %10)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %normal-dest109, %tag2
  %12 = phi {}* [ %.pre, %tag2 ], [ %33, %normal-dest109 ]
  %G233953.0 = phi {}* [ %9, %tag2 ], [ %G233953.1, %normal-dest109 ]
  %13 = icmp eq {}* %G233953.0, %12
  br i1 %13, label %tag10, label %tag18

tag10:                                            ; preds = %tag23, %tag7
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %26, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15

tag12:                                            ; preds = %tag12.backedge, %continue
  %I.0 = phi {}* [ null, %continue ], [ %I.0.be, %tag12.backedge ]
  %16 = ptrtoint {}* %I.0 to i64
  %fixnum-tag-only132 = and i64 %16, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only132, 0
  br i1 %fixnump-test, label %tag23, label %tag20

tag14:                                            ; preds = %normal-dest85
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest60 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %tag7
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 276), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit

tag20:                                            ; preds = %tag12
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest102 unwind label %cleanup-lpad.loopexit

tag23:                                            ; preds = %tag12
  %23 = icmp slt {}* %I.0, inttoptr (i64 8 to {}*)
  br i1 %23, label %tag2, label %tag10

tag29:                                            ; preds = %normal-dest85
  %24 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %16, i64 4)
  %result = extractvalue { i64, i1 } %24, 0
  %overflow = extractvalue { i64, i1 } %24, 1
  %25 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag5, label %tag12.backedge

tag12.backedge:                                   ; preds = %tag29, %normal-dest47, %normal-dest67
  %I.0.be = phi {}* [ %I.1, %normal-dest47 ], [ %I.2, %normal-dest67 ], [ %25, %tag29 ]
  br label %tag12

cleanup-lpad.loopexit:                            ; preds = %tag5, %normal-dest43, %tag14, %normal-dest60, %tag18, %normal-dest78, %tag20, %normal-dest102
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %26 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  br label %tag12

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

normal-dest43:                                    ; preds = %tag5
  %ptrtoint44 = ptrtoint {}* %11 to i64
  %entry-point-addr-uint = add i64 %ptrtoint44, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %11, i64 1, {}* %25, {}* null, {}* null, {}* null)
          to label %normal-dest47 unwind label %cleanup-lpad.loopexit

normal-dest47:                                    ; preds = %normal-dest43
  %.elt145 = extractvalue { {}*, i64 } %27, 0
  %.elt147 = extractvalue { {}*, i64 } %27, 1
  %cond131 = icmp eq i64 %.elt147, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %I.1 = select i1 %cond131, {}* %28, {}* %.elt145
  br label %tag12.backedge

normal-dest60:                                    ; preds = %tag14
  %ptrtoint61 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %18, i64 2, {}* %I.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad.loopexit

normal-dest67:                                    ; preds = %normal-dest60
  %.elt141 = extractvalue { {}*, i64 } %29, 0
  %.elt143 = extractvalue { {}*, i64 } %29, 1
  %cond130 = icmp eq i64 %.elt143, 0
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %I.2 = select i1 %cond130, {}* %30, {}* %.elt141
  br label %tag12.backedge

normal-dest78:                                    ; preds = %tag18
  %ptrtoint79 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint80 = add i64 %ptrtoint79, 7
  %entry-point-addr81 = inttoptr i64 %entry-point-addr-uint80 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point82 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr81, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point82({}* %20, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest85 unwind label %cleanup-lpad.loopexit

normal-dest85:                                    ; preds = %normal-dest78
  br i1 %fixnump-test, label %tag29, label %tag14

normal-dest102:                                   ; preds = %tag20
  %ptrtoint103 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint104 = add i64 %ptrtoint103, 7
  %entry-point-addr105 = inttoptr i64 %entry-point-addr-uint104 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point106 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr105, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point106({}* %22, i64 2, {}* %I.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit

normal-dest109:                                   ; preds = %normal-dest102
  %.elt = extractvalue { {}*, i64 } %32, 0
  %.elt134 = extractvalue { {}*, i64 } %32, 1
  %cond = icmp eq i64 %.elt134, 0
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G233953.1 = select i1 %cond, {}* %33, {}* %.elt
  br label %tag7
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.2"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !46 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %tag1
  %9 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest22 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest90, %process-rest-argument
  %11 = phi {}* [ %21, %process-rest-argument ], [ %52, %normal-dest90 ]
  %format-arg-233493.0 = phi {}* [ %format-arg-233493.1126, %process-rest-argument ], [ %format-arg-233493.2, %normal-dest90 ]
  %12 = icmp eq {}* %G233501.0, %11
  br i1 %12, label %tag, label %tag2

tag2:                                             ; preds = %normal-dest25, %tag1
  %format-arg-233494.0 = phi {}* [ %format-arg-233494.1, %tag1 ], [ %format-arg-233494.2, %normal-dest25 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 283), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest29 unwind label %cleanup-lpad

tag3:                                             ; preds = %process-rest-argument
  %15 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest83 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest83, %tag3, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %normal-dest42, %normal-dest36, %normal-dest29, %tag2, %normal-dest22, %tag, %error
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %17

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs8 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-19 = add i64 %rem-nargs8, -1
  store i64 %rem-nargs-19, i64* %"remaining-nargs*", align 8
  %vaarg10 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args15 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args15, label %opt-arg12, label %opt-cont.opt-init13_crit_edge

opt-cont.opt-init13_crit_edge:                    ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %process-rest-argument

opt-arg12:                                        ; preds = %opt-cont
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont.thread, %opt-cont.opt-init13_crit_edge, %opt-arg12
  %format-arg-233493.1126 = phi {}* [ %vaarg10, %opt-arg12 ], [ undef, %opt-cont.thread ], [ %vaarg10, %opt-cont.opt-init13_crit_edge ]
  %G233502.0124 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %18, %opt-cont.opt-init13_crit_edge ]
  %format-arg-233494.1 = phi {}* [ %vaarg18, %opt-arg12 ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-init13_crit_edge ]
  %G233501.0 = phi {}* [ %18, %opt-arg12 ], [ %19, %opt-cont.thread ], [ %.pre, %opt-cont.opt-init13_crit_edge ]
  %20 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %22 = icmp eq {}* %G233502.0124, %21
  br i1 %22, label %tag3, label %tag1

normal-dest22:                                    ; preds = %tag
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 234), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 236), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 238), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 239), align 8
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 282), align 16
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 242), align 16
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %23, {}* %24, {}* %25, {}* %26, {}* %27, {}* %28, {}* inttoptr (i64 40 to {}*))
          to label %normal-dest25 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %normal-dest22
  %.elt115 = extractvalue { {}*, i64 } %29, 0
  %.elt117 = extractvalue { {}*, i64 } %29, 1
  %cond = icmp eq i64 %.elt117, 0
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %format-arg-233494.2 = select i1 %cond, {}* %30, {}* %.elt115
  br label %tag2

normal-dest29:                                    ; preds = %tag2
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint30 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %14, i64 8, {}* %vaarg, {}* %format-arg-233493.0, {}* %31, {}* %31, {}* inttoptr (i64 80 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest29
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 244), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest36
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 285), align 8
  %ptrtoint43 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %34, i64 2, {}* %35, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %normal-dest42
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 247), align 8
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %ptrtoint56 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %38, i64 2, {}* %format-arg-233494.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 276), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %ptrtoint69 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %41, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %43 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %44 = insertvalue { {}*, i64 } %43, i64 1, 1
  ret { {}*, i64 } %44

normal-dest83:                                    ; preds = %tag3
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 234), align 16
  %46 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 236), align 16
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 238), align 16
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 239), align 8
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 282), align 16
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 242), align 16
  %ptrtoint84 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %16, i64 7, {}* %45, {}* %46, {}* %47, {}* %48, {}* %49, {}* %50, {}* inttoptr (i64 12 to {}*))
          to label %normal-dest90 unwind label %cleanup-lpad

normal-dest90:                                    ; preds = %normal-dest83
  %.elt119 = extractvalue { {}*, i64 } %51, 0
  %.elt121 = extractvalue { {}*, i64 } %51, 1
  %cond96 = icmp eq i64 %.elt121, 0
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %format-arg-233493.2 = select i1 %cond96, {}* %52, {}* %.elt119
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^170^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !47 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^170^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G234288.0 = phi {}* [ %18, %header-check-br ], [ %G234288.1, %normal-dest17 ], [ %G234288.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 346), align 16
  %ptrtoint43 = ptrtoint {}* %G234288.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G234288.0, i64 2, {}* %"closure->ND=FEIND_KONSISTENZCHECK", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag3, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 346), align 16
  %"closure->ND=FEIND_KONSISTENZCHECK" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=FEIND_KONSISTENZCHECK^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=FEIND_KONSISTENZCHECK^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6195, i64 170, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br34

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 345), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234288.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag3

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234288.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag3

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=FEIND_KONSISTENZCHECK", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 348), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=FEIND_KONSISTENZCHECK", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 680 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 346), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=FEIND_KONSISTENZCHECK^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !48 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=FEIND_KONSISTENZCHECK^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %tag91
  %11 = add i64 %56, 5
  %12 = inttoptr i64 %11 to {}**
  %13 = load {}*, {}** %12, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag71.backedge

tag71.backedge:                                   ; preds = %tag2, %normal-dest376
  %14 = phi {}* [ %.pre, %tag2 ], [ %148, %normal-dest376 ]
  %"%DOLIST-VAR104.0.be" = phi {}* [ %13, %tag2 ], [ %"%DOLIST-VAR104.2", %normal-dest376 ]
  %15 = icmp eq {}* %"%DOLIST-VAR104.0.be", %14
  br i1 %15, label %tag19, label %tag62

tag4:                                             ; preds = %tag62
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest106 unwind label %cleanup-lpad.loopexit

tag5:                                             ; preds = %normal-dest282, %normal-dest220, %normal-dest177, %tag15
  %G234271.0 = phi {}* [ %25, %tag15 ], [ %G234271.1, %normal-dest177 ], [ %G234271.2, %normal-dest220 ], [ %G234271.3, %normal-dest282 ]
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 168), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest121 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %tag25
  %20 = add i64 %30, -3
  %21 = inttoptr i64 %20 to {}**
  %22 = load {}*, {}** %21, align 8
  br label %tag54

tag14:                                            ; preds = %tag19
  %23 = icmp eq {}* %"%DOLIST-VAR.0559", %.val553
  %.val552 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234319.0 = select i1 %23, {}* %.val552, {}* %.val553
  %24 = icmp eq {}* %G234319.0, %.val553
  br i1 %24, label %tag18, label %tag26

tag15:                                            ; preds = %tag55
  %"untagged fixnum" = lshr exact i64 %54, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %152, i64 0, i32 1, i64 %"untagged fixnum"
  %25 = load {}*, {}** %aref, align 8
  br label %tag5

tag16:                                            ; preds = %tag56, %tag55
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest170 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %tag14
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag19:                                            ; preds = %tag73, %tag71.backedge, %normal-dest300
  %.val553 = phi {}* [ %133, %normal-dest300 ], [ %14, %tag71.backedge ], [ %64, %tag73 ]
  br i1 %consp-test206, label %tag74, label %tag14

tag25:                                            ; preds = %tag25.preheader, %tag24.backedge
  %.val543 = phi {}* [ %113, %tag24.backedge ], [ %84, %tag25.preheader ]
  %"%DOLIST-VAR.0559" = phi {}* [ %"%DOLIST-VAR.0.be", %tag24.backedge ], [ %"%DOLIST-VAR.1", %tag25.preheader ]
  %30 = ptrtoint {}* %"%DOLIST-VAR.0559" to i64
  %tag-only205448 = and i64 %30, 7
  %consp-test206 = icmp eq i64 %tag-only205448, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234491.0 = select i1 %consp-test206, {}* %.val, {}* %.val543
  %31 = icmp eq {}* %G234491.0, %.val543
  br i1 %31, label %tag81, label %tag8

tag26:                                            ; preds = %tag14, %tag24.backedge, %normal-dest101
  %32 = phi {}* [ %84, %normal-dest101 ], [ %.val553, %tag14 ], [ %113, %tag24.backedge ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

tag29:                                            ; preds = %tag61
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest213 unwind label %cleanup-lpad.loopexit

tag30:                                            ; preds = %tag90
  %37 = icmp sgt {}* %index.0, inttoptr (i64 -1 to {}*)
  %.541 = select i1 %37, {}* %.val563, {}* %157
  br label %tag56

tag43:                                            ; preds = %normal-dest404
  %irc-bit-cast414 = bitcast {}* %.in to i8*
  %gep415 = getelementptr inbounds i8, i8* %irc-bit-cast414, i64 -9
  %irc-bit-cast416 = bitcast i8* %gep415 to i64*
  %38 = load i64, i64* %irc-bit-cast416, align 8
  %39 = icmp eq i64 %38, 1137
  %.val563 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234441.0.pre = select i1 %39, {}* %.val563, {}* %157
  %40 = icmp eq {}* %G234441.0.pre, %157
  br i1 %40, label %tag49, label %tag61

tag45:                                            ; preds = %normal-dest156
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 342), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest241 unwind label %cleanup-lpad.loopexit

tag46:                                            ; preds = %tag62
  %43 = add i64 %56, -3
  %44 = inttoptr i64 %43 to {}**
  %45 = load {}*, {}** %44, align 8
  br label %tag87

tag49:                                            ; preds = %normal-dest404, %tag43
  %46 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest275 unwind label %cleanup-lpad.loopexit

tag53:                                            ; preds = %tag56
  br i1 %fixnump-test307, label %tag66, label %tag63

tag54:                                            ; preds = %normal-dest360, %tag8
  %ZEILE.0 = phi {}* [ %22, %tag8 ], [ %ZEILE.1, %normal-dest360 ]
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest293 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag55:                                            ; preds = %tag66, %normal-dest268
  %50 = phi {}* [ %124, %normal-dest268 ], [ %52, %tag66 ]
  %G234391.0 = phi {}* [ %G234391.1, %normal-dest268 ], [ %.542, %tag66 ]
  %51 = icmp eq {}* %G234391.0, %50
  br i1 %51, label %tag16, label %tag15

tag56:                                            ; preds = %tag30, %normal-dest340
  %52 = phi {}* [ %136, %normal-dest340 ], [ %157, %tag30 ]
  %G234414.0 = phi {}* [ %G234414.1, %normal-dest340 ], [ %.541, %tag30 ]
  %53 = icmp eq {}* %G234414.0, %52
  br i1 %53, label %tag16, label %tag53

tag61:                                            ; preds = %tag43
  %54 = ptrtoint {}* %index.0 to i64
  %fixnum-tag-only306462 = and i64 %54, 3
  %fixnump-test307 = icmp eq i64 %fixnum-tag-only306462, 0
  %G234438.0 = select i1 %fixnump-test307, {}* %.val563, {}* %157
  %55 = icmp eq {}* %G234438.0, %157
  br i1 %55, label %tag29, label %tag90

tag62:                                            ; preds = %tag62.preheader, %tag71.backedge
  %.val545 = phi {}* [ %14, %tag71.backedge ], [ %133, %tag62.preheader ]
  %"%DOLIST-VAR104.0558" = phi {}* [ %"%DOLIST-VAR104.0.be", %tag71.backedge ], [ %"%DOLIST-VAR104.1", %tag62.preheader ]
  %56 = ptrtoint {}* %"%DOLIST-VAR104.0558" to i64
  %tag-only313453 = and i64 %56, 7
  %consp-test314 = icmp eq i64 %tag-only313453, 3
  %.val544 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234468.0 = select i1 %consp-test314, {}* %.val544, {}* %.val545
  %57 = icmp eq {}* %G234468.0, %.val545
  br i1 %57, label %tag4, label %tag46

tag63:                                            ; preds = %tag53
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %59 = invoke {}* @cc_safe_fdefinition({}* %58)
          to label %normal-dest261 unwind label %cleanup-lpad.loopexit

tag66:                                            ; preds = %tag53
  %60 = icmp sgt i64 %"tag fixnum", %54
  %61 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.542 = select i1 %60, {}* %61, {}* %52
  br label %tag55

tag69:                                            ; preds = %tag90
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest333 unwind label %cleanup-lpad.loopexit

tag73:                                            ; preds = %tag91
  %64 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %65 = icmp eq {}* %"%DOLIST-VAR104.0558", %64
  %.val550 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234338.0 = select i1 %65, {}* %.val550, {}* %64
  %66 = icmp eq {}* %G234338.0, %64
  br i1 %66, label %tag84, label %tag19

tag74:                                            ; preds = %tag19
  %67 = add i64 %30, 5
  %68 = inttoptr i64 %67 to {}**
  %69 = load {}*, {}** %68, align 8
  br label %tag24.backedge

tag81:                                            ; preds = %tag25
  %70 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %71 = invoke {}* @cc_safe_fdefinition({}* %70)
          to label %normal-dest353 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag84:                                            ; preds = %tag73
  %72 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %73 = invoke {}* @cc_safe_fdefinition({}* %72)
          to label %normal-dest369 unwind label %cleanup-lpad.loopexit

tag87:                                            ; preds = %normal-dest114, %tag46
  %SPALTE.0 = phi {}* [ %45, %tag46 ], [ %SPALTE.1, %normal-dest114 ]
  %74 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest383 unwind label %cleanup-lpad.loopexit

tag90:                                            ; preds = %tag61
  %76 = add i64 %ptrtoint411, 7
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %"tag fixnum" = shl nuw i64 %78, 2
  %79 = inttoptr i64 %"tag fixnum" to {}*
  br i1 %fixnump-test307, label %tag30, label %tag69

tag91:                                            ; preds = %normal-dest241, %normal-dest156
  br i1 %consp-test314, label %tag2, label %tag73

cleanup-lpad.loopexit:                            ; preds = %tag4, %normal-dest106, %tag5, %normal-dest121, %normal-dest123, %normal-dest130, %normal-dest142, %normal-dest149, %tag16, %normal-dest170, %tag29, %normal-dest213, %tag45, %normal-dest241, %tag63, %normal-dest261, %tag49, %normal-dest275, %tag69, %normal-dest333, %tag84, %normal-dest369, %tag87, %normal-dest383, %normal-dest390, %normal-dest397
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest353, %tag81, %normal-dest293, %tag54, %normal-dest185, %tag18
  %lpad.loopexit554 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %normal-dest98, %normal-dest
  %lpad.loopexit.split-lp555 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit554, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp555, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %80 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %81 = invoke {}* @cc_safe_fdefinition({}* %80)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest98:                                    ; preds = %normal-dest
  %82 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint = ptrtoint {}* %81 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %81, i64 1, {}* %82, {}* null, {}* null, {}* null)
          to label %normal-dest101 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest101:                                   ; preds = %normal-dest98
  %.elt = extractvalue { {}*, i64 } %83, 0
  %.elt447 = extractvalue { {}*, i64 } %83, 1
  %cond = icmp eq i64 %.elt447, 0
  %84 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %84, {}* %.elt
  %85 = icmp eq {}* %"%DOLIST-VAR.1", %84
  br i1 %85, label %tag26, label %tag25.preheader

tag25.preheader:                                  ; preds = %normal-dest101
  br label %tag25

normal-dest106:                                   ; preds = %tag4
  %86 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %87 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %88 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint108 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint109 = add i64 %ptrtoint108, 7
  %entry-point-addr110 = inttoptr i64 %entry-point-addr-uint109 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point111 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr110, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point111({}* %17, i64 5, {}* %86, {}* %87, {}* %"%DOLIST-VAR104.0558", {}* %88, {}* %89)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit

normal-dest114:                                   ; preds = %normal-dest106
  %.elt508 = extractvalue { {}*, i64 } %90, 0
  %.elt510 = extractvalue { {}*, i64 } %90, 1
  %cond443 = icmp eq i64 %.elt510, 0
  %91 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %SPALTE.1 = select i1 %cond443, {}* %91, {}* %.elt508
  br label %tag87

normal-dest121:                                   ; preds = %tag5
  %92 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 338), align 16
  %93 = invoke {}* @cc_safe_fdefinition({}* %92)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit

normal-dest123:                                   ; preds = %normal-dest121
  %ptrtoint124 = ptrtoint {}* %93 to i64
  %entry-point-addr-uint125 = add i64 %ptrtoint124, 7
  %entry-point-addr126 = inttoptr i64 %entry-point-addr-uint125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr126, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point127({}* %93, i64 2, {}* %ZEILE.0, {}* %SPALTE.0, {}* null, {}* null)
          to label %normal-dest130 unwind label %cleanup-lpad.loopexit

normal-dest130:                                   ; preds = %normal-dest123
  %.elt474 = extractvalue { {}*, i64 } %94, 0
  %.elt476 = extractvalue { {}*, i64 } %94, 1
  %cond436 = icmp eq i64 %.elt476, 0
  %95 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234363.0 = select i1 %cond436, {}* %95, {}* %.elt474
  %ptrtoint136 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint137 = add i64 %ptrtoint136, 7
  %entry-point-addr138 = inttoptr i64 %entry-point-addr-uint137 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point139 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr138, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point139({}* %19, i64 2, {}* %ZEILE.0, {}* %G234363.0, {}* null, {}* null)
          to label %normal-dest142 unwind label %cleanup-lpad.loopexit

normal-dest142:                                   ; preds = %normal-dest130
  %.elt478 = extractvalue { {}*, i64 } %96, 0
  %.elt480 = extractvalue { {}*, i64 } %96, 1
  %cond437 = icmp eq i64 %.elt480, 0
  %97 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234272.0 = select i1 %cond437, {}* %97, {}* %.elt478
  %98 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 340), align 16
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest149 unwind label %cleanup-lpad.loopexit

normal-dest149:                                   ; preds = %normal-dest142
  %ptrtoint150 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint151 = add i64 %ptrtoint150, 7
  %entry-point-addr152 = inttoptr i64 %entry-point-addr-uint151 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point153 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr152, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point153({}* %99, i64 2, {}* %G234271.0, {}* %G234272.0, {}* null, {}* null)
          to label %normal-dest156 unwind label %cleanup-lpad.loopexit

normal-dest156:                                   ; preds = %normal-dest149
  %.elt482 = extractvalue { {}*, i64 } %100, 0
  %.elt484 = extractvalue { {}*, i64 } %100, 1
  %cond438 = icmp eq i64 %.elt484, 0
  %101 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %object.0 = select i1 %cond438, {}* %101, {}* %.elt482
  %102 = icmp eq {}* %object.0, %101
  %.val548 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234352.0 = select i1 %102, {}* %.val548, {}* %101
  %103 = icmp eq {}* %G234352.0, %101
  br i1 %103, label %tag91, label %tag45

normal-dest170:                                   ; preds = %tag16
  %104 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint171 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint172 = add i64 %ptrtoint171, 7
  %entry-point-addr173 = inttoptr i64 %entry-point-addr-uint172 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point174 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr173, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point174({}* %27, i64 3, {}* %104, {}* %index.0, {}* %79, {}* null)
          to label %normal-dest177 unwind label %cleanup-lpad.loopexit

normal-dest177:                                   ; preds = %normal-dest170
  %.elt495 = extractvalue { {}*, i64 } %105, 0
  %.elt497 = extractvalue { {}*, i64 } %105, 1
  %cond440 = icmp eq i64 %.elt497, 0
  %106 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234271.1 = select i1 %cond440, {}* %106, {}* %.elt495
  br label %tag5

normal-dest185:                                   ; preds = %tag18
  %107 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %108 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %109 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %110 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint186 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint187 = add i64 %ptrtoint186, 7
  %entry-point-addr188 = inttoptr i64 %entry-point-addr-uint187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr188, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point189({}* %29, i64 5, {}* %107, {}* %108, {}* %"%DOLIST-VAR.0559", {}* %109, {}* %110)
          to label %normal-dest192 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest192:                                   ; preds = %normal-dest185
  %.elt513 = extractvalue { {}*, i64 } %111, 0
  %.elt515 = extractvalue { {}*, i64 } %111, 1
  %cond444 = icmp eq i64 %.elt515, 0
  %112 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond444, {}* %112, {}* %.elt513
  br label %tag24.backedge

tag24.backedge:                                   ; preds = %normal-dest192, %tag74
  %113 = phi {}* [ %.val553, %tag74 ], [ %112, %normal-dest192 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %69, %tag74 ], [ %"%DOLIST-VAR.2", %normal-dest192 ]
  %114 = icmp eq {}* %"%DOLIST-VAR.0.be", %113
  br i1 %114, label %tag26, label %tag25

normal-dest213:                                   ; preds = %tag29
  %115 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %116 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %117 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %118 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint214 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint215 = add i64 %ptrtoint214, 7
  %entry-point-addr216 = inttoptr i64 %entry-point-addr-uint215 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point217 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr216, align 8
  %119 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point217({}* %36, i64 5, {}* %115, {}* %116, {}* %index.0, {}* %117, {}* %118)
          to label %normal-dest220 unwind label %cleanup-lpad.loopexit

normal-dest220:                                   ; preds = %normal-dest213
  %.elt500 = extractvalue { {}*, i64 } %119, 0
  %.elt502 = extractvalue { {}*, i64 } %119, 1
  %cond441 = icmp eq i64 %.elt502, 0
  %120 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234271.2 = select i1 %cond441, {}* %120, {}* %.elt500
  br label %tag5

normal-dest241:                                   ; preds = %tag45
  %121 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 344), align 16
  %ptrtoint242 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint243 = add i64 %ptrtoint242, 7
  %entry-point-addr244 = inttoptr i64 %entry-point-addr-uint243 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point245 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr244, align 8
  %122 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point245({}* %42, i64 5, {}* %121, {}* %ZEILE.0, {}* %SPALTE.0, {}* %G234271.0, {}* %G234272.0)
          to label %tag91 unwind label %cleanup-lpad.loopexit

normal-dest261:                                   ; preds = %tag63
  %ptrtoint262 = ptrtoint {}* %59 to i64
  %entry-point-addr-uint263 = add i64 %ptrtoint262, 7
  %entry-point-addr264 = inttoptr i64 %entry-point-addr-uint263 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point265 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr264, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point265({}* %59, i64 2, {}* %index.0, {}* %79, {}* null, {}* null)
          to label %normal-dest268 unwind label %cleanup-lpad.loopexit

normal-dest268:                                   ; preds = %normal-dest261
  %.elt470 = extractvalue { {}*, i64 } %123, 0
  %.elt472 = extractvalue { {}*, i64 } %123, 1
  %cond435 = icmp eq i64 %.elt472, 0
  %124 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234391.1 = select i1 %cond435, {}* %124, {}* %.elt470
  br label %tag55

normal-dest275:                                   ; preds = %tag49
  %125 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %126 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %127 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %128 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint276 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint277 = add i64 %ptrtoint276, 7
  %entry-point-addr278 = inttoptr i64 %entry-point-addr-uint277 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point279 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr278, align 8
  %129 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point279({}* %47, i64 5, {}* %125, {}* %126, {}* %.in, {}* %127, {}* %128)
          to label %normal-dest282 unwind label %cleanup-lpad.loopexit

normal-dest282:                                   ; preds = %normal-dest275
  %.elt504 = extractvalue { {}*, i64 } %129, 0
  %.elt506 = extractvalue { {}*, i64 } %129, 1
  %cond442 = icmp eq i64 %.elt506, 0
  %130 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234271.3 = select i1 %cond442, {}* %130, {}* %.elt504
  br label %tag5

normal-dest293:                                   ; preds = %tag54
  %131 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 106), align 16
  %ptrtoint294 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint295 = add i64 %ptrtoint294, 7
  %entry-point-addr296 = inttoptr i64 %entry-point-addr-uint295 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point297 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr296, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point297({}* %49, i64 1, {}* %131, {}* null, {}* null, {}* null)
          to label %normal-dest300 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest300:                                   ; preds = %normal-dest293
  %.elt450 = extractvalue { {}*, i64 } %132, 0
  %.elt452 = extractvalue { {}*, i64 } %132, 1
  %cond431 = icmp eq i64 %.elt452, 0
  %133 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR104.1" = select i1 %cond431, {}* %133, {}* %.elt450
  %134 = icmp eq {}* %"%DOLIST-VAR104.1", %133
  br i1 %134, label %tag19, label %tag62.preheader

tag62.preheader:                                  ; preds = %normal-dest300
  br label %tag62

normal-dest333:                                   ; preds = %tag69
  %ptrtoint334 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint335 = add i64 %ptrtoint334, 7
  %entry-point-addr336 = inttoptr i64 %entry-point-addr-uint335 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point337 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr336, align 8
  %135 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point337({}* %63, i64 2, {}* null, {}* %index.0, {}* null, {}* null)
          to label %normal-dest340 unwind label %cleanup-lpad.loopexit

normal-dest340:                                   ; preds = %normal-dest333
  %.elt465 = extractvalue { {}*, i64 } %135, 0
  %.elt467 = extractvalue { {}*, i64 } %135, 1
  %cond434 = icmp eq i64 %.elt467, 0
  %136 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234414.1 = select i1 %cond434, {}* %136, {}* %.elt465
  br label %tag56

normal-dest353:                                   ; preds = %tag81
  %137 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %138 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %139 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %140 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint354 = ptrtoint {}* %71 to i64
  %entry-point-addr-uint355 = add i64 %ptrtoint354, 7
  %entry-point-addr356 = inttoptr i64 %entry-point-addr-uint355 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point357 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr356, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point357({}* %71, i64 5, {}* %137, {}* %138, {}* %"%DOLIST-VAR.0559", {}* %139, {}* %140)
          to label %normal-dest360 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest360:                                   ; preds = %normal-dest353
  %.elt517 = extractvalue { {}*, i64 } %141, 0
  %.elt519 = extractvalue { {}*, i64 } %141, 1
  %cond445 = icmp eq i64 %.elt519, 0
  %142 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ZEILE.1 = select i1 %cond445, {}* %142, {}* %.elt517
  br label %tag54

normal-dest369:                                   ; preds = %tag84
  %143 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %144 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %145 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %146 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint370 = ptrtoint {}* %73 to i64
  %entry-point-addr-uint371 = add i64 %ptrtoint370, 7
  %entry-point-addr372 = inttoptr i64 %entry-point-addr-uint371 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point373 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr372, align 8
  %147 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point373({}* %73, i64 5, {}* %143, {}* %144, {}* %"%DOLIST-VAR104.0558", {}* %145, {}* %146)
          to label %normal-dest376 unwind label %cleanup-lpad.loopexit

normal-dest376:                                   ; preds = %normal-dest369
  %.elt491 = extractvalue { {}*, i64 } %147, 0
  %.elt493 = extractvalue { {}*, i64 } %147, 1
  %cond439 = icmp eq i64 %.elt493, 0
  %148 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR104.2" = select i1 %cond439, {}* %148, {}* %.elt491
  br label %tag71.backedge

normal-dest383:                                   ; preds = %tag87
  %149 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint384 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint385 = add i64 %ptrtoint384, 7
  %entry-point-addr386 = inttoptr i64 %entry-point-addr-uint385 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point387 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr386, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point387({}* %75, i64 2, {}* %ZEILE.0, {}* %149, {}* null, {}* null)
          to label %normal-dest390 unwind label %cleanup-lpad.loopexit

normal-dest390:                                   ; preds = %normal-dest383
  %.elt455 = extractvalue { {}*, i64 } %150, 0
  %.elt457 = extractvalue { {}*, i64 } %150, 1
  %cond432 = icmp eq i64 %.elt457, 0
  %151 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond432, {}* %151, {}* %.elt455
  %152 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %153 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %154 = invoke {}* @cc_safe_fdefinition({}* %153)
          to label %normal-dest397 unwind label %cleanup-lpad.loopexit

normal-dest397:                                   ; preds = %normal-dest390
  %155 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint398 = ptrtoint {}* %154 to i64
  %entry-point-addr-uint399 = add i64 %ptrtoint398, 7
  %entry-point-addr400 = inttoptr i64 %entry-point-addr-uint399 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point401 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr400, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point401({}* %154, i64 2, {}* %SPALTE.0, {}* %155, {}* null, {}* null)
          to label %normal-dest404 unwind label %cleanup-lpad.loopexit

normal-dest404:                                   ; preds = %normal-dest397
  %.elt459 = extractvalue { {}*, i64 } %156, 0
  %.elt461 = extractvalue { {}*, i64 } %156, 1
  %cond433 = icmp eq i64 %.elt461, 0
  %157 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %index.0 = select i1 %cond433, {}* %157, {}* %.elt459
  %ptrtoint411 = ptrtoint {}* %.in to i64
  %tag-only412 = and i64 %ptrtoint411, 7
  %test413 = icmp eq i64 %tag-only412, 1
  br i1 %test413, label %tag43, label %tag49
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^184^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !49 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^184^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G234517.0 = phi {}* [ %18, %header-check-br ], [ %G234517.1, %normal-dest54 ], [ %G234517.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 352), align 16
  %ptrtoint13 = ptrtoint {}* %G234517.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G234517.0, i64 2, {}* %"closure->ND=ERGEBNIS-KONSISTENZCHECK", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 352), align 16
  %"closure->ND=ERGEBNIS-KONSISTENZCHECK" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=ERGEBNIS-KONSISTENZCHECK^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERGEBNIS-KONSISTENZCHECK^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6728, i64 184, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND=ERGEBNIS-KONSISTENZCHECK", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 354), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND=ERGEBNIS-KONSISTENZCHECK", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 736 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 352), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 351), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234517.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag1

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234517.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=ERGEBNIS-KONSISTENZCHECK^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !50 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERGEBNIS-KONSISTENZCHECK^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %tag27
  %11 = add i64 %32, -3
  %12 = inttoptr i64 %11 to {}**
  %13 = load {}*, {}** %12, align 8
  br label %tag17

tag2:                                             ; preds = %normal-dest215
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest41 unwind label %cleanup-lpad.loopexit

tag4:                                             ; preds = %tag27
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest166 unwind label %cleanup-lpad.loopexit

tag5:                                             ; preds = %normal-dest240
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 168), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %tag9
  %20 = add i64 %32, 5
  %21 = inttoptr i64 %20 to {}**
  %22 = load {}*, {}** %21, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag18.backedge

tag18.backedge:                                   ; preds = %tag8, %normal-dest254
  %23 = phi {}* [ %.pre, %tag8 ], [ %108, %normal-dest254 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %22, %tag8 ], [ %"%DOLIST-VAR.2", %normal-dest254 ]
  %24 = icmp eq {}* %"%DOLIST-VAR.0.be", %23
  br i1 %24, label %tag24, label %tag27

tag9:                                             ; preds = %normal-dest148, %normal-dest240, %normal-dest215
  br i1 %consp-test268, label %tag8, label %tag29

tag17:                                            ; preds = %normal-dest173, %tag1
  %ZEILE.0 = phi {}* [ %13, %tag1 ], [ %ZEILE.1, %normal-dest173 ]
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest233 unwind label %cleanup-lpad.loopexit

tag23:                                            ; preds = %tag29
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest247 unwind label %cleanup-lpad.loopexit

tag24:                                            ; preds = %tag29, %tag18.backedge, %normal-dest37
  %29 = phi {}* [ %41, %normal-dest37 ], [ %23, %tag18.backedge ], [ %34, %tag29 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %30 = insertvalue { {}*, i64 } undef, {}* %29, 0
  %31 = insertvalue { {}*, i64 } %30, i64 1, 1
  ret { {}*, i64 } %31

tag27:                                            ; preds = %tag27.preheader, %tag18.backedge
  %.val370 = phi {}* [ %23, %tag18.backedge ], [ %41, %tag27.preheader ]
  %"%DOLIST-VAR.0377" = phi {}* [ %"%DOLIST-VAR.0.be", %tag18.backedge ], [ %"%DOLIST-VAR.1", %tag27.preheader ]
  %32 = ptrtoint {}* %"%DOLIST-VAR.0377" to i64
  %tag-only267291 = and i64 %32, 7
  %consp-test268 = icmp eq i64 %tag-only267291, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234632.0 = select i1 %consp-test268, {}* %.val, {}* %.val370
  %33 = icmp eq {}* %G234632.0, %.val370
  br i1 %33, label %tag4, label %tag1

tag29:                                            ; preds = %tag9
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %35 = icmp eq {}* %"%DOLIST-VAR.0377", %34
  %.val375 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234548.0 = select i1 %35, {}* %.val375, {}* %34
  %36 = icmp eq {}* %G234548.0, %34
  br i1 %36, label %tag23, label %tag24

cleanup-lpad.loopexit:                            ; preds = %tag2, %normal-dest41, %normal-dest43, %normal-dest45, %normal-dest52, %normal-dest59, %normal-dest66, %normal-dest73, %normal-dest75, %normal-dest82, %normal-dest94, %normal-dest101, %normal-dest103, %normal-dest105, %normal-dest112, %normal-dest124, %normal-dest136, %normal-dest148, %tag4, %normal-dest166, %tag5, %normal-dest180, %normal-dest182, %normal-dest184, %normal-dest191, %normal-dest203, %tag17, %normal-dest233, %tag23, %normal-dest247
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest34, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest34 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest34:                                    ; preds = %normal-dest
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint = ptrtoint {}* %38 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %38, i64 1, {}* %39, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest37:                                    ; preds = %normal-dest34
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt290 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt290, 0
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %41, {}* %.elt
  %42 = icmp eq {}* %"%DOLIST-VAR.1", %41
  br i1 %42, label %tag24, label %tag27.preheader

tag27.preheader:                                  ; preds = %normal-dest37
  br label %tag27

normal-dest41:                                    ; preds = %tag2
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit

normal-dest43:                                    ; preds = %normal-dest41
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest45 unwind label %cleanup-lpad.loopexit

normal-dest45:                                    ; preds = %normal-dest43
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 349), align 8
  %ptrtoint46 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %46, i64 1, {}* %47, {}* null, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad.loopexit

normal-dest52:                                    ; preds = %normal-dest45
  %.elt309 = extractvalue { {}*, i64 } %48, 0
  %.elt311 = extractvalue { {}*, i64 } %48, 1
  %cond279 = icmp eq i64 %.elt311, 0
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234558.0 = select i1 %cond279, {}* %49, {}* %.elt309
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest59 unwind label %cleanup-lpad.loopexit

normal-dest59:                                    ; preds = %normal-dest52
  %ptrtoint60 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %51, i64 1, {}* %ZEILE.0, {}* null, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit

normal-dest66:                                    ; preds = %normal-dest59
  %.elt313 = extractvalue { {}*, i64 } %52, 0
  %.elt315 = extractvalue { {}*, i64 } %52, 1
  %cond280 = icmp eq i64 %.elt315, 0
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234559.0 = select i1 %cond280, {}* %53, {}* %.elt313
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit

normal-dest73:                                    ; preds = %normal-dest66
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit

normal-dest75:                                    ; preds = %normal-dest73
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint76 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint77 = add i64 %ptrtoint76, 7
  %entry-point-addr78 = inttoptr i64 %entry-point-addr-uint77 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point79 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr78, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point79({}* %57, i64 2, {}* %ZEILE.0, {}* %58, {}* null, {}* null)
          to label %normal-dest82 unwind label %cleanup-lpad.loopexit

normal-dest82:                                    ; preds = %normal-dest75
  %.elt317 = extractvalue { {}*, i64 } %59, 0
  %.elt319 = extractvalue { {}*, i64 } %59, 1
  %cond281 = icmp eq i64 %.elt319, 0
  %60 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234575.0 = select i1 %cond281, {}* %60, {}* %.elt317
  %ptrtoint88 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint89 = add i64 %ptrtoint88, 7
  %entry-point-addr90 = inttoptr i64 %entry-point-addr-uint89 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point91 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr90, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point91({}* %55, i64 1, {}* %G234575.0, {}* null, {}* null, {}* null)
          to label %normal-dest94 unwind label %cleanup-lpad.loopexit

normal-dest94:                                    ; preds = %normal-dest82
  %.elt321 = extractvalue { {}*, i64 } %61, 0
  %.elt323 = extractvalue { {}*, i64 } %61, 1
  %cond282 = icmp eq i64 %.elt323, 0
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234560.0 = select i1 %cond282, {}* %62, {}* %.elt321
  %63 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest101 unwind label %cleanup-lpad.loopexit

normal-dest101:                                   ; preds = %normal-dest94
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 338), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest103 unwind label %cleanup-lpad.loopexit

normal-dest103:                                   ; preds = %normal-dest101
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest105 unwind label %cleanup-lpad.loopexit

normal-dest105:                                   ; preds = %normal-dest103
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint106 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint107 = add i64 %ptrtoint106, 7
  %entry-point-addr108 = inttoptr i64 %entry-point-addr-uint107 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point109 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr108, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point109({}* %68, i64 2, {}* %ZEILE.0, {}* %69, {}* null, {}* null)
          to label %normal-dest112 unwind label %cleanup-lpad.loopexit

normal-dest112:                                   ; preds = %normal-dest105
  %.elt325 = extractvalue { {}*, i64 } %70, 0
  %.elt327 = extractvalue { {}*, i64 } %70, 1
  %cond283 = icmp eq i64 %.elt327, 0
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234567.0 = select i1 %cond283, {}* %71, {}* %.elt325
  %ptrtoint118 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint119 = add i64 %ptrtoint118, 7
  %entry-point-addr120 = inttoptr i64 %entry-point-addr-uint119 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point121 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr120, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point121({}* %66, i64 2, {}* %ZEILE.0, {}* %G234567.0, {}* null, {}* null)
          to label %normal-dest124 unwind label %cleanup-lpad.loopexit

normal-dest124:                                   ; preds = %normal-dest112
  %.elt329 = extractvalue { {}*, i64 } %72, 0
  %.elt331 = extractvalue { {}*, i64 } %72, 1
  %cond284 = icmp eq i64 %.elt331, 0
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234564.0 = select i1 %cond284, {}* %73, {}* %.elt329
  %ptrtoint130 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint131 = add i64 %ptrtoint130, 7
  %entry-point-addr132 = inttoptr i64 %entry-point-addr-uint131 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point133 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr132, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point133({}* %64, i64 1, {}* %G234564.0, {}* null, {}* null, {}* null)
          to label %normal-dest136 unwind label %cleanup-lpad.loopexit

normal-dest136:                                   ; preds = %normal-dest124
  %.elt333 = extractvalue { {}*, i64 } %74, 0
  %.elt335 = extractvalue { {}*, i64 } %74, 1
  %cond285 = icmp eq i64 %.elt335, 0
  %75 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234561.0 = select i1 %cond285, {}* %75, {}* %.elt333
  %ptrtoint142 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint143 = add i64 %ptrtoint142, 7
  %entry-point-addr144 = inttoptr i64 %entry-point-addr-uint143 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point145 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr144, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point145({}* %44, i64 5, {}* %G234558.0, {}* %G234559.0, {}* %G234560.0, {}* %G234561.0, {}* %75)
          to label %normal-dest148 unwind label %cleanup-lpad.loopexit

normal-dest148:                                   ; preds = %normal-dest136
  %.elt337 = extractvalue { {}*, i64 } %76, 0
  %.elt339 = extractvalue { {}*, i64 } %76, 1
  %cond286 = icmp eq i64 %.elt339, 0
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234556.0 = select i1 %cond286, {}* %77, {}* %.elt337
  %ptrtoint154 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint155 = add i64 %ptrtoint154, 7
  %entry-point-addr156 = inttoptr i64 %entry-point-addr-uint155 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point157 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr156, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point157({}* %15, i64 1, {}* %G234556.0, {}* null, {}* null, {}* null)
          to label %tag9 unwind label %cleanup-lpad.loopexit

normal-dest166:                                   ; preds = %tag4
  %79 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %80 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %81 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %82 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint167 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint168 = add i64 %ptrtoint167, 7
  %entry-point-addr169 = inttoptr i64 %entry-point-addr-uint168 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point170 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr169, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point170({}* %17, i64 5, {}* %79, {}* %80, {}* %"%DOLIST-VAR.0377", {}* %81, {}* %82)
          to label %normal-dest173 unwind label %cleanup-lpad.loopexit

normal-dest173:                                   ; preds = %normal-dest166
  %.elt350 = extractvalue { {}*, i64 } %83, 0
  %.elt352 = extractvalue { {}*, i64 } %83, 1
  %cond288 = icmp eq i64 %.elt352, 0
  %84 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ZEILE.1 = select i1 %cond288, {}* %84, {}* %.elt350
  br label %tag17

normal-dest180:                                   ; preds = %tag5
  %85 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 338), align 16
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest182 unwind label %cleanup-lpad.loopexit

normal-dest182:                                   ; preds = %normal-dest180
  %87 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest184 unwind label %cleanup-lpad.loopexit

normal-dest184:                                   ; preds = %normal-dest182
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint185 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %88, i64 2, {}* %ZEILE.0, {}* %89, {}* null, {}* null)
          to label %normal-dest191 unwind label %cleanup-lpad.loopexit

normal-dest191:                                   ; preds = %normal-dest184
  %.elt297 = extractvalue { {}*, i64 } %90, 0
  %.elt299 = extractvalue { {}*, i64 } %90, 1
  %cond276 = icmp eq i64 %.elt299, 0
  %91 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234603.0 = select i1 %cond276, {}* %91, {}* %.elt297
  %ptrtoint197 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint198 = add i64 %ptrtoint197, 7
  %entry-point-addr199 = inttoptr i64 %entry-point-addr-uint198 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point200 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr199, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point200({}* %86, i64 2, {}* %ZEILE.0, {}* %G234603.0, {}* null, {}* null)
          to label %normal-dest203 unwind label %cleanup-lpad.loopexit

normal-dest203:                                   ; preds = %normal-dest191
  %.elt301 = extractvalue { {}*, i64 } %92, 0
  %.elt303 = extractvalue { {}*, i64 } %92, 1
  %cond277 = icmp eq i64 %.elt303, 0
  %93 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234600.0 = select i1 %cond277, {}* %93, {}* %.elt301
  %ptrtoint209 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint210 = add i64 %ptrtoint209, 7
  %entry-point-addr211 = inttoptr i64 %entry-point-addr-uint210 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point212 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr211, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point212({}* %19, i64 2, {}* %ZEILE.0, {}* %G234600.0, {}* null, {}* null)
          to label %normal-dest215 unwind label %cleanup-lpad.loopexit

normal-dest215:                                   ; preds = %normal-dest203
  %.elt305 = extractvalue { {}*, i64 } %94, 0
  %.elt307 = extractvalue { {}*, i64 } %94, 1
  %cond278 = icmp eq i64 %.elt307, 0
  %95 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x.0 = select i1 %cond278, {}* %95, {}* %.elt305
  %96 = icmp eq {}* %x.0, %95
  %.val371 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %object.0 = select i1 %96, {}* %.val371, {}* %95
  %97 = icmp eq {}* %object.0, %95
  %G234589.0 = select i1 %97, {}* %.val371, {}* %95
  %98 = icmp eq {}* %G234589.0, %95
  br i1 %98, label %tag9, label %tag2

normal-dest233:                                   ; preds = %tag17
  %99 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint234 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint235 = add i64 %ptrtoint234, 7
  %entry-point-addr236 = inttoptr i64 %entry-point-addr-uint235 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point237 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr236, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point237({}* %26, i64 2, {}* %ZEILE.0, {}* %99, {}* null, {}* null)
          to label %normal-dest240 unwind label %cleanup-lpad.loopexit

normal-dest240:                                   ; preds = %normal-dest233
  %.elt293 = extractvalue { {}*, i64 } %100, 0
  %.elt295 = extractvalue { {}*, i64 } %100, 1
  %cond275 = icmp eq i64 %.elt295, 0
  %101 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234610.0 = select i1 %cond275, {}* %101, {}* %.elt293
  %102 = icmp eq {}* %G234610.0, %101
  br i1 %102, label %tag9, label %tag5

normal-dest247:                                   ; preds = %tag23
  %103 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %104 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %105 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %106 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint248 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint249 = add i64 %ptrtoint248, 7
  %entry-point-addr250 = inttoptr i64 %entry-point-addr-uint249 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point251 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr250, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point251({}* %28, i64 5, {}* %103, {}* %104, {}* %"%DOLIST-VAR.0377", {}* %105, {}* %106)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit

normal-dest254:                                   ; preds = %normal-dest247
  %.elt346 = extractvalue { {}*, i64 } %107, 0
  %.elt348 = extractvalue { {}*, i64 } %107, 1
  %cond287 = icmp eq i64 %.elt348, 0
  %108 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond287, {}* %108, {}* %.elt346
  br label %tag18.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^192^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !51 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^192^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest23, %tag2
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 355), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag2:                                             ; preds = %normal-dest23
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 355), align 8
  call void @cc_setSymbolValue({}* %14, {}* %.val)
  br label %tag1

cleanup-lpad:                                     ; preds = %10, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 0), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 355), align 8
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 56), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 355), align 8
  %ptrtoint17 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %21, i64 1, {}* %22, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt33 = extractvalue { {}*, i64 } %23, 0
  %.elt35 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt35, 0
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %object.0 = select i1 %cond, {}* %24, {}* %.elt33
  %25 = icmp eq {}* %object.0, %24
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234644.0 = select i1 %25, {}* %.val, {}* %24
  %26 = icmp eq {}* %G234644.0, %24
  br i1 %26, label %tag1, label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !52 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 355), align 8
  call void @cc_setSymbolValue({}* %13, {}* %12)
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %15 = insertvalue { {}*, i64 } %14, i64 1, 1
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE.3"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !53 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE.3^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G234677.0 = phi {}* [ %18, %header-check-br ], [ %G234677.1, %normal-dest17 ], [ %G234677.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 369), align 8
  %ptrtoint43 = ptrtoint {}* %G234677.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G234677.0, i64 2, {}* %"closure->ND=VOR_MINIMUM_IN_AGENDA_SUCHEN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 369), align 8
  %"closure->ND=VOR_MINIMUM_IN_AGENDA_SUCHEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=VOR_MINIMUM_IN_AGENDA_SUCHEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=VOR_MINIMUM_IN_AGENDA_SUCHEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7145, i64 193, i64 22, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234677.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 368), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234677.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=VOR_MINIMUM_IN_AGENDA_SUCHEN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 371), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=VOR_MINIMUM_IN_AGENDA_SUCHEN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 780 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 369), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=VOR_MINIMUM_IN_AGENDA_SUCHEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !54 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=VOR_MINIMUM_IN_AGENDA_SUCHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest21, %normal-dest84
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 355), align 8
  %12 = invoke {}* @cc_safe_symbol_value({}* %11)
          to label %normal-dest19 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest84
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 363), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest21 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest19, %normal-dest54
  %return-value.sroa.8.0 = phi i64 [ %.elt106, %normal-dest54 ], [ 1, %normal-dest19 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt104, %normal-dest54 ], [ %12, %normal-dest19 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %15 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %16 = insertvalue { {}*, i64 } %15, i64 %return-value.sroa.8.0, 1
  ret { {}*, i64 } %16

tag3:                                             ; preds = %normal-dest19
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 365), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest34 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest17
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 359), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest58 unwind label %cleanup-lpad

tag6:                                             ; preds = %normal-dest58, %normal-dest17
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 361), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest71 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest78, %normal-dest71, %tag6, %normal-dest58, %tag5, %normal-dest47, %normal-dest41, %normal-dest34, %tag3, %normal-dest21, %tag1, %tag, %normal-dest14, %normal-dest11, %normal-dest
  %23 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %23

normal-dest:                                      ; preds = %entry
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 357), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest11 unwind label %cleanup-lpad

normal-dest11:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest11
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 355), align 8
  %28 = invoke {}* @cc_safe_symbol_value({}* %27)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest14
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %30 = icmp eq {}* %28, %29
  br i1 %30, label %tag6, label %tag5

normal-dest19:                                    ; preds = %tag
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %32 = icmp eq {}* %12, %31
  br i1 %32, label %tag2, label %tag3

normal-dest21:                                    ; preds = %tag1
  %ptrtoint22 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %14, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %tag unwind label %cleanup-lpad

normal-dest34:                                    ; preds = %tag3
  %ptrtoint35 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %18, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest34
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 342), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest47:                                    ; preds = %normal-dest41
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 367), align 8
  %ptrtoint48 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %36, i64 1, {}* %37, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt104 = extractvalue { {}*, i64 } %38, 0
  %.elt106 = extractvalue { {}*, i64 } %38, 1
  br label %tag2

normal-dest58:                                    ; preds = %tag5
  %ptrtoint59 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %20, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %tag6 unwind label %cleanup-lpad

normal-dest71:                                    ; preds = %tag6
  %ptrtoint72 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint73 = add i64 %ptrtoint72, 7
  %entry-point-addr74 = inttoptr i64 %entry-point-addr-uint73 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point75 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr74, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point75({}* %22, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest78 unwind label %cleanup-lpad

normal-dest78:                                    ; preds = %normal-dest71
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 355), align 8
  %42 = invoke {}* @cc_safe_symbol_value({}* %41)
          to label %normal-dest84 unwind label %cleanup-lpad

normal-dest84:                                    ; preds = %normal-dest78
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %44 = icmp eq {}* %42, %43
  br i1 %44, label %tag, label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^207^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !55 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^207^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G234737.0 = phi {}* [ %18, %header-check-br ], [ %G234737.1, %normal-dest63 ], [ %G234737.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 363), align 8
  %ptrtoint13 = ptrtoint {}* %G234737.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G234737.0, i64 2, {}* %"closure->ND-ZEIGE_DISLIKE", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests54, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 363), align 8
  %"closure->ND-ZEIGE_DISLIKE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND-ZEIGE_DISLIKE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_DISLIKE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7443, i64 207, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND-ZEIGE_DISLIKE", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 373), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND-ZEIGE_DISLIKE", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 828 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 363), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag4

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %maybe-more-tests54
  %ptrtoint57 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234737.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 372), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234737.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND-ZEIGE_DISLIKE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !56 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_DISLIKE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %tag10, %tag14.backedge, %normal-dest66
  %11 = phi {}* [ %47, %normal-dest66 ], [ %61, %tag14.backedge ], [ %23, %tag10 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag3:                                             ; preds = %tag19
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit

tag5:                                             ; preds = %tag10
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest92 unwind label %cleanup-lpad.loopexit

tag6:                                             ; preds = %tag19
  %18 = add i64 %29, -3
  %19 = inttoptr i64 %18 to {}**
  %20 = load {}*, {}** %19, align 8
  br label %tag9

tag9:                                             ; preds = %normal-dest85, %tag6
  %Z.0 = phi {}* [ %20, %tag6 ], [ %Z.1, %normal-dest85 ]
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest107 unwind label %cleanup-lpad.loopexit

tag10:                                            ; preds = %normal-dest170
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %24 = icmp eq {}* %"%DOLIST-VAR.0256", %23
  %.val254 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234768.0 = select i1 %24, {}* %.val254, {}* %23
  %25 = icmp eq {}* %G234768.0, %23
  br i1 %25, label %tag5, label %tag2

tag11:                                            ; preds = %normal-dest170
  %26 = add i64 %29, 5
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag14.backedge

tag19:                                            ; preds = %tag19.preheader, %tag14.backedge
  %.val253 = phi {}* [ %61, %tag14.backedge ], [ %47, %tag19.preheader ]
  %"%DOLIST-VAR.0256" = phi {}* [ %"%DOLIST-VAR.0.be", %tag14.backedge ], [ %"%DOLIST-VAR.1", %tag19.preheader ]
  %29 = ptrtoint {}* %"%DOLIST-VAR.0256" to i64
  %tag-only187211 = and i64 %29, 7
  %consp-test188 = icmp eq i64 %tag-only187211, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234809.0 = select i1 %consp-test188, {}* %.val, {}* %.val253
  %30 = icmp eq {}* %G234809.0, %.val253
  br i1 %30, label %tag3, label %tag6

cleanup-lpad.loopexit:                            ; preds = %tag3, %normal-dest78, %tag5, %normal-dest92, %tag9, %normal-dest107, %normal-dest109, %normal-dest111, %normal-dest118, %normal-dest125, %normal-dest127, %normal-dest134, %normal-dest146, %normal-dest158
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest25, %normal-dest27, %normal-dest29, %normal-dest32, %normal-dest41, %normal-dest53, %normal-dest59, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest27 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest27:                                    ; preds = %normal-dest25
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest29 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest29:                                    ; preds = %normal-dest27
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 144), align 16
  %ptrtoint = ptrtoint {}* %36 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %36, i64 1, {}* %37, {}* null, {}* null, {}* null)
          to label %normal-dest32 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest32:                                    ; preds = %normal-dest29
  %.elt = extractvalue { {}*, i64 } %38, 0
  %.elt198 = extractvalue { {}*, i64 } %38, 1
  %cond = icmp eq i64 %.elt198, 0
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234819.0 = select i1 %cond, {}* %39, {}* %.elt
  %ptrtoint35 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %34, i64 2, {}* %G234819.0, {}* %39, {}* null, {}* null)
          to label %normal-dest41 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest41:                                    ; preds = %normal-dest32
  %.elt200 = extractvalue { {}*, i64 } %40, 0
  %.elt202 = extractvalue { {}*, i64 } %40, 1
  %cond189 = icmp eq i64 %.elt202, 0
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234817.0 = select i1 %cond189, {}* %41, {}* %.elt200
  %ptrtoint47 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %32, i64 1, {}* %G234817.0, {}* null, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest53:                                    ; preds = %normal-dest41
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest59 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest59:                                    ; preds = %normal-dest53
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint60 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %44, i64 1, {}* %45, {}* null, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest66:                                    ; preds = %normal-dest59
  %.elt208 = extractvalue { {}*, i64 } %46, 0
  %.elt210 = extractvalue { {}*, i64 } %46, 1
  %cond190 = icmp eq i64 %.elt210, 0
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond190, {}* %47, {}* %.elt208
  %48 = icmp eq {}* %"%DOLIST-VAR.1", %47
  br i1 %48, label %tag2, label %tag19.preheader

tag19.preheader:                                  ; preds = %normal-dest66
  br label %tag19

normal-dest78:                                    ; preds = %tag3
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint79 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint80 = add i64 %ptrtoint79, 7
  %entry-point-addr81 = inttoptr i64 %entry-point-addr-uint80 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point82 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr81, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point82({}* %15, i64 5, {}* %49, {}* %50, {}* %"%DOLIST-VAR.0256", {}* %51, {}* %52)
          to label %normal-dest85 unwind label %cleanup-lpad.loopexit

normal-dest85:                                    ; preds = %normal-dest78
  %.elt238 = extractvalue { {}*, i64 } %53, 0
  %.elt240 = extractvalue { {}*, i64 } %53, 1
  %cond196 = icmp eq i64 %.elt240, 0
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %Z.1 = select i1 %cond196, {}* %54, {}* %.elt238
  br label %tag9

normal-dest92:                                    ; preds = %tag5
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint94 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint95 = add i64 %ptrtoint94, 7
  %entry-point-addr96 = inttoptr i64 %entry-point-addr-uint95 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point97 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr96, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point97({}* %17, i64 5, {}* %55, {}* %56, {}* %"%DOLIST-VAR.0256", {}* %57, {}* %58)
          to label %normal-dest100 unwind label %cleanup-lpad.loopexit

normal-dest100:                                   ; preds = %normal-dest92
  %.elt234 = extractvalue { {}*, i64 } %59, 0
  %.elt236 = extractvalue { {}*, i64 } %59, 1
  %cond195 = icmp eq i64 %.elt236, 0
  %60 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond195, {}* %60, {}* %.elt234
  br label %tag14.backedge

tag14.backedge:                                   ; preds = %normal-dest100, %tag11
  %61 = phi {}* [ %.pre, %tag11 ], [ %60, %normal-dest100 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %28, %tag11 ], [ %"%DOLIST-VAR.2", %normal-dest100 ]
  %62 = icmp eq {}* %"%DOLIST-VAR.0.be", %61
  br i1 %62, label %tag2, label %tag19

normal-dest107:                                   ; preds = %tag9
  %63 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit

normal-dest109:                                   ; preds = %normal-dest107
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest111 unwind label %cleanup-lpad.loopexit

normal-dest111:                                   ; preds = %normal-dest109
  %ptrtoint112 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint113 = add i64 %ptrtoint112, 7
  %entry-point-addr114 = inttoptr i64 %entry-point-addr-uint113 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point115 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr114, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point115({}* %66, i64 1, {}* %Z.0, {}* null, {}* null, {}* null)
          to label %normal-dest118 unwind label %cleanup-lpad.loopexit

normal-dest118:                                   ; preds = %normal-dest111
  %.elt213 = extractvalue { {}*, i64 } %67, 0
  %.elt215 = extractvalue { {}*, i64 } %67, 1
  %cond191 = icmp eq i64 %.elt215, 0
  %68 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234778.0 = select i1 %cond191, {}* %68, {}* %.elt213
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest125 unwind label %cleanup-lpad.loopexit

normal-dest125:                                   ; preds = %normal-dest118
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest127 unwind label %cleanup-lpad.loopexit

normal-dest127:                                   ; preds = %normal-dest125
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 144), align 16
  %ptrtoint128 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint129 = add i64 %ptrtoint128, 7
  %entry-point-addr130 = inttoptr i64 %entry-point-addr-uint129 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point131 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr130, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point131({}* %72, i64 2, {}* %Z.0, {}* %73, {}* null, {}* null)
          to label %normal-dest134 unwind label %cleanup-lpad.loopexit

normal-dest134:                                   ; preds = %normal-dest127
  %.elt217 = extractvalue { {}*, i64 } %74, 0
  %.elt219 = extractvalue { {}*, i64 } %74, 1
  %cond192 = icmp eq i64 %.elt219, 0
  %75 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234782.0 = select i1 %cond192, {}* %75, {}* %.elt217
  %ptrtoint140 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint141 = add i64 %ptrtoint140, 7
  %entry-point-addr142 = inttoptr i64 %entry-point-addr-uint141 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point143 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr142, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point143({}* %70, i64 1, {}* %G234782.0, {}* null, {}* null, {}* null)
          to label %normal-dest146 unwind label %cleanup-lpad.loopexit

normal-dest146:                                   ; preds = %normal-dest134
  %.elt221 = extractvalue { {}*, i64 } %76, 0
  %.elt223 = extractvalue { {}*, i64 } %76, 1
  %cond193 = icmp eq i64 %.elt223, 0
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234779.0 = select i1 %cond193, {}* %77, {}* %.elt221
  %ptrtoint152 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint153 = add i64 %ptrtoint152, 7
  %entry-point-addr154 = inttoptr i64 %entry-point-addr-uint153 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point155 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr154, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point155({}* %64, i64 3, {}* %G234778.0, {}* %G234779.0, {}* %77, {}* null)
          to label %normal-dest158 unwind label %cleanup-lpad.loopexit

normal-dest158:                                   ; preds = %normal-dest146
  %.elt225 = extractvalue { {}*, i64 } %78, 0
  %.elt227 = extractvalue { {}*, i64 } %78, 1
  %cond194 = icmp eq i64 %.elt227, 0
  %79 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234776.0 = select i1 %cond194, {}* %79, {}* %.elt225
  %ptrtoint164 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint165 = add i64 %ptrtoint164, 7
  %entry-point-addr166 = inttoptr i64 %entry-point-addr-uint165 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point167 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr166, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point167({}* %22, i64 1, {}* %G234776.0, {}* null, {}* null, {}* null)
          to label %normal-dest170 unwind label %cleanup-lpad.loopexit

normal-dest170:                                   ; preds = %normal-dest158
  br i1 %consp-test188, label %tag11, label %tag10
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^213^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !57 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^213^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G234845.0 = phi {}* [ %18, %header-check-br ], [ %G234845.1, %normal-dest17 ], [ %G234845.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 377), align 8
  %ptrtoint20 = ptrtoint {}* %G234845.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G234845.0, i64 2, {}* %"closure->ND-ZEIGE_FEINDE", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %maybe-more-tests67, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 377), align 8
  %"closure->ND-ZEIGE_FEINDE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND-ZEIGE_FEINDE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_FEINDE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7591, i64 213, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %maybe-more-tests67
  %ptrtoint14 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234845.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->ND-ZEIGE_FEINDE", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 379), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->ND-ZEIGE_FEINDE", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 852 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 377), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 376), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234845.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND-ZEIGE_FEINDE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !58 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_FEINDE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %tag18, %tag16.backedge, %normal-dest66
  %11 = phi {}* [ %47, %normal-dest66 ], [ %55, %tag16.backedge ], [ %26, %tag18 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag1:                                             ; preds = %tag18
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit

tag2:                                             ; preds = %normal-dest156
  %16 = add i64 %29, 5
  %17 = inttoptr i64 %16 to {}**
  %18 = load {}*, {}** %17, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag16.backedge

tag7:                                             ; preds = %tag19
  %19 = add i64 %29, -3
  %20 = inttoptr i64 %19 to {}**
  %21 = load {}*, {}** %20, align 8
  br label %tag8

tag8:                                             ; preds = %normal-dest170, %tag7
  %Z.0 = phi {}* [ %21, %tag7 ], [ %Z.1, %normal-dest170 ]
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest93 unwind label %cleanup-lpad.loopexit

tag10:                                            ; preds = %tag19
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest163 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %normal-dest156
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %27 = icmp eq {}* %"%DOLIST-VAR.0255", %26
  %.val253 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234876.0 = select i1 %27, {}* %.val253, {}* %26
  %28 = icmp eq {}* %G234876.0, %26
  br i1 %28, label %tag1, label %tag

tag19:                                            ; preds = %tag19.preheader, %tag16.backedge
  %.val252 = phi {}* [ %55, %tag16.backedge ], [ %47, %tag19.preheader ]
  %"%DOLIST-VAR.0255" = phi {}* [ %"%DOLIST-VAR.0.be", %tag16.backedge ], [ %"%DOLIST-VAR.1", %tag19.preheader ]
  %29 = ptrtoint {}* %"%DOLIST-VAR.0255" to i64
  %tag-only187211 = and i64 %29, 7
  %consp-test188 = icmp eq i64 %tag-only187211, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234917.0 = select i1 %consp-test188, {}* %.val, {}* %.val252
  %30 = icmp eq {}* %G234917.0, %.val252
  br i1 %30, label %tag10, label %tag7

cleanup-lpad.loopexit:                            ; preds = %tag1, %normal-dest75, %tag8, %normal-dest93, %normal-dest95, %normal-dest97, %normal-dest104, %normal-dest111, %normal-dest113, %normal-dest120, %normal-dest132, %normal-dest144, %tag10, %normal-dest163
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest25, %normal-dest27, %normal-dest29, %normal-dest32, %normal-dest41, %normal-dest53, %normal-dest59, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest27 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest27:                                    ; preds = %normal-dest25
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest29 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest29:                                    ; preds = %normal-dest27
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 374), align 16
  %ptrtoint = ptrtoint {}* %36 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %36, i64 1, {}* %37, {}* null, {}* null, {}* null)
          to label %normal-dest32 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest32:                                    ; preds = %normal-dest29
  %.elt = extractvalue { {}*, i64 } %38, 0
  %.elt198 = extractvalue { {}*, i64 } %38, 1
  %cond = icmp eq i64 %.elt198, 0
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234927.0 = select i1 %cond, {}* %39, {}* %.elt
  %ptrtoint35 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %34, i64 2, {}* %G234927.0, {}* %39, {}* null, {}* null)
          to label %normal-dest41 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest41:                                    ; preds = %normal-dest32
  %.elt200 = extractvalue { {}*, i64 } %40, 0
  %.elt202 = extractvalue { {}*, i64 } %40, 1
  %cond189 = icmp eq i64 %.elt202, 0
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234925.0 = select i1 %cond189, {}* %41, {}* %.elt200
  %ptrtoint47 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %32, i64 1, {}* %G234925.0, {}* null, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest53:                                    ; preds = %normal-dest41
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest59 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest59:                                    ; preds = %normal-dest53
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint60 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %44, i64 1, {}* %45, {}* null, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest66:                                    ; preds = %normal-dest59
  %.elt208 = extractvalue { {}*, i64 } %46, 0
  %.elt210 = extractvalue { {}*, i64 } %46, 1
  %cond190 = icmp eq i64 %.elt210, 0
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond190, {}* %47, {}* %.elt208
  %48 = icmp eq {}* %"%DOLIST-VAR.1", %47
  br i1 %48, label %tag, label %tag19.preheader

tag19.preheader:                                  ; preds = %normal-dest66
  br label %tag19

normal-dest75:                                    ; preds = %tag1
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint76 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint77 = add i64 %ptrtoint76, 7
  %entry-point-addr78 = inttoptr i64 %entry-point-addr-uint77 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point79 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr78, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point79({}* %15, i64 5, {}* %49, {}* %50, {}* %"%DOLIST-VAR.0255", {}* %51, {}* %52)
          to label %normal-dest82 unwind label %cleanup-lpad.loopexit

normal-dest82:                                    ; preds = %normal-dest75
  %.elt234 = extractvalue { {}*, i64 } %53, 0
  %.elt236 = extractvalue { {}*, i64 } %53, 1
  %cond195 = icmp eq i64 %.elt236, 0
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond195, {}* %54, {}* %.elt234
  br label %tag16.backedge

tag16.backedge:                                   ; preds = %normal-dest82, %tag2
  %55 = phi {}* [ %.pre, %tag2 ], [ %54, %normal-dest82 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %18, %tag2 ], [ %"%DOLIST-VAR.2", %normal-dest82 ]
  %56 = icmp eq {}* %"%DOLIST-VAR.0.be", %55
  br i1 %56, label %tag, label %tag19

normal-dest93:                                    ; preds = %tag8
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest95 unwind label %cleanup-lpad.loopexit

normal-dest95:                                    ; preds = %normal-dest93
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest97 unwind label %cleanup-lpad.loopexit

normal-dest97:                                    ; preds = %normal-dest95
  %ptrtoint98 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint99 = add i64 %ptrtoint98, 7
  %entry-point-addr100 = inttoptr i64 %entry-point-addr-uint99 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr100, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point101({}* %60, i64 1, {}* %Z.0, {}* null, {}* null, {}* null)
          to label %normal-dest104 unwind label %cleanup-lpad.loopexit

normal-dest104:                                   ; preds = %normal-dest97
  %.elt213 = extractvalue { {}*, i64 } %61, 0
  %.elt215 = extractvalue { {}*, i64 } %61, 1
  %cond191 = icmp eq i64 %.elt215, 0
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234886.0 = select i1 %cond191, {}* %62, {}* %.elt213
  %63 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest111 unwind label %cleanup-lpad.loopexit

normal-dest111:                                   ; preds = %normal-dest104
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest113 unwind label %cleanup-lpad.loopexit

normal-dest113:                                   ; preds = %normal-dest111
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint114 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint115 = add i64 %ptrtoint114, 7
  %entry-point-addr116 = inttoptr i64 %entry-point-addr-uint115 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point117 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr116, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point117({}* %66, i64 2, {}* %Z.0, {}* %67, {}* null, {}* null)
          to label %normal-dest120 unwind label %cleanup-lpad.loopexit

normal-dest120:                                   ; preds = %normal-dest113
  %.elt217 = extractvalue { {}*, i64 } %68, 0
  %.elt219 = extractvalue { {}*, i64 } %68, 1
  %cond192 = icmp eq i64 %.elt219, 0
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234890.0 = select i1 %cond192, {}* %69, {}* %.elt217
  %ptrtoint126 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint127 = add i64 %ptrtoint126, 7
  %entry-point-addr128 = inttoptr i64 %entry-point-addr-uint127 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point129 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr128, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point129({}* %64, i64 1, {}* %G234890.0, {}* null, {}* null, {}* null)
          to label %normal-dest132 unwind label %cleanup-lpad.loopexit

normal-dest132:                                   ; preds = %normal-dest120
  %.elt221 = extractvalue { {}*, i64 } %70, 0
  %.elt223 = extractvalue { {}*, i64 } %70, 1
  %cond193 = icmp eq i64 %.elt223, 0
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234887.0 = select i1 %cond193, {}* %71, {}* %.elt221
  %ptrtoint138 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint139 = add i64 %ptrtoint138, 7
  %entry-point-addr140 = inttoptr i64 %entry-point-addr-uint139 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point141 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr140, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point141({}* %58, i64 3, {}* %G234886.0, {}* %G234887.0, {}* %71, {}* null)
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit

normal-dest144:                                   ; preds = %normal-dest132
  %.elt225 = extractvalue { {}*, i64 } %72, 0
  %.elt227 = extractvalue { {}*, i64 } %72, 1
  %cond194 = icmp eq i64 %.elt227, 0
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234884.0 = select i1 %cond194, {}* %73, {}* %.elt225
  %ptrtoint150 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint151 = add i64 %ptrtoint150, 7
  %entry-point-addr152 = inttoptr i64 %entry-point-addr-uint151 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point153 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr152, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point153({}* %23, i64 1, {}* %G234884.0, {}* null, {}* null, {}* null)
          to label %normal-dest156 unwind label %cleanup-lpad.loopexit

normal-dest156:                                   ; preds = %normal-dest144
  br i1 %consp-test188, label %tag2, label %tag18

normal-dest163:                                   ; preds = %tag10
  %75 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %76 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %78 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint164 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint165 = add i64 %ptrtoint164, 7
  %entry-point-addr166 = inttoptr i64 %entry-point-addr-uint165 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point167 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr166, align 8
  %79 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point167({}* %25, i64 5, {}* %75, {}* %76, {}* %"%DOLIST-VAR.0255", {}* %77, {}* %78)
          to label %normal-dest170 unwind label %cleanup-lpad.loopexit

normal-dest170:                                   ; preds = %normal-dest163
  %.elt238 = extractvalue { {}*, i64 } %79, 0
  %.elt240 = extractvalue { {}*, i64 } %79, 1
  %cond196 = icmp eq i64 %.elt240, 0
  %80 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %Z.1 = select i1 %cond196, {}* %80, {}* %.elt238
  br label %tag8
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^219^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !59 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^219^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G234953.0 = phi {}* [ %18, %header-check-br ], [ %G234953.1, %normal-dest17 ], [ %G234953.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 381), align 8
  %ptrtoint34 = ptrtoint {}* %G234953.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G234953.0, i64 2, {}* %"closure->ND-ZEIGE_DAMEN", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag3, %normal-dest21, %maybe-more-tests81, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 381), align 8
  %"closure->ND-ZEIGE_DAMEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND-ZEIGE_DAMEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_DAMEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7735, i64 219, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br73

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 380), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234953.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag3

normal-dest21:                                    ; preds = %maybe-more-tests81
  %ptrtoint22 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234953.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag3

normal-dest40:                                    ; preds = %tag3
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->ND-ZEIGE_DAMEN", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 383), align 8
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->ND-ZEIGE_DAMEN", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 876 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 381), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest21 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND-ZEIGE_DAMEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !60 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_DAMEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %tag18
  %11 = add i64 %28, -3
  %12 = inttoptr i64 %11 to {}**
  %13 = load {}*, {}** %12, align 8
  br label %tag8

tag12.backedge:                                   ; preds = %normal-dest164, %tag16
  %14 = phi {}* [ %.pre, %tag16 ], [ %80, %normal-dest164 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %27, %tag16 ], [ %"%DOLIST-VAR.2", %normal-dest164 ]
  %15 = icmp eq {}* %"%DOLIST-VAR.0.be", %14
  br i1 %15, label %tag13, label %tag18

tag3:                                             ; preds = %tag18
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %normal-dest80, %tag
  %Z.0 = phi {}* [ %13, %tag ], [ %Z.1, %normal-dest80 ]
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest87 unwind label %cleanup-lpad.loopexit

tag10:                                            ; preds = %tag20
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest157 unwind label %cleanup-lpad.loopexit

tag13:                                            ; preds = %tag20, %tag12.backedge, %normal-dest66
  %22 = phi {}* [ %49, %normal-dest66 ], [ %14, %tag12.backedge ], [ %30, %tag20 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %23 = insertvalue { {}*, i64 } undef, {}* %22, 0
  %24 = insertvalue { {}*, i64 } %23, i64 1, 1
  ret { {}*, i64 } %24

tag16:                                            ; preds = %normal-dest150
  %25 = add i64 %28, 5
  %26 = inttoptr i64 %25 to {}**
  %27 = load {}*, {}** %26, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag12.backedge

tag18:                                            ; preds = %tag18.preheader, %tag12.backedge
  %.val252 = phi {}* [ %14, %tag12.backedge ], [ %49, %tag18.preheader ]
  %"%DOLIST-VAR.0255" = phi {}* [ %"%DOLIST-VAR.0.be", %tag12.backedge ], [ %"%DOLIST-VAR.1", %tag18.preheader ]
  %28 = ptrtoint {}* %"%DOLIST-VAR.0255" to i64
  %tag-only181211 = and i64 %28, 7
  %consp-test182 = icmp eq i64 %tag-only181211, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235025.0 = select i1 %consp-test182, {}* %.val, {}* %.val252
  %29 = icmp eq {}* %G235025.0, %.val252
  br i1 %29, label %tag3, label %tag

tag20:                                            ; preds = %normal-dest150
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %31 = icmp eq {}* %"%DOLIST-VAR.0255", %30
  %.val253 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G234984.0 = select i1 %31, {}* %.val253, {}* %30
  %32 = icmp eq {}* %G234984.0, %30
  br i1 %32, label %tag10, label %tag13

cleanup-lpad.loopexit:                            ; preds = %tag3, %normal-dest73, %tag8, %normal-dest87, %normal-dest89, %normal-dest91, %normal-dest98, %normal-dest105, %normal-dest107, %normal-dest114, %normal-dest126, %normal-dest138, %tag10, %normal-dest157
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest25, %normal-dest27, %normal-dest29, %normal-dest32, %normal-dest41, %normal-dest53, %normal-dest59, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest27 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest27:                                    ; preds = %normal-dest25
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest29 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest29:                                    ; preds = %normal-dest27
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 374), align 16
  %ptrtoint = ptrtoint {}* %38 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %38, i64 1, {}* %39, {}* null, {}* null, {}* null)
          to label %normal-dest32 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest32:                                    ; preds = %normal-dest29
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt198 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt198, 0
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235035.0 = select i1 %cond, {}* %41, {}* %.elt
  %ptrtoint35 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %36, i64 2, {}* %G235035.0, {}* %41, {}* null, {}* null)
          to label %normal-dest41 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest41:                                    ; preds = %normal-dest32
  %.elt200 = extractvalue { {}*, i64 } %42, 0
  %.elt202 = extractvalue { {}*, i64 } %42, 1
  %cond189 = icmp eq i64 %.elt202, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235033.0 = select i1 %cond189, {}* %43, {}* %.elt200
  %ptrtoint47 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %34, i64 1, {}* %G235033.0, {}* null, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest53:                                    ; preds = %normal-dest41
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest59 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest59:                                    ; preds = %normal-dest53
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint60 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %46, i64 1, {}* %47, {}* null, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest66:                                    ; preds = %normal-dest59
  %.elt208 = extractvalue { {}*, i64 } %48, 0
  %.elt210 = extractvalue { {}*, i64 } %48, 1
  %cond190 = icmp eq i64 %.elt210, 0
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond190, {}* %49, {}* %.elt208
  %50 = icmp eq {}* %"%DOLIST-VAR.1", %49
  br i1 %50, label %tag13, label %tag18.preheader

tag18.preheader:                                  ; preds = %normal-dest66
  br label %tag18

normal-dest73:                                    ; preds = %tag3
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint74 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %17, i64 5, {}* %51, {}* %52, {}* %"%DOLIST-VAR.0255", {}* %53, {}* %54)
          to label %normal-dest80 unwind label %cleanup-lpad.loopexit

normal-dest80:                                    ; preds = %normal-dest73
  %.elt238 = extractvalue { {}*, i64 } %55, 0
  %.elt240 = extractvalue { {}*, i64 } %55, 1
  %cond196 = icmp eq i64 %.elt240, 0
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %Z.1 = select i1 %cond196, {}* %56, {}* %.elt238
  br label %tag8

normal-dest87:                                    ; preds = %tag8
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest89 unwind label %cleanup-lpad.loopexit

normal-dest89:                                    ; preds = %normal-dest87
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest91 unwind label %cleanup-lpad.loopexit

normal-dest91:                                    ; preds = %normal-dest89
  %ptrtoint92 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %60, i64 1, {}* %Z.0, {}* null, {}* null, {}* null)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit

normal-dest98:                                    ; preds = %normal-dest91
  %.elt213 = extractvalue { {}*, i64 } %61, 0
  %.elt215 = extractvalue { {}*, i64 } %61, 1
  %cond191 = icmp eq i64 %.elt215, 0
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234994.0 = select i1 %cond191, {}* %62, {}* %.elt213
  %63 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest105 unwind label %cleanup-lpad.loopexit

normal-dest105:                                   ; preds = %normal-dest98
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest107 unwind label %cleanup-lpad.loopexit

normal-dest107:                                   ; preds = %normal-dest105
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint108 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint109 = add i64 %ptrtoint108, 7
  %entry-point-addr110 = inttoptr i64 %entry-point-addr-uint109 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point111 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr110, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point111({}* %66, i64 2, {}* %Z.0, {}* %67, {}* null, {}* null)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit

normal-dest114:                                   ; preds = %normal-dest107
  %.elt217 = extractvalue { {}*, i64 } %68, 0
  %.elt219 = extractvalue { {}*, i64 } %68, 1
  %cond192 = icmp eq i64 %.elt219, 0
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234998.0 = select i1 %cond192, {}* %69, {}* %.elt217
  %ptrtoint120 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint121 = add i64 %ptrtoint120, 7
  %entry-point-addr122 = inttoptr i64 %entry-point-addr-uint121 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point123 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr122, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point123({}* %64, i64 1, {}* %G234998.0, {}* null, {}* null, {}* null)
          to label %normal-dest126 unwind label %cleanup-lpad.loopexit

normal-dest126:                                   ; preds = %normal-dest114
  %.elt221 = extractvalue { {}*, i64 } %70, 0
  %.elt223 = extractvalue { {}*, i64 } %70, 1
  %cond193 = icmp eq i64 %.elt223, 0
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234995.0 = select i1 %cond193, {}* %71, {}* %.elt221
  %ptrtoint132 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint133 = add i64 %ptrtoint132, 7
  %entry-point-addr134 = inttoptr i64 %entry-point-addr-uint133 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point135 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr134, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point135({}* %58, i64 3, {}* %G234994.0, {}* %G234995.0, {}* %71, {}* null)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit

normal-dest138:                                   ; preds = %normal-dest126
  %.elt225 = extractvalue { {}*, i64 } %72, 0
  %.elt227 = extractvalue { {}*, i64 } %72, 1
  %cond194 = icmp eq i64 %.elt227, 0
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G234992.0 = select i1 %cond194, {}* %73, {}* %.elt225
  %ptrtoint144 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint145 = add i64 %ptrtoint144, 7
  %entry-point-addr146 = inttoptr i64 %entry-point-addr-uint145 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point147 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr146, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point147({}* %19, i64 1, {}* %G234992.0, {}* null, {}* null, {}* null)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit

normal-dest150:                                   ; preds = %normal-dest138
  br i1 %consp-test182, label %tag16, label %tag20

normal-dest157:                                   ; preds = %tag10
  %75 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %76 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %78 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint158 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint159 = add i64 %ptrtoint158, 7
  %entry-point-addr160 = inttoptr i64 %entry-point-addr-uint159 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point161 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr160, align 8
  %79 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point161({}* %21, i64 5, {}* %75, {}* %76, {}* %"%DOLIST-VAR.0255", {}* %77, {}* %78)
          to label %normal-dest164 unwind label %cleanup-lpad.loopexit

normal-dest164:                                   ; preds = %normal-dest157
  %.elt234 = extractvalue { {}*, i64 } %79, 0
  %.elt236 = extractvalue { {}*, i64 } %79, 1
  %cond195 = icmp eq i64 %.elt236, 0
  %80 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond195, {}* %80, {}* %.elt234
  br label %tag12.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^225^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !61 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^225^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G235061.0 = phi {}* [ %18, %header-check-br ], [ %G235061.1, %normal-dest63 ], [ %G235061.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 365), align 8
  %ptrtoint13 = ptrtoint {}* %G235061.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G235061.0, i64 2, {}* %"closure->ND-ZEIGE_OMEGA", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 365), align 8
  %"closure->ND-ZEIGE_OMEGA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND-ZEIGE_OMEGA^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_OMEGA^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7872, i64 225, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND-ZEIGE_OMEGA", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 387), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND-ZEIGE_OMEGA", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 900 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 365), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag2

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag2
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 386), align 16
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235061.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235061.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND-ZEIGE_OMEGA^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !62 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_OMEGA^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %tag8, %tag18.backedge, %normal-dest28
  %11 = phi {}* [ %37, %normal-dest28 ], [ %16, %tag18.backedge ], [ %20, %tag8 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag2:                                             ; preds = %tag12
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest34 unwind label %cleanup-lpad.loopexit

tag18.backedge:                                   ; preds = %normal-dest56, %tag20
  %16 = phi {}* [ %.pre, %tag20 ], [ %50, %normal-dest56 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %32, %tag20 ], [ %"%DOLIST-VAR.2", %normal-dest56 ]
  %17 = icmp eq {}* %"%DOLIST-VAR.0.be", %16
  br i1 %17, label %tag, label %tag12

tag4:                                             ; preds = %tag8
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest48 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %normal-dest129
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %21 = icmp eq {}* %"%DOLIST-VAR.0199", %20
  %.val197 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235092.0 = select i1 %21, {}* %.val197, {}* %20
  %22 = icmp eq {}* %G235092.0, %20
  br i1 %22, label %tag4, label %tag

tag11:                                            ; preds = %normal-dest41, %tag13
  %Z.0 = phi {}* [ %29, %tag13 ], [ %Z.1, %normal-dest41 ]
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit

tag12:                                            ; preds = %tag12.preheader, %tag18.backedge
  %.val196 = phi {}* [ %16, %tag18.backedge ], [ %37, %tag12.preheader ]
  %"%DOLIST-VAR.0199" = phi {}* [ %"%DOLIST-VAR.0.be", %tag18.backedge ], [ %"%DOLIST-VAR.1", %tag12.preheader ]
  %25 = ptrtoint {}* %"%DOLIST-VAR.0199" to i64
  %tag-only140156 = and i64 %25, 7
  %consp-test141 = icmp eq i64 %tag-only140156, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235132.0 = select i1 %consp-test141, {}* %.val, {}* %.val196
  %26 = icmp eq {}* %G235132.0, %.val196
  br i1 %26, label %tag2, label %tag13

tag13:                                            ; preds = %tag12
  %27 = add i64 %25, -3
  %28 = inttoptr i64 %27 to {}**
  %29 = load {}*, {}** %28, align 8
  br label %tag11

tag20:                                            ; preds = %normal-dest129
  %30 = add i64 %25, 5
  %31 = inttoptr i64 %30 to {}**
  %32 = load {}*, {}** %31, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag18.backedge

cleanup-lpad.loopexit:                            ; preds = %tag2, %normal-dest34, %tag4, %normal-dest48, %tag11, %normal-dest66, %normal-dest68, %normal-dest70, %normal-dest77, %normal-dest84, %normal-dest86, %normal-dest93, %normal-dest105, %normal-dest117
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest25, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint = ptrtoint {}* %34 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %34, i64 1, {}* %35, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest28:                                    ; preds = %normal-dest25
  %.elt = extractvalue { {}*, i64 } %36, 0
  %.elt155 = extractvalue { {}*, i64 } %36, 1
  %cond = icmp eq i64 %.elt155, 0
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %37, {}* %.elt
  %38 = icmp eq {}* %"%DOLIST-VAR.1", %37
  br i1 %38, label %tag, label %tag12.preheader

tag12.preheader:                                  ; preds = %normal-dest28
  br label %tag12

normal-dest34:                                    ; preds = %tag2
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint35 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %15, i64 5, {}* %39, {}* %40, {}* %"%DOLIST-VAR.0199", {}* %41, {}* %42)
          to label %normal-dest41 unwind label %cleanup-lpad.loopexit

normal-dest41:                                    ; preds = %normal-dest34
  %.elt183 = extractvalue { {}*, i64 } %43, 0
  %.elt185 = extractvalue { {}*, i64 } %43, 1
  %cond153 = icmp eq i64 %.elt185, 0
  %44 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %Z.1 = select i1 %cond153, {}* %44, {}* %.elt183
  br label %tag11

normal-dest48:                                    ; preds = %tag4
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %46 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint50 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint51 = add i64 %ptrtoint50, 7
  %entry-point-addr52 = inttoptr i64 %entry-point-addr-uint51 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point53 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr52, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point53({}* %19, i64 5, {}* %45, {}* %46, {}* %"%DOLIST-VAR.0199", {}* %47, {}* %48)
          to label %normal-dest56 unwind label %cleanup-lpad.loopexit

normal-dest56:                                    ; preds = %normal-dest48
  %.elt179 = extractvalue { {}*, i64 } %49, 0
  %.elt181 = extractvalue { {}*, i64 } %49, 1
  %cond152 = icmp eq i64 %.elt181, 0
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond152, {}* %50, {}* %.elt179
  br label %tag18.backedge

normal-dest66:                                    ; preds = %tag11
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest68 unwind label %cleanup-lpad.loopexit

normal-dest68:                                    ; preds = %normal-dest66
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest70 unwind label %cleanup-lpad.loopexit

normal-dest70:                                    ; preds = %normal-dest68
  %ptrtoint71 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %54, i64 1, {}* %Z.0, {}* null, {}* null, {}* null)
          to label %normal-dest77 unwind label %cleanup-lpad.loopexit

normal-dest77:                                    ; preds = %normal-dest70
  %.elt158 = extractvalue { {}*, i64 } %55, 0
  %.elt160 = extractvalue { {}*, i64 } %55, 1
  %cond148 = icmp eq i64 %.elt160, 0
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235102.0 = select i1 %cond148, {}* %56, {}* %.elt158
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest84 unwind label %cleanup-lpad.loopexit

normal-dest84:                                    ; preds = %normal-dest77
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 384), align 16
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest86 unwind label %cleanup-lpad.loopexit

normal-dest86:                                    ; preds = %normal-dest84
  %ptrtoint87 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint88 = add i64 %ptrtoint87, 7
  %entry-point-addr89 = inttoptr i64 %entry-point-addr-uint88 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point90 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr89, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point90({}* %60, i64 1, {}* %Z.0, {}* null, {}* null, {}* null)
          to label %normal-dest93 unwind label %cleanup-lpad.loopexit

normal-dest93:                                    ; preds = %normal-dest86
  %.elt162 = extractvalue { {}*, i64 } %61, 0
  %.elt164 = extractvalue { {}*, i64 } %61, 1
  %cond149 = icmp eq i64 %.elt164, 0
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235106.0 = select i1 %cond149, {}* %62, {}* %.elt162
  %ptrtoint99 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %58, i64 1, {}* %G235106.0, {}* null, {}* null, {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad.loopexit

normal-dest105:                                   ; preds = %normal-dest93
  %.elt166 = extractvalue { {}*, i64 } %63, 0
  %.elt168 = extractvalue { {}*, i64 } %63, 1
  %cond150 = icmp eq i64 %.elt168, 0
  %64 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235103.0 = select i1 %cond150, {}* %64, {}* %.elt166
  %ptrtoint111 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint112 = add i64 %ptrtoint111, 7
  %entry-point-addr113 = inttoptr i64 %entry-point-addr-uint112 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point114 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr113, align 8
  %65 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point114({}* %52, i64 3, {}* %G235102.0, {}* %G235103.0, {}* %64, {}* null)
          to label %normal-dest117 unwind label %cleanup-lpad.loopexit

normal-dest117:                                   ; preds = %normal-dest105
  %.elt170 = extractvalue { {}*, i64 } %65, 0
  %.elt172 = extractvalue { {}*, i64 } %65, 1
  %cond151 = icmp eq i64 %.elt172, 0
  %66 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235100.0 = select i1 %cond151, {}* %66, {}* %.elt170
  %ptrtoint123 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint124 = add i64 %ptrtoint123, 7
  %entry-point-addr125 = inttoptr i64 %entry-point-addr-uint124 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point126 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr125, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point126({}* %24, i64 1, {}* %G235100.0, {}* null, {}* null, {}* null)
          to label %normal-dest129 unwind label %cleanup-lpad.loopexit

normal-dest129:                                   ; preds = %normal-dest117
  br i1 %consp-test141, label %tag20, label %tag8
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^230^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !63 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^230^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G235158.0 = phi {}* [ %18, %header-check-br ], [ %G235158.1, %normal-dest17 ], [ %G235158.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 361), align 8
  %ptrtoint29 = ptrtoint {}* %G235158.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G235158.0, i64 2, {}* %"closure->ND=BERECHNE_DISLIKE_DER_ZEILEN", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br20
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 361), align 8
  %"closure->ND=BERECHNE_DISLIKE_DER_ZEILEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=BERECHNE_DISLIKE_DER_ZEILEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=BERECHNE_DISLIKE_DER_ZEILEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7983, i64 230, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235158.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag4

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->ND=BERECHNE_DISLIKE_DER_ZEILEN", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 391), align 8
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->ND=BERECHNE_DISLIKE_DER_ZEILEN", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 920 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 361), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 390), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235158.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=BERECHNE_DISLIKE_DER_ZEILEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !64 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=BERECHNE_DISLIKE_DER_ZEILEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %tag11, %tag3.backedge, %normal-dest33
  %11 = phi {}* [ %39, %normal-dest33 ], [ %19, %tag3.backedge ], [ %23, %tag11 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag2:                                             ; preds = %tag2.preheader, %tag3.backedge
  %.val147 = phi {}* [ %19, %tag3.backedge ], [ %39, %tag2.preheader ]
  %"%DOLIST-VAR.0152" = phi {}* [ %"%DOLIST-VAR.0.be", %tag3.backedge ], [ %"%DOLIST-VAR.1", %tag2.preheader ]
  %14 = ptrtoint {}* %"%DOLIST-VAR.0152" to i64
  %tag-only122 = and i64 %14, 7
  %consp-test = icmp eq i64 %tag-only122, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235225.0 = select i1 %consp-test, {}* %.val, {}* %.val147
  %15 = icmp eq {}* %G235225.0, %.val147
  br i1 %15, label %tag17, label %tag6

tag6:                                             ; preds = %tag2
  %16 = add i64 %14, -3
  %17 = inttoptr i64 %16 to {}**
  %18 = load {}*, {}** %17, align 8
  br label %tag25

tag3.backedge:                                    ; preds = %normal-dest74, %tag18
  %19 = phi {}* [ %.pre, %tag18 ], [ %47, %normal-dest74 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %32, %tag18 ], [ %"%DOLIST-VAR.2", %normal-dest74 ]
  %20 = icmp eq {}* %"%DOLIST-VAR.0.be", %19
  br i1 %20, label %tag1, label %tag2

tag8:                                             ; preds = %normal-dest105
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 388), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit

tag11:                                            ; preds = %tag21
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %24 = icmp eq {}* %"%DOLIST-VAR.0152", %23
  %.val150 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235189.0 = select i1 %24, {}* %.val150, {}* %23
  %25 = icmp eq {}* %G235189.0, %23
  br i1 %25, label %tag12, label %tag1

tag12:                                            ; preds = %tag11
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest67 unwind label %cleanup-lpad.loopexit

tag17:                                            ; preds = %tag2
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest81 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %tag21
  %30 = add i64 %14, 5
  %31 = inttoptr i64 %30 to {}**
  %32 = load {}*, {}** %31, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag3.backedge

tag21:                                            ; preds = %normal-dest43, %normal-dest105
  br i1 %consp-test, label %tag18, label %tag11

tag25:                                            ; preds = %normal-dest88, %tag6
  %B.0 = phi {}* [ %18, %tag6 ], [ %B.1, %normal-dest88 ]
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag8, %normal-dest43, %tag12, %normal-dest67, %tag17, %normal-dest81, %tag25, %normal-dest98
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest30, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest30 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest30:                                    ; preds = %normal-dest
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint = ptrtoint {}* %36 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %36, i64 1, {}* %37, {}* null, {}* null, {}* null)
          to label %normal-dest33 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest33:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %38, 0
  %.elt121 = extractvalue { {}*, i64 } %38, 1
  %cond = icmp eq i64 %.elt121, 0
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %39, {}* %.elt
  %40 = icmp eq {}* %"%DOLIST-VAR.1", %39
  br i1 %40, label %tag1, label %tag2.preheader

tag2.preheader:                                   ; preds = %normal-dest33
  br label %tag2

normal-dest43:                                    ; preds = %tag8
  %ptrtoint44 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint45 = add i64 %ptrtoint44, 7
  %entry-point-addr46 = inttoptr i64 %entry-point-addr-uint45 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point47 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr46, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point47({}* %22, i64 1, {}* %B.0, {}* null, {}* null, {}* null)
          to label %tag21 unwind label %cleanup-lpad.loopexit

normal-dest67:                                    ; preds = %tag12
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %44 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint68 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint69 = add i64 %ptrtoint68, 7
  %entry-point-addr70 = inttoptr i64 %entry-point-addr-uint69 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point71 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr70, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point71({}* %27, i64 5, {}* %42, {}* %43, {}* %"%DOLIST-VAR.0152", {}* %44, {}* %45)
          to label %normal-dest74 unwind label %cleanup-lpad.loopexit

normal-dest74:                                    ; preds = %normal-dest67
  %.elt133 = extractvalue { {}*, i64 } %46, 0
  %.elt135 = extractvalue { {}*, i64 } %46, 1
  %cond118 = icmp eq i64 %.elt135, 0
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond118, {}* %47, {}* %.elt133
  br label %tag3.backedge

normal-dest81:                                    ; preds = %tag17
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint82 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint83 = add i64 %ptrtoint82, 7
  %entry-point-addr84 = inttoptr i64 %entry-point-addr-uint83 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point85 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr84, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point85({}* %29, i64 5, {}* %48, {}* %49, {}* %"%DOLIST-VAR.0152", {}* %50, {}* %51)
          to label %normal-dest88 unwind label %cleanup-lpad.loopexit

normal-dest88:                                    ; preds = %normal-dest81
  %.elt137 = extractvalue { {}*, i64 } %52, 0
  %.elt139 = extractvalue { {}*, i64 } %52, 1
  %cond119 = icmp eq i64 %.elt139, 0
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %B.1 = select i1 %cond119, {}* %53, {}* %.elt137
  br label %tag25

normal-dest98:                                    ; preds = %tag25
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint99 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %34, i64 2, {}* %B.0, {}* %54, {}* null, {}* null)
          to label %normal-dest105 unwind label %cleanup-lpad.loopexit

normal-dest105:                                   ; preds = %normal-dest98
  %.elt124 = extractvalue { {}*, i64 } %55, 0
  %.elt126 = extractvalue { {}*, i64 } %55, 1
  %cond117 = icmp eq i64 %.elt126, 0
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x106.0 = select i1 %cond117, {}* %56, {}* %.elt124
  %57 = icmp eq {}* %x106.0, %56
  %.val148 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235199.0 = select i1 %57, {}* %.val148, {}* %56
  %58 = icmp eq {}* %G235199.0, %56
  br i1 %58, label %tag21, label %tag8
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^236^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !65 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^236^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G235249.0 = phi {}* [ %18, %header-check-br ], [ %G235249.1, %normal-dest17 ], [ %G235249.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 393), align 8
  %ptrtoint29 = ptrtoint {}* %G235249.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G235249.0, i64 2, {}* %"closure->ND=DRINGLICHKEIT_IJCAI", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br20
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 393), align 8
  %"closure->ND=DRINGLICHKEIT_IJCAI" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8149, i64 236, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235249.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag4

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 395), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->ND=DRINGLICHKEIT_IJCAI", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 398), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->ND=DRINGLICHKEIT_IJCAI", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 944 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 393), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 392), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235249.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !66 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc48 unwind label %cleanup-lpad

.noexc48:                                         ; preds = %10
  unreachable

tag6:                                             ; preds = %tag9, %normal-dest35, %tag8
  %G235268.0 = phi {}* [ %14, %tag8 ], [ %G235268.1, %normal-dest35 ], [ %.val49, %tag9 ]
  %ptrtoint = ptrtoint {}* %21 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %11 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %21, i64 1, {}* %G235268.0, {}* null, {}* null, {}* null)
          to label %normal-dest22 unwind label %cleanup-lpad

tag8:                                             ; preds = %normal-dest15
  %12 = add i64 %22, -3
  %13 = inttoptr i64 %12 to {}**
  %14 = load {}*, {}** %13, align 8
  br label %tag6

tag9:                                             ; preds = %normal-dest15
  %15 = icmp eq {}* %.val49, %farg0
  %G235278.0 = select i1 %15, {}* %.val, {}* %.val49
  %16 = icmp eq {}* %G235278.0, %.val49
  br i1 %16, label %tag10, label %tag6

tag10:                                            ; preds = %tag9
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest28 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest28, %tag10, %tag6, %normal-dest
  %19 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %19

normal-dest:                                      ; preds = %entry
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 384), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest
  %22 = ptrtoint {}* %farg0 to i64
  %tag-only38 = and i64 %22, 7
  %consp-test = icmp eq i64 %tag-only38, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.val49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235285.0 = select i1 %consp-test, {}* %.val, {}* %.val49
  %23 = icmp eq {}* %G235285.0, %.val49
  br i1 %23, label %tag9, label %tag8

normal-dest22:                                    ; preds = %tag6
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %11

normal-dest28:                                    ; preds = %tag10
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint29 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %18, i64 5, {}* %24, {}* %25, {}* %farg0, {}* %26, {}* %27)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %.elt45 = extractvalue { {}*, i64 } %28, 0
  %.elt47 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt47, 0
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235268.1 = select i1 %cond, {}* %29, {}* %.elt45
  br label %tag6
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^239^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !67 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^239^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G235308.0 = phi {}* [ %18, %header-check-br ], [ %G235308.1, %normal-dest26 ], [ %G235308.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 405), align 8
  %ptrtoint29 = ptrtoint {}* %G235308.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G235308.0, i64 2, {}* %"closure->ND=DOMAIN-DRINGLICHKEIT", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag3, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 405), align 8
  %"closure->ND=DOMAIN-DRINGLICHKEIT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8226, i64 239, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235308.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 407), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->ND=DOMAIN-DRINGLICHKEIT", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 408), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->ND=DOMAIN-DRINGLICHKEIT", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 956 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 405), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag3
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 404), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235308.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !68 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc67 unwind label %cleanup-lpad

.noexc67:                                         ; preds = %10
  unreachable

tag5:                                             ; preds = %tag9
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest19 unwind label %cleanup-lpad

tag7:                                             ; preds = %tag9, %normal-dest22, %tag8
  %G235292.0 = phi {}* [ %17, %tag8 ], [ %G235292.1, %normal-dest22 ], [ %.val69, %tag9 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 400), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest26 unwind label %cleanup-lpad

tag8:                                             ; preds = %normal-dest
  %15 = add i64 %21, -3
  %16 = inttoptr i64 %15 to {}**
  %17 = load {}*, {}** %16, align 8
  br label %tag7

tag9:                                             ; preds = %normal-dest
  %18 = icmp eq {}* %.val69, %farg0
  %G235341.0 = select i1 %18, {}* %.val, {}* %.val69
  %19 = icmp eq {}* %G235341.0, %.val69
  br i1 %19, label %tag5, label %tag7

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest35, %normal-dest28, %normal-dest26, %tag7, %normal-dest19, %tag5
  %20 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %20

normal-dest:                                      ; preds = %entry
  %21 = ptrtoint {}* %farg0 to i64
  %tag-only53 = and i64 %21, 7
  %consp-test = icmp eq i64 %tag-only53, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.val69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235348.0 = select i1 %consp-test, {}* %.val, {}* %.val69
  %22 = icmp eq {}* %G235348.0, %.val69
  br i1 %22, label %tag9, label %tag8

normal-dest19:                                    ; preds = %tag5
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %23, {}* %24, {}* %farg0, {}* %25, {}* %26)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %normal-dest19
  %.elt64 = extractvalue { {}*, i64 } %27, 0
  %.elt66 = extractvalue { {}*, i64 } %27, 1
  %cond52 = icmp eq i64 %.elt66, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235292.1 = select i1 %cond52, {}* %28, {}* %.elt64
  br label %tag7

normal-dest26:                                    ; preds = %tag7
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 402), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest26
  %ptrtoint29 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %30, i64 1, {}* %G235292.0, {}* null, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %.elt = extractvalue { {}*, i64 } %31, 0
  %.elt55 = extractvalue { {}*, i64 } %31, 1
  %cond = icmp eq i64 %.elt55, 0
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235327.0 = select i1 %cond, {}* %32, {}* %.elt
  %ptrtoint41 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint42 = add i64 %ptrtoint41, 7
  %entry-point-addr43 = inttoptr i64 %entry-point-addr-uint42 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point44 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr43, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point44({}* %14, i64 1, {}* %G235327.0, {}* null, {}* null, {}* null)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest47:                                    ; preds = %normal-dest35
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %33
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^245^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !69 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^245^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G235371.0 = phi {}* [ %18, %header-check-br ], [ %G235371.1, %normal-dest63 ], [ %G235371.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 357), align 8
  %ptrtoint22 = ptrtoint {}* %G235371.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G235371.0, i64 2, {}* %"closure->ND=AKTUALISIERE_ALLE_DOMAINS", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest56, %tag3, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 357), align 8
  %"closure->ND=AKTUALISIERE_ALLE_DOMAINS" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=AKTUALISIERE_ALLE_DOMAINS^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AKTUALISIERE_ALLE_DOMAINS^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8359, i64 245, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->ND=AKTUALISIERE_ALLE_DOMAINS", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 415), align 8
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->ND=AKTUALISIERE_ALLE_DOMAINS", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 980 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 357), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 414), align 16
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235371.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag2

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235371.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=AKTUALISIERE_ALLE_DOMAINS^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !70 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AKTUALISIERE_ALLE_DOMAINS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %tag13, %tag20.backedge, %normal-dest28
  %11 = phi {}* [ %37, %normal-dest28 ], [ %17, %tag20.backedge ], [ %26, %tag13 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag2:                                             ; preds = %normal-dest55
  %14 = add i64 %31, 5
  %15 = inttoptr i64 %14 to {}**
  %16 = load {}*, {}** %15, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag20.backedge

tag20.backedge:                                   ; preds = %tag2, %normal-dest93
  %17 = phi {}* [ %.pre, %tag2 ], [ %58, %normal-dest93 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %16, %tag2 ], [ %"%DOLIST-VAR.2", %normal-dest93 ]
  %18 = icmp eq {}* %"%DOLIST-VAR.0.be", %17
  br i1 %18, label %tag1, label %tag19

tag4:                                             ; preds = %normal-dest73, %tag7
  %ZEILE.0 = phi {}* [ %23, %tag7 ], [ %ZEILE.1, %normal-dest73 ]
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest34 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %tag19
  %21 = add i64 %31, -3
  %22 = inttoptr i64 %21 to {}**
  %23 = load {}*, {}** %22, align 8
  br label %tag4

tag12:                                            ; preds = %tag19
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit

tag13:                                            ; preds = %normal-dest55
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %27 = icmp eq {}* %"%DOLIST-VAR.0138", %26
  %.val136 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235402.0 = select i1 %27, {}* %.val136, {}* %26
  %28 = icmp eq {}* %G235402.0, %26
  br i1 %28, label %tag17, label %tag1

tag17:                                            ; preds = %tag13
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest86 unwind label %cleanup-lpad.loopexit

tag19:                                            ; preds = %tag19.preheader, %tag20.backedge
  %.val135 = phi {}* [ %17, %tag20.backedge ], [ %37, %tag19.preheader ]
  %"%DOLIST-VAR.0138" = phi {}* [ %"%DOLIST-VAR.0.be", %tag20.backedge ], [ %"%DOLIST-VAR.1", %tag19.preheader ]
  %31 = ptrtoint {}* %"%DOLIST-VAR.0138" to i64
  %tag-only104111 = and i64 %31, 7
  %consp-test105 = icmp eq i64 %tag-only104111, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235435.0 = select i1 %consp-test105, {}* %.val, {}* %.val135
  %32 = icmp eq {}* %G235435.0, %.val135
  br i1 %32, label %tag12, label %tag7

cleanup-lpad.loopexit:                            ; preds = %tag4, %normal-dest34, %normal-dest36, %normal-dest43, %tag12, %normal-dest66, %tag17, %normal-dest86
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest25, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint = ptrtoint {}* %34 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %34, i64 1, {}* %35, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest28:                                    ; preds = %normal-dest25
  %.elt = extractvalue { {}*, i64 } %36, 0
  %.elt110 = extractvalue { {}*, i64 } %36, 1
  %cond = icmp eq i64 %.elt110, 0
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %37, {}* %.elt
  %38 = icmp eq {}* %"%DOLIST-VAR.1", %37
  br i1 %38, label %tag1, label %tag19.preheader

tag19.preheader:                                  ; preds = %normal-dest28
  br label %tag19

normal-dest34:                                    ; preds = %tag4
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 410), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 402), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest36 unwind label %cleanup-lpad.loopexit

normal-dest36:                                    ; preds = %normal-dest34
  %ptrtoint37 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint38 = add i64 %ptrtoint37, 7
  %entry-point-addr39 = inttoptr i64 %entry-point-addr-uint38 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point40 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr39, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point40({}* %41, i64 1, {}* %ZEILE.0, {}* null, {}* null, {}* null)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit

normal-dest43:                                    ; preds = %normal-dest36
  %.elt113 = extractvalue { {}*, i64 } %42, 0
  %.elt115 = extractvalue { {}*, i64 } %42, 1
  %cond106 = icmp eq i64 %.elt115, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235412.0 = select i1 %cond106, {}* %43, {}* %.elt113
  %44 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 412), align 16
  %ptrtoint49 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint50 = add i64 %ptrtoint49, 7
  %entry-point-addr51 = inttoptr i64 %entry-point-addr-uint50 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point52 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr51, align 8
  %46 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point52({}* %20, i64 5, {}* %ZEILE.0, {}* %39, {}* %G235412.0, {}* %44, {}* %45)
          to label %normal-dest55 unwind label %cleanup-lpad.loopexit

normal-dest55:                                    ; preds = %normal-dest43
  br i1 %consp-test105, label %tag2, label %tag13

normal-dest66:                                    ; preds = %tag12
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint67 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint68 = add i64 %ptrtoint67, 7
  %entry-point-addr69 = inttoptr i64 %entry-point-addr-uint68 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point70 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr69, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point70({}* %25, i64 5, {}* %47, {}* %48, {}* %"%DOLIST-VAR.0138", {}* %49, {}* %50)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit

normal-dest73:                                    ; preds = %normal-dest66
  %.elt126 = extractvalue { {}*, i64 } %51, 0
  %.elt128 = extractvalue { {}*, i64 } %51, 1
  %cond108 = icmp eq i64 %.elt128, 0
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ZEILE.1 = select i1 %cond108, {}* %52, {}* %.elt126
  br label %tag4

normal-dest86:                                    ; preds = %tag17
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint87 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint88 = add i64 %ptrtoint87, 7
  %entry-point-addr89 = inttoptr i64 %entry-point-addr-uint88 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point90 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr89, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point90({}* %30, i64 5, {}* %53, {}* %54, {}* %"%DOLIST-VAR.0138", {}* %55, {}* %56)
          to label %normal-dest93 unwind label %cleanup-lpad.loopexit

normal-dest93:                                    ; preds = %normal-dest86
  %.elt122 = extractvalue { {}*, i64 } %57, 0
  %.elt124 = extractvalue { {}*, i64 } %57, 1
  %cond107 = icmp eq i64 %.elt124, 0
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond107, {}* %58, {}* %.elt122
  br label %tag20.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^251^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !71 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^251^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G235459.0 = phi {}* [ %18, %header-check-br ], [ %G235459.1, %normal-dest54 ], [ %G235459.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 359), align 8
  %ptrtoint13 = ptrtoint {}* %G235459.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G235459.0, i64 2, {}* %"closure->ND-ZEIGE_DOMAIN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 359), align 8
  %"closure->ND-ZEIGE_DOMAIN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND-ZEIGE_DOMAIN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_DOMAIN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8596, i64 251, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND-ZEIGE_DOMAIN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 417), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND-ZEIGE_DOMAIN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1004 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 359), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 416), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235459.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235459.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND-ZEIGE_DOMAIN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !72 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND-ZEIGE_DOMAIN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 377), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %14
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^254^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !73 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^254^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G235496.0 = phi {}* [ %18, %header-check-br ], [ %G235496.1, %normal-dest17 ], [ %G235496.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 419), align 8
  %ptrtoint43 = ptrtoint {}* %G235496.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G235496.0, i64 2, {}* %"closure->ND=DAME_IM_DOMAIN_ENTHALTEN_P", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 419), align 8
  %"closure->ND=DAME_IM_DOMAIN_ENTHALTEN_P" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8647, i64 254, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235496.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 418), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235496.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 421), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=DAME_IM_DOMAIN_ENTHALTEN_P", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 424), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=DAME_IM_DOMAIN_ENTHALTEN_P", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1016 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 419), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !74 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc251 unwind label %cleanup-lpad

.noexc251:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %tag26
  %14 = add i64 %ptrtoint74, 7
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %"tag fixnum" = shl nuw i64 %16, 2
  %17 = inttoptr i64 %"tag fixnum" to {}*
  br i1 %fixnump-test152, label %tag38, label %tag9

tag6:                                             ; preds = %normal-dest68, %tag30
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest86 unwind label %cleanup-lpad

tag8:                                             ; preds = %tag24
  br i1 %fixnump-test152, label %tag32, label %tag18

tag9:                                             ; preds = %tag1
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest105 unwind label %cleanup-lpad

tag18:                                            ; preds = %tag8
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest128 unwind label %cleanup-lpad

tag20:                                            ; preds = %normal-dest191, %normal-dest161, %normal-dest93, %tag48
  %24 = phi {}* [ %43, %tag48 ], [ %63, %normal-dest93 ], [ %73, %normal-dest161 ], [ %76, %normal-dest191 ]
  %x94.0 = phi {}* [ %45, %tag48 ], [ %x94.1, %normal-dest93 ], [ %x94.2, %normal-dest161 ], [ %x94.3, %normal-dest191 ]
  %25 = icmp eq {}* %x94.0, %24
  %.val261 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %26 = select i1 %25, {}* %.val261, {}* %24
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %27 = insertvalue { {}*, i64 } undef, {}* %26, 0
  %28 = insertvalue { {}*, i64 } %27, i64 1, 1
  ret { {}*, i64 } %28

tag24:                                            ; preds = %tag38, %normal-dest112
  %29 = phi {}* [ %65, %normal-dest112 ], [ %57, %tag38 ]
  %G235565.0 = phi {}* [ %G235565.1, %normal-dest112 ], [ %.259, %tag38 ]
  %30 = icmp eq {}* %G235565.0, %29
  br i1 %30, label %tag34, label %tag8

tag26:                                            ; preds = %tag30
  %31 = ptrtoint {}* %.in238 to i64
  %fixnum-tag-only151220 = and i64 %31, 3
  %fixnump-test152 = icmp eq i64 %fixnum-tag-only151220, 0
  %G235589.0 = select i1 %fixnump-test152, {}* %.val264, {}* %57
  %32 = icmp eq {}* %G235589.0, %57
  br i1 %32, label %tag27, label %tag1

tag27:                                            ; preds = %tag26
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest154 unwind label %cleanup-lpad

tag30:                                            ; preds = %normal-dest68
  %irc-bit-cast75 = bitcast {}* %.in to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast75, i64 -9
  %irc-bit-cast76 = bitcast i8* %gep to i64*
  %35 = load i64, i64* %irc-bit-cast76, align 8
  %36 = icmp eq i64 %35, 1137
  %.val264 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235592.0.pre = select i1 %36, {}* %.val264, {}* %57
  %37 = icmp eq {}* %G235592.0.pre, %57
  br i1 %37, label %tag6, label %tag26

tag32:                                            ; preds = %tag8
  %38 = icmp sgt i64 %"tag fixnum", %31
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.258 = select i1 %38, {}* %39, {}* %29
  br label %tag41

tag34:                                            ; preds = %tag24, %tag41
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest184 unwind label %cleanup-lpad

tag38:                                            ; preds = %tag1
  %42 = icmp sgt {}* %.in238, inttoptr (i64 -1 to {}*)
  %.259 = select i1 %42, {}* %.val264, {}* %57
  br label %tag24

tag41:                                            ; preds = %tag32, %normal-dest135
  %43 = phi {}* [ %67, %normal-dest135 ], [ %29, %tag32 ]
  %G235542.0 = phi {}* [ %G235542.1, %normal-dest135 ], [ %.258, %tag32 ]
  %44 = icmp eq {}* %G235542.0, %43
  br i1 %44, label %tag34, label %tag48

tag48:                                            ; preds = %tag41
  %"untagged fixnum" = lshr exact i64 %31, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %52, i64 0, i32 1, i64 %"untagged fixnum"
  %45 = load {}*, {}** %aref, align 8
  br label %tag20

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest184, %tag34, %normal-dest154, %tag27, %normal-dest128, %tag18, %normal-dest105, %tag9, %normal-dest86, %tag6, %normal-dest61, %normal-dest57, %normal-dest54, %normal-dest
  %46 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %46

normal-dest:                                      ; preds = %11
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint = ptrtoint {}* %48 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %48, i64 2, {}* %farg0, {}* %49, {}* null, {}* null)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest54
  %.elt = extractvalue { {}*, i64 } %50, 0
  %.elt215 = extractvalue { {}*, i64 } %50, 1
  %cond = icmp eq i64 %.elt215, 0
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %51, {}* %.elt
  %52 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest57
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint62 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint63 = add i64 %ptrtoint62, 7
  %entry-point-addr64 = inttoptr i64 %entry-point-addr-uint63 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point65 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr64, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point65({}* %54, i64 2, {}* %farg1, {}* %55, {}* null, {}* null)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest61
  %.elt217 = extractvalue { {}*, i64 } %56, 0
  %.elt219 = extractvalue { {}*, i64 } %56, 1
  %cond208 = icmp eq i64 %.elt219, 0
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in238 = select i1 %cond208, {}* %57, {}* %.elt217
  %ptrtoint74 = ptrtoint {}* %.in to i64
  %tag-only = and i64 %ptrtoint74, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %tag30, label %tag6

normal-dest86:                                    ; preds = %tag6
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %60 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %61 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint87 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint88 = add i64 %ptrtoint87, 7
  %entry-point-addr89 = inttoptr i64 %entry-point-addr-uint88 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point90 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr89, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point90({}* %19, i64 5, {}* %58, {}* %59, {}* %.in, {}* %60, {}* %61)
          to label %normal-dest93 unwind label %cleanup-lpad

normal-dest93:                                    ; preds = %normal-dest86
  %.elt244 = extractvalue { {}*, i64 } %62, 0
  %.elt246 = extractvalue { {}*, i64 } %62, 1
  %cond213 = icmp eq i64 %.elt246, 0
  %63 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x94.1 = select i1 %cond213, {}* %63, {}* %.elt244
  br label %tag20

normal-dest105:                                   ; preds = %tag9
  %ptrtoint106 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint107 = add i64 %ptrtoint106, 7
  %entry-point-addr108 = inttoptr i64 %entry-point-addr-uint107 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point109 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr108, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point109({}* %21, i64 2, {}* null, {}* %.in238, {}* null, {}* null)
          to label %normal-dest112 unwind label %cleanup-lpad

normal-dest112:                                   ; preds = %normal-dest105
  %.elt223 = extractvalue { {}*, i64 } %64, 0
  %.elt225 = extractvalue { {}*, i64 } %64, 1
  %cond209 = icmp eq i64 %.elt225, 0
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235565.1 = select i1 %cond209, {}* %65, {}* %.elt223
  br label %tag24

normal-dest128:                                   ; preds = %tag18
  %ptrtoint129 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint130 = add i64 %ptrtoint129, 7
  %entry-point-addr131 = inttoptr i64 %entry-point-addr-uint130 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point132 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr131, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point132({}* %23, i64 2, {}* %.in238, {}* %17, {}* null, {}* null)
          to label %normal-dest135 unwind label %cleanup-lpad

normal-dest135:                                   ; preds = %normal-dest128
  %.elt228 = extractvalue { {}*, i64 } %66, 0
  %.elt230 = extractvalue { {}*, i64 } %66, 1
  %cond210 = icmp eq i64 %.elt230, 0
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235542.1 = select i1 %cond210, {}* %67, {}* %.elt228
  br label %tag41

normal-dest154:                                   ; preds = %tag27
  %68 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %70 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint155 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint156 = add i64 %ptrtoint155, 7
  %entry-point-addr157 = inttoptr i64 %entry-point-addr-uint156 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point158 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr157, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point158({}* %34, i64 5, {}* %68, {}* %69, {}* %.in238, {}* %70, {}* %71)
          to label %normal-dest161 unwind label %cleanup-lpad

normal-dest161:                                   ; preds = %normal-dest154
  %.elt240 = extractvalue { {}*, i64 } %72, 0
  %.elt242 = extractvalue { {}*, i64 } %72, 1
  %cond212 = icmp eq i64 %.elt242, 0
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x94.2 = select i1 %cond212, {}* %73, {}* %.elt240
  br label %tag20

normal-dest184:                                   ; preds = %tag34
  %74 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint185 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %41, i64 3, {}* %74, {}* %.in238, {}* %17, {}* null)
          to label %normal-dest191 unwind label %cleanup-lpad

normal-dest191:                                   ; preds = %normal-dest184
  %.elt235 = extractvalue { {}*, i64 } %75, 0
  %.elt237 = extractvalue { {}*, i64 } %75, 1
  %cond211 = icmp eq i64 %.elt237, 0
  %76 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x94.3 = select i1 %cond211, {}* %76, {}* %.elt235
  br label %tag20
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^259^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !75 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^259^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G235626.0 = phi {}* [ %18, %header-check-br ], [ %G235626.1, %normal-dest17 ], [ %G235626.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 402), align 16
  %ptrtoint29 = ptrtoint {}* %G235626.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G235626.0, i64 2, {}* %"closure->ND=LAENGE_DES_AKTUELLEN_DOMAINS", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br20
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 402), align 16
  %"closure->ND=LAENGE_DES_AKTUELLEN_DOMAINS" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 8796, i64 259, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235626.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag4

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 429), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->ND=LAENGE_DES_AKTUELLEN_DOMAINS", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 430), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->ND=LAENGE_DES_AKTUELLEN_DOMAINS", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 1036 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 402), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 428), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235626.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !76 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc688 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc688:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag42
  br i1 %fixnump-test420, label %tag139, label %tag74

tag1:                                             ; preds = %tag124
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest152 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag2:                                             ; preds = %tag98
  %13 = ptrtoint {}* %ERG.0 to i64
  %fixnum-tag-only170637 = and i64 %13, 3
  %fixnump-test171 = icmp eq i64 %fixnum-tag-only170637, 0
  br i1 %fixnump-test171, label %tag109, label %tag112

tag3:                                             ; preds = %tag121
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest173 unwind label %cleanup-lpad.loopexit

tag4:                                             ; preds = %tag31
  br i1 %test, label %header-check-br, label %tag52

tag5:                                             ; preds = %tag92, %normal-dest324, %tag51, %tag119
  %16 = phi {}* [ %61, %tag119 ], [ %.val718736, %tag51 ], [ %142, %normal-dest324 ], [ %.val712, %tag92 ]
  %"%DOTIMES-VAR.0" = phi {}* [ %84, %tag119 ], [ null, %tag51 ], [ %"%DOTIMES-VAR.1", %normal-dest324 ], [ %LENGTH.0.ph, %tag92 ]
  %17 = ptrtoint {}* %"%DOTIMES-VAR.0" to i64
  %fixnum-tag-only267670 = and i64 %17, 3
  %fixnump-test268 = icmp eq i64 %fixnum-tag-only267670, 0
  %test = icmp eq i64 %tag-only609, 1
  %irc-bit-cast191 = bitcast {}* %.in to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast191, i64 -9
  %irc-bit-cast192 = bitcast i8* %gep to i64*
  %18 = add i64 %109, 7
  %19 = inttoptr i64 %18 to i64*
  %single-float-tag-only381 = and i64 %17, 7
  %20 = icmp eq i64 %single-float-tag-only381, 6
  %test588 = icmp ne i64 %single-float-tag-only381, 1
  %irc-bit-cast589 = bitcast {}* %"%DOTIMES-VAR.0" to i8*
  %gep590 = getelementptr inbounds i8, i8* %irc-bit-cast589, i64 -9
  %irc-bit-cast591 = bitcast i8* %gep590 to i64*
  br label %tag83

tag6:                                             ; preds = %tag133
  %21 = load {}*, {}** %89, align 8
  %.val710.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag77

tag8:                                             ; preds = %tag92
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest194 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag11:                                            ; preds = %normal-dest148
  %test216 = icmp eq i64 %tag-only609, 1
  br i1 %test216, label %header-check-br213, label %tag51

tag12:                                            ; preds = %tag68
  %24 = invoke float @from_object_float({}* %X188.0)
          to label %normal-dest221 unwind label %cleanup-lpad.loopexit

tag16:                                            ; preds = %tag85
  %"untagged fixnum" = lshr exact i64 %58, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %108, i64 0, i32 1, i64 %"untagged fixnum"
  %25 = load {}*, {}** %aref, align 8
  br label %tag98

tag22:                                            ; preds = %tag38
  %26 = icmp slt {}* %X188.0, %"%DOTIMES-VAR.0"
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %. = select i1 %26, {}* %27, {}* %57
  br label %tag31

tag24:                                            ; preds = %header-check-br369, %tag25, %header-check-br585, %tag68, %tag38
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest230 unwind label %cleanup-lpad.loopexit

tag25:                                            ; preds = %tag83
  %trunc = trunc i64 %58 to i3
  switch i3 %trunc, label %tag24 [
    i3 -2, label %tag68
    i3 1, label %header-check-br369
  ]

tag31:                                            ; preds = %tag22, %normal-dest237, %tag127, %tag96, %tag64, %tag39
  %G235646.0 = phi {}* [ %32, %tag39 ], [ %65, %tag96 ], [ %47, %tag64 ], [ %94, %tag127 ], [ %G235646.1, %normal-dest237 ], [ %., %tag22 ]
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %31 = icmp eq {}* %G235646.0, %30
  br i1 %31, label %tag62, label %tag4

tag38:                                            ; preds = %tag83
  br i1 %fixnump-test268, label %tag22, label %tag24

tag39:                                            ; preds = %normal-dest223
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag31

tag42:                                            ; preds = %tag134, %normal-dest347
  %33 = phi {}* [ %147, %normal-dest347 ], [ %30, %tag134 ]
  %G235772.0 = phi {}* [ %G235772.1, %normal-dest347 ], [ %.704, %tag134 ]
  %34 = icmp eq {}* %G235772.0, %33
  br i1 %34, label %tag136, label %tag

tag44:                                            ; preds = %tag125
  %35 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %58, i64 4)
  %result = extractvalue { i64, i1 } %35, 0
  %overflow = extractvalue { i64, i1 } %35, 1
  %36 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag100, label %tag83.backedge

tag83.backedge:                                   ; preds = %tag44, %normal-dest287, %normal-dest444
  %.be = phi {}* [ %153, %normal-dest444 ], [ %137, %normal-dest287 ], [ %93, %tag44 ]
  %X188.0.be = phi {}* [ %X188.2, %normal-dest444 ], [ %X188.1, %normal-dest287 ], [ %36, %tag44 ]
  br label %tag83

tag51:                                            ; preds = %normal-dest259, %tag11, %header-check-br330, %tag86
  %.val717 = phi {}* [ %G235811.0.pre, %tag86 ], [ %.val, %tag11 ], [ %.val, %header-check-br330 ], [ %G235811.0.pre.pre, %normal-dest259 ]
  %.val718736 = phi {}* [ %G235811.0.pre, %tag86 ], [ %107, %tag11 ], [ %107, %header-check-br330 ], [ %134, %normal-dest259 ]
  %37 = icmp eq {}* %.in, %.val718736
  %G235807.0 = select i1 %37, {}* %.val717, {}* %.val718736
  %38 = icmp eq {}* %G235807.0, %.val718736
  br i1 %38, label %tag56, label %tag5

tag52:                                            ; preds = %header-check-br, %tag4
  br label %tag121

tag53:                                            ; preds = %tag109
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest302 unwind label %cleanup-lpad.loopexit

tag56:                                            ; preds = %tag51
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest317 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag59:                                            ; preds = %tag132
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest340 unwind label %cleanup-lpad.loopexit

tag62:                                            ; preds = %tag31
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %45 = insertvalue { {}*, i64 } undef, {}* %ERG.0, 0
  %46 = insertvalue { {}*, i64 } %45, i64 1, 1
  ret { {}*, i64 } %46

tag64:                                            ; preds = %normal-dest552
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag31

tag68:                                            ; preds = %tag25
  br i1 %20, label %tag12, label %tag24

tag74:                                            ; preds = %tag
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest388 unwind label %cleanup-lpad.loopexit

tag77:                                            ; preds = %tag124, %normal-dest160, %tag6
  %.val712 = phi {}* [ %.val710.pre, %tag6 ], [ %116, %normal-dest160 ], [ %90, %tag124 ]
  %G2095854.0 = phi {}* [ %21, %tag6 ], [ %G2095854.1, %normal-dest160 ], [ %90, %tag124 ]
  %50 = ptrtoint {}* %G2095854.0 to i64
  %tag-only408611 = and i64 %50, 7
  %consp-test409 = icmp eq i64 %tag-only408611, 3
  %.val709 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235848.0 = select i1 %consp-test409, {}* %.val709, {}* %.val712
  %51 = icmp eq {}* %G235848.0, %.val712
  br i1 %51, label %tag92, label %tag81

tag78:                                            ; preds = %tag125
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest280 unwind label %cleanup-lpad.loopexit

tag81:                                            ; preds = %tag77
  %54 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only413612 = and i64 %54, 3
  %fixnump-test414 = icmp eq i64 %fixnum-tag-only413612, 0
  br i1 %fixnump-test414, label %tag82, label %tag106

tag82:                                            ; preds = %tag81
  %55 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %54, i64 4)
  %result277 = extractvalue { i64, i1 } %55, 0
  %overflow278 = extractvalue { i64, i1 } %55, 1
  %56 = inttoptr i64 %result277 to {}*
  br i1 %overflow278, label %tag108, label %tag133.outer.backedge

tag133.outer.backedge:                            ; preds = %tag82, %normal-dest494, %normal-dest473
  %LENGTH.0.ph.be = phi {}* [ %56, %tag82 ], [ %LENGTH.2, %normal-dest494 ], [ %LENGTH.1, %normal-dest473 ]
  br label %tag133.outer

tag83:                                            ; preds = %tag83.backedge, %tag5
  %57 = phi {}* [ %16, %tag5 ], [ %.be, %tag83.backedge ]
  %X188.0 = phi {}* [ null, %tag5 ], [ %X188.0.be, %tag83.backedge ]
  %ERG.0 = phi {}* [ null, %tag5 ], [ %ERG.1, %tag83.backedge ]
  %58 = ptrtoint {}* %X188.0 to i64
  %fixnum-tag-only419621 = and i64 %58, 3
  %fixnump-test420 = icmp eq i64 %fixnum-tag-only419621, 0
  br i1 %fixnump-test420, label %tag38, label %tag25

tag85:                                            ; preds = %tag139, %normal-dest395
  %59 = phi {}* [ %151, %normal-dest395 ], [ %33, %tag139 ]
  %G235749.0 = phi {}* [ %G235749.1, %normal-dest395 ], [ %.705, %tag139 ]
  %60 = icmp eq {}* %G235749.0, %59
  br i1 %60, label %tag136, label %tag16

tag86:                                            ; preds = %normal-dest259, %header-check-br213
  %G235811.0.pre = phi {}* [ %.val, %header-check-br213 ], [ %G235811.0.pre.pre, %normal-dest259 ]
  %61 = phi {}* [ %107, %header-check-br213 ], [ %134, %normal-dest259 ]
  %62 = icmp eq {}* %G235811.0.pre, %61
  br i1 %62, label %tag51, label %tag119

tag92:                                            ; preds = %tag77
  %63 = icmp eq {}* %G2095854.0, %.val712
  %G235819.0 = select i1 %63, {}* %.val709, {}* %.val712
  %64 = icmp eq {}* %G235819.0, %.val712
  br i1 %64, label %tag8, label %tag5

tag96:                                            ; preds = %normal-dest223
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag31

tag98:                                            ; preds = %normal-dest577, %normal-dest458, %normal-dest181, %tag16
  %66 = phi {}* [ %59, %tag16 ], [ %122, %normal-dest181 ], [ %159, %normal-dest458 ], [ %170, %normal-dest577 ]
  %x182.0 = phi {}* [ %25, %tag16 ], [ %x182.1, %normal-dest181 ], [ %x182.2, %normal-dest458 ], [ %x182.3, %normal-dest577 ]
  %67 = icmp eq {}* %x182.0, %66
  %.val715 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235721.0 = select i1 %67, {}* %.val715, {}* %66
  %68 = icmp eq {}* %G235721.0, %66
  br i1 %68, label %tag125, label %tag2

tag100:                                           ; preds = %tag44
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest437 unwind label %cleanup-lpad.loopexit

tag103:                                           ; preds = %tag120
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest451 unwind label %cleanup-lpad.loopexit

tag106:                                           ; preds = %tag81
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest466 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag108:                                           ; preds = %tag82
  %75 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest487 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag109:                                           ; preds = %tag2
  %77 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %13, i64 4)
  %result426 = extractvalue { i64, i1 } %77, 0
  %overflow427 = extractvalue { i64, i1 } %77, 1
  %78 = inttoptr i64 %result426 to {}*
  br i1 %overflow427, label %tag53, label %tag125

tag112:                                           ; preds = %tag2
  %79 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest503 unwind label %cleanup-lpad.loopexit

tag119:                                           ; preds = %tag86
  %81 = add i64 %109, 7
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %82, align 8
  %"tag fixnum" = shl nuw i64 %83, 2
  %84 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag5

tag120:                                           ; preds = %tag121
  %.val713 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235796.0 = select i1 %fixnump-test420, {}* %.val713, {}* %30
  %85 = icmp eq {}* %G235796.0, %30
  br i1 %85, label %tag103, label %tag132

tag121:                                           ; preds = %header-check-br, %tag52
  %G235799.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag52 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br ]
  %G235799.0 = load {}*, {}** %G235799.0.in, align 16
  %86 = icmp eq {}* %G235799.0, %30
  br i1 %86, label %tag3, label %tag120

tag133.outer:                                     ; preds = %tag133.outer.backedge, %tag133.outer.preheader
  %SEQUENCE.0.ph = phi {}* [ %.in, %tag133.outer.preheader ], [ %G2095854.0, %tag133.outer.backedge ]
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag133.outer.preheader ], [ %LENGTH.0.ph.be, %tag133.outer.backedge ]
  %87 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only567610 = and i64 %87, 7
  %consp-test568 = icmp eq i64 %tag-only567610, 3
  %88 = add i64 %87, 5
  %89 = inttoptr i64 %88 to {}**
  br label %tag133

tag124:                                           ; preds = %tag133
  %90 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %91 = icmp eq {}* %SEQUENCE.0.ph, %90
  %.val707 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235860.0 = select i1 %91, {}* %.val707, {}* %90
  %92 = icmp eq {}* %G235860.0, %90
  br i1 %92, label %tag1, label %tag77

tag125:                                           ; preds = %normal-dest510, %normal-dest310, %tag109, %tag98
  %93 = phi {}* [ %66, %tag98 ], [ %66, %tag109 ], [ %139, %normal-dest310 ], [ %165, %normal-dest510 ]
  %ERG.1 = phi {}* [ %ERG.0, %tag98 ], [ %78, %tag109 ], [ %ERG.2, %normal-dest310 ], [ %ERG.3, %normal-dest510 ]
  br i1 %fixnump-test420, label %tag44, label %tag78

tag127:                                           ; preds = %normal-dest552
  %94 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag31

tag128:                                           ; preds = %header-check-br585
  %95 = invoke double @from_object_double({}* nonnull %X188.0)
          to label %normal-dest551 unwind label %cleanup-lpad.loopexit

tag132:                                           ; preds = %tag120
  %96 = load i64, i64* %19, align 8
  %"tag fixnum561" = shl nuw i64 %96, 2
  %97 = inttoptr i64 %"tag fixnum561" to {}*
  br i1 %fixnump-test420, label %tag134, label %tag59

tag133:                                           ; preds = %normal-dest194, %tag133.outer
  br i1 %consp-test568, label %tag6, label %tag124

tag134:                                           ; preds = %tag132
  %98 = icmp sgt {}* %X188.0, inttoptr (i64 -1 to {}*)
  %.704 = select i1 %98, {}* %.val713, {}* %30
  br label %tag42

tag136:                                           ; preds = %tag42, %tag85
  %99 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %100 = invoke {}* @cc_safe_fdefinition({}* %99)
          to label %normal-dest570 unwind label %cleanup-lpad.loopexit

tag139:                                           ; preds = %tag
  %101 = icmp sgt i64 %"tag fixnum561", %58
  %102 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.705 = select i1 %101, {}* %102, {}* %33
  br label %tag85

cleanup-lpad.loopexit:                            ; preds = %tag3, %normal-dest173, %tag12, %normal-dest221, %tag24, %normal-dest230, %tag78, %normal-dest280, %tag53, %normal-dest302, %tag59, %normal-dest340, %tag74, %normal-dest388, %tag100, %normal-dest437, %tag103, %normal-dest451, %tag112, %normal-dest503, %tag128, %normal-dest551, %tag136, %normal-dest570
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag1, %normal-dest152, %tag8, %normal-dest194
  %lpad.loopexit723 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag106, %normal-dest466, %tag108, %normal-dest487
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %9, %normal-dest317, %tag56, %normal-dest252, %maybe-more-tests338, %normal-dest145, %normal-dest
  %lpad.loopexit.split-lp721 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp721, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit723, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %103 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest145:                                   ; preds = %normal-dest
  %105 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint = ptrtoint {}* %104 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %106 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %104, i64 2, {}* %farg0, {}* %105, {}* null, {}* null)
          to label %normal-dest148 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest148:                                   ; preds = %normal-dest145
  %.elt = extractvalue { {}*, i64 } %106, 0
  %.elt608 = extractvalue { {}*, i64 } %106, 1
  %cond = icmp eq i64 %.elt608, 0
  %107 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %107, {}* %.elt
  %108 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %109 = ptrtoint {}* %.in to i64
  %tag-only609 = and i64 %109, 7
  %consp-test = icmp eq i64 %tag-only609, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G235867.0 = select i1 %consp-test, {}* %.val, {}* %107
  %110 = icmp eq {}* %G235867.0, %107
  br i1 %110, label %tag11, label %tag133.outer.preheader

tag133.outer.preheader:                           ; preds = %normal-dest148
  br label %tag133.outer

normal-dest152:                                   ; preds = %tag1
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %112 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %113 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %114 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint154 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint155 = add i64 %ptrtoint154, 7
  %entry-point-addr156 = inttoptr i64 %entry-point-addr-uint155 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point157 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr156, align 8
  %115 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point157({}* %12, i64 5, {}* %111, {}* %112, {}* %SEQUENCE.0.ph, {}* %113, {}* %114)
          to label %normal-dest160 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest160:                                   ; preds = %normal-dest152
  %.elt676 = extractvalue { {}*, i64 } %115, 0
  %.elt678 = extractvalue { {}*, i64 } %115, 1
  %cond604 = icmp eq i64 %.elt678, 0
  %116 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G2095854.1 = select i1 %cond604, {}* %116, {}* %.elt676
  br label %tag77

normal-dest173:                                   ; preds = %tag3
  %117 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %118 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %119 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %120 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint175 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint176 = add i64 %ptrtoint175, 7
  %entry-point-addr177 = inttoptr i64 %entry-point-addr-uint176 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point178 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr177, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point178({}* %15, i64 5, {}* %117, {}* %118, {}* %.in, {}* %119, {}* %120)
          to label %normal-dest181 unwind label %cleanup-lpad.loopexit

normal-dest181:                                   ; preds = %normal-dest173
  %.elt664 = extractvalue { {}*, i64 } %121, 0
  %.elt666 = extractvalue { {}*, i64 } %121, 1
  %cond603 = icmp eq i64 %.elt666, 0
  %122 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x182.1 = select i1 %cond603, {}* %122, {}* %.elt664
  br label %tag98

header-check-br:                                  ; preds = %tag4
  %123 = load i64, i64* %irc-bit-cast192, align 8
  %124 = icmp eq i64 %123, 1137
  br i1 %124, label %tag121, label %tag52

normal-dest194:                                   ; preds = %tag8
  %125 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 427), align 8
  %ptrtoint195 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint196 = add i64 %ptrtoint195, 7
  %entry-point-addr197 = inttoptr i64 %entry-point-addr-uint196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr197, align 8
  %126 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point198({}* %23, i64 2, {}* %G2095854.0, {}* %125, {}* null, {}* null)
          to label %tag133 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

header-check-br213:                               ; preds = %tag11
  %irc-bit-cast217 = bitcast {}* %.in to i8*
  %gep218 = getelementptr inbounds i8, i8* %irc-bit-cast217, i64 -9
  %irc-bit-cast219 = bitcast i8* %gep218 to i64*
  %127 = load i64, i64* %irc-bit-cast219, align 8
  %.off = add i64 %127, -1081
  %128 = icmp ult i64 %.off, 69
  br i1 %128, label %tag86, label %header-check-br330

normal-dest221:                                   ; preds = %tag12
  %129 = invoke float @from_object_float({}* %"%DOTIMES-VAR.0")
          to label %normal-dest223 unwind label %cleanup-lpad.loopexit

normal-dest223:                                   ; preds = %normal-dest221
  %130 = fcmp olt float %24, %129
  br i1 %130, label %tag39, label %tag96

normal-dest230:                                   ; preds = %tag24
  %ptrtoint231 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint232 = add i64 %ptrtoint231, 7
  %entry-point-addr233 = inttoptr i64 %entry-point-addr-uint232 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point234 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr233, align 8
  %131 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point234({}* %29, i64 2, {}* %X188.0, {}* %"%DOTIMES-VAR.0", {}* null, {}* null)
          to label %normal-dest237 unwind label %cleanup-lpad.loopexit

normal-dest237:                                   ; preds = %normal-dest230
  %.elt623 = extractvalue { {}*, i64 } %131, 0
  %.elt625 = extractvalue { {}*, i64 } %131, 1
  %cond594 = icmp eq i64 %.elt625, 0
  %132 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235646.1 = select i1 %cond594, {}* %132, {}* %.elt623
  br label %tag31

normal-dest252:                                   ; preds = %maybe-more-tests338
  %ptrtoint253 = ptrtoint {}* %145 to i64
  %entry-point-addr-uint254 = add i64 %ptrtoint253, 7
  %entry-point-addr255 = inttoptr i64 %entry-point-addr-uint254 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point256 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr255, align 8
  %133 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point256({}* %145, i64 1, {}* nonnull %.in, {}* null, {}* null, {}* null)
          to label %normal-dest259 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest259:                                   ; preds = %normal-dest252
  %.elt684 = extractvalue { {}*, i64 } %133, 0
  %.elt686 = extractvalue { {}*, i64 } %133, 1
  %cond606 = icmp eq i64 %.elt686, 0
  %134 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235875.0 = select i1 %cond606, {}* %134, {}* %.elt684
  %135 = icmp eq {}* %G235875.0, inttoptr (i64 4 to {}*)
  %G235811.0.pre.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br i1 %135, label %tag86, label %tag51

normal-dest280:                                   ; preds = %tag78
  %ptrtoint281 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint282 = add i64 %ptrtoint281, 7
  %entry-point-addr283 = inttoptr i64 %entry-point-addr-uint282 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point284 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr283, align 8
  %136 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point284({}* %53, i64 2, {}* %X188.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest287 unwind label %cleanup-lpad.loopexit

normal-dest287:                                   ; preds = %normal-dest280
  %.elt644 = extractvalue { {}*, i64 } %136, 0
  %.elt646 = extractvalue { {}*, i64 } %136, 1
  %cond599 = icmp eq i64 %.elt646, 0
  %137 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %X188.1 = select i1 %cond599, {}* %137, {}* %.elt644
  br label %tag83.backedge

normal-dest302:                                   ; preds = %tag53
  %ptrtoint304 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint305 = add i64 %ptrtoint304, 7
  %entry-point-addr306 = inttoptr i64 %entry-point-addr-uint305 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point307 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr306, align 8
  %138 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point307({}* %40, i64 1, {}* %78, {}* null, {}* null, {}* null)
          to label %normal-dest310 unwind label %cleanup-lpad.loopexit

normal-dest310:                                   ; preds = %normal-dest302
  %.elt652 = extractvalue { {}*, i64 } %138, 0
  %.elt654 = extractvalue { {}*, i64 } %138, 1
  %cond598 = icmp eq i64 %.elt654, 0
  %139 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ERG.2 = select i1 %cond598, {}* %139, {}* %.elt652
  br label %tag125

normal-dest317:                                   ; preds = %tag56
  %140 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 426), align 16
  %ptrtoint318 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint319 = add i64 %ptrtoint318, 7
  %entry-point-addr320 = inttoptr i64 %entry-point-addr-uint319 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point321 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr320, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point321({}* %42, i64 2, {}* %.in, {}* %140, {}* null, {}* null)
          to label %normal-dest324 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest324:                                   ; preds = %normal-dest317
  %.elt680 = extractvalue { {}*, i64 } %141, 0
  %.elt682 = extractvalue { {}*, i64 } %141, 1
  %cond605 = icmp eq i64 %.elt682, 0
  %142 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOTIMES-VAR.1" = select i1 %cond605, {}* %142, {}* %.elt680
  br label %tag5

header-check-br330:                               ; preds = %header-check-br213
  %.off719 = add i64 %127, -1153
  %143 = icmp ult i64 %.off719, 149
  br i1 %143, label %maybe-more-tests338, label %tag51

maybe-more-tests338:                              ; preds = %header-check-br330
  %144 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 136), align 16
  %145 = invoke {}* @cc_safe_fdefinition({}* %144)
          to label %normal-dest252 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest340:                                   ; preds = %tag59
  %ptrtoint341 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint342 = add i64 %ptrtoint341, 7
  %entry-point-addr343 = inttoptr i64 %entry-point-addr-uint342 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point344 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr343, align 8
  %146 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point344({}* %44, i64 2, {}* null, {}* %X188.0, {}* null, {}* null)
          to label %normal-dest347 unwind label %cleanup-lpad.loopexit

normal-dest347:                                   ; preds = %normal-dest340
  %.elt629 = extractvalue { {}*, i64 } %146, 0
  %.elt631 = extractvalue { {}*, i64 } %146, 1
  %cond595 = icmp eq i64 %.elt631, 0
  %147 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235772.1 = select i1 %cond595, {}* %147, {}* %.elt629
  br label %tag42

header-check-br369:                               ; preds = %tag25
  %irc-bit-cast373 = bitcast {}* %X188.0 to i8*
  %gep374 = getelementptr inbounds i8, i8* %irc-bit-cast373, i64 -9
  %irc-bit-cast375 = bitcast i8* %gep374 to i64*
  %148 = load i64, i64* %irc-bit-cast375, align 8
  %149 = icmp ne i64 %148, 1325
  %brmerge = or i1 %test588, %149
  br i1 %brmerge, label %tag24, label %header-check-br585

normal-dest388:                                   ; preds = %tag74
  %ptrtoint389 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint390 = add i64 %ptrtoint389, 7
  %entry-point-addr391 = inttoptr i64 %entry-point-addr-uint390 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point392 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr391, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point392({}* %49, i64 2, {}* %X188.0, {}* %97, {}* null, {}* null)
          to label %normal-dest395 unwind label %cleanup-lpad.loopexit

normal-dest395:                                   ; preds = %normal-dest388
  %.elt634 = extractvalue { {}*, i64 } %150, 0
  %.elt636 = extractvalue { {}*, i64 } %150, 1
  %cond596 = icmp eq i64 %.elt636, 0
  %151 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235749.1 = select i1 %cond596, {}* %151, {}* %.elt634
  br label %tag85

normal-dest437:                                   ; preds = %tag100
  %ptrtoint438 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint439 = add i64 %ptrtoint438, 7
  %entry-point-addr440 = inttoptr i64 %entry-point-addr-uint439 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point441 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr440, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point441({}* %70, i64 1, {}* %36, {}* null, {}* null, {}* null)
          to label %normal-dest444 unwind label %cleanup-lpad.loopexit

normal-dest444:                                   ; preds = %normal-dest437
  %.elt648 = extractvalue { {}*, i64 } %152, 0
  %.elt650 = extractvalue { {}*, i64 } %152, 1
  %cond600 = icmp eq i64 %.elt650, 0
  %153 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %X188.2 = select i1 %cond600, {}* %153, {}* %.elt648
  br label %tag83.backedge

normal-dest451:                                   ; preds = %tag103
  %154 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %155 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %156 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %157 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint452 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint453 = add i64 %ptrtoint452, 7
  %entry-point-addr454 = inttoptr i64 %entry-point-addr-uint453 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point455 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr454, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point455({}* %72, i64 5, {}* %154, {}* %155, {}* %X188.0, {}* %156, {}* %157)
          to label %normal-dest458 unwind label %cleanup-lpad.loopexit

normal-dest458:                                   ; preds = %normal-dest451
  %.elt660 = extractvalue { {}*, i64 } %158, 0
  %.elt662 = extractvalue { {}*, i64 } %158, 1
  %cond602 = icmp eq i64 %.elt662, 0
  %159 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x182.2 = select i1 %cond602, {}* %159, {}* %.elt660
  br label %tag98

normal-dest466:                                   ; preds = %tag106
  %ptrtoint467 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint468 = add i64 %ptrtoint467, 7
  %entry-point-addr469 = inttoptr i64 %entry-point-addr-uint468 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point470 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr469, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point470({}* %74, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest473 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest473:                                   ; preds = %normal-dest466
  %.elt614 = extractvalue { {}*, i64 } %160, 0
  %.elt616 = extractvalue { {}*, i64 } %160, 1
  %cond592 = icmp eq i64 %.elt616, 0
  %161 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.1 = select i1 %cond592, {}* %161, {}* %.elt614
  br label %tag133.outer.backedge

normal-dest487:                                   ; preds = %tag108
  %ptrtoint488 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint489 = add i64 %ptrtoint488, 7
  %entry-point-addr490 = inttoptr i64 %entry-point-addr-uint489 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point491 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr490, align 8
  %162 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point491({}* %76, i64 1, {}* %56, {}* null, {}* null, {}* null)
          to label %normal-dest494 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest494:                                   ; preds = %normal-dest487
  %.elt618 = extractvalue { {}*, i64 } %162, 0
  %.elt620 = extractvalue { {}*, i64 } %162, 1
  %cond593 = icmp eq i64 %.elt620, 0
  %163 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.2 = select i1 %cond593, {}* %163, {}* %.elt618
  br label %tag133.outer.backedge

normal-dest503:                                   ; preds = %tag112
  %ptrtoint504 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint505 = add i64 %ptrtoint504, 7
  %entry-point-addr506 = inttoptr i64 %entry-point-addr-uint505 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point507 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr506, align 8
  %164 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point507({}* %80, i64 2, {}* %ERG.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest510 unwind label %cleanup-lpad.loopexit

normal-dest510:                                   ; preds = %normal-dest503
  %.elt639 = extractvalue { {}*, i64 } %164, 0
  %.elt641 = extractvalue { {}*, i64 } %164, 1
  %cond597 = icmp eq i64 %.elt641, 0
  %165 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ERG.3 = select i1 %cond597, {}* %165, {}* %.elt639
  br label %tag125

normal-dest551:                                   ; preds = %tag128
  %166 = invoke double @from_object_double({}* nonnull %"%DOTIMES-VAR.0")
          to label %normal-dest552 unwind label %cleanup-lpad.loopexit

normal-dest552:                                   ; preds = %normal-dest551
  %167 = fcmp olt double %95, %166
  br i1 %167, label %tag64, label %tag127

normal-dest570:                                   ; preds = %tag136
  %168 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint571 = ptrtoint {}* %100 to i64
  %entry-point-addr-uint572 = add i64 %ptrtoint571, 7
  %entry-point-addr573 = inttoptr i64 %entry-point-addr-uint572 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point574 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr573, align 8
  %169 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point574({}* %100, i64 3, {}* %168, {}* %X188.0, {}* %97, {}* null)
          to label %normal-dest577 unwind label %cleanup-lpad.loopexit

normal-dest577:                                   ; preds = %normal-dest570
  %.elt656 = extractvalue { {}*, i64 } %169, 0
  %.elt658 = extractvalue { {}*, i64 } %169, 1
  %cond601 = icmp eq i64 %.elt658, 0
  %170 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x182.3 = select i1 %cond601, {}* %170, {}* %.elt656
  br label %tag98

header-check-br585:                               ; preds = %header-check-br369
  %171 = load i64, i64* %irc-bit-cast591, align 8
  %172 = icmp eq i64 %171, 1325
  br i1 %172, label %tag128, label %tag24
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^272^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !77 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^272^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G235899.0 = phi {}* [ %18, %header-check-br ], [ %G235899.1, %normal-dest17 ], [ %G235899.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 433), align 8
  %ptrtoint20 = ptrtoint {}* %G235899.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G235899.0, i64 2, {}* %"closure->ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 433), align 8
  %"closure->ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 9143, i64 272, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 432), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235899.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 435), align 8
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 436), align 16
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1088 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 433), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235899.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !78 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 410), align 16
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %14, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^275^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !79 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^275^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G235941.0 = phi {}* [ %18, %header-check-br ], [ %G235941.1, %normal-dest17 ], [ %G235941.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 441), align 8
  %ptrtoint29 = ptrtoint {}* %G235941.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G235941.0, i64 2, {}* %"closure->ND=AKTUELLES_DOMAIN_LEER_P", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag3, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 441), align 8
  %"closure->ND=AKTUELLES_DOMAIN_LEER_P" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 9242, i64 275, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235941.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 443), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->ND=AKTUELLES_DOMAIN_LEER_P", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 444), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->ND=AKTUELLES_DOMAIN_LEER_P", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 1100 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 441), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag3
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 440), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235941.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !80 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc611 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc611:                                        ; preds = %10
  unreachable

tag2:                                             ; preds = %tag127
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest146 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag3:                                             ; preds = %tag11
  %13 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only541 = and i64 %13, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only541, 0
  br i1 %fixnump-test, label %tag130, label %tag109

tag11:                                            ; preds = %tag127, %normal-dest153, %tag90
  %.val633 = phi {}* [ %.val631.pre, %tag90 ], [ %111, %normal-dest153 ], [ %90, %tag127 ]
  %G2095854.0 = phi {}* [ %66, %tag90 ], [ %G2095854.1, %normal-dest153 ], [ %90, %tag127 ]
  %14 = ptrtoint {}* %G2095854.0 to i64
  %tag-only179540 = and i64 %14, 7
  %consp-test180 = icmp eq i64 %tag-only179540, 3
  %.val630 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G236138.0 = select i1 %consp-test180, {}* %.val630, {}* %.val633
  %15 = icmp eq {}* %G236138.0, %.val633
  br i1 %15, label %tag97, label %tag3

tag14:                                            ; preds = %tag20, %normal-dest355, %header-check-br
  %.pre = phi {}* [ %99, %tag20 ], [ %138, %normal-dest355 ], [ %99, %header-check-br ]
  br label %tag53

tag17:                                            ; preds = %tag121
  %16 = icmp sgt {}* %X161.0, inttoptr (i64 -1 to {}*)
  %.625 = select i1 %16, {}* %.val634, {}* %64
  br label %tag36

tag18:                                            ; preds = %tag57
  br i1 %39, label %tag45, label %tag106

tag20:                                            ; preds = %normal-dest138
  %test204 = icmp eq i64 %tag-only538, 1
  br i1 %test204, label %header-check-br201, label %tag14

tag22:                                            ; preds = %tag130
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest211 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag25:                                            ; preds = %tag53
  %19 = add i64 %101, 7
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 8
  %"tag fixnum" = shl nuw i64 %21, 2
  %22 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag49

tag28:                                            ; preds = %tag60
  %23 = icmp sgt i64 %"tag fixnum494", %74
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.626 = select i1 %23, {}* %24, {}* %27
  br label %tag114

tag30:                                            ; preds = %tag51
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest238 unwind label %cleanup-lpad.loopexit

tag33:                                            ; preds = %header-check-br279, %tag43
  br label %tag78

tag36:                                            ; preds = %tag17, %normal-dest319
  %27 = phi {}* [ %133, %normal-dest319 ], [ %64, %tag17 ]
  %G236062.0 = phi {}* [ %G236062.1, %normal-dest319 ], [ %.625, %tag17 ]
  %28 = icmp eq {}* %G236062.0, %27
  br i1 %28, label %tag108, label %tag60

tag37:                                            ; preds = %tag75
  %29 = icmp slt {}* %X161.0, %"%DOTIMES-VAR.0"
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %. = select i1 %29, {}* %30, {}* %73
  br label %tag89

tag40:                                            ; preds = %tag84
  br i1 %fixnump-test441, label %tag81, label %tag65

tag42:                                            ; preds = %tag81
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit

tag43:                                            ; preds = %tag89
  br i1 %test282, label %header-check-br279, label %tag33

tag45:                                            ; preds = %tag18
  %33 = invoke float @from_object_float({}* %X161.0)
          to label %normal-dest288 unwind label %cleanup-lpad.loopexit

tag46:                                            ; preds = %normal-dest298
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag89

tag49:                                            ; preds = %tag97, %normal-dest334, %tag63, %tag25
  %35 = phi {}* [ %.val639, %tag25 ], [ %.val639, %tag63 ], [ %136, %normal-dest334 ], [ %.val633, %tag97 ]
  %"%DOTIMES-VAR.0" = phi {}* [ %22, %tag25 ], [ null, %tag63 ], [ %"%DOTIMES-VAR.1", %normal-dest334 ], [ %LENGTH.0.ph, %tag97 ]
  %36 = ptrtoint {}* %"%DOTIMES-VAR.0" to i64
  %fixnum-tag-only382590 = and i64 %36, 3
  %fixnump-test383 = icmp eq i64 %fixnum-tag-only382590, 0
  %test282 = icmp eq i64 %tag-only538, 1
  %irc-bit-cast283 = bitcast {}* %.in to i8*
  %gep284 = getelementptr inbounds i8, i8* %irc-bit-cast283, i64 -9
  %irc-bit-cast285 = bitcast i8* %gep284 to i64*
  %37 = add i64 %101, 7
  %38 = inttoptr i64 %37 to i64*
  %single-float-tag-only186 = and i64 %36, 7
  %39 = icmp eq i64 %single-float-tag-only186, 6
  %test431 = icmp ne i64 %single-float-tag-only186, 1
  %irc-bit-cast432 = bitcast {}* %"%DOTIMES-VAR.0" to i8*
  %gep433 = getelementptr inbounds i8, i8* %irc-bit-cast432, i64 -9
  %irc-bit-cast434 = bitcast i8* %gep433 to i64*
  br label %tag102

tag51:                                            ; preds = %tag78
  %.val634 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G236086.0 = select i1 %fixnump-test441, {}* %.val634, {}* %64
  %40 = icmp eq {}* %G236086.0, %64
  br i1 %40, label %tag30, label %tag121

tag52:                                            ; preds = %header-check-br428
  %41 = invoke double @from_object_double({}* nonnull %X161.0)
          to label %normal-dest297 unwind label %cleanup-lpad.loopexit

tag53:                                            ; preds = %header-check-br201, %normal-dest355, %tag14
  %.val639 = phi {}* [ %.pre, %tag14 ], [ %138, %normal-dest355 ], [ %99, %header-check-br201 ]
  %G236101.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag14 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %normal-dest355 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br201 ]
  %G236101.0 = load {}*, {}** %G236101.0.in, align 16
  %42 = icmp eq {}* %G236101.0, %.val639
  br i1 %42, label %tag63, label %tag25

tag57:                                            ; preds = %tag102
  %trunc = trunc i64 %74 to i3
  switch i3 %trunc, label %tag106 [
    i3 -2, label %tag18
    i3 1, label %header-check-br463
  ]

tag60:                                            ; preds = %tag36
  br i1 %fixnump-test441, label %tag28, label %tag87

tag62:                                            ; preds = %tag121
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest312 unwind label %cleanup-lpad.loopexit

tag63:                                            ; preds = %tag53
  %45 = icmp eq {}* %.in, %.val639
  %.val638 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G236097.0 = select i1 %45, {}* %.val638, {}* %.val639
  %46 = icmp eq {}* %G236097.0, %.val639
  br i1 %46, label %tag68, label %tag49

tag88.outer:                                      ; preds = %tag88.outer.backedge, %tag88.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag88.outer.preheader ], [ %LENGTH.0.ph.be, %tag88.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in, %tag88.outer.preheader ], [ %G2095854.0, %tag88.outer.backedge ]
  %47 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only410539 = and i64 %47, 7
  %consp-test411 = icmp eq i64 %tag-only410539, 3
  %48 = add i64 %47, 5
  %49 = inttoptr i64 %48 to {}**
  br label %tag88

tag65:                                            ; preds = %tag40
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest369 unwind label %cleanup-lpad.loopexit

tag68:                                            ; preds = %tag63
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest327 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag75:                                            ; preds = %tag102
  br i1 %fixnump-test383, label %tag37, label %tag106

tag78:                                            ; preds = %header-check-br279, %tag33
  %G236089.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag33 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br279 ]
  %G236089.0 = load {}*, {}** %G236089.0.in, align 16
  %54 = icmp eq {}* %G236089.0, %64
  br i1 %54, label %tag96, label %tag51

tag79:                                            ; preds = %tag114
  %"untagged fixnum" = lshr exact i64 %74, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %100, i64 0, i32 1, i64 %"untagged fixnum"
  %55 = load {}*, {}** %aref, align 8
  br label %tag84

tag81:                                            ; preds = %tag40
  %56 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %74, i64 4)
  %result = extractvalue { i64, i1 } %56, 0
  %overflow = extractvalue { i64, i1 } %56, 1
  %57 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag42, label %tag102.backedge

tag102.backedge:                                  ; preds = %tag81, %normal-dest272, %normal-dest376
  %.be = phi {}* [ %125, %normal-dest272 ], [ %141, %normal-dest376 ], [ %59, %tag81 ]
  %X161.0.be = phi {}* [ %X161.1, %normal-dest272 ], [ %X161.2, %normal-dest376 ], [ %57, %tag81 ]
  br label %tag102

tag82:                                            ; preds = %normal-dest289
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag89

tag84:                                            ; preds = %normal-dest478, %normal-dest420, %normal-dest245, %tag79
  %59 = phi {}* [ %81, %tag79 ], [ %123, %normal-dest245 ], [ %149, %normal-dest420 ], [ %158, %normal-dest478 ]
  %x246.0 = phi {}* [ %55, %tag79 ], [ %x246.1, %normal-dest245 ], [ %x246.2, %normal-dest420 ], [ %x246.3, %normal-dest478 ]
  %60 = icmp eq {}* %x246.0, %59
  %.val636 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G236011.0 = select i1 %60, {}* %.val636, {}* %59
  %61 = icmp eq {}* %G236011.0, %59
  br i1 %61, label %tag40, label %tag117

tag87:                                            ; preds = %tag60
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest396 unwind label %cleanup-lpad.loopexit

tag88:                                            ; preds = %normal-dest502, %tag88.outer
  br i1 %consp-test411, label %tag90, label %tag127

tag89:                                            ; preds = %tag37, %normal-dest457, %tag95, %tag91, %tag82, %tag46
  %G235961.0 = phi {}* [ %67, %tag91 ], [ %58, %tag82 ], [ %34, %tag46 ], [ %68, %tag95 ], [ %G235961.1, %normal-dest457 ], [ %., %tag37 ]
  %64 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %65 = icmp eq {}* %G235961.0, %64
  br i1 %65, label %tag89.tag117_crit_edge, label %tag43

tag89.tag117_crit_edge:                           ; preds = %tag89
  %.pre653 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag117

tag90:                                            ; preds = %tag88
  %66 = load {}*, {}** %49, align 8
  %.val631.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag11

tag91:                                            ; preds = %normal-dest289
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag89

tag95:                                            ; preds = %normal-dest298
  %68 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag89

tag96:                                            ; preds = %tag78
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest413 unwind label %cleanup-lpad.loopexit

tag97:                                            ; preds = %tag11
  %71 = icmp eq {}* %G2095854.0, %.val633
  %G236109.0 = select i1 %71, {}* %.val630, {}* %.val633
  %72 = icmp eq {}* %G236109.0, %.val633
  br i1 %72, label %tag126, label %tag49

tag102:                                           ; preds = %tag102.backedge, %tag49
  %73 = phi {}* [ %35, %tag49 ], [ %.be, %tag102.backedge ]
  %X161.0 = phi {}* [ null, %tag49 ], [ %X161.0.be, %tag102.backedge ]
  %74 = ptrtoint {}* %X161.0 to i64
  %fixnum-tag-only440550 = and i64 %74, 3
  %fixnump-test441 = icmp eq i64 %fixnum-tag-only440550, 0
  br i1 %fixnump-test441, label %tag75, label %tag57

tag106:                                           ; preds = %header-check-br463, %tag57, %header-check-br428, %tag75, %tag18
  %75 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest450 unwind label %cleanup-lpad.loopexit

tag108:                                           ; preds = %tag36, %tag114
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest471 unwind label %cleanup-lpad.loopexit

tag109:                                           ; preds = %tag3
  %79 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest188 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag114:                                           ; preds = %tag28, %normal-dest403
  %81 = phi {}* [ %143, %normal-dest403 ], [ %27, %tag28 ]
  %G236039.0 = phi {}* [ %G236039.1, %normal-dest403 ], [ %.626, %tag28 ]
  %82 = icmp eq {}* %G236039.0, %81
  br i1 %82, label %tag108, label %tag79

tag117:                                           ; preds = %tag84, %tag89.tag117_crit_edge
  %83 = phi {}* [ %.pre653, %tag89.tag117_crit_edge ], [ %59, %tag84 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %84 = insertvalue { {}*, i64 } undef, {}* %83, 0
  %85 = insertvalue { {}*, i64 } %84, i64 1, 1
  ret { {}*, i64 } %85

tag121:                                           ; preds = %tag51
  %86 = load i64, i64* %38, align 8
  %"tag fixnum494" = shl nuw i64 %86, 2
  %87 = inttoptr i64 %"tag fixnum494" to {}*
  br i1 %fixnump-test441, label %tag17, label %tag62

tag126:                                           ; preds = %tag97
  %88 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest502 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag127:                                           ; preds = %tag88
  %90 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %91 = icmp eq {}* %SEQUENCE.0.ph, %90
  %.val628 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G236150.0 = select i1 %91, {}* %.val628, {}* %90
  %92 = icmp eq {}* %G236150.0, %90
  br i1 %92, label %tag2, label %tag11

tag130:                                           ; preds = %tag3
  %93 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %13, i64 4)
  %result426 = extractvalue { i64, i1 } %93, 0
  %overflow427 = extractvalue { i64, i1 } %93, 1
  %94 = inttoptr i64 %result426 to {}*
  br i1 %overflow427, label %tag22, label %tag88.outer.backedge

tag88.outer.backedge:                             ; preds = %tag130, %normal-dest219, %normal-dest195
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.1, %normal-dest195 ], [ %LENGTH.2, %normal-dest219 ], [ %94, %tag130 ]
  br label %tag88.outer

cleanup-lpad.loopexit:                            ; preds = %tag30, %normal-dest238, %tag42, %normal-dest265, %tag45, %normal-dest288, %tag52, %normal-dest297, %tag62, %normal-dest312, %tag65, %normal-dest369, %tag87, %normal-dest396, %tag96, %normal-dest413, %tag106, %normal-dest450, %tag108, %normal-dest471
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag2, %normal-dest146, %tag126, %normal-dest502
  %lpad.loopexit644 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag109, %normal-dest188, %tag22, %normal-dest211
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %9, %normal-dest348, %maybe-more-tests, %normal-dest327, %tag68, %normal-dest135, %normal-dest
  %lpad.loopexit.split-lp642 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp642, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit644, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %95 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %96 = invoke {}* @cc_safe_fdefinition({}* %95)
          to label %normal-dest135 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest135:                                   ; preds = %normal-dest
  %97 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint = ptrtoint {}* %96 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %98 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %96, i64 2, {}* %farg0, {}* %97, {}* null, {}* null)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest138:                                   ; preds = %normal-dest135
  %.elt = extractvalue { {}*, i64 } %98, 0
  %.elt537 = extractvalue { {}*, i64 } %98, 1
  %cond = icmp eq i64 %.elt537, 0
  %99 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %99, {}* %.elt
  %100 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %101 = ptrtoint {}* %.in to i64
  %tag-only538 = and i64 %101, 7
  %consp-test = icmp eq i64 %tag-only538, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G236157.0 = select i1 %consp-test, {}* %.val, {}* %99
  %102 = icmp eq {}* %G236157.0, %99
  br i1 %102, label %tag20, label %tag88.outer.preheader

tag88.outer.preheader:                            ; preds = %normal-dest138
  br label %tag88.outer

header-check-br:                                  ; preds = %header-check-br201
  %.off640 = add i64 %114, -1153
  %103 = icmp ult i64 %.off640, 149
  br i1 %103, label %maybe-more-tests, label %tag14

maybe-more-tests:                                 ; preds = %header-check-br
  %104 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 136), align 16
  %105 = invoke {}* @cc_safe_fdefinition({}* %104)
          to label %normal-dest348 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest146:                                   ; preds = %tag2
  %106 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %107 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %108 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %109 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint147 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint148 = add i64 %ptrtoint147, 7
  %entry-point-addr149 = inttoptr i64 %entry-point-addr-uint148 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point150 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr149, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point150({}* %12, i64 5, {}* %106, {}* %107, {}* %SEQUENCE.0.ph, {}* %108, {}* %109)
          to label %normal-dest153 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest153:                                   ; preds = %normal-dest146
  %.elt596 = extractvalue { {}*, i64 } %110, 0
  %.elt598 = extractvalue { {}*, i64 } %110, 1
  %cond533 = icmp eq i64 %.elt598, 0
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G2095854.1 = select i1 %cond533, {}* %111, {}* %.elt596
  br label %tag11

normal-dest188:                                   ; preds = %tag109
  %ptrtoint189 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint190 = add i64 %ptrtoint189, 7
  %entry-point-addr191 = inttoptr i64 %entry-point-addr-uint190 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point192 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr191, align 8
  %112 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point192({}* %80, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest195 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest195:                                   ; preds = %normal-dest188
  %.elt543 = extractvalue { {}*, i64 } %112, 0
  %.elt545 = extractvalue { {}*, i64 } %112, 1
  %cond523 = icmp eq i64 %.elt545, 0
  %113 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.1 = select i1 %cond523, {}* %113, {}* %.elt543
  br label %tag88.outer.backedge

header-check-br201:                               ; preds = %tag20
  %irc-bit-cast205 = bitcast {}* %.in to i8*
  %gep206 = getelementptr inbounds i8, i8* %irc-bit-cast205, i64 -9
  %irc-bit-cast207 = bitcast i8* %gep206 to i64*
  %114 = load i64, i64* %irc-bit-cast207, align 8
  %.off = add i64 %114, -1081
  %115 = icmp ult i64 %.off, 69
  br i1 %115, label %tag53, label %header-check-br

normal-dest211:                                   ; preds = %tag22
  %ptrtoint213 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint214 = add i64 %ptrtoint213, 7
  %entry-point-addr215 = inttoptr i64 %entry-point-addr-uint214 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point216 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr215, align 8
  %116 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point216({}* %18, i64 1, {}* %94, {}* null, {}* null, {}* null)
          to label %normal-dest219 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest219:                                   ; preds = %normal-dest211
  %.elt547 = extractvalue { {}*, i64 } %116, 0
  %.elt549 = extractvalue { {}*, i64 } %116, 1
  %cond524 = icmp eq i64 %.elt549, 0
  %117 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.2 = select i1 %cond524, {}* %117, {}* %.elt547
  br label %tag88.outer.backedge

normal-dest238:                                   ; preds = %tag30
  %118 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %119 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %120 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %121 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint239 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint240 = add i64 %ptrtoint239, 7
  %entry-point-addr241 = inttoptr i64 %entry-point-addr-uint240 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point242 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr241, align 8
  %122 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point242({}* %26, i64 5, {}* %118, {}* %119, {}* %X161.0, {}* %120, {}* %121)
          to label %normal-dest245 unwind label %cleanup-lpad.loopexit

normal-dest245:                                   ; preds = %normal-dest238
  %.elt583 = extractvalue { {}*, i64 } %122, 0
  %.elt585 = extractvalue { {}*, i64 } %122, 1
  %cond531 = icmp eq i64 %.elt585, 0
  %123 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x246.1 = select i1 %cond531, {}* %123, {}* %.elt583
  br label %tag84

normal-dest265:                                   ; preds = %tag42
  %ptrtoint266 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint267 = add i64 %ptrtoint266, 7
  %entry-point-addr268 = inttoptr i64 %entry-point-addr-uint267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr268, align 8
  %124 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point269({}* %32, i64 1, {}* %57, {}* null, {}* null, {}* null)
          to label %normal-dest272 unwind label %cleanup-lpad.loopexit

normal-dest272:                                   ; preds = %normal-dest265
  %.elt575 = extractvalue { {}*, i64 } %124, 0
  %.elt577 = extractvalue { {}*, i64 } %124, 1
  %cond529 = icmp eq i64 %.elt577, 0
  %125 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %X161.1 = select i1 %cond529, {}* %125, {}* %.elt575
  br label %tag102.backedge

header-check-br279:                               ; preds = %tag43
  %126 = load i64, i64* %irc-bit-cast285, align 8
  %127 = icmp eq i64 %126, 1137
  br i1 %127, label %tag78, label %tag33

normal-dest288:                                   ; preds = %tag45
  %128 = invoke float @from_object_float({}* %"%DOTIMES-VAR.0")
          to label %normal-dest289 unwind label %cleanup-lpad.loopexit

normal-dest289:                                   ; preds = %normal-dest288
  %129 = fcmp olt float %33, %128
  br i1 %129, label %tag91, label %tag82

normal-dest297:                                   ; preds = %tag52
  %130 = invoke double @from_object_double({}* nonnull %"%DOTIMES-VAR.0")
          to label %normal-dest298 unwind label %cleanup-lpad.loopexit

normal-dest298:                                   ; preds = %normal-dest297
  %131 = fcmp olt double %41, %130
  br i1 %131, label %tag46, label %tag95

normal-dest312:                                   ; preds = %tag62
  %ptrtoint313 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint314 = add i64 %ptrtoint313, 7
  %entry-point-addr315 = inttoptr i64 %entry-point-addr-uint314 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point316 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr315, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point316({}* %44, i64 2, {}* null, {}* %X161.0, {}* null, {}* null)
          to label %normal-dest319 unwind label %cleanup-lpad.loopexit

normal-dest319:                                   ; preds = %normal-dest312
  %.elt558 = extractvalue { {}*, i64 } %132, 0
  %.elt560 = extractvalue { {}*, i64 } %132, 1
  %cond526 = icmp eq i64 %.elt560, 0
  %133 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236062.1 = select i1 %cond526, {}* %133, {}* %.elt558
  br label %tag36

normal-dest327:                                   ; preds = %tag68
  %134 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 438), align 16
  %ptrtoint328 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint329 = add i64 %ptrtoint328, 7
  %entry-point-addr330 = inttoptr i64 %entry-point-addr-uint329 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point331 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr330, align 8
  %135 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point331({}* %53, i64 2, {}* %.in, {}* %134, {}* null, {}* null)
          to label %normal-dest334 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest334:                                   ; preds = %normal-dest327
  %.elt600 = extractvalue { {}*, i64 } %135, 0
  %.elt602 = extractvalue { {}*, i64 } %135, 1
  %cond534 = icmp eq i64 %.elt602, 0
  %136 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOTIMES-VAR.1" = select i1 %cond534, {}* %136, {}* %.elt600
  br label %tag49

normal-dest348:                                   ; preds = %maybe-more-tests
  %ptrtoint349 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint350 = add i64 %ptrtoint349, 7
  %entry-point-addr351 = inttoptr i64 %entry-point-addr-uint350 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point352 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr351, align 8
  %137 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point352({}* %105, i64 1, {}* nonnull %.in, {}* null, {}* null, {}* null)
          to label %normal-dest355 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest355:                                   ; preds = %normal-dest348
  %.elt604 = extractvalue { {}*, i64 } %137, 0
  %.elt606 = extractvalue { {}*, i64 } %137, 1
  %cond535 = icmp eq i64 %.elt606, 0
  %138 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236165.0 = select i1 %cond535, {}* %138, {}* %.elt604
  %139 = icmp eq {}* %G236165.0, inttoptr (i64 4 to {}*)
  br i1 %139, label %tag53, label %tag14

normal-dest369:                                   ; preds = %tag65
  %ptrtoint370 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint371 = add i64 %ptrtoint370, 7
  %entry-point-addr372 = inttoptr i64 %entry-point-addr-uint371 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point373 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr372, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point373({}* %51, i64 2, {}* %X161.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest376 unwind label %cleanup-lpad.loopexit

normal-dest376:                                   ; preds = %normal-dest369
  %.elt571 = extractvalue { {}*, i64 } %140, 0
  %.elt573 = extractvalue { {}*, i64 } %140, 1
  %cond528 = icmp eq i64 %.elt573, 0
  %141 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %X161.2 = select i1 %cond528, {}* %141, {}* %.elt571
  br label %tag102.backedge

normal-dest396:                                   ; preds = %tag87
  %ptrtoint397 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint398 = add i64 %ptrtoint397, 7
  %entry-point-addr399 = inttoptr i64 %entry-point-addr-uint398 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point400 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr399, align 8
  %142 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point400({}* %63, i64 2, {}* %X161.0, {}* %87, {}* null, {}* null)
          to label %normal-dest403 unwind label %cleanup-lpad.loopexit

normal-dest403:                                   ; preds = %normal-dest396
  %.elt563 = extractvalue { {}*, i64 } %142, 0
  %.elt565 = extractvalue { {}*, i64 } %142, 1
  %cond527 = icmp eq i64 %.elt565, 0
  %143 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236039.1 = select i1 %cond527, {}* %143, {}* %.elt563
  br label %tag114

normal-dest413:                                   ; preds = %tag96
  %144 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %145 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %146 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %147 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint414 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint415 = add i64 %ptrtoint414, 7
  %entry-point-addr416 = inttoptr i64 %entry-point-addr-uint415 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point417 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr416, align 8
  %148 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point417({}* %70, i64 5, {}* %144, {}* %145, {}* %.in, {}* %146, {}* %147)
          to label %normal-dest420 unwind label %cleanup-lpad.loopexit

normal-dest420:                                   ; preds = %normal-dest413
  %.elt587 = extractvalue { {}*, i64 } %148, 0
  %.elt589 = extractvalue { {}*, i64 } %148, 1
  %cond532 = icmp eq i64 %.elt589, 0
  %149 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x246.2 = select i1 %cond532, {}* %149, {}* %.elt587
  br label %tag84

header-check-br428:                               ; preds = %header-check-br463
  %150 = load i64, i64* %irc-bit-cast434, align 8
  %151 = icmp eq i64 %150, 1325
  br i1 %151, label %tag52, label %tag106

normal-dest450:                                   ; preds = %tag106
  %ptrtoint451 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint452 = add i64 %ptrtoint451, 7
  %entry-point-addr453 = inttoptr i64 %entry-point-addr-uint452 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point454 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr453, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point454({}* %76, i64 2, {}* %X161.0, {}* %"%DOTIMES-VAR.0", {}* null, {}* null)
          to label %normal-dest457 unwind label %cleanup-lpad.loopexit

normal-dest457:                                   ; preds = %normal-dest450
  %.elt552 = extractvalue { {}*, i64 } %152, 0
  %.elt554 = extractvalue { {}*, i64 } %152, 1
  %cond525 = icmp eq i64 %.elt554, 0
  %153 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G235961.1 = select i1 %cond525, {}* %153, {}* %.elt552
  br label %tag89

header-check-br463:                               ; preds = %tag57
  %irc-bit-cast467 = bitcast {}* %X161.0 to i8*
  %gep468 = getelementptr inbounds i8, i8* %irc-bit-cast467, i64 -9
  %irc-bit-cast469 = bitcast i8* %gep468 to i64*
  %154 = load i64, i64* %irc-bit-cast469, align 8
  %155 = icmp ne i64 %154, 1325
  %brmerge = or i1 %test431, %155
  br i1 %brmerge, label %tag106, label %header-check-br428

normal-dest471:                                   ; preds = %tag108
  %156 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint472 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint473 = add i64 %ptrtoint472, 7
  %entry-point-addr474 = inttoptr i64 %entry-point-addr-uint473 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point475 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr474, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point475({}* %78, i64 3, {}* %156, {}* %X161.0, {}* %87, {}* null)
          to label %normal-dest478 unwind label %cleanup-lpad.loopexit

normal-dest478:                                   ; preds = %normal-dest471
  %.elt579 = extractvalue { {}*, i64 } %157, 0
  %.elt581 = extractvalue { {}*, i64 } %157, 1
  %cond530 = icmp eq i64 %.elt581, 0
  %158 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x246.3 = select i1 %cond530, {}* %158, {}* %.elt579
  br label %tag84

normal-dest502:                                   ; preds = %tag126
  %159 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 439), align 8
  %ptrtoint503 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint504 = add i64 %ptrtoint503, 7
  %entry-point-addr505 = inttoptr i64 %entry-point-addr-uint504 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point506 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr505, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point506({}* %89, i64 2, {}* %G2095854.0, {}* %159, {}* null, {}* null)
          to label %tag88 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^287^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !81 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^287^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G236189.0 = phi {}* [ %18, %header-check-br ], [ %G236189.1, %normal-dest54 ], [ %G236189.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 449), align 8
  %ptrtoint13 = ptrtoint {}* %G236189.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G236189.0, i64 2, {}* %"closure->ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 449), align 8
  %"closure->ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 9553, i64 287, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 451), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 452), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1148 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 449), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 448), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236189.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236189.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !82 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc74 unwind label %cleanup-lpad

.noexc74:                                         ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest23
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 446), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest31 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest23
  %13 = ptrtoint {}* %24 to i64
  %14 = icmp eq {}* %y.0, null
  %15 = load i64, i64* bitcast ({}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58) to i64*), align 16
  %. = select i1 %14, i64 %15, i64 %13
  br label %tag9

tag9:                                             ; preds = %tag4, %normal-dest38
  %return-value.sroa.6.0 = phi i64 [ %.elt70, %normal-dest38 ], [ 1, %tag4 ]
  %return-value.sroa.0.0 = phi i64 [ %27, %normal-dest38 ], [ %., %tag4 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %16 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %17 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %18 = insertvalue { {}*, i64 } %17, i64 %return-value.sroa.6.0, 1
  ret { {}*, i64 } %18

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest31, %tag3, %normal-dest20, %normal-dest
  %19 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %19

normal-dest:                                      ; preds = %entry
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 410), align 16
  %ptrtoint = ptrtoint {}* %21 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %21, i64 2, {}* %farg0, {}* %22, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest20
  %.elt = extractvalue { {}*, i64 } %23, 0
  %.elt65 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt65, 0
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %y.0 = select i1 %cond, {}* %24, {}* %.elt
  %25 = ptrtoint {}* %y.0 to i64
  %fixnum-tag-only2666 = and i64 %25, 3
  %fixnump-test27 = icmp eq i64 %fixnum-tag-only2666, 0
  br i1 %fixnump-test27, label %tag4, label %tag3

normal-dest31:                                    ; preds = %tag3
  %ptrtoint32 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %12, i64 2, {}* null, {}* %y.0, {}* null, {}* null)
          to label %normal-dest38 unwind label %cleanup-lpad

normal-dest38:                                    ; preds = %normal-dest31
  %.elt68 = extractvalue { {}*, i64 } %26, 0
  %27 = ptrtoint {}* %.elt68 to i64
  %.elt70 = extractvalue { {}*, i64 } %26, 1
  br label %tag9
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^290^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !83 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^290^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest63, %normal-dest50, %header-check-br
  %G236665.0 = phi {}* [ %18, %header-check-br ], [ %G236665.1, %normal-dest50 ], [ %G236665.2, %normal-dest63 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 474), align 16
  %ptrtoint13 = ptrtoint {}* %G236665.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G236665.0, i64 2, {}* %"closure->ND=MIT-DAMEN-MEINES-DOMAINS", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br33
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest43 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest56, %maybe-more-tests41, %normal-dest43, %tag2, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 474), align 16
  %"closure->ND=MIT-DAMEN-MEINES-DOMAINS" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 9653, i64 290, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 471), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br33

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 476), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND=MIT-DAMEN-MEINES-DOMAINS", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 474), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %26 = insertvalue { {}*, i64 } undef, {}* %25, 0
  %27 = insertvalue { {}*, i64 } %26, i64 1, 1
  ret { {}*, i64 } %27

header-check-br33:                                ; preds = %header-check-br
  %.off89 = add i64 %19, -1001
  %28 = icmp ult i64 %.off89, 5
  br i1 %28, label %maybe-more-tests41, label %tag2

maybe-more-tests41:                               ; preds = %header-check-br33
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest43:                                    ; preds = %tag2
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 473), align 8
  %ptrtoint44 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint45 = add i64 %ptrtoint44, 7
  %entry-point-addr46 = inttoptr i64 %entry-point-addr-uint45 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point47 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr46, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point47({}* %14, i64 5, {}* %31, {}* %32, {}* %18, {}* %33, {}* %34)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest43
  %.elt = extractvalue { {}*, i64 } %35, 0
  %.elt71 = extractvalue { {}*, i64 } %35, 1
  %cond = icmp eq i64 %.elt71, 0
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236665.1 = select i1 %cond, {}* %36, {}* %.elt
  br label %tag

normal-dest56:                                    ; preds = %maybe-more-tests41
  %ptrtoint57 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %30, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt84 = extractvalue { {}*, i64 } %37, 0
  %.elt86 = extractvalue { {}*, i64 } %37, 1
  %cond69 = icmp eq i64 %.elt86, 0
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236665.2 = select i1 %cond69, {}* %38, {}* %.elt84
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !84 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc1423 unwind label %cleanup-lpad

.noexc1423:                                       ; preds = %13
  unreachable

tag4:                                             ; preds = %normal-dest994, %tag50
  %14 = ptrtoint {}* %40 to i64
  %tag-only1381180 = and i64 %14, 7
  %consp-test139 = icmp eq i64 %tag-only1381180, 3
  br i1 %consp-test139, label %tag22, label %tag100

tag7:                                             ; preds = %tag81
  %15 = add i64 %34, -3
  %16 = inttoptr i64 %15 to {}**
  %17 = load {}*, {}** %16, align 8
  br label %tag58

tag10:                                            ; preds = %tag95
  %18 = add i64 %66, -3
  %19 = inttoptr i64 %18 to {}**
  %20 = load {}*, {}** %19, align 8
  br label %tag50

tag14:                                            ; preds = %tag58
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 454), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest146 unwind label %cleanup-lpad

tag22:                                            ; preds = %tag4
  %G236893.0 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %24 = icmp eq {}* %G236893.0, %23
  br i1 %24, label %tag30, label %tag67

tag26:                                            ; preds = %tag105
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 454), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest187 unwind label %cleanup-lpad

tag30:                                            ; preds = %tag22
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest203 unwind label %cleanup-lpad

tag31:                                            ; preds = %tag67, %normal-dest210
  %29 = phi {}* [ %23, %tag67 ], [ %88, %normal-dest210 ]
  %G236655.0 = phi {}* [ %53, %tag67 ], [ %G236655.1, %normal-dest210 ]
  %30 = add i64 %14, 5
  %31 = inttoptr i64 %30 to {}**
  %32 = load {}*, {}** %31, align 8
  %33 = icmp eq {}* %32, %29
  br i1 %33, label %tag44, label %tag115

tag39:                                            ; preds = %normal-dest187, %tag105
  %34 = ptrtoint {}* %73 to i64
  %tag-only2361148 = and i64 %34, 7
  %consp-test237 = icmp eq i64 %tag-only2361148, 3
  br i1 %consp-test237, label %tag81, label %tag70

tag44:                                            ; preds = %normal-dest1062, %tag31
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 458), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest239 unwind label %cleanup-lpad

tag50:                                            ; preds = %tag10, %normal-dest961
  %.val1479 = phi {}* [ %G236937.0, %tag10 ], [ %.val1479.pre, %normal-dest961 ]
  %37 = phi {}* [ %67, %tag10 ], [ %303, %normal-dest961 ]
  %G236653.0 = phi {}* [ %20, %tag10 ], [ %G236653.1, %normal-dest961 ]
  %38 = add i64 %66, 5
  %39 = inttoptr i64 %38 to {}**
  %40 = load {}*, {}** %39, align 8
  %41 = icmp eq {}* %40, %37
  %G236900.0 = select i1 %41, {}* %.val1479, {}* %37
  %42 = icmp eq {}* %G236900.0, %37
  br i1 %42, label %tag4, label %tag77

tag58:                                            ; preds = %tag7, %normal-dest981
  %.val1477 = phi {}* [ %G236981.0, %tag7 ], [ %.val1477.pre, %normal-dest981 ]
  %43 = phi {}* [ %62, %tag7 ], [ %309, %normal-dest981 ]
  %G236651.0 = phi {}* [ %17, %tag7 ], [ %G236651.1, %normal-dest981 ]
  %44 = add i64 %34, 5
  %45 = inttoptr i64 %44 to {}**
  %46 = load {}*, {}** %45, align 8
  %47 = icmp eq {}* %G236651.0, %43
  %G236944.0 = select i1 %47, {}* %.val1477, {}* %43
  %48 = icmp eq {}* %G236944.0, %43
  br i1 %48, label %tag93, label %tag14

tag66:                                            ; preds = %tag93
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest950 unwind label %cleanup-lpad

tag67:                                            ; preds = %tag22
  %51 = add i64 %14, -3
  %52 = inttoptr i64 %51 to {}**
  %53 = load {}*, {}** %52, align 8
  br label %tag31

tag70:                                            ; preds = %tag39
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest952 unwind label %cleanup-lpad

tag71:                                            ; preds = %tag95
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest954 unwind label %cleanup-lpad

tag73:                                            ; preds = %tag81
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %59 = invoke {}* @cc_safe_fdefinition({}* %58)
          to label %normal-dest974 unwind label %cleanup-lpad

tag77:                                            ; preds = %tag50
  %60 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 454), align 16
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest994 unwind label %cleanup-lpad

tag81:                                            ; preds = %tag39
  %G236981.0 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %63 = icmp eq {}* %G236981.0, %62
  br i1 %63, label %tag73, label %tag7

tag92:                                            ; preds = %normal-dest
  %64 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest1024 unwind label %cleanup-lpad

tag93:                                            ; preds = %normal-dest146, %tag58
  %66 = ptrtoint {}* %G236651.0 to i64
  %tag-only10261164 = and i64 %66, 7
  %consp-test1027 = icmp eq i64 %tag-only10261164, 3
  br i1 %consp-test1027, label %tag95, label %tag66

tag95:                                            ; preds = %tag93
  %G236937.0 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %68 = icmp eq {}* %G236937.0, %67
  br i1 %68, label %tag71, label %tag10

tag100:                                           ; preds = %tag4
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest1046 unwind label %cleanup-lpad

tag105:                                           ; preds = %normal-dest
  %71 = add i64 %80, 5
  %72 = inttoptr i64 %71 to {}**
  %73 = load {}*, {}** %72, align 8
  %74 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %75 = icmp eq {}* %73, %74
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G236988.0 = select i1 %75, {}* %.val, {}* %74
  %76 = icmp eq {}* %G236988.0, %74
  br i1 %76, label %tag39, label %tag26

tag115:                                           ; preds = %tag31
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 456), align 16
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest1062 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest1062, %tag115, %tag100, %normal-dest950, %tag92, %normal-dest994, %tag77, %normal-dest974, %tag73, %normal-dest954, %tag71, %tag70, %tag66, %normal-dest952, %normal-dest1046, %normal-dest878, %normal-dest866, %normal-dest854, %normal-dest842, %normal-dest830, %normal-dest818, %normal-dest806, %normal-dest794, %normal-dest782, %normal-dest770, %normal-dest758, %normal-dest751, %normal-dest744, %normal-dest737, %normal-dest735, %normal-dest733, %normal-dest726, %normal-dest719, %normal-dest717, %normal-dest715, %normal-dest713, %normal-dest711, %normal-dest704, %normal-dest697, %normal-dest695, %normal-dest693, %normal-dest686, %normal-dest674, %normal-dest662, %normal-dest650, %normal-dest638, %normal-dest631, %normal-dest624, %normal-dest612, %normal-dest600, %normal-dest588, %normal-dest576, %normal-dest569, %normal-dest562, %normal-dest555, %normal-dest553, %normal-dest551, %normal-dest544, %normal-dest537, %normal-dest530, %normal-dest523, %normal-dest521, %normal-dest519, %normal-dest512, %normal-dest505, %normal-dest503, %normal-dest501, %normal-dest494, %normal-dest487, %normal-dest485, %normal-dest483, %normal-dest476, %normal-dest469, %normal-dest467, %normal-dest465, %normal-dest458, %normal-dest446, %normal-dest434, %normal-dest422, %normal-dest410, %normal-dest398, %normal-dest386, %normal-dest374, %normal-dest362, %normal-dest355, %normal-dest348, %normal-dest341, %normal-dest339, %normal-dest337, %normal-dest330, %normal-dest323, %normal-dest316, %normal-dest309, %normal-dest307, %normal-dest305, %normal-dest298, %normal-dest291, %normal-dest289, %normal-dest287, %normal-dest280, %normal-dest273, %normal-dest271, %normal-dest269, %normal-dest262, %normal-dest255, %normal-dest253, %normal-dest246, %normal-dest239, %tag44, %normal-dest203, %tag30, %normal-dest187, %tag26, %normal-dest1024, %normal-dest146, %tag14
  %79 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %79

normal-dest:                                      ; preds = %11
  %80 = ptrtoint {}* %farg0 to i64
  %tag-only1140 = and i64 %80, 7
  %consp-test = icmp eq i64 %tag-only1140, 3
  br i1 %consp-test, label %tag105, label %tag92

normal-dest146:                                   ; preds = %tag14
  %ptrtoint147 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint148 = add i64 %ptrtoint147, 7
  %entry-point-addr149 = inttoptr i64 %entry-point-addr-uint148 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point150 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr149, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point150({}* %22, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag93 unwind label %cleanup-lpad

normal-dest180:                                   ; preds = %normal-dest1024
  call void @unreachableError()
  unreachable

normal-dest187:                                   ; preds = %tag26
  %ptrtoint188 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint189 = add i64 %ptrtoint188, 7
  %entry-point-addr190 = inttoptr i64 %entry-point-addr-uint189 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point191 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr190, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point191({}* %26, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag39 unwind label %cleanup-lpad

normal-dest203:                                   ; preds = %tag30
  %83 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %84 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %85 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %86 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint204 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint205 = add i64 %ptrtoint204, 7
  %entry-point-addr206 = inttoptr i64 %entry-point-addr-uint205 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point207 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr206, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point207({}* %28, i64 5, {}* %83, {}* %84, {}* %40, {}* %85, {}* %86)
          to label %normal-dest210 unwind label %cleanup-lpad

normal-dest210:                                   ; preds = %normal-dest203
  %.elt1392 = extractvalue { {}*, i64 } %87, 0
  %.elt1394 = extractvalue { {}*, i64 } %87, 1
  %cond1134 = icmp eq i64 %.elt1394, 0
  %88 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236655.1 = select i1 %cond1134, {}* %88, {}* %.elt1392
  br label %tag31

normal-dest239:                                   ; preds = %tag44
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 460), align 16
  %ptrtoint240 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint241 = add i64 %ptrtoint240, 7
  %entry-point-addr242 = inttoptr i64 %entry-point-addr-uint241 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point243 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr242, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point243({}* %36, i64 1, {}* %89, {}* null, {}* null, {}* null)
          to label %normal-dest246 unwind label %cleanup-lpad

normal-dest246:                                   ; preds = %normal-dest239
  %.elt1197 = extractvalue { {}*, i64 } %90, 0
  %.elt1199 = extractvalue { {}*, i64 } %90, 1
  %cond = icmp eq i64 %.elt1199, 0
  %91 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236656.0 = select i1 %cond, {}* %91, {}* %.elt1197
  %92 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %93 = invoke {}* @cc_safe_fdefinition({}* %92)
          to label %normal-dest253 unwind label %cleanup-lpad

normal-dest253:                                   ; preds = %normal-dest246
  %94 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %95 = invoke {}* @cc_safe_fdefinition({}* %94)
          to label %normal-dest255 unwind label %cleanup-lpad

normal-dest255:                                   ; preds = %normal-dest253
  %96 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 461), align 8
  %ptrtoint256 = ptrtoint {}* %95 to i64
  %entry-point-addr-uint257 = add i64 %ptrtoint256, 7
  %entry-point-addr258 = inttoptr i64 %entry-point-addr-uint257 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point259 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr258, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point259({}* %95, i64 1, {}* %96, {}* null, {}* null, {}* null)
          to label %normal-dest262 unwind label %cleanup-lpad

normal-dest262:                                   ; preds = %normal-dest255
  %.elt1201 = extractvalue { {}*, i64 } %97, 0
  %.elt1203 = extractvalue { {}*, i64 } %97, 1
  %cond1088 = icmp eq i64 %.elt1203, 0
  %98 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236684.0 = select i1 %cond1088, {}* %98, {}* %.elt1201
  %99 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %100 = invoke {}* @cc_safe_fdefinition({}* %99)
          to label %normal-dest269 unwind label %cleanup-lpad

normal-dest269:                                   ; preds = %normal-dest262
  %101 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest271 unwind label %cleanup-lpad

normal-dest271:                                   ; preds = %normal-dest269
  %103 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest273 unwind label %cleanup-lpad

normal-dest273:                                   ; preds = %normal-dest271
  %ptrtoint274 = ptrtoint {}* %104 to i64
  %entry-point-addr-uint275 = add i64 %ptrtoint274, 7
  %entry-point-addr276 = inttoptr i64 %entry-point-addr-uint275 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point277 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr276, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point277({}* %104, i64 1, {}* %G236656.0, {}* null, {}* null, {}* null)
          to label %normal-dest280 unwind label %cleanup-lpad

normal-dest280:                                   ; preds = %normal-dest273
  %.elt1205 = extractvalue { {}*, i64 } %105, 0
  %.elt1207 = extractvalue { {}*, i64 } %105, 1
  %cond1089 = icmp eq i64 %.elt1207, 0
  %106 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236802.0 = select i1 %cond1089, {}* %106, {}* %.elt1205
  %107 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %108 = invoke {}* @cc_safe_fdefinition({}* %107)
          to label %normal-dest287 unwind label %cleanup-lpad

normal-dest287:                                   ; preds = %normal-dest280
  %109 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %110 = invoke {}* @cc_safe_fdefinition({}* %109)
          to label %normal-dest289 unwind label %cleanup-lpad

normal-dest289:                                   ; preds = %normal-dest287
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %112 = invoke {}* @cc_safe_fdefinition({}* %111)
          to label %normal-dest291 unwind label %cleanup-lpad

normal-dest291:                                   ; preds = %normal-dest289
  %113 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 463), align 8
  %ptrtoint292 = ptrtoint {}* %112 to i64
  %entry-point-addr-uint293 = add i64 %ptrtoint292, 7
  %entry-point-addr294 = inttoptr i64 %entry-point-addr-uint293 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point295 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr294, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point295({}* %112, i64 1, {}* %113, {}* null, {}* null, {}* null)
          to label %normal-dest298 unwind label %cleanup-lpad

normal-dest298:                                   ; preds = %normal-dest291
  %.elt1209 = extractvalue { {}*, i64 } %114, 0
  %.elt1211 = extractvalue { {}*, i64 } %114, 1
  %cond1090 = icmp eq i64 %.elt1211, 0
  %115 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236808.0 = select i1 %cond1090, {}* %115, {}* %.elt1209
  %116 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %117 = invoke {}* @cc_safe_fdefinition({}* %116)
          to label %normal-dest305 unwind label %cleanup-lpad

normal-dest305:                                   ; preds = %normal-dest298
  %118 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %119 = invoke {}* @cc_safe_fdefinition({}* %118)
          to label %normal-dest307 unwind label %cleanup-lpad

normal-dest307:                                   ; preds = %normal-dest305
  %120 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest309 unwind label %cleanup-lpad

normal-dest309:                                   ; preds = %normal-dest307
  %122 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 217), align 8
  %ptrtoint310 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint311 = add i64 %ptrtoint310, 7
  %entry-point-addr312 = inttoptr i64 %entry-point-addr-uint311 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point313 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr312, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point313({}* %121, i64 1, {}* %122, {}* null, {}* null, {}* null)
          to label %normal-dest316 unwind label %cleanup-lpad

normal-dest316:                                   ; preds = %normal-dest309
  %.elt1213 = extractvalue { {}*, i64 } %123, 0
  %.elt1215 = extractvalue { {}*, i64 } %123, 1
  %cond1091 = icmp eq i64 %.elt1215, 0
  %124 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236814.0 = select i1 %cond1091, {}* %124, {}* %.elt1213
  %125 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %126 = invoke {}* @cc_safe_fdefinition({}* %125)
          to label %normal-dest323 unwind label %cleanup-lpad

normal-dest323:                                   ; preds = %normal-dest316
  %ptrtoint324 = ptrtoint {}* %126 to i64
  %entry-point-addr-uint325 = add i64 %ptrtoint324, 7
  %entry-point-addr326 = inttoptr i64 %entry-point-addr-uint325 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point327 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr326, align 8
  %127 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point327({}* %126, i64 1, {}* %G236655.0, {}* null, {}* null, {}* null)
          to label %normal-dest330 unwind label %cleanup-lpad

normal-dest330:                                   ; preds = %normal-dest323
  %.elt1217 = extractvalue { {}*, i64 } %127, 0
  %.elt1219 = extractvalue { {}*, i64 } %127, 1
  %cond1092 = icmp eq i64 %.elt1219, 0
  %128 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236815.0 = select i1 %cond1092, {}* %128, {}* %.elt1217
  %129 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %130 = invoke {}* @cc_safe_fdefinition({}* %129)
          to label %normal-dest337 unwind label %cleanup-lpad

normal-dest337:                                   ; preds = %normal-dest330
  %131 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %132 = invoke {}* @cc_safe_fdefinition({}* %131)
          to label %normal-dest339 unwind label %cleanup-lpad

normal-dest339:                                   ; preds = %normal-dest337
  %133 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %134 = invoke {}* @cc_safe_fdefinition({}* %133)
          to label %normal-dest341 unwind label %cleanup-lpad

normal-dest341:                                   ; preds = %normal-dest339
  %135 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 220), align 16
  %ptrtoint342 = ptrtoint {}* %134 to i64
  %entry-point-addr-uint343 = add i64 %ptrtoint342, 7
  %entry-point-addr344 = inttoptr i64 %entry-point-addr-uint343 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point345 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr344, align 8
  %136 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point345({}* %134, i64 1, {}* %135, {}* null, {}* null, {}* null)
          to label %normal-dest348 unwind label %cleanup-lpad

normal-dest348:                                   ; preds = %normal-dest341
  %.elt1221 = extractvalue { {}*, i64 } %136, 0
  %.elt1223 = extractvalue { {}*, i64 } %136, 1
  %cond1093 = icmp eq i64 %.elt1223, 0
  %137 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236821.0 = select i1 %cond1093, {}* %137, {}* %.elt1221
  %138 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %139 = invoke {}* @cc_safe_fdefinition({}* %138)
          to label %normal-dest355 unwind label %cleanup-lpad

normal-dest355:                                   ; preds = %normal-dest348
  %140 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint356 = ptrtoint {}* %139 to i64
  %entry-point-addr-uint357 = add i64 %ptrtoint356, 7
  %entry-point-addr358 = inttoptr i64 %entry-point-addr-uint357 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point359 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr358, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point359({}* %139, i64 1, {}* %140, {}* null, {}* null, {}* null)
          to label %normal-dest362 unwind label %cleanup-lpad

normal-dest362:                                   ; preds = %normal-dest355
  %.elt1225 = extractvalue { {}*, i64 } %141, 0
  %.elt1227 = extractvalue { {}*, i64 } %141, 1
  %cond1094 = icmp eq i64 %.elt1227, 0
  %142 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236822.0 = select i1 %cond1094, {}* %142, {}* %.elt1225
  %ptrtoint368 = ptrtoint {}* %132 to i64
  %entry-point-addr-uint369 = add i64 %ptrtoint368, 7
  %entry-point-addr370 = inttoptr i64 %entry-point-addr-uint369 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point371 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr370, align 8
  %143 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point371({}* %132, i64 3, {}* %G236821.0, {}* %G236822.0, {}* %142, {}* null)
          to label %normal-dest374 unwind label %cleanup-lpad

normal-dest374:                                   ; preds = %normal-dest362
  %.elt1229 = extractvalue { {}*, i64 } %143, 0
  %.elt1231 = extractvalue { {}*, i64 } %143, 1
  %cond1095 = icmp eq i64 %.elt1231, 0
  %144 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236819.0 = select i1 %cond1095, {}* %144, {}* %.elt1229
  %ptrtoint380 = ptrtoint {}* %130 to i64
  %entry-point-addr-uint381 = add i64 %ptrtoint380, 7
  %entry-point-addr382 = inttoptr i64 %entry-point-addr-uint381 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point383 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr382, align 8
  %145 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point383({}* %130, i64 1, {}* %G236819.0, {}* null, {}* null, {}* null)
          to label %normal-dest386 unwind label %cleanup-lpad

normal-dest386:                                   ; preds = %normal-dest374
  %.elt1233 = extractvalue { {}*, i64 } %145, 0
  %.elt1235 = extractvalue { {}*, i64 } %145, 1
  %cond1096 = icmp eq i64 %.elt1235, 0
  %146 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236816.0 = select i1 %cond1096, {}* %146, {}* %.elt1233
  %ptrtoint392 = ptrtoint {}* %119 to i64
  %entry-point-addr-uint393 = add i64 %ptrtoint392, 7
  %entry-point-addr394 = inttoptr i64 %entry-point-addr-uint393 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point395 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr394, align 8
  %147 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point395({}* %119, i64 4, {}* %G236814.0, {}* %G236815.0, {}* %G236816.0, {}* %146)
          to label %normal-dest398 unwind label %cleanup-lpad

normal-dest398:                                   ; preds = %normal-dest386
  %.elt1237 = extractvalue { {}*, i64 } %147, 0
  %.elt1239 = extractvalue { {}*, i64 } %147, 1
  %cond1097 = icmp eq i64 %.elt1239, 0
  %148 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236812.0 = select i1 %cond1097, {}* %148, {}* %.elt1237
  %ptrtoint404 = ptrtoint {}* %117 to i64
  %entry-point-addr-uint405 = add i64 %ptrtoint404, 7
  %entry-point-addr406 = inttoptr i64 %entry-point-addr-uint405 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point407 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr406, align 8
  %149 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point407({}* %117, i64 1, {}* %G236812.0, {}* null, {}* null, {}* null)
          to label %normal-dest410 unwind label %cleanup-lpad

normal-dest410:                                   ; preds = %normal-dest398
  %.elt1241 = extractvalue { {}*, i64 } %149, 0
  %.elt1243 = extractvalue { {}*, i64 } %149, 1
  %cond1098 = icmp eq i64 %.elt1243, 0
  %150 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236809.0 = select i1 %cond1098, {}* %150, {}* %.elt1241
  %ptrtoint416 = ptrtoint {}* %110 to i64
  %entry-point-addr-uint417 = add i64 %ptrtoint416, 7
  %entry-point-addr418 = inttoptr i64 %entry-point-addr-uint417 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point419 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr418, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point419({}* %110, i64 3, {}* %G236808.0, {}* %G236809.0, {}* %150, {}* null)
          to label %normal-dest422 unwind label %cleanup-lpad

normal-dest422:                                   ; preds = %normal-dest410
  %.elt1245 = extractvalue { {}*, i64 } %151, 0
  %.elt1247 = extractvalue { {}*, i64 } %151, 1
  %cond1099 = icmp eq i64 %.elt1247, 0
  %152 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236806.0 = select i1 %cond1099, {}* %152, {}* %.elt1245
  %ptrtoint428 = ptrtoint {}* %108 to i64
  %entry-point-addr-uint429 = add i64 %ptrtoint428, 7
  %entry-point-addr430 = inttoptr i64 %entry-point-addr-uint429 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point431 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr430, align 8
  %153 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point431({}* %108, i64 1, {}* %G236806.0, {}* null, {}* null, {}* null)
          to label %normal-dest434 unwind label %cleanup-lpad

normal-dest434:                                   ; preds = %normal-dest422
  %.elt1249 = extractvalue { {}*, i64 } %153, 0
  %.elt1251 = extractvalue { {}*, i64 } %153, 1
  %cond1100 = icmp eq i64 %.elt1251, 0
  %154 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236803.0 = select i1 %cond1100, {}* %154, {}* %.elt1249
  %ptrtoint440 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint441 = add i64 %ptrtoint440, 7
  %entry-point-addr442 = inttoptr i64 %entry-point-addr-uint441 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point443 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr442, align 8
  %155 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point443({}* %102, i64 3, {}* %G236802.0, {}* %G236803.0, {}* %154, {}* null)
          to label %normal-dest446 unwind label %cleanup-lpad

normal-dest446:                                   ; preds = %normal-dest434
  %.elt1253 = extractvalue { {}*, i64 } %155, 0
  %.elt1255 = extractvalue { {}*, i64 } %155, 1
  %cond1101 = icmp eq i64 %.elt1255, 0
  %156 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236800.0 = select i1 %cond1101, {}* %156, {}* %.elt1253
  %ptrtoint452 = ptrtoint {}* %100 to i64
  %entry-point-addr-uint453 = add i64 %ptrtoint452, 7
  %entry-point-addr454 = inttoptr i64 %entry-point-addr-uint453 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point455 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr454, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point455({}* %100, i64 1, {}* %G236800.0, {}* null, {}* null, {}* null)
          to label %normal-dest458 unwind label %cleanup-lpad

normal-dest458:                                   ; preds = %normal-dest446
  %.elt1257 = extractvalue { {}*, i64 } %157, 0
  %.elt1259 = extractvalue { {}*, i64 } %157, 1
  %cond1102 = icmp eq i64 %.elt1259, 0
  %158 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236685.0 = select i1 %cond1102, {}* %158, {}* %.elt1257
  %159 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %160 = invoke {}* @cc_safe_fdefinition({}* %159)
          to label %normal-dest465 unwind label %cleanup-lpad

normal-dest465:                                   ; preds = %normal-dest458
  %161 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %162 = invoke {}* @cc_safe_fdefinition({}* %161)
          to label %normal-dest467 unwind label %cleanup-lpad

normal-dest467:                                   ; preds = %normal-dest465
  %163 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %164 = invoke {}* @cc_safe_fdefinition({}* %163)
          to label %normal-dest469 unwind label %cleanup-lpad

normal-dest469:                                   ; preds = %normal-dest467
  %165 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 465), align 8
  %ptrtoint470 = ptrtoint {}* %164 to i64
  %entry-point-addr-uint471 = add i64 %ptrtoint470, 7
  %entry-point-addr472 = inttoptr i64 %entry-point-addr-uint471 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point473 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr472, align 8
  %166 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point473({}* %164, i64 1, {}* %165, {}* null, {}* null, {}* null)
          to label %normal-dest476 unwind label %cleanup-lpad

normal-dest476:                                   ; preds = %normal-dest469
  %.elt1261 = extractvalue { {}*, i64 } %166, 0
  %.elt1263 = extractvalue { {}*, i64 } %166, 1
  %cond1103 = icmp eq i64 %.elt1263, 0
  %167 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236691.0 = select i1 %cond1103, {}* %167, {}* %.elt1261
  %168 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %169 = invoke {}* @cc_safe_fdefinition({}* %168)
          to label %normal-dest483 unwind label %cleanup-lpad

normal-dest483:                                   ; preds = %normal-dest476
  %170 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %171 = invoke {}* @cc_safe_fdefinition({}* %170)
          to label %normal-dest485 unwind label %cleanup-lpad

normal-dest485:                                   ; preds = %normal-dest483
  %172 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %173 = invoke {}* @cc_safe_fdefinition({}* %172)
          to label %normal-dest487 unwind label %cleanup-lpad

normal-dest487:                                   ; preds = %normal-dest485
  %174 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  %ptrtoint488 = ptrtoint {}* %173 to i64
  %entry-point-addr-uint489 = add i64 %ptrtoint488, 7
  %entry-point-addr490 = inttoptr i64 %entry-point-addr-uint489 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point491 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr490, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point491({}* %173, i64 1, {}* %174, {}* null, {}* null, {}* null)
          to label %normal-dest494 unwind label %cleanup-lpad

normal-dest494:                                   ; preds = %normal-dest487
  %.elt1265 = extractvalue { {}*, i64 } %175, 0
  %.elt1267 = extractvalue { {}*, i64 } %175, 1
  %cond1104 = icmp eq i64 %.elt1267, 0
  %176 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236742.0 = select i1 %cond1104, {}* %176, {}* %.elt1265
  %177 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %178 = invoke {}* @cc_safe_fdefinition({}* %177)
          to label %normal-dest501 unwind label %cleanup-lpad

normal-dest501:                                   ; preds = %normal-dest494
  %179 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %180 = invoke {}* @cc_safe_fdefinition({}* %179)
          to label %normal-dest503 unwind label %cleanup-lpad

normal-dest503:                                   ; preds = %normal-dest501
  %181 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %182 = invoke {}* @cc_safe_fdefinition({}* %181)
          to label %normal-dest505 unwind label %cleanup-lpad

normal-dest505:                                   ; preds = %normal-dest503
  %183 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %ptrtoint506 = ptrtoint {}* %182 to i64
  %entry-point-addr-uint507 = add i64 %ptrtoint506, 7
  %entry-point-addr508 = inttoptr i64 %entry-point-addr-uint507 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point509 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr508, align 8
  %184 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point509({}* %182, i64 1, {}* %183, {}* null, {}* null, {}* null)
          to label %normal-dest512 unwind label %cleanup-lpad

normal-dest512:                                   ; preds = %normal-dest505
  %.elt1269 = extractvalue { {}*, i64 } %184, 0
  %.elt1271 = extractvalue { {}*, i64 } %184, 1
  %cond1105 = icmp eq i64 %.elt1271, 0
  %185 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236748.0 = select i1 %cond1105, {}* %185, {}* %.elt1269
  %186 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %187 = invoke {}* @cc_safe_fdefinition({}* %186)
          to label %normal-dest519 unwind label %cleanup-lpad

normal-dest519:                                   ; preds = %normal-dest512
  %188 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %189 = invoke {}* @cc_safe_fdefinition({}* %188)
          to label %normal-dest521 unwind label %cleanup-lpad

normal-dest521:                                   ; preds = %normal-dest519
  %190 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %191 = invoke {}* @cc_safe_fdefinition({}* %190)
          to label %normal-dest523 unwind label %cleanup-lpad

normal-dest523:                                   ; preds = %normal-dest521
  %192 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 217), align 8
  %ptrtoint524 = ptrtoint {}* %191 to i64
  %entry-point-addr-uint525 = add i64 %ptrtoint524, 7
  %entry-point-addr526 = inttoptr i64 %entry-point-addr-uint525 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point527 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr526, align 8
  %193 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point527({}* %191, i64 1, {}* %192, {}* null, {}* null, {}* null)
          to label %normal-dest530 unwind label %cleanup-lpad

normal-dest530:                                   ; preds = %normal-dest523
  %.elt1273 = extractvalue { {}*, i64 } %193, 0
  %.elt1275 = extractvalue { {}*, i64 } %193, 1
  %cond1106 = icmp eq i64 %.elt1275, 0
  %194 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236758.0 = select i1 %cond1106, {}* %194, {}* %.elt1273
  %195 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %196 = invoke {}* @cc_safe_fdefinition({}* %195)
          to label %normal-dest537 unwind label %cleanup-lpad

normal-dest537:                                   ; preds = %normal-dest530
  %ptrtoint538 = ptrtoint {}* %196 to i64
  %entry-point-addr-uint539 = add i64 %ptrtoint538, 7
  %entry-point-addr540 = inttoptr i64 %entry-point-addr-uint539 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point541 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr540, align 8
  %197 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point541({}* %196, i64 1, {}* %G236655.0, {}* null, {}* null, {}* null)
          to label %normal-dest544 unwind label %cleanup-lpad

normal-dest544:                                   ; preds = %normal-dest537
  %.elt1277 = extractvalue { {}*, i64 } %197, 0
  %.elt1279 = extractvalue { {}*, i64 } %197, 1
  %cond1107 = icmp eq i64 %.elt1279, 0
  %198 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236759.0 = select i1 %cond1107, {}* %198, {}* %.elt1277
  %199 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %200 = invoke {}* @cc_safe_fdefinition({}* %199)
          to label %normal-dest551 unwind label %cleanup-lpad

normal-dest551:                                   ; preds = %normal-dest544
  %201 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %202 = invoke {}* @cc_safe_fdefinition({}* %201)
          to label %normal-dest553 unwind label %cleanup-lpad

normal-dest553:                                   ; preds = %normal-dest551
  %203 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %204 = invoke {}* @cc_safe_fdefinition({}* %203)
          to label %normal-dest555 unwind label %cleanup-lpad

normal-dest555:                                   ; preds = %normal-dest553
  %205 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 220), align 16
  %ptrtoint556 = ptrtoint {}* %204 to i64
  %entry-point-addr-uint557 = add i64 %ptrtoint556, 7
  %entry-point-addr558 = inttoptr i64 %entry-point-addr-uint557 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point559 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr558, align 8
  %206 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point559({}* %204, i64 1, {}* %205, {}* null, {}* null, {}* null)
          to label %normal-dest562 unwind label %cleanup-lpad

normal-dest562:                                   ; preds = %normal-dest555
  %.elt1281 = extractvalue { {}*, i64 } %206, 0
  %.elt1283 = extractvalue { {}*, i64 } %206, 1
  %cond1108 = icmp eq i64 %.elt1283, 0
  %207 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236765.0 = select i1 %cond1108, {}* %207, {}* %.elt1281
  %208 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %209 = invoke {}* @cc_safe_fdefinition({}* %208)
          to label %normal-dest569 unwind label %cleanup-lpad

normal-dest569:                                   ; preds = %normal-dest562
  %210 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint570 = ptrtoint {}* %209 to i64
  %entry-point-addr-uint571 = add i64 %ptrtoint570, 7
  %entry-point-addr572 = inttoptr i64 %entry-point-addr-uint571 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point573 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr572, align 8
  %211 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point573({}* %209, i64 1, {}* %210, {}* null, {}* null, {}* null)
          to label %normal-dest576 unwind label %cleanup-lpad

normal-dest576:                                   ; preds = %normal-dest569
  %.elt1285 = extractvalue { {}*, i64 } %211, 0
  %.elt1287 = extractvalue { {}*, i64 } %211, 1
  %cond1109 = icmp eq i64 %.elt1287, 0
  %212 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236766.0 = select i1 %cond1109, {}* %212, {}* %.elt1285
  %ptrtoint582 = ptrtoint {}* %202 to i64
  %entry-point-addr-uint583 = add i64 %ptrtoint582, 7
  %entry-point-addr584 = inttoptr i64 %entry-point-addr-uint583 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point585 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr584, align 8
  %213 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point585({}* %202, i64 3, {}* %G236765.0, {}* %G236766.0, {}* %212, {}* null)
          to label %normal-dest588 unwind label %cleanup-lpad

normal-dest588:                                   ; preds = %normal-dest576
  %.elt1289 = extractvalue { {}*, i64 } %213, 0
  %.elt1291 = extractvalue { {}*, i64 } %213, 1
  %cond1110 = icmp eq i64 %.elt1291, 0
  %214 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236763.0 = select i1 %cond1110, {}* %214, {}* %.elt1289
  %ptrtoint594 = ptrtoint {}* %200 to i64
  %entry-point-addr-uint595 = add i64 %ptrtoint594, 7
  %entry-point-addr596 = inttoptr i64 %entry-point-addr-uint595 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point597 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr596, align 8
  %215 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point597({}* %200, i64 1, {}* %G236763.0, {}* null, {}* null, {}* null)
          to label %normal-dest600 unwind label %cleanup-lpad

normal-dest600:                                   ; preds = %normal-dest588
  %.elt1293 = extractvalue { {}*, i64 } %215, 0
  %.elt1295 = extractvalue { {}*, i64 } %215, 1
  %cond1111 = icmp eq i64 %.elt1295, 0
  %216 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236760.0 = select i1 %cond1111, {}* %216, {}* %.elt1293
  %ptrtoint606 = ptrtoint {}* %189 to i64
  %entry-point-addr-uint607 = add i64 %ptrtoint606, 7
  %entry-point-addr608 = inttoptr i64 %entry-point-addr-uint607 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point609 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr608, align 8
  %217 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point609({}* %189, i64 4, {}* %G236758.0, {}* %G236759.0, {}* %G236760.0, {}* %216)
          to label %normal-dest612 unwind label %cleanup-lpad

normal-dest612:                                   ; preds = %normal-dest600
  %.elt1297 = extractvalue { {}*, i64 } %217, 0
  %.elt1299 = extractvalue { {}*, i64 } %217, 1
  %cond1112 = icmp eq i64 %.elt1299, 0
  %218 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236756.0 = select i1 %cond1112, {}* %218, {}* %.elt1297
  %ptrtoint618 = ptrtoint {}* %187 to i64
  %entry-point-addr-uint619 = add i64 %ptrtoint618, 7
  %entry-point-addr620 = inttoptr i64 %entry-point-addr-uint619 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point621 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr620, align 8
  %219 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point621({}* %187, i64 1, {}* %G236756.0, {}* null, {}* null, {}* null)
          to label %normal-dest624 unwind label %cleanup-lpad

normal-dest624:                                   ; preds = %normal-dest612
  %.elt1301 = extractvalue { {}*, i64 } %219, 0
  %.elt1303 = extractvalue { {}*, i64 } %219, 1
  %cond1113 = icmp eq i64 %.elt1303, 0
  %220 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236749.0 = select i1 %cond1113, {}* %220, {}* %.elt1301
  %221 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %222 = invoke {}* @cc_safe_fdefinition({}* %221)
          to label %normal-dest631 unwind label %cleanup-lpad

normal-dest631:                                   ; preds = %normal-dest624
  %ptrtoint632 = ptrtoint {}* %222 to i64
  %entry-point-addr-uint633 = add i64 %ptrtoint632, 7
  %entry-point-addr634 = inttoptr i64 %entry-point-addr-uint633 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point635 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr634, align 8
  %223 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point635({}* %222, i64 1, {}* %G236656.0, {}* null, {}* null, {}* null)
          to label %normal-dest638 unwind label %cleanup-lpad

normal-dest638:                                   ; preds = %normal-dest631
  %.elt1305 = extractvalue { {}*, i64 } %223, 0
  %.elt1307 = extractvalue { {}*, i64 } %223, 1
  %cond1114 = icmp eq i64 %.elt1307, 0
  %224 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236750.0 = select i1 %cond1114, {}* %224, {}* %.elt1305
  %ptrtoint644 = ptrtoint {}* %180 to i64
  %entry-point-addr-uint645 = add i64 %ptrtoint644, 7
  %entry-point-addr646 = inttoptr i64 %entry-point-addr-uint645 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point647 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr646, align 8
  %225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point647({}* %180, i64 4, {}* %G236748.0, {}* %G236749.0, {}* %G236750.0, {}* %224)
          to label %normal-dest650 unwind label %cleanup-lpad

normal-dest650:                                   ; preds = %normal-dest638
  %.elt1309 = extractvalue { {}*, i64 } %225, 0
  %.elt1311 = extractvalue { {}*, i64 } %225, 1
  %cond1115 = icmp eq i64 %.elt1311, 0
  %226 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236746.0 = select i1 %cond1115, {}* %226, {}* %.elt1309
  %ptrtoint656 = ptrtoint {}* %178 to i64
  %entry-point-addr-uint657 = add i64 %ptrtoint656, 7
  %entry-point-addr658 = inttoptr i64 %entry-point-addr-uint657 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point659 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr658, align 8
  %227 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point659({}* %178, i64 1, {}* %G236746.0, {}* null, {}* null, {}* null)
          to label %normal-dest662 unwind label %cleanup-lpad

normal-dest662:                                   ; preds = %normal-dest650
  %.elt1313 = extractvalue { {}*, i64 } %227, 0
  %.elt1315 = extractvalue { {}*, i64 } %227, 1
  %cond1116 = icmp eq i64 %.elt1315, 0
  %228 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236743.0 = select i1 %cond1116, {}* %228, {}* %.elt1313
  %ptrtoint668 = ptrtoint {}* %171 to i64
  %entry-point-addr-uint669 = add i64 %ptrtoint668, 7
  %entry-point-addr670 = inttoptr i64 %entry-point-addr-uint669 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point671 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr670, align 8
  %229 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point671({}* %171, i64 3, {}* %G236742.0, {}* %G236743.0, {}* %228, {}* null)
          to label %normal-dest674 unwind label %cleanup-lpad

normal-dest674:                                   ; preds = %normal-dest662
  %.elt1317 = extractvalue { {}*, i64 } %229, 0
  %.elt1319 = extractvalue { {}*, i64 } %229, 1
  %cond1117 = icmp eq i64 %.elt1319, 0
  %230 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236740.0 = select i1 %cond1117, {}* %230, {}* %.elt1317
  %ptrtoint680 = ptrtoint {}* %169 to i64
  %entry-point-addr-uint681 = add i64 %ptrtoint680, 7
  %entry-point-addr682 = inttoptr i64 %entry-point-addr-uint681 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point683 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr682, align 8
  %231 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point683({}* %169, i64 1, {}* %G236740.0, {}* null, {}* null, {}* null)
          to label %normal-dest686 unwind label %cleanup-lpad

normal-dest686:                                   ; preds = %normal-dest674
  %.elt1321 = extractvalue { {}*, i64 } %231, 0
  %.elt1323 = extractvalue { {}*, i64 } %231, 1
  %cond1118 = icmp eq i64 %.elt1323, 0
  %232 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236692.0 = select i1 %cond1118, {}* %232, {}* %.elt1321
  %233 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %234 = invoke {}* @cc_safe_fdefinition({}* %233)
          to label %normal-dest693 unwind label %cleanup-lpad

normal-dest693:                                   ; preds = %normal-dest686
  %235 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %236 = invoke {}* @cc_safe_fdefinition({}* %235)
          to label %normal-dest695 unwind label %cleanup-lpad

normal-dest695:                                   ; preds = %normal-dest693
  %237 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %238 = invoke {}* @cc_safe_fdefinition({}* %237)
          to label %normal-dest697 unwind label %cleanup-lpad

normal-dest697:                                   ; preds = %normal-dest695
  %239 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 469), align 8
  %ptrtoint698 = ptrtoint {}* %238 to i64
  %entry-point-addr-uint699 = add i64 %ptrtoint698, 7
  %entry-point-addr700 = inttoptr i64 %entry-point-addr-uint699 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point701 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr700, align 8
  %240 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point701({}* %238, i64 1, {}* %239, {}* null, {}* null, {}* null)
          to label %normal-dest704 unwind label %cleanup-lpad

normal-dest704:                                   ; preds = %normal-dest697
  %.elt1325 = extractvalue { {}*, i64 } %240, 0
  %.elt1327 = extractvalue { {}*, i64 } %240, 1
  %cond1119 = icmp eq i64 %.elt1327, 0
  %241 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236698.0 = select i1 %cond1119, {}* %241, {}* %.elt1325
  %242 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %243 = invoke {}* @cc_safe_fdefinition({}* %242)
          to label %normal-dest711 unwind label %cleanup-lpad

normal-dest711:                                   ; preds = %normal-dest704
  %244 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %245 = invoke {}* @cc_safe_fdefinition({}* %244)
          to label %normal-dest713 unwind label %cleanup-lpad

normal-dest713:                                   ; preds = %normal-dest711
  %246 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %247 = invoke {}* @cc_safe_fdefinition({}* %246)
          to label %normal-dest715 unwind label %cleanup-lpad

normal-dest715:                                   ; preds = %normal-dest713
  %248 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %249 = invoke {}* @cc_safe_fdefinition({}* %248)
          to label %normal-dest717 unwind label %cleanup-lpad

normal-dest717:                                   ; preds = %normal-dest715
  %250 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %251 = invoke {}* @cc_safe_fdefinition({}* %250)
          to label %normal-dest719 unwind label %cleanup-lpad

normal-dest719:                                   ; preds = %normal-dest717
  %ptrtoint720 = ptrtoint {}* %251 to i64
  %entry-point-addr-uint721 = add i64 %ptrtoint720, 7
  %entry-point-addr722 = inttoptr i64 %entry-point-addr-uint721 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point723 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr722, align 8
  %252 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point723({}* %251, i64 1, {}* %G236653.0, {}* null, {}* null, {}* null)
          to label %normal-dest726 unwind label %cleanup-lpad

normal-dest726:                                   ; preds = %normal-dest719
  %.elt1329 = extractvalue { {}*, i64 } %252, 0
  %.elt1331 = extractvalue { {}*, i64 } %252, 1
  %cond1120 = icmp eq i64 %.elt1331, 0
  %253 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236710.0 = select i1 %cond1120, {}* %253, {}* %.elt1329
  %254 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %255 = invoke {}* @cc_safe_fdefinition({}* %254)
          to label %normal-dest733 unwind label %cleanup-lpad

normal-dest733:                                   ; preds = %normal-dest726
  %256 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 270), align 16
  %257 = invoke {}* @cc_safe_fdefinition({}* %256)
          to label %normal-dest735 unwind label %cleanup-lpad

normal-dest735:                                   ; preds = %normal-dest733
  %258 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %259 = invoke {}* @cc_safe_fdefinition({}* %258)
          to label %normal-dest737 unwind label %cleanup-lpad

normal-dest737:                                   ; preds = %normal-dest735
  %260 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 82), align 16
  %ptrtoint738 = ptrtoint {}* %259 to i64
  %entry-point-addr-uint739 = add i64 %ptrtoint738, 7
  %entry-point-addr740 = inttoptr i64 %entry-point-addr-uint739 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point741 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr740, align 8
  %261 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point741({}* %259, i64 1, {}* %260, {}* null, {}* null, {}* null)
          to label %normal-dest744 unwind label %cleanup-lpad

normal-dest744:                                   ; preds = %normal-dest737
  %.elt1333 = extractvalue { {}*, i64 } %261, 0
  %.elt1335 = extractvalue { {}*, i64 } %261, 1
  %cond1121 = icmp eq i64 %.elt1335, 0
  %262 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236716.0 = select i1 %cond1121, {}* %262, {}* %.elt1333
  %263 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %264 = invoke {}* @cc_safe_fdefinition({}* %263)
          to label %normal-dest751 unwind label %cleanup-lpad

normal-dest751:                                   ; preds = %normal-dest744
  %ptrtoint752 = ptrtoint {}* %264 to i64
  %entry-point-addr-uint753 = add i64 %ptrtoint752, 7
  %entry-point-addr754 = inttoptr i64 %entry-point-addr-uint753 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point755 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr754, align 8
  %265 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point755({}* %264, i64 1, {}* %G236656.0, {}* null, {}* null, {}* null)
          to label %normal-dest758 unwind label %cleanup-lpad

normal-dest758:                                   ; preds = %normal-dest751
  %.elt1337 = extractvalue { {}*, i64 } %265, 0
  %.elt1339 = extractvalue { {}*, i64 } %265, 1
  %cond1122 = icmp eq i64 %.elt1339, 0
  %266 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236717.0 = select i1 %cond1122, {}* %266, {}* %.elt1337
  %ptrtoint764 = ptrtoint {}* %257 to i64
  %entry-point-addr-uint765 = add i64 %ptrtoint764, 7
  %entry-point-addr766 = inttoptr i64 %entry-point-addr-uint765 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point767 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr766, align 8
  %267 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point767({}* %257, i64 3, {}* %G236716.0, {}* %G236717.0, {}* %266, {}* null)
          to label %normal-dest770 unwind label %cleanup-lpad

normal-dest770:                                   ; preds = %normal-dest758
  %.elt1341 = extractvalue { {}*, i64 } %267, 0
  %.elt1343 = extractvalue { {}*, i64 } %267, 1
  %cond1123 = icmp eq i64 %.elt1343, 0
  %268 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236714.0 = select i1 %cond1123, {}* %268, {}* %.elt1341
  %ptrtoint776 = ptrtoint {}* %255 to i64
  %entry-point-addr-uint777 = add i64 %ptrtoint776, 7
  %entry-point-addr778 = inttoptr i64 %entry-point-addr-uint777 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point779 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr778, align 8
  %269 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point779({}* %255, i64 1, {}* %G236714.0, {}* null, {}* null, {}* null)
          to label %normal-dest782 unwind label %cleanup-lpad

normal-dest782:                                   ; preds = %normal-dest770
  %.elt1345 = extractvalue { {}*, i64 } %269, 0
  %.elt1347 = extractvalue { {}*, i64 } %269, 1
  %cond1124 = icmp eq i64 %.elt1347, 0
  %270 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236711.0 = select i1 %cond1124, {}* %270, {}* %.elt1345
  %ptrtoint788 = ptrtoint {}* %249 to i64
  %entry-point-addr-uint789 = add i64 %ptrtoint788, 7
  %entry-point-addr790 = inttoptr i64 %entry-point-addr-uint789 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point791 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr790, align 8
  %271 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point791({}* %249, i64 3, {}* %G236710.0, {}* %G236711.0, {}* %270, {}* null)
          to label %normal-dest794 unwind label %cleanup-lpad

normal-dest794:                                   ; preds = %normal-dest782
  %.elt1349 = extractvalue { {}*, i64 } %271, 0
  %.elt1351 = extractvalue { {}*, i64 } %271, 1
  %cond1125 = icmp eq i64 %.elt1351, 0
  %272 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236708.0 = select i1 %cond1125, {}* %272, {}* %.elt1349
  %ptrtoint800 = ptrtoint {}* %247 to i64
  %entry-point-addr-uint801 = add i64 %ptrtoint800, 7
  %entry-point-addr802 = inttoptr i64 %entry-point-addr-uint801 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point803 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr802, align 8
  %273 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point803({}* %247, i64 1, {}* %G236708.0, {}* null, {}* null, {}* null)
          to label %normal-dest806 unwind label %cleanup-lpad

normal-dest806:                                   ; preds = %normal-dest794
  %.elt1353 = extractvalue { {}*, i64 } %273, 0
  %.elt1355 = extractvalue { {}*, i64 } %273, 1
  %cond1126 = icmp eq i64 %.elt1355, 0
  %274 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236705.0 = select i1 %cond1126, {}* %274, {}* %.elt1353
  %ptrtoint812 = ptrtoint {}* %245 to i64
  %entry-point-addr-uint813 = add i64 %ptrtoint812, 7
  %entry-point-addr814 = inttoptr i64 %entry-point-addr-uint813 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point815 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr814, align 8
  %275 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point815({}* %245, i64 2, {}* %G236705.0, {}* %274, {}* null, {}* null)
          to label %normal-dest818 unwind label %cleanup-lpad

normal-dest818:                                   ; preds = %normal-dest806
  %.elt1357 = extractvalue { {}*, i64 } %275, 0
  %.elt1359 = extractvalue { {}*, i64 } %275, 1
  %cond1127 = icmp eq i64 %.elt1359, 0
  %276 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236703.0 = select i1 %cond1127, {}* %276, {}* %.elt1357
  %ptrtoint824 = ptrtoint {}* %243 to i64
  %entry-point-addr-uint825 = add i64 %ptrtoint824, 7
  %entry-point-addr826 = inttoptr i64 %entry-point-addr-uint825 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point827 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr826, align 8
  %277 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point827({}* %243, i64 1, {}* %G236703.0, {}* null, {}* null, {}* null)
          to label %normal-dest830 unwind label %cleanup-lpad

normal-dest830:                                   ; preds = %normal-dest818
  %.elt1361 = extractvalue { {}*, i64 } %277, 0
  %.elt1363 = extractvalue { {}*, i64 } %277, 1
  %cond1128 = icmp eq i64 %.elt1363, 0
  %278 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236699.0 = select i1 %cond1128, {}* %278, {}* %.elt1361
  %ptrtoint836 = ptrtoint {}* %236 to i64
  %entry-point-addr-uint837 = add i64 %ptrtoint836, 7
  %entry-point-addr838 = inttoptr i64 %entry-point-addr-uint837 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point839 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr838, align 8
  %279 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point839({}* %236, i64 4, {}* %G236698.0, {}* %G236699.0, {}* %46, {}* %278)
          to label %normal-dest842 unwind label %cleanup-lpad

normal-dest842:                                   ; preds = %normal-dest830
  %.elt1365 = extractvalue { {}*, i64 } %279, 0
  %.elt1367 = extractvalue { {}*, i64 } %279, 1
  %cond1129 = icmp eq i64 %.elt1367, 0
  %280 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236696.0 = select i1 %cond1129, {}* %280, {}* %.elt1365
  %ptrtoint848 = ptrtoint {}* %234 to i64
  %entry-point-addr-uint849 = add i64 %ptrtoint848, 7
  %entry-point-addr850 = inttoptr i64 %entry-point-addr-uint849 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point851 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr850, align 8
  %281 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point851({}* %234, i64 1, {}* %G236696.0, {}* null, {}* null, {}* null)
          to label %normal-dest854 unwind label %cleanup-lpad

normal-dest854:                                   ; preds = %normal-dest842
  %.elt1369 = extractvalue { {}*, i64 } %281, 0
  %.elt1371 = extractvalue { {}*, i64 } %281, 1
  %cond1130 = icmp eq i64 %.elt1371, 0
  %282 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236693.0 = select i1 %cond1130, {}* %282, {}* %.elt1369
  %ptrtoint860 = ptrtoint {}* %162 to i64
  %entry-point-addr-uint861 = add i64 %ptrtoint860, 7
  %entry-point-addr862 = inttoptr i64 %entry-point-addr-uint861 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point863 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr862, align 8
  %283 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point863({}* %162, i64 4, {}* %G236691.0, {}* %G236692.0, {}* %G236693.0, {}* %282)
          to label %normal-dest866 unwind label %cleanup-lpad

normal-dest866:                                   ; preds = %normal-dest854
  %.elt1373 = extractvalue { {}*, i64 } %283, 0
  %.elt1375 = extractvalue { {}*, i64 } %283, 1
  %cond1131 = icmp eq i64 %.elt1375, 0
  %284 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236689.0 = select i1 %cond1131, {}* %284, {}* %.elt1373
  %ptrtoint872 = ptrtoint {}* %160 to i64
  %entry-point-addr-uint873 = add i64 %ptrtoint872, 7
  %entry-point-addr874 = inttoptr i64 %entry-point-addr-uint873 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point875 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr874, align 8
  %285 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point875({}* %160, i64 1, {}* %G236689.0, {}* null, {}* null, {}* null)
          to label %normal-dest878 unwind label %cleanup-lpad

normal-dest878:                                   ; preds = %normal-dest866
  %.elt1377 = extractvalue { {}*, i64 } %285, 0
  %.elt1379 = extractvalue { {}*, i64 } %285, 1
  %cond1132 = icmp eq i64 %.elt1379, 0
  %286 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236686.0 = select i1 %cond1132, {}* %286, {}* %.elt1377
  %ptrtoint884 = ptrtoint {}* %93 to i64
  %entry-point-addr-uint885 = add i64 %ptrtoint884, 7
  %entry-point-addr886 = inttoptr i64 %entry-point-addr-uint885 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point887 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr886, align 8
  %287 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point887({}* %93, i64 4, {}* %G236684.0, {}* %G236685.0, {}* %G236686.0, {}* %286)
          to label %normal-dest890 unwind label %cleanup-lpad

normal-dest890:                                   ; preds = %normal-dest878
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %287

normal-dest941:                                   ; preds = %normal-dest1046
  call void @unreachableError()
  unreachable

normal-dest948:                                   ; preds = %normal-dest952
  call void @unreachableError()
  unreachable

normal-dest950:                                   ; preds = %tag66
  %288 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %289 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %290 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %291 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %ptrtoint1038 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint1039 = add i64 %ptrtoint1038, 7
  %entry-point-addr1040 = inttoptr i64 %entry-point-addr-uint1039 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1041 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1040, align 8
  %292 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1041({}* %50, i64 5, {}* %288, {}* %289, {}* %G236651.0, {}* %290, {}* %291)
          to label %normal-dest1044 unwind label %cleanup-lpad

normal-dest952:                                   ; preds = %tag70
  %293 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %294 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %295 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %296 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %ptrtoint942 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint943 = add i64 %ptrtoint942, 7
  %entry-point-addr944 = inttoptr i64 %entry-point-addr-uint943 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point945 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr944, align 8
  %297 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point945({}* %55, i64 5, {}* %293, {}* %294, {}* %73, {}* %295, {}* %296)
          to label %normal-dest948 unwind label %cleanup-lpad

normal-dest954:                                   ; preds = %tag71
  %298 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %299 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %300 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %301 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint955 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint956 = add i64 %ptrtoint955, 7
  %entry-point-addr957 = inttoptr i64 %entry-point-addr-uint956 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point958 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr957, align 8
  %302 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point958({}* %57, i64 5, {}* %298, {}* %299, {}* %G236651.0, {}* %300, {}* %301)
          to label %normal-dest961 unwind label %cleanup-lpad

normal-dest961:                                   ; preds = %normal-dest954
  %.elt1400 = extractvalue { {}*, i64 } %302, 0
  %.elt1402 = extractvalue { {}*, i64 } %302, 1
  %cond1136 = icmp eq i64 %.elt1402, 0
  %303 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236653.1 = select i1 %cond1136, {}* %303, {}* %.elt1400
  %.val1479.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag50

normal-dest974:                                   ; preds = %tag73
  %304 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %305 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %306 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %307 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint975 = ptrtoint {}* %59 to i64
  %entry-point-addr-uint976 = add i64 %ptrtoint975, 7
  %entry-point-addr977 = inttoptr i64 %entry-point-addr-uint976 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point978 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr977, align 8
  %308 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point978({}* %59, i64 5, {}* %304, {}* %305, {}* %73, {}* %306, {}* %307)
          to label %normal-dest981 unwind label %cleanup-lpad

normal-dest981:                                   ; preds = %normal-dest974
  %.elt1408 = extractvalue { {}*, i64 } %308, 0
  %.elt1410 = extractvalue { {}*, i64 } %308, 1
  %cond1138 = icmp eq i64 %.elt1410, 0
  %309 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G236651.1 = select i1 %cond1138, {}* %309, {}* %.elt1408
  %.val1477.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag58

normal-dest994:                                   ; preds = %tag77
  %ptrtoint995 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint996 = add i64 %ptrtoint995, 7
  %entry-point-addr997 = inttoptr i64 %entry-point-addr-uint996 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point998 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr997, align 8
  %310 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point998({}* %61, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad

normal-dest1024:                                  ; preds = %tag92
  %311 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %312 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %313 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %314 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %ptrtoint174 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint175 = add i64 %ptrtoint174, 7
  %entry-point-addr176 = inttoptr i64 %entry-point-addr-uint175 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point177 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr176, align 8
  %315 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point177({}* %65, i64 5, {}* %311, {}* %312, {}* %farg0, {}* %313, {}* %314)
          to label %normal-dest180 unwind label %cleanup-lpad

normal-dest1044:                                  ; preds = %normal-dest950
  call void @unreachableError()
  unreachable

normal-dest1046:                                  ; preds = %tag100
  %316 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %317 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %318 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %319 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %ptrtoint935 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint936 = add i64 %ptrtoint935, 7
  %entry-point-addr937 = inttoptr i64 %entry-point-addr-uint936 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point938 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr937, align 8
  %320 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point938({}* %70, i64 5, {}* %316, {}* %317, {}* %40, {}* %318, {}* %319)
          to label %normal-dest941 unwind label %cleanup-lpad

normal-dest1062:                                  ; preds = %tag115
  %ptrtoint1063 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint1064 = add i64 %ptrtoint1063, 7
  %entry-point-addr1065 = inttoptr i64 %entry-point-addr-uint1064 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1066 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1065, align 8
  %321 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1066({}* %78, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag44 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^298^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !85 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^298^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G237108.0 = phi {}* [ %18, %header-check-br ], [ %G237108.1, %normal-dest17 ], [ %G237108.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 388), align 16
  %ptrtoint43 = ptrtoint {}* %G237108.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G237108.0, i64 2, {}* %"closure->ND=BERECHNE_DISLIKE_EINER_ZEILE", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 388), align 16
  %"closure->ND=BERECHNE_DISLIKE_EINER_ZEILE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 10008, i64 298, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237108.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 563), align 8
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237108.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 564), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=BERECHNE_DISLIKE_EINER_ZEILE", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 565), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=BERECHNE_DISLIKE_EINER_ZEILE", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1364 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 388), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !86 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  switch i64 %nargs, label %12 [
    i64 0, label %11
    i64 1, label %normal-dest
  ]

; <label>:11:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %11
  unreachable

; <label>:12:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc2091 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc2091:                                       ; preds = %12
  unreachable

tag:                                              ; preds = %tag312
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest359 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag1:                                             ; preds = %tag253
  %15 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest373 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag3:                                             ; preds = %tag133
  br i1 %fixnump-test1229, label %tag172, label %tag36

tag4:                                             ; preds = %tag124
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest1194 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag5:                                             ; preds = %normal-dest1617, %header-check-br593
  %G237547.0.pre = phi {}* [ %.val2156, %header-check-br593 ], [ %G237547.0.pre.pre, %normal-dest1617 ]
  %19 = phi {}* [ %280, %header-check-br593 ], [ %467, %normal-dest1617 ]
  %20 = icmp eq {}* %G237547.0.pre, %19
  br i1 %20, label %tag106, label %tag317

tag8:                                             ; preds = %normal-dest695
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag147

tag9:                                             ; preds = %tag203
  %trunc2175 = trunc i64 %145 to i3
  switch i3 %trunc2175, label %tag145 [
    i3 -2, label %tag32
    i3 1, label %header-check-br1426
  ]

tag10:                                            ; preds = %normal-dest1415
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest410 unwind label %cleanup-lpad.loopexit

tag226.backedge:                                  ; preds = %tag105, %normal-dest1678
  %24 = phi {}* [ %.pre, %tag105 ], [ %482, %normal-dest1678 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %80, %tag105 ], [ %"%DOLIST-VAR.2", %normal-dest1678 ]
  %25 = icmp eq {}* %"%DOLIST-VAR.0.be", %24
  br i1 %25, label %tag230, label %tag25

tag25:                                            ; preds = %tag25.preheader, %tag226.backedge
  %.val2170 = phi {}* [ %24, %tag226.backedge ], [ %304, %tag25.preheader ]
  %DISLIKE.12212 = phi {}* [ %DISLIKE.0, %tag226.backedge ], [ null, %tag25.preheader ]
  %"%DOLIST-VAR.02211" = phi {}* [ %"%DOLIST-VAR.0.be", %tag226.backedge ], [ %"%DOLIST-VAR.1", %tag25.preheader ]
  %26 = ptrtoint {}* %"%DOLIST-VAR.02211" to i64
  %tag-only4661907 = and i64 %26, 7
  %consp-test467 = icmp eq i64 %tag-only4661907, 3
  %.val2169 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237439.0 = select i1 %consp-test467, {}* %.val2169, {}* %.val2170
  %27 = icmp eq {}* %G237439.0, %.val2170
  br i1 %27, label %tag37, label %tag232

tag29:                                            ; preds = %header-check-br1642, %tag132, %header-check-br1322, %tag120, %tag58
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest469 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag30:                                            ; preds = %tag287
  %30 = icmp sgt {}* %DAMENINDEX-237065.0, inttoptr (i64 -1 to {}*)
  %.2146 = select i1 %30, {}* %.val2228, {}* %257
  br label %tag133

tag32:                                            ; preds = %tag9
  %31 = ptrtoint {}* %y724.0 to i64
  %single-float-tag-only487 = and i64 %31, 7
  %32 = icmp eq i64 %single-float-tag-only487, 6
  br i1 %32, label %tag256, label %tag145

tag33:                                            ; preds = %tag58
  %33 = icmp slt {}* %X591.0, %"%DOTIMES-VAR691.0"
  br i1 %33, label %tag261, label %tag217

tag34:                                            ; preds = %tag245
  %34 = load {}*, {}** %72, align 8
  %.val2152.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag153

tag36:                                            ; preds = %tag3
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest1700 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag37:                                            ; preds = %tag25
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest498 unwind label %cleanup-lpad.loopexit

tag40:                                            ; preds = %tag147
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest519 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag41:                                            ; preds = %normal-dest1224, %normal-dest1122, %normal-dest983, %normal-dest932, %tag242, %normal-dest431, %normal-dest1415
  %DISLIKE.0 = phi {}* [ %DISLIKE.12212, %normal-dest1415 ], [ %DISLIKE.12212, %normal-dest431 ], [ %173, %tag242 ], [ %DISLIKE.2, %normal-dest932 ], [ %348, %normal-dest983 ], [ %DISLIKE.3, %normal-dest1122 ], [ %398, %normal-dest1224 ]
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest539 unwind label %cleanup-lpad.loopexit

tag49:                                            ; preds = %normal-dest1095, %normal-dest897, %normal-dest704, %tag325
  %43 = phi {}* [ %107, %tag325 ], [ %315, %normal-dest704 ], [ %339, %normal-dest897 ], [ %371, %normal-dest1095 ]
  %x578.0 = phi {}* [ %234, %tag325 ], [ %x578.1, %normal-dest704 ], [ %x578.2, %normal-dest897 ], [ %x578.3, %normal-dest1095 ]
  %44 = icmp eq {}* %x578.0, %43
  %.val2167 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237453.0 = select i1 %44, {}* %.val2167, {}* %43
  %45 = icmp eq {}* %G237453.0, %43
  br i1 %45, label %tag230, label %tag59

tag50:                                            ; preds = %tag239
  %46 = ptrtoint {}* %y1039.0 to i64
  %fixnum-tag-only5851991 = and i64 %46, 3
  %fixnump-test586 = icmp eq i64 %fixnum-tag-only5851991, 0
  br i1 %fixnump-test586, label %tag242, label %tag178

tag52:                                            ; preds = %normal-dest526
  %test596 = icmp eq i64 %tag-only5361863, 1
  br i1 %test596, label %header-check-br593, label %tag106

tag54:                                            ; preds = %normal-dest733
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag253

tag58:                                            ; preds = %tag97
  br i1 %fixnump-test619, label %tag33, label %tag29

tag59:                                            ; preds = %tag49
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 82), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest621 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag62:                                            ; preds = %normal-dest1129
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag253

tag63:                                            ; preds = %normal-dest1457
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 556), align 16
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest678 unwind label %cleanup-lpad.loopexit

tag65:                                            ; preds = %tag96, %normal-dest1527, %tag166, %tag250
  %"%DOTIMES-VAR691.0" = phi {}* [ %180, %tag250 ], [ null, %tag166 ], [ %"%DOTIMES-VAR691.1", %normal-dest1527 ], [ %LENGTH494.0.ph, %tag96 ]
  %53 = ptrtoint {}* %"%DOTIMES-VAR691.0" to i64
  %fixnum-tag-only6182055 = and i64 %53, 3
  %fixnump-test619 = icmp eq i64 %fixnum-tag-only6182055, 0
  %single-float-tag-only947 = and i64 %53, 7
  %54 = icmp eq i64 %single-float-tag-only947, 6
  %test1325 = icmp ne i64 %single-float-tag-only947, 1
  %irc-bit-cast1326 = bitcast {}* %"%DOTIMES-VAR691.0" to i8*
  %gep1327 = getelementptr inbounds i8, i8* %irc-bit-cast1326, i64 -9
  %irc-bit-cast1328 = bitcast i8* %gep1327 to i64*
  br label %tag97

tag68:                                            ; preds = %tag120
  %55 = invoke float @from_object_float({}* %X591.0)
          to label %normal-dest694 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag69:                                            ; preds = %normal-dest380, %tag258
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest697 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag71:                                            ; preds = %header-check-br788, %header-check-br788, %header-check-br788, %header-check-br1481, %tag332
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 558), align 16
  %59 = invoke {}* @cc_safe_fdefinition({}* %58)
          to label %normal-dest715 unwind label %cleanup-lpad.loopexit

tag72:                                            ; preds = %tag117
  %60 = invoke float @from_object_float({}* %DAMENINDEX-237065.0)
          to label %normal-dest731 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag74:                                            ; preds = %normal-dest1597, %normal-dest1543, %header-check-br560
  %G237202.0 = phi {}* [ %288, %header-check-br560 ], [ %G237202.1, %normal-dest1543 ], [ %G237202.2, %normal-dest1597 ]
  %ptrtoint735 = ptrtoint {}* %G237202.0 to i64
  %entry-point-addr-uint736 = add i64 %ptrtoint735, 7
  %entry-point-addr737 = inttoptr i64 %entry-point-addr-uint736 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point738 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr737, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point738({}* %G237202.0, i64 3, {}* %DISLIKE.0, {}* %.in2068, {}* %G237087.0, {}* null)
          to label %normal-dest741 unwind label %cleanup-lpad.loopexit

tag75:                                            ; preds = %tag121
  %62 = icmp eq {}* %G2095854.0, %.val2163
  %G237555.0 = select i1 %62, {}* %.val2160, {}* %.val2163
  %63 = icmp eq {}* %G237555.0, %.val2163
  br i1 %63, label %tag241, label %tag235

tag77:                                            ; preds = %tag169
  %64 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest754 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag79:                                            ; preds = %normal-dest1353, %tag79.outer
  br i1 %consp-test770, label %tag280, label %tag169

tag81:                                            ; preds = %tag202, %normal-dest1692, %normal-dest1508, %tag279, %tag162
  %ANZAHL_STOERUNGEN.0 = phi {}* [ %ANZAHL_STOERUNGEN.2, %tag162 ], [ %201, %tag279 ], [ %ANZAHL_STOERUNGEN.6, %normal-dest1508 ], [ %ANZAHL_STOERUNGEN.7, %normal-dest1692 ], [ %ANZAHL_STOERUNGEN.2, %tag202 ]
  %66 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 433), align 8
  %67 = invoke {}* @cc_safe_fdefinition({}* %66)
          to label %normal-dest775 unwind label %cleanup-lpad.loopexit

tag82:                                            ; preds = %tag253
  %68 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %69 = invoke {}* @cc_safe_fdefinition({}* %68)
          to label %normal-dest796 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag245.outer:                                     ; preds = %tag245.outer.backedge, %tag245.outer.preheader
  %LENGTH494.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag245.outer.preheader ], [ %LENGTH494.0.ph.be, %tag245.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in2068, %tag245.outer.preheader ], [ %G2095854489.0, %tag245.outer.backedge ]
  %70 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only13821822 = and i64 %70, 7
  %consp-test1383 = icmp eq i64 %tag-only13821822, 3
  %71 = add i64 %70, 5
  %72 = inttoptr i64 %71 to {}**
  br label %tag245

tag94:                                            ; preds = %header-check-br438
  %ptrtoint841 = ptrtoint {}* %y1039.0 to i64
  %tag-only842 = and i64 %ptrtoint841, 7
  %test843 = icmp eq i64 %tag-only842, 1
  br i1 %test843, label %header-check-br840, label %tag178

tag96:                                            ; preds = %tag153
  %73 = icmp eq {}* %G2095854489.0, %.val2154
  %G237695.0 = select i1 %73, {}* %.val2151, {}* %.val2154
  %74 = icmp eq {}* %G237695.0, %.val2154
  br i1 %74, label %tag113, label %tag65

tag97:                                            ; preds = %tag97.backedge, %tag65
  %X591.0 = phi {}* [ null, %tag65 ], [ %X591.0.be, %tag97.backedge ]
  %75 = ptrtoint {}* %X591.0 to i64
  %fixnum-tag-only8501833 = and i64 %75, 3
  %fixnump-test851 = icmp eq i64 %fixnum-tag-only8501833, 0
  br i1 %fixnump-test851, label %tag58, label %tag132

tag98:                                            ; preds = %normal-dest1024, %header-check-br1389
  %G237687.0.pre = phi {}* [ %.val, %header-check-br1389 ], [ %G237687.0.pre.pre, %normal-dest1024 ]
  %76 = phi {}* [ %250, %header-check-br1389 ], [ %359, %normal-dest1024 ]
  %77 = icmp eq {}* %G237687.0.pre, %76
  br i1 %77, label %tag166, label %tag250

tag105:                                           ; preds = %normal-dest741
  %78 = add i64 %26, 5
  %79 = inttoptr i64 %78 to {}**
  %80 = load {}*, {}** %79, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag226.backedge

tag106:                                           ; preds = %normal-dest1617, %tag52, %header-check-br1045, %tag5
  %.val2181 = phi {}* [ %G237547.0.pre, %tag5 ], [ %.val2156, %tag52 ], [ %.val2156, %header-check-br1045 ], [ %G237547.0.pre.pre, %normal-dest1617 ]
  %.val21822230 = phi {}* [ %G237547.0.pre, %tag5 ], [ %280, %tag52 ], [ %280, %header-check-br1045 ], [ %467, %normal-dest1617 ]
  %81 = icmp eq {}* %.in2050, %.val21822230
  %G237543.0 = select i1 %81, {}* %.val2181, {}* %.val21822230
  %82 = icmp eq {}* %G237543.0, %.val21822230
  br i1 %82, label %tag207, label %tag235

tag108:                                           ; preds = %tag202
  %83 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 556), align 16
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest873 unwind label %cleanup-lpad.loopexit

tag110:                                           ; preds = %tag133, %tag151
  %85 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest890 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag113:                                           ; preds = %tag96
  %87 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest911 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag116:                                           ; preds = %tag242
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest924 unwind label %cleanup-lpad.loopexit

tag117:                                           ; preds = %tag142
  br i1 %168, label %tag72, label %tag319

tag119:                                           ; preds = %normal-dest782
  %91 = icmp eq i64 %tag-only790, 6
  br i1 %91, label %tag277, label %tag154

tag120:                                           ; preds = %tag132
  br i1 %54, label %tag68, label %tag29

tag121:                                           ; preds = %tag169, %normal-dest762, %tag280
  %.val2163 = phi {}* [ %.val2161.pre, %tag280 ], [ %325, %normal-dest762 ], [ %120, %tag169 ]
  %G2095854.0 = phi {}* [ %202, %tag280 ], [ %G2095854.1, %normal-dest762 ], [ %120, %tag169 ]
  %92 = ptrtoint {}* %G2095854.0 to i64
  %tag-only9481865 = and i64 %92, 7
  %consp-test949 = icmp eq i64 %tag-only9481865, 3
  %.val2160 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237584.0 = select i1 %consp-test949, {}* %.val2160, {}* %.val2163
  %93 = icmp eq {}* %G237584.0, %.val2163
  br i1 %93, label %tag75, label %tag124

tag124:                                           ; preds = %tag121
  %94 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only9661866 = and i64 %94, 3
  %fixnump-test967 = icmp eq i64 %fixnum-tag-only9661866, 0
  br i1 %fixnump-test967, label %tag219, label %tag4

tag129:                                           ; preds = %header-check-br840
  %95 = invoke double @from_object_double({}* nonnull %DISLIKE.12212)
          to label %normal-dest982 unwind label %cleanup-lpad.loopexit

tag132:                                           ; preds = %tag97
  %trunc = trunc i64 %75 to i3
  switch i3 %trunc, label %tag29 [
    i3 -2, label %tag120
    i3 1, label %header-check-br1642
  ]

tag133:                                           ; preds = %tag30, %normal-dest1152
  %96 = phi {}* [ %383, %normal-dest1152 ], [ %257, %tag30 ]
  %G237504.0 = phi {}* [ %G237504.1, %normal-dest1152 ], [ %.2146, %tag30 ]
  %97 = icmp eq {}* %G237504.0, %96
  br i1 %97, label %tag110, label %tag3

tag138:                                           ; preds = %tag230
  %98 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest997 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag140:                                           ; preds = %header-check-br1322
  %100 = invoke double @from_object_double({}* nonnull %X591.0)
          to label %normal-dest1010 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag142:                                           ; preds = %tag196
  %trunc2164 = trunc i64 %138 to i3
  switch i3 %trunc2164, label %tag319 [
    i3 -2, label %tag117
    i3 1, label %header-check-br1174
  ]

tag143:                                           ; preds = %header-check-br1481, %tag268
  %101 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest1015 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag145:                                           ; preds = %tag9, %tag203, %header-check-br1426, %header-check-br1333, %tag236, %tag32
  %103 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 560), align 16
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest1031 unwind label %cleanup-lpad.loopexit

tag147:                                           ; preds = %normal-dest478, %tag261, %tag231, %tag224, %tag217, %tag214, %tag8
  %G237611.0 = phi {}* [ %193, %tag261 ], [ %155, %tag217 ], [ %21, %tag8 ], [ %159, %tag224 ], [ %153, %tag214 ], [ %162, %tag231 ], [ %G237611.1, %normal-dest478 ]
  %105 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %106 = icmp eq {}* %G237611.0, %105
  br i1 %106, label %tag40, label %tag266

tag151:                                           ; preds = %tag172, %normal-dest1707
  %107 = phi {}* [ %486, %normal-dest1707 ], [ %96, %tag172 ]
  %G237481.0 = phi {}* [ %G237481.1, %normal-dest1707 ], [ %.2147, %tag172 ]
  %108 = icmp eq {}* %G237481.0, %107
  br i1 %108, label %tag110, label %tag325

tag153:                                           ; preds = %tag295, %normal-dest1636, %tag34
  %.val2154 = phi {}* [ %.val2152.pre, %tag34 ], [ %474, %normal-dest1636 ], [ %215, %tag295 ]
  %G2095854489.0 = phi {}* [ %34, %tag34 ], [ %G2095854489.1, %normal-dest1636 ], [ %215, %tag295 ]
  %109 = ptrtoint {}* %G2095854489.0 to i64
  %tag-only10601823 = and i64 %109, 7
  %consp-test1061 = icmp eq i64 %tag-only10601823, 3
  %.val2151 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237724.0 = select i1 %consp-test1061, {}* %.val2151, {}* %.val2154
  %110 = icmp eq {}* %G237724.0, %.val2154
  br i1 %110, label %tag96, label %tag272

tag154:                                           ; preds = %header-check-br788, %tag119
  %fixnum-tag-only10621950 = and i64 %ptrtoint789, 3
  %fixnump-test1063 = icmp eq i64 %fixnum-tag-only10621950, 0
  br i1 %fixnump-test1063, label %tag332, label %tag268

tag160:                                           ; preds = %normal-dest741
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %112 = icmp eq {}* %"%DOLIST-VAR.02211", %111
  %.val2177 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237195.0 = select i1 %112, {}* %.val2177, {}* %111
  %113 = icmp eq {}* %G237195.0, %111
  br i1 %113, label %tag314, label %tag230

tag162:                                           ; preds = %normal-dest873
  %.elt1938 = extractvalue { {}*, i64 } %336, 0
  %.elt1940 = extractvalue { {}*, i64 } %336, 1
  %cond1790 = icmp eq i64 %.elt1940, 0
  %114 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237321.1 = select i1 %cond1790, {}* %114, {}* %.elt1938
  %115 = icmp eq {}* %G237321.1, %114
  br i1 %115, label %tag81, label %tag249

tag165:                                           ; preds = %tag216
  %116 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %117 = invoke {}* @cc_safe_fdefinition({}* %116)
          to label %normal-dest1088 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag166:                                           ; preds = %normal-dest1024, %tag252, %header-check-br1158, %tag98
  %.val2185 = phi {}* [ %G237687.0.pre, %tag98 ], [ %.val, %tag252 ], [ %.val, %header-check-br1158 ], [ %G237687.0.pre.pre, %normal-dest1024 ]
  %.val21862231 = phi {}* [ %G237687.0.pre, %tag98 ], [ %250, %tag252 ], [ %250, %header-check-br1158 ], [ %359, %normal-dest1024 ]
  %118 = icmp eq {}* %.in2068, %.val21862231
  %G237683.0 = select i1 %118, {}* %.val2185, {}* %.val21862231
  %119 = icmp eq {}* %G237683.0, %.val21862231
  br i1 %119, label %tag278, label %tag65

tag169:                                           ; preds = %tag79
  %120 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %121 = icmp eq {}* %SEQUENCE533.0.ph, %120
  %.val2158 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237596.0 = select i1 %121, {}* %.val2158, {}* %120
  %122 = icmp eq {}* %G237596.0, %120
  br i1 %122, label %tag77, label %tag121

tag170:                                           ; preds = %normal-dest1129
  %123 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag253

tag172:                                           ; preds = %tag3
  %124 = icmp sgt i64 %"tag fixnum1567", %138
  %125 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.2147 = select i1 %124, {}* %125, {}* %96
  br label %tag151

tag178:                                           ; preds = %tag199, %tag251, %header-check-br840, %tag94, %tag50, %header-check-br438
  %126 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %127 = invoke {}* @cc_safe_fdefinition({}* %126)
          to label %normal-dest1115 unwind label %cleanup-lpad.loopexit

tag179:                                           ; preds = %header-check-br1181
  %128 = invoke double @from_object_double({}* nonnull %DAMENINDEX-237065.0)
          to label %normal-dest1128 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag180:                                           ; preds = %normal-dest1471, %header-check-br1398
  %129 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %130 = invoke {}* @cc_safe_fdefinition({}* %129)
          to label %normal-dest1131 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag182:                                           ; preds = %tag287
  %131 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %132 = invoke {}* @cc_safe_fdefinition({}* %131)
          to label %normal-dest1145 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag187:                                           ; preds = %header-check-br1333
  %133 = invoke double @from_object_double({}* nonnull %ANZAHL_STOERUNGEN.0)
          to label %normal-dest1188 unwind label %cleanup-lpad.loopexit

tag191:                                           ; preds = %normal-dest1299
  %134 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %75, i64 4)
  %result1221 = extractvalue { i64, i1 } %134, 0
  %overflow1222 = extractvalue { i64, i1 } %134, 1
  %135 = inttoptr i64 %result1221 to {}*
  br i1 %overflow1222, label %tag283, label %tag97.backedge

tag97.backedge:                                   ; preds = %tag191, %normal-dest1278, %normal-dest1558
  %X591.0.be = phi {}* [ %X591.2, %normal-dest1558 ], [ %X591.1, %normal-dest1278 ], [ %135, %tag191 ]
  br label %tag97

tag193:                                           ; preds = %tag251
  %136 = invoke float @from_object_float({}* %DISLIKE.12212)
          to label %normal-dest1223 unwind label %cleanup-lpad.loopexit

tag196:                                           ; preds = %tag196.backedge, %tag235
  %137 = phi {}* [ %166, %tag235 ], [ %.be, %tag196.backedge ]
  %DAMENINDEX-237065.0 = phi {}* [ null, %tag235 ], [ %DAMENINDEX-237065.0.be, %tag196.backedge ]
  %138 = ptrtoint {}* %DAMENINDEX-237065.0 to i64
  %fixnum-tag-only12281875 = and i64 %138, 3
  %fixnump-test1229 = icmp eq i64 %fixnum-tag-only12281875, 0
  br i1 %fixnump-test1229, label %tag275, label %tag142

tag199:                                           ; preds = %tag239
  %trunc2176 = trunc i64 %169 to i3
  switch i3 %trunc2176, label %tag178 [
    i3 -2, label %tag251
    i3 1, label %header-check-br438
  ]

tag202:                                           ; preds = %normal-dest1457, %normal-dest685
  %139 = phi {}* [ %307, %normal-dest685 ], [ %DAME1237076.0, %normal-dest1457 ]
  %G237355.0 = phi {}* [ %G237355.1, %normal-dest685 ], [ %DAME1237076.0, %normal-dest1457 ]
  %140 = icmp eq {}* %G237355.0, %139
  %141 = ptrtoint {}* %.2089 to i64
  %142 = add nuw nsw i64 %141, 4
  %143 = inttoptr i64 %142 to {}*
  %ANZAHL_STOERUNGEN.2 = select i1 %140, {}* %.2089, {}* %143
  %144 = icmp eq {}* %DAME2237077.0, %139
  br i1 %144, label %tag81, label %tag108

tag203:                                           ; preds = %normal-dest1517, %normal-dest723
  %y724.0 = phi {}* [ %y724.1, %normal-dest723 ], [ %450, %normal-dest1517 ]
  %145 = ptrtoint {}* %ANZAHL_STOERUNGEN.0 to i64
  %fixnum-tag-only12421960 = and i64 %145, 3
  %fixnump-test1243 = icmp eq i64 %fixnum-tag-only12421960, 0
  br i1 %fixnump-test1243, label %tag145, label %tag9

tag79.outer:                                      ; preds = %tag79.outer.backedge, %tag79.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag79.outer.preheader ], [ %LENGTH.0.ph.be, %tag79.outer.backedge ]
  %SEQUENCE533.0.ph = phi {}* [ %.in2050, %tag79.outer.preheader ], [ %G2095854.0, %tag79.outer.backedge ]
  %146 = ptrtoint {}* %SEQUENCE533.0.ph to i64
  %tag-only7691864 = and i64 %146, 7
  %consp-test770 = icmp eq i64 %tag-only7691864, 3
  %147 = add i64 %146, 5
  %148 = inttoptr i64 %147 to {}**
  br label %tag79

tag206:                                           ; preds = %normal-dest1299
  %149 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %150 = invoke {}* @cc_safe_fdefinition({}* %149)
          to label %normal-dest1271 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag207:                                           ; preds = %tag106
  %151 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %152 = invoke {}* @cc_safe_fdefinition({}* %151)
          to label %normal-dest1247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag214:                                           ; preds = %normal-dest1011
  %153 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag147

tag216:                                           ; preds = %tag258
  %G237528.0 = select i1 %fixnump-test1229, {}* %.val2228, {}* %257
  %154 = icmp eq {}* %G237528.0, %257
  br i1 %154, label %tag165, label %tag287

tag217:                                           ; preds = %tag33
  %155 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag147

tag219:                                           ; preds = %tag124
  %156 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %94, i64 4)
  %result887 = extractvalue { i64, i1 } %156, 0
  %overflow888 = extractvalue { i64, i1 } %156, 1
  %157 = inttoptr i64 %result887 to {}*
  br i1 %overflow888, label %tag330, label %tag79.outer.backedge

tag79.outer.backedge:                             ; preds = %tag219, %normal-dest1754, %normal-dest1201
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.1, %normal-dest1201 ], [ %LENGTH.2, %normal-dest1754 ], [ %157, %tag219 ]
  br label %tag79.outer

tag222:                                           ; preds = %header-check-br1472, %normal-dest1138, %normal-dest958
  %G237660.0 = phi {}* [ %G237660.1, %normal-dest958 ], [ %G237660.2, %normal-dest1138 ], [ %195, %header-check-br1472 ]
  %ptrtoint1293 = ptrtoint {}* %G237660.0 to i64
  %entry-point-addr-uint1294 = add i64 %ptrtoint1293, 7
  %entry-point-addr1295 = inttoptr i64 %entry-point-addr-uint1294 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1296 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1295, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1296({}* %G237660.0, i64 3, {}* %105, {}* %.in2068, {}* %X591.0, {}* null)
          to label %normal-dest1299 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag224:                                           ; preds = %normal-dest695
  %159 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag147

tag225:                                           ; preds = %normal-dest733
  %160 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag253

tag230:                                           ; preds = %tag226.backedge, %tag160, %normal-dest656, %tag49
  %161 = phi {}* [ %304, %normal-dest656 ], [ %43, %tag49 ], [ %24, %tag226.backedge ], [ %111, %tag160 ]
  br i1 %fixnump-test1229, label %tag312, label %tag138

tag231:                                           ; preds = %normal-dest1011
  %162 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag147

tag232:                                           ; preds = %tag25
  %163 = add i64 %26, -3
  %164 = inttoptr i64 %163 to {}**
  %165 = load {}*, {}** %164, align 8
  br label %tag255

tag235:                                           ; preds = %tag75, %normal-dest1254, %tag106, %tag317
  %166 = phi {}* [ %19, %tag317 ], [ %.val21822230, %tag106 ], [ %404, %normal-dest1254 ], [ %.val2163, %tag75 ]
  %"%DOTIMES-VAR.0" = phi {}* [ %229, %tag317 ], [ null, %tag106 ], [ %"%DOTIMES-VAR.1", %normal-dest1254 ], [ %LENGTH.0.ph, %tag75 ]
  %167 = ptrtoint {}* %"%DOTIMES-VAR.0" to i64
  %fixnum-tag-only15142037 = and i64 %167, 3
  %fixnump-test1515 = icmp eq i64 %fixnum-tag-only15142037, 0
  %gep1448 = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  %single-float-tag-only938 = and i64 %167, 7
  %168 = icmp eq i64 %single-float-tag-only938, 6
  %test1184 = icmp ne i64 %single-float-tag-only938, 1
  %irc-bit-cast1185 = bitcast {}* %"%DOTIMES-VAR.0" to i8*
  %gep1186 = getelementptr inbounds i8, i8* %irc-bit-cast1185, i64 -9
  %irc-bit-cast1187 = bitcast i8* %gep1186 to i64*
  br label %tag196

tag236:                                           ; preds = %header-check-br1426
  %ptrtoint1334 = ptrtoint {}* %y724.0 to i64
  %tag-only1335 = and i64 %ptrtoint1334, 7
  %test1336 = icmp eq i64 %tag-only1335, 1
  br i1 %test1336, label %header-check-br1333, label %tag145

tag239:                                           ; preds = %normal-dest1424, %normal-dest1189, %normal-dest1038
  %y1039.0 = phi {}* [ %y1039.1, %normal-dest1038 ], [ %393, %normal-dest1189 ], [ %427, %normal-dest1424 ]
  %169 = ptrtoint {}* %DISLIKE.12212 to i64
  %fixnum-tag-only13501965 = and i64 %169, 3
  %fixnump-test1351 = icmp eq i64 %fixnum-tag-only13501965, 0
  br i1 %fixnump-test1351, label %tag50, label %tag199

tag241:                                           ; preds = %tag75
  %170 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %171 = invoke {}* @cc_safe_fdefinition({}* %170)
          to label %normal-dest1353 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag242:                                           ; preds = %tag50
  %172 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %169, i64 %46)
  %result1365 = extractvalue { i64, i1 } %172, 0
  %overflow1366 = extractvalue { i64, i1 } %172, 1
  %173 = inttoptr i64 %result1365 to {}*
  br i1 %overflow1366, label %tag116, label %tag41

tag244:                                           ; preds = %tag291
  %174 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %175 = invoke {}* @cc_safe_fdefinition({}* %174)
          to label %normal-dest1368 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag245:                                           ; preds = %normal-dest911, %tag245.outer
  br i1 %consp-test1383, label %tag34, label %tag295

tag249:                                           ; preds = %tag162
  %176 = ptrtoint {}* %ANZAHL_STOERUNGEN.2 to i64
  %fixnum-tag-only13861941 = and i64 %176, 3
  %fixnump-test1387 = icmp eq i64 %fixnum-tag-only13861941, 0
  br i1 %fixnump-test1387, label %tag279, label %tag321

tag250:                                           ; preds = %tag98
  %177 = add i64 %251, 7
  %178 = inttoptr i64 %177 to i64*
  %179 = load i64, i64* %178, align 8
  %"tag fixnum" = shl nuw i64 %179, 2
  %180 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag65

tag251:                                           ; preds = %tag199
  %181 = ptrtoint {}* %y1039.0 to i64
  %single-float-tag-only1388 = and i64 %181, 7
  %182 = icmp eq i64 %single-float-tag-only1388, 6
  br i1 %182, label %tag193, label %tag178

tag252:                                           ; preds = %normal-dest352
  %test1392 = icmp eq i64 %tag-only1821, 1
  br i1 %test1392, label %header-check-br1389, label %tag166

tag253:                                           ; preds = %tag333, %normal-dest1721, %tag225, %tag170, %tag62, %tag54
  %G237134.0 = phi {}* [ %47, %tag54 ], [ %160, %tag225 ], [ %123, %tag170 ], [ %50, %tag62 ], [ %G237134.1, %normal-dest1721 ], [ %., %tag333 ]
  %183 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %184 = icmp eq {}* %G237134.0, %183
  br i1 %184, label %tag82, label %tag1

tag255:                                           ; preds = %normal-dest505, %tag232
  %FEINDZEILE.0 = phi {}* [ %165, %tag232 ], [ %FEINDZEILE.1, %normal-dest505 ]
  %185 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %186 = invoke {}* @cc_safe_fdefinition({}* %185)
          to label %normal-dest1408 unwind label %cleanup-lpad.loopexit

tag256:                                           ; preds = %tag32
  %187 = invoke float @from_object_float({}* %ANZAHL_STOERUNGEN.0)
          to label %normal-dest1423 unwind label %cleanup-lpad.loopexit

tag258:                                           ; preds = %normal-dest380
  %irc-bit-cast388 = bitcast {}* %.in to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast388, i64 -9
  %irc-bit-cast389 = bitcast i8* %gep to i64*
  %188 = load i64, i64* %irc-bit-cast389, align 8
  %189 = icmp eq i64 %188, 1137
  %.val2228 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237531.0.pre = select i1 %189, {}* %.val2228, {}* %257
  %190 = icmp eq {}* %G237531.0.pre, %257
  br i1 %190, label %tag69, label %tag216

tag260:                                           ; preds = %normal-dest431
  %191 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 554), align 16
  %192 = invoke {}* @cc_safe_fdefinition({}* %191)
          to label %normal-dest1434 unwind label %cleanup-lpad.loopexit

tag261:                                           ; preds = %tag33
  %193 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag147

tag266:                                           ; preds = %tag147
  %194 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %195 = invoke {}* @cc_safe_setfdefinition({}* %194)
          to label %normal-dest1471 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag268:                                           ; preds = %tag154
  br i1 %test791, label %header-check-br1481, label %tag143

tag272:                                           ; preds = %tag153
  %196 = ptrtoint {}* %LENGTH494.0.ph to i64
  %fixnum-tag-only14981824 = and i64 %196, 3
  %fixnump-test1499 = icmp eq i64 %fixnum-tag-only14981824, 0
  br i1 %fixnump-test1499, label %tag291, label %tag289

tag275:                                           ; preds = %tag196
  br i1 %fixnump-test1515, label %tag333, label %tag319

tag277:                                           ; preds = %tag119, %tag332
  %197 = invoke float @from_object_float({}* inttoptr (i64 8522825734 to {}*))
          to label %normal-dest1516 unwind label %cleanup-lpad.loopexit

tag278:                                           ; preds = %tag166
  %198 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %199 = invoke {}* @cc_safe_fdefinition({}* %198)
          to label %normal-dest1520 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag279:                                           ; preds = %tag249
  %200 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %176, i64 4)
  %result1533 = extractvalue { i64, i1 } %200, 0
  %overflow1534 = extractvalue { i64, i1 } %200, 1
  %201 = inttoptr i64 %result1533 to {}*
  br i1 %overflow1534, label %tag316, label %tag81

tag280:                                           ; preds = %tag79
  %202 = load {}*, {}** %148, align 8
  %.val2161.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag121

tag283:                                           ; preds = %tag191
  %203 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %204 = invoke {}* @cc_safe_fdefinition({}* %203)
          to label %normal-dest1551 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

tag287:                                           ; preds = %tag216
  %205 = add i64 %ptrtoint386, 7
  %206 = inttoptr i64 %205 to i64*
  %207 = load i64, i64* %206, align 8
  %"tag fixnum1567" = shl nuw i64 %207, 2
  %208 = inttoptr i64 %"tag fixnum1567" to {}*
  br i1 %fixnump-test1229, label %tag30, label %tag182

tag289:                                           ; preds = %tag272
  %209 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %210 = invoke {}* @cc_safe_fdefinition({}* %209)
          to label %normal-dest1573 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag291:                                           ; preds = %tag272
  %211 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %196, i64 4)
  %result = extractvalue { i64, i1 } %211, 0
  %overflow = extractvalue { i64, i1 } %211, 1
  %212 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag244, label %tag245.outer.backedge

tag245.outer.backedge:                            ; preds = %tag291, %normal-dest1375, %normal-dest1580
  %LENGTH494.0.ph.be = phi {}* [ %LENGTH494.2, %normal-dest1580 ], [ %LENGTH494.1, %normal-dest1375 ], [ %212, %tag291 ]
  br label %tag245.outer

tag294:                                           ; preds = %normal-dest559, %header-check-br1233
  %213 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %214 = invoke {}* @cc_safe_fdefinition({}* %213)
          to label %normal-dest1590 unwind label %cleanup-lpad.loopexit

tag295:                                           ; preds = %tag245
  %215 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %216 = icmp eq {}* %SEQUENCE.0.ph, %215
  %.val2149 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237736.0 = select i1 %216, {}* %.val2149, {}* %215
  %217 = icmp eq {}* %G237736.0, %215
  br i1 %217, label %tag299, label %tag153

tag299:                                           ; preds = %tag295
  %218 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %219 = invoke {}* @cc_safe_fdefinition({}* %218)
          to label %normal-dest1629 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag312:                                           ; preds = %tag230
  %220 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %138, i64 4)
  %result1668 = extractvalue { i64, i1 } %220, 0
  %overflow1669 = extractvalue { i64, i1 } %220, 1
  %221 = inttoptr i64 %result1668 to {}*
  br i1 %overflow1669, label %tag, label %tag196.backedge

tag196.backedge:                                  ; preds = %tag312, %normal-dest366, %normal-dest1004
  %.be = phi {}* [ %254, %normal-dest366 ], [ %350, %normal-dest1004 ], [ %161, %tag312 ]
  %DAMENINDEX-237065.0.be = phi {}* [ %DAMENINDEX-237065.1, %normal-dest366 ], [ %DAMENINDEX-237065.2, %normal-dest1004 ], [ %221, %tag312 ]
  br label %tag196

tag314:                                           ; preds = %tag160
  %222 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %223 = invoke {}* @cc_safe_fdefinition({}* %222)
          to label %normal-dest1671 unwind label %cleanup-lpad.loopexit

tag316:                                           ; preds = %tag279
  %224 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %225 = invoke {}* @cc_safe_fdefinition({}* %224)
          to label %normal-dest1685 unwind label %cleanup-lpad.loopexit

tag317:                                           ; preds = %tag5
  %226 = add i64 %282, 7
  %227 = inttoptr i64 %226 to i64*
  %228 = load i64, i64* %227, align 8
  %"tag fixnum1698" = shl nuw i64 %228, 2
  %229 = inttoptr i64 %"tag fixnum1698" to {}*
  br label %tag235

tag319:                                           ; preds = %header-check-br1174, %tag142, %tag275, %header-check-br1181, %tag117
  %230 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %231 = invoke {}* @cc_safe_fdefinition({}* %230)
          to label %normal-dest1714 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag321:                                           ; preds = %tag249
  %232 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %233 = invoke {}* @cc_safe_fdefinition({}* %232)
          to label %normal-dest1501 unwind label %cleanup-lpad.loopexit

tag325:                                           ; preds = %tag151
  %"untagged fixnum" = lshr exact i64 %138, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %258, i64 0, i32 1, i64 %"untagged fixnum"
  %234 = load {}*, {}** %aref, align 8
  br label %tag49

tag330:                                           ; preds = %tag219
  %235 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %236 = invoke {}* @cc_safe_fdefinition({}* %235)
          to label %normal-dest1747 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag332:                                           ; preds = %tag154
  %237 = icmp eq i64 %tag-only790, 6
  br i1 %237, label %tag277, label %tag71

tag333:                                           ; preds = %tag275
  %238 = icmp slt {}* %DAMENINDEX-237065.0, %"%DOTIMES-VAR.0"
  %239 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %. = select i1 %238, {}* %239, {}* %137
  br label %tag253

cleanup-lpad.loopexit:                            ; preds = %tag10, %normal-dest410, %normal-dest417, %normal-dest424, %tag37, %normal-dest498, %tag41, %normal-dest539, %normal-dest546, %tag63, %normal-dest678, %tag71, %normal-dest715, %tag74, %tag81, %normal-dest775, %tag108, %normal-dest873, %tag116, %normal-dest924, %tag129, %normal-dest982, %normal-dest983, %tag145, %normal-dest1031, %tag178, %normal-dest1115, %tag187, %normal-dest1188, %normal-dest1189, %tag193, %normal-dest1223, %normal-dest1224, %tag255, %normal-dest1408, %tag256, %normal-dest1423, %normal-dest1424, %tag260, %normal-dest1434, %normal-dest1435, %mvn-final1447, %normal-dest1450, %tag321, %normal-dest1501, %tag277, %normal-dest1516, %normal-dest1517, %maybe-more-tests1241, %normal-dest1536, %tag294, %normal-dest1590, %tag314, %normal-dest1671, %tag316, %normal-dest1685
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest1714, %tag319, %normal-dest1700, %tag36, %normal-dest1145, %tag182, %normal-dest1128, %tag179, %normal-dest1088, %tag165, %normal-dest997, %tag138, %normal-dest890, %tag110, %normal-dest731, %tag72, %normal-dest697, %tag69, %normal-dest649, %normal-dest642, %normal-dest635, %normal-dest628, %normal-dest621, %tag59, %normal-dest373, %tag1, %normal-dest359, %tag
  %lpad.loopexit2189 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit: ; preds = %normal-dest1353, %tag241, %normal-dest754, %tag77
  %lpad.loopexit2194 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %normal-dest1747, %tag330, %normal-dest1194, %tag4
  %lpad.loopexit.split-lp2195 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %normal-dest1551, %tag283, %tag266, %tag222, %normal-dest1271, %tag206, %normal-dest1131, %tag180, %normal-dest1010, %tag140, %normal-dest951, %maybe-more-tests1406, %normal-dest694, %tag68, %normal-dest469, %tag29
  %lpad.loopexit2197 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit: ; preds = %normal-dest1629, %tag299, %normal-dest911, %tag113
  %lpad.loopexit2202 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %normal-dest1573, %tag289, %normal-dest1368, %tag244
  %lpad.loopexit.split-lp2203 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %normal-dest, %normal-dest338, %normal-dest341, %normal-dest345, %normal-dest1015, %tag40, %normal-dest519, %tag82, %normal-dest796, %tag143, %maybe-more-tests1166, %normal-dest1017, %tag207, %normal-dest1247, %tag278, %normal-dest1520, %maybe-more-tests1053, %normal-dest1610, %11, %12
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit2189, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit2194, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp2195, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ], [ %lpad.loopexit2197, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit2202, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp2203, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %240 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %241 = invoke {}* @cc_safe_fdefinition({}* %240)
          to label %normal-dest338 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest338:                                   ; preds = %normal-dest
  %242 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 144), align 16
  %ptrtoint = ptrtoint {}* %241 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %243 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %241, i64 2, {}* %farg0, {}* %242, {}* null, {}* null)
          to label %normal-dest341 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest341:                                   ; preds = %normal-dest338
  %.elt = extractvalue { {}*, i64 } %243, 0
  %.elt1816 = extractvalue { {}*, i64 } %243, 1
  %cond = icmp eq i64 %.elt1816, 0
  %244 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in2068 = select i1 %cond, {}* %244, {}* %.elt
  %245 = bitcast {}* %.in2068 to i8*
  %246 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %247 = invoke {}* @cc_safe_fdefinition({}* %246)
          to label %normal-dest345 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest345:                                   ; preds = %normal-dest341
  %248 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint346 = ptrtoint {}* %247 to i64
  %entry-point-addr-uint347 = add i64 %ptrtoint346, 7
  %entry-point-addr348 = inttoptr i64 %entry-point-addr-uint347 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point349 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr348, align 8
  %249 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point349({}* %247, i64 2, {}* %farg0, {}* %248, {}* null, {}* null)
          to label %normal-dest352 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest352:                                   ; preds = %normal-dest345
  %.elt1818 = extractvalue { {}*, i64 } %249, 0
  %.elt1820 = extractvalue { {}*, i64 } %249, 1
  %cond1762 = icmp eq i64 %.elt1820, 0
  %250 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237055.0 = select i1 %cond1762, {}* %250, {}* %.elt1818
  %251 = ptrtoint {}* %.in2068 to i64
  %tag-only1821 = and i64 %251, 7
  %consp-test = icmp eq i64 %tag-only1821, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237743.0 = select i1 %consp-test, {}* %.val, {}* %250
  %252 = icmp eq {}* %G237743.0, %250
  br i1 %252, label %tag252, label %tag245.outer.preheader

tag245.outer.preheader:                           ; preds = %normal-dest352
  br label %tag245.outer

normal-dest359:                                   ; preds = %tag
  %ptrtoint360 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint361 = add i64 %ptrtoint360, 7
  %entry-point-addr362 = inttoptr i64 %entry-point-addr-uint361 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point363 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr362, align 8
  %253 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point363({}* %14, i64 1, {}* %221, {}* null, {}* null, {}* null)
          to label %normal-dest366 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest366:                                   ; preds = %normal-dest359
  %.elt2015 = extractvalue { {}*, i64 } %253, 0
  %.elt2017 = extractvalue { {}*, i64 } %253, 1
  %cond1805 = icmp eq i64 %.elt2017, 0
  %254 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DAMENINDEX-237065.1 = select i1 %cond1805, {}* %254, {}* %.elt2015
  br label %tag196.backedge

normal-dest373:                                   ; preds = %tag1
  %255 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint374 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint375 = add i64 %ptrtoint374, 7
  %entry-point-addr376 = inttoptr i64 %entry-point-addr-uint375 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point377 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr376, align 8
  %256 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point377({}* %16, i64 2, {}* %farg0, {}* %255, {}* null, {}* null)
          to label %normal-dest380 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest380:                                   ; preds = %normal-dest373
  %.elt1881 = extractvalue { {}*, i64 } %256, 0
  %.elt1883 = extractvalue { {}*, i64 } %256, 1
  %cond1775 = icmp eq i64 %.elt1883, 0
  %257 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond1775, {}* %257, {}* %.elt1881
  %258 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %ptrtoint386 = ptrtoint {}* %.in to i64
  %tag-only387 = and i64 %ptrtoint386, 7
  %test = icmp eq i64 %tag-only387, 1
  br i1 %test, label %tag258, label %tag69

normal-dest410:                                   ; preds = %tag10
  %259 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint411 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint412 = add i64 %ptrtoint411, 7
  %entry-point-addr413 = inttoptr i64 %entry-point-addr-uint412 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point414 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr413, align 8
  %260 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point414({}* %23, i64 2, {}* %FEINDZEILE.0, {}* %259, {}* null, {}* null)
          to label %normal-dest417 unwind label %cleanup-lpad.loopexit

normal-dest417:                                   ; preds = %normal-dest410
  %.elt1913 = extractvalue { {}*, i64 } %260, 0
  %.elt1915 = extractvalue { {}*, i64 } %260, 1
  %cond1782 = icmp eq i64 %.elt1915, 0
  %261 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237074.0 = select i1 %cond1782, {}* %261, {}* %.elt1913
  %262 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 449), align 8
  %263 = invoke {}* @cc_safe_fdefinition({}* %262)
          to label %normal-dest424 unwind label %cleanup-lpad.loopexit

normal-dest424:                                   ; preds = %normal-dest417
  %ptrtoint425 = ptrtoint {}* %263 to i64
  %entry-point-addr-uint426 = add i64 %ptrtoint425, 7
  %entry-point-addr427 = inttoptr i64 %entry-point-addr-uint426 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point428 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr427, align 8
  %264 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point428({}* %263, i64 1, {}* %FEINDZEILE.0, {}* null, {}* null, {}* null)
          to label %normal-dest431 unwind label %cleanup-lpad.loopexit

normal-dest431:                                   ; preds = %normal-dest424
  %.elt1917 = extractvalue { {}*, i64 } %264, 0
  %.elt1919 = extractvalue { {}*, i64 } %264, 1
  %cond1783 = icmp eq i64 %.elt1919, 0
  %265 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %object.0 = select i1 %cond1783, {}* %265, {}* %.elt1917
  %266 = icmp eq {}* %object.0, %265
  %.val2173 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237402.0 = select i1 %266, {}* %.val2173, {}* %265
  %267 = icmp eq {}* %G237402.0, %265
  br i1 %267, label %tag41, label %tag260

header-check-br438:                               ; preds = %tag199
  %irc-bit-cast442 = bitcast {}* %DISLIKE.12212 to i8*
  %gep443 = getelementptr inbounds i8, i8* %irc-bit-cast442, i64 -9
  %irc-bit-cast444 = bitcast i8* %gep443 to i64*
  %268 = load i64, i64* %irc-bit-cast444, align 8
  %269 = icmp eq i64 %268, 1325
  br i1 %269, label %tag94, label %tag178

normal-dest455:                                   ; preds = %normal-dest1015
  call void @unreachableError()
  unreachable

normal-dest469:                                   ; preds = %tag29
  %ptrtoint472 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint473 = add i64 %ptrtoint472, 7
  %entry-point-addr474 = inttoptr i64 %entry-point-addr-uint473 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point475 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr474, align 8
  %270 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point475({}* %29, i64 2, {}* %X591.0, {}* %"%DOTIMES-VAR691.0", {}* null, {}* null)
          to label %normal-dest478 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest478:                                   ; preds = %normal-dest469
  %.elt1835 = extractvalue { {}*, i64 } %270, 0
  %.elt1837 = extractvalue { {}*, i64 } %270, 1
  %cond1765 = icmp eq i64 %.elt1837, 0
  %271 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237611.1 = select i1 %cond1765, {}* %271, {}* %.elt1835
  br label %tag147

normal-dest498:                                   ; preds = %tag37
  %272 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %273 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %274 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %275 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint499 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint500 = add i64 %ptrtoint499, 7
  %entry-point-addr501 = inttoptr i64 %entry-point-addr-uint500 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point502 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr501, align 8
  %276 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point502({}* %38, i64 5, {}* %272, {}* %273, {}* %"%DOLIST-VAR.02211", {}* %274, {}* %275)
          to label %normal-dest505 unwind label %cleanup-lpad.loopexit

normal-dest505:                                   ; preds = %normal-dest498
  %.elt2006 = extractvalue { {}*, i64 } %276, 0
  %.elt2008 = extractvalue { {}*, i64 } %276, 1
  %cond1803 = icmp eq i64 %.elt2008, 0
  %277 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %FEINDZEILE.1 = select i1 %cond1803, {}* %277, {}* %.elt2006
  br label %tag255

normal-dest519:                                   ; preds = %tag40
  %278 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint520 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint521 = add i64 %ptrtoint520, 7
  %entry-point-addr522 = inttoptr i64 %entry-point-addr-uint521 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point523 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr522, align 8
  %279 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point523({}* %40, i64 2, {}* %farg0, {}* %278, {}* null, {}* null)
          to label %normal-dest526 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest526:                                   ; preds = %normal-dest519
  %.elt1860 = extractvalue { {}*, i64 } %279, 0
  %.elt1862 = extractvalue { {}*, i64 } %279, 1
  %cond1771 = icmp eq i64 %.elt1862, 0
  %280 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in2050 = select i1 %cond1771, {}* %280, {}* %.elt1860
  %281 = bitcast {}* %.in2050 to i8*
  %282 = ptrtoint {}* %.in2050 to i64
  %tag-only5361863 = and i64 %282, 7
  %consp-test537 = icmp eq i64 %tag-only5361863, 3
  %.val2156 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237603.0 = select i1 %consp-test537, {}* %.val2156, {}* %280
  %283 = icmp eq {}* %G237603.0, %280
  br i1 %283, label %tag52, label %tag79.outer.preheader

tag79.outer.preheader:                            ; preds = %normal-dest526
  br label %tag79.outer

normal-dest539:                                   ; preds = %tag41
  %284 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint540 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint541 = add i64 %ptrtoint540, 7
  %entry-point-addr542 = inttoptr i64 %entry-point-addr-uint541 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point543 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr542, align 8
  %285 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point543({}* %42, i64 2, {}* %G237068.0, {}* %284, {}* null, {}* null)
          to label %normal-dest546 unwind label %cleanup-lpad.loopexit

normal-dest546:                                   ; preds = %normal-dest539
  %.elt1971 = extractvalue { {}*, i64 } %285, 0
  %.elt1973 = extractvalue { {}*, i64 } %285, 1
  %cond1798 = icmp eq i64 %.elt1973, 0
  %286 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237087.0 = select i1 %cond1798, {}* %286, {}* %.elt1971
  %287 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %288 = invoke {}* @cc_safe_setfdefinition({}* %287)
          to label %normal-dest559 unwind label %cleanup-lpad.loopexit

normal-dest559:                                   ; preds = %normal-dest546
  %ptrtoint561 = ptrtoint {}* %288 to i64
  %tag-only562 = and i64 %ptrtoint561, 7
  %test563 = icmp eq i64 %tag-only562, 1
  br i1 %test563, label %header-check-br560, label %tag294

header-check-br560:                               ; preds = %normal-dest559
  %irc-bit-cast564 = bitcast {}* %288 to i8*
  %gep565 = getelementptr inbounds i8, i8* %irc-bit-cast564, i64 -9
  %irc-bit-cast566 = bitcast i8* %gep565 to i64*
  %289 = load i64, i64* %irc-bit-cast566, align 8
  %.off2179 = add i64 %289, -913
  %290 = icmp ult i64 %.off2179, 85
  br i1 %290, label %tag74, label %header-check-br1233

header-check-br593:                               ; preds = %tag52
  %gep598 = getelementptr inbounds i8, i8* %281, i64 -9
  %irc-bit-cast599 = bitcast i8* %gep598 to i64*
  %291 = load i64, i64* %irc-bit-cast599, align 8
  %.off2183 = add i64 %291, -1081
  %292 = icmp ult i64 %.off2183, 69
  br i1 %292, label %tag5, label %header-check-br1045

normal-dest621:                                   ; preds = %tag59
  %ptrtoint622 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint623 = add i64 %ptrtoint622, 7
  %entry-point-addr624 = inttoptr i64 %entry-point-addr-uint623 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point625 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr624, align 8
  %293 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point625({}* %49, i64 1, {}* %DAMENINDEX-237065.0, {}* null, {}* null, {}* null)
          to label %normal-dest628 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest628:                                   ; preds = %normal-dest621
  %.elt1896 = extractvalue { {}*, i64 } %293, 0
  %.elt1898 = extractvalue { {}*, i64 } %293, 1
  %cond1778 = icmp eq i64 %.elt1898, 0
  %294 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237068.0 = select i1 %cond1778, {}* %294, {}* %.elt1896
  %295 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %296 = invoke {}* @cc_safe_fdefinition({}* %295)
          to label %normal-dest635 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest635:                                   ; preds = %normal-dest628
  %297 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint636 = ptrtoint {}* %296 to i64
  %entry-point-addr-uint637 = add i64 %ptrtoint636, 7
  %entry-point-addr638 = inttoptr i64 %entry-point-addr-uint637 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point639 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr638, align 8
  %298 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point639({}* %296, i64 2, {}* %G237068.0, {}* %297, {}* null, {}* null)
          to label %normal-dest642 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest642:                                   ; preds = %normal-dest635
  %.elt1900 = extractvalue { {}*, i64 } %298, 0
  %.elt1902 = extractvalue { {}*, i64 } %298, 1
  %cond1779 = icmp eq i64 %.elt1902, 0
  %299 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237070.0 = select i1 %cond1779, {}* %299, {}* %.elt1900
  %300 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %301 = invoke {}* @cc_safe_fdefinition({}* %300)
          to label %normal-dest649 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest649:                                   ; preds = %normal-dest642
  %302 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint650 = ptrtoint {}* %301 to i64
  %entry-point-addr-uint651 = add i64 %ptrtoint650, 7
  %entry-point-addr652 = inttoptr i64 %entry-point-addr-uint651 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point653 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr652, align 8
  %303 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point653({}* %301, i64 1, {}* %302, {}* null, {}* null, {}* null)
          to label %normal-dest656 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest656:                                   ; preds = %normal-dest649
  %.elt1904 = extractvalue { {}*, i64 } %303, 0
  %.elt1906 = extractvalue { {}*, i64 } %303, 1
  %cond1780 = icmp eq i64 %.elt1906, 0
  %304 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond1780, {}* %304, {}* %.elt1904
  %305 = icmp eq {}* %"%DOLIST-VAR.1", %304
  br i1 %305, label %tag230, label %tag25.preheader

tag25.preheader:                                  ; preds = %normal-dest656
  br label %tag25

normal-dest678:                                   ; preds = %tag63
  %ptrtoint679 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint680 = add i64 %ptrtoint679, 7
  %entry-point-addr681 = inttoptr i64 %entry-point-addr-uint680 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point682 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr681, align 8
  %306 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point682({}* %52, i64 2, {}* %FEINDZEILE.0, {}* %DAME1237076.0, {}* null, {}* null)
          to label %normal-dest685 unwind label %cleanup-lpad.loopexit

normal-dest685:                                   ; preds = %normal-dest678
  %.elt1929 = extractvalue { {}*, i64 } %306, 0
  %.elt1931 = extractvalue { {}*, i64 } %306, 1
  %cond1787 = icmp eq i64 %.elt1931, 0
  %307 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237355.1 = select i1 %cond1787, {}* %307, {}* %.elt1929
  br label %tag202

normal-dest694:                                   ; preds = %tag68
  %308 = invoke float @from_object_float({}* %"%DOTIMES-VAR691.0")
          to label %normal-dest695 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest695:                                   ; preds = %normal-dest694
  %309 = fcmp olt float %55, %308
  br i1 %309, label %tag8, label %tag224

normal-dest697:                                   ; preds = %tag69
  %310 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %311 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %312 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %313 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint698 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint699 = add i64 %ptrtoint698, 7
  %entry-point-addr700 = inttoptr i64 %entry-point-addr-uint699 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point701 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr700, align 8
  %314 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point701({}* %57, i64 5, {}* %310, {}* %311, {}* %.in, {}* %312, {}* %313)
          to label %normal-dest704 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest704:                                   ; preds = %normal-dest697
  %.elt2027 = extractvalue { {}*, i64 } %314, 0
  %.elt2029 = extractvalue { {}*, i64 } %314, 1
  %cond1808 = icmp eq i64 %.elt2029, 0
  %315 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x578.1 = select i1 %cond1808, {}* %315, {}* %.elt2027
  br label %tag49

normal-dest715:                                   ; preds = %tag71
  %ptrtoint717 = ptrtoint {}* %59 to i64
  %entry-point-addr-uint718 = add i64 %ptrtoint717, 7
  %entry-point-addr719 = inttoptr i64 %entry-point-addr-uint718 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point720 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr719, align 8
  %316 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point720({}* %59, i64 2, {}* inttoptr (i64 8522825734 to {}*), {}* %.in1955, {}* null, {}* null)
          to label %normal-dest723 unwind label %cleanup-lpad.loopexit

normal-dest723:                                   ; preds = %normal-dest715
  %.elt1957 = extractvalue { {}*, i64 } %316, 0
  %.elt1959 = extractvalue { {}*, i64 } %316, 1
  %cond1794 = icmp eq i64 %.elt1959, 0
  %317 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %y724.1 = select i1 %cond1794, {}* %317, {}* %.elt1957
  br label %tag203

normal-dest731:                                   ; preds = %tag72
  %318 = invoke float @from_object_float({}* %"%DOTIMES-VAR.0")
          to label %normal-dest733 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest733:                                   ; preds = %normal-dest731
  %319 = fcmp olt float %60, %318
  br i1 %319, label %tag54, label %tag225

normal-dest741:                                   ; preds = %tag74
  br i1 %consp-test467, label %tag105, label %tag160

normal-dest754:                                   ; preds = %tag77
  %320 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %321 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %322 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %323 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint756 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint757 = add i64 %ptrtoint756, 7
  %entry-point-addr758 = inttoptr i64 %entry-point-addr-uint757 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point759 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr758, align 8
  %324 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point759({}* %65, i64 5, {}* %320, {}* %321, {}* %SEQUENCE533.0.ph, {}* %322, {}* %323)
          to label %normal-dest762 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest762:                                   ; preds = %normal-dest754
  %.elt2043 = extractvalue { {}*, i64 } %324, 0
  %.elt2045 = extractvalue { {}*, i64 } %324, 1
  %cond1809 = icmp eq i64 %.elt2045, 0
  %325 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G2095854.1 = select i1 %cond1809, {}* %325, {}* %.elt2043
  br label %tag121

normal-dest775:                                   ; preds = %tag81
  %ptrtoint776 = ptrtoint {}* %67 to i64
  %entry-point-addr-uint777 = add i64 %ptrtoint776, 7
  %entry-point-addr778 = inttoptr i64 %entry-point-addr-uint777 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point779 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr778, align 8
  %326 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point779({}* %67, i64 1, {}* %FEINDZEILE.0, {}* null, {}* null, {}* null)
          to label %normal-dest782 unwind label %cleanup-lpad.loopexit

normal-dest782:                                   ; preds = %normal-dest775
  %.elt1947 = extractvalue { {}*, i64 } %326, 0
  %.elt1949 = extractvalue { {}*, i64 } %326, 1
  %cond1793 = icmp eq i64 %.elt1949, 0
  %327 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1955 = select i1 %cond1793, {}* %327, {}* %.elt1947
  %328 = bitcast {}* %.in1955 to i8*
  %ptrtoint789 = ptrtoint {}* %.in1955 to i64
  %tag-only790 = and i64 %ptrtoint789, 7
  %test791 = icmp eq i64 %tag-only790, 1
  br i1 %test791, label %header-check-br788, label %tag119

header-check-br788:                               ; preds = %normal-dest782
  %gep793 = getelementptr inbounds i8, i8* %328, i64 -9
  %irc-bit-cast794 = bitcast i8* %gep793 to i64*
  %329 = load i64, i64* %irc-bit-cast794, align 8
  switch i64 %329, label %tag154 [
    i64 1325, label %tag71
    i64 1341, label %tag71
    i64 1349, label %tag71
  ]

normal-dest796:                                   ; preds = %tag82
  %330 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 144), align 16
  %331 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %332 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 412), align 16
  %ptrtoint797 = ptrtoint {}* %69 to i64
  %entry-point-addr-uint798 = add i64 %ptrtoint797, 7
  %entry-point-addr799 = inttoptr i64 %entry-point-addr-uint798 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point800 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr799, align 8
  %333 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point800({}* %69, i64 5, {}* %farg0, {}* %330, {}* %.in2068, {}* %331, {}* %332)
          to label %normal-dest803 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest803:                                   ; preds = %normal-dest796
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %333

header-check-br840:                               ; preds = %tag94
  %irc-bit-cast844 = bitcast {}* %y1039.0 to i8*
  %gep845 = getelementptr inbounds i8, i8* %irc-bit-cast844, i64 -9
  %irc-bit-cast846 = bitcast i8* %gep845 to i64*
  %334 = load i64, i64* %irc-bit-cast846, align 8
  %335 = icmp eq i64 %334, 1325
  br i1 %335, label %tag129, label %tag178

normal-dest873:                                   ; preds = %tag108
  %ptrtoint874 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint875 = add i64 %ptrtoint874, 7
  %entry-point-addr876 = inttoptr i64 %entry-point-addr-uint875 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point877 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr876, align 8
  %336 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point877({}* %84, i64 2, {}* %FEINDZEILE.0, {}* %DAME2237077.0, {}* null, {}* null)
          to label %tag162 unwind label %cleanup-lpad.loopexit

normal-dest890:                                   ; preds = %tag110
  %337 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint891 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint892 = add i64 %ptrtoint891, 7
  %entry-point-addr893 = inttoptr i64 %entry-point-addr-uint892 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point894 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr893, align 8
  %338 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point894({}* %86, i64 3, {}* %337, {}* %DAMENINDEX-237065.0, {}* %208, {}* null)
          to label %normal-dest897 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest897:                                   ; preds = %normal-dest890
  %.elt2019 = extractvalue { {}*, i64 } %338, 0
  %.elt2021 = extractvalue { {}*, i64 } %338, 1
  %cond1806 = icmp eq i64 %.elt2021, 0
  %339 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x578.2 = select i1 %cond1806, {}* %339, {}* %.elt2019
  br label %tag49

normal-dest911:                                   ; preds = %tag113
  %340 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 550), align 16
  %ptrtoint912 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint913 = add i64 %ptrtoint912, 7
  %entry-point-addr914 = inttoptr i64 %entry-point-addr-uint913 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point915 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr914, align 8
  %341 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point915({}* %88, i64 2, {}* %G2095854489.0, {}* %340, {}* null, {}* null)
          to label %tag245 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest924:                                   ; preds = %tag116
  %ptrtoint926 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint927 = add i64 %ptrtoint926, 7
  %entry-point-addr928 = inttoptr i64 %entry-point-addr-uint927 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point929 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr928, align 8
  %342 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point929({}* %90, i64 1, {}* %173, {}* null, {}* null, {}* null)
          to label %normal-dest932 unwind label %cleanup-lpad.loopexit

normal-dest932:                                   ; preds = %normal-dest924
  %.elt1993 = extractvalue { {}*, i64 } %342, 0
  %.elt1995 = extractvalue { {}*, i64 } %342, 1
  %cond1797 = icmp eq i64 %.elt1995, 0
  %343 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DISLIKE.2 = select i1 %cond1797, {}* %343, {}* %.elt1993
  br label %tag41

normal-dest951:                                   ; preds = %maybe-more-tests1406
  %ptrtoint952 = ptrtoint {}* %419 to i64
  %entry-point-addr-uint953 = add i64 %ptrtoint952, 7
  %entry-point-addr954 = inttoptr i64 %entry-point-addr-uint953 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point955 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr954, align 8
  %344 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point955({}* %419, i64 1, {}* nonnull %195, {}* null, {}* null, {}* null)
          to label %normal-dest958 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest958:                                   ; preds = %normal-dest951
  %.elt1856 = extractvalue { {}*, i64 } %344, 0
  %.elt1858 = extractvalue { {}*, i64 } %344, 1
  %cond1770 = icmp eq i64 %.elt1858, 0
  %345 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237660.1 = select i1 %cond1770, {}* %345, {}* %.elt1856
  br label %tag222

normal-dest982:                                   ; preds = %tag129
  %346 = invoke double @from_object_double({}* nonnull %y1039.0)
          to label %normal-dest983 unwind label %cleanup-lpad.loopexit

normal-dest983:                                   ; preds = %normal-dest982
  %347 = fadd double %95, %346
  %348 = invoke {}* @to_object_double(double %347)
          to label %tag41 unwind label %cleanup-lpad.loopexit

normal-dest997:                                   ; preds = %tag138
  %ptrtoint998 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint999 = add i64 %ptrtoint998, 7
  %entry-point-addr1000 = inttoptr i64 %entry-point-addr-uint999 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1001 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1000, align 8
  %349 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1001({}* %99, i64 2, {}* %DAMENINDEX-237065.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest1004 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1004:                                  ; preds = %normal-dest997
  %.elt2011 = extractvalue { {}*, i64 } %349, 0
  %.elt2013 = extractvalue { {}*, i64 } %349, 1
  %cond1804 = icmp eq i64 %.elt2013, 0
  %350 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DAMENINDEX-237065.2 = select i1 %cond1804, {}* %350, {}* %.elt2011
  br label %tag196.backedge

normal-dest1010:                                  ; preds = %tag140
  %351 = invoke double @from_object_double({}* nonnull %"%DOTIMES-VAR691.0")
          to label %normal-dest1011 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1011:                                  ; preds = %normal-dest1010
  %352 = fcmp olt double %100, %351
  br i1 %352, label %tag214, label %tag231

normal-dest1015:                                  ; preds = %tag143
  %353 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %354 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %355 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %356 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 223), align 8
  %ptrtoint449 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint450 = add i64 %ptrtoint449, 7
  %entry-point-addr451 = inttoptr i64 %entry-point-addr-uint450 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point452 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr451, align 8
  %357 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point452({}* %102, i64 5, {}* %353, {}* %354, {}* %.in1955, {}* %355, {}* %356)
          to label %normal-dest455 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1017:                                  ; preds = %maybe-more-tests1166
  %ptrtoint1018 = ptrtoint {}* %386 to i64
  %entry-point-addr-uint1019 = add i64 %ptrtoint1018, 7
  %entry-point-addr1020 = inttoptr i64 %entry-point-addr-uint1019 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1021 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1020, align 8
  %358 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1021({}* %386, i64 1, {}* nonnull %.in2068, {}* null, {}* null, {}* null)
          to label %normal-dest1024 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1024:                                  ; preds = %normal-dest1017
  %.elt2070 = extractvalue { {}*, i64 } %358, 0
  %.elt2072 = extractvalue { {}*, i64 } %358, 1
  %cond1814 = icmp eq i64 %.elt2072, 0
  %359 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237761.0 = select i1 %cond1814, {}* %359, {}* %.elt2070
  %360 = icmp eq {}* %G237761.0, inttoptr (i64 4 to {}*)
  %G237687.0.pre.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br i1 %360, label %tag98, label %tag166

normal-dest1031:                                  ; preds = %tag145
  %ptrtoint1032 = ptrtoint {}* %104 to i64
  %entry-point-addr-uint1033 = add i64 %ptrtoint1032, 7
  %entry-point-addr1034 = inttoptr i64 %entry-point-addr-uint1033 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1035 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1034, align 8
  %361 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1035({}* %104, i64 2, {}* %ANZAHL_STOERUNGEN.0, {}* %y724.0, {}* null, {}* null)
          to label %normal-dest1038 unwind label %cleanup-lpad.loopexit

normal-dest1038:                                  ; preds = %normal-dest1031
  %.elt1962 = extractvalue { {}*, i64 } %361, 0
  %.elt1964 = extractvalue { {}*, i64 } %361, 1
  %cond1795 = icmp eq i64 %.elt1964, 0
  %362 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %y1039.1 = select i1 %cond1795, {}* %362, {}* %.elt1962
  br label %tag239

header-check-br1045:                              ; preds = %header-check-br593
  %.off2184 = add i64 %291, -1153
  %363 = icmp ult i64 %.off2184, 149
  br i1 %363, label %maybe-more-tests1053, label %tag106

maybe-more-tests1053:                             ; preds = %header-check-br1045
  %364 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 136), align 16
  %365 = invoke {}* @cc_safe_fdefinition({}* %364)
          to label %normal-dest1610 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1088:                                  ; preds = %tag165
  %366 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %367 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %368 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %369 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint1089 = ptrtoint {}* %117 to i64
  %entry-point-addr-uint1090 = add i64 %ptrtoint1089, 7
  %entry-point-addr1091 = inttoptr i64 %entry-point-addr-uint1090 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1092 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1091, align 8
  %370 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1092({}* %117, i64 5, {}* %366, {}* %367, {}* %DAMENINDEX-237065.0, {}* %368, {}* %369)
          to label %normal-dest1095 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1095:                                  ; preds = %normal-dest1088
  %.elt2023 = extractvalue { {}*, i64 } %370, 0
  %.elt2025 = extractvalue { {}*, i64 } %370, 1
  %cond1807 = icmp eq i64 %.elt2025, 0
  %371 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x578.3 = select i1 %cond1807, {}* %371, {}* %.elt2023
  br label %tag49

normal-dest1115:                                  ; preds = %tag178
  %ptrtoint1116 = ptrtoint {}* %127 to i64
  %entry-point-addr-uint1117 = add i64 %ptrtoint1116, 7
  %entry-point-addr1118 = inttoptr i64 %entry-point-addr-uint1117 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1119 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1118, align 8
  %372 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1119({}* %127, i64 2, {}* %DISLIKE.12212, {}* %y1039.0, {}* null, {}* null)
          to label %normal-dest1122 unwind label %cleanup-lpad.loopexit

normal-dest1122:                                  ; preds = %normal-dest1115
  %.elt1967 = extractvalue { {}*, i64 } %372, 0
  %.elt1969 = extractvalue { {}*, i64 } %372, 1
  %cond1796 = icmp eq i64 %.elt1969, 0
  %373 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DISLIKE.3 = select i1 %cond1796, {}* %373, {}* %.elt1967
  br label %tag41

normal-dest1128:                                  ; preds = %tag179
  %374 = invoke double @from_object_double({}* nonnull %"%DOTIMES-VAR.0")
          to label %normal-dest1129 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1129:                                  ; preds = %normal-dest1128
  %375 = fcmp olt double %128, %374
  br i1 %375, label %tag170, label %tag62

normal-dest1131:                                  ; preds = %tag180
  %376 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %377 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %378 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %379 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 551), align 8
  %ptrtoint1132 = ptrtoint {}* %130 to i64
  %entry-point-addr-uint1133 = add i64 %ptrtoint1132, 7
  %entry-point-addr1134 = inttoptr i64 %entry-point-addr-uint1133 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1135 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1134, align 8
  %380 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1135({}* %130, i64 5, {}* %376, {}* %377, {}* %195, {}* %378, {}* %379)
          to label %normal-dest1138 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1138:                                  ; preds = %normal-dest1131
  %.elt1839 = extractvalue { {}*, i64 } %380, 0
  %.elt1841 = extractvalue { {}*, i64 } %380, 1
  %cond1767 = icmp eq i64 %.elt1841, 0
  %381 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237660.2 = select i1 %cond1767, {}* %381, {}* %.elt1839
  br label %tag222

normal-dest1145:                                  ; preds = %tag182
  %ptrtoint1146 = ptrtoint {}* %132 to i64
  %entry-point-addr-uint1147 = add i64 %ptrtoint1146, 7
  %entry-point-addr1148 = inttoptr i64 %entry-point-addr-uint1147 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1149 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1148, align 8
  %382 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1149({}* %132, i64 2, {}* null, {}* %DAMENINDEX-237065.0, {}* null, {}* null)
          to label %normal-dest1152 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1152:                                  ; preds = %normal-dest1145
  %.elt1887 = extractvalue { {}*, i64 } %382, 0
  %.elt1889 = extractvalue { {}*, i64 } %382, 1
  %cond1776 = icmp eq i64 %.elt1889, 0
  %383 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237504.1 = select i1 %cond1776, {}* %383, {}* %.elt1887
  br label %tag133

header-check-br1158:                              ; preds = %header-check-br1389
  %.off2188 = add i64 %415, -1153
  %384 = icmp ult i64 %.off2188, 149
  br i1 %384, label %maybe-more-tests1166, label %tag166

maybe-more-tests1166:                             ; preds = %header-check-br1158
  %385 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 136), align 16
  %386 = invoke {}* @cc_safe_fdefinition({}* %385)
          to label %normal-dest1017 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br1174:                              ; preds = %tag142
  %irc-bit-cast1178 = bitcast {}* %DAMENINDEX-237065.0 to i8*
  %gep1179 = getelementptr inbounds i8, i8* %irc-bit-cast1178, i64 -9
  %irc-bit-cast1180 = bitcast i8* %gep1179 to i64*
  %387 = load i64, i64* %irc-bit-cast1180, align 8
  %388 = icmp ne i64 %387, 1325
  %brmerge = or i1 %test1184, %388
  br i1 %brmerge, label %tag319, label %header-check-br1181

header-check-br1181:                              ; preds = %header-check-br1174
  %389 = load i64, i64* %irc-bit-cast1187, align 8
  %390 = icmp eq i64 %389, 1325
  br i1 %390, label %tag179, label %tag319

normal-dest1188:                                  ; preds = %tag187
  %391 = invoke double @from_object_double({}* nonnull %y724.0)
          to label %normal-dest1189 unwind label %cleanup-lpad.loopexit

normal-dest1189:                                  ; preds = %normal-dest1188
  %392 = fmul double %133, %391
  %393 = invoke {}* @to_object_double(double %392)
          to label %tag239 unwind label %cleanup-lpad.loopexit

normal-dest1194:                                  ; preds = %tag4
  %ptrtoint1195 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint1196 = add i64 %ptrtoint1195, 7
  %entry-point-addr1197 = inttoptr i64 %entry-point-addr-uint1196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1197, align 8
  %394 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1198({}* %18, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest1201 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest1201:                                  ; preds = %normal-dest1194
  %.elt1868 = extractvalue { {}*, i64 } %394, 0
  %.elt1870 = extractvalue { {}*, i64 } %394, 1
  %cond1772 = icmp eq i64 %.elt1870, 0
  %395 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.1 = select i1 %cond1772, {}* %395, {}* %.elt1868
  br label %tag79.outer.backedge

normal-dest1223:                                  ; preds = %tag193
  %396 = invoke float @from_object_float({}* %y1039.0)
          to label %normal-dest1224 unwind label %cleanup-lpad.loopexit

normal-dest1224:                                  ; preds = %normal-dest1223
  %397 = fadd float %136, %396
  %398 = invoke {}* @to_object_float(float %397)
          to label %tag41 unwind label %cleanup-lpad.loopexit

header-check-br1233:                              ; preds = %header-check-br560
  %.off2180 = add i64 %289, -1001
  %399 = icmp ult i64 %.off2180, 5
  br i1 %399, label %maybe-more-tests1241, label %tag294

maybe-more-tests1241:                             ; preds = %header-check-br1233
  %400 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %401 = invoke {}* @cc_safe_fdefinition({}* %400)
          to label %normal-dest1536 unwind label %cleanup-lpad.loopexit

normal-dest1247:                                  ; preds = %tag207
  %402 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 552), align 16
  %ptrtoint1248 = ptrtoint {}* %152 to i64
  %entry-point-addr-uint1249 = add i64 %ptrtoint1248, 7
  %entry-point-addr1250 = inttoptr i64 %entry-point-addr-uint1249 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1251 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1250, align 8
  %403 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1251({}* %152, i64 2, {}* %.in2050, {}* %402, {}* null, {}* null)
          to label %normal-dest1254 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1254:                                  ; preds = %normal-dest1247
  %.elt2047 = extractvalue { {}*, i64 } %403, 0
  %.elt2049 = extractvalue { {}*, i64 } %403, 1
  %cond1810 = icmp eq i64 %.elt2049, 0
  %404 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOTIMES-VAR.1" = select i1 %cond1810, {}* %404, {}* %.elt2047
  br label %tag235

normal-dest1271:                                  ; preds = %tag206
  %ptrtoint1272 = ptrtoint {}* %150 to i64
  %entry-point-addr-uint1273 = add i64 %ptrtoint1272, 7
  %entry-point-addr1274 = inttoptr i64 %entry-point-addr-uint1273 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1275 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1274, align 8
  %405 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1275({}* %150, i64 2, {}* %X591.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest1278 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1278:                                  ; preds = %normal-dest1271
  %.elt1848 = extractvalue { {}*, i64 } %405, 0
  %.elt1850 = extractvalue { {}*, i64 } %405, 1
  %cond1768 = icmp eq i64 %.elt1850, 0
  %406 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %X591.1 = select i1 %cond1768, {}* %406, {}* %.elt1848
  br label %tag97.backedge

normal-dest1299:                                  ; preds = %tag222
  br i1 %fixnump-test851, label %tag191, label %tag206

header-check-br1322:                              ; preds = %header-check-br1642
  %407 = load i64, i64* %irc-bit-cast1328, align 8
  %408 = icmp eq i64 %407, 1325
  br i1 %408, label %tag140, label %tag29

header-check-br1333:                              ; preds = %tag236
  %irc-bit-cast1337 = bitcast {}* %y724.0 to i8*
  %gep1338 = getelementptr inbounds i8, i8* %irc-bit-cast1337, i64 -9
  %irc-bit-cast1339 = bitcast i8* %gep1338 to i64*
  %409 = load i64, i64* %irc-bit-cast1339, align 8
  %410 = icmp eq i64 %409, 1325
  br i1 %410, label %tag187, label %tag145

normal-dest1353:                                  ; preds = %tag241
  %411 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 553), align 8
  %ptrtoint1354 = ptrtoint {}* %171 to i64
  %entry-point-addr-uint1355 = add i64 %ptrtoint1354, 7
  %entry-point-addr1356 = inttoptr i64 %entry-point-addr-uint1355 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1357 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1356, align 8
  %412 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1357({}* %171, i64 2, {}* %G2095854.0, {}* %411, {}* null, {}* null)
          to label %tag79 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest1368:                                  ; preds = %tag244
  %ptrtoint1369 = ptrtoint {}* %175 to i64
  %entry-point-addr-uint1370 = add i64 %ptrtoint1369, 7
  %entry-point-addr1371 = inttoptr i64 %entry-point-addr-uint1370 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1372 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1371, align 8
  %413 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1372({}* %175, i64 1, {}* %212, {}* null, {}* null, {}* null)
          to label %normal-dest1375 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest1375:                                  ; preds = %normal-dest1368
  %.elt1830 = extractvalue { {}*, i64 } %413, 0
  %.elt1832 = extractvalue { {}*, i64 } %413, 1
  %cond1764 = icmp eq i64 %.elt1832, 0
  %414 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH494.1 = select i1 %cond1764, {}* %414, {}* %.elt1830
  br label %tag245.outer.backedge

header-check-br1389:                              ; preds = %tag252
  %gep1394 = getelementptr inbounds i8, i8* %245, i64 -9
  %irc-bit-cast1395 = bitcast i8* %gep1394 to i64*
  %415 = load i64, i64* %irc-bit-cast1395, align 8
  %.off2187 = add i64 %415, -1081
  %416 = icmp ult i64 %.off2187, 69
  br i1 %416, label %tag98, label %header-check-br1158

header-check-br1398:                              ; preds = %header-check-br1472
  %.off2155 = add i64 %442, -1001
  %417 = icmp ult i64 %.off2155, 5
  br i1 %417, label %maybe-more-tests1406, label %tag180

maybe-more-tests1406:                             ; preds = %header-check-br1398
  %418 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %419 = invoke {}* @cc_safe_fdefinition({}* %418)
          to label %normal-dest951 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1408:                                  ; preds = %tag255
  %420 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint1409 = ptrtoint {}* %186 to i64
  %entry-point-addr-uint1410 = add i64 %ptrtoint1409, 7
  %entry-point-addr1411 = inttoptr i64 %entry-point-addr-uint1410 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1412 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1411, align 8
  %421 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1412({}* %186, i64 2, {}* %FEINDZEILE.0, {}* %420, {}* null, {}* null)
          to label %normal-dest1415 unwind label %cleanup-lpad.loopexit

normal-dest1415:                                  ; preds = %normal-dest1408
  %.elt1909 = extractvalue { {}*, i64 } %421, 0
  %.elt1911 = extractvalue { {}*, i64 } %421, 1
  %cond1781 = icmp eq i64 %.elt1911, 0
  %422 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237073.0 = select i1 %cond1781, {}* %422, {}* %.elt1909
  %423 = icmp eq {}* %G237073.0, %422
  %.val2171 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237414.0 = select i1 %423, {}* %.val2171, {}* %422
  %424 = icmp eq {}* %G237414.0, %422
  br i1 %424, label %tag41, label %tag10

normal-dest1423:                                  ; preds = %tag256
  %425 = invoke float @from_object_float({}* %y724.0)
          to label %normal-dest1424 unwind label %cleanup-lpad.loopexit

normal-dest1424:                                  ; preds = %normal-dest1423
  %426 = fmul float %187, %425
  %427 = invoke {}* @to_object_float(float %426)
          to label %tag239 unwind label %cleanup-lpad.loopexit

header-check-br1426:                              ; preds = %tag9
  %irc-bit-cast1430 = bitcast {}* %ANZAHL_STOERUNGEN.0 to i8*
  %gep1431 = getelementptr inbounds i8, i8* %irc-bit-cast1430, i64 -9
  %irc-bit-cast1432 = bitcast i8* %gep1431 to i64*
  %428 = load i64, i64* %irc-bit-cast1432, align 8
  %429 = icmp eq i64 %428, 1325
  br i1 %429, label %tag236, label %tag145

normal-dest1434:                                  ; preds = %tag260
  %430 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 4), align 16
  %431 = invoke {}* @cc_safe_symbol_value({}* %430)
          to label %normal-dest1435 unwind label %cleanup-lpad.loopexit

normal-dest1435:                                  ; preds = %normal-dest1434
  %ptrtoint1436 = ptrtoint {}* %192 to i64
  %entry-point-addr-uint1437 = add i64 %ptrtoint1436, 7
  %entry-point-addr1438 = inttoptr i64 %entry-point-addr-uint1437 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1439 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1438, align 8
  %432 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1439({}* %192, i64 4, {}* %G237055.0, {}* %G237074.0, {}* %G237070.0, {}* %431)
          to label %normal-dest1442 unwind label %cleanup-lpad.loopexit

normal-dest1442:                                  ; preds = %normal-dest1435
  %.elt1921 = extractvalue { {}*, i64 } %432, 0
  %.elt1923 = extractvalue { {}*, i64 } %432, 1
  switch i64 %.elt1923, label %mvn2- [
    i64 0, label %mvn0-1445
    i64 1, label %mvn1-1446
  ]

mvn0-1445:                                        ; preds = %normal-dest1442
  %433 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final1447

mvn1-1446:                                        ; preds = %normal-dest1442
  %434 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final1447

mvn2-:                                            ; preds = %normal-dest1442
  %435 = load {}*, {}** %gep1448, align 8
  br label %mvn-final1447

mvn-final1447:                                    ; preds = %mvn2-, %mvn1-1446, %mvn0-1445
  %DAME1237076.0 = phi {}* [ %.elt1921, %mvn2- ], [ %.elt1921, %mvn1-1446 ], [ %433, %mvn0-1445 ]
  %DAME2237077.0 = phi {}* [ %435, %mvn2- ], [ %434, %mvn1-1446 ], [ %433, %mvn0-1445 ]
  %436 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 556), align 16
  %437 = invoke {}* @cc_safe_fdefinition({}* %436)
          to label %normal-dest1450 unwind label %cleanup-lpad.loopexit

normal-dest1450:                                  ; preds = %mvn-final1447
  %ptrtoint1451 = ptrtoint {}* %437 to i64
  %entry-point-addr-uint1452 = add i64 %ptrtoint1451, 7
  %entry-point-addr1453 = inttoptr i64 %entry-point-addr-uint1452 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1454 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1453, align 8
  %438 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1454({}* %437, i64 2, {}* %FEINDZEILE.0, {}* %G237070.0, {}* null, {}* null)
          to label %normal-dest1457 unwind label %cleanup-lpad.loopexit

normal-dest1457:                                  ; preds = %normal-dest1450
  %.elt1925 = extractvalue { {}*, i64 } %438, 0
  %.elt1927 = extractvalue { {}*, i64 } %438, 1
  %cond1784 = icmp eq i64 %.elt1927, 0
  %439 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237389.0 = select i1 %cond1784, {}* %439, {}* %.elt1925
  %440 = icmp eq {}* %G237389.0, %439
  %.2089 = select i1 %440, {}* null, {}* inttoptr (i64 4 to {}*)
  %441 = icmp eq {}* %DAME1237076.0, %439
  br i1 %441, label %tag202, label %tag63

normal-dest1471:                                  ; preds = %tag266
  %ptrtoint1473 = ptrtoint {}* %195 to i64
  %tag-only1474 = and i64 %ptrtoint1473, 7
  %test1475 = icmp eq i64 %tag-only1474, 1
  br i1 %test1475, label %header-check-br1472, label %tag180

header-check-br1472:                              ; preds = %normal-dest1471
  %irc-bit-cast1476 = bitcast {}* %195 to i8*
  %gep1477 = getelementptr inbounds i8, i8* %irc-bit-cast1476, i64 -9
  %irc-bit-cast1478 = bitcast i8* %gep1477 to i64*
  %442 = load i64, i64* %irc-bit-cast1478, align 8
  %.off = add i64 %442, -913
  %443 = icmp ult i64 %.off, 85
  br i1 %443, label %tag222, label %header-check-br1398

header-check-br1481:                              ; preds = %tag268
  %gep1486 = getelementptr inbounds i8, i8* %328, i64 -9
  %irc-bit-cast1487 = bitcast i8* %gep1486 to i64*
  %444 = load i64, i64* %irc-bit-cast1487, align 8
  %445 = icmp eq i64 %444, 1309
  br i1 %445, label %tag71, label %tag143

normal-dest1501:                                  ; preds = %tag321
  %ptrtoint1502 = ptrtoint {}* %233 to i64
  %entry-point-addr-uint1503 = add i64 %ptrtoint1502, 7
  %entry-point-addr1504 = inttoptr i64 %entry-point-addr-uint1503 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1505 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1504, align 8
  %446 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1505({}* %233, i64 2, {}* %ANZAHL_STOERUNGEN.2, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest1508 unwind label %cleanup-lpad.loopexit

normal-dest1508:                                  ; preds = %normal-dest1501
  %.elt1943 = extractvalue { {}*, i64 } %446, 0
  %.elt1945 = extractvalue { {}*, i64 } %446, 1
  %cond1791 = icmp eq i64 %.elt1945, 0
  %447 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ANZAHL_STOERUNGEN.6 = select i1 %cond1791, {}* %447, {}* %.elt1943
  br label %tag81

normal-dest1516:                                  ; preds = %tag277
  %448 = invoke float @from_object_float({}* %.in1955)
          to label %normal-dest1517 unwind label %cleanup-lpad.loopexit

normal-dest1517:                                  ; preds = %normal-dest1516
  %449 = fdiv float %197, %448
  %450 = invoke {}* @to_object_float(float %449)
          to label %tag203 unwind label %cleanup-lpad.loopexit

normal-dest1520:                                  ; preds = %tag278
  %451 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 549), align 8
  %ptrtoint1521 = ptrtoint {}* %199 to i64
  %entry-point-addr-uint1522 = add i64 %ptrtoint1521, 7
  %entry-point-addr1523 = inttoptr i64 %entry-point-addr-uint1522 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1524 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1523, align 8
  %452 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1524({}* %199, i64 2, {}* %.in2068, {}* %451, {}* null, {}* null)
          to label %normal-dest1527 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1527:                                  ; preds = %normal-dest1520
  %.elt2065 = extractvalue { {}*, i64 } %452, 0
  %.elt2067 = extractvalue { {}*, i64 } %452, 1
  %cond1813 = icmp eq i64 %.elt2067, 0
  %453 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOTIMES-VAR691.1" = select i1 %cond1813, {}* %453, {}* %.elt2065
  br label %tag65

normal-dest1536:                                  ; preds = %maybe-more-tests1241
  %ptrtoint1537 = ptrtoint {}* %401 to i64
  %entry-point-addr-uint1538 = add i64 %ptrtoint1537, 7
  %entry-point-addr1539 = inttoptr i64 %entry-point-addr-uint1538 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1540 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1539, align 8
  %454 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1540({}* %401, i64 1, {}* nonnull %288, {}* null, {}* null, {}* null)
          to label %normal-dest1543 unwind label %cleanup-lpad.loopexit

normal-dest1543:                                  ; preds = %normal-dest1536
  %.elt1988 = extractvalue { {}*, i64 } %454, 0
  %.elt1990 = extractvalue { {}*, i64 } %454, 1
  %cond1802 = icmp eq i64 %.elt1990, 0
  %455 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237202.1 = select i1 %cond1802, {}* %455, {}* %.elt1988
  br label %tag74

normal-dest1551:                                  ; preds = %tag283
  %ptrtoint1552 = ptrtoint {}* %204 to i64
  %entry-point-addr-uint1553 = add i64 %ptrtoint1552, 7
  %entry-point-addr1554 = inttoptr i64 %entry-point-addr-uint1553 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1555 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1554, align 8
  %456 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1555({}* %204, i64 1, {}* %135, {}* null, {}* null, {}* null)
          to label %normal-dest1558 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1558:                                  ; preds = %normal-dest1551
  %.elt1852 = extractvalue { {}*, i64 } %456, 0
  %.elt1854 = extractvalue { {}*, i64 } %456, 1
  %cond1769 = icmp eq i64 %.elt1854, 0
  %457 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %X591.2 = select i1 %cond1769, {}* %457, {}* %.elt1852
  br label %tag97.backedge

normal-dest1573:                                  ; preds = %tag289
  %ptrtoint1574 = ptrtoint {}* %210 to i64
  %entry-point-addr-uint1575 = add i64 %ptrtoint1574, 7
  %entry-point-addr1576 = inttoptr i64 %entry-point-addr-uint1575 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1577 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1576, align 8
  %458 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1577({}* %210, i64 2, {}* %LENGTH494.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest1580 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest1580:                                  ; preds = %normal-dest1573
  %.elt1826 = extractvalue { {}*, i64 } %458, 0
  %.elt1828 = extractvalue { {}*, i64 } %458, 1
  %cond1763 = icmp eq i64 %.elt1828, 0
  %459 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH494.2 = select i1 %cond1763, {}* %459, {}* %.elt1826
  br label %tag245.outer.backedge

normal-dest1590:                                  ; preds = %tag294
  %460 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %461 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %462 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %463 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 562), align 16
  %ptrtoint1591 = ptrtoint {}* %214 to i64
  %entry-point-addr-uint1592 = add i64 %ptrtoint1591, 7
  %entry-point-addr1593 = inttoptr i64 %entry-point-addr-uint1592 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1594 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1593, align 8
  %464 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1594({}* %214, i64 5, {}* %460, {}* %461, {}* %288, {}* %462, {}* %463)
          to label %normal-dest1597 unwind label %cleanup-lpad.loopexit

normal-dest1597:                                  ; preds = %normal-dest1590
  %.elt1975 = extractvalue { {}*, i64 } %464, 0
  %.elt1977 = extractvalue { {}*, i64 } %464, 1
  %cond1800 = icmp eq i64 %.elt1977, 0
  %465 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237202.2 = select i1 %cond1800, {}* %465, {}* %.elt1975
  br label %tag74

normal-dest1610:                                  ; preds = %maybe-more-tests1053
  %ptrtoint1611 = ptrtoint {}* %365 to i64
  %entry-point-addr-uint1612 = add i64 %ptrtoint1611, 7
  %entry-point-addr1613 = inttoptr i64 %entry-point-addr-uint1612 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1614 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1613, align 8
  %466 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1614({}* %365, i64 1, {}* nonnull %.in2050, {}* null, {}* null, {}* null)
          to label %normal-dest1617 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1617:                                  ; preds = %normal-dest1610
  %.elt2052 = extractvalue { {}*, i64 } %466, 0
  %.elt2054 = extractvalue { {}*, i64 } %466, 1
  %cond1811 = icmp eq i64 %.elt2054, 0
  %467 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237757.0 = select i1 %cond1811, {}* %467, {}* %.elt2052
  %468 = icmp eq {}* %G237757.0, inttoptr (i64 4 to {}*)
  %G237547.0.pre.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br i1 %468, label %tag5, label %tag106

normal-dest1629:                                  ; preds = %tag299
  %469 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %470 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %471 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %472 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint1630 = ptrtoint {}* %219 to i64
  %entry-point-addr-uint1631 = add i64 %ptrtoint1630, 7
  %entry-point-addr1632 = inttoptr i64 %entry-point-addr-uint1631 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1633 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1632, align 8
  %473 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1633({}* %219, i64 5, {}* %469, {}* %470, {}* %SEQUENCE.0.ph, {}* %471, {}* %472)
          to label %normal-dest1636 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest1636:                                  ; preds = %normal-dest1629
  %.elt2061 = extractvalue { {}*, i64 } %473, 0
  %.elt2063 = extractvalue { {}*, i64 } %473, 1
  %cond1812 = icmp eq i64 %.elt2063, 0
  %474 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G2095854489.1 = select i1 %cond1812, {}* %474, {}* %.elt2061
  br label %tag153

header-check-br1642:                              ; preds = %tag132
  %irc-bit-cast1646 = bitcast {}* %X591.0 to i8*
  %gep1647 = getelementptr inbounds i8, i8* %irc-bit-cast1646, i64 -9
  %irc-bit-cast1648 = bitcast i8* %gep1647 to i64*
  %475 = load i64, i64* %irc-bit-cast1648, align 8
  %476 = icmp ne i64 %475, 1325
  %brmerge2214 = or i1 %test1325, %476
  br i1 %brmerge2214, label %tag29, label %header-check-br1322

normal-dest1671:                                  ; preds = %tag314
  %477 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %478 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %479 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %480 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint1672 = ptrtoint {}* %223 to i64
  %entry-point-addr-uint1673 = add i64 %ptrtoint1672, 7
  %entry-point-addr1674 = inttoptr i64 %entry-point-addr-uint1673 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1675 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1674, align 8
  %481 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1675({}* %223, i64 5, {}* %477, {}* %478, {}* %"%DOLIST-VAR.02211", {}* %479, {}* %480)
          to label %normal-dest1678 unwind label %cleanup-lpad.loopexit

normal-dest1678:                                  ; preds = %normal-dest1671
  %.elt1984 = extractvalue { {}*, i64 } %481, 0
  %.elt1986 = extractvalue { {}*, i64 } %481, 1
  %cond1801 = icmp eq i64 %.elt1986, 0
  %482 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond1801, {}* %482, {}* %.elt1984
  br label %tag226.backedge

normal-dest1685:                                  ; preds = %tag316
  %ptrtoint1686 = ptrtoint {}* %225 to i64
  %entry-point-addr-uint1687 = add i64 %ptrtoint1686, 7
  %entry-point-addr1688 = inttoptr i64 %entry-point-addr-uint1687 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1689 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1688, align 8
  %483 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1689({}* %225, i64 1, {}* %201, {}* null, {}* null, {}* null)
          to label %normal-dest1692 unwind label %cleanup-lpad.loopexit

normal-dest1692:                                  ; preds = %normal-dest1685
  %.elt1998 = extractvalue { {}*, i64 } %483, 0
  %.elt2000 = extractvalue { {}*, i64 } %483, 1
  %cond1792 = icmp eq i64 %.elt2000, 0
  %484 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ANZAHL_STOERUNGEN.7 = select i1 %cond1792, {}* %484, {}* %.elt1998
  br label %tag81

normal-dest1700:                                  ; preds = %tag36
  %ptrtoint1701 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint1702 = add i64 %ptrtoint1701, 7
  %entry-point-addr1703 = inttoptr i64 %entry-point-addr-uint1702 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1704 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1703, align 8
  %485 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1704({}* %36, i64 2, {}* %DAMENINDEX-237065.0, {}* %208, {}* null, {}* null)
          to label %normal-dest1707 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1707:                                  ; preds = %normal-dest1700
  %.elt1892 = extractvalue { {}*, i64 } %485, 0
  %.elt1894 = extractvalue { {}*, i64 } %485, 1
  %cond1777 = icmp eq i64 %.elt1894, 0
  %486 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237481.1 = select i1 %cond1777, {}* %486, {}* %.elt1892
  br label %tag151

normal-dest1714:                                  ; preds = %tag319
  %ptrtoint1715 = ptrtoint {}* %231 to i64
  %entry-point-addr-uint1716 = add i64 %ptrtoint1715, 7
  %entry-point-addr1717 = inttoptr i64 %entry-point-addr-uint1716 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1718 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1717, align 8
  %487 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1718({}* %231, i64 2, {}* %DAMENINDEX-237065.0, {}* %"%DOTIMES-VAR.0", {}* null, {}* null)
          to label %normal-dest1721 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1721:                                  ; preds = %normal-dest1714
  %.elt1877 = extractvalue { {}*, i64 } %487, 0
  %.elt1879 = extractvalue { {}*, i64 } %487, 1
  %cond1774 = icmp eq i64 %.elt1879, 0
  %488 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237134.1 = select i1 %cond1774, {}* %488, {}* %.elt1877
  br label %tag253

normal-dest1747:                                  ; preds = %tag330
  %ptrtoint1748 = ptrtoint {}* %236 to i64
  %entry-point-addr-uint1749 = add i64 %ptrtoint1748, 7
  %entry-point-addr1750 = inttoptr i64 %entry-point-addr-uint1749 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1751 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1750, align 8
  %489 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1751({}* %236, i64 1, {}* %157, {}* null, {}* null, {}* null)
          to label %normal-dest1754 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest1754:                                  ; preds = %normal-dest1747
  %.elt1872 = extractvalue { {}*, i64 } %489, 0
  %.elt1874 = extractvalue { {}*, i64 } %489, 1
  %cond1773 = icmp eq i64 %.elt1874, 0
  %490 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.2 = select i1 %cond1773, {}* %490, {}* %.elt1872
  br label %tag79.outer.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^393^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !87 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^393^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G237793.0 = phi {}* [ %18, %header-check-br ], [ %G237793.1, %normal-dest17 ], [ %G237793.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 556), align 16
  %ptrtoint29 = ptrtoint {}* %G237793.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G237793.0, i64 2, {}* %"closure->ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests28, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 556), align 16
  %"closure->ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 13823, i64 393, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br20

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 567), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237793.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag3

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %27 = icmp ult i64 %.off106, 5
  br i1 %27, label %maybe-more-tests28, label %tag

maybe-more-tests28:                               ; preds = %header-check-br20
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag3
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 568), align 16
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 571), align 8
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 1572 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 556), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests28
  %ptrtoint70 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %29, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237793.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !88 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc229 unwind label %cleanup-lpad

.noexc229:                                        ; preds = %13
  unreachable

tag2:                                             ; preds = %tag42
  br i1 %fixnump-test128, label %tag26, label %tag19

tag4:                                             ; preds = %tag30
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest68 unwind label %cleanup-lpad

tag6:                                             ; preds = %tag32
  %16 = icmp sgt {}* %farg1, inttoptr (i64 -1 to {}*)
  %.235 = select i1 %16, {}* %.val, {}* %49
  br label %tag42

tag14:                                            ; preds = %normal-dest180, %normal-dest143, %normal-dest75, %tag41
  %17 = phi {}* [ %41, %tag41 ], [ %58, %normal-dest75 ], [ %63, %normal-dest143 ], [ %71, %normal-dest180 ]
  %x76.0 = phi {}* [ %36, %tag41 ], [ %x76.1, %normal-dest75 ], [ %x76.2, %normal-dest143 ], [ %x76.3, %normal-dest180 ]
  %18 = icmp eq {}* %x76.0, %17
  %.val238 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %19 = select i1 %18, {}* %.val238, {}* %17
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %20 = insertvalue { {}*, i64 } undef, {}* %19, 0
  %21 = insertvalue { {}*, i64 } %20, i64 1, 1
  ret { {}*, i64 } %21

tag19:                                            ; preds = %tag2
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest94 unwind label %cleanup-lpad

tag26:                                            ; preds = %tag2
  %24 = icmp sgt i64 %"tag fixnum", %26
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.236 = select i1 %24, {}* %25, {}* %37
  br label %tag45

tag30:                                            ; preds = %tag48
  %26 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only127201 = and i64 %26, 3
  %fixnump-test128 = icmp eq i64 %fixnum-tag-only127201, 0
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G237886.0 = select i1 %fixnump-test128, {}* %.val, {}* %49
  %27 = icmp eq {}* %G237886.0, %49
  br i1 %27, label %tag4, label %tag32

tag32:                                            ; preds = %tag30
  %28 = add i64 %ptrtoint60, 7
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 8
  %"tag fixnum" = shl nuw i64 %30, 2
  %31 = inttoptr i64 %"tag fixnum" to {}*
  br i1 %fixnump-test128, label %tag6, label %tag36

tag35:                                            ; preds = %tag42, %tag45
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest136 unwind label %cleanup-lpad

tag36:                                            ; preds = %tag32
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest150 unwind label %cleanup-lpad

tag37:                                            ; preds = %header-check-br, %normal-dest57
  br label %tag48

tag41:                                            ; preds = %tag45
  %"untagged fixnum" = lshr exact i64 %26, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %50, i64 0, i32 1, i64 %"untagged fixnum"
  %36 = load {}*, {}** %aref, align 8
  br label %tag14

tag42:                                            ; preds = %tag6, %normal-dest157
  %37 = phi {}* [ %65, %normal-dest157 ], [ %49, %tag6 ]
  %G237862.0 = phi {}* [ %G237862.1, %normal-dest157 ], [ %.235, %tag6 ]
  %38 = icmp eq {}* %G237862.0, %37
  br i1 %38, label %tag35, label %tag2

tag43:                                            ; preds = %tag48
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest173 unwind label %cleanup-lpad

tag45:                                            ; preds = %tag26, %normal-dest101
  %41 = phi {}* [ %60, %normal-dest101 ], [ %37, %tag26 ]
  %G237839.0 = phi {}* [ %G237839.1, %normal-dest101 ], [ %.236, %tag26 ]
  %42 = icmp eq {}* %G237839.0, %41
  br i1 %42, label %tag35, label %tag41

tag48:                                            ; preds = %header-check-br, %tag37
  %G237889.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag37 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br ]
  %G237889.0 = load {}*, {}** %G237889.0.in, align 16
  %43 = icmp eq {}* %G237889.0, %49
  br i1 %43, label %tag43, label %tag30

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest173, %tag43, %normal-dest150, %tag36, %normal-dest136, %tag35, %normal-dest94, %tag19, %normal-dest68, %tag4, %normal-dest54, %normal-dest
  %44 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %44

normal-dest:                                      ; preds = %11
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint = ptrtoint {}* %46 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %46, i64 2, {}* %farg0, {}* %47, {}* null, {}* null)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest54
  %.elt = extractvalue { {}*, i64 } %48, 0
  %.elt200 = extractvalue { {}*, i64 } %48, 1
  %cond = icmp eq i64 %.elt200, 0
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %49, {}* %.elt
  %50 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %ptrtoint60 = ptrtoint {}* %.in to i64
  %tag-only = and i64 %ptrtoint60, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag37

header-check-br:                                  ; preds = %normal-dest57
  %irc-bit-cast61 = bitcast {}* %.in to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast61, i64 -9
  %irc-bit-cast62 = bitcast i8* %gep to i64*
  %51 = load i64, i64* %irc-bit-cast62, align 8
  %52 = icmp eq i64 %51, 1137
  br i1 %52, label %tag48, label %tag37

normal-dest68:                                    ; preds = %tag4
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint69 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %15, i64 5, {}* %53, {}* %54, {}* %farg1, {}* %55, {}* %56)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %.elt220 = extractvalue { {}*, i64 } %57, 0
  %.elt222 = extractvalue { {}*, i64 } %57, 1
  %cond197 = icmp eq i64 %.elt222, 0
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x76.1 = select i1 %cond197, {}* %58, {}* %.elt220
  br label %tag14

normal-dest94:                                    ; preds = %tag19
  %ptrtoint95 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint96 = add i64 %ptrtoint95, 7
  %entry-point-addr97 = inttoptr i64 %entry-point-addr-uint96 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point98 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr97, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point98({}* %23, i64 2, {}* %farg1, {}* %31, {}* null, {}* null)
          to label %normal-dest101 unwind label %cleanup-lpad

normal-dest101:                                   ; preds = %normal-dest94
  %.elt209 = extractvalue { {}*, i64 } %59, 0
  %.elt211 = extractvalue { {}*, i64 } %59, 1
  %cond195 = icmp eq i64 %.elt211, 0
  %60 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237839.1 = select i1 %cond195, {}* %60, {}* %.elt209
  br label %tag45

normal-dest136:                                   ; preds = %tag35
  %61 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint137 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint138 = add i64 %ptrtoint137, 7
  %entry-point-addr139 = inttoptr i64 %entry-point-addr-uint138 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point140 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr139, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point140({}* %33, i64 3, {}* %61, {}* %farg1, {}* %31, {}* null)
          to label %normal-dest143 unwind label %cleanup-lpad

normal-dest143:                                   ; preds = %normal-dest136
  %.elt216 = extractvalue { {}*, i64 } %62, 0
  %.elt218 = extractvalue { {}*, i64 } %62, 1
  %cond196 = icmp eq i64 %.elt218, 0
  %63 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x76.2 = select i1 %cond196, {}* %63, {}* %.elt216
  br label %tag14

normal-dest150:                                   ; preds = %tag36
  %ptrtoint151 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint152 = add i64 %ptrtoint151, 7
  %entry-point-addr153 = inttoptr i64 %entry-point-addr-uint152 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point154 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr153, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point154({}* %35, i64 2, {}* null, {}* %farg1, {}* null, {}* null)
          to label %normal-dest157 unwind label %cleanup-lpad

normal-dest157:                                   ; preds = %normal-dest150
  %.elt204 = extractvalue { {}*, i64 } %64, 0
  %.elt206 = extractvalue { {}*, i64 } %64, 1
  %cond194 = icmp eq i64 %.elt206, 0
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237862.1 = select i1 %cond194, {}* %65, {}* %.elt204
  br label %tag42

normal-dest173:                                   ; preds = %tag43
  %66 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %68 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint174 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint175 = add i64 %ptrtoint174, 7
  %entry-point-addr176 = inttoptr i64 %entry-point-addr-uint175 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point177 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr176, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point177({}* %40, i64 5, {}* %66, {}* %67, {}* %.in, {}* %68, {}* %69)
          to label %normal-dest180 unwind label %cleanup-lpad

normal-dest180:                                   ; preds = %normal-dest173
  %.elt224 = extractvalue { {}*, i64 } %70, 0
  %.elt226 = extractvalue { {}*, i64 } %70, 1
  %cond198 = icmp eq i64 %.elt226, 0
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x76.3 = select i1 %cond198, {}* %71, {}* %.elt224
  br label %tag14
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^398^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !89 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^398^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G237915.0 = phi {}* [ %18, %header-check-br ], [ %G237915.1, %normal-dest17 ], [ %G237915.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 554), align 16
  %ptrtoint43 = ptrtoint {}* %G237915.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G237915.0, i64 2, {}* %"closure->ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 554), align 16
  %"closure->ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 13978, i64 398, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237915.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 575), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237915.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag2

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 576), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 585), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1592 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 554), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !90 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %11 = icmp ult i64 %nargs, 4
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %12
  unreachable

; <label>:13:                                     ; preds = %entry
  %14 = icmp eq i64 %nargs, 4
  br i1 %14, label %normal-dest, label %15

; <label>:15:                                     ; preds = %13
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc465 unwind label %cleanup-lpad

.noexc465:                                        ; preds = %15
  unreachable

tag:                                              ; preds = %normal-dest338
  %trunc476 = trunc i64 %156 to i3
  switch i3 %trunc476, label %tag57 [
    i3 -2, label %tag39
    i3 1, label %header-check-br211
  ]

tag1:                                             ; preds = %tag39
  %16 = invoke float @from_object_float({}* %.in)
          to label %normal-dest98 unwind label %cleanup-lpad

tag2:                                             ; preds = %header-check-br224
  %17 = invoke double @from_object_double({}* nonnull %DIA1_OBJEKT.0)
          to label %normal-dest103 unwind label %cleanup-lpad

tag3:                                             ; preds = %tag74
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest106 unwind label %cleanup-lpad

tag4:                                             ; preds = %tag87
  %20 = ptrtoint {}* %farg3 to i64
  %fixnum-tag-only112448 = and i64 %20, 3
  %fixnump-test113 = icmp eq i64 %fixnum-tag-only112448, 0
  br i1 %fixnump-test113, label %tag33, label %tag53

tag5:                                             ; preds = %normal-dest189
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag32

tag7:                                             ; preds = %normal-dest268, %normal-dest222, %normal-dest109, %normal-dest100, %tag74
  %.pre-phi = phi i64 [ %.pre, %normal-dest268 ], [ %ptrtoint142, %normal-dest222 ], [ %28, %normal-dest109 ], [ %50, %normal-dest100 ], [ %28, %tag74 ]
  %DIA1_OBJEKT.0 = phi {}* [ %DIA1_OBJEKT.2, %normal-dest268 ], [ %133, %normal-dest222 ], [ %DIA1_OBJEKT.1, %normal-dest109 ], [ %100, %normal-dest100 ], [ %81, %tag74 ]
  %fixnum-tag-only118433 = and i64 %.pre-phi, 3
  %fixnump-test119 = icmp eq i64 %fixnum-tag-only118433, 0
  br i1 %fixnump-test119, label %tag63, label %tag27

tag8:                                             ; preds = %tag19, %header-check-br190, %tag31, %header-check-br162, %tag18, %tag16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 446), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest121 unwind label %cleanup-lpad

tag9:                                             ; preds = %tag18
  %24 = icmp eq {}* %farg1, %farg0
  br i1 %24, label %tag30, label %tag35

tag10:                                            ; preds = %header-check-br197
  %ptrtoint135 = ptrtoint {}* %farg1 to i64
  %tag-only = and i64 %ptrtoint135, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag88

tag12:                                            ; preds = %tag89, %tag20
  %return-value.sroa.0.0 = phi i64 [ %35, %tag20 ], [ %46, %tag89 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %25 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %26 = insertvalue { {}*, i64 } undef, {}* %25, 0
  %27 = insertvalue { {}*, i64 } %26, i64 2, 1
  ret { {}*, i64 } %27

tag13:                                            ; preds = %normal-dest338
  %28 = ptrtoint {}* %farg2 to i64
  %fixnum-tag-only139454 = and i64 %28, 3
  %fixnump-test140 = icmp eq i64 %fixnum-tag-only139454, 0
  br i1 %fixnump-test140, label %tag74, label %tag57

tag14:                                            ; preds = %header-check-br211
  %ptrtoint142 = ptrtoint {}* %farg2 to i64
  %tag-only143 = and i64 %ptrtoint142, 7
  %test144 = icmp eq i64 %tag-only143, 1
  br i1 %test144, label %header-check-br141, label %tag57

tag15:                                            ; preds = %tag33
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag54

tag16:                                            ; preds = %tag19
  %30 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only148 = and i64 %30, 7
  %31 = icmp eq i64 %single-float-tag-only148, 6
  br i1 %31, label %tag77, label %tag8

tag18:                                            ; preds = %normal-dest
  %32 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only149464 = and i64 %32, 3
  %fixnump-test150 = icmp eq i64 %fixnum-tag-only149464, 0
  br i1 %fixnump-test150, label %tag9, label %tag8

tag19:                                            ; preds = %normal-dest
  %trunc = trunc i64 %97 to i3
  switch i3 %trunc, label %tag8 [
    i3 -2, label %tag16
    i3 1, label %header-check-br162
  ]

tag20:                                            ; preds = %tag92, %normal-dest361
  %33 = phi {}* [ %160, %normal-dest361 ], [ %64, %tag92 ]
  %G237935.0 = phi {}* [ %G237935.1, %normal-dest361 ], [ %., %tag92 ]
  %34 = icmp eq {}* %G237935.0, %33
  %G237934.0 = select i1 %34, {}* %DIA2_OBJEKT.0, {}* %33
  %35 = ptrtoint {}* %G237933.0 to i64
  %gep350 = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  store {}* %G237934.0, {}** %gep350, align 8
  br label %tag12

tag21:                                            ; preds = %tag27
  %single-float-tag-only152 = and i64 %156, 7
  %36 = icmp eq i64 %single-float-tag-only152, 6
  br i1 %36, label %tag47, label %tag25

tag22:                                            ; preds = %normal-dest325
  %trunc475 = trunc i64 %97 to i3
  switch i3 %trunc475, label %tag88 [
    i3 -2, label %tag26
    i3 1, label %header-check-br197
  ]

tag25:                                            ; preds = %tag27, %header-check-br281, %tag63, %header-check-br231, %tag21
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 201), align 8
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest170 unwind label %cleanup-lpad

tag26:                                            ; preds = %tag22
  %39 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only183 = and i64 %39, 7
  %40 = icmp eq i64 %single-float-tag-only183, 6
  br i1 %40, label %tag60, label %tag88

tag27:                                            ; preds = %tag7
  %trunc477 = trunc i64 %.pre-phi to i3
  switch i3 %trunc477, label %tag25 [
    i3 -2, label %tag21
    i3 1, label %header-check-br281
  ]

tag28:                                            ; preds = %header-check-br231
  %41 = invoke double @from_object_double({}* nonnull %farg2)
          to label %normal-dest185 unwind label %cleanup-lpad

tag29:                                            ; preds = %header-check-br190
  %42 = invoke double @from_object_double({}* nonnull %farg0)
          to label %normal-dest188 unwind label %cleanup-lpad

tag30:                                            ; preds = %tag9
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag32

tag31:                                            ; preds = %header-check-br162
  %ptrtoint191 = ptrtoint {}* %farg1 to i64
  %tag-only192 = and i64 %ptrtoint191, 7
  %test193 = icmp eq i64 %tag-only192, 1
  br i1 %test193, label %header-check-br190, label %tag8

tag32:                                            ; preds = %normal-dest128, %tag91, %tag82, %tag66, %tag35, %tag30, %tag5
  %G238065.0 = phi {}* [ %43, %tag30 ], [ %48, %tag35 ], [ %84, %tag82 ], [ %73, %tag66 ], [ %93, %tag91 ], [ %21, %tag5 ], [ %G238065.1, %normal-dest128 ]
  %44 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %45 = icmp eq {}* %G238065.0, %44
  %46 = ptrtoint {}* %44 to i64
  br i1 %45, label %tag73, label %tag89

tag33:                                            ; preds = %tag4
  %47 = icmp slt {}* %DIA1_OBJEKT.0, %farg3
  br i1 %47, label %tag50, label %tag15

tag35:                                            ; preds = %tag9
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag32

tag38:                                            ; preds = %normal-dest401
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag54

tag39:                                            ; preds = %tag
  %50 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only208 = and i64 %50, 7
  %51 = icmp eq i64 %single-float-tag-only208, 6
  br i1 %51, label %tag1, label %tag57

tag41:                                            ; preds = %normal-dest325
  %52 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only209459 = and i64 %52, 3
  %fixnump-test210 = icmp eq i64 %fixnum-tag-only209459, 0
  br i1 %fixnump-test210, label %tag52, label %tag88

tag43:                                            ; preds = %header-check-br
  %53 = invoke double @from_object_double({}* nonnull %farg0)
          to label %normal-dest218 unwind label %cleanup-lpad

tag44:                                            ; preds = %header-check-br141
  %54 = invoke double @from_object_double({}* nonnull %.in)
          to label %normal-dest221 unwind label %cleanup-lpad

tag45:                                            ; preds = %header-check-br155
  %ptrtoint225 = ptrtoint {}* %farg3 to i64
  %tag-only226 = and i64 %ptrtoint225, 7
  %test227 = icmp eq i64 %tag-only226, 1
  br i1 %test227, label %header-check-br224, label %tag53

tag47:                                            ; preds = %tag21
  %55 = invoke float @from_object_float({}* %farg2)
          to label %normal-dest238 unwind label %cleanup-lpad

tag49:                                            ; preds = %normal-dest105
  %56 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag54

tag50:                                            ; preds = %tag33
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag54

tag51:                                            ; preds = %tag63
  %58 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %.pre-phi, i64 %156)
  %result = extractvalue { i64, i1 } %58, 0
  %overflow = extractvalue { i64, i1 } %58, 1
  %59 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag68, label %tag87

tag52:                                            ; preds = %tag41
  %60 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %97, i64 %52)
  %result242 = extractvalue { i64, i1 } %60, 0
  %overflow243 = extractvalue { i64, i1 } %60, 1
  %61 = inttoptr i64 %result242 to {}*
  br i1 %overflow243, label %tag70, label %tag75

tag53:                                            ; preds = %tag71, %tag84, %header-check-br224, %tag45, %header-check-br155, %tag4
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 573), align 8
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest245 unwind label %cleanup-lpad

tag54:                                            ; preds = %normal-dest252, %tag86, %tag61, %tag50, %tag49, %tag38, %tag15
  %G237959.0 = phi {}* [ %29, %tag15 ], [ %57, %tag50 ], [ %87, %tag86 ], [ %49, %tag38 ], [ %70, %tag61 ], [ %56, %tag49 ], [ %G237959.1, %normal-dest252 ]
  %64 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %65 = icmp eq {}* %G237959.0, %64
  %G237933.0 = select i1 %65, {}* %DIA1_OBJEKT.0, {}* %64
  %66 = ptrtoint {}* %DIA2_OBJEKT.0 to i64
  %fixnum-tag-only377443 = and i64 %66, 3
  %fixnump-test378 = icmp eq i64 %fixnum-tag-only377443, 0
  br i1 %fixnump-test378, label %tag92, label %tag62

tag57:                                            ; preds = %tag, %header-check-br211, %tag39, %header-check-br141, %tag14, %tag13
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest261 unwind label %cleanup-lpad

tag60:                                            ; preds = %tag26
  %69 = invoke float @from_object_float({}* %farg0)
          to label %normal-dest275 unwind label %cleanup-lpad

tag61:                                            ; preds = %normal-dest105
  %70 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag54

tag62:                                            ; preds = %tag54
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest354 unwind label %cleanup-lpad

tag63:                                            ; preds = %tag7
  br i1 %fixnump-test347, label %tag51, label %tag25

tag66:                                            ; preds = %normal-dest352
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag32

tag68:                                            ; preds = %tag51
  %74 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest296 unwind label %cleanup-lpad

tag70:                                            ; preds = %tag52
  %76 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest310 unwind label %cleanup-lpad

tag71:                                            ; preds = %tag87
  %trunc478 = trunc i64 %88 to i3
  switch i3 %trunc478, label %tag53 [
    i3 -2, label %tag84
    i3 1, label %header-check-br155
  ]

tag73:                                            ; preds = %tag32
  %78 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 199), align 8
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest325 unwind label %cleanup-lpad

tag74:                                            ; preds = %tag13
  %80 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %156, i64 %28)
  %result330 = extractvalue { i64, i1 } %80, 0
  %overflow331 = extractvalue { i64, i1 } %80, 1
  %81 = inttoptr i64 %result330 to {}*
  br i1 %overflow331, label %tag3, label %tag7

tag75:                                            ; preds = %normal-dest391, %normal-dest317, %normal-dest276, %normal-dest219, %tag52
  %G238035.0 = phi {}* [ %61, %tag52 ], [ %130, %normal-dest219 ], [ %147, %normal-dest276 ], [ %G238035.1, %normal-dest317 ], [ %G238035.2, %normal-dest391 ]
  %ptrtoint332 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint333 = add i64 %ptrtoint332, 7
  %entry-point-addr334 = inttoptr i64 %entry-point-addr-uint333 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point335 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr334, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point335({}* %79, i64 1, {}* %G238035.0, {}* null, {}* null, {}* null)
          to label %normal-dest338 unwind label %cleanup-lpad

tag77:                                            ; preds = %tag16
  %83 = invoke float @from_object_float({}* %farg0)
          to label %normal-dest351 unwind label %cleanup-lpad

tag82:                                            ; preds = %normal-dest352
  %84 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag32

tag84:                                            ; preds = %tag71
  %85 = ptrtoint {}* %farg3 to i64
  %single-float-tag-only374 = and i64 %85, 7
  %86 = icmp eq i64 %single-float-tag-only374, 6
  br i1 %86, label %tag90, label %tag53

tag86:                                            ; preds = %normal-dest401
  %87 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag54

tag87:                                            ; preds = %normal-dest303, %normal-dest239, %normal-dest186, %normal-dest177, %tag51
  %DIA2_OBJEKT.0 = phi {}* [ %59, %tag51 ], [ %DIA2_OBJEKT.1, %normal-dest177 ], [ %119, %normal-dest186 ], [ %140, %normal-dest239 ], [ %DIA2_OBJEKT.2, %normal-dest303 ]
  %88 = ptrtoint {}* %DIA1_OBJEKT.0 to i64
  %fixnum-tag-only381438 = and i64 %88, 3
  %fixnump-test382 = icmp eq i64 %fixnum-tag-only381438, 0
  br i1 %fixnump-test382, label %tag4, label %tag71

tag88:                                            ; preds = %tag22, %tag41, %header-check-br197, %tag26, %header-check-br, %tag10
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 201), align 8
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest384 unwind label %cleanup-lpad

tag89:                                            ; preds = %tag32
  %gep399 = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  %91 = bitcast {}** %gep399 to i64*
  store i64 %46, i64* %91, align 8
  br label %tag12

tag90:                                            ; preds = %tag84
  %92 = invoke float @from_object_float({}* %DIA1_OBJEKT.0)
          to label %normal-dest400 unwind label %cleanup-lpad

tag91:                                            ; preds = %normal-dest189
  %93 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag32

tag92:                                            ; preds = %tag54
  %94 = icmp slt {}* %DIA2_OBJEKT.0, null
  %95 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %. = select i1 %94, {}* %95, {}* %64
  br label %tag20

cleanup-lpad:                                     ; preds = %15, %12, %normal-dest400, %tag90, %normal-dest384, %tag88, %normal-dest354, %tag62, %normal-dest351, %tag77, %tag75, %tag73, %normal-dest310, %tag70, %normal-dest296, %tag68, %normal-dest276, %normal-dest275, %tag60, %normal-dest261, %tag57, %normal-dest245, %tag53, %normal-dest239, %normal-dest238, %tag47, %normal-dest222, %normal-dest221, %tag44, %normal-dest219, %normal-dest218, %tag43, %normal-dest188, %tag29, %normal-dest186, %normal-dest185, %tag28, %normal-dest170, %tag25, %normal-dest121, %tag8, %normal-dest106, %tag3, %normal-dest103, %tag2, %normal-dest100, %normal-dest98, %tag1
  %96 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %96

normal-dest:                                      ; preds = %13
  %97 = ptrtoint {}* %farg0 to i64
  %fixnum-tag-only413 = and i64 %97, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only413, 0
  br i1 %fixnump-test, label %tag18, label %tag19

normal-dest98:                                    ; preds = %tag1
  %98 = invoke float @from_object_float({}* %farg2)
          to label %normal-dest100 unwind label %cleanup-lpad

normal-dest100:                                   ; preds = %normal-dest98
  %99 = fadd float %16, %98
  %100 = invoke {}* @to_object_float(float %99)
          to label %tag7 unwind label %cleanup-lpad

normal-dest103:                                   ; preds = %tag2
  %101 = invoke double @from_object_double({}* nonnull %farg3)
          to label %normal-dest105 unwind label %cleanup-lpad

normal-dest105:                                   ; preds = %normal-dest103
  %102 = fcmp ugt double %101, %17
  br i1 %102, label %tag49, label %tag61

normal-dest106:                                   ; preds = %tag3
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %81, {}* null, {}* null, {}* null)
          to label %normal-dest109 unwind label %cleanup-lpad

normal-dest109:                                   ; preds = %normal-dest106
  %.elt456 = extractvalue { {}*, i64 } %103, 0
  %.elt458 = extractvalue { {}*, i64 } %103, 1
  %cond411 = icmp eq i64 %.elt458, 0
  %104 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DIA1_OBJEKT.1 = select i1 %cond411, {}* %104, {}* %.elt456
  br label %tag7

normal-dest121:                                   ; preds = %tag8
  %ptrtoint122 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint123 = add i64 %ptrtoint122, 7
  %entry-point-addr124 = inttoptr i64 %entry-point-addr-uint123 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point125 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr124, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point125({}* %23, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest128 unwind label %cleanup-lpad

normal-dest128:                                   ; preds = %normal-dest121
  %.elt = extractvalue { {}*, i64 } %105, 0
  %.elt415 = extractvalue { {}*, i64 } %105, 1
  %cond = icmp eq i64 %.elt415, 0
  %106 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238065.1 = select i1 %cond, {}* %106, {}* %.elt
  br label %tag32

header-check-br:                                  ; preds = %tag10
  %irc-bit-cast136 = bitcast {}* %farg1 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast136, i64 -9
  %irc-bit-cast137 = bitcast i8* %gep to i64*
  %107 = load i64, i64* %irc-bit-cast137, align 8
  %108 = icmp eq i64 %107, 1325
  br i1 %108, label %tag43, label %tag88

header-check-br141:                               ; preds = %tag14
  %irc-bit-cast145 = bitcast {}* %farg2 to i8*
  %gep146 = getelementptr inbounds i8, i8* %irc-bit-cast145, i64 -9
  %irc-bit-cast147 = bitcast i8* %gep146 to i64*
  %109 = load i64, i64* %irc-bit-cast147, align 8
  %110 = icmp eq i64 %109, 1325
  br i1 %110, label %tag44, label %tag57

header-check-br155:                               ; preds = %tag71
  %irc-bit-cast159 = bitcast {}* %DIA1_OBJEKT.0 to i8*
  %gep160 = getelementptr inbounds i8, i8* %irc-bit-cast159, i64 -9
  %irc-bit-cast161 = bitcast i8* %gep160 to i64*
  %111 = load i64, i64* %irc-bit-cast161, align 8
  %112 = icmp eq i64 %111, 1325
  br i1 %112, label %tag45, label %tag53

header-check-br162:                               ; preds = %tag19
  %irc-bit-cast166 = bitcast {}* %farg0 to i8*
  %gep167 = getelementptr inbounds i8, i8* %irc-bit-cast166, i64 -9
  %irc-bit-cast168 = bitcast i8* %gep167 to i64*
  %113 = load i64, i64* %irc-bit-cast168, align 8
  %114 = icmp eq i64 %113, 1325
  br i1 %114, label %tag31, label %tag8

normal-dest170:                                   ; preds = %tag25
  %ptrtoint171 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint172 = add i64 %ptrtoint171, 7
  %entry-point-addr173 = inttoptr i64 %entry-point-addr-uint172 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point174 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr173, align 8
  %115 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point174({}* %38, i64 2, {}* %farg2, {}* %.in, {}* null, {}* null)
          to label %normal-dest177 unwind label %cleanup-lpad

normal-dest177:                                   ; preds = %normal-dest170
  %.elt435 = extractvalue { {}*, i64 } %115, 0
  %.elt437 = extractvalue { {}*, i64 } %115, 1
  %cond407 = icmp eq i64 %.elt437, 0
  %116 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DIA2_OBJEKT.1 = select i1 %cond407, {}* %116, {}* %.elt435
  br label %tag87

normal-dest185:                                   ; preds = %tag28
  %117 = invoke double @from_object_double({}* nonnull %.in)
          to label %normal-dest186 unwind label %cleanup-lpad

normal-dest186:                                   ; preds = %normal-dest185
  %118 = fsub double %41, %117
  %119 = invoke {}* @to_object_double(double %118)
          to label %tag87 unwind label %cleanup-lpad

normal-dest188:                                   ; preds = %tag29
  %120 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest189 unwind label %cleanup-lpad

normal-dest189:                                   ; preds = %normal-dest188
  %121 = fcmp oeq double %42, %120
  br i1 %121, label %tag91, label %tag5

header-check-br190:                               ; preds = %tag31
  %irc-bit-cast194 = bitcast {}* %farg1 to i8*
  %gep195 = getelementptr inbounds i8, i8* %irc-bit-cast194, i64 -9
  %irc-bit-cast196 = bitcast i8* %gep195 to i64*
  %122 = load i64, i64* %irc-bit-cast196, align 8
  %123 = icmp eq i64 %122, 1325
  br i1 %123, label %tag29, label %tag8

header-check-br197:                               ; preds = %tag22
  %irc-bit-cast201 = bitcast {}* %farg0 to i8*
  %gep202 = getelementptr inbounds i8, i8* %irc-bit-cast201, i64 -9
  %irc-bit-cast203 = bitcast i8* %gep202 to i64*
  %124 = load i64, i64* %irc-bit-cast203, align 8
  %125 = icmp eq i64 %124, 1325
  br i1 %125, label %tag10, label %tag88

header-check-br211:                               ; preds = %tag
  %gep216 = getelementptr inbounds i8, i8* %155, i64 -9
  %irc-bit-cast217 = bitcast i8* %gep216 to i64*
  %126 = load i64, i64* %irc-bit-cast217, align 8
  %127 = icmp eq i64 %126, 1325
  br i1 %127, label %tag14, label %tag57

normal-dest218:                                   ; preds = %tag43
  %128 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest219 unwind label %cleanup-lpad

normal-dest219:                                   ; preds = %normal-dest218
  %129 = fsub double %53, %128
  %130 = invoke {}* @to_object_double(double %129)
          to label %tag75 unwind label %cleanup-lpad

normal-dest221:                                   ; preds = %tag44
  %131 = invoke double @from_object_double({}* nonnull %farg2)
          to label %normal-dest222 unwind label %cleanup-lpad

normal-dest222:                                   ; preds = %normal-dest221
  %132 = fadd double %54, %131
  %133 = invoke {}* @to_object_double(double %132)
          to label %tag7 unwind label %cleanup-lpad

header-check-br224:                               ; preds = %tag45
  %irc-bit-cast228 = bitcast {}* %farg3 to i8*
  %gep229 = getelementptr inbounds i8, i8* %irc-bit-cast228, i64 -9
  %irc-bit-cast230 = bitcast i8* %gep229 to i64*
  %134 = load i64, i64* %irc-bit-cast230, align 8
  %135 = icmp eq i64 %134, 1325
  br i1 %135, label %tag2, label %tag53

header-check-br231:                               ; preds = %header-check-br281
  %gep236 = getelementptr inbounds i8, i8* %155, i64 -9
  %irc-bit-cast237 = bitcast i8* %gep236 to i64*
  %136 = load i64, i64* %irc-bit-cast237, align 8
  %137 = icmp eq i64 %136, 1325
  br i1 %137, label %tag28, label %tag25

normal-dest238:                                   ; preds = %tag47
  %138 = invoke float @from_object_float({}* %.in)
          to label %normal-dest239 unwind label %cleanup-lpad

normal-dest239:                                   ; preds = %normal-dest238
  %139 = fsub float %55, %138
  %140 = invoke {}* @to_object_float(float %139)
          to label %tag87 unwind label %cleanup-lpad

normal-dest245:                                   ; preds = %tag53
  %ptrtoint246 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint247 = add i64 %ptrtoint246, 7
  %entry-point-addr248 = inttoptr i64 %entry-point-addr-uint247 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point249 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr248, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point249({}* %63, i64 2, {}* %DIA1_OBJEKT.0, {}* %farg3, {}* null, {}* null)
          to label %normal-dest252 unwind label %cleanup-lpad

normal-dest252:                                   ; preds = %normal-dest245
  %.elt440 = extractvalue { {}*, i64 } %141, 0
  %.elt442 = extractvalue { {}*, i64 } %141, 1
  %cond408 = icmp eq i64 %.elt442, 0
  %142 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237959.1 = select i1 %cond408, {}* %142, {}* %.elt440
  br label %tag54

normal-dest261:                                   ; preds = %tag57
  %ptrtoint262 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint263 = add i64 %ptrtoint262, 7
  %entry-point-addr264 = inttoptr i64 %entry-point-addr-uint263 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point265 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr264, align 8
  %143 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point265({}* %68, i64 2, {}* %.in, {}* %farg2, {}* null, {}* null)
          to label %normal-dest268 unwind label %cleanup-lpad

normal-dest268:                                   ; preds = %normal-dest261
  %.elt430 = extractvalue { {}*, i64 } %143, 0
  %.elt432 = extractvalue { {}*, i64 } %143, 1
  %cond406 = icmp eq i64 %.elt432, 0
  %144 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DIA1_OBJEKT.2 = select i1 %cond406, {}* %144, {}* %.elt430
  %.pre = ptrtoint {}* %farg2 to i64
  br label %tag7

normal-dest275:                                   ; preds = %tag60
  %145 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest276 unwind label %cleanup-lpad

normal-dest276:                                   ; preds = %normal-dest275
  %146 = fsub float %69, %145
  %147 = invoke {}* @to_object_float(float %146)
          to label %tag75 unwind label %cleanup-lpad

header-check-br281:                               ; preds = %tag27
  %irc-bit-cast285 = bitcast {}* %farg2 to i8*
  %gep286 = getelementptr inbounds i8, i8* %irc-bit-cast285, i64 -9
  %irc-bit-cast287 = bitcast i8* %gep286 to i64*
  %148 = load i64, i64* %irc-bit-cast287, align 8
  %149 = icmp eq i64 %148, 1325
  %tag-only233 = and i64 %156, 7
  %test234 = icmp eq i64 %tag-only233, 1
  %or.cond = and i1 %test234, %149
  br i1 %or.cond, label %header-check-br231, label %tag25

normal-dest296:                                   ; preds = %tag68
  %ptrtoint297 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint298 = add i64 %ptrtoint297, 7
  %entry-point-addr299 = inttoptr i64 %entry-point-addr-uint298 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point300 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr299, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point300({}* %75, i64 1, {}* %59, {}* null, {}* null, {}* null)
          to label %normal-dest303 unwind label %cleanup-lpad

normal-dest303:                                   ; preds = %normal-dest296
  %.elt451 = extractvalue { {}*, i64 } %150, 0
  %.elt453 = extractvalue { {}*, i64 } %150, 1
  %cond410 = icmp eq i64 %.elt453, 0
  %151 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DIA2_OBJEKT.2 = select i1 %cond410, {}* %151, {}* %.elt451
  br label %tag87

normal-dest310:                                   ; preds = %tag70
  %ptrtoint311 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint312 = add i64 %ptrtoint311, 7
  %entry-point-addr313 = inttoptr i64 %entry-point-addr-uint312 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point314 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr313, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point314({}* %77, i64 1, {}* %61, {}* null, {}* null, {}* null)
          to label %normal-dest317 unwind label %cleanup-lpad

normal-dest317:                                   ; preds = %normal-dest310
  %.elt461 = extractvalue { {}*, i64 } %152, 0
  %.elt463 = extractvalue { {}*, i64 } %152, 1
  %cond412 = icmp eq i64 %.elt463, 0
  %153 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238035.1 = select i1 %cond412, {}* %153, {}* %.elt461
  br label %tag75

normal-dest325:                                   ; preds = %tag73
  br i1 %fixnump-test, label %tag41, label %tag22

normal-dest338:                                   ; preds = %tag75
  %.elt425 = extractvalue { {}*, i64 } %82, 0
  %.elt427 = extractvalue { {}*, i64 } %82, 1
  %cond405 = icmp eq i64 %.elt427, 0
  %154 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond405, {}* %154, {}* %.elt425
  %155 = bitcast {}* %.in to i8*
  %156 = ptrtoint {}* %.in to i64
  %fixnum-tag-only346428 = and i64 %156, 3
  %fixnump-test347 = icmp eq i64 %fixnum-tag-only346428, 0
  br i1 %fixnump-test347, label %tag13, label %tag

normal-dest351:                                   ; preds = %tag77
  %157 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest352 unwind label %cleanup-lpad

normal-dest352:                                   ; preds = %normal-dest351
  %158 = fcmp oeq float %83, %157
  br i1 %158, label %tag82, label %tag66

normal-dest354:                                   ; preds = %tag62
  %ptrtoint355 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint356 = add i64 %ptrtoint355, 7
  %entry-point-addr357 = inttoptr i64 %entry-point-addr-uint356 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point358 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr357, align 8
  %159 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point358({}* %72, i64 2, {}* %DIA2_OBJEKT.0, {}* null, {}* null, {}* null)
          to label %normal-dest361 unwind label %cleanup-lpad

normal-dest361:                                   ; preds = %normal-dest354
  %.elt445 = extractvalue { {}*, i64 } %159, 0
  %.elt447 = extractvalue { {}*, i64 } %159, 1
  %cond409 = icmp eq i64 %.elt447, 0
  %160 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G237935.1 = select i1 %cond409, {}* %160, {}* %.elt445
  br label %tag20

normal-dest384:                                   ; preds = %tag88
  %ptrtoint385 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint386 = add i64 %ptrtoint385, 7
  %entry-point-addr387 = inttoptr i64 %entry-point-addr-uint386 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point388 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr387, align 8
  %161 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point388({}* %90, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest391 unwind label %cleanup-lpad

normal-dest391:                                   ; preds = %normal-dest384
  %.elt421 = extractvalue { {}*, i64 } %161, 0
  %.elt423 = extractvalue { {}*, i64 } %161, 1
  %cond404 = icmp eq i64 %.elt423, 0
  %162 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238035.2 = select i1 %cond404, {}* %162, {}* %.elt421
  br label %tag75

normal-dest400:                                   ; preds = %tag90
  %163 = invoke float @from_object_float({}* %farg3)
          to label %normal-dest401 unwind label %cleanup-lpad

normal-dest401:                                   ; preds = %normal-dest400
  %164 = fcmp ugt float %163, %92
  br i1 %164, label %tag38, label %tag86
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^421^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !91 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^421^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G238105.0 = phi {}* [ %18, %header-check-br ], [ %G238105.1, %normal-dest26 ], [ %G238105.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 588), align 16
  %ptrtoint29 = ptrtoint {}* %G238105.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G238105.0, i64 2, {}* %"closure->ND=VOR_SUCHEN", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 588), align 16
  %"closure->ND=VOR_SUCHEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=VOR_SUCHEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=VOR_SUCHEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14817, i64 421, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238105.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag3

normal-dest35:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->ND=VOR_SUCHEN", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 590), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->ND=VOR_SUCHEN", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 1684 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 588), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 587), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238105.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=VOR_SUCHEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !92 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=VOR_SUCHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest12, %mvn-final, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 357), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  %15 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 361), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %mvn-final
  %ptrtoint13 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %16, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest12
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %17
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^426^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !93 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^426^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G238150.0 = phi {}* [ %18, %header-check-br ], [ %G238150.1, %normal-dest17 ], [ %G238150.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 384), align 16
  %ptrtoint20 = ptrtoint {}* %G238150.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G238150.0, i64 2, {}* %"closure->ND=BERECHNE_OMEGA", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 384), align 16
  %"closure->ND=BERECHNE_OMEGA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 14917, i64 426, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 593), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238150.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 594), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->ND=BERECHNE_OMEGA", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 595), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->ND=BERECHNE_OMEGA", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1704 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 384), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238150.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !94 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc1320 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc1320:                                       ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest1073, %tag.outer
  br i1 %consp-test, label %tag190, label %tag177

tag1:                                             ; preds = %tag96, %normal-dest585, %tag181, %tag231
  %"%DOTIMES-VAR.0" = phi {}* [ %152, %tag231 ], [ null, %tag181 ], [ %"%DOTIMES-VAR.1", %normal-dest585 ], [ %LENGTH.0.ph, %tag96 ]
  %11 = ptrtoint {}* %"%DOTIMES-VAR.0" to i64
  %fixnum-tag-only10601300 = and i64 %11, 3
  %fixnump-test1061 = icmp eq i64 %fixnum-tag-only10601300, 0
  %ptrtoint345 = ptrtoint {}* %.in1236 to i64
  %tag-only346 = and i64 %ptrtoint345, 7
  %test347 = icmp eq i64 %tag-only346, 1
  %irc-bit-cast348 = bitcast {}* %.in1236 to i8*
  %gep349 = getelementptr inbounds i8, i8* %irc-bit-cast348, i64 -9
  %irc-bit-cast350 = bitcast i8* %gep349 to i64*
  %12 = add i64 %ptrtoint345, 7
  %13 = inttoptr i64 %12 to i64*
  %single-float-tag-only267 = and i64 %11, 7
  %14 = icmp eq i64 %single-float-tag-only267, 6
  %test893 = icmp ne i64 %single-float-tag-only267, 1
  %irc-bit-cast894 = bitcast {}* %"%DOTIMES-VAR.0" to i8*
  %gep895 = getelementptr inbounds i8, i8* %irc-bit-cast894, i64 -9
  %irc-bit-cast896 = bitcast i8* %gep895 to i64*
  br label %tag13

tag2:                                             ; preds = %header-check-br830, %tag202
  %fixnum-tag-only1167 = and i64 %ptrtoint831, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only1167, 0
  br i1 %fixnump-test, label %tag183, label %tag221

tag3:                                             ; preds = %tag212
  %15 = icmp eq i64 %tag-only990, 6
  br i1 %15, label %tag139, label %tag42

tag4:                                             ; preds = %tag166, %tag59
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit

tag5:                                             ; preds = %tag161
  br i1 %14, label %tag150, label %tag200

tag12:                                            ; preds = %header-check-br1039, %tag221
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest283 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag13:                                            ; preds = %tag13.backedge, %tag1
  %SUMME.0 = phi {}* [ null, %tag1 ], [ %SUMME.1, %tag13.backedge ]
  %DAMENINDEX-238131.0 = phi {}* [ null, %tag1 ], [ %DAMENINDEX-238131.0.be, %tag13.backedge ]
  %20 = ptrtoint {}* %DAMENINDEX-238131.0 to i64
  %fixnum-tag-only2871196 = and i64 %20, 3
  %fixnump-test288 = icmp eq i64 %fixnum-tag-only2871196, 0
  br i1 %fixnump-test288, label %tag225, label %tag161

tag.outer:                                        ; preds = %tag.outer.backedge, %tag.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag.outer.preheader ], [ %LENGTH.0.ph.be, %tag.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in1313, %tag.outer.preheader ], [ %G2095854.0, %tag.outer.backedge ]
  %21 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only1185 = and i64 %21, 7
  %consp-test = icmp eq i64 %tag-only1185, 3
  %22 = add i64 %21, 5
  %23 = inttoptr i64 %22 to {}**
  br label %tag

tag15:                                            ; preds = %header-check-br404
  %24 = invoke double @from_object_double({}* nonnull %SUMME.0)
          to label %normal-dest290 unwind label %cleanup-lpad.loopexit

tag16:                                            ; preds = %tag21
  %25 = ptrtoint {}* %.in1273 to i64
  %fixnum-tag-only2941225 = and i64 %25, 3
  %fixnump-test295 = icmp eq i64 %fixnum-tag-only2941225, 0
  %.val1366 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238358.0 = select i1 %fixnump-test295, {}* %.val1366, {}* %190
  %26 = icmp eq {}* %G238358.0, %190
  br i1 %26, label %tag216, label %tag158

tag17:                                            ; preds = %tag69
  %27 = ptrtoint {}* %SUMME.0 to i64
  %single-float-tag-only297 = and i64 %27, 7
  %28 = icmp eq i64 %single-float-tag-only297, 6
  br i1 %28, label %tag38, label %tag122

tag18:                                            ; preds = %header-check-br483
  %ptrtoint299 = ptrtoint {}* %SUMME.0 to i64
  %tag-only300 = and i64 %ptrtoint299, 7
  %test301 = icmp eq i64 %tag-only300, 1
  br i1 %test301, label %header-check-br298, label %tag122

tag20:                                            ; preds = %tag65
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest860 unwind label %cleanup-lpad.loopexit

tag21:                                            ; preds = %header-check-br344, %tag144
  %G238361.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag144 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br344 ]
  %G238361.0 = load {}*, {}** %G238361.0.in, align 16
  %31 = icmp eq {}* %G238361.0, %190
  br i1 %31, label %tag153, label %tag16

tag22:                                            ; preds = %tag124
  %32 = invoke float @from_object_float({}* %SUMME.0)
          to label %normal-dest311 unwind label %cleanup-lpad.loopexit

tag23:                                            ; preds = %tag157
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 82), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest315 unwind label %cleanup-lpad.loopexit

tag26:                                            ; preds = %tag193
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest359 unwind label %cleanup-lpad.loopexit

tag28:                                            ; preds = %tag232
  %37 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %39, i64 %153)
  %result = extractvalue { i64, i1 } %37, 0
  %overflow = extractvalue { i64, i1 } %37, 1
  %38 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag45, label %tag189

tag33:                                            ; preds = %normal-dest765, %normal-dest707
  %y272.0 = phi {}* [ %y272.1, %normal-dest707 ], [ %251, %normal-dest765 ]
  %39 = ptrtoint {}* %SUMME.0 to i64
  %fixnum-tag-only4021250 = and i64 %39, 3
  %fixnump-test403 = icmp eq i64 %fixnum-tag-only4021250, 0
  br i1 %fixnump-test403, label %tag232, label %tag176

tag34:                                            ; preds = %header-check-br388
  %ptrtoint405 = ptrtoint {}* %y272.0 to i64
  %tag-only406 = and i64 %ptrtoint405, 7
  %test407 = icmp eq i64 %tag-only406, 1
  br i1 %test407, label %header-check-br404, label %tag133

tag38:                                            ; preds = %tag17
  %40 = invoke float @from_object_float({}* %x514.0)
          to label %normal-dest430 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag42:                                            ; preds = %header-check-br988, %tag3
  %fixnum-tag-only4431237 = and i64 %ptrtoint989, 3
  %fixnump-test444 = icmp eq i64 %fixnum-tag-only4431237, 0
  br i1 %fixnump-test444, label %tag219, label %tag195

tag43:                                            ; preds = %tag128
  %41 = icmp sgt {}* %DAMENINDEX-238131.0, inttoptr (i64 -1 to {}*)
  %.1351 = select i1 %41, {}* %.val1392, {}* %307
  br label %tag88

tag45:                                            ; preds = %tag28
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest448 unwind label %cleanup-lpad.loopexit

tag46:                                            ; preds = %normal-dest1097, %tag61
  %44 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest462 unwind label %cleanup-lpad.loopexit

tag48:                                            ; preds = %tag166
  br i1 %fixnump-test295, label %tag182, label %tag229

tag54:                                            ; preds = %tag189
  %46 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest374 unwind label %cleanup-lpad.loopexit

tag56:                                            ; preds = %tag177, %normal-dest1122, %tag190
  %.val1361 = phi {}* [ %.val1359.pre, %tag190 ], [ %316, %normal-dest1122 ], [ %108, %tag177 ]
  %G2095854.0 = phi {}* [ %118, %tag190 ], [ %G2095854.1, %normal-dest1122 ], [ %108, %tag177 ]
  %48 = ptrtoint {}* %G2095854.0 to i64
  %tag-only5021186 = and i64 %48, 7
  %consp-test503 = icmp eq i64 %tag-only5021186, 3
  %.val1358 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238502.0 = select i1 %consp-test503, {}* %.val1358, {}* %.val1361
  %49 = icmp eq {}* %G238502.0, %.val1361
  br i1 %49, label %tag96, label %tag119

tag58:                                            ; preds = %header-check-br830, %header-check-br830, %header-check-br830, %header-check-br1039, %tag183
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 558), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest505 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag59:                                            ; preds = %tag182, %normal-dest788
  %52 = phi {}* [ %255, %normal-dest788 ], [ %105, %tag182 ]
  %G238311.0 = phi {}* [ %G238311.1, %normal-dest788 ], [ %.1353, %tag182 ]
  %53 = icmp eq {}* %G238311.0, %52
  br i1 %53, label %tag4, label %tag74

tag61:                                            ; preds = %normal-dest1097
  %irc-bit-cast1109 = bitcast {}* %.in1216 to i8*
  %gep1110 = getelementptr inbounds i8, i8* %irc-bit-cast1109, i64 -9
  %irc-bit-cast1111 = bitcast i8* %gep1110 to i64*
  %54 = load i64, i64* %irc-bit-cast1111, align 8
  %55 = icmp eq i64 %54, 1137
  %.val1392 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238449.0.pre = select i1 %55, {}* %.val1392, {}* %307
  %56 = icmp eq {}* %G238449.0.pre, %307
  br i1 %56, label %tag46, label %tag205

tag65:                                            ; preds = %tag88
  br i1 %fixnump-test288, label %tag204, label %tag20

tag69:                                            ; preds = %tag203
  %trunc1369 = trunc i64 %128 to i3
  switch i3 %trunc1369, label %tag122 [
    i3 -2, label %tag17
    i3 1, label %header-check-br483
  ]

tag74:                                            ; preds = %tag59
  %"untagged fixnum" = lshr exact i64 %25, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %227, i64 0, i32 1, i64 %"untagged fixnum"
  %57 = load {}*, {}** %aref, align 8
  br label %tag212

tag79:                                            ; preds = %tag204, %normal-dest867
  %58 = phi {}* [ %267, %normal-dest867 ], [ %64, %tag204 ]
  %G238399.0 = phi {}* [ %G238399.1, %normal-dest867 ], [ %.1354, %tag204 ]
  %59 = icmp eq {}* %G238399.0, %58
  br i1 %59, label %tag197, label %tag82

tag82:                                            ; preds = %tag79
  %"untagged fixnum575" = lshr exact i64 %20, 2
  %aref576 = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %308, i64 0, i32 1, i64 %"untagged fixnum575"
  %60 = load {}*, {}** %aref576, align 8
  br label %tag157

tag83:                                            ; preds = %tag158
  %61 = icmp sgt {}* %.in1273, inttoptr (i64 -1 to {}*)
  %.1352 = select i1 %61, {}* %.val1366, {}* %190
  br label %tag166

tag84:                                            ; preds = %tag181
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest578 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag88:                                            ; preds = %tag43, %normal-dest1006
  %64 = phi {}* [ %286, %normal-dest1006 ], [ %307, %tag43 ]
  %G238422.0 = phi {}* [ %G238422.1, %normal-dest1006 ], [ %.1351, %tag43 ]
  %65 = icmp eq {}* %G238422.0, %64
  br i1 %65, label %tag197, label %tag65

tag96:                                            ; preds = %tag56
  %66 = icmp eq {}* %G2095854.0, %.val1361
  %G238473.0 = select i1 %66, {}* %.val1358, {}* %.val1361
  %67 = icmp eq {}* %G238473.0, %.val1361
  br i1 %67, label %tag230, label %tag1

tag99:                                            ; preds = %normal-dest1113
  %68 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag234

tag103:                                           ; preds = %tag158
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest616 unwind label %cleanup-lpad.loopexit

tag106:                                           ; preds = %normal-dest1113
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag234

tag109:                                           ; preds = %tag146
  %72 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag234

tag110:                                           ; preds = %normal-dest996, %normal-dest513
  %x514.0 = phi {}* [ %x514.1, %normal-dest513 ], [ %284, %normal-dest996 ]
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest636 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag118:                                           ; preds = %header-check-br298
  %75 = invoke double @from_object_double({}* nonnull %x514.0)
          to label %normal-dest674 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag119:                                           ; preds = %tag56
  %76 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only6811187 = and i64 %76, 3
  %fixnump-test682 = icmp eq i64 %fixnum-tag-only6811187, 0
  br i1 %fixnump-test682, label %tag226, label %tag211

tag122:                                           ; preds = %tag69, %tag203, %header-check-br483, %header-check-br298, %tag18, %tag17
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 560), align 16
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest691 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag123:                                           ; preds = %header-check-br988, %header-check-br988, %header-check-br988, %header-check-br934, %tag219
  %79 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 558), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest700 unwind label %cleanup-lpad.loopexit

tag124:                                           ; preds = %tag176
  %81 = ptrtoint {}* %y272.0 to i64
  %single-float-tag-only713 = and i64 %81, 7
  %82 = icmp eq i64 %single-float-tag-only713, 6
  br i1 %82, label %tag22, label %tag133

tag125:                                           ; preds = %tag226
  %83 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 126), align 16
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest715 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag128:                                           ; preds = %tag205
  %85 = add i64 %ptrtoint1106, 7
  %86 = inttoptr i64 %85 to i64*
  %87 = load i64, i64* %86, align 8
  %"tag fixnum" = shl nuw i64 %87, 2
  %88 = inttoptr i64 %"tag fixnum" to {}*
  br i1 %fixnump-test288, label %tag43, label %tag214

tag133:                                           ; preds = %tag176, %tag232, %tag124, %header-check-br404, %tag34, %header-check-br388
  %89 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest741 unwind label %cleanup-lpad.loopexit

tag136:                                           ; preds = %normal-dest776
  %91 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag234

tag139:                                           ; preds = %tag3, %tag219
  %92 = invoke float @from_object_float({}* inttoptr (i64 8522825734 to {}*))
          to label %normal-dest764 unwind label %cleanup-lpad.loopexit

tag144:                                           ; preds = %header-check-br344, %normal-dest338
  br label %tag21

tag146:                                           ; preds = %tag225
  %93 = icmp slt {}* %DAMENINDEX-238131.0, %"%DOTIMES-VAR.0"
  br i1 %93, label %tag147, label %tag109

tag147:                                           ; preds = %tag146
  %94 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag234

tag150:                                           ; preds = %tag5
  %95 = invoke float @from_object_float({}* %DAMENINDEX-238131.0)
          to label %normal-dest775 unwind label %cleanup-lpad.loopexit

tag153:                                           ; preds = %tag21
  %96 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest795 unwind label %cleanup-lpad.loopexit

tag156:                                           ; preds = %normal-dest249
  %98 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 433), align 8
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest817 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag157:                                           ; preds = %normal-dest1054, %normal-dest949, %normal-dest470, %tag82
  %100 = phi {}* [ %58, %tag82 ], [ %211, %normal-dest470 ], [ %276, %normal-dest949 ], [ %302, %normal-dest1054 ]
  %x471.0 = phi {}* [ %60, %tag82 ], [ %x471.1, %normal-dest470 ], [ %x471.2, %normal-dest949 ], [ %x471.3, %normal-dest1054 ]
  %101 = icmp eq {}* %x471.0, %100
  %.val1364 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238371.0 = select i1 %101, {}* %.val1364, {}* %100
  %102 = icmp eq {}* %G238371.0, %100
  br i1 %102, label %tag189, label %tag23

tag158:                                           ; preds = %tag16
  %103 = load i64, i64* %13, align 8
  %"tag fixnum843" = shl nuw i64 %103, 2
  %104 = inttoptr i64 %"tag fixnum843" to {}*
  br i1 %fixnump-test295, label %tag83, label %tag103

tag161:                                           ; preds = %tag13
  %trunc = trunc i64 %20 to i3
  switch i3 %trunc, label %tag200 [
    i3 -2, label %tag5
    i3 1, label %header-check-br980
  ]

tag166:                                           ; preds = %tag83, %normal-dest623
  %105 = phi {}* [ %223, %normal-dest623 ], [ %190, %tag83 ]
  %G238334.0 = phi {}* [ %G238334.1, %normal-dest623 ], [ %.1352, %tag83 ]
  %106 = icmp eq {}* %G238334.0, %105
  br i1 %106, label %tag4, label %tag48

tag172:                                           ; preds = %normal-dest776
  %107 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag234

tag176:                                           ; preds = %tag33
  %trunc1368 = trunc i64 %39 to i3
  switch i3 %trunc1368, label %tag133 [
    i3 -2, label %tag124
    i3 1, label %header-check-br388
  ]

tag177:                                           ; preds = %tag
  %108 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %109 = icmp eq {}* %SEQUENCE.0.ph, %108
  %.val1356 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238514.0 = select i1 %109, {}* %.val1356, {}* %108
  %110 = icmp eq {}* %G238514.0, %108
  br i1 %110, label %tag238, label %tag56

tag181:                                           ; preds = %normal-dest599, %tag215, %header-check-br728, %tag184
  %.val1370 = phi {}* [ %G238465.0.pre, %tag184 ], [ %.val, %tag215 ], [ %.val, %header-check-br728 ], [ %G238465.0.pre.pre, %normal-dest599 ]
  %.val13711394 = phi {}* [ %G238465.0.pre, %tag184 ], [ %232, %tag215 ], [ %232, %header-check-br728 ], [ %220, %normal-dest599 ]
  %111 = icmp eq {}* %.in1313, %.val13711394
  %G238461.0 = select i1 %111, {}* %.val1370, {}* %.val13711394
  %112 = icmp eq {}* %G238461.0, %.val13711394
  br i1 %112, label %tag84, label %tag1

tag182:                                           ; preds = %tag48
  %113 = icmp sgt i64 %"tag fixnum843", %25
  %114 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.1353 = select i1 %113, {}* %114, {}* %105
  br label %tag59

tag183:                                           ; preds = %tag2
  %115 = icmp eq i64 %tag-only832, 6
  br i1 %115, label %tag213, label %tag58

tag184:                                           ; preds = %normal-dest599, %header-check-br1012
  %G238465.0.pre = phi {}* [ %.val, %header-check-br1012 ], [ %G238465.0.pre.pre, %normal-dest599 ]
  %116 = phi {}* [ %232, %header-check-br1012 ], [ %220, %normal-dest599 ]
  %117 = icmp eq {}* %G238465.0.pre, %116
  br i1 %117, label %tag181, label %tag231

tag189:                                           ; preds = %normal-dest748, %normal-dest455, %normal-dest312, %normal-dest292, %tag28, %tag157
  %SUMME.1 = phi {}* [ %SUMME.0, %tag157 ], [ %38, %tag28 ], [ %178, %normal-dest292 ], [ %183, %normal-dest312 ], [ %SUMME.2, %normal-dest455 ], [ %SUMME.3, %normal-dest748 ]
  br i1 %fixnump-test288, label %tag193, label %tag54

tag190:                                           ; preds = %tag
  %118 = load {}*, {}** %23, align 8
  %.val1359.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag56

tag193:                                           ; preds = %tag189
  %119 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %20, i64 4)
  %result922 = extractvalue { i64, i1 } %119, 0
  %overflow923 = extractvalue { i64, i1 } %119, 1
  %120 = inttoptr i64 %result922 to {}*
  br i1 %overflow923, label %tag26, label %tag13.backedge

tag13.backedge:                                   ; preds = %tag193, %normal-dest366, %normal-dest382
  %DAMENINDEX-238131.0.be = phi {}* [ %120, %tag193 ], [ %DAMENINDEX-238131.1, %normal-dest366 ], [ %DAMENINDEX-238131.2, %normal-dest382 ]
  br label %tag13

tag195:                                           ; preds = %tag42
  br i1 %test991, label %header-check-br934, label %tag240

tag197:                                           ; preds = %tag88, %tag79
  %121 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %122 = invoke {}* @cc_safe_fdefinition({}* %121)
          to label %normal-dest942 unwind label %cleanup-lpad.loopexit

tag199:                                           ; preds = %normal-dest675, %normal-dest431, %normal-dest249, %normal-dest698
  %return-value.sroa.66.0 = phi i64 [ %.elt1298, %normal-dest698 ], [ 1, %normal-dest249 ], [ 1, %normal-dest431 ], [ 1, %normal-dest675 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt1296, %normal-dest698 ], [ inttoptr (i64 4000000 to {}*), %normal-dest249 ], [ %203, %normal-dest431 ], [ %238, %normal-dest675 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %123 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %124 = insertvalue { {}*, i64 } %123, i64 %return-value.sroa.66.0, 1
  ret { {}*, i64 } %124

tag200:                                           ; preds = %header-check-br980, %tag161, %tag225, %header-check-br890, %tag5
  %125 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %126 = invoke {}* @cc_safe_fdefinition({}* %125)
          to label %normal-dest956 unwind label %cleanup-lpad.loopexit

tag202:                                           ; preds = %normal-dest824
  %127 = icmp eq i64 %tag-only832, 6
  br i1 %127, label %tag213, label %tag2

tag203:                                           ; preds = %tag234
  %128 = ptrtoint {}* %x514.0 to i64
  %fixnum-tag-only9741294 = and i64 %128, 3
  %fixnump-test975 = icmp eq i64 %fixnum-tag-only9741294, 0
  br i1 %fixnump-test975, label %tag122, label %tag69

tag204:                                           ; preds = %tag65
  %129 = icmp sgt i64 %"tag fixnum", %20
  %130 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.1354 = select i1 %129, {}* %130, {}* %64
  br label %tag79

tag205:                                           ; preds = %tag61
  %G238446.0 = select i1 %fixnump-test288, {}* %.val1392, {}* %307
  %131 = icmp eq {}* %G238446.0, %307
  br i1 %131, label %tag223, label %tag128

tag211:                                           ; preds = %tag119
  %132 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 128), align 16
  %133 = invoke {}* @cc_safe_fdefinition({}* %132)
          to label %normal-dest877 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag212:                                           ; preds = %normal-dest1029, %normal-dest802, %normal-dest261, %tag74
  %.in1245 = phi {}* [ %57, %tag74 ], [ %.in1242, %normal-dest261 ], [ %.in1244, %normal-dest802 ], [ %.in1243, %normal-dest1029 ]
  %134 = bitcast {}* %.in1245 to i8*
  %ptrtoint989 = ptrtoint {}* %.in1245 to i64
  %tag-only990 = and i64 %ptrtoint989, 7
  %test991 = icmp eq i64 %tag-only990, 1
  br i1 %test991, label %header-check-br988, label %tag3

tag213:                                           ; preds = %tag202, %tag183
  %135 = invoke float @from_object_float({}* inttoptr (i64 8522825734 to {}*))
          to label %normal-dest995 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag214:                                           ; preds = %tag128
  %136 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %137 = invoke {}* @cc_safe_fdefinition({}* %136)
          to label %normal-dest999 unwind label %cleanup-lpad.loopexit

tag215:                                           ; preds = %normal-dest657
  %test1015 = icmp eq i64 %tag-only6631184, 1
  br i1 %test1015, label %header-check-br1012, label %tag181

tag216:                                           ; preds = %tag16
  %138 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %139 = invoke {}* @cc_safe_fdefinition({}* %138)
          to label %normal-dest1022 unwind label %cleanup-lpad.loopexit

tag219:                                           ; preds = %tag42
  %140 = icmp eq i64 %tag-only990, 6
  br i1 %140, label %tag139, label %tag123

tag221:                                           ; preds = %tag2
  br i1 %test833, label %header-check-br1039, label %tag12

tag223:                                           ; preds = %tag205
  %141 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %142 = invoke {}* @cc_safe_fdefinition({}* %141)
          to label %normal-dest1047 unwind label %cleanup-lpad.loopexit

tag225:                                           ; preds = %tag13
  br i1 %fixnump-test1061, label %tag146, label %tag200

tag226:                                           ; preds = %tag119
  %143 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %76, i64 4)
  %result1062 = extractvalue { i64, i1 } %143, 0
  %overflow1063 = extractvalue { i64, i1 } %143, 1
  %144 = inttoptr i64 %result1062 to {}*
  br i1 %overflow1063, label %tag125, label %tag.outer.backedge

tag.outer.backedge:                               ; preds = %tag226, %normal-dest722, %normal-dest884
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest884 ], [ %LENGTH.1, %normal-dest722 ], [ %144, %tag226 ]
  br label %tag.outer

tag229:                                           ; preds = %tag48
  %145 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %146 = invoke {}* @cc_safe_fdefinition({}* %145)
          to label %normal-dest781 unwind label %cleanup-lpad.loopexit

tag230:                                           ; preds = %tag96
  %147 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 114), align 16
  %148 = invoke {}* @cc_safe_fdefinition({}* %147)
          to label %normal-dest1073 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag231:                                           ; preds = %tag184
  %149 = add i64 %234, 7
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %"tag fixnum1085" = shl nuw i64 %151, 2
  %152 = inttoptr i64 %"tag fixnum1085" to {}*
  br label %tag1

tag232:                                           ; preds = %tag33
  %153 = ptrtoint {}* %y272.0 to i64
  %fixnum-tag-only10861264 = and i64 %153, 3
  %fixnump-test1087 = icmp eq i64 %fixnum-tag-only10861264, 0
  br i1 %fixnump-test1087, label %tag28, label %tag133

tag234:                                           ; preds = %normal-dest963, %tag172, %tag147, %tag136, %tag109, %tag106, %tag99
  %G238193.0 = phi {}* [ %94, %tag147 ], [ %72, %tag109 ], [ %91, %tag136 ], [ %107, %tag172 ], [ %68, %tag99 ], [ %71, %tag106 ], [ %G238193.1, %normal-dest963 ]
  %154 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %155 = icmp eq {}* %G238193.0, %154
  br i1 %155, label %tag203, label %tag236

tag236:                                           ; preds = %tag234
  %156 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %157 = invoke {}* @cc_safe_fdefinition({}* %156)
          to label %normal-dest1090 unwind label %cleanup-lpad.loopexit

tag237:                                           ; preds = %header-check-br890
  %158 = invoke double @from_object_double({}* nonnull %DAMENINDEX-238131.0)
          to label %normal-dest1112 unwind label %cleanup-lpad.loopexit

tag238:                                           ; preds = %tag177
  %159 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %160 = invoke {}* @cc_safe_fdefinition({}* %159)
          to label %normal-dest1115 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag240:                                           ; preds = %header-check-br934, %tag195
  %161 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %162 = invoke {}* @cc_safe_fdefinition({}* %161)
          to label %normal-dest1129 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag4, %normal-dest254, %tag15, %normal-dest290, %normal-dest292, %tag22, %normal-dest311, %normal-dest312, %tag23, %normal-dest315, %normal-dest322, %normal-dest331, %tag26, %normal-dest359, %tag54, %normal-dest374, %tag45, %normal-dest448, %tag46, %normal-dest462, %tag103, %normal-dest616, %tag123, %normal-dest700, %tag133, %normal-dest741, %tag139, %normal-dest764, %normal-dest765, %tag150, %normal-dest775, %tag229, %normal-dest781, %tag153, %normal-dest795, %tag20, %normal-dest860, %tag197, %normal-dest942, %tag200, %normal-dest956, %tag214, %normal-dest999, %tag216, %normal-dest1022, %tag223, %normal-dest1047, %tag236, %normal-dest1090, %tag237, %normal-dest1112
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag230, %normal-dest1073, %tag238, %normal-dest1115
  %lpad.loopexit1376 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag125, %normal-dest715, %tag211, %normal-dest877
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %9, %tag240, %normal-dest996, %normal-dest995, %tag213, %normal-dest817, %tag156, %normal-dest691, %tag122, %normal-dest675, %normal-dest674, %tag118, %normal-dest650, %normal-dest643, %normal-dest636, %tag110, %normal-dest592, %maybe-more-tests, %normal-dest578, %tag84, %normal-dest283, %normal-dest1129, %normal-dest505, %tag58, %normal-dest431, %normal-dest430, %tag38, %tag12, %normal-dest246, %normal-dest
  %lpad.loopexit.split-lp1374 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp1374, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit1376, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %163 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 449), align 8
  %164 = invoke {}* @cc_safe_fdefinition({}* %163)
          to label %normal-dest246 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest246:                                   ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %164 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %165 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %164, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest249 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest249:                                   ; preds = %normal-dest246
  %.elt = extractvalue { {}*, i64 } %165, 0
  %.elt1159 = extractvalue { {}*, i64 } %165, 1
  %cond = icmp eq i64 %.elt1159, 0
  %166 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238557.0 = select i1 %cond, {}* %166, {}* %.elt
  %167 = icmp eq {}* %G238557.0, %166
  br i1 %167, label %tag156, label %tag199

normal-dest254:                                   ; preds = %tag4
  %168 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint255 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint256 = add i64 %ptrtoint255, 7
  %entry-point-addr257 = inttoptr i64 %entry-point-addr-uint256 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point258 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr257, align 8
  %169 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point258({}* %17, i64 3, {}* %168, {}* %.in1273, {}* %104, {}* null)
          to label %normal-dest261 unwind label %cleanup-lpad.loopexit

normal-dest261:                                   ; preds = %normal-dest254
  %.elt1270 = extractvalue { {}*, i64 } %169, 0
  %.elt1272 = extractvalue { {}*, i64 } %169, 1
  %cond1147 = icmp eq i64 %.elt1272, 0
  %170 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1242 = select i1 %cond1147, {}* %170, {}* %.elt1270
  br label %tag212

normal-dest283:                                   ; preds = %tag12
  %171 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %172 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %173 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %174 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 223), align 8
  %ptrtoint548 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint549 = add i64 %ptrtoint548, 7
  %entry-point-addr550 = inttoptr i64 %entry-point-addr-uint549 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point551 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr550, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point551({}* %19, i64 5, {}* %171, {}* %172, {}* %.in, {}* %173, {}* %174)
          to label %normal-dest554 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest290:                                   ; preds = %tag15
  %176 = invoke double @from_object_double({}* nonnull %y272.0)
          to label %normal-dest292 unwind label %cleanup-lpad.loopexit

normal-dest292:                                   ; preds = %normal-dest290
  %177 = fadd double %24, %176
  %178 = invoke {}* @to_object_double(double %177)
          to label %tag189 unwind label %cleanup-lpad.loopexit

header-check-br298:                               ; preds = %tag18
  %irc-bit-cast302 = bitcast {}* %SUMME.0 to i8*
  %gep303 = getelementptr inbounds i8, i8* %irc-bit-cast302, i64 -9
  %irc-bit-cast304 = bitcast i8* %gep303 to i64*
  %179 = load i64, i64* %irc-bit-cast304, align 8
  %180 = icmp eq i64 %179, 1325
  br i1 %180, label %tag118, label %tag122

normal-dest311:                                   ; preds = %tag22
  %181 = invoke float @from_object_float({}* %y272.0)
          to label %normal-dest312 unwind label %cleanup-lpad.loopexit

normal-dest312:                                   ; preds = %normal-dest311
  %182 = fadd float %32, %181
  %183 = invoke {}* @to_object_float(float %182)
          to label %tag189 unwind label %cleanup-lpad.loopexit

normal-dest315:                                   ; preds = %tag23
  %ptrtoint316 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint317 = add i64 %ptrtoint316, 7
  %entry-point-addr318 = inttoptr i64 %entry-point-addr-uint317 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point319 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr318, align 8
  %184 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point319({}* %34, i64 1, {}* %DAMENINDEX-238131.0, {}* null, {}* null, {}* null)
          to label %normal-dest322 unwind label %cleanup-lpad.loopexit

normal-dest322:                                   ; preds = %normal-dest315
  %185 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %186 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %187 = invoke {}* @cc_safe_fdefinition({}* %186)
          to label %normal-dest331 unwind label %cleanup-lpad.loopexit

normal-dest331:                                   ; preds = %normal-dest322
  %.elt1220 = extractvalue { {}*, i64 } %184, 1
  %cond1140 = icmp eq i64 %.elt1220, 0
  %.elt1218 = extractvalue { {}*, i64 } %184, 0
  %G238134.0 = select i1 %cond1140, {}* %185, {}* %.elt1218
  %188 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint332 = ptrtoint {}* %187 to i64
  %entry-point-addr-uint333 = add i64 %ptrtoint332, 7
  %entry-point-addr334 = inttoptr i64 %entry-point-addr-uint333 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point335 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr334, align 8
  %189 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point335({}* %187, i64 2, {}* %G238134.0, {}* %188, {}* null, {}* null)
          to label %normal-dest338 unwind label %cleanup-lpad.loopexit

normal-dest338:                                   ; preds = %normal-dest331
  %.elt1222 = extractvalue { {}*, i64 } %189, 0
  %.elt1224 = extractvalue { {}*, i64 } %189, 1
  %cond1141 = icmp eq i64 %.elt1224, 0
  %190 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1273 = select i1 %cond1141, {}* %190, {}* %.elt1222
  br i1 %test347, label %header-check-br344, label %tag144

header-check-br344:                               ; preds = %normal-dest338
  %191 = load i64, i64* %irc-bit-cast350, align 8
  %192 = icmp eq i64 %191, 1137
  br i1 %192, label %tag21, label %tag144

normal-dest359:                                   ; preds = %tag26
  %ptrtoint360 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint361 = add i64 %ptrtoint360, 7
  %entry-point-addr362 = inttoptr i64 %entry-point-addr-uint361 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point363 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr362, align 8
  %193 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point363({}* %36, i64 1, {}* %120, {}* null, {}* null, {}* null)
          to label %normal-dest366 unwind label %cleanup-lpad.loopexit

normal-dest366:                                   ; preds = %normal-dest359
  %.elt1261 = extractvalue { {}*, i64 } %193, 0
  %.elt1263 = extractvalue { {}*, i64 } %193, 1
  %cond1151 = icmp eq i64 %.elt1263, 0
  %194 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DAMENINDEX-238131.1 = select i1 %cond1151, {}* %194, {}* %.elt1261
  br label %tag13.backedge

normal-dest374:                                   ; preds = %tag54
  %ptrtoint376 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint377 = add i64 %ptrtoint376, 7
  %entry-point-addr378 = inttoptr i64 %entry-point-addr-uint377 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point379 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr378, align 8
  %195 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point379({}* %47, i64 2, {}* %DAMENINDEX-238131.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest382 unwind label %cleanup-lpad.loopexit

normal-dest382:                                   ; preds = %normal-dest374
  %.elt1257 = extractvalue { {}*, i64 } %195, 0
  %.elt1259 = extractvalue { {}*, i64 } %195, 1
  %cond1150 = icmp eq i64 %.elt1259, 0
  %196 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %DAMENINDEX-238131.2 = select i1 %cond1150, {}* %196, {}* %.elt1257
  br label %tag13.backedge

header-check-br388:                               ; preds = %tag176
  %irc-bit-cast392 = bitcast {}* %SUMME.0 to i8*
  %gep393 = getelementptr inbounds i8, i8* %irc-bit-cast392, i64 -9
  %irc-bit-cast394 = bitcast i8* %gep393 to i64*
  %197 = load i64, i64* %irc-bit-cast394, align 8
  %198 = icmp eq i64 %197, 1325
  br i1 %198, label %tag34, label %tag133

header-check-br404:                               ; preds = %tag34
  %irc-bit-cast408 = bitcast {}* %y272.0 to i8*
  %gep409 = getelementptr inbounds i8, i8* %irc-bit-cast408, i64 -9
  %irc-bit-cast410 = bitcast i8* %gep409 to i64*
  %199 = load i64, i64* %irc-bit-cast410, align 8
  %200 = icmp eq i64 %199, 1325
  br i1 %200, label %tag15, label %tag133

normal-dest430:                                   ; preds = %tag38
  %201 = invoke float @from_object_float({}* %SUMME.0)
          to label %normal-dest431 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest431:                                   ; preds = %normal-dest430
  %202 = fmul float %40, %201
  %203 = invoke {}* @to_object_float(float %202)
          to label %tag199 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest448:                                   ; preds = %tag45
  %ptrtoint449 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint450 = add i64 %ptrtoint449, 7
  %entry-point-addr451 = inttoptr i64 %entry-point-addr-uint450 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point452 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr451, align 8
  %204 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point452({}* %43, i64 1, {}* %38, {}* null, {}* null, {}* null)
          to label %normal-dest455 unwind label %cleanup-lpad.loopexit

normal-dest455:                                   ; preds = %normal-dest448
  %.elt1266 = extractvalue { {}*, i64 } %204, 0
  %.elt1268 = extractvalue { {}*, i64 } %204, 1
  %cond1146 = icmp eq i64 %.elt1268, 0
  %205 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %SUMME.2 = select i1 %cond1146, {}* %205, {}* %.elt1266
  br label %tag189

normal-dest462:                                   ; preds = %tag46
  %206 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %207 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %208 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %209 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint464 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint465 = add i64 %ptrtoint464, 7
  %entry-point-addr466 = inttoptr i64 %entry-point-addr-uint465 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point467 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr466, align 8
  %210 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point467({}* %45, i64 5, {}* %206, {}* %207, {}* %.in1216, {}* %208, {}* %209)
          to label %normal-dest470 unwind label %cleanup-lpad.loopexit

normal-dest470:                                   ; preds = %normal-dest462
  %.elt1291 = extractvalue { {}*, i64 } %210, 0
  %.elt1293 = extractvalue { {}*, i64 } %210, 1
  %cond1154 = icmp eq i64 %.elt1293, 0
  %211 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x471.1 = select i1 %cond1154, {}* %211, {}* %.elt1291
  br label %tag157

header-check-br483:                               ; preds = %tag69
  %irc-bit-cast487 = bitcast {}* %x514.0 to i8*
  %gep488 = getelementptr inbounds i8, i8* %irc-bit-cast487, i64 -9
  %irc-bit-cast489 = bitcast i8* %gep488 to i64*
  %212 = load i64, i64* %irc-bit-cast489, align 8
  %213 = icmp eq i64 %212, 1325
  br i1 %213, label %tag18, label %tag122

normal-dest505:                                   ; preds = %tag58
  %ptrtoint507 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint508 = add i64 %ptrtoint507, 7
  %entry-point-addr509 = inttoptr i64 %entry-point-addr-uint508 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point510 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr509, align 8
  %214 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point510({}* %51, i64 2, {}* inttoptr (i64 8522825734 to {}*), {}* %.in, {}* null, {}* null)
          to label %normal-dest513 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest513:                                   ; preds = %normal-dest505
  %.elt1173 = extractvalue { {}*, i64 } %214, 0
  %.elt1175 = extractvalue { {}*, i64 } %214, 1
  %cond1131 = icmp eq i64 %.elt1175, 0
  %215 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x514.1 = select i1 %cond1131, {}* %215, {}* %.elt1173
  br label %tag110

normal-dest533:                                   ; preds = %normal-dest1129
  call void @unreachableError()
  unreachable

normal-dest554:                                   ; preds = %normal-dest283
  call void @unreachableError()
  unreachable

normal-dest578:                                   ; preds = %tag84
  %216 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 591), align 8
  %ptrtoint579 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint580 = add i64 %ptrtoint579, 7
  %entry-point-addr581 = inttoptr i64 %entry-point-addr-uint580 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point582 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr581, align 8
  %217 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point582({}* %63, i64 2, {}* %.in1313, {}* %216, {}* null, {}* null)
          to label %normal-dest585 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest585:                                   ; preds = %normal-dest578
  %.elt1310 = extractvalue { {}*, i64 } %217, 0
  %.elt1312 = extractvalue { {}*, i64 } %217, 1
  %cond1156 = icmp eq i64 %.elt1312, 0
  %218 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOTIMES-VAR.1" = select i1 %cond1156, {}* %218, {}* %.elt1310
  br label %tag1

normal-dest592:                                   ; preds = %maybe-more-tests
  %ptrtoint593 = ptrtoint {}* %246 to i64
  %entry-point-addr-uint594 = add i64 %ptrtoint593, 7
  %entry-point-addr595 = inttoptr i64 %entry-point-addr-uint594 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point596 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr595, align 8
  %219 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point596({}* %246, i64 1, {}* nonnull %.in1313, {}* null, {}* null, {}* null)
          to label %normal-dest599 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest599:                                   ; preds = %normal-dest592
  %.elt1315 = extractvalue { {}*, i64 } %219, 0
  %.elt1317 = extractvalue { {}*, i64 } %219, 1
  %cond1157 = icmp eq i64 %.elt1317, 0
  %220 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238565.0 = select i1 %cond1157, {}* %220, {}* %.elt1315
  %221 = icmp eq {}* %G238565.0, inttoptr (i64 4 to {}*)
  %G238465.0.pre.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br i1 %221, label %tag184, label %tag181

normal-dest616:                                   ; preds = %tag103
  %ptrtoint617 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint618 = add i64 %ptrtoint617, 7
  %entry-point-addr619 = inttoptr i64 %entry-point-addr-uint618 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point620 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr619, align 8
  %222 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point620({}* %70, i64 2, {}* null, {}* %.in1273, {}* null, {}* null)
          to label %normal-dest623 unwind label %cleanup-lpad.loopexit

normal-dest623:                                   ; preds = %normal-dest616
  %.elt1228 = extractvalue { {}*, i64 } %222, 0
  %.elt1230 = extractvalue { {}*, i64 } %222, 1
  %cond1142 = icmp eq i64 %.elt1230, 0
  %223 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238334.1 = select i1 %cond1142, {}* %223, {}* %.elt1228
  br label %tag166

normal-dest636:                                   ; preds = %tag110
  %224 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 144), align 16
  %ptrtoint637 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint638 = add i64 %ptrtoint637, 7
  %entry-point-addr639 = inttoptr i64 %entry-point-addr-uint638 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point640 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr639, align 8
  %225 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point640({}* %74, i64 2, {}* %farg0, {}* %224, {}* null, {}* null)
          to label %normal-dest643 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest643:                                   ; preds = %normal-dest636
  %.elt1177 = extractvalue { {}*, i64 } %225, 0
  %.elt1179 = extractvalue { {}*, i64 } %225, 1
  %cond1132 = icmp eq i64 %.elt1179, 0
  %226 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1236 = select i1 %cond1132, {}* %226, {}* %.elt1177
  %227 = bitcast {}* %.in1236 to <{ [15 x i8], [0 x {}*] }>*
  %228 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %229 = invoke {}* @cc_safe_fdefinition({}* %228)
          to label %normal-dest650 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest650:                                   ; preds = %normal-dest643
  %230 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint651 = ptrtoint {}* %229 to i64
  %entry-point-addr-uint652 = add i64 %ptrtoint651, 7
  %entry-point-addr653 = inttoptr i64 %entry-point-addr-uint652 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point654 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr653, align 8
  %231 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point654({}* %229, i64 2, {}* %farg0, {}* %230, {}* null, {}* null)
          to label %normal-dest657 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest657:                                   ; preds = %normal-dest650
  %.elt1181 = extractvalue { {}*, i64 } %231, 0
  %.elt1183 = extractvalue { {}*, i64 } %231, 1
  %cond1133 = icmp eq i64 %.elt1183, 0
  %232 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1313 = select i1 %cond1133, {}* %232, {}* %.elt1181
  %233 = bitcast {}* %.in1313 to i8*
  %234 = ptrtoint {}* %.in1313 to i64
  %tag-only6631184 = and i64 %234, 7
  %consp-test664 = icmp eq i64 %tag-only6631184, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238521.0 = select i1 %consp-test664, {}* %.val, {}* %232
  %235 = icmp eq {}* %G238521.0, %232
  br i1 %235, label %tag215, label %tag.outer.preheader

tag.outer.preheader:                              ; preds = %normal-dest657
  br label %tag.outer

normal-dest674:                                   ; preds = %tag118
  %236 = invoke double @from_object_double({}* nonnull %SUMME.0)
          to label %normal-dest675 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest675:                                   ; preds = %normal-dest674
  %237 = fmul double %75, %236
  %238 = invoke {}* @to_object_double(double %237)
          to label %tag199 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest691:                                   ; preds = %tag122
  %ptrtoint692 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint693 = add i64 %ptrtoint692, 7
  %entry-point-addr694 = inttoptr i64 %entry-point-addr-uint693 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point695 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr694, align 8
  %239 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point695({}* %78, i64 2, {}* %x514.0, {}* %SUMME.0, {}* null, {}* null)
          to label %normal-dest698 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest698:                                   ; preds = %normal-dest691
  %.elt1296 = extractvalue { {}*, i64 } %239, 0
  %.elt1298 = extractvalue { {}*, i64 } %239, 1
  br label %tag199

normal-dest700:                                   ; preds = %tag123
  %ptrtoint701 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint702 = add i64 %ptrtoint701, 7
  %entry-point-addr703 = inttoptr i64 %entry-point-addr-uint702 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point704 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr703, align 8
  %240 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point704({}* %80, i64 2, {}* inttoptr (i64 8522825734 to {}*), {}* %.in1245, {}* null, {}* null)
          to label %normal-dest707 unwind label %cleanup-lpad.loopexit

normal-dest707:                                   ; preds = %normal-dest700
  %.elt1247 = extractvalue { {}*, i64 } %240, 0
  %.elt1249 = extractvalue { {}*, i64 } %240, 1
  %cond1144 = icmp eq i64 %.elt1249, 0
  %241 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %y272.1 = select i1 %cond1144, {}* %241, {}* %.elt1247
  br label %tag33

normal-dest715:                                   ; preds = %tag125
  %ptrtoint716 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint717 = add i64 %ptrtoint716, 7
  %entry-point-addr718 = inttoptr i64 %entry-point-addr-uint717 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point719 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr718, align 8
  %242 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point719({}* %84, i64 1, {}* %144, {}* null, {}* null, {}* null)
          to label %normal-dest722 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest722:                                   ; preds = %normal-dest715
  %.elt1193 = extractvalue { {}*, i64 } %242, 0
  %.elt1195 = extractvalue { {}*, i64 } %242, 1
  %cond1135 = icmp eq i64 %.elt1195, 0
  %243 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.1 = select i1 %cond1135, {}* %243, {}* %.elt1193
  br label %tag.outer.backedge

header-check-br728:                               ; preds = %header-check-br1012
  %.off1372 = add i64 %287, -1153
  %244 = icmp ult i64 %.off1372, 149
  br i1 %244, label %maybe-more-tests, label %tag181

maybe-more-tests:                                 ; preds = %header-check-br728
  %245 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 136), align 16
  %246 = invoke {}* @cc_safe_fdefinition({}* %245)
          to label %normal-dest592 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest741:                                   ; preds = %tag133
  %ptrtoint742 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint743 = add i64 %ptrtoint742, 7
  %entry-point-addr744 = inttoptr i64 %entry-point-addr-uint743 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point745 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr744, align 8
  %247 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point745({}* %90, i64 2, {}* %SUMME.0, {}* %y272.0, {}* null, {}* null)
          to label %normal-dest748 unwind label %cleanup-lpad.loopexit

normal-dest748:                                   ; preds = %normal-dest741
  %.elt1252 = extractvalue { {}*, i64 } %247, 0
  %.elt1254 = extractvalue { {}*, i64 } %247, 1
  %cond1145 = icmp eq i64 %.elt1254, 0
  %248 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %SUMME.3 = select i1 %cond1145, {}* %248, {}* %.elt1252
  br label %tag189

normal-dest764:                                   ; preds = %tag139
  %249 = invoke float @from_object_float({}* %.in1245)
          to label %normal-dest765 unwind label %cleanup-lpad.loopexit

normal-dest765:                                   ; preds = %normal-dest764
  %250 = fdiv float %92, %249
  %251 = invoke {}* @to_object_float(float %250)
          to label %tag33 unwind label %cleanup-lpad.loopexit

normal-dest775:                                   ; preds = %tag150
  %252 = invoke float @from_object_float({}* %"%DOTIMES-VAR.0")
          to label %normal-dest776 unwind label %cleanup-lpad.loopexit

normal-dest776:                                   ; preds = %normal-dest775
  %253 = fcmp olt float %95, %252
  br i1 %253, label %tag136, label %tag172

normal-dest781:                                   ; preds = %tag229
  %ptrtoint782 = ptrtoint {}* %146 to i64
  %entry-point-addr-uint783 = add i64 %ptrtoint782, 7
  %entry-point-addr784 = inttoptr i64 %entry-point-addr-uint783 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point785 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr784, align 8
  %254 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point785({}* %146, i64 2, {}* %.in1273, {}* %104, {}* null, {}* null)
          to label %normal-dest788 unwind label %cleanup-lpad.loopexit

normal-dest788:                                   ; preds = %normal-dest781
  %.elt1233 = extractvalue { {}*, i64 } %254, 0
  %.elt1235 = extractvalue { {}*, i64 } %254, 1
  %cond1143 = icmp eq i64 %.elt1235, 0
  %255 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238311.1 = select i1 %cond1143, {}* %255, {}* %.elt1233
  br label %tag59

normal-dest795:                                   ; preds = %tag153
  %256 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %257 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %258 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %259 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint796 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint797 = add i64 %ptrtoint796, 7
  %entry-point-addr798 = inttoptr i64 %entry-point-addr-uint797 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point799 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr798, align 8
  %260 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point799({}* %97, i64 5, {}* %256, {}* %257, {}* %.in1236, {}* %258, {}* %259)
          to label %normal-dest802 unwind label %cleanup-lpad.loopexit

normal-dest802:                                   ; preds = %normal-dest795
  %.elt1279 = extractvalue { {}*, i64 } %260, 0
  %.elt1281 = extractvalue { {}*, i64 } %260, 1
  %cond1149 = icmp eq i64 %.elt1281, 0
  %261 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1244 = select i1 %cond1149, {}* %261, {}* %.elt1279
  br label %tag212

normal-dest817:                                   ; preds = %tag156
  %ptrtoint818 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint819 = add i64 %ptrtoint818, 7
  %entry-point-addr820 = inttoptr i64 %entry-point-addr-uint819 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point821 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr820, align 8
  %262 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point821({}* %99, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest824 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest824:                                   ; preds = %normal-dest817
  %.elt1164 = extractvalue { {}*, i64 } %262, 0
  %.elt1166 = extractvalue { {}*, i64 } %262, 1
  %cond1130 = icmp eq i64 %.elt1166, 0
  %263 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond1130, {}* %263, {}* %.elt1164
  %264 = bitcast {}* %.in to i8*
  %ptrtoint831 = ptrtoint {}* %.in to i64
  %tag-only832 = and i64 %ptrtoint831, 7
  %test833 = icmp eq i64 %tag-only832, 1
  br i1 %test833, label %header-check-br830, label %tag202

header-check-br830:                               ; preds = %normal-dest824
  %gep835 = getelementptr inbounds i8, i8* %264, i64 -9
  %irc-bit-cast836 = bitcast i8* %gep835 to i64*
  %265 = load i64, i64* %irc-bit-cast836, align 8
  switch i64 %265, label %tag2 [
    i64 1325, label %tag58
    i64 1341, label %tag58
    i64 1349, label %tag58
  ]

normal-dest860:                                   ; preds = %tag20
  %ptrtoint861 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint862 = add i64 %ptrtoint861, 7
  %entry-point-addr863 = inttoptr i64 %entry-point-addr-uint862 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point864 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr863, align 8
  %266 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point864({}* %30, i64 2, {}* %DAMENINDEX-238131.0, {}* %88, {}* null, {}* null)
          to label %normal-dest867 unwind label %cleanup-lpad.loopexit

normal-dest867:                                   ; preds = %normal-dest860
  %.elt1213 = extractvalue { {}*, i64 } %266, 0
  %.elt1215 = extractvalue { {}*, i64 } %266, 1
  %cond1139 = icmp eq i64 %.elt1215, 0
  %267 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238399.1 = select i1 %cond1139, {}* %267, {}* %.elt1213
  br label %tag79

normal-dest877:                                   ; preds = %tag211
  %ptrtoint878 = ptrtoint {}* %133 to i64
  %entry-point-addr-uint879 = add i64 %ptrtoint878, 7
  %entry-point-addr880 = inttoptr i64 %entry-point-addr-uint879 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point881 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr880, align 8
  %268 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point881({}* %133, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest884 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest884:                                   ; preds = %normal-dest877
  %.elt1189 = extractvalue { {}*, i64 } %268, 0
  %.elt1191 = extractvalue { {}*, i64 } %268, 1
  %cond1134 = icmp eq i64 %.elt1191, 0
  %269 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %LENGTH.2 = select i1 %cond1134, {}* %269, {}* %.elt1189
  br label %tag.outer.backedge

header-check-br890:                               ; preds = %header-check-br980
  %270 = load i64, i64* %irc-bit-cast896, align 8
  %271 = icmp eq i64 %270, 1325
  br i1 %271, label %tag237, label %tag200

header-check-br934:                               ; preds = %tag195
  %gep939 = getelementptr inbounds i8, i8* %134, i64 -9
  %irc-bit-cast940 = bitcast i8* %gep939 to i64*
  %272 = load i64, i64* %irc-bit-cast940, align 8
  %273 = icmp eq i64 %272, 1309
  br i1 %273, label %tag123, label %tag240

normal-dest942:                                   ; preds = %tag197
  %274 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint943 = ptrtoint {}* %122 to i64
  %entry-point-addr-uint944 = add i64 %ptrtoint943, 7
  %entry-point-addr945 = inttoptr i64 %entry-point-addr-uint944 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point946 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr945, align 8
  %275 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point946({}* %122, i64 3, {}* %274, {}* %DAMENINDEX-238131.0, {}* %88, {}* null)
          to label %normal-dest949 unwind label %cleanup-lpad.loopexit

normal-dest949:                                   ; preds = %normal-dest942
  %.elt1283 = extractvalue { {}*, i64 } %275, 0
  %.elt1285 = extractvalue { {}*, i64 } %275, 1
  %cond1152 = icmp eq i64 %.elt1285, 0
  %276 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x471.2 = select i1 %cond1152, {}* %276, {}* %.elt1283
  br label %tag157

normal-dest956:                                   ; preds = %tag200
  %ptrtoint957 = ptrtoint {}* %126 to i64
  %entry-point-addr-uint958 = add i64 %ptrtoint957, 7
  %entry-point-addr959 = inttoptr i64 %entry-point-addr-uint958 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point960 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr959, align 8
  %277 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point960({}* %126, i64 2, {}* %DAMENINDEX-238131.0, {}* %"%DOTIMES-VAR.0", {}* null, {}* null)
          to label %normal-dest963 unwind label %cleanup-lpad.loopexit

normal-dest963:                                   ; preds = %normal-dest956
  %.elt1198 = extractvalue { {}*, i64 } %277, 0
  %.elt1200 = extractvalue { {}*, i64 } %277, 1
  %cond1136 = icmp eq i64 %.elt1200, 0
  %278 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238193.1 = select i1 %cond1136, {}* %278, {}* %.elt1198
  br label %tag234

header-check-br980:                               ; preds = %tag161
  %irc-bit-cast984 = bitcast {}* %DAMENINDEX-238131.0 to i8*
  %gep985 = getelementptr inbounds i8, i8* %irc-bit-cast984, i64 -9
  %irc-bit-cast986 = bitcast i8* %gep985 to i64*
  %279 = load i64, i64* %irc-bit-cast986, align 8
  %280 = icmp ne i64 %279, 1325
  %brmerge = or i1 %test893, %280
  br i1 %brmerge, label %tag200, label %header-check-br890

header-check-br988:                               ; preds = %tag212
  %gep993 = getelementptr inbounds i8, i8* %134, i64 -9
  %irc-bit-cast994 = bitcast i8* %gep993 to i64*
  %281 = load i64, i64* %irc-bit-cast994, align 8
  switch i64 %281, label %tag42 [
    i64 1325, label %tag123
    i64 1341, label %tag123
    i64 1349, label %tag123
  ]

normal-dest995:                                   ; preds = %tag213
  %282 = invoke float @from_object_float({}* %.in)
          to label %normal-dest996 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest996:                                   ; preds = %normal-dest995
  %283 = fdiv float %135, %282
  %284 = invoke {}* @to_object_float(float %283)
          to label %tag110 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest999:                                   ; preds = %tag214
  %ptrtoint1000 = ptrtoint {}* %137 to i64
  %entry-point-addr-uint1001 = add i64 %ptrtoint1000, 7
  %entry-point-addr1002 = inttoptr i64 %entry-point-addr-uint1001 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1003 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1002, align 8
  %285 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1003({}* %137, i64 2, {}* null, {}* %DAMENINDEX-238131.0, {}* null, {}* null)
          to label %normal-dest1006 unwind label %cleanup-lpad.loopexit

normal-dest1006:                                  ; preds = %normal-dest999
  %.elt1208 = extractvalue { {}*, i64 } %285, 0
  %.elt1210 = extractvalue { {}*, i64 } %285, 1
  %cond1138 = icmp eq i64 %.elt1210, 0
  %286 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238422.1 = select i1 %cond1138, {}* %286, {}* %.elt1208
  br label %tag88

header-check-br1012:                              ; preds = %tag215
  %gep1017 = getelementptr inbounds i8, i8* %233, i64 -9
  %irc-bit-cast1018 = bitcast i8* %gep1017 to i64*
  %287 = load i64, i64* %irc-bit-cast1018, align 8
  %.off = add i64 %287, -1081
  %288 = icmp ult i64 %.off, 69
  br i1 %288, label %tag184, label %header-check-br728

normal-dest1022:                                  ; preds = %tag216
  %289 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %290 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %291 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %292 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint1023 = ptrtoint {}* %139 to i64
  %entry-point-addr-uint1024 = add i64 %ptrtoint1023, 7
  %entry-point-addr1025 = inttoptr i64 %entry-point-addr-uint1024 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1026 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1025, align 8
  %293 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1026({}* %139, i64 5, {}* %289, {}* %290, {}* %.in1273, {}* %291, {}* %292)
          to label %normal-dest1029 unwind label %cleanup-lpad.loopexit

normal-dest1029:                                  ; preds = %normal-dest1022
  %.elt1275 = extractvalue { {}*, i64 } %293, 0
  %.elt1277 = extractvalue { {}*, i64 } %293, 1
  %cond1148 = icmp eq i64 %.elt1277, 0
  %294 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1243 = select i1 %cond1148, {}* %294, {}* %.elt1275
  br label %tag212

header-check-br1039:                              ; preds = %tag221
  %gep1044 = getelementptr inbounds i8, i8* %264, i64 -9
  %irc-bit-cast1045 = bitcast i8* %gep1044 to i64*
  %295 = load i64, i64* %irc-bit-cast1045, align 8
  %296 = icmp eq i64 %295, 1309
  br i1 %296, label %tag58, label %tag12

normal-dest1047:                                  ; preds = %tag223
  %297 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %298 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %299 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %300 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint1048 = ptrtoint {}* %142 to i64
  %entry-point-addr-uint1049 = add i64 %ptrtoint1048, 7
  %entry-point-addr1050 = inttoptr i64 %entry-point-addr-uint1049 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1051 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1050, align 8
  %301 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1051({}* %142, i64 5, {}* %297, {}* %298, {}* %DAMENINDEX-238131.0, {}* %299, {}* %300)
          to label %normal-dest1054 unwind label %cleanup-lpad.loopexit

normal-dest1054:                                  ; preds = %normal-dest1047
  %.elt1287 = extractvalue { {}*, i64 } %301, 0
  %.elt1289 = extractvalue { {}*, i64 } %301, 1
  %cond1153 = icmp eq i64 %.elt1289, 0
  %302 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %x471.3 = select i1 %cond1153, {}* %302, {}* %.elt1287
  br label %tag157

normal-dest1073:                                  ; preds = %tag230
  %303 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 592), align 16
  %ptrtoint1074 = ptrtoint {}* %148 to i64
  %entry-point-addr-uint1075 = add i64 %ptrtoint1074, 7
  %entry-point-addr1076 = inttoptr i64 %entry-point-addr-uint1075 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1077 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1076, align 8
  %304 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1077({}* %148, i64 2, {}* %G2095854.0, {}* %303, {}* null, {}* null)
          to label %tag unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest1090:                                  ; preds = %tag236
  %305 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint1091 = ptrtoint {}* %157 to i64
  %entry-point-addr-uint1092 = add i64 %ptrtoint1091, 7
  %entry-point-addr1093 = inttoptr i64 %entry-point-addr-uint1092 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1094 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1093, align 8
  %306 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1094({}* %157, i64 2, {}* %farg0, {}* %305, {}* null, {}* null)
          to label %normal-dest1097 unwind label %cleanup-lpad.loopexit

normal-dest1097:                                  ; preds = %normal-dest1090
  %.elt1202 = extractvalue { {}*, i64 } %306, 0
  %.elt1204 = extractvalue { {}*, i64 } %306, 1
  %cond1137 = icmp eq i64 %.elt1204, 0
  %307 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1216 = select i1 %cond1137, {}* %307, {}* %.elt1202
  %308 = bitcast {}* %.in1216 to <{ [15 x i8], [0 x {}*] }>*
  %ptrtoint1106 = ptrtoint {}* %.in1216 to i64
  %tag-only1107 = and i64 %ptrtoint1106, 7
  %test1108 = icmp eq i64 %tag-only1107, 1
  br i1 %test1108, label %tag61, label %tag46

normal-dest1112:                                  ; preds = %tag237
  %309 = invoke double @from_object_double({}* nonnull %"%DOTIMES-VAR.0")
          to label %normal-dest1113 unwind label %cleanup-lpad.loopexit

normal-dest1113:                                  ; preds = %normal-dest1112
  %310 = fcmp olt double %158, %309
  br i1 %310, label %tag99, label %tag106

normal-dest1115:                                  ; preds = %tag238
  %311 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %312 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %313 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %314 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint1116 = ptrtoint {}* %160 to i64
  %entry-point-addr-uint1117 = add i64 %ptrtoint1116, 7
  %entry-point-addr1118 = inttoptr i64 %entry-point-addr-uint1117 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1119 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1118, align 8
  %315 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1119({}* %160, i64 5, {}* %311, {}* %312, {}* %SEQUENCE.0.ph, {}* %313, {}* %314)
          to label %normal-dest1122 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest1122:                                  ; preds = %normal-dest1115
  %.elt1306 = extractvalue { {}*, i64 } %315, 0
  %.elt1308 = extractvalue { {}*, i64 } %315, 1
  %cond1155 = icmp eq i64 %.elt1308, 0
  %316 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G2095854.1 = select i1 %cond1155, {}* %316, {}* %.elt1306
  br label %tag56

normal-dest1129:                                  ; preds = %tag240
  %317 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %318 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %319 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %320 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 223), align 8
  %ptrtoint527 = ptrtoint {}* %162 to i64
  %entry-point-addr-uint528 = add i64 %ptrtoint527, 7
  %entry-point-addr529 = inttoptr i64 %entry-point-addr-uint528 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point530 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr529, align 8
  %321 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point530({}* %162, i64 5, {}* %317, {}* %318, {}* %.in1245, {}* %319, {}* %320)
          to label %normal-dest533 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^440^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !95 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^440^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G238601.0 = phi {}* [ %18, %header-check-br ], [ %G238601.1, %normal-dest17 ], [ %G238601.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 598), align 16
  %ptrtoint20 = ptrtoint {}* %G238601.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G238601.0, i64 2, {}* %"closure->ND=DAMEN_SCHLUESSEL", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %maybe-more-tests67, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 598), align 16
  %"closure->ND=DAMEN_SCHLUESSEL" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 15367, i64 440, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br59

normal-dest13:                                    ; preds = %maybe-more-tests67
  %ptrtoint14 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238601.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 600), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->ND=DAMEN_SCHLUESSEL", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 601), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->ND=DAMEN_SCHLUESSEL", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 1760 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 598), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 597), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238601.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !96 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc250 unwind label %cleanup-lpad

.noexc250:                                        ; preds = %13
  unreachable

tag3:                                             ; preds = %tag48
  br i1 %fixnump-test176, label %tag49, label %tag34

tag4:                                             ; preds = %tag37
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest80 unwind label %cleanup-lpad

tag7:                                             ; preds = %normal-dest70, %tag43
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest95 unwind label %cleanup-lpad

tag15:                                            ; preds = %tag49, %normal-dest157
  %18 = phi {}* [ %74, %normal-dest157 ], [ %40, %tag49 ]
  %G238645.0 = phi {}* [ %G238645.1, %normal-dest157 ], [ %.258, %tag49 ]
  %19 = icmp eq {}* %G238645.0, %18
  br i1 %19, label %tag21, label %tag20

tag19:                                            ; preds = %normal-dest136, %normal-dest102, %normal-dest87, %tag20
  %20 = phi {}* [ %18, %tag20 ], [ %63, %normal-dest87 ], [ %69, %normal-dest102 ], [ %72, %normal-dest136 ]
  %G238585.0 = phi {}* [ %23, %tag20 ], [ %G238585.1, %normal-dest87 ], [ %G238585.2, %normal-dest102 ], [ %G238585.3, %normal-dest136 ]
  %21 = icmp eq {}* %G238585.0, %20
  %.G238585.0 = select i1 %21, {}* inttoptr (i64 400000 to {}*), {}* %G238585.0
  %ptrtoint177 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint178 = add i64 %ptrtoint177, 7
  %entry-point-addr179 = inttoptr i64 %entry-point-addr-uint178 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point180 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr179, align 8
  %22 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point180({}* %46, i64 1, {}* %.G238585.0, {}* null, {}* null, {}* null)
          to label %normal-dest183 unwind label %cleanup-lpad

tag20:                                            ; preds = %tag15
  %"untagged fixnum" = lshr exact i64 %32, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %52, i64 0, i32 1, i64 %"untagged fixnum"
  %23 = load {}*, {}** %aref, align 8
  br label %tag19

tag21:                                            ; preds = %tag48, %tag15
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest129 unwind label %cleanup-lpad

tag34:                                            ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest150 unwind label %cleanup-lpad

tag35:                                            ; preds = %tag37
  %28 = add i64 %ptrtoint76, 7
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 8
  %"tag fixnum" = shl nuw i64 %30, 2
  %31 = inttoptr i64 %"tag fixnum" to {}*
  br i1 %fixnump-test176, label %tag40, label %tag47

tag37:                                            ; preds = %tag43
  %32 = ptrtoint {}* %.in241 to i64
  %fixnum-tag-only175219 = and i64 %32, 3
  %fixnump-test176 = icmp eq i64 %fixnum-tag-only175219, 0
  %G238692.0 = select i1 %fixnump-test176, {}* %.val261, {}* %57
  %33 = icmp eq {}* %G238692.0, %57
  br i1 %33, label %tag4, label %tag35

tag40:                                            ; preds = %tag35
  %34 = icmp sgt {}* %.in241, inttoptr (i64 -1 to {}*)
  %.257 = select i1 %34, {}* %.val261, {}* %57
  br label %tag48

tag43:                                            ; preds = %normal-dest70
  %irc-bit-cast77 = bitcast {}* %.in to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast77, i64 -9
  %irc-bit-cast78 = bitcast i8* %gep to i64*
  %35 = load i64, i64* %irc-bit-cast78, align 8
  %36 = icmp eq i64 %35, 1137
  %.val261 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238695.0.pre = select i1 %36, {}* %.val261, {}* %57
  %37 = icmp eq {}* %G238695.0.pre, %57
  br i1 %37, label %tag7, label %tag37

tag47:                                            ; preds = %tag35
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest194 unwind label %cleanup-lpad

tag48:                                            ; preds = %tag40, %normal-dest201
  %40 = phi {}* [ %76, %normal-dest201 ], [ %57, %tag40 ]
  %G238668.0 = phi {}* [ %G238668.1, %normal-dest201 ], [ %.257, %tag40 ]
  %41 = icmp eq {}* %G238668.0, %40
  br i1 %41, label %tag21, label %tag3

tag49:                                            ; preds = %tag3
  %42 = icmp sgt i64 %"tag fixnum", %32
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.258 = select i1 %42, {}* %43, {}* %40
  br label %tag15

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest194, %tag47, %tag19, %normal-dest150, %tag34, %normal-dest129, %tag21, %normal-dest95, %tag7, %normal-dest80, %tag4, %normal-dest63, %normal-dest59, %normal-dest56, %normal-dest54, %normal-dest
  %44 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %44

normal-dest:                                      ; preds = %11
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 400), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %normal-dest54
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 144), align 16
  %ptrtoint = ptrtoint {}* %48 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %48, i64 2, {}* %farg0, {}* %49, {}* null, {}* null)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %50, 0
  %.elt214 = extractvalue { {}*, i64 } %50, 1
  %cond = icmp eq i64 %.elt214, 0
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %51, {}* %.elt
  %52 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest59
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint64 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint65 = add i64 %ptrtoint64, 7
  %entry-point-addr66 = inttoptr i64 %entry-point-addr-uint65 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point67 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr66, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point67({}* %54, i64 2, {}* %farg1, {}* %55, {}* null, {}* null)
          to label %normal-dest70 unwind label %cleanup-lpad

normal-dest70:                                    ; preds = %normal-dest63
  %.elt216 = extractvalue { {}*, i64 } %56, 0
  %.elt218 = extractvalue { {}*, i64 } %56, 1
  %cond207 = icmp eq i64 %.elt218, 0
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in241 = select i1 %cond207, {}* %57, {}* %.elt216
  %ptrtoint76 = ptrtoint {}* %.in to i64
  %tag-only = and i64 %ptrtoint76, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %tag43, label %tag7

normal-dest80:                                    ; preds = %tag4
  %58 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %60 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %61 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint81 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint82 = add i64 %ptrtoint81, 7
  %entry-point-addr83 = inttoptr i64 %entry-point-addr-uint82 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point84 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr83, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point84({}* %15, i64 5, {}* %58, {}* %59, {}* %.in241, {}* %60, {}* %61)
          to label %normal-dest87 unwind label %cleanup-lpad

normal-dest87:                                    ; preds = %normal-dest80
  %.elt243 = extractvalue { {}*, i64 } %62, 0
  %.elt245 = extractvalue { {}*, i64 } %62, 1
  %cond211 = icmp eq i64 %.elt245, 0
  %63 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238585.1 = select i1 %cond211, {}* %63, {}* %.elt243
  br label %tag19

normal-dest95:                                    ; preds = %tag7
  %64 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %65 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %66 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint96 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint97 = add i64 %ptrtoint96, 7
  %entry-point-addr98 = inttoptr i64 %entry-point-addr-uint97 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point99 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr98, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point99({}* %17, i64 5, {}* %64, {}* %65, {}* %.in, {}* %66, {}* %67)
          to label %normal-dest102 unwind label %cleanup-lpad

normal-dest102:                                   ; preds = %normal-dest95
  %.elt247 = extractvalue { {}*, i64 } %68, 0
  %.elt249 = extractvalue { {}*, i64 } %68, 1
  %cond212 = icmp eq i64 %.elt249, 0
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238585.2 = select i1 %cond212, {}* %69, {}* %.elt247
  br label %tag19

normal-dest129:                                   ; preds = %tag21
  %70 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint130 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint131 = add i64 %ptrtoint130, 7
  %entry-point-addr132 = inttoptr i64 %entry-point-addr-uint131 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point133 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr132, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point133({}* %25, i64 3, {}* %70, {}* %.in241, {}* %31, {}* null)
          to label %normal-dest136 unwind label %cleanup-lpad

normal-dest136:                                   ; preds = %normal-dest129
  %.elt238 = extractvalue { {}*, i64 } %71, 0
  %.elt240 = extractvalue { {}*, i64 } %71, 1
  %cond210 = icmp eq i64 %.elt240, 0
  %72 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238585.3 = select i1 %cond210, {}* %72, {}* %.elt238
  br label %tag19

normal-dest150:                                   ; preds = %tag34
  %ptrtoint151 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint152 = add i64 %ptrtoint151, 7
  %entry-point-addr153 = inttoptr i64 %entry-point-addr-uint152 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point154 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr153, align 8
  %73 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point154({}* %27, i64 2, {}* %.in241, {}* %31, {}* null, {}* null)
          to label %normal-dest157 unwind label %cleanup-lpad

normal-dest157:                                   ; preds = %normal-dest150
  %.elt227 = extractvalue { {}*, i64 } %73, 0
  %.elt229 = extractvalue { {}*, i64 } %73, 1
  %cond209 = icmp eq i64 %.elt229, 0
  %74 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238645.1 = select i1 %cond209, {}* %74, {}* %.elt227
  br label %tag15

normal-dest183:                                   ; preds = %tag19
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %22

normal-dest194:                                   ; preds = %tag47
  %ptrtoint195 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint196 = add i64 %ptrtoint195, 7
  %entry-point-addr197 = inttoptr i64 %entry-point-addr-uint196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr197, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point198({}* %39, i64 2, {}* null, {}* %.in241, {}* null, {}* null)
          to label %normal-dest201 unwind label %cleanup-lpad

normal-dest201:                                   ; preds = %normal-dest194
  %.elt222 = extractvalue { {}*, i64 } %75, 0
  %.elt224 = extractvalue { {}*, i64 } %75, 1
  %cond208 = icmp eq i64 %.elt224, 0
  %76 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238668.1 = select i1 %cond208, {}* %76, {}* %.elt222
  br label %tag48
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^444^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !97 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^444^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G238726.0 = phi {}* [ %18, %header-check-br ], [ %G238726.1, %normal-dest17 ], [ %G238726.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 604), align 16
  %ptrtoint43 = ptrtoint {}* %G238726.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G238726.0, i64 2, {}* %"closure->ND=AUSGABE", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %tag1, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 604), align 16
  %"closure->ND=AUSGABE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=AUSGABE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AUSGABE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 15506, i64 444, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238726.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

normal-dest21:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 603), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238726.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=AUSGABE", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 606), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=AUSGABE", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1900 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 604), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=AUSGABE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !98 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=AUSGABE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag12.backedge:                                   ; preds = %normal-dest39, %tag8
  %11 = phi {}* [ %.pre, %tag8 ], [ %44, %normal-dest39 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %19, %tag8 ], [ %"%DOLIST-VAR.2", %normal-dest39 ]
  %12 = icmp eq {}* %"%DOLIST-VAR.0.be", %11
  br i1 %12, label %tag15, label %tag20

tag2:                                             ; preds = %tag19
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest32 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %tag20
  %15 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest46 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %normal-dest101
  %17 = add i64 %31, 5
  %18 = inttoptr i64 %17 to {}**
  %19 = load {}*, {}** %18, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag12.backedge

tag15:                                            ; preds = %tag19, %tag12.backedge, %normal-dest28
  %20 = phi {}* [ %37, %normal-dest28 ], [ %11, %tag12.backedge ], [ %28, %tag19 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %21 = insertvalue { {}*, i64 } undef, {}* %20, 0
  %22 = insertvalue { {}*, i64 } %21, i64 1, 1
  ret { {}*, i64 } %22

tag16:                                            ; preds = %tag20
  %23 = add i64 %31, -3
  %24 = inttoptr i64 %23 to {}**
  %25 = load {}*, {}** %24, align 8
  br label %tag18

tag18:                                            ; preds = %normal-dest54, %tag16
  %ZEILE.0 = phi {}* [ %25, %tag16 ], [ %ZEILE.1, %normal-dest54 ]
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 268), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit

tag19:                                            ; preds = %normal-dest101
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %29 = icmp eq {}* %"%DOLIST-VAR.0158", %28
  %.val156 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238757.0 = select i1 %29, {}* %.val156, {}* %28
  %30 = icmp eq {}* %G238757.0, %28
  br i1 %30, label %tag2, label %tag15

tag20:                                            ; preds = %tag20.preheader, %tag12.backedge
  %.val155 = phi {}* [ %11, %tag12.backedge ], [ %37, %tag20.preheader ]
  %"%DOLIST-VAR.0158" = phi {}* [ %"%DOLIST-VAR.0.be", %tag12.backedge ], [ %"%DOLIST-VAR.1", %tag20.preheader ]
  %31 = ptrtoint {}* %"%DOLIST-VAR.0158" to i64
  %tag-only118126 = and i64 %31, 7
  %consp-test119 = icmp eq i64 %tag-only118126, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G238791.0 = select i1 %consp-test119, {}* %.val, {}* %.val155
  %32 = icmp eq {}* %G238791.0, %.val155
  br i1 %32, label %tag7, label %tag16

cleanup-lpad.loopexit:                            ; preds = %tag2, %normal-dest32, %tag7, %normal-dest46, %tag18, %normal-dest66, %normal-dest68, %normal-dest70, %normal-dest77, %normal-dest89
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest25, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint = ptrtoint {}* %34 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %34, i64 1, {}* %35, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest28:                                    ; preds = %normal-dest25
  %.elt = extractvalue { {}*, i64 } %36, 0
  %.elt125 = extractvalue { {}*, i64 } %36, 1
  %cond = icmp eq i64 %.elt125, 0
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %37, {}* %.elt
  %38 = icmp eq {}* %"%DOLIST-VAR.1", %37
  br i1 %38, label %tag15, label %tag20.preheader

tag20.preheader:                                  ; preds = %normal-dest28
  br label %tag20

normal-dest32:                                    ; preds = %tag2
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint33 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %14, i64 5, {}* %39, {}* %40, {}* %"%DOLIST-VAR.0158", {}* %41, {}* %42)
          to label %normal-dest39 unwind label %cleanup-lpad.loopexit

normal-dest39:                                    ; preds = %normal-dest32
  %.elt141 = extractvalue { {}*, i64 } %43, 0
  %.elt143 = extractvalue { {}*, i64 } %43, 1
  %cond122 = icmp eq i64 %.elt143, 0
  %44 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond122, {}* %44, {}* %.elt141
  br label %tag12.backedge

normal-dest46:                                    ; preds = %tag7
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %46 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint48 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %16, i64 5, {}* %45, {}* %46, {}* %"%DOLIST-VAR.0158", {}* %47, {}* %48)
          to label %normal-dest54 unwind label %cleanup-lpad.loopexit

normal-dest54:                                    ; preds = %normal-dest46
  %.elt145 = extractvalue { {}*, i64 } %49, 0
  %.elt147 = extractvalue { {}*, i64 } %49, 1
  %cond123 = icmp eq i64 %.elt147, 0
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ZEILE.1 = select i1 %cond123, {}* %50, {}* %.elt145
  br label %tag18

normal-dest66:                                    ; preds = %tag18
  %51 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest68 unwind label %cleanup-lpad.loopexit

normal-dest68:                                    ; preds = %normal-dest66
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest70 unwind label %cleanup-lpad.loopexit

normal-dest70:                                    ; preds = %normal-dest68
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint71 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %54, i64 2, {}* %ZEILE.0, {}* %55, {}* null, {}* null)
          to label %normal-dest77 unwind label %cleanup-lpad.loopexit

normal-dest77:                                    ; preds = %normal-dest70
  %.elt128 = extractvalue { {}*, i64 } %56, 0
  %.elt130 = extractvalue { {}*, i64 } %56, 1
  %cond120 = icmp eq i64 %.elt130, 0
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238768.0 = select i1 %cond120, {}* %57, {}* %.elt128
  %ptrtoint83 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %52, i64 2, {}* %ZEILE.0, {}* %G238768.0, {}* null, {}* null)
          to label %normal-dest89 unwind label %cleanup-lpad.loopexit

normal-dest89:                                    ; preds = %normal-dest77
  %.elt132 = extractvalue { {}*, i64 } %58, 0
  %.elt134 = extractvalue { {}*, i64 } %58, 1
  %cond121 = icmp eq i64 %.elt134, 0
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238765.0 = select i1 %cond121, {}* %59, {}* %.elt132
  %ptrtoint95 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint96 = add i64 %ptrtoint95, 7
  %entry-point-addr97 = inttoptr i64 %entry-point-addr-uint96 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point98 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr97, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point98({}* %27, i64 1, {}* %G238765.0, {}* null, {}* null, {}* null)
          to label %normal-dest101 unwind label %cleanup-lpad.loopexit

normal-dest101:                                   ; preds = %normal-dest89
  br i1 %consp-test119, label %tag8, label %tag19
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^480^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !99 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^480^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G238868.0 = phi {}* [ %18, %header-check-br ], [ %G238868.1, %normal-dest17 ], [ %G238868.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 615), align 8
  %ptrtoint43 = ptrtoint {}* %G238868.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G238868.0, i64 2, {}* %"closure->ND=PARAMETER_BEKANNT", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 615), align 8
  %"closure->ND=PARAMETER_BEKANNT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 16847, i64 480, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 614), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238868.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238868.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 617), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=PARAMETER_BEKANNT", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 626), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=PARAMETER_BEKANNT", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 2140 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 615), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !100 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %11 = icmp ult i64 %nargs, 4
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %12
  unreachable

; <label>:13:                                     ; preds = %entry
  %14 = icmp eq i64 %nargs, 4
  br i1 %14, label %normal-dest, label %15

; <label>:15:                                     ; preds = %13
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc1919 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc1919:                                       ; preds = %15
  unreachable

tag3:                                             ; preds = %tag62
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest378 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag4:                                             ; preds = %normal-dest767, %header-check-br700
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest388 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag5:                                             ; preds = %tag215
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest402 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag6:                                             ; preds = %normal-dest1356, %header-check-br430
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest417 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag11:                                            ; preds = %header-check-br818, %tag282
  %G239048.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag282 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br818 ]
  %G239048.0 = load {}*, {}** %G239048.0.in, align 16
  %24 = icmp eq {}* %G239048.0, %320
  br i1 %24, label %tag189, label %tag156

tag16:                                            ; preds = %tag363
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest453 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag22:                                            ; preds = %tag290
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest475 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag24:                                            ; preds = %normal-dest
  %29 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only = and i64 %29, 7
  %fixnum-tag-only11781894 = and i64 %29, 3
  %fixnump-test1179 = icmp ne i64 %fixnum-tag-only11781894, 0
  %test1504 = icmp eq i64 %single-float-tag-only, 1
  %or.cond1975 = and i1 %fixnump-test1179, %test1504
  br i1 %or.cond1975, label %header-check-br1501, label %tag237

tag35:                                            ; preds = %normal-dest1516, %normal-dest1016, %normal-dest916, %tag90
  %30 = phi {}* [ %125, %tag90 ], [ %350, %normal-dest916 ], [ %366, %normal-dest1016 ], [ %431, %normal-dest1516 ]
  %G238847.0 = phi {}* [ %61, %tag90 ], [ %G238847.1, %normal-dest916 ], [ %G238847.2, %normal-dest1016 ], [ %G238847.3, %normal-dest1516 ]
  %31 = icmp eq {}* %G238847.0, %30
  %.val19962021 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %object444.02022 = select i1 %31, {}* %.val19962021, {}* %30
  %32 = icmp eq {}* %object444.02022, %30
  %G238918.02023 = select i1 %32, {}* %.val19962021, {}* %30
  %33 = icmp eq {}* %G238918.02023, %30
  br i1 %33, label %tag109, label %tag326.lr.ph

tag326.lr.ph:                                     ; preds = %tag35
  %34 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only1559 = and i64 %34, 7
  %fixnum-tag-only1783 = and i64 %34, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only1783, 0
  %test1474 = icmp eq i64 %single-float-tag-only1559, 1
  %or.cond1974 = and i1 %fixnump-test, %test1474
  %irc-bit-cast1475 = bitcast {}* %farg1 to i8*
  %gep1476 = getelementptr inbounds i8, i8* %irc-bit-cast1475, i64 -9
  %irc-bit-cast1477 = bitcast i8* %gep1476 to i64*
  br label %tag326

tag43:                                            ; preds = %tag326
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest533 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag44:                                            ; preds = %tag145, %normal-dest1488
  %37 = phi {}* [ %420, %normal-dest1488 ], [ %.val2001, %tag145 ]
  %G238943.0 = phi {}* [ %G238943.1, %normal-dest1488 ], [ %92, %tag145 ]
  %38 = icmp eq {}* %G238943.0, %37
  br i1 %38, label %tag44.tag216_crit_edge, label %tag108

tag44.tag216_crit_edge:                           ; preds = %tag44
  %.val1996.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag216

tag54:                                            ; preds = %tag313, %normal-dest877
  %39 = phi {}* [ %340, %normal-dest877 ], [ %137, %tag313 ]
  %G239325.0 = phi {}* [ %G239325.1, %normal-dest877 ], [ %.1971, %tag313 ]
  %40 = icmp eq {}* %G239325.0, %39
  br i1 %40, label %tag264, label %tag244

tag60:                                            ; preds = %tag188
  br i1 %200, label %tag322, label %tag145

tag62:                                            ; preds = %tag197
  %41 = add i64 %ptrtoint1228, 7
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %"tag fixnum" = shl nuw i64 %43, 2
  %44 = inttoptr i64 %"tag fixnum" to {}*
  br i1 %fixnump-test1030, label %tag148, label %tag3

tag65:                                            ; preds = %tag329, %normal-dest1610
  %45 = phi {}* [ %452, %normal-dest1610 ], [ %320, %tag329 ]
  %G239021.0 = phi {}* [ %G239021.1, %normal-dest1610 ], [ %.1973, %tag329 ]
  %46 = icmp eq {}* %G239021.0, %45
  br i1 %46, label %tag146, label %tag315

tag70:                                            ; preds = %tag188
  %47 = add i64 %202, -3
  %48 = inttoptr i64 %47 to {}**
  %49 = load {}*, {}** %48, align 8
  br label %tag145

tag71:                                            ; preds = %header-check-br1501, %header-check-br1501, %header-check-br1501, %header-check-br1501
  %50 = ptrtoint {}* %232 to i64
  %single-float-tag-only579 = and i64 %50, 7
  %51 = icmp eq i64 %single-float-tag-only579, 6
  br i1 %51, label %tag237, label %tag361

tag72:                                            ; preds = %normal-dest1425, %header-check-br1357, %normal-dest424
  %G239223.0 = phi {}* [ %G239223.1, %normal-dest424 ], [ %177, %header-check-br1357 ], [ %G239223.2, %normal-dest1425 ]
  %ptrtoint580 = ptrtoint {}* %G239223.0 to i64
  %entry-point-addr-uint581 = add i64 %ptrtoint580, 7
  %entry-point-addr582 = inttoptr i64 %entry-point-addr-uint581 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point583 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr582, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point583({}* %G239223.0, i64 3, {}* %G238803.0, {}* %.in, {}* %G238802.0, {}* null)
          to label %normal-dest586 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag73:                                            ; preds = %mvn-final604
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest607 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag75:                                            ; preds = %tag156
  %55 = add i64 %ptrtoint1228, 7
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %"tag fixnum630" = shl nuw i64 %57, 2
  %58 = inttoptr i64 %"tag fixnum630" to {}*
  br i1 %fixnump-test930, label %tag329, label %tag352

tag86:                                            ; preds = %tag163
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest663 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag90:                                            ; preds = %tag185
  %"untagged fixnum" = lshr exact i64 %108, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %383, i64 0, i32 1, i64 %"untagged fixnum"
  %61 = load {}*, {}** %aref, align 8
  br label %tag35

tag91:                                            ; preds = %normal-dest1249, %normal-dest1052, %normal-dest460, %tag126
  %62 = phi {}* [ %120, %tag126 ], [ %269, %normal-dest460 ], [ %374, %normal-dest1052 ], [ %394, %normal-dest1249 ]
  %G238831.0 = phi {}* [ %85, %tag126 ], [ %G238831.1, %normal-dest460 ], [ %G238831.2, %normal-dest1052 ], [ %G238831.3, %normal-dest1249 ]
  %63 = icmp eq {}* %G238831.0, %62
  %.val19882025 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %object899.02026 = select i1 %63, {}* %.val19882025, {}* %62
  %64 = icmp eq {}* %object899.02026, %62
  %G239079.02027 = select i1 %64, {}* %.val19882025, {}* %62
  %65 = icmp eq {}* %G239079.02027, %62
  br i1 %65, label %tag240, label %tag365.lr.ph

tag365.lr.ph:                                     ; preds = %tag91
  %66 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only743 = and i64 %66, 7
  %fixnum-tag-only9841823 = and i64 %66, 3
  %fixnump-test985 = icmp eq i64 %fixnum-tag-only9841823, 0
  %test680 = icmp ne i64 %single-float-tag-only743, 1
  %irc-bit-cast681 = bitcast {}* %farg1 to i8*
  %gep682 = getelementptr inbounds i8, i8* %irc-bit-cast681, i64 -9
  %irc-bit-cast683 = bitcast i8* %gep682 to i64*
  %brmerge = or i1 %test680, %fixnump-test985
  br label %tag365

tag97:                                            ; preds = %header-check-br1552, %header-check-br1552, %header-check-br1552, %header-check-br1552
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 197), align 8
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest718 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag102:                                           ; preds = %tag250
  br i1 %brmerge, label %tag300, label %header-check-br677

tag103:                                           ; preds = %tag172, %normal-dest1172
  %G238823.0 = phi {}* [ %G238823.1, %normal-dest1172 ], [ %G238831.0, %tag172 ]
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %70 = invoke {}* @cc_safe_setfdefinition({}* %69)
          to label %normal-dest744 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag108:                                           ; preds = %tag44, %normal-dest785
  %G238839.0 = phi {}* [ %G238839.1, %normal-dest785 ], [ %G238847.0, %tag44 ]
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %72 = invoke {}* @cc_safe_setfdefinition({}* %71)
          to label %normal-dest767 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag109:                                           ; preds = %tag216, %tag35
  %73 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest778 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag112:                                           ; preds = %tag125
  %75 = add i64 %217, -3
  %76 = inttoptr i64 %75 to {}**
  %77 = load {}*, {}** %76, align 8
  br label %tag160

tag113:                                           ; preds = %tag212
  br i1 %fixnump-test1030, label %tag313, label %tag224

tag117:                                           ; preds = %tag315
  %78 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest685 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag118:                                           ; preds = %tag220
  %80 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %81 = invoke {}* @cc_safe_fdefinition({}* %80)
          to label %normal-dest803 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag123:                                           ; preds = %normal-dest744, %header-check-br754
  %82 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %83 = invoke {}* @cc_safe_fdefinition({}* %82)
          to label %normal-dest842 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag125:                                           ; preds = %tag342
  %84 = icmp eq {}* %G239299.0, %216
  br i1 %84, label %tag290, label %tag112

tag126:                                           ; preds = %tag171
  %"untagged fixnum860" = lshr exact i64 %227, 2
  %aref861 = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %383, i64 0, i32 1, i64 %"untagged fixnum860"
  %85 = load {}*, {}** %aref861, align 8
  br label %tag91

tag127:                                           ; preds = %tag342
  %86 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest863 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag131:                                           ; preds = %tag365
  %88 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest865 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag143:                                           ; preds = %normal-dest599, %tag229, %tag220
  %90 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest891 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag145:                                           ; preds = %tag60, %normal-dest1454, %tag70
  %.val2001 = phi {}* [ %201, %tag70 ], [ %413, %normal-dest1454 ], [ %G238972.0, %tag60 ]
  %92 = phi {}* [ %G238972.0, %tag70 ], [ %.val2000.pre, %normal-dest1454 ], [ %G238972.0, %tag60 ]
  %.in1788 = phi {}* [ %49, %tag70 ], [ %.in1787, %normal-dest1454 ], [ %G238972.0, %tag60 ]
  %93 = bitcast {}* %.in1788 to i8*
  %94 = icmp eq {}* %.in1788, %farg1
  %G238952.0 = select i1 %94, {}* %92, {}* %.val2001
  %95 = icmp eq {}* %G238952.0, %.val2001
  br i1 %95, label %tag344, label %tag44

tag146:                                           ; preds = %tag65, %tag185
  %96 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest909 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag147:                                           ; preds = %tag321.tag147_crit_edge, %header-check-br1552, %header-check-br1022, %tag252, %tag231
  %.val1980 = phi {}* [ %.val1980.pre, %tag321.tag147_crit_edge ], [ %112, %tag231 ], [ %112, %tag252 ], [ %112, %header-check-br1022 ], [ %112, %header-check-br1552 ]
  %98 = phi {}* [ %196, %tag321.tag147_crit_edge ], [ %.val1985, %tag231 ], [ %.val1985, %tag252 ], [ %.val1985, %header-check-br1022 ], [ %.val1985, %header-check-br1552 ]
  %99 = add i64 %217, 5
  %100 = inttoptr i64 %99 to {}**
  %101 = load {}*, {}** %100, align 8
  %102 = icmp eq {}* %101, %98
  %object.0 = select i1 %102, {}* %.val1980, {}* %98
  %103 = icmp eq {}* %object.0, %98
  %G239245.0 = select i1 %103, {}* %.val1980, {}* %98
  %104 = icmp eq {}* %G239245.0, %98
  br i1 %104, label %tag259, label %tag342

tag148:                                           ; preds = %tag62
  %105 = icmp sgt {}* %G238802.0, inttoptr (i64 -1 to {}*)
  %.1964 = select i1 %105, {}* %.val2054, {}* %388
  br label %tag212

tag149:                                           ; preds = %tag318, %normal-dest1298
  %106 = phi {}* [ %398, %normal-dest1298 ], [ %292, %tag318 ]
  %G239182.0 = phi {}* [ %G239182.1, %normal-dest1298 ], [ %.1972, %tag318 ]
  %107 = icmp eq {}* %G239182.0, %106
  br i1 %107, label %tag202, label %tag163

tag155:                                           ; preds = %tag296
  %fixnum-tag-only9271825 = and i64 %181, 3
  %fixnump-test928 = icmp ne i64 %fixnum-tag-only9271825, 0
  %test448 = icmp eq i64 %single-float-tag-only1383, 1
  %or.cond1960 = and i1 %fixnump-test928, %test448
  br i1 %or.cond1960, label %header-check-br445, label %tag300

tag156:                                           ; preds = %tag11
  %108 = ptrtoint {}* %.in1805 to i64
  %fixnum-tag-only9291742 = and i64 %108, 3
  %fixnump-test930 = icmp eq i64 %fixnum-tag-only9291742, 0
  %.val1994 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239045.0 = select i1 %fixnump-test930, {}* %.val1994, {}* %320
  %109 = icmp eq {}* %G239045.0, %320
  br i1 %109, label %tag338, label %tag75

tag159:                                           ; preds = %tag163
  %110 = icmp sgt i64 %"tag fixnum967", %227
  %111 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.1965 = select i1 %110, {}* %111, {}* %106
  br label %tag171

tag160:                                           ; preds = %tag290, %normal-dest483, %tag112
  %.val1985 = phi {}* [ %216, %tag112 ], [ %275, %normal-dest483 ], [ %G239299.0, %tag290 ]
  %112 = phi {}* [ %G239299.0, %tag112 ], [ %.val1984.pre, %normal-dest483 ], [ %G239299.0, %tag290 ]
  %.in1868 = phi {}* [ %77, %tag112 ], [ %.in1867, %normal-dest483 ], [ %G239299.0, %tag290 ]
  %113 = bitcast {}* %.in1868 to i8*
  %114 = icmp eq {}* %.in1868, %farg1
  %G239279.0 = select i1 %114, {}* %112, {}* %.val1985
  %115 = icmp eq {}* %G239279.0, %.val1985
  br i1 %115, label %tag252, label %tag321

tag163:                                           ; preds = %tag149
  br i1 %fixnump-test1634, label %tag159, label %tag86

tag167:                                           ; preds = %tag363
  %116 = add i64 %ptrtoint1228, 7
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 8
  %"tag fixnum967" = shl nuw i64 %118, 2
  %119 = inttoptr i64 %"tag fixnum967" to {}*
  br i1 %fixnump-test1634, label %tag318, label %tag262

tag171:                                           ; preds = %tag159, %normal-dest671
  %120 = phi {}* [ %296, %normal-dest671 ], [ %106, %tag159 ]
  %G239159.0 = phi {}* [ %G239159.1, %normal-dest671 ], [ %.1965, %tag159 ]
  %121 = icmp eq {}* %G239159.0, %120
  br i1 %121, label %tag202, label %tag126

tag172:                                           ; preds = %tag250, %normal-dest1589
  %122 = phi {}* [ %450, %normal-dest1589 ], [ %.val1993, %tag250 ]
  %G239104.0 = phi {}* [ %G239104.1, %normal-dest1589 ], [ %161, %tag250 ]
  %123 = icmp eq {}* %G239104.0, %122
  br i1 %123, label %tag172.tag300_crit_edge, label %tag103

tag172.tag300_crit_edge:                          ; preds = %tag172
  %.val1988.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag300

tag183:                                           ; preds = %header-check-br621, %tag266
  %G239209.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag266 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br621 ]
  %G239209.0 = load {}*, {}** %G239209.0.in, align 16
  %124 = icmp eq {}* %G239209.0, %292
  br i1 %124, label %tag255, label %tag363

tag185:                                           ; preds = %tag287, %normal-dest694
  %125 = phi {}* [ %303, %normal-dest694 ], [ %45, %tag287 ]
  %G238998.0 = phi {}* [ %G238998.1, %normal-dest694 ], [ %.1970, %tag287 ]
  %126 = icmp eq {}* %G238998.0, %125
  br i1 %126, label %tag146, label %tag90

tag188:                                           ; preds = %tag326
  %127 = icmp eq {}* %G238972.0, %201
  br i1 %127, label %tag60, label %tag70

tag189:                                           ; preds = %tag11
  %128 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %129 = invoke {}* @cc_safe_fdefinition({}* %128)
          to label %normal-dest1009 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag197:                                           ; preds = %tag311
  %130 = ptrtoint {}* %G238802.0 to i64
  %fixnum-tag-only10291680 = and i64 %130, 3
  %fixnump-test1030 = icmp eq i64 %fixnum-tag-only10291680, 0
  %G239372.0 = select i1 %fixnump-test1030, {}* %.val2054, {}* %388
  %131 = icmp eq {}* %G239372.0, %388
  br i1 %131, label %tag339, label %tag62

tag199:                                           ; preds = %tag365
  %132 = icmp eq {}* %G239133.0, %230
  br i1 %132, label %tag215, label %tag217

tag202:                                           ; preds = %tag149, %tag171
  %133 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %134 = invoke {}* @cc_safe_fdefinition({}* %133)
          to label %normal-dest1045 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag209:                                           ; preds = %header-check-br957, %header-check-br957, %header-check-br957, %header-check-br957
  %135 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 197), align 8
  %136 = invoke {}* @cc_safe_fdefinition({}* %135)
          to label %normal-dest1076 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag212:                                           ; preds = %tag148, %normal-dest384
  %137 = phi {}* [ %237, %normal-dest384 ], [ %388, %tag148 ]
  %G239348.0 = phi {}* [ %G239348.1, %normal-dest384 ], [ %.1964, %tag148 ]
  %138 = icmp eq {}* %G239348.0, %137
  br i1 %138, label %tag264, label %tag113

tag215:                                           ; preds = %tag199
  br i1 %229, label %tag5, label %tag250

tag216:                                           ; preds = %tag44.tag216_crit_edge, %header-check-br1471, %header-check-br986, %tag344, %tag289
  %.val1996 = phi {}* [ %.val1996.pre, %tag44.tag216_crit_edge ], [ %92, %tag289 ], [ %92, %tag344 ], [ %92, %header-check-br986 ], [ %92, %header-check-br1471 ]
  %139 = phi {}* [ %37, %tag44.tag216_crit_edge ], [ %.val2001, %tag289 ], [ %.val2001, %tag344 ], [ %.val2001, %header-check-br986 ], [ %.val2001, %header-check-br1471 ]
  %140 = add i64 %202, 5
  %141 = inttoptr i64 %140 to {}**
  %142 = load {}*, {}** %141, align 8
  %143 = icmp eq {}* %142, %139
  %object444.0 = select i1 %143, {}* %.val1996, {}* %139
  %144 = icmp eq {}* %object444.0, %139
  %G238918.0 = select i1 %144, {}* %.val1996, {}* %139
  %145 = icmp eq {}* %G238918.0, %139
  br i1 %145, label %tag109, label %tag326

tag217:                                           ; preds = %tag199
  %146 = add i64 %231, -3
  %147 = inttoptr i64 %146 to {}**
  %148 = load {}*, {}** %147, align 8
  br label %tag250

tag220:                                           ; preds = %tag283.tag220_crit_edge, %mvn-final604
  %149 = phi {}* [ %.pre2050, %tag283.tag220_crit_edge ], [ %.elt1706, %mvn-final604 ]
  %150 = icmp eq {}* %D2238818.0, %149
  br i1 %150, label %tag143, label %tag118

tag224:                                           ; preds = %tag113
  %151 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %152 = invoke {}* @cc_safe_fdefinition({}* %151)
          to label %normal-dest870 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag229:                                           ; preds = %normal-dest1335, %header-check-br768, %normal-dest395
  %G238896.0 = phi {}* [ %G238896.1, %normal-dest395 ], [ %72, %header-check-br768 ], [ %G238896.2, %normal-dest1335 ]
  %ptrtoint1135 = ptrtoint {}* %G238896.0 to i64
  %entry-point-addr-uint1136 = add i64 %ptrtoint1135, 7
  %entry-point-addr1137 = inttoptr i64 %entry-point-addr-uint1136 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1138 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1137, align 8
  %153 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1138({}* %G238896.0, i64 3, {}* %G238839.0, {}* %.in, {}* %.in1805, {}* null)
          to label %tag143 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag231:                                           ; preds = %header-check-br1022, %header-check-br1022, %header-check-br1022, %header-check-br1022
  %154 = ptrtoint {}* %.in1868 to i64
  %single-float-tag-only1146 = and i64 %154, 7
  %fixnum-tag-only5131865 = and i64 %154, 3
  %fixnump-test514 = icmp ne i64 %fixnum-tag-only5131865, 0
  %test1555 = icmp eq i64 %single-float-tag-only1146, 1
  %or.cond1976 = and i1 %fixnump-test514, %test1555
  br i1 %or.cond1976, label %header-check-br1552, label %tag147

tag237:                                           ; preds = %header-check-br1501, %header-check-br957, %tag24, %tag71, %tag361, %tag330, %normal-dest898
  %return-value.sroa.88.0 = phi i64 [ %.elt1770, %normal-dest898 ], [ 1, %tag330 ], [ 1, %tag361 ], [ 1, %tag71 ], [ 1, %tag24 ], [ 1, %header-check-br957 ], [ 1, %header-check-br1501 ]
  %return-value.sroa.0.0 = phi i64 [ %347, %normal-dest898 ], [ %204, %tag330 ], [ %235, %tag361 ], [ %235, %tag71 ], [ %235, %tag24 ], [ %235, %header-check-br957 ], [ %235, %header-check-br1501 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %155 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %156 = insertvalue { {}*, i64 } undef, {}* %155, 0
  %157 = insertvalue { {}*, i64 } %156, i64 %return-value.sroa.88.0, 1
  ret { {}*, i64 } %157

tag240:                                           ; preds = %tag300, %tag91
  %158 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %159 = invoke {}* @cc_safe_fdefinition({}* %158)
          to label %normal-dest1165 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag244:                                           ; preds = %tag54
  %"untagged fixnum1180" = lshr exact i64 %130, 2
  %aref1181 = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %383, i64 0, i32 1, i64 %"untagged fixnum1180"
  %160 = load {}*, {}** %aref1181, align 8
  br label %tag357

tag250:                                           ; preds = %tag215, %normal-dest410, %tag217
  %.val1993 = phi {}* [ %230, %tag217 ], [ %249, %normal-dest410 ], [ %G239133.0, %tag215 ]
  %161 = phi {}* [ %G239133.0, %tag217 ], [ %.val1992.pre, %normal-dest410 ], [ %G239133.0, %tag215 ]
  %.in1828 = phi {}* [ %148, %tag217 ], [ %.in1827, %normal-dest410 ], [ %G239133.0, %tag215 ]
  %162 = bitcast {}* %.in1828 to i8*
  %163 = icmp eq {}* %.in1828, %farg1
  %G239113.0 = select i1 %163, {}* %161, {}* %.val1993
  %164 = icmp eq {}* %G239113.0, %.val1993
  br i1 %164, label %tag102, label %tag172

tag252:                                           ; preds = %tag160
  br i1 %brmerge2033, label %tag147, label %header-check-br1022

tag253:                                           ; preds = %tag330
  %165 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %166 = invoke {}* @cc_safe_fdefinition({}* %165)
          to label %normal-dest1198 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag255:                                           ; preds = %tag183
  %167 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %168 = invoke {}* @cc_safe_fdefinition({}* %167)
          to label %normal-dest1242 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag259:                                           ; preds = %tag147, %tag357
  %169 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %170 = invoke {}* @cc_safe_fdefinition({}* %169)
          to label %normal-dest1263 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag262:                                           ; preds = %tag167
  %171 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %172 = invoke {}* @cc_safe_fdefinition({}* %171)
          to label %normal-dest1291 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag264:                                           ; preds = %tag212, %tag54
  %173 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %174 = invoke {}* @cc_safe_fdefinition({}* %173)
          to label %normal-dest1307 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag266:                                           ; preds = %header-check-br621, %normal-dest614
  br label %tag183

tag282:                                           ; preds = %header-check-br818, %normal-dest810
  br label %tag11

tag283:                                           ; preds = %normal-dest849, %header-check-br745, %normal-dest523
  %G239057.0 = phi {}* [ %G239057.1, %normal-dest523 ], [ %70, %header-check-br745 ], [ %G239057.2, %normal-dest849 ]
  %ptrtoint1344 = ptrtoint {}* %G239057.0 to i64
  %entry-point-addr-uint1345 = add i64 %ptrtoint1344, 7
  %entry-point-addr1346 = inttoptr i64 %entry-point-addr-uint1345 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1347 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1346, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1347({}* %G239057.0, i64 3, {}* %G238823.0, {}* %.in, {}* %.in1845, {}* null)
          to label %tag283.tag220_crit_edge unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag283.tag220_crit_edge:                          ; preds = %tag283
  %.pre2050 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag220

tag286:                                           ; preds = %tag321, %normal-dest1270
  %G238803.0 = phi {}* [ %G238803.1, %normal-dest1270 ], [ %G238811.0, %tag321 ]
  %176 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %177 = invoke {}* @cc_safe_setfdefinition({}* %176)
          to label %normal-dest1356 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag287:                                           ; preds = %tag315
  %178 = icmp sgt i64 %"tag fixnum630", %108
  %179 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.1970 = select i1 %178, {}* %179, {}* %45
  br label %tag185

tag289:                                           ; preds = %header-check-br1471, %header-check-br1471, %header-check-br1471, %header-check-br1471
  %180 = ptrtoint {}* %.in1788 to i64
  %single-float-tag-only1368 = and i64 %180, 7
  %fixnum-tag-only6371785 = and i64 %180, 3
  %fixnump-test638 = icmp ne i64 %fixnum-tag-only6371785, 0
  %test989 = icmp eq i64 %single-float-tag-only1368, 1
  %or.cond1967 = and i1 %fixnump-test638, %test989
  br i1 %or.cond1967, label %header-check-br986, label %tag216

tag290:                                           ; preds = %tag125
  br i1 %215, label %tag22, label %tag160

tag296:                                           ; preds = %header-check-br677, %header-check-br677, %header-check-br677, %header-check-br677
  %181 = ptrtoint {}* %.in1828 to i64
  %single-float-tag-only1383 = and i64 %181, 7
  %182 = icmp eq i64 %single-float-tag-only1383, 6
  br i1 %182, label %tag300, label %tag155

tag300:                                           ; preds = %tag172.tag300_crit_edge, %header-check-br445, %header-check-br677, %tag102, %tag155, %tag296
  %.val1988 = phi {}* [ %.val1988.pre, %tag172.tag300_crit_edge ], [ %161, %tag296 ], [ %161, %tag155 ], [ %161, %tag102 ], [ %161, %header-check-br677 ], [ %161, %header-check-br445 ]
  %183 = phi {}* [ %122, %tag172.tag300_crit_edge ], [ %.val1993, %tag296 ], [ %.val1993, %tag155 ], [ %.val1993, %tag102 ], [ %.val1993, %header-check-br677 ], [ %.val1993, %header-check-br445 ]
  %184 = add i64 %231, 5
  %185 = inttoptr i64 %184 to {}**
  %186 = load {}*, {}** %185, align 8
  %187 = icmp eq {}* %186, %183
  %object899.0 = select i1 %187, {}* %.val1988, {}* %183
  %188 = icmp eq {}* %object899.0, %183
  %G239079.0 = select i1 %188, {}* %.val1988, {}* %183
  %189 = icmp eq {}* %G239079.0, %183
  br i1 %189, label %tag240, label %tag365

tag311:                                           ; preds = %normal-dest1219
  %irc-bit-cast1231 = bitcast {}* %.in to i8*
  %gep1232 = getelementptr inbounds i8, i8* %irc-bit-cast1231, i64 -9
  %irc-bit-cast1233 = bitcast i8* %gep1232 to i64*
  %190 = load i64, i64* %irc-bit-cast1233, align 8
  %191 = icmp eq i64 %190, 1137
  %.val2054 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239375.0.pre = select i1 %191, {}* %.val2054, {}* %388
  %192 = icmp eq {}* %G239375.0.pre, %388
  br i1 %192, label %tag341, label %tag197

tag313:                                           ; preds = %tag113
  %193 = icmp sgt i64 %"tag fixnum", %130
  %194 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.1971 = select i1 %193, {}* %194, {}* %137
  br label %tag54

tag315:                                           ; preds = %tag65
  br i1 %fixnump-test930, label %tag287, label %tag117

tag318:                                           ; preds = %tag167
  %195 = icmp sgt {}* %.in1845, inttoptr (i64 -1 to {}*)
  %.1972 = select i1 %195, {}* %.val1986, {}* %292
  br label %tag149

tag321:                                           ; preds = %tag160, %normal-dest727
  %196 = phi {}* [ %308, %normal-dest727 ], [ %.val1985, %tag160 ]
  %G239270.0 = phi {}* [ %G239270.1, %normal-dest727 ], [ %112, %tag160 ]
  %197 = icmp eq {}* %G239270.0, %196
  br i1 %197, label %tag321.tag147_crit_edge, label %tag286

tag321.tag147_crit_edge:                          ; preds = %tag321
  %.val1980.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag147

tag322:                                           ; preds = %tag60
  %198 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %199 = invoke {}* @cc_safe_fdefinition({}* %198)
          to label %normal-dest1447 unwind label %cleanup-lpad.loopexit

tag326:                                           ; preds = %tag326.lr.ph, %tag216
  %G238972.0 = phi {}* [ %.val19962021, %tag326.lr.ph ], [ %.val1996, %tag216 ]
  %200 = phi i1 [ %32, %tag326.lr.ph ], [ %144, %tag216 ]
  %201 = phi {}* [ %30, %tag326.lr.ph ], [ %139, %tag216 ]
  %"%SUBLIST238842.02024" = phi {}* [ %G238847.0, %tag326.lr.ph ], [ %142, %tag216 ]
  %202 = ptrtoint {}* %"%SUBLIST238842.02024" to i64
  %tag-only14671753 = and i64 %202, 7
  %consp-test1468 = icmp eq i64 %tag-only14671753, 3
  br i1 %consp-test1468, label %tag188, label %tag43

tag329:                                           ; preds = %tag75
  %203 = icmp sgt {}* %.in1805, inttoptr (i64 -1 to {}*)
  %.1973 = select i1 %203, {}* %.val1994, {}* %320
  br label %tag65

tag330:                                           ; preds = %normal-dest, %normal-dest1083
  %204 = phi i64 [ %377, %normal-dest1083 ], [ %235, %normal-dest ]
  %205 = phi {}* [ %376, %normal-dest1083 ], [ %.val1977, %normal-dest ]
  %G239386.0 = phi {}* [ %G239386.1, %normal-dest1083 ], [ %.val, %normal-dest ]
  %206 = icmp eq {}* %G239386.0, %205
  br i1 %206, label %tag237, label %tag253

tag335:                                           ; preds = %header-check-br986, %header-check-br986, %header-check-br986, %header-check-br986
  %207 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 197), align 8
  %208 = invoke {}* @cc_safe_fdefinition({}* %207)
          to label %normal-dest1481 unwind label %cleanup-lpad.loopexit

tag338:                                           ; preds = %tag156
  %209 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %210 = invoke {}* @cc_safe_fdefinition({}* %209)
          to label %normal-dest1509 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag339:                                           ; preds = %tag197
  %211 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %212 = invoke {}* @cc_safe_fdefinition({}* %211)
          to label %normal-dest1523 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag341:                                           ; preds = %normal-dest1219, %tag311
  %213 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %214 = invoke {}* @cc_safe_fdefinition({}* %213)
          to label %normal-dest1537 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag342:                                           ; preds = %tag342.lr.ph, %tag147
  %G239299.0 = phi {}* [ %.val19802029, %tag342.lr.ph ], [ %.val1980, %tag147 ]
  %215 = phi i1 [ %224, %tag342.lr.ph ], [ %103, %tag147 ]
  %216 = phi {}* [ %222, %tag342.lr.ph ], [ %98, %tag147 ]
  %"%SUBLIST238806.02032" = phi {}* [ %G238811.0, %tag342.lr.ph ], [ %101, %tag147 ]
  %217 = ptrtoint {}* %"%SUBLIST238806.02032" to i64
  %tag-only15501691 = and i64 %217, 7
  %consp-test1551 = icmp eq i64 %tag-only15501691, 3
  br i1 %consp-test1551, label %tag125, label %tag127

tag344:                                           ; preds = %tag145
  br i1 %or.cond1974, label %header-check-br1471, label %tag216

tag349:                                           ; preds = %header-check-br445, %header-check-br445, %header-check-br445, %header-check-br445
  %218 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 197), align 8
  %219 = invoke {}* @cc_safe_fdefinition({}* %218)
          to label %normal-dest1582 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag352:                                           ; preds = %tag75
  %220 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %221 = invoke {}* @cc_safe_fdefinition({}* %220)
          to label %normal-dest1603 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag357:                                           ; preds = %normal-dest1544, %normal-dest1530, %normal-dest1314, %tag244
  %222 = phi {}* [ %39, %tag244 ], [ %401, %normal-dest1314 ], [ %437, %normal-dest1530 ], [ %443, %normal-dest1544 ]
  %G238811.0 = phi {}* [ %160, %tag244 ], [ %G238811.1, %normal-dest1314 ], [ %G238811.2, %normal-dest1530 ], [ %G238811.3, %normal-dest1544 ]
  %223 = icmp eq {}* %G238811.0, %222
  %.val19802029 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %object.02030 = select i1 %223, {}* %.val19802029, {}* %222
  %224 = icmp eq {}* %object.02030, %222
  %G239245.02031 = select i1 %224, {}* %.val19802029, {}* %222
  %225 = icmp eq {}* %G239245.02031, %222
  br i1 %225, label %tag259, label %tag342.lr.ph

tag342.lr.ph:                                     ; preds = %tag357
  %226 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only1196 = and i64 %226, 7
  %fixnum-tag-only11621863 = and i64 %226, 3
  %fixnump-test1163 = icmp eq i64 %fixnum-tag-only11621863, 0
  %test1025 = icmp ne i64 %single-float-tag-only1196, 1
  %irc-bit-cast1026 = bitcast {}* %farg1 to i8*
  %gep1027 = getelementptr inbounds i8, i8* %irc-bit-cast1026, i64 -9
  %irc-bit-cast1028 = bitcast i8* %gep1027 to i64*
  %brmerge2033 = or i1 %test1025, %fixnump-test1163
  br label %tag342

tag361:                                           ; preds = %tag71
  %fixnum-tag-only16301896 = and i64 %50, 3
  %fixnump-test1631 = icmp ne i64 %fixnum-tag-only16301896, 0
  %test960 = icmp eq i64 %single-float-tag-only579, 1
  %or.cond1966 = and i1 %fixnump-test1631, %test960
  br i1 %or.cond1966, label %header-check-br957, label %tag237

tag363:                                           ; preds = %tag183
  %227 = ptrtoint {}* %.in1845 to i64
  %fixnum-tag-only16331713 = and i64 %227, 3
  %fixnump-test1634 = icmp eq i64 %fixnum-tag-only16331713, 0
  %.val1986 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239206.0 = select i1 %fixnump-test1634, {}* %.val1986, {}* %292
  %228 = icmp eq {}* %G239206.0, %292
  br i1 %228, label %tag16, label %tag167

tag365:                                           ; preds = %tag365.lr.ph, %tag300
  %G239133.0 = phi {}* [ %.val19882025, %tag365.lr.ph ], [ %.val1988, %tag300 ]
  %229 = phi i1 [ %64, %tag365.lr.ph ], [ %188, %tag300 ]
  %230 = phi {}* [ %62, %tag365.lr.ph ], [ %183, %tag300 ]
  %"%SUBLIST238826.02028" = phi {}* [ %G238831.0, %tag365.lr.ph ], [ %186, %tag300 ]
  %231 = ptrtoint {}* %"%SUBLIST238826.02028" to i64
  %tag-only16351724 = and i64 %231, 7
  %consp-test1636 = icmp eq i64 %tag-only16351724, 3
  br i1 %consp-test1636, label %tag199, label %tag131

cleanup-lpad.loopexit:                            ; preds = %tag322, %normal-dest1447, %tag335, %normal-dest1481
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest1582, %tag349, %normal-dest402, %tag5
  %lpad.loopexit2007 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %tag22, %normal-dest475, %tag97, %normal-dest718
  %lpad.loopexit2010 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %tag3, %normal-dest378, %tag4, %normal-dest388, %tag6, %normal-dest417, %tag16, %normal-dest453, %maybe-more-tests762, %normal-dest516, %tag43, %tag72, %normal-dest586, %normal-dest592, %tag73, %normal-dest607, %tag86, %normal-dest663, %tag117, %normal-dest685, %tag103, %tag108, %tag109, %normal-dest778, %tag118, %normal-dest803, %tag123, %normal-dest842, %tag127, %tag131, %tag224, %normal-dest870, %tag143, %normal-dest891, %tag146, %normal-dest909, %tag189, %normal-dest1009, %tag202, %normal-dest1045, %tag209, %normal-dest1076, %normal-dest865, %tag229, %tag240, %normal-dest1165, %tag253, %normal-dest1198, %normal-dest1205, %normal-dest1212, %tag255, %normal-dest1242, %tag259, %normal-dest1263, %tag262, %normal-dest1291, %tag264, %normal-dest1307, %maybe-more-tests708, %normal-dest1328, %tag283, %tag286, %normal-dest863, %maybe-more-tests, %normal-dest1418, %normal-dest533, %tag338, %normal-dest1509, %tag339, %normal-dest1523, %tag341, %normal-dest1537, %tag352, %normal-dest1603, %12, %15
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit2007, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit2010, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %13
  %232 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %233 = icmp eq {}* %232, %farg2
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.val1977 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239395.0 = select i1 %233, {}* %.val, {}* %.val1977
  %234 = icmp eq {}* %G239395.0, %.val1977
  %235 = ptrtoint {}* %.val1977 to i64
  br i1 %234, label %tag24, label %tag330

normal-dest378:                                   ; preds = %tag3
  %ptrtoint381 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint381, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %236 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 2, {}* null, {}* %G238802.0, {}* null, {}* null)
          to label %normal-dest384 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest384:                                   ; preds = %normal-dest378
  %.elt1683 = extractvalue { {}*, i64 } %236, 0
  %.elt1685 = extractvalue { {}*, i64 } %236, 1
  %cond1638 = icmp eq i64 %.elt1685, 0
  %237 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239348.1 = select i1 %cond1638, {}* %237, {}* %.elt1683
  br label %tag212

normal-dest388:                                   ; preds = %tag4
  %238 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %239 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %240 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %241 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 609), align 8
  %ptrtoint389 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint390 = add i64 %ptrtoint389, 7
  %entry-point-addr391 = inttoptr i64 %entry-point-addr-uint390 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point392 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr391, align 8
  %242 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point392({}* %19, i64 5, {}* %238, {}* %239, {}* %72, {}* %240, {}* %241)
          to label %normal-dest395 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest395:                                   ; preds = %normal-dest388
  %.elt1760 = extractvalue { {}*, i64 } %242, 0
  %.elt1762 = extractvalue { {}*, i64 } %242, 1
  %cond1656 = icmp eq i64 %.elt1762, 0
  %243 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238896.1 = select i1 %cond1656, {}* %243, {}* %.elt1760
  br label %tag229

normal-dest402:                                   ; preds = %tag5
  %244 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %245 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %246 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %247 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint404 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint405 = add i64 %ptrtoint404, 7
  %entry-point-addr406 = inttoptr i64 %entry-point-addr-uint405 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point407 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr406, align 8
  %248 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point407({}* %21, i64 5, {}* %244, {}* %245, {}* %"%SUBLIST238826.02028", {}* %246, {}* %247)
          to label %normal-dest410 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest410:                                   ; preds = %normal-dest402
  %.elt1834 = extractvalue { {}*, i64 } %248, 0
  %.elt1836 = extractvalue { {}*, i64 } %248, 1
  %cond1648 = icmp eq i64 %.elt1836, 0
  %249 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1827 = select i1 %cond1648, {}* %249, {}* %.elt1834
  %.val1992.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag250

normal-dest417:                                   ; preds = %tag6
  %250 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %251 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %252 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %253 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 607), align 8
  %ptrtoint418 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint419 = add i64 %ptrtoint418, 7
  %entry-point-addr420 = inttoptr i64 %entry-point-addr-uint419 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point421 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr420, align 8
  %254 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point421({}* %23, i64 5, {}* %250, {}* %251, {}* %177, {}* %252, {}* %253)
          to label %normal-dest424 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest424:                                   ; preds = %normal-dest417
  %.elt1698 = extractvalue { {}*, i64 } %254, 0
  %.elt1700 = extractvalue { {}*, i64 } %254, 1
  %cond1640 = icmp eq i64 %.elt1700, 0
  %255 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239223.1 = select i1 %cond1640, {}* %255, {}* %.elt1698
  br label %tag72

header-check-br430:                               ; preds = %header-check-br1357
  %.off2006 = add i64 %404, -1001
  %256 = icmp ult i64 %.off2006, 5
  br i1 %256, label %maybe-more-tests, label %tag6

maybe-more-tests:                                 ; preds = %header-check-br430
  %257 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %258 = invoke {}* @cc_safe_fdefinition({}* %257)
          to label %normal-dest1418 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br445:                               ; preds = %tag155
  %gep450 = getelementptr inbounds i8, i8* %162, i64 -9
  %irc-bit-cast451 = bitcast i8* %gep450 to i64*
  %259 = load i64, i64* %irc-bit-cast451, align 8
  %260 = add i64 %259, -1309
  %261 = lshr i64 %260, 3
  %262 = shl i64 %260, 61
  %263 = or i64 %261, %262
  switch i64 %263, label %tag300 [
    i64 2, label %tag349
    i64 4, label %tag349
    i64 5, label %tag349
    i64 0, label %tag349
  ]

normal-dest453:                                   ; preds = %tag16
  %264 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %265 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %266 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %267 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint454 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint455 = add i64 %ptrtoint454, 7
  %entry-point-addr456 = inttoptr i64 %entry-point-addr-uint455 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point457 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr456, align 8
  %268 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point457({}* %26, i64 5, {}* %264, {}* %265, {}* %.in1845, {}* %266, {}* %267)
          to label %normal-dest460 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest460:                                   ; preds = %normal-dest453
  %.elt1847 = extractvalue { {}*, i64 } %268, 0
  %.elt1849 = extractvalue { {}*, i64 } %268, 1
  %cond1651 = icmp eq i64 %.elt1849, 0
  %269 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238831.1 = select i1 %cond1651, {}* %269, {}* %.elt1847
  br label %tag91

normal-dest475:                                   ; preds = %tag22
  %270 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %271 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %272 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %273 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint477 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint478 = add i64 %ptrtoint477, 7
  %entry-point-addr479 = inttoptr i64 %entry-point-addr-uint478 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point480 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr479, align 8
  %274 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point480({}* %28, i64 5, {}* %270, {}* %271, {}* %"%SUBLIST238806.02032", {}* %272, {}* %273)
          to label %normal-dest483 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest483:                                   ; preds = %normal-dest475
  %.elt1874 = extractvalue { {}*, i64 } %274, 0
  %.elt1876 = extractvalue { {}*, i64 } %274, 1
  %cond1668 = icmp eq i64 %.elt1876, 0
  %275 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1867 = select i1 %cond1668, {}* %275, {}* %.elt1874
  %.val1984.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag160

normal-dest516:                                   ; preds = %maybe-more-tests762
  %ptrtoint517 = ptrtoint {}* %313 to i64
  %entry-point-addr-uint518 = add i64 %ptrtoint517, 7
  %entry-point-addr519 = inttoptr i64 %entry-point-addr-uint518 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point520 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr519, align 8
  %276 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point520({}* %313, i64 1, {}* nonnull %70, {}* null, {}* null, {}* null)
          to label %normal-dest523 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest523:                                   ; preds = %normal-dest516
  %.elt1815 = extractvalue { {}*, i64 } %276, 0
  %.elt1817 = extractvalue { {}*, i64 } %276, 1
  %cond1645 = icmp eq i64 %.elt1817, 0
  %277 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239057.1 = select i1 %cond1645, {}* %277, {}* %.elt1815
  br label %tag283

normal-dest533:                                   ; preds = %tag43
  %278 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %279 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %280 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %281 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %ptrtoint1437 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint1438 = add i64 %ptrtoint1437, 7
  %entry-point-addr1439 = inttoptr i64 %entry-point-addr-uint1438 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1440 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1439, align 8
  %282 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1440({}* %36, i64 5, {}* %278, {}* %279, {}* %"%SUBLIST238842.02024", {}* %280, {}* %281)
          to label %normal-dest1443 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest586:                                   ; preds = %tag72
  %283 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 204), align 16
  %284 = invoke {}* @cc_safe_fdefinition({}* %283)
          to label %normal-dest592 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest592:                                   ; preds = %normal-dest586
  %ptrtoint593 = ptrtoint {}* %284 to i64
  %entry-point-addr-uint594 = add i64 %ptrtoint593, 7
  %entry-point-addr595 = inttoptr i64 %entry-point-addr-uint594 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point596 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr595, align 8
  %285 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point596({}* %284, i64 3, {}* %farg1, {}* %farg0, {}* %farg3, {}* null)
          to label %normal-dest599 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest599:                                   ; preds = %normal-dest592
  %.elt1706 = extractvalue { {}*, i64 } %285, 0
  %.elt1708 = extractvalue { {}*, i64 } %285, 1
  switch i64 %.elt1708, label %mvn2- [
    i64 0, label %tag143
    i64 1, label %mvn1-603
  ]

mvn1-603:                                         ; preds = %normal-dest599
  %286 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final604

mvn2-:                                            ; preds = %normal-dest599
  %gep605 = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  %287 = load {}*, {}** %gep605, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final604

mvn-final604:                                     ; preds = %mvn2-, %mvn1-603
  %288 = phi {}* [ %.pre, %mvn2- ], [ %286, %mvn1-603 ]
  %D2238818.0 = phi {}* [ %287, %mvn2- ], [ %286, %mvn1-603 ]
  %289 = icmp eq {}* %.elt1706, %288
  br i1 %289, label %tag220, label %tag73

normal-dest607:                                   ; preds = %tag73
  %290 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint608 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint609 = add i64 %ptrtoint608, 7
  %entry-point-addr610 = inttoptr i64 %entry-point-addr-uint609 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point611 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr610, align 8
  %291 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point611({}* %54, i64 2, {}* %.elt1706, {}* %290, {}* null, {}* null)
          to label %normal-dest614 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest614:                                   ; preds = %normal-dest607
  %.elt1710 = extractvalue { {}*, i64 } %291, 0
  %.elt1712 = extractvalue { {}*, i64 } %291, 1
  %cond1641 = icmp eq i64 %.elt1712, 0
  %292 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1845 = select i1 %cond1641, {}* %292, {}* %.elt1710
  br i1 %test1230, label %header-check-br621, label %tag266

header-check-br621:                               ; preds = %normal-dest614
  %irc-bit-cast625 = bitcast {}* %.in to i8*
  %gep626 = getelementptr inbounds i8, i8* %irc-bit-cast625, i64 -9
  %irc-bit-cast627 = bitcast i8* %gep626 to i64*
  %293 = load i64, i64* %irc-bit-cast627, align 8
  %294 = icmp eq i64 %293, 1137
  br i1 %294, label %tag183, label %tag266

normal-dest663:                                   ; preds = %tag86
  %ptrtoint665 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint666 = add i64 %ptrtoint665, 7
  %entry-point-addr667 = inttoptr i64 %entry-point-addr-uint666 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point668 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr667, align 8
  %295 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point668({}* %60, i64 2, {}* %.in1845, {}* %119, {}* null, {}* null)
          to label %normal-dest671 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest671:                                   ; preds = %normal-dest663
  %.elt1721 = extractvalue { {}*, i64 } %295, 0
  %.elt1723 = extractvalue { {}*, i64 } %295, 1
  %cond1643 = icmp eq i64 %.elt1723, 0
  %296 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239159.1 = select i1 %cond1643, {}* %296, {}* %.elt1721
  br label %tag171

header-check-br677:                               ; preds = %tag102
  %297 = load i64, i64* %irc-bit-cast683, align 8
  %298 = add i64 %297, -1309
  %299 = lshr i64 %298, 3
  %300 = shl i64 %298, 61
  %301 = or i64 %299, %300
  switch i64 %301, label %tag300 [
    i64 2, label %tag296
    i64 4, label %tag296
    i64 5, label %tag296
    i64 0, label %tag296
  ]

normal-dest685:                                   ; preds = %tag117
  %ptrtoint688 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint689 = add i64 %ptrtoint688, 7
  %entry-point-addr690 = inttoptr i64 %entry-point-addr-uint689 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point691 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr690, align 8
  %302 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point691({}* %79, i64 2, {}* %.in1805, {}* %58, {}* null, {}* null)
          to label %normal-dest694 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest694:                                   ; preds = %normal-dest685
  %.elt1750 = extractvalue { {}*, i64 } %302, 0
  %.elt1752 = extractvalue { {}*, i64 } %302, 1
  %cond1655 = icmp eq i64 %.elt1752, 0
  %303 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238998.1 = select i1 %cond1655, {}* %303, {}* %.elt1750
  br label %tag185

header-check-br700:                               ; preds = %header-check-br768
  %.off2002 = add i64 %314, -1001
  %304 = icmp ult i64 %.off2002, 5
  br i1 %304, label %maybe-more-tests708, label %tag4

maybe-more-tests708:                              ; preds = %header-check-br700
  %305 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %306 = invoke {}* @cc_safe_fdefinition({}* %305)
          to label %normal-dest1328 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest718:                                   ; preds = %tag97
  %ptrtoint721 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint722 = add i64 %ptrtoint721, 7
  %entry-point-addr723 = inttoptr i64 %entry-point-addr-uint722 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point724 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr723, align 8
  %307 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point724({}* %68, i64 2, {}* nonnull %farg1, {}* nonnull %.in1868, {}* null, {}* null)
          to label %normal-dest727 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest727:                                   ; preds = %normal-dest718
  %.elt1870 = extractvalue { {}*, i64 } %307, 0
  %.elt1872 = extractvalue { {}*, i64 } %307, 1
  %cond1667 = icmp eq i64 %.elt1872, 0
  %308 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239270.1 = select i1 %cond1667, {}* %308, {}* %.elt1870
  br label %tag321

normal-dest744:                                   ; preds = %tag103
  %ptrtoint746 = ptrtoint {}* %70 to i64
  %tag-only747 = and i64 %ptrtoint746, 7
  %test748 = icmp eq i64 %tag-only747, 1
  br i1 %test748, label %header-check-br745, label %tag123

header-check-br745:                               ; preds = %normal-dest744
  %irc-bit-cast749 = bitcast {}* %70 to i8*
  %gep750 = getelementptr inbounds i8, i8* %irc-bit-cast749, i64 -9
  %irc-bit-cast751 = bitcast i8* %gep750 to i64*
  %309 = load i64, i64* %irc-bit-cast751, align 8
  %.off2003 = add i64 %309, -913
  %310 = icmp ult i64 %.off2003, 85
  br i1 %310, label %tag283, label %header-check-br754

header-check-br754:                               ; preds = %header-check-br745
  %.off2004 = add i64 %309, -1001
  %311 = icmp ult i64 %.off2004, 5
  br i1 %311, label %maybe-more-tests762, label %tag123

maybe-more-tests762:                              ; preds = %header-check-br754
  %312 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %313 = invoke {}* @cc_safe_fdefinition({}* %312)
          to label %normal-dest516 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest767:                                   ; preds = %tag108
  %ptrtoint769 = ptrtoint {}* %72 to i64
  %tag-only770 = and i64 %ptrtoint769, 7
  %test771 = icmp eq i64 %tag-only770, 1
  br i1 %test771, label %header-check-br768, label %tag4

header-check-br768:                               ; preds = %normal-dest767
  %irc-bit-cast772 = bitcast {}* %72 to i8*
  %gep773 = getelementptr inbounds i8, i8* %irc-bit-cast772, i64 -9
  %irc-bit-cast774 = bitcast i8* %gep773 to i64*
  %314 = load i64, i64* %irc-bit-cast774, align 8
  %.off = add i64 %314, -913
  %315 = icmp ult i64 %.off, 85
  br i1 %315, label %tag229, label %header-check-br700

normal-dest778:                                   ; preds = %tag109
  %ptrtoint779 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint780 = add i64 %ptrtoint779, 7
  %entry-point-addr781 = inttoptr i64 %entry-point-addr-uint780 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point782 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr781, align 8
  %316 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point782({}* %74, i64 2, {}* %farg1, {}* %G238847.0, {}* null, {}* null)
          to label %normal-dest785 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest785:                                   ; preds = %normal-dest778
  %.elt1798 = extractvalue { {}*, i64 } %316, 0
  %.elt1800 = extractvalue { {}*, i64 } %316, 1
  %cond1661 = icmp eq i64 %.elt1800, 0
  %317 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238839.1 = select i1 %cond1661, {}* %317, {}* %.elt1798
  br label %tag108

normal-dest803:                                   ; preds = %tag118
  %318 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint804 = ptrtoint {}* %81 to i64
  %entry-point-addr-uint805 = add i64 %ptrtoint804, 7
  %entry-point-addr806 = inttoptr i64 %entry-point-addr-uint805 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point807 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr806, align 8
  %319 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point807({}* %81, i64 2, {}* %D2238818.0, {}* %318, {}* null, {}* null)
          to label %normal-dest810 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest810:                                   ; preds = %normal-dest803
  %.elt1739 = extractvalue { {}*, i64 } %319, 0
  %.elt1741 = extractvalue { {}*, i64 } %319, 1
  %cond1653 = icmp eq i64 %.elt1741, 0
  %320 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1805 = select i1 %cond1653, {}* %320, {}* %.elt1739
  br i1 %test1230, label %header-check-br818, label %tag282

header-check-br818:                               ; preds = %normal-dest810
  %irc-bit-cast822 = bitcast {}* %.in to i8*
  %gep823 = getelementptr inbounds i8, i8* %irc-bit-cast822, i64 -9
  %irc-bit-cast824 = bitcast i8* %gep823 to i64*
  %321 = load i64, i64* %irc-bit-cast824, align 8
  %322 = icmp eq i64 %321, 1137
  br i1 %322, label %tag11, label %tag282

normal-dest842:                                   ; preds = %tag123
  %323 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %324 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %325 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %326 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 608), align 16
  %ptrtoint843 = ptrtoint {}* %83 to i64
  %entry-point-addr-uint844 = add i64 %ptrtoint843, 7
  %entry-point-addr845 = inttoptr i64 %entry-point-addr-uint844 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point846 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr845, align 8
  %327 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point846({}* %83, i64 5, {}* %323, {}* %324, {}* %70, {}* %325, {}* %326)
          to label %normal-dest849 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest849:                                   ; preds = %normal-dest842
  %.elt1731 = extractvalue { {}*, i64 } %327, 0
  %.elt1733 = extractvalue { {}*, i64 } %327, 1
  %cond1644 = icmp eq i64 %.elt1733, 0
  %328 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239057.2 = select i1 %cond1644, {}* %328, {}* %.elt1731
  br label %tag283

normal-dest863:                                   ; preds = %tag127
  %329 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %330 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %331 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %332 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %ptrtoint1376 = ptrtoint {}* %87 to i64
  %entry-point-addr-uint1377 = add i64 %ptrtoint1376, 7
  %entry-point-addr1378 = inttoptr i64 %entry-point-addr-uint1377 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1379 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1378, align 8
  %333 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1379({}* %87, i64 5, {}* %329, {}* %330, {}* %"%SUBLIST238806.02032", {}* %331, {}* %332)
          to label %normal-dest1382 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest865:                                   ; preds = %tag131
  %334 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %335 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %336 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %337 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %ptrtoint1112 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint1113 = add i64 %ptrtoint1112, 7
  %entry-point-addr1114 = inttoptr i64 %entry-point-addr-uint1113 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1115 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1114, align 8
  %338 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1115({}* %89, i64 5, {}* %334, {}* %335, {}* %"%SUBLIST238826.02028", {}* %336, {}* %337)
          to label %normal-dest1118 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest870:                                   ; preds = %tag224
  %ptrtoint871 = ptrtoint {}* %152 to i64
  %entry-point-addr-uint872 = add i64 %ptrtoint871, 7
  %entry-point-addr873 = inttoptr i64 %entry-point-addr-uint872 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point874 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr873, align 8
  %339 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point874({}* %152, i64 2, {}* %G238802.0, {}* %44, {}* null, {}* null)
          to label %normal-dest877 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest877:                                   ; preds = %normal-dest870
  %.elt1688 = extractvalue { {}*, i64 } %339, 0
  %.elt1690 = extractvalue { {}*, i64 } %339, 1
  %cond1639 = icmp eq i64 %.elt1690, 0
  %340 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239325.1 = select i1 %cond1639, {}* %340, {}* %.elt1688
  br label %tag54

normal-dest891:                                   ; preds = %tag143
  %341 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %342 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %343 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 610), align 16
  %344 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 612), align 16
  %345 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint892 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint893 = add i64 %ptrtoint892, 7
  %entry-point-addr894 = inttoptr i64 %entry-point-addr-uint893 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point895 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr894, align 8
  %346 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point895({}* %91, i64 7, {}* %farg0, {}* %341, {}* %.in, {}* %342, {}* %343, {}* %344, {}* %345)
          to label %normal-dest898 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest898:                                   ; preds = %normal-dest891
  %.elt1768 = extractvalue { {}*, i64 } %346, 0
  %347 = ptrtoint {}* %.elt1768 to i64
  %.elt1770 = extractvalue { {}*, i64 } %346, 1
  br label %tag237

normal-dest909:                                   ; preds = %tag146
  %348 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint910 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint911 = add i64 %ptrtoint910, 7
  %entry-point-addr912 = inttoptr i64 %entry-point-addr-uint911 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point913 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr912, align 8
  %349 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point913({}* %97, i64 3, {}* %348, {}* %.in1805, {}* %58, {}* null)
          to label %normal-dest916 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest916:                                   ; preds = %normal-dest909
  %.elt1802 = extractvalue { {}*, i64 } %349, 0
  %.elt1804 = extractvalue { {}*, i64 } %349, 1
  %cond1662 = icmp eq i64 %.elt1804, 0
  %350 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238847.1 = select i1 %cond1662, {}* %350, {}* %.elt1802
  br label %tag35

header-check-br957:                               ; preds = %tag361
  %irc-bit-cast961 = bitcast {}* %232 to i8*
  %gep962 = getelementptr inbounds i8, i8* %irc-bit-cast961, i64 -9
  %irc-bit-cast963 = bitcast i8* %gep962 to i64*
  %351 = load i64, i64* %irc-bit-cast963, align 8
  %352 = add i64 %351, -1309
  %353 = lshr i64 %352, 3
  %354 = shl i64 %352, 61
  %355 = or i64 %353, %354
  switch i64 %355, label %tag237 [
    i64 2, label %tag209
    i64 4, label %tag209
    i64 5, label %tag209
    i64 0, label %tag209
  ]

header-check-br986:                               ; preds = %tag289
  %gep991 = getelementptr inbounds i8, i8* %93, i64 -9
  %irc-bit-cast992 = bitcast i8* %gep991 to i64*
  %356 = load i64, i64* %irc-bit-cast992, align 8
  %357 = add i64 %356, -1309
  %358 = lshr i64 %357, 3
  %359 = shl i64 %357, 61
  %360 = or i64 %358, %359
  switch i64 %360, label %tag216 [
    i64 2, label %tag335
    i64 4, label %tag335
    i64 5, label %tag335
    i64 0, label %tag335
  ]

normal-dest1009:                                  ; preds = %tag189
  %361 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %362 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %363 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %364 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint1010 = ptrtoint {}* %129 to i64
  %entry-point-addr-uint1011 = add i64 %ptrtoint1010, 7
  %entry-point-addr1012 = inttoptr i64 %entry-point-addr-uint1011 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1013 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1012, align 8
  %365 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1013({}* %129, i64 5, {}* %361, {}* %362, {}* %.in, {}* %363, {}* %364)
          to label %normal-dest1016 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1016:                                  ; preds = %normal-dest1009
  %.elt1811 = extractvalue { {}*, i64 } %365, 0
  %.elt1813 = extractvalue { {}*, i64 } %365, 1
  %cond1664 = icmp eq i64 %.elt1813, 0
  %366 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238847.2 = select i1 %cond1664, {}* %366, {}* %.elt1811
  br label %tag35

header-check-br1022:                              ; preds = %tag252
  %367 = load i64, i64* %irc-bit-cast1028, align 8
  %368 = add i64 %367, -1309
  %369 = lshr i64 %368, 3
  %370 = shl i64 %368, 61
  %371 = or i64 %369, %370
  switch i64 %371, label %tag147 [
    i64 2, label %tag231
    i64 4, label %tag231
    i64 5, label %tag231
    i64 0, label %tag231
  ]

normal-dest1045:                                  ; preds = %tag202
  %372 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint1046 = ptrtoint {}* %134 to i64
  %entry-point-addr-uint1047 = add i64 %ptrtoint1046, 7
  %entry-point-addr1048 = inttoptr i64 %entry-point-addr-uint1047 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1049 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1048, align 8
  %373 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1049({}* %134, i64 3, {}* %372, {}* %.in1845, {}* %119, {}* null)
          to label %normal-dest1052 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1052:                                  ; preds = %normal-dest1045
  %.elt1842 = extractvalue { {}*, i64 } %373, 0
  %.elt1844 = extractvalue { {}*, i64 } %373, 1
  %cond1650 = icmp eq i64 %.elt1844, 0
  %374 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238831.2 = select i1 %cond1650, {}* %374, {}* %.elt1842
  br label %tag91

normal-dest1076:                                  ; preds = %tag209
  %ptrtoint1077 = ptrtoint {}* %136 to i64
  %entry-point-addr-uint1078 = add i64 %ptrtoint1077, 7
  %entry-point-addr1079 = inttoptr i64 %entry-point-addr-uint1078 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1080 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1079, align 8
  %375 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1080({}* %136, i64 2, {}* nonnull %farg2, {}* nonnull %232, {}* null, {}* null)
          to label %normal-dest1083 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1083:                                  ; preds = %normal-dest1076
  %.elt1899 = extractvalue { {}*, i64 } %375, 0
  %.elt1901 = extractvalue { {}*, i64 } %375, 1
  %cond1673 = icmp eq i64 %.elt1901, 0
  %376 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239386.1 = select i1 %cond1673, {}* %376, {}* %.elt1899
  %377 = ptrtoint {}* %376 to i64
  br label %tag330

normal-dest1118:                                  ; preds = %normal-dest865
  call void @unreachableError()
  unreachable

normal-dest1165:                                  ; preds = %tag240
  %ptrtoint1166 = ptrtoint {}* %159 to i64
  %entry-point-addr-uint1167 = add i64 %ptrtoint1166, 7
  %entry-point-addr1168 = inttoptr i64 %entry-point-addr-uint1167 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1169 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1168, align 8
  %378 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1169({}* %159, i64 2, {}* %farg1, {}* %G238831.0, {}* null, {}* null)
          to label %normal-dest1172 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1172:                                  ; preds = %normal-dest1165
  %.elt1838 = extractvalue { {}*, i64 } %378, 0
  %.elt1840 = extractvalue { {}*, i64 } %378, 1
  %cond1649 = icmp eq i64 %.elt1840, 0
  %379 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238823.1 = select i1 %cond1649, {}* %379, {}* %.elt1838
  br label %tag103

normal-dest1198:                                  ; preds = %tag253
  %380 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint1199 = ptrtoint {}* %166 to i64
  %entry-point-addr-uint1200 = add i64 %ptrtoint1199, 7
  %entry-point-addr1201 = inttoptr i64 %entry-point-addr-uint1200 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1202 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1201, align 8
  %381 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1202({}* %166, i64 2, {}* %farg0, {}* %380, {}* null, {}* null)
          to label %normal-dest1205 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1205:                                  ; preds = %normal-dest1198
  %.elt = extractvalue { {}*, i64 } %381, 0
  %.elt1675 = extractvalue { {}*, i64 } %381, 1
  %cond = icmp eq i64 %.elt1675, 0
  %382 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %382, {}* %.elt
  %383 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %384 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %385 = invoke {}* @cc_safe_fdefinition({}* %384)
          to label %normal-dest1212 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1212:                                  ; preds = %normal-dest1205
  %386 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint1213 = ptrtoint {}* %385 to i64
  %entry-point-addr-uint1214 = add i64 %ptrtoint1213, 7
  %entry-point-addr1215 = inttoptr i64 %entry-point-addr-uint1214 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1216 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1215, align 8
  %387 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1216({}* %385, i64 2, {}* %farg3, {}* %386, {}* null, {}* null)
          to label %normal-dest1219 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1219:                                  ; preds = %normal-dest1212
  %.elt1677 = extractvalue { {}*, i64 } %387, 0
  %.elt1679 = extractvalue { {}*, i64 } %387, 1
  %cond1637 = icmp eq i64 %.elt1679, 0
  %388 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238802.0 = select i1 %cond1637, {}* %388, {}* %.elt1677
  %ptrtoint1228 = ptrtoint {}* %.in to i64
  %tag-only1229 = and i64 %ptrtoint1228, 7
  %test1230 = icmp eq i64 %tag-only1229, 1
  br i1 %test1230, label %tag311, label %tag341

normal-dest1242:                                  ; preds = %tag255
  %389 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %390 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %391 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %392 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint1243 = ptrtoint {}* %168 to i64
  %entry-point-addr-uint1244 = add i64 %ptrtoint1243, 7
  %entry-point-addr1245 = inttoptr i64 %entry-point-addr-uint1244 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1246 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1245, align 8
  %393 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1246({}* %168, i64 5, {}* %389, {}* %390, {}* %.in, {}* %391, {}* %392)
          to label %normal-dest1249 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1249:                                  ; preds = %normal-dest1242
  %.elt1851 = extractvalue { {}*, i64 } %393, 0
  %.elt1853 = extractvalue { {}*, i64 } %393, 1
  %cond1652 = icmp eq i64 %.elt1853, 0
  %394 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238831.3 = select i1 %cond1652, {}* %394, {}* %.elt1851
  br label %tag91

normal-dest1263:                                  ; preds = %tag259
  %ptrtoint1264 = ptrtoint {}* %170 to i64
  %entry-point-addr-uint1265 = add i64 %ptrtoint1264, 7
  %entry-point-addr1266 = inttoptr i64 %entry-point-addr-uint1265 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1267 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1266, align 8
  %395 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1267({}* %170, i64 2, {}* %farg1, {}* %G238811.0, {}* null, {}* null)
          to label %normal-dest1270 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1270:                                  ; preds = %normal-dest1263
  %.elt1878 = extractvalue { {}*, i64 } %395, 0
  %.elt1880 = extractvalue { {}*, i64 } %395, 1
  %cond1669 = icmp eq i64 %.elt1880, 0
  %396 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238803.1 = select i1 %cond1669, {}* %396, {}* %.elt1878
  br label %tag286

normal-dest1291:                                  ; preds = %tag262
  %ptrtoint1292 = ptrtoint {}* %172 to i64
  %entry-point-addr-uint1293 = add i64 %ptrtoint1292, 7
  %entry-point-addr1294 = inttoptr i64 %entry-point-addr-uint1293 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1295 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1294, align 8
  %397 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1295({}* %172, i64 2, {}* null, {}* %.in1845, {}* null, {}* null)
          to label %normal-dest1298 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1298:                                  ; preds = %normal-dest1291
  %.elt1716 = extractvalue { {}*, i64 } %397, 0
  %.elt1718 = extractvalue { {}*, i64 } %397, 1
  %cond1642 = icmp eq i64 %.elt1718, 0
  %398 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239182.1 = select i1 %cond1642, {}* %398, {}* %.elt1716
  br label %tag149

normal-dest1307:                                  ; preds = %tag264
  %399 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint1308 = ptrtoint {}* %174 to i64
  %entry-point-addr-uint1309 = add i64 %ptrtoint1308, 7
  %entry-point-addr1310 = inttoptr i64 %entry-point-addr-uint1309 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1311 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1310, align 8
  %400 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1311({}* %174, i64 3, {}* %399, {}* %G238802.0, {}* %44, {}* null)
          to label %normal-dest1314 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1314:                                  ; preds = %normal-dest1307
  %.elt1882 = extractvalue { {}*, i64 } %400, 0
  %.elt1884 = extractvalue { {}*, i64 } %400, 1
  %cond1670 = icmp eq i64 %.elt1884, 0
  %401 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238811.1 = select i1 %cond1670, {}* %401, {}* %.elt1882
  br label %tag357

normal-dest1328:                                  ; preds = %maybe-more-tests708
  %ptrtoint1329 = ptrtoint {}* %306 to i64
  %entry-point-addr-uint1330 = add i64 %ptrtoint1329, 7
  %entry-point-addr1331 = inttoptr i64 %entry-point-addr-uint1330 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1332 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1331, align 8
  %402 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1332({}* %306, i64 1, {}* nonnull %72, {}* null, {}* null, {}* null)
          to label %normal-dest1335 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1335:                                  ; preds = %normal-dest1328
  %.elt1775 = extractvalue { {}*, i64 } %402, 0
  %.elt1777 = extractvalue { {}*, i64 } %402, 1
  %cond1657 = icmp eq i64 %.elt1777, 0
  %403 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238896.2 = select i1 %cond1657, {}* %403, {}* %.elt1775
  br label %tag229

normal-dest1356:                                  ; preds = %tag286
  %ptrtoint1358 = ptrtoint {}* %177 to i64
  %tag-only1359 = and i64 %ptrtoint1358, 7
  %test1360 = icmp eq i64 %tag-only1359, 1
  br i1 %test1360, label %header-check-br1357, label %tag6

header-check-br1357:                              ; preds = %normal-dest1356
  %irc-bit-cast1361 = bitcast {}* %177 to i8*
  %gep1362 = getelementptr inbounds i8, i8* %irc-bit-cast1361, i64 -9
  %irc-bit-cast1363 = bitcast i8* %gep1362 to i64*
  %404 = load i64, i64* %irc-bit-cast1363, align 8
  %.off2005 = add i64 %404, -913
  %405 = icmp ult i64 %.off2005, 85
  br i1 %405, label %tag72, label %header-check-br430

normal-dest1382:                                  ; preds = %normal-dest863
  call void @unreachableError()
  unreachable

normal-dest1418:                                  ; preds = %maybe-more-tests
  %ptrtoint1419 = ptrtoint {}* %258 to i64
  %entry-point-addr-uint1420 = add i64 %ptrtoint1419, 7
  %entry-point-addr1421 = inttoptr i64 %entry-point-addr-uint1420 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1422 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1421, align 8
  %406 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1422({}* %258, i64 1, {}* nonnull %177, {}* null, {}* null, {}* null)
          to label %normal-dest1425 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1425:                                  ; preds = %normal-dest1418
  %.elt1855 = extractvalue { {}*, i64 } %406, 0
  %.elt1857 = extractvalue { {}*, i64 } %406, 1
  %cond1665 = icmp eq i64 %.elt1857, 0
  %407 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239223.2 = select i1 %cond1665, {}* %407, {}* %.elt1855
  br label %tag72

normal-dest1443:                                  ; preds = %normal-dest533
  call void @unreachableError()
  unreachable

normal-dest1447:                                  ; preds = %tag322
  %408 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %409 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %410 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %411 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint1448 = ptrtoint {}* %199 to i64
  %entry-point-addr-uint1449 = add i64 %ptrtoint1448, 7
  %entry-point-addr1450 = inttoptr i64 %entry-point-addr-uint1449 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1451 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1450, align 8
  %412 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1451({}* %199, i64 5, {}* %408, {}* %409, {}* %"%SUBLIST238842.02024", {}* %410, {}* %411)
          to label %normal-dest1454 unwind label %cleanup-lpad.loopexit

normal-dest1454:                                  ; preds = %normal-dest1447
  %.elt1794 = extractvalue { {}*, i64 } %412, 0
  %.elt1796 = extractvalue { {}*, i64 } %412, 1
  %cond1660 = icmp eq i64 %.elt1796, 0
  %413 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1787 = select i1 %cond1660, {}* %413, {}* %.elt1794
  %.val2000.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  br label %tag145

header-check-br1471:                              ; preds = %tag344
  %414 = load i64, i64* %irc-bit-cast1477, align 8
  %415 = add i64 %414, -1309
  %416 = lshr i64 %415, 3
  %417 = shl i64 %415, 61
  %418 = or i64 %416, %417
  switch i64 %418, label %tag216 [
    i64 2, label %tag289
    i64 4, label %tag289
    i64 5, label %tag289
    i64 0, label %tag289
  ]

normal-dest1481:                                  ; preds = %tag335
  %ptrtoint1482 = ptrtoint {}* %208 to i64
  %entry-point-addr-uint1483 = add i64 %ptrtoint1482, 7
  %entry-point-addr1484 = inttoptr i64 %entry-point-addr-uint1483 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1485 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1484, align 8
  %419 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1485({}* %208, i64 2, {}* nonnull %farg1, {}* nonnull %.in1788, {}* null, {}* null)
          to label %normal-dest1488 unwind label %cleanup-lpad.loopexit

normal-dest1488:                                  ; preds = %normal-dest1481
  %.elt1790 = extractvalue { {}*, i64 } %419, 0
  %.elt1792 = extractvalue { {}*, i64 } %419, 1
  %cond1659 = icmp eq i64 %.elt1792, 0
  %420 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238943.1 = select i1 %cond1659, {}* %420, {}* %.elt1790
  br label %tag44

header-check-br1501:                              ; preds = %tag24
  %irc-bit-cast1505 = bitcast {}* %farg2 to i8*
  %gep1506 = getelementptr inbounds i8, i8* %irc-bit-cast1505, i64 -9
  %irc-bit-cast1507 = bitcast i8* %gep1506 to i64*
  %421 = load i64, i64* %irc-bit-cast1507, align 8
  %422 = add i64 %421, -1309
  %423 = lshr i64 %422, 3
  %424 = shl i64 %422, 61
  %425 = or i64 %423, %424
  switch i64 %425, label %tag237 [
    i64 2, label %tag71
    i64 4, label %tag71
    i64 5, label %tag71
    i64 0, label %tag71
  ]

normal-dest1509:                                  ; preds = %tag338
  %426 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %427 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %428 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %429 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint1510 = ptrtoint {}* %210 to i64
  %entry-point-addr-uint1511 = add i64 %ptrtoint1510, 7
  %entry-point-addr1512 = inttoptr i64 %entry-point-addr-uint1511 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1513 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1512, align 8
  %430 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1513({}* %210, i64 5, {}* %426, {}* %427, {}* %.in1805, {}* %428, {}* %429)
          to label %normal-dest1516 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1516:                                  ; preds = %normal-dest1509
  %.elt1807 = extractvalue { {}*, i64 } %430, 0
  %.elt1809 = extractvalue { {}*, i64 } %430, 1
  %cond1663 = icmp eq i64 %.elt1809, 0
  %431 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238847.3 = select i1 %cond1663, {}* %431, {}* %.elt1807
  br label %tag35

normal-dest1523:                                  ; preds = %tag339
  %432 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %433 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %434 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %435 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint1524 = ptrtoint {}* %212 to i64
  %entry-point-addr-uint1525 = add i64 %ptrtoint1524, 7
  %entry-point-addr1526 = inttoptr i64 %entry-point-addr-uint1525 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1527 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1526, align 8
  %436 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1527({}* %212, i64 5, {}* %432, {}* %433, {}* %G238802.0, {}* %434, {}* %435)
          to label %normal-dest1530 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1530:                                  ; preds = %normal-dest1523
  %.elt1887 = extractvalue { {}*, i64 } %436, 0
  %.elt1889 = extractvalue { {}*, i64 } %436, 1
  %cond1671 = icmp eq i64 %.elt1889, 0
  %437 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238811.2 = select i1 %cond1671, {}* %437, {}* %.elt1887
  br label %tag357

normal-dest1537:                                  ; preds = %tag341
  %438 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %439 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %440 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %441 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint1538 = ptrtoint {}* %214 to i64
  %entry-point-addr-uint1539 = add i64 %ptrtoint1538, 7
  %entry-point-addr1540 = inttoptr i64 %entry-point-addr-uint1539 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1541 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1540, align 8
  %442 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1541({}* %214, i64 5, {}* %438, {}* %439, {}* %.in, {}* %440, {}* %441)
          to label %normal-dest1544 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1544:                                  ; preds = %normal-dest1537
  %.elt1891 = extractvalue { {}*, i64 } %442, 0
  %.elt1893 = extractvalue { {}*, i64 } %442, 1
  %cond1672 = icmp eq i64 %.elt1893, 0
  %443 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G238811.3 = select i1 %cond1672, {}* %443, {}* %.elt1891
  br label %tag357

header-check-br1552:                              ; preds = %tag231
  %gep1557 = getelementptr inbounds i8, i8* %113, i64 -9
  %irc-bit-cast1558 = bitcast i8* %gep1557 to i64*
  %444 = load i64, i64* %irc-bit-cast1558, align 8
  %445 = add i64 %444, -1309
  %446 = lshr i64 %445, 3
  %447 = shl i64 %445, 61
  %448 = or i64 %446, %447
  switch i64 %448, label %tag147 [
    i64 2, label %tag97
    i64 4, label %tag97
    i64 5, label %tag97
    i64 0, label %tag97
  ]

normal-dest1582:                                  ; preds = %tag349
  %ptrtoint1583 = ptrtoint {}* %219 to i64
  %entry-point-addr-uint1584 = add i64 %ptrtoint1583, 7
  %entry-point-addr1585 = inttoptr i64 %entry-point-addr-uint1584 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1586 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1585, align 8
  %449 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1586({}* %219, i64 2, {}* nonnull %farg1, {}* nonnull %.in1828, {}* null, {}* null)
          to label %normal-dest1589 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1589:                                  ; preds = %normal-dest1582
  %.elt1830 = extractvalue { {}*, i64 } %449, 0
  %.elt1832 = extractvalue { {}*, i64 } %449, 1
  %cond1647 = icmp eq i64 %.elt1832, 0
  %450 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239104.1 = select i1 %cond1647, {}* %450, {}* %.elt1830
  br label %tag172

normal-dest1603:                                  ; preds = %tag352
  %ptrtoint1604 = ptrtoint {}* %221 to i64
  %entry-point-addr-uint1605 = add i64 %ptrtoint1604, 7
  %entry-point-addr1606 = inttoptr i64 %entry-point-addr-uint1605 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1607 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1606, align 8
  %451 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1607({}* %221, i64 2, {}* null, {}* %.in1805, {}* null, {}* null)
          to label %normal-dest1610 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1610:                                  ; preds = %normal-dest1603
  %.elt1745 = extractvalue { {}*, i64 } %451, 0
  %.elt1747 = extractvalue { {}*, i64 } %451, 1
  %cond1654 = icmp eq i64 %.elt1747, 0
  %452 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239021.1 = select i1 %cond1654, {}* %452, {}* %.elt1745
  br label %tag65
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^555^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !101 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^555^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G239461.0 = phi {}* [ %18, %header-check-br ], [ %G239461.1, %normal-dest26 ], [ %G239461.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 634), align 16
  %ptrtoint29 = ptrtoint {}* %G239461.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G239461.0, i64 2, {}* %"closure->ND=PARAMETER_UNBEKANNT", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 634), align 16
  %"closure->ND=PARAMETER_UNBEKANNT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 19730, i64 555, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 633), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239461.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag3

normal-dest35:                                    ; preds = %tag3
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 636), align 16
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->ND=PARAMETER_UNBEKANNT", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 637), align 8
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->ND=PARAMETER_UNBEKANNT", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 2220 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 634), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239461.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !102 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %11 = icmp ult i64 %nargs, 4
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %12
  unreachable

; <label>:13:                                     ; preds = %entry
  %14 = icmp eq i64 %nargs, 4
  br i1 %14, label %normal-dest, label %15

; <label>:15:                                     ; preds = %13
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc1227 unwind label %cleanup-lpad

.noexc1227:                                       ; preds = %15
  unreachable

tag:                                              ; preds = %tag45
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest195 unwind label %cleanup-lpad

tag3:                                             ; preds = %tag16, %normal-dest597
  %18 = phi {}* [ %221, %normal-dest597 ], [ %103, %tag16 ]
  %G239748.0 = phi {}* [ %G239748.1, %normal-dest597 ], [ %.1261, %tag16 ]
  %19 = icmp eq {}* %G239748.0, %18
  br i1 %19, label %tag67, label %tag174

tag5:                                             ; preds = %tag155, %normal-dest1011
  %20 = phi {}* [ %302, %normal-dest1011 ], [ %107, %tag155 ]
  %G239637.0 = phi {}* [ %G239637.1, %normal-dest1011 ], [ %.1267, %tag155 ]
  %21 = icmp eq {}* %G239637.0, %20
  br i1 %21, label %tag76, label %tag65

tag8:                                             ; preds = %tag171
  %22 = ptrtoint {}* %.in1170 to i64
  %fixnum-tag-only2211132 = and i64 %22, 3
  %fixnump-test222 = icmp eq i64 %fixnum-tag-only2211132, 0
  %.val1275 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239578.0 = select i1 %fixnump-test222, {}* %.val1275, {}* %140
  %23 = icmp eq {}* %G239578.0, %140
  br i1 %23, label %tag113, label %tag30

tag12:                                            ; preds = %normal-dest780, %normal-dest762, %normal-dest525, %tag97
  %G239508.0 = phi {}* [ %89, %tag97 ], [ %G239508.1, %normal-dest525 ], [ %G239508.2, %normal-dest762 ], [ %G239508.3, %normal-dest780 ]
  %ptrtoint223 = ptrtoint {}* %135 to i64
  %entry-point-addr-uint224 = add i64 %ptrtoint223, 7
  %entry-point-addr225 = inttoptr i64 %entry-point-addr-uint224 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point226 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr225, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point226({}* %135, i64 2, {}* %farg1, {}* %G239508.0, {}* null, {}* null)
          to label %normal-dest229 unwind label %cleanup-lpad

tag16:                                            ; preds = %tag157
  %25 = icmp sgt i64 %"tag fixnum323", %122
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.1261 = select i1 %25, {}* %26, {}* %103
  br label %tag3

tag17:                                            ; preds = %header-check-br881, %header-check-br484, %tag24, %tag82, %tag95, %tag21, %normal-dest481
  %return-value.sroa.73.0 = phi i64 [ %.elt1158, %normal-dest481 ], [ 1, %tag21 ], [ 1, %tag95 ], [ 1, %tag82 ], [ 1, %tag24 ], [ 1, %header-check-br484 ], [ 1, %header-check-br881 ]
  %return-value.sroa.0.0 = phi i64 [ %197, %normal-dest481 ], [ %32, %tag21 ], [ %130, %tag95 ], [ %130, %tag82 ], [ %130, %tag24 ], [ %130, %header-check-br484 ], [ %130, %header-check-br881 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %27 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %28 = insertvalue { {}*, i64 } undef, {}* %27, 0
  %29 = insertvalue { {}*, i64 } %28, i64 %return-value.sroa.73.0, 1
  ret { {}*, i64 } %29

tag18:                                            ; preds = %normal-dest616, %header-check-br308
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest255 unwind label %cleanup-lpad

tag21:                                            ; preds = %normal-dest, %normal-dest451
  %32 = phi i64 [ %188, %normal-dest451 ], [ %130, %normal-dest ]
  %33 = phi {}* [ %187, %normal-dest451 ], [ %.val1270, %normal-dest ]
  %G239814.0 = phi {}* [ %G239814.1, %normal-dest451 ], [ %.val, %normal-dest ]
  %34 = icmp eq {}* %G239814.0, %33
  br i1 %34, label %tag17, label %tag108

tag22:                                            ; preds = %tag30
  %35 = icmp sgt {}* %.in1170, inttoptr (i64 -1 to {}*)
  %.1262 = select i1 %35, {}* %.val1275, {}* %140
  br label %tag166

tag24:                                            ; preds = %normal-dest
  %36 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only = and i64 %36, 7
  %37 = icmp eq i64 %single-float-tag-only, 6
  br i1 %37, label %tag17, label %tag82

tag26:                                            ; preds = %tag30
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest278 unwind label %cleanup-lpad

tag28:                                            ; preds = %tag168
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest294 unwind label %cleanup-lpad

tag30:                                            ; preds = %tag8
  %42 = add i64 %ptrtoint747, 7
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %"tag fixnum" = shl nuw i64 %44, 2
  %45 = inttoptr i64 %"tag fixnum" to {}*
  br i1 %fixnump-test222, label %tag22, label %tag26

tag31:                                            ; preds = %tag179
  %46 = add i64 %ptrtoint747, 7
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %"tag fixnum323" = shl nuw i64 %48, 2
  %49 = inttoptr i64 %"tag fixnum323" to {}*
  br i1 %fixnump-test1020, label %tag170, label %tag75

tag32:                                            ; preds = %normal-dest739, %tag63
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest333 unwind label %cleanup-lpad

tag35:                                            ; preds = %normal-dest235, %header-check-br686
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest347 unwind label %cleanup-lpad

tag37:                                            ; preds = %normal-dest677, %header-check-br617, %normal-dest262
  %G239706.0 = phi {}* [ %G239706.1, %normal-dest262 ], [ %224, %header-check-br617 ], [ %G239706.2, %normal-dest677 ]
  %ptrtoint374 = ptrtoint {}* %G239706.0 to i64
  %entry-point-addr-uint375 = add i64 %ptrtoint374, 7
  %entry-point-addr376 = inttoptr i64 %entry-point-addr-uint375 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point377 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr376, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point377({}* %G239706.0, i64 3, {}* %G239423239424.0, {}* %.in, {}* %G239422.0, {}* null)
          to label %normal-dest380 unwind label %cleanup-lpad

tag45:                                            ; preds = %tag167.tag45_crit_edge, %mvn-final398
  %55 = phi {}* [ %.pre1283, %tag167.tag45_crit_edge ], [ %.elt1090, %mvn-final398 ]
  %56 = icmp eq {}* %D2239429.0, %55
  br i1 %56, label %tag59, label %tag

tag50:                                            ; preds = %tag125
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest1004 unwind label %cleanup-lpad

tag53:                                            ; preds = %header-check-br881, %header-check-br881, %header-check-br881, %header-check-br881
  %59 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 197), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest444 unwind label %cleanup-lpad

tag59:                                            ; preds = %normal-dest393, %tag154, %tag45
  %61 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 142), align 16
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest474 unwind label %cleanup-lpad

tag63:                                            ; preds = %normal-dest739
  %irc-bit-cast750 = bitcast {}* %.in to i8*
  %gep751 = getelementptr inbounds i8, i8* %irc-bit-cast750, i64 -9
  %irc-bit-cast752 = bitcast i8* %gep751 to i64*
  %63 = load i64, i64* %irc-bit-cast752, align 8
  %64 = icmp eq i64 %63, 1137
  %.val1284 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239798.0.pre = select i1 %64, {}* %.val1284, {}* %251
  %65 = icmp eq {}* %G239798.0.pre, %251
  br i1 %65, label %tag32, label %tag179

tag65:                                            ; preds = %tag5
  %"untagged fixnum" = lshr exact i64 %96, 2
  %aref = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %239, i64 0, i32 1, i64 %"untagged fixnum"
  %66 = load {}*, {}** %aref, align 8
  br label %tag122

tag67:                                            ; preds = %tag134, %tag3
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest495 unwind label %cleanup-lpad

tag70:                                            ; preds = %tag166, %tag98
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest518 unwind label %cleanup-lpad

tag72:                                            ; preds = %normal-dest802, %header-check-br812
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest534 unwind label %cleanup-lpad

tag74:                                            ; preds = %tag114
  %73 = add i64 %ptrtoint747, 7
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %"tag fixnum555" = shl nuw i64 %75, 2
  %76 = inttoptr i64 %"tag fixnum555" to {}*
  br i1 %fixnump-test769, label %tag148, label %tag89

tag75:                                            ; preds = %tag31
  %77 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest562 unwind label %cleanup-lpad

tag76:                                            ; preds = %tag142, %tag5
  %79 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest576 unwind label %cleanup-lpad

tag77:                                            ; preds = %tag157
  %81 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %82 = invoke {}* @cc_safe_fdefinition({}* %81)
          to label %normal-dest590 unwind label %cleanup-lpad

tag80:                                            ; preds = %normal-dest896, %normal-dest502, %normal-dest340, %tag174
  %G239725.0 = phi {}* [ %121, %tag174 ], [ %G239725.1, %normal-dest340 ], [ %G239725.2, %normal-dest502 ], [ %G239725.3, %normal-dest896 ]
  %ptrtoint603 = ptrtoint {}* %246 to i64
  %entry-point-addr-uint604 = add i64 %ptrtoint603, 7
  %entry-point-addr605 = inttoptr i64 %entry-point-addr-uint604 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point606 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr605, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point606({}* %246, i64 2, {}* %farg1, {}* %G239725.0, {}* null, {}* null)
          to label %normal-dest609 unwind label %cleanup-lpad

tag82:                                            ; preds = %tag24
  %fixnum-tag-only6281213 = and i64 %36, 3
  %fixnump-test629 = icmp ne i64 %fixnum-tag-only6281213, 0
  %test487 = icmp eq i64 %single-float-tag-only, 1
  %or.cond1263 = and i1 %fixnump-test629, %test487
  br i1 %or.cond1263, label %header-check-br484, label %tag17

tag89:                                            ; preds = %tag74
  %84 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 335), align 8
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest642 unwind label %cleanup-lpad

tag91:                                            ; preds = %tag156
  %86 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 183), align 8
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest656 unwind label %cleanup-lpad

tag95:                                            ; preds = %header-check-br484, %header-check-br484, %header-check-br484, %header-check-br484
  %88 = ptrtoint {}* %127 to i64
  %single-float-tag-only683 = and i64 %88, 7
  %fixnum-tag-only6311215 = and i64 %88, 3
  %fixnump-test632 = icmp ne i64 %fixnum-tag-only6311215, 0
  %test884 = icmp eq i64 %single-float-tag-only683, 1
  %or.cond1265 = and i1 %fixnump-test632, %test884
  br i1 %or.cond1265, label %header-check-br881, label %tag17

tag97:                                            ; preds = %tag98
  %"untagged fixnum684" = lshr exact i64 %22, 2
  %aref685 = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %239, i64 0, i32 1, i64 %"untagged fixnum684"
  %89 = load {}*, {}** %aref685, align 8
  br label %tag12

tag98:                                            ; preds = %tag181, %normal-dest663
  %90 = phi {}* [ %230, %normal-dest663 ], [ %115, %tag181 ]
  %G239531.0 = phi {}* [ %G239531.1, %normal-dest663 ], [ %.1269, %tag181 ]
  %91 = icmp eq {}* %G239531.0, %90
  br i1 %91, label %tag70, label %tag97

tag108:                                           ; preds = %tag21
  %92 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %93 = invoke {}* @cc_safe_fdefinition({}* %92)
          to label %normal-dest701 unwind label %cleanup-lpad

tag113:                                           ; preds = %tag8
  %94 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %95 = invoke {}* @cc_safe_fdefinition({}* %94)
          to label %normal-dest755 unwind label %cleanup-lpad

tag114:                                           ; preds = %tag168
  %96 = ptrtoint {}* %.in1187 to i64
  %fixnum-tag-only7681101 = and i64 %96, 3
  %fixnump-test769 = icmp eq i64 %fixnum-tag-only7681101, 0
  %.val1273 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239684.0 = select i1 %fixnump-test769, {}* %.val1273, {}* %281
  %97 = icmp eq {}* %G239684.0, %281
  br i1 %97, label %tag161, label %tag74

tag117:                                           ; preds = %tag171
  %98 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest773 unwind label %cleanup-lpad

tag122:                                           ; preds = %normal-dest959, %normal-dest583, %normal-dest302, %tag65
  %G239614.0 = phi {}* [ %66, %tag65 ], [ %G239614.1, %normal-dest302 ], [ %G239614.2, %normal-dest583 ], [ %G239614.3, %normal-dest959 ]
  %ptrtoint789 = ptrtoint {}* %276 to i64
  %entry-point-addr-uint790 = add i64 %ptrtoint789, 7
  %entry-point-addr791 = inttoptr i64 %entry-point-addr-uint790 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point792 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr791, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point792({}* %276, i64 2, {}* %farg1, {}* %G239614.0, {}* null, {}* null)
          to label %normal-dest795 unwind label %cleanup-lpad

tag125:                                           ; preds = %tag142
  br i1 %fixnump-test769, label %tag155, label %tag50

tag126:                                           ; preds = %mvn-final398
  %101 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest826 unwind label %cleanup-lpad

tag134:                                           ; preds = %tag170, %normal-dest569
  %103 = phi {}* [ %216, %normal-dest569 ], [ %251, %tag170 ]
  %G239771.0 = phi {}* [ %G239771.1, %normal-dest569 ], [ %.1268, %tag170 ]
  %104 = icmp eq {}* %G239771.0, %103
  br i1 %104, label %tag67, label %tag157

tag141:                                           ; preds = %tag179
  %105 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %106 = invoke {}* @cc_safe_fdefinition({}* %105)
          to label %normal-dest889 unwind label %cleanup-lpad

tag142:                                           ; preds = %tag148, %normal-dest649
  %107 = phi {}* [ %228, %normal-dest649 ], [ %281, %tag148 ]
  %G239660.0 = phi {}* [ %G239660.1, %normal-dest649 ], [ %.1266, %tag148 ]
  %108 = icmp eq {}* %G239660.0, %107
  br i1 %108, label %tag76, label %tag125

tag148:                                           ; preds = %tag74
  %109 = icmp sgt {}* %.in1187, inttoptr (i64 -1 to {}*)
  %.1266 = select i1 %109, {}* %.val1273, {}* %281
  br label %tag142

tag154:                                           ; preds = %normal-dest465, %normal-dest354, %header-check-br236
  %G239489.0 = phi {}* [ %145, %header-check-br236 ], [ %G239489.1, %normal-dest354 ], [ %G239489.2, %normal-dest465 ]
  %ptrtoint923 = ptrtoint {}* %G239489.0 to i64
  %entry-point-addr-uint924 = add i64 %ptrtoint923, 7
  %entry-point-addr925 = inttoptr i64 %entry-point-addr-uint924 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point926 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr925, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point926({}* %G239489.0, i64 3, {}* %G239441239442.0, {}* %.in, {}* %G239440.0, {}* null)
          to label %tag59 unwind label %cleanup-lpad

tag155:                                           ; preds = %tag125
  %111 = icmp sgt i64 %"tag fixnum555", %96
  %112 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.1267 = select i1 %111, {}* %112, {}* %107
  br label %tag5

tag156:                                           ; preds = %tag166
  br i1 %fixnump-test222, label %tag181, label %tag91

tag157:                                           ; preds = %tag134
  br i1 %fixnump-test1020, label %tag16, label %tag77

tag161:                                           ; preds = %tag114
  %113 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %114 = invoke {}* @cc_safe_fdefinition({}* %113)
          to label %normal-dest952 unwind label %cleanup-lpad

tag166:                                           ; preds = %tag22, %normal-dest285
  %115 = phi {}* [ %155, %normal-dest285 ], [ %140, %tag22 ]
  %G239554.0 = phi {}* [ %G239554.1, %normal-dest285 ], [ %.1262, %tag22 ]
  %116 = icmp eq {}* %G239554.0, %115
  br i1 %116, label %tag70, label %tag156

tag167:                                           ; preds = %header-check-br803, %normal-dest541, %normal-dest368
  %G239595.0 = phi {}* [ %G239595.1, %normal-dest368 ], [ %G239595.2, %normal-dest541 ], [ %266, %header-check-br803 ]
  %ptrtoint986 = ptrtoint {}* %G239595.0 to i64
  %entry-point-addr-uint987 = add i64 %ptrtoint986, 7
  %entry-point-addr988 = inttoptr i64 %entry-point-addr-uint987 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point989 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr988, align 8
  %117 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point989({}* %G239595.0, i64 3, {}* %G239434239435.0, {}* %.in, {}* %G239433.0, {}* null)
          to label %tag167.tag45_crit_edge unwind label %cleanup-lpad

tag167.tag45_crit_edge:                           ; preds = %tag167
  %.pre1283 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %tag45

tag168:                                           ; preds = %header-check-br857, %tag176
  %G239687.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag176 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br857 ]
  %G239687.0 = load {}*, {}** %G239687.0.in, align 16
  %118 = icmp eq {}* %G239687.0, %281
  br i1 %118, label %tag28, label %tag114

tag170:                                           ; preds = %tag31
  %119 = icmp sgt {}* %index740.0, inttoptr (i64 -1 to {}*)
  %.1268 = select i1 %119, {}* %.val1284, {}* %251
  br label %tag134

tag171:                                           ; preds = %header-check-br, %tag173
  %G239581.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %tag173 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %header-check-br ]
  %G239581.0 = load {}*, {}** %G239581.0.in, align 16
  %120 = icmp eq {}* %G239581.0, %140
  br i1 %120, label %tag117, label %tag8

tag173:                                           ; preds = %header-check-br, %normal-dest211
  br label %tag171

tag174:                                           ; preds = %tag3
  %"untagged fixnum1001" = lshr exact i64 %122, 2
  %aref1002 = getelementptr inbounds <{ [15 x i8], [0 x {}*] }>, <{ [15 x i8], [0 x {}*] }>* %239, i64 0, i32 1, i64 %"untagged fixnum1001"
  %121 = load {}*, {}** %aref1002, align 8
  br label %tag80

tag176:                                           ; preds = %header-check-br857, %normal-dest850
  br label %tag168

tag179:                                           ; preds = %tag63
  %122 = ptrtoint {}* %index740.0 to i64
  %fixnum-tag-only10191066 = and i64 %122, 3
  %fixnump-test1020 = icmp eq i64 %fixnum-tag-only10191066, 0
  %G239795.0 = select i1 %fixnump-test1020, {}* %.val1284, {}* %251
  %123 = icmp eq {}* %G239795.0, %251
  br i1 %123, label %tag141, label %tag31

tag181:                                           ; preds = %tag156
  %124 = icmp sgt i64 %"tag fixnum", %22
  %125 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.1269 = select i1 %124, {}* %125, {}* %115
  br label %tag98

cleanup-lpad:                                     ; preds = %15, %12, %normal-dest1004, %tag50, %tag167, %normal-dest952, %tag161, %tag154, %normal-dest889, %tag141, %normal-dest843, %normal-dest840, %normal-dest833, %normal-dest826, %tag126, %normal-dest795, %tag122, %normal-dest773, %tag117, %normal-dest755, %tag113, %normal-dest732, %normal-dest729, %normal-dest722, %normal-dest715, %normal-dest708, %normal-dest701, %tag108, %normal-dest670, %maybe-more-tests316, %normal-dest656, %tag91, %normal-dest642, %tag89, %normal-dest609, %tag80, %normal-dest590, %tag77, %normal-dest576, %tag76, %normal-dest562, %tag75, %normal-dest534, %tag72, %normal-dest518, %tag70, %normal-dest495, %tag67, %normal-dest474, %tag59, %normal-dest458, %maybe-more-tests694, %normal-dest444, %tag53, %normal-dest386, %normal-dest380, %tag37, %normal-dest361, %maybe-more-tests820, %normal-dest347, %tag35, %normal-dest333, %tag32, %normal-dest294, %tag28, %normal-dest278, %tag26, %normal-dest255, %tag18, %normal-dest229, %tag12, %normal-dest204, %normal-dest202, %normal-dest198, %normal-dest195, %tag
  %126 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %126

normal-dest:                                      ; preds = %13
  %127 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %128 = icmp eq {}* %127, %farg2
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %.val1270 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239823.0 = select i1 %128, {}* %.val, {}* %.val1270
  %129 = icmp eq {}* %G239823.0, %.val1270
  %130 = ptrtoint {}* %.val1270 to i64
  br i1 %129, label %tag24, label %tag21

normal-dest195:                                   ; preds = %tag
  %131 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 2, {}* %D2239429.0, {}* %131, {}* null, {}* null)
          to label %normal-dest198 unwind label %cleanup-lpad

normal-dest198:                                   ; preds = %normal-dest195
  %.elt1125 = extractvalue { {}*, i64 } %132, 0
  %.elt1127 = extractvalue { {}*, i64 } %132, 1
  %cond1041 = icmp eq i64 %.elt1127, 0
  %133 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239440.0 = select i1 %cond1041, {}* %133, {}* %.elt1125
  %134 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 628), align 16
  %135 = invoke {}* @cc_safe_fdefinition({}* %134)
          to label %normal-dest202 unwind label %cleanup-lpad

normal-dest202:                                   ; preds = %normal-dest198
  %136 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %137 = invoke {}* @cc_safe_fdefinition({}* %136)
          to label %normal-dest204 unwind label %cleanup-lpad

normal-dest204:                                   ; preds = %normal-dest202
  %138 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint205 = ptrtoint {}* %137 to i64
  %entry-point-addr-uint206 = add i64 %ptrtoint205, 7
  %entry-point-addr207 = inttoptr i64 %entry-point-addr-uint206 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point208 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr207, align 8
  %139 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point208({}* %137, i64 2, {}* %D2239429.0, {}* %138, {}* null, {}* null)
          to label %normal-dest211 unwind label %cleanup-lpad

normal-dest211:                                   ; preds = %normal-dest204
  %.elt1129 = extractvalue { {}*, i64 } %139, 0
  %.elt1131 = extractvalue { {}*, i64 } %139, 1
  %cond1042 = icmp eq i64 %.elt1131, 0
  %140 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1170 = select i1 %cond1042, {}* %140, {}* %.elt1129
  br i1 %test749, label %header-check-br, label %tag173

header-check-br:                                  ; preds = %normal-dest211
  %irc-bit-cast218 = bitcast {}* %.in to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast218, i64 -9
  %irc-bit-cast219 = bitcast i8* %gep to i64*
  %141 = load i64, i64* %irc-bit-cast219, align 8
  %142 = icmp eq i64 %141, 1137
  br i1 %142, label %tag171, label %tag173

normal-dest229:                                   ; preds = %tag12
  %.elt1144 = extractvalue { {}*, i64 } %24, 0
  %.elt1146 = extractvalue { {}*, i64 } %24, 1
  %cond1045 = icmp eq i64 %.elt1146, 0
  %143 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239441239442.0 = select i1 %cond1045, {}* %143, {}* %.elt1144
  %144 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %145 = invoke {}* @cc_safe_setfdefinition({}* %144)
          to label %normal-dest235 unwind label %cleanup-lpad

normal-dest235:                                   ; preds = %normal-dest229
  %ptrtoint237 = ptrtoint {}* %145 to i64
  %tag-only238 = and i64 %ptrtoint237, 7
  %test239 = icmp eq i64 %tag-only238, 1
  br i1 %test239, label %header-check-br236, label %tag35

header-check-br236:                               ; preds = %normal-dest235
  %irc-bit-cast240 = bitcast {}* %145 to i8*
  %gep241 = getelementptr inbounds i8, i8* %irc-bit-cast240, i64 -9
  %irc-bit-cast242 = bitcast i8* %gep241 to i64*
  %146 = load i64, i64* %irc-bit-cast242, align 8
  %.off = add i64 %146, -913
  %147 = icmp ult i64 %.off, 85
  br i1 %147, label %tag154, label %header-check-br686

normal-dest255:                                   ; preds = %tag18
  %148 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %149 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %150 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %151 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 630), align 16
  %ptrtoint256 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint257 = add i64 %ptrtoint256, 7
  %entry-point-addr258 = inttoptr i64 %entry-point-addr-uint257 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point259 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr258, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point259({}* %31, i64 5, {}* %148, {}* %149, {}* %224, {}* %150, {}* %151)
          to label %normal-dest262 unwind label %cleanup-lpad

normal-dest262:                                   ; preds = %normal-dest255
  %.elt1082 = extractvalue { {}*, i64 } %152, 0
  %.elt1084 = extractvalue { {}*, i64 } %152, 1
  %cond1030 = icmp eq i64 %.elt1084, 0
  %153 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239706.1 = select i1 %cond1030, {}* %153, {}* %.elt1082
  br label %tag37

normal-dest278:                                   ; preds = %tag26
  %ptrtoint279 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint280 = add i64 %ptrtoint279, 7
  %entry-point-addr281 = inttoptr i64 %entry-point-addr-uint280 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point282 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr281, align 8
  %154 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point282({}* %39, i64 2, {}* null, {}* %.in1170, {}* null, {}* null)
          to label %normal-dest285 unwind label %cleanup-lpad

normal-dest285:                                   ; preds = %normal-dest278
  %.elt1135 = extractvalue { {}*, i64 } %154, 0
  %.elt1137 = extractvalue { {}*, i64 } %154, 1
  %cond1043 = icmp eq i64 %.elt1137, 0
  %155 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239554.1 = select i1 %cond1043, {}* %155, {}* %.elt1135
  br label %tag166

normal-dest294:                                   ; preds = %tag28
  %156 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %157 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %158 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %159 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint296 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint297 = add i64 %ptrtoint296, 7
  %entry-point-addr298 = inttoptr i64 %entry-point-addr-uint297 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point299 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr298, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point299({}* %41, i64 5, {}* %156, {}* %157, {}* %.in, {}* %158, {}* %159)
          to label %normal-dest302 unwind label %cleanup-lpad

normal-dest302:                                   ; preds = %normal-dest294
  %.elt1193 = extractvalue { {}*, i64 } %160, 0
  %.elt1195 = extractvalue { {}*, i64 } %160, 1
  %cond1040 = icmp eq i64 %.elt1195, 0
  %161 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239614.1 = select i1 %cond1040, {}* %161, {}* %.elt1193
  br label %tag122

header-check-br308:                               ; preds = %header-check-br617
  %.off1281 = add i64 %225, -1001
  %162 = icmp ult i64 %.off1281, 5
  br i1 %162, label %maybe-more-tests316, label %tag18

maybe-more-tests316:                              ; preds = %header-check-br308
  %163 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %164 = invoke {}* @cc_safe_fdefinition({}* %163)
          to label %normal-dest670 unwind label %cleanup-lpad

normal-dest333:                                   ; preds = %tag32
  %165 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %166 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %167 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %168 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint334 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint335 = add i64 %ptrtoint334, 7
  %entry-point-addr336 = inttoptr i64 %entry-point-addr-uint335 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point337 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr336, align 8
  %169 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point337({}* %51, i64 5, {}* %165, {}* %166, {}* %.in, {}* %167, {}* %168)
          to label %normal-dest340 unwind label %cleanup-lpad

normal-dest340:                                   ; preds = %normal-dest333
  %.elt1210 = extractvalue { {}*, i64 } %169, 0
  %.elt1212 = extractvalue { {}*, i64 } %169, 1
  %cond1054 = icmp eq i64 %.elt1212, 0
  %170 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239725.1 = select i1 %cond1054, {}* %170, {}* %.elt1210
  br label %tag80

normal-dest347:                                   ; preds = %tag35
  %171 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %172 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %173 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %174 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 632), align 16
  %ptrtoint348 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint349 = add i64 %ptrtoint348, 7
  %entry-point-addr350 = inttoptr i64 %entry-point-addr-uint349 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point351 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr350, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point351({}* %53, i64 5, {}* %171, {}* %172, {}* %145, {}* %173, {}* %174)
          to label %normal-dest354 unwind label %cleanup-lpad

normal-dest354:                                   ; preds = %normal-dest347
  %.elt1148 = extractvalue { {}*, i64 } %175, 0
  %.elt1150 = extractvalue { {}*, i64 } %175, 1
  %cond1046 = icmp eq i64 %.elt1150, 0
  %176 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239489.1 = select i1 %cond1046, {}* %176, {}* %.elt1148
  br label %tag154

normal-dest361:                                   ; preds = %maybe-more-tests820
  %ptrtoint362 = ptrtoint {}* %271 to i64
  %entry-point-addr-uint363 = add i64 %ptrtoint362, 7
  %entry-point-addr364 = inttoptr i64 %entry-point-addr-uint363 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point365 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr364, align 8
  %177 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point365({}* %271, i64 1, {}* nonnull %266, {}* null, {}* null, {}* null)
          to label %normal-dest368 unwind label %cleanup-lpad

normal-dest368:                                   ; preds = %normal-dest361
  %.elt1180 = extractvalue { {}*, i64 } %177, 0
  %.elt1182 = extractvalue { {}*, i64 } %177, 1
  %cond1037 = icmp eq i64 %.elt1182, 0
  %178 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239595.1 = select i1 %cond1037, {}* %178, {}* %.elt1180
  br label %tag167

normal-dest380:                                   ; preds = %tag37
  %179 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 204), align 16
  %180 = invoke {}* @cc_safe_fdefinition({}* %179)
          to label %normal-dest386 unwind label %cleanup-lpad

normal-dest386:                                   ; preds = %normal-dest380
  %ptrtoint387 = ptrtoint {}* %180 to i64
  %entry-point-addr-uint388 = add i64 %ptrtoint387, 7
  %entry-point-addr389 = inttoptr i64 %entry-point-addr-uint388 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point390 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr389, align 8
  %181 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point390({}* %180, i64 3, {}* %farg1, {}* %farg0, {}* %farg3, {}* null)
          to label %normal-dest393 unwind label %cleanup-lpad

normal-dest393:                                   ; preds = %normal-dest386
  %.elt1090 = extractvalue { {}*, i64 } %181, 0
  %.elt1092 = extractvalue { {}*, i64 } %181, 1
  switch i64 %.elt1092, label %mvn2- [
    i64 0, label %tag59
    i64 1, label %mvn1-397
  ]

mvn1-397:                                         ; preds = %normal-dest393
  %182 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final398

mvn2-:                                            ; preds = %normal-dest393
  %gep399 = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  %183 = load {}*, {}** %gep399, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final398

mvn-final398:                                     ; preds = %mvn2-, %mvn1-397
  %184 = phi {}* [ %.pre, %mvn2- ], [ %182, %mvn1-397 ]
  %D2239429.0 = phi {}* [ %183, %mvn2- ], [ %182, %mvn1-397 ]
  %185 = icmp eq {}* %.elt1090, %184
  br i1 %185, label %tag45, label %tag126

normal-dest444:                                   ; preds = %tag53
  %ptrtoint445 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint446 = add i64 %ptrtoint445, 7
  %entry-point-addr447 = inttoptr i64 %entry-point-addr-uint446 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point448 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr447, align 8
  %186 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point448({}* %60, i64 2, {}* nonnull %farg2, {}* nonnull %127, {}* null, {}* null)
          to label %normal-dest451 unwind label %cleanup-lpad

normal-dest451:                                   ; preds = %normal-dest444
  %.elt1218 = extractvalue { {}*, i64 } %186, 0
  %.elt1220 = extractvalue { {}*, i64 } %186, 1
  %cond1055 = icmp eq i64 %.elt1220, 0
  %187 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239814.1 = select i1 %cond1055, {}* %187, {}* %.elt1218
  %188 = ptrtoint {}* %187 to i64
  br label %tag21

normal-dest458:                                   ; preds = %maybe-more-tests694
  %ptrtoint459 = ptrtoint {}* %235 to i64
  %entry-point-addr-uint460 = add i64 %ptrtoint459, 7
  %entry-point-addr461 = inttoptr i64 %entry-point-addr-uint460 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point462 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr461, align 8
  %189 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point462({}* %235, i64 1, {}* nonnull %145, {}* null, {}* null, {}* null)
          to label %normal-dest465 unwind label %cleanup-lpad

normal-dest465:                                   ; preds = %normal-dest458
  %.elt1163 = extractvalue { {}*, i64 } %189, 0
  %.elt1165 = extractvalue { {}*, i64 } %189, 1
  %cond1047 = icmp eq i64 %.elt1165, 0
  %190 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239489.2 = select i1 %cond1047, {}* %190, {}* %.elt1163
  br label %tag154

normal-dest474:                                   ; preds = %tag59
  %191 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %192 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 157), align 8
  %193 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 610), align 16
  %194 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 612), align 16
  %195 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ptrtoint475 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint476 = add i64 %ptrtoint475, 7
  %entry-point-addr477 = inttoptr i64 %entry-point-addr-uint476 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point478 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr477, align 8
  %196 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point478({}* %62, i64 7, {}* %farg0, {}* %191, {}* %.in, {}* %192, {}* %193, {}* %194, {}* %195)
          to label %normal-dest481 unwind label %cleanup-lpad

normal-dest481:                                   ; preds = %normal-dest474
  %.elt1156 = extractvalue { {}*, i64 } %196, 0
  %197 = ptrtoint {}* %.elt1156 to i64
  %.elt1158 = extractvalue { {}*, i64 } %196, 1
  br label %tag17

header-check-br484:                               ; preds = %tag82
  %irc-bit-cast488 = bitcast {}* %farg2 to i8*
  %gep489 = getelementptr inbounds i8, i8* %irc-bit-cast488, i64 -9
  %irc-bit-cast490 = bitcast i8* %gep489 to i64*
  %198 = load i64, i64* %irc-bit-cast490, align 8
  %199 = add i64 %198, -1309
  %200 = lshr i64 %199, 3
  %201 = shl i64 %199, 61
  %202 = or i64 %200, %201
  switch i64 %202, label %tag17 [
    i64 2, label %tag95
    i64 4, label %tag95
    i64 5, label %tag95
    i64 0, label %tag95
  ]

normal-dest495:                                   ; preds = %tag67
  %203 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint496 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint497 = add i64 %ptrtoint496, 7
  %entry-point-addr498 = inttoptr i64 %entry-point-addr-uint497 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point499 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr498, align 8
  %204 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point499({}* %68, i64 3, {}* %203, {}* %index740.0, {}* %49, {}* null)
          to label %normal-dest502 unwind label %cleanup-lpad

normal-dest502:                                   ; preds = %normal-dest495
  %.elt1201 = extractvalue { {}*, i64 } %204, 0
  %.elt1203 = extractvalue { {}*, i64 } %204, 1
  %cond1052 = icmp eq i64 %.elt1203, 0
  %205 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239725.2 = select i1 %cond1052, {}* %205, {}* %.elt1201
  br label %tag80

normal-dest518:                                   ; preds = %tag70
  %206 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint519 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint520 = add i64 %ptrtoint519, 7
  %entry-point-addr521 = inttoptr i64 %entry-point-addr-uint520 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point522 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr521, align 8
  %207 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point522({}* %70, i64 3, {}* %206, {}* %.in1170, {}* %45, {}* null)
          to label %normal-dest525 unwind label %cleanup-lpad

normal-dest525:                                   ; preds = %normal-dest518
  %.elt1167 = extractvalue { {}*, i64 } %207, 0
  %.elt1169 = extractvalue { {}*, i64 } %207, 1
  %cond1048 = icmp eq i64 %.elt1169, 0
  %208 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239508.1 = select i1 %cond1048, {}* %208, {}* %.elt1167
  br label %tag12

normal-dest534:                                   ; preds = %tag72
  %209 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %210 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %211 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %212 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 631), align 8
  %ptrtoint535 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint536 = add i64 %ptrtoint535, 7
  %entry-point-addr537 = inttoptr i64 %entry-point-addr-uint536 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point538 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr537, align 8
  %213 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point538({}* %72, i64 5, {}* %209, {}* %210, {}* %266, {}* %211, {}* %212)
          to label %normal-dest541 unwind label %cleanup-lpad

normal-dest541:                                   ; preds = %normal-dest534
  %.elt1117 = extractvalue { {}*, i64 } %213, 0
  %.elt1119 = extractvalue { {}*, i64 } %213, 1
  %cond1036 = icmp eq i64 %.elt1119, 0
  %214 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239595.2 = select i1 %cond1036, {}* %214, {}* %.elt1117
  br label %tag167

normal-dest562:                                   ; preds = %tag75
  %ptrtoint563 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint564 = add i64 %ptrtoint563, 7
  %entry-point-addr565 = inttoptr i64 %entry-point-addr-uint564 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point566 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr565, align 8
  %215 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point566({}* %78, i64 2, {}* null, {}* %index740.0, {}* null, {}* null)
          to label %normal-dest569 unwind label %cleanup-lpad

normal-dest569:                                   ; preds = %normal-dest562
  %.elt1069 = extractvalue { {}*, i64 } %215, 0
  %.elt1071 = extractvalue { {}*, i64 } %215, 1
  %cond1027 = icmp eq i64 %.elt1071, 0
  %216 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239771.1 = select i1 %cond1027, {}* %216, {}* %.elt1069
  br label %tag134

normal-dest576:                                   ; preds = %tag76
  %217 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 337), align 8
  %ptrtoint577 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint578 = add i64 %ptrtoint577, 7
  %entry-point-addr579 = inttoptr i64 %entry-point-addr-uint578 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point580 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr579, align 8
  %218 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point580({}* %80, i64 3, {}* %217, {}* %.in1187, {}* %76, {}* null)
          to label %normal-dest583 unwind label %cleanup-lpad

normal-dest583:                                   ; preds = %normal-dest576
  %.elt1184 = extractvalue { {}*, i64 } %218, 0
  %.elt1186 = extractvalue { {}*, i64 } %218, 1
  %cond1038 = icmp eq i64 %.elt1186, 0
  %219 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239614.2 = select i1 %cond1038, {}* %219, {}* %.elt1184
  br label %tag122

normal-dest590:                                   ; preds = %tag77
  %ptrtoint591 = ptrtoint {}* %82 to i64
  %entry-point-addr-uint592 = add i64 %ptrtoint591, 7
  %entry-point-addr593 = inttoptr i64 %entry-point-addr-uint592 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point594 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr593, align 8
  %220 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point594({}* %82, i64 2, {}* %index740.0, {}* %49, {}* null, {}* null)
          to label %normal-dest597 unwind label %cleanup-lpad

normal-dest597:                                   ; preds = %normal-dest590
  %.elt1074 = extractvalue { {}*, i64 } %220, 0
  %.elt1076 = extractvalue { {}*, i64 } %220, 1
  %cond1028 = icmp eq i64 %.elt1076, 0
  %221 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239748.1 = select i1 %cond1028, {}* %221, {}* %.elt1074
  br label %tag3

normal-dest609:                                   ; preds = %tag80
  %.elt1078 = extractvalue { {}*, i64 } %83, 0
  %.elt1080 = extractvalue { {}*, i64 } %83, 1
  %cond1029 = icmp eq i64 %.elt1080, 0
  %222 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239423239424.0 = select i1 %cond1029, {}* %222, {}* %.elt1078
  %223 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %224 = invoke {}* @cc_safe_setfdefinition({}* %223)
          to label %normal-dest616 unwind label %cleanup-lpad

normal-dest616:                                   ; preds = %normal-dest609
  %ptrtoint618 = ptrtoint {}* %224 to i64
  %tag-only619 = and i64 %ptrtoint618, 7
  %test620 = icmp eq i64 %tag-only619, 1
  br i1 %test620, label %header-check-br617, label %tag18

header-check-br617:                               ; preds = %normal-dest616
  %irc-bit-cast621 = bitcast {}* %224 to i8*
  %gep622 = getelementptr inbounds i8, i8* %irc-bit-cast621, i64 -9
  %irc-bit-cast623 = bitcast i8* %gep622 to i64*
  %225 = load i64, i64* %irc-bit-cast623, align 8
  %.off1280 = add i64 %225, -913
  %226 = icmp ult i64 %.off1280, 85
  br i1 %226, label %tag37, label %header-check-br308

normal-dest642:                                   ; preds = %tag89
  %ptrtoint643 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint644 = add i64 %ptrtoint643, 7
  %entry-point-addr645 = inttoptr i64 %entry-point-addr-uint644 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point646 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr645, align 8
  %227 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point646({}* %85, i64 2, {}* null, {}* %.in1187, {}* null, {}* null)
          to label %normal-dest649 unwind label %cleanup-lpad

normal-dest649:                                   ; preds = %normal-dest642
  %.elt1104 = extractvalue { {}*, i64 } %227, 0
  %.elt1106 = extractvalue { {}*, i64 } %227, 1
  %cond1033 = icmp eq i64 %.elt1106, 0
  %228 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239660.1 = select i1 %cond1033, {}* %228, {}* %.elt1104
  br label %tag142

normal-dest656:                                   ; preds = %tag91
  %ptrtoint657 = ptrtoint {}* %87 to i64
  %entry-point-addr-uint658 = add i64 %ptrtoint657, 7
  %entry-point-addr659 = inttoptr i64 %entry-point-addr-uint658 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point660 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr659, align 8
  %229 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point660({}* %87, i64 2, {}* %.in1170, {}* %45, {}* null, {}* null)
          to label %normal-dest663 unwind label %cleanup-lpad

normal-dest663:                                   ; preds = %normal-dest656
  %.elt1140 = extractvalue { {}*, i64 } %229, 0
  %.elt1142 = extractvalue { {}*, i64 } %229, 1
  %cond1044 = icmp eq i64 %.elt1142, 0
  %230 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239531.1 = select i1 %cond1044, {}* %230, {}* %.elt1140
  br label %tag98

normal-dest670:                                   ; preds = %maybe-more-tests316
  %ptrtoint671 = ptrtoint {}* %164 to i64
  %entry-point-addr-uint672 = add i64 %ptrtoint671, 7
  %entry-point-addr673 = inttoptr i64 %entry-point-addr-uint672 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point674 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr673, align 8
  %231 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point674({}* %164, i64 1, {}* nonnull %224, {}* null, {}* null, {}* null)
          to label %normal-dest677 unwind label %cleanup-lpad

normal-dest677:                                   ; preds = %normal-dest670
  %.elt1197 = extractvalue { {}*, i64 } %231, 0
  %.elt1199 = extractvalue { {}*, i64 } %231, 1
  %cond1051 = icmp eq i64 %.elt1199, 0
  %232 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239706.2 = select i1 %cond1051, {}* %232, {}* %.elt1197
  br label %tag37

header-check-br686:                               ; preds = %header-check-br236
  %.off1277 = add i64 %146, -1001
  %233 = icmp ult i64 %.off1277, 5
  br i1 %233, label %maybe-more-tests694, label %tag35

maybe-more-tests694:                              ; preds = %header-check-br686
  %234 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %235 = invoke {}* @cc_safe_fdefinition({}* %234)
          to label %normal-dest458 unwind label %cleanup-lpad

normal-dest701:                                   ; preds = %tag108
  %236 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 161), align 8
  %ptrtoint702 = ptrtoint {}* %93 to i64
  %entry-point-addr-uint703 = add i64 %ptrtoint702, 7
  %entry-point-addr704 = inttoptr i64 %entry-point-addr-uint703 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point705 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr704, align 8
  %237 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point705({}* %93, i64 2, {}* %farg0, {}* %236, {}* null, {}* null)
          to label %normal-dest708 unwind label %cleanup-lpad

normal-dest708:                                   ; preds = %normal-dest701
  %.elt = extractvalue { {}*, i64 } %237, 0
  %.elt1057 = extractvalue { {}*, i64 } %237, 1
  %cond = icmp eq i64 %.elt1057, 0
  %238 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %238, {}* %.elt
  %239 = bitcast {}* %.in to <{ [15 x i8], [0 x {}*] }>*
  %240 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %241 = invoke {}* @cc_safe_fdefinition({}* %240)
          to label %normal-dest715 unwind label %cleanup-lpad

normal-dest715:                                   ; preds = %normal-dest708
  %242 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint716 = ptrtoint {}* %241 to i64
  %entry-point-addr-uint717 = add i64 %ptrtoint716, 7
  %entry-point-addr718 = inttoptr i64 %entry-point-addr-uint717 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point719 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr718, align 8
  %243 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point719({}* %241, i64 2, {}* %farg3, {}* %242, {}* null, {}* null)
          to label %normal-dest722 unwind label %cleanup-lpad

normal-dest722:                                   ; preds = %normal-dest715
  %.elt1059 = extractvalue { {}*, i64 } %243, 0
  %.elt1061 = extractvalue { {}*, i64 } %243, 1
  %cond1025 = icmp eq i64 %.elt1061, 0
  %244 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239422.0 = select i1 %cond1025, {}* %244, {}* %.elt1059
  %245 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 628), align 16
  %246 = invoke {}* @cc_safe_fdefinition({}* %245)
          to label %normal-dest729 unwind label %cleanup-lpad

normal-dest729:                                   ; preds = %normal-dest722
  %247 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %248 = invoke {}* @cc_safe_fdefinition({}* %247)
          to label %normal-dest732 unwind label %cleanup-lpad

normal-dest732:                                   ; preds = %normal-dest729
  %249 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint733 = ptrtoint {}* %248 to i64
  %entry-point-addr-uint734 = add i64 %ptrtoint733, 7
  %entry-point-addr735 = inttoptr i64 %entry-point-addr-uint734 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point736 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr735, align 8
  %250 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point736({}* %248, i64 2, {}* %farg3, {}* %249, {}* null, {}* null)
          to label %normal-dest739 unwind label %cleanup-lpad

normal-dest739:                                   ; preds = %normal-dest732
  %.elt1063 = extractvalue { {}*, i64 } %250, 0
  %.elt1065 = extractvalue { {}*, i64 } %250, 1
  %cond1026 = icmp eq i64 %.elt1065, 0
  %251 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %index740.0 = select i1 %cond1026, {}* %251, {}* %.elt1063
  %ptrtoint747 = ptrtoint {}* %.in to i64
  %tag-only748 = and i64 %ptrtoint747, 7
  %test749 = icmp eq i64 %tag-only748, 1
  br i1 %test749, label %tag63, label %tag32

normal-dest755:                                   ; preds = %tag113
  %252 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %253 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %254 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %255 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint756 = ptrtoint {}* %95 to i64
  %entry-point-addr-uint757 = add i64 %ptrtoint756, 7
  %entry-point-addr758 = inttoptr i64 %entry-point-addr-uint757 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point759 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr758, align 8
  %256 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point759({}* %95, i64 5, {}* %252, {}* %253, {}* %.in1170, {}* %254, {}* %255)
          to label %normal-dest762 unwind label %cleanup-lpad

normal-dest762:                                   ; preds = %normal-dest755
  %.elt1172 = extractvalue { {}*, i64 } %256, 0
  %.elt1174 = extractvalue { {}*, i64 } %256, 1
  %cond1049 = icmp eq i64 %.elt1174, 0
  %257 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239508.2 = select i1 %cond1049, {}* %257, {}* %.elt1172
  br label %tag12

normal-dest773:                                   ; preds = %tag117
  %258 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %259 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %260 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %261 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 333), align 8
  %ptrtoint774 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint775 = add i64 %ptrtoint774, 7
  %entry-point-addr776 = inttoptr i64 %entry-point-addr-uint775 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point777 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr776, align 8
  %262 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point777({}* %99, i64 5, {}* %258, {}* %259, {}* %.in, {}* %260, {}* %261)
          to label %normal-dest780 unwind label %cleanup-lpad

normal-dest780:                                   ; preds = %normal-dest773
  %.elt1176 = extractvalue { {}*, i64 } %262, 0
  %.elt1178 = extractvalue { {}*, i64 } %262, 1
  %cond1050 = icmp eq i64 %.elt1178, 0
  %263 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239508.3 = select i1 %cond1050, {}* %263, {}* %.elt1176
  br label %tag12

normal-dest795:                                   ; preds = %tag122
  %.elt1113 = extractvalue { {}*, i64 } %100, 0
  %.elt1115 = extractvalue { {}*, i64 } %100, 1
  %cond1035 = icmp eq i64 %.elt1115, 0
  %264 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239434239435.0 = select i1 %cond1035, {}* %264, {}* %.elt1113
  %265 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 467), align 8
  %266 = invoke {}* @cc_safe_setfdefinition({}* %265)
          to label %normal-dest802 unwind label %cleanup-lpad

normal-dest802:                                   ; preds = %normal-dest795
  %ptrtoint804 = ptrtoint {}* %266 to i64
  %tag-only805 = and i64 %ptrtoint804, 7
  %test806 = icmp eq i64 %tag-only805, 1
  br i1 %test806, label %header-check-br803, label %tag72

header-check-br803:                               ; preds = %normal-dest802
  %irc-bit-cast807 = bitcast {}* %266 to i8*
  %gep808 = getelementptr inbounds i8, i8* %irc-bit-cast807, i64 -9
  %irc-bit-cast809 = bitcast i8* %gep808 to i64*
  %267 = load i64, i64* %irc-bit-cast809, align 8
  %.off1278 = add i64 %267, -913
  %268 = icmp ult i64 %.off1278, 85
  br i1 %268, label %tag167, label %header-check-br812

header-check-br812:                               ; preds = %header-check-br803
  %.off1279 = add i64 %267, -1001
  %269 = icmp ult i64 %.off1279, 5
  br i1 %269, label %maybe-more-tests820, label %tag72

maybe-more-tests820:                              ; preds = %header-check-br812
  %270 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %271 = invoke {}* @cc_safe_fdefinition({}* %270)
          to label %normal-dest361 unwind label %cleanup-lpad

normal-dest826:                                   ; preds = %tag126
  %272 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint827 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint828 = add i64 %ptrtoint827, 7
  %entry-point-addr829 = inttoptr i64 %entry-point-addr-uint828 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point830 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr829, align 8
  %273 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point830({}* %102, i64 2, {}* %.elt1090, {}* %272, {}* null, {}* null)
          to label %normal-dest833 unwind label %cleanup-lpad

normal-dest833:                                   ; preds = %normal-dest826
  %.elt1094 = extractvalue { {}*, i64 } %273, 0
  %.elt1096 = extractvalue { {}*, i64 } %273, 1
  %cond1031 = icmp eq i64 %.elt1096, 0
  %274 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239433.0 = select i1 %cond1031, {}* %274, {}* %.elt1094
  %275 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 628), align 16
  %276 = invoke {}* @cc_safe_fdefinition({}* %275)
          to label %normal-dest840 unwind label %cleanup-lpad

normal-dest840:                                   ; preds = %normal-dest833
  %277 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %278 = invoke {}* @cc_safe_fdefinition({}* %277)
          to label %normal-dest843 unwind label %cleanup-lpad

normal-dest843:                                   ; preds = %normal-dest840
  %279 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %ptrtoint844 = ptrtoint {}* %278 to i64
  %entry-point-addr-uint845 = add i64 %ptrtoint844, 7
  %entry-point-addr846 = inttoptr i64 %entry-point-addr-uint845 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point847 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr846, align 8
  %280 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point847({}* %278, i64 2, {}* %.elt1090, {}* %279, {}* null, {}* null)
          to label %normal-dest850 unwind label %cleanup-lpad

normal-dest850:                                   ; preds = %normal-dest843
  %.elt1098 = extractvalue { {}*, i64 } %280, 0
  %.elt1100 = extractvalue { {}*, i64 } %280, 1
  %cond1032 = icmp eq i64 %.elt1100, 0
  %281 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in1187 = select i1 %cond1032, {}* %281, {}* %.elt1098
  br i1 %test749, label %header-check-br857, label %tag176

header-check-br857:                               ; preds = %normal-dest850
  %irc-bit-cast861 = bitcast {}* %.in to i8*
  %gep862 = getelementptr inbounds i8, i8* %irc-bit-cast861, i64 -9
  %irc-bit-cast863 = bitcast i8* %gep862 to i64*
  %282 = load i64, i64* %irc-bit-cast863, align 8
  %283 = icmp eq i64 %282, 1137
  br i1 %283, label %tag168, label %tag176

header-check-br881:                               ; preds = %tag95
  %irc-bit-cast885 = bitcast {}* %127 to i8*
  %gep886 = getelementptr inbounds i8, i8* %irc-bit-cast885, i64 -9
  %irc-bit-cast887 = bitcast i8* %gep886 to i64*
  %284 = load i64, i64* %irc-bit-cast887, align 8
  %285 = add i64 %284, -1309
  %286 = lshr i64 %285, 3
  %287 = shl i64 %285, 61
  %288 = or i64 %286, %287
  switch i64 %288, label %tag17 [
    i64 2, label %tag53
    i64 4, label %tag53
    i64 5, label %tag53
    i64 0, label %tag53
  ]

normal-dest889:                                   ; preds = %tag141
  %289 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %290 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %291 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %292 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint890 = ptrtoint {}* %106 to i64
  %entry-point-addr-uint891 = add i64 %ptrtoint890, 7
  %entry-point-addr892 = inttoptr i64 %entry-point-addr-uint891 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point893 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr892, align 8
  %293 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point893({}* %106, i64 5, {}* %289, {}* %290, {}* %index740.0, {}* %291, {}* %292)
          to label %normal-dest896 unwind label %cleanup-lpad

normal-dest896:                                   ; preds = %normal-dest889
  %.elt1206 = extractvalue { {}*, i64 } %293, 0
  %.elt1208 = extractvalue { {}*, i64 } %293, 1
  %cond1053 = icmp eq i64 %.elt1208, 0
  %294 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239725.3 = select i1 %cond1053, {}* %294, {}* %.elt1206
  br label %tag80

normal-dest952:                                   ; preds = %tag161
  %295 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %296 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %297 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %298 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 120), align 16
  %ptrtoint953 = ptrtoint {}* %114 to i64
  %entry-point-addr-uint954 = add i64 %ptrtoint953, 7
  %entry-point-addr955 = inttoptr i64 %entry-point-addr-uint954 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point956 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr955, align 8
  %299 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point956({}* %114, i64 5, {}* %295, {}* %296, {}* %.in1187, {}* %297, {}* %298)
          to label %normal-dest959 unwind label %cleanup-lpad

normal-dest959:                                   ; preds = %normal-dest952
  %.elt1189 = extractvalue { {}*, i64 } %299, 0
  %.elt1191 = extractvalue { {}*, i64 } %299, 1
  %cond1039 = icmp eq i64 %.elt1191, 0
  %300 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239614.3 = select i1 %cond1039, {}* %300, {}* %.elt1189
  br label %tag122

normal-dest1004:                                  ; preds = %tag50
  %ptrtoint1005 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint1006 = add i64 %ptrtoint1005, 7
  %entry-point-addr1007 = inttoptr i64 %entry-point-addr-uint1006 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1008 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1007, align 8
  %301 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1008({}* %58, i64 2, {}* %.in1187, {}* %76, {}* null, {}* null)
          to label %normal-dest1011 unwind label %cleanup-lpad

normal-dest1011:                                  ; preds = %normal-dest1004
  %.elt1109 = extractvalue { {}*, i64 } %301, 0
  %.elt1111 = extractvalue { {}*, i64 } %301, 1
  %cond1034 = icmp eq i64 %.elt1111, 0
  %302 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239637.1 = select i1 %cond1034, {}* %302, {}* %.elt1109
  br label %tag5
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^578^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !103 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^578^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G239855.0 = phi {}* [ %18, %header-check-br ], [ %G239855.1, %normal-dest26 ], [ %G239855.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 642), align 16
  %ptrtoint43 = ptrtoint {}* %G239855.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G239855.0, i64 2, {}* %"closure->ND=STOER_DIAGNONAL_DAMEN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %maybe-more-tests21, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 642), align 16
  %"closure->ND=STOER_DIAGNONAL_DAMEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 20611, i64 578, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 641), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239855.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag4

normal-dest30:                                    ; preds = %maybe-more-tests21
  %ptrtoint31 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt101 = extractvalue { {}*, i64 } %30, 0
  %.elt103 = extractvalue { {}*, i64 } %30, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239855.2 = select i1 %cond82, {}* %31, {}* %.elt101
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 644), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->ND=STOER_DIAGNONAL_DAMEN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 647), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->ND=STOER_DIAGNONAL_DAMEN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 2328 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 642), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !104 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  %9 = call [0 x {}*]* @cc_multipleValuesArrayAddress()
  %10 = load i64, i64* %"remaining-nargs*", align 8
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %10)
  %11 = icmp ult i64 %nargs, 2
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %12
  unreachable

; <label>:13:                                     ; preds = %entry
  %14 = icmp eq i64 %nargs, 2
  br i1 %14, label %normal-dest, label %15

; <label>:15:                                     ; preds = %13
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc193 unwind label %cleanup-lpad.loopexit.split-lp

.noexc193:                                        ; preds = %15
  unreachable

tag1:                                             ; preds = %tag9
  %16 = icmp eq {}* %"%DOLIST-VAR.0207", %20
  %.val204 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239886.0 = select i1 %16, {}* %.val204, {}* %20
  %17 = icmp eq {}* %G239886.0, %20
  br i1 %17, label %tag3, label %tag12

tag3:                                             ; preds = %tag1
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit

tag9:                                             ; preds = %normal-dest130, %tag16, %normal-dest151, %tag33, %tag14
  %20 = phi {}* [ %27, %tag14 ], [ %.val203, %tag33 ], [ %78, %normal-dest151 ], [ %.val203, %tag16 ], [ %75, %normal-dest130 ]
  %ZEILEN.0 = phi {}* [ %ZEILEN.1208, %tag14 ], [ %ZEILEN.1208, %tag33 ], [ %ZEILEN.2, %normal-dest151 ], [ %ZEILEN.1208, %tag16 ], [ %ZEILEN.1208, %normal-dest130 ]
  br i1 %consp-test142, label %tag24, label %tag1

tag10:                                            ; preds = %tag14
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 204), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest71 unwind label %cleanup-lpad.loopexit

tag12:                                            ; preds = %tag1, %tag22.backedge, %normal-dest42
  %ZEILEN.1.lcssa = phi {}* [ %45, %normal-dest42 ], [ %ZEILEN.0, %tag22.backedge ], [ %ZEILEN.0, %tag1 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %23 = insertvalue { {}*, i64 } undef, {}* %ZEILEN.1.lcssa, 0
  %24 = insertvalue { {}*, i64 } %23, i64 1, 1
  ret { {}*, i64 } %24

tag13:                                            ; preds = %tag25
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest91 unwind label %cleanup-lpad.loopexit

tag14:                                            ; preds = %normal-dest109
  %.elt170 = extractvalue { {}*, i64 } %73, 0
  %.elt172 = extractvalue { {}*, i64 } %73, 1
  %cond158 = icmp eq i64 %.elt172, 0
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239911.1 = select i1 %cond158, {}* %27, {}* %.elt170
  %28 = icmp eq {}* %G239911.1, %27
  br i1 %28, label %tag9, label %tag10

tag16:                                            ; preds = %mvn-final83
  %29 = icmp eq {}* %D2239834.0, %farg1
  br i1 %29, label %tag33, label %tag9

tag20:                                            ; preds = %normal-dest130
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit

tag21:                                            ; preds = %normal-dest98, %tag30
  %FEINDZEILE.0 = phi {}* [ %43, %tag30 ], [ %FEINDZEILE.1, %normal-dest98 ]
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 639), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit

tag24:                                            ; preds = %tag9
  %34 = add i64 %37, 5
  %35 = inttoptr i64 %34 to {}**
  %36 = load {}*, {}** %35, align 8
  br label %tag22.backedge

tag25:                                            ; preds = %tag25.lr.ph, %tag22.backedge
  %.val201 = phi {}* [ %50, %tag25.lr.ph ], [ %58, %tag22.backedge ]
  %ZEILEN.1208 = phi {}* [ %45, %tag25.lr.ph ], [ %ZEILEN.0, %tag22.backedge ]
  %"%DOLIST-VAR.0207" = phi {}* [ %"%DOLIST-VAR.1", %tag25.lr.ph ], [ %"%DOLIST-VAR.0.be", %tag22.backedge ]
  %37 = ptrtoint {}* %"%DOLIST-VAR.0207" to i64
  %tag-only141164 = and i64 %37, 7
  %consp-test142 = icmp eq i64 %tag-only141164, 3
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239939.0 = select i1 %consp-test142, {}* %.val, {}* %.val201
  %38 = icmp eq {}* %G239939.0, %.val201
  br i1 %38, label %tag13, label %tag30

tag27:                                            ; preds = %tag33
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit

tag30:                                            ; preds = %tag25
  %41 = add i64 %37, -3
  %42 = inttoptr i64 %41 to {}**
  %43 = load {}*, {}** %42, align 8
  br label %tag21

tag33:                                            ; preds = %tag16, %mvn-final83
  %G239897.0 = phi {}* [ %G239838.0, %mvn-final83 ], [ %.val202, %tag16 ]
  %44 = icmp eq {}* %G239897.0, %.val203
  br i1 %44, label %tag9, label %tag27

cleanup-lpad.loopexit:                            ; preds = %tag3, %normal-dest49, %tag10, %normal-dest71, %tag13, %normal-dest91, %tag20, %normal-dest109, %tag21, %normal-dest123, %tag27, %normal-dest144
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest39, %12, %15
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %13
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %46 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest39 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest39:                                    ; preds = %normal-dest
  %48 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint = ptrtoint {}* %47 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %47, i64 1, {}* %48, {}* null, {}* null, {}* null)
          to label %normal-dest42 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest42:                                    ; preds = %normal-dest39
  %.elt = extractvalue { {}*, i64 } %49, 0
  %.elt163 = extractvalue { {}*, i64 } %49, 1
  %cond = icmp eq i64 %.elt163, 0
  %50 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %50, {}* %.elt
  %51 = icmp eq {}* %"%DOLIST-VAR.1", %50
  br i1 %51, label %tag12, label %tag25.lr.ph

tag25.lr.ph:                                      ; preds = %normal-dest42
  %gep = getelementptr inbounds [0 x {}*], [0 x {}*]* %9, i64 0, i64 1
  br label %tag25

normal-dest49:                                    ; preds = %tag3
  %52 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %53 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %54 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %55 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint50 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint51 = add i64 %ptrtoint50, 7
  %entry-point-addr52 = inttoptr i64 %entry-point-addr-uint51 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point53 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr52, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point53({}* %19, i64 5, {}* %52, {}* %53, {}* %"%DOLIST-VAR.0207", {}* %54, {}* %55)
          to label %normal-dest56 unwind label %cleanup-lpad.loopexit

normal-dest56:                                    ; preds = %normal-dest49
  %.elt183 = extractvalue { {}*, i64 } %56, 0
  %.elt185 = extractvalue { {}*, i64 } %56, 1
  %cond160 = icmp eq i64 %.elt185, 0
  %57 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %"%DOLIST-VAR.2" = select i1 %cond160, {}* %57, {}* %.elt183
  br label %tag22.backedge

tag22.backedge:                                   ; preds = %normal-dest56, %tag24
  %58 = phi {}* [ %20, %tag24 ], [ %57, %normal-dest56 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %36, %tag24 ], [ %"%DOLIST-VAR.2", %normal-dest56 ]
  %59 = icmp eq {}* %"%DOLIST-VAR.0.be", %58
  br i1 %59, label %tag12, label %tag25

normal-dest71:                                    ; preds = %tag10
  %ptrtoint72 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint73 = add i64 %ptrtoint72, 7
  %entry-point-addr74 = inttoptr i64 %entry-point-addr-uint73 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point75 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr74, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point75({}* %22, i64 2, {}* %FEINDZEILE.0, {}* %farg0, {}* null, {}* null)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit

normal-dest78:                                    ; preds = %normal-dest71
  %.elt174 = extractvalue { {}*, i64 } %60, 0
  %.elt176 = extractvalue { {}*, i64 } %60, 1
  switch i64 %.elt176, label %mvn2- [
    i64 0, label %mvn0-81
    i64 1, label %mvn1-82
  ]

mvn0-81:                                          ; preds = %normal-dest78
  %61 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final83

mvn1-82:                                          ; preds = %normal-dest78
  %62 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final83

mvn2-:                                            ; preds = %normal-dest78
  %63 = load {}*, {}** %gep, align 8
  %.val203.pre = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  br label %mvn-final83

mvn-final83:                                      ; preds = %mvn2-, %mvn1-82, %mvn0-81
  %.val203 = phi {}* [ %.val203.pre, %mvn2- ], [ %62, %mvn1-82 ], [ %61, %mvn0-81 ]
  %D1239833.0 = phi {}* [ %.elt174, %mvn2- ], [ %.elt174, %mvn1-82 ], [ %61, %mvn0-81 ]
  %D2239834.0 = phi {}* [ %63, %mvn2- ], [ %62, %mvn1-82 ], [ %61, %mvn0-81 ]
  %64 = icmp eq {}* %D1239833.0, %farg1
  %.val202 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239838.0 = select i1 %64, {}* %.val202, {}* %.val203
  %65 = icmp eq {}* %G239838.0, %.val203
  br i1 %65, label %tag16, label %tag33

normal-dest91:                                    ; preds = %tag13
  %66 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %67 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %68 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %69 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint92 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %26, i64 5, {}* %66, {}* %67, {}* %"%DOLIST-VAR.0207", {}* %68, {}* %69)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit

normal-dest98:                                    ; preds = %normal-dest91
  %.elt187 = extractvalue { {}*, i64 } %70, 0
  %.elt189 = extractvalue { {}*, i64 } %70, 1
  %cond161 = icmp eq i64 %.elt189, 0
  %71 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %FEINDZEILE.1 = select i1 %cond161, {}* %71, {}* %.elt187
  br label %tag21

normal-dest109:                                   ; preds = %tag20
  %72 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint110 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint111 = add i64 %ptrtoint110, 7
  %entry-point-addr112 = inttoptr i64 %entry-point-addr-uint111 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point113 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr112, align 8
  %73 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point113({}* %31, i64 2, {}* %FEINDZEILE.0, {}* %72, {}* null, {}* null)
          to label %tag14 unwind label %cleanup-lpad.loopexit

normal-dest123:                                   ; preds = %tag21
  %ptrtoint124 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint125 = add i64 %ptrtoint124, 7
  %entry-point-addr126 = inttoptr i64 %entry-point-addr-uint125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr126, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point127({}* %33, i64 2, {}* %FEINDZEILE.0, {}* %farg0, {}* null, {}* null)
          to label %normal-dest130 unwind label %cleanup-lpad.loopexit

normal-dest130:                                   ; preds = %normal-dest123
  %.elt166 = extractvalue { {}*, i64 } %74, 0
  %.elt168 = extractvalue { {}*, i64 } %74, 1
  %cond157 = icmp eq i64 %.elt168, 0
  %75 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239917.0 = select i1 %cond157, {}* %75, {}* %.elt166
  %76 = icmp eq {}* %G239917.0, %75
  br i1 %76, label %tag9, label %tag20

normal-dest144:                                   ; preds = %tag27
  %ptrtoint145 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint146 = add i64 %ptrtoint145, 7
  %entry-point-addr147 = inttoptr i64 %entry-point-addr-uint146 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point148 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr147, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point148({}* %40, i64 2, {}* %FEINDZEILE.0, {}* %ZEILEN.1208, {}* null, {}* null)
          to label %normal-dest151 unwind label %cleanup-lpad.loopexit

normal-dest151:                                   ; preds = %normal-dest144
  %.elt178 = extractvalue { {}*, i64 } %77, 0
  %.elt180 = extractvalue { {}*, i64 } %77, 1
  %cond159 = icmp eq i64 %.elt180, 0
  %78 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %ZEILEN.2 = select i1 %cond159, {}* %78, {}* %.elt178
  br label %tag9
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^595^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !105 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^595^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G239964.0 = phi {}* [ %18, %header-check-br ], [ %G239964.1, %normal-dest26 ], [ %G239964.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 652), align 16
  %ptrtoint29 = ptrtoint {}* %G239964.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G239964.0, i64 2, {}* %"closure->ND=ZEILEN_MIT_DAME_IN_SPALTE", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 652), align 16
  %"closure->ND=ZEILEN_MIT_DAME_IN_SPALTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 21139, i64 595, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 651), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239964.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 654), align 16
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->ND=ZEILEN_MIT_DAME_IN_SPALTE", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 657), align 8
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->ND=ZEILEN_MIT_DAME_IN_SPALTE", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 2380 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 652), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239964.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !106 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %16 [
    i64 2, label %req-bb
    i64 0, label %15
  ]

tag:                                              ; preds = %normal-dest9
  %9 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 168), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest10 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest9
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 649), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest42 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest54
  %.sink91 = phi { {}*, i64 } [ %39, %normal-dest54 ], [ %32, %normal-dest28 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink91

cleanup-lpad:                                     ; preds = %18, %15, %normal-dest54, %normal-dest47, %normal-dest44, %normal-dest42, %tag2, %normal-dest28, %normal-dest19, %normal-dest16, %normal-dest14, %normal-dest12, %normal-dest10, %tag, %req-bb
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %13

req-bb:                                           ; preds = %entry, %16
  %G239948.0.in = phi {}** [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), %16 ], [ getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), %entry ]
  %G239948.0 = load {}*, {}** %G239948.0.in, align 16
  %14 = invoke {}* @cc_makeCell()
          to label %normal-dest9 unwind label %cleanup-lpad

; <label>:15:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %15
  unreachable

; <label>:16:                                     ; preds = %entry
  %17 = icmp ugt i64 %nargs, 2
  br i1 %17, label %18, label %req-bb

; <label>:18:                                     ; preds = %16
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc92 unwind label %cleanup-lpad

.noexc92:                                         ; preds = %18
  unreachable

normal-dest9:                                     ; preds = %req-bb
  call void @cc_writeCell({}* %14, {}* %farg0)
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %20 = icmp eq {}* %G239948.0, %19
  %ausser_zeile.0 = select i1 %20, {}* %19, {}* %farg1
  %21 = icmp eq {}* %ausser_zeile.0, %19
  br i1 %21, label %tag2, label %tag

normal-dest10:                                    ; preds = %tag
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 649), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest10
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 307), align 8
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %24, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.4", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 21139, i64 595, i64 0, i64 1, {}* %14)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest12
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest14
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint = ptrtoint {}* %26 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %26, i64 1, {}* %27, {}* null, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt71 = extractvalue { {}*, i64 } %28, 1
  %cond67 = icmp eq i64 %.elt71, 0
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240014.0 = select i1 %cond67, {}* %29, {}* %.elt
  %ptrtoint22 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %23, i64 2, {}* %"closure->LAMBDA", {}* %G240014.0, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest19
  %.elt73 = extractvalue { {}*, i64 } %30, 0
  %.elt75 = extractvalue { {}*, i64 } %30, 1
  %cond68 = icmp eq i64 %.elt75, 0
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240011.0 = select i1 %cond68, {}* %31, {}* %.elt73
  %ptrtoint34 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %10, i64 2, {}* %ausser_zeile.0, {}* %G240011.0, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 307), align 8
  %"closure->LAMBDA45" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %33, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.5", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.5^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 21139, i64 595, i64 0, i64 1, {}* %14)
          to label %normal-dest44 unwind label %cleanup-lpad

normal-dest44:                                    ; preds = %normal-dest42
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 104), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest47:                                    ; preds = %normal-dest44
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  %ptrtoint48 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %35, i64 1, {}* %36, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt84 = extractvalue { {}*, i64 } %37, 0
  %.elt86 = extractvalue { {}*, i64 } %37, 1
  %cond69 = icmp eq i64 %.elt86, 0
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G239984.0 = select i1 %cond69, {}* %38, {}* %.elt84
  %ptrtoint60 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %12, i64 2, {}* %"closure->LAMBDA45", {}* %G239984.0, {}* null, {}* null)
          to label %tag4 unwind label %cleanup-lpad
}

declare {}* @cc_makeCell() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_writeCell({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.4"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !107 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to %0*)) #6
          to label %.noexc131 unwind label %cleanup-lpad

.noexc131:                                        ; preds = %10
  unreachable

tag1:                                             ; preds = %header-check-br52, %header-check-br52, %header-check-br52, %header-check-br52
  %11 = ptrtoint %"class.core::T_O"* %36 to i64
  %single-float-tag-only = and i64 %11, 7
  %12 = icmp eq i64 %single-float-tag-only, 6
  br i1 %12, label %tag17, label %tag14

tag12:                                            ; preds = %normal-dest31
  %13 = ptrtoint {}* %.val to i64
  br label %tag17

tag14:                                            ; preds = %tag1
  %fixnum-tag-only83121 = and i64 %11, 3
  %fixnump-test84 = icmp ne i64 %fixnum-tag-only83121, 0
  %test62 = icmp eq i64 %single-float-tag-only, 1
  %or.cond133 = and i1 %fixnump-test84, %test62
  br i1 %or.cond133, label %header-check-br59, label %tag17

tag17:                                            ; preds = %header-check-br59, %header-check-br52, %tag23, %tag1, %tag14, %normal-dest111, %tag12
  %return-value.sroa.7.0 = phi i64 [ %.elt127, %normal-dest111 ], [ 1, %tag12 ], [ 1, %tag14 ], [ 1, %tag1 ], [ 1, %tag23 ], [ 1, %header-check-br52 ], [ 1, %header-check-br59 ]
  %return-value.sroa.0.0 = phi i64 [ %52, %normal-dest111 ], [ %13, %tag12 ], [ %40, %tag14 ], [ %40, %tag1 ], [ %40, %tag23 ], [ %40, %header-check-br52 ], [ %40, %header-check-br59 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %15 = insertvalue { {}*, i64 } undef, {}* %14, 0
  %16 = insertvalue { {}*, i64 } %15, i64 %return-value.sroa.7.0, 1
  ret { {}*, i64 } %16

tag21:                                            ; preds = %header-check-br59, %header-check-br59, %header-check-br59, %header-check-br59
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 197), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest104 unwind label %cleanup-lpad

tag23:                                            ; preds = %normal-dest31
  %19 = ptrtoint {}* %.in to i64
  %single-float-tag-only113 = and i64 %19, 7
  %fixnum-tag-only43119 = and i64 %19, 3
  %fixnump-test44 = icmp ne i64 %fixnum-tag-only43119, 0
  %test55 = icmp eq i64 %single-float-tag-only113, 1
  %or.cond132 = and i1 %fixnump-test44, %test55
  br i1 %or.cond132, label %header-check-br52, label %tag17

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest104, %tag21, %normal-dest28, %normal-dest
  %20 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %20

normal-dest:                                      ; preds = %entry
  %21 = ptrtoint {}* %closure-ptr to i64
  %22 = and i64 %21, -8
  %23 = inttoptr i64 %22 to %1*
  %24 = getelementptr inbounds %1, %1* %23, i64 0, i32 4, i32 1, i64 0, i32 0
  %25 = bitcast %"class.core::T_O"** %24 to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !108
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint = ptrtoint {}* %28 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %28, i64 2, {}* %farg0, {}* %29, {}* null, {}* null)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest28
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt115 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt115, 0
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %31, {}* %.elt
  %32 = bitcast {}* %.in to i8*
  %33 = add i64 %26, -3
  %34 = inttoptr i64 %33 to %"class.gctools::smart_ptr"*
  %35 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %34, i64 0, i32 0
  %36 = load %"class.core::T_O"*, %"class.core::T_O"** %35, align 8, !tbaa !108
  %37 = bitcast %"class.core::T_O"* %36 to {}*
  %38 = icmp eq {}* %.in, %37
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G240029.0 = select i1 %38, {}* %.val, {}* %31
  %39 = icmp eq {}* %G240029.0, %31
  %40 = ptrtoint {}* %31 to i64
  br i1 %39, label %tag23, label %tag12

header-check-br52:                                ; preds = %tag23
  %gep57 = getelementptr inbounds i8, i8* %32, i64 -9
  %irc-bit-cast58 = bitcast i8* %gep57 to i64*
  %41 = load i64, i64* %irc-bit-cast58, align 8
  %42 = add i64 %41, -1309
  %43 = lshr i64 %42, 3
  %44 = shl i64 %42, 61
  %45 = or i64 %43, %44
  switch i64 %45, label %tag17 [
    i64 2, label %tag1
    i64 4, label %tag1
    i64 5, label %tag1
    i64 0, label %tag1
  ]

header-check-br59:                                ; preds = %tag14
  %gep64 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %36, i64 -9, i32 0
  %irc-bit-cast65 = bitcast i8* %gep64 to i64*
  %46 = load i64, i64* %irc-bit-cast65, align 8
  %47 = add i64 %46, -1309
  %48 = lshr i64 %47, 3
  %49 = shl i64 %47, 61
  %50 = or i64 %48, %49
  switch i64 %50, label %tag17 [
    i64 2, label %tag21
    i64 4, label %tag21
    i64 5, label %tag21
    i64 0, label %tag21
  ]

normal-dest104:                                   ; preds = %tag21
  %ptrtoint105 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint106 = add i64 %ptrtoint105, 7
  %entry-point-addr107 = inttoptr i64 %entry-point-addr-uint106 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point108 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr107, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point108({}* %18, i64 2, {}* nonnull %.in, {}* nonnull %37, {}* null, {}* null)
          to label %normal-dest111 unwind label %cleanup-lpad

normal-dest111:                                   ; preds = %normal-dest104
  %.elt125 = extractvalue { {}*, i64 } %51, 0
  %52 = ptrtoint {}* %.elt125 to i64
  %.elt127 = extractvalue { {}*, i64 } %51, 1
  br label %tag17
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.5"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !110 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.5^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.5^DESC" to %0*)) #6
          to label %.noexc131 unwind label %cleanup-lpad

.noexc131:                                        ; preds = %10
  unreachable

tag5:                                             ; preds = %tag9
  %fixnum-tag-only52121 = and i64 %11, 3
  %fixnump-test53 = icmp ne i64 %fixnum-tag-only52121, 0
  %test46 = icmp eq i64 %single-float-tag-only55, 1
  %or.cond = and i1 %fixnump-test53, %test46
  br i1 %or.cond, label %header-check-br43, label %tag15

tag9:                                             ; preds = %header-check-br63, %header-check-br63, %header-check-br63, %header-check-br63
  %11 = ptrtoint %"class.core::T_O"* %37 to i64
  %single-float-tag-only55 = and i64 %11, 7
  %12 = icmp eq i64 %single-float-tag-only55, 6
  br i1 %12, label %tag15, label %tag5

tag15:                                            ; preds = %header-check-br63, %header-check-br43, %tag19, %tag16, %tag9, %tag5, %normal-dest97, %tag17
  %return-value.sroa.7.0 = phi i64 [ %.elt127, %normal-dest97 ], [ 1, %tag17 ], [ 1, %tag5 ], [ 1, %tag9 ], [ 1, %tag16 ], [ 1, %tag19 ], [ 1, %header-check-br43 ], [ 1, %header-check-br63 ]
  %return-value.sroa.0.0 = phi i64 [ %53, %normal-dest97 ], [ %16, %tag17 ], [ %41, %tag5 ], [ %41, %tag9 ], [ %41, %tag16 ], [ %41, %tag19 ], [ %41, %header-check-br43 ], [ %41, %header-check-br63 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %14 = insertvalue { {}*, i64 } undef, {}* %13, 0
  %15 = insertvalue { {}*, i64 } %14, i64 %return-value.sroa.7.0, 1
  ret { {}*, i64 } %15

tag16:                                            ; preds = %tag19
  %fixnum-tag-only77119 = and i64 %17, 3
  %fixnump-test78 = icmp ne i64 %fixnum-tag-only77119, 0
  %test66 = icmp eq i64 %single-float-tag-only88, 1
  %or.cond132 = and i1 %fixnump-test78, %test66
  br i1 %or.cond132, label %header-check-br63, label %tag15

tag17:                                            ; preds = %normal-dest31
  %16 = ptrtoint {}* %.val to i64
  br label %tag15

tag19:                                            ; preds = %normal-dest31
  %17 = ptrtoint {}* %.in to i64
  %single-float-tag-only88 = and i64 %17, 7
  %18 = icmp eq i64 %single-float-tag-only88, 6
  br i1 %18, label %tag15, label %tag16

tag20:                                            ; preds = %header-check-br43, %header-check-br43, %header-check-br43, %header-check-br43
  %19 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 197), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest90 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest90, %tag20, %normal-dest28, %normal-dest
  %21 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %21

normal-dest:                                      ; preds = %entry
  %22 = ptrtoint {}* %closure-ptr to i64
  %23 = and i64 %22, -8
  %24 = inttoptr i64 %23 to %1*
  %25 = getelementptr inbounds %1, %1* %24, i64 0, i32 4, i32 1, i64 0, i32 0
  %26 = bitcast %"class.core::T_O"** %25 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !108
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint = ptrtoint {}* %29 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %29, i64 2, {}* %farg0, {}* %30, {}* null, {}* null)
          to label %normal-dest31 unwind label %cleanup-lpad

normal-dest31:                                    ; preds = %normal-dest28
  %.elt = extractvalue { {}*, i64 } %31, 0
  %.elt115 = extractvalue { {}*, i64 } %31, 1
  %cond = icmp eq i64 %.elt115, 0
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %.in = select i1 %cond, {}* %32, {}* %.elt
  %33 = bitcast {}* %.in to i8*
  %34 = add i64 %27, -3
  %35 = inttoptr i64 %34 to %"class.gctools::smart_ptr"*
  %36 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %35, i64 0, i32 0
  %37 = load %"class.core::T_O"*, %"class.core::T_O"** %36, align 8, !tbaa !108
  %38 = bitcast %"class.core::T_O"* %37 to {}*
  %39 = icmp eq {}* %.in, %38
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G239999.0 = select i1 %39, {}* %.val, {}* %32
  %40 = icmp eq {}* %G239999.0, %32
  %41 = ptrtoint {}* %32 to i64
  br i1 %40, label %tag19, label %tag17

header-check-br43:                                ; preds = %tag5
  %gep48 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %37, i64 -9, i32 0
  %irc-bit-cast49 = bitcast i8* %gep48 to i64*
  %42 = load i64, i64* %irc-bit-cast49, align 8
  %43 = add i64 %42, -1309
  %44 = lshr i64 %43, 3
  %45 = shl i64 %43, 61
  %46 = or i64 %44, %45
  switch i64 %46, label %tag15 [
    i64 2, label %tag20
    i64 4, label %tag20
    i64 5, label %tag20
    i64 0, label %tag20
  ]

header-check-br63:                                ; preds = %tag16
  %gep68 = getelementptr inbounds i8, i8* %33, i64 -9
  %irc-bit-cast69 = bitcast i8* %gep68 to i64*
  %47 = load i64, i64* %irc-bit-cast69, align 8
  %48 = add i64 %47, -1309
  %49 = lshr i64 %48, 3
  %50 = shl i64 %48, 61
  %51 = or i64 %49, %50
  switch i64 %51, label %tag15 [
    i64 2, label %tag9
    i64 4, label %tag9
    i64 5, label %tag9
    i64 0, label %tag9
  ]

normal-dest90:                                    ; preds = %tag20
  %ptrtoint91 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint92 = add i64 %ptrtoint91, 7
  %entry-point-addr93 = inttoptr i64 %entry-point-addr-uint92 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point94 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr93, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point94({}* %20, i64 2, {}* nonnull %.in, {}* nonnull %38, {}* null, {}* null)
          to label %normal-dest97 unwind label %cleanup-lpad

normal-dest97:                                    ; preds = %normal-dest90
  %.elt125 = extractvalue { {}*, i64 } %52, 0
  %53 = ptrtoint {}* %.elt125 to i64
  %.elt127 = extractvalue { {}*, i64 } %52, 1
  br label %tag15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^605^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !111 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^605^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G240067.0 = phi {}* [ %18, %header-check-br ], [ %G240067.1, %normal-dest17 ], [ %G240067.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 338), align 16
  %ptrtoint34 = ptrtoint {}* %G240067.0 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %G240067.0, i64 2, {}* %"closure->ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN", {}* %13, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest59, %normal-dest53, %normal-dest46, %normal-dest40, %tag2, %normal-dest21, %tag1, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 338), align 16
  %"closure->ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 21555, i64 605, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240067.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

normal-dest21:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 663), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240067.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag2

normal-dest40:                                    ; preds = %tag2
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest40
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 664), align 16
  %ptrtoint47 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint48 = add i64 %ptrtoint47, 7
  %entry-point-addr49 = inttoptr i64 %entry-point-addr-uint48 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point50 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr49, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point50({}* %30, i64 2, {}* %"closure->ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN", {}* %31, {}* null, {}* null)
          to label %normal-dest53 unwind label %cleanup-lpad

normal-dest53:                                    ; preds = %normal-dest46
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest53
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 665), align 8
  %ptrtoint60 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %34, i64 2, {}* %"closure->ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN", {}* %35, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad

normal-dest66:                                    ; preds = %normal-dest59
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 2420 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 338), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !112 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc48 unwind label %cleanup-lpad

.noexc48:                                         ; preds = %13
  unreachable

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest21, %normal-dest14, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %11
  %15 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 661), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 652), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %18 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %18, i64 2, {}* %farg1, {}* %farg0, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %19, 0
  %.elt36 = extractvalue { {}*, i64 } %19, 1
  %cond = icmp eq i64 %.elt36, 0
  %20 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240086.0 = select i1 %cond, {}* %20, {}* %.elt
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 642), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest10
  %ptrtoint15 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint16 = add i64 %ptrtoint15, 7
  %entry-point-addr17 = inttoptr i64 %entry-point-addr-uint16 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point18 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr17, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point18({}* %22, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest21:                                    ; preds = %normal-dest14
  %.elt38 = extractvalue { {}*, i64 } %23, 0
  %.elt40 = extractvalue { {}*, i64 } %23, 1
  %cond34 = icmp eq i64 %.elt40, 0
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240087.0 = select i1 %cond34, {}* %24, {}* %.elt38
  %ptrtoint27 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint28 = add i64 %ptrtoint27, 7
  %entry-point-addr29 = inttoptr i64 %entry-point-addr-uint28 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point30 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr29, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point30({}* %16, i64 2, {}* %G240086.0, {}* %G240087.0, {}* null, {}* null)
          to label %normal-dest33 unwind label %cleanup-lpad

normal-dest33:                                    ; preds = %normal-dest21
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %25
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^609^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !113 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^609^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest89, %normal-dest76, %header-check-br
  %G240119.0 = phi {}* [ %18, %header-check-br ], [ %G240119.1, %normal-dest76 ], [ %G240119.2, %normal-dest89 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 668), align 16
  %ptrtoint13 = ptrtoint {}* %G240119.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G240119.0, i64 2, {}* %"closure->ND=SUCHE_FEIND_ZEILEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest82 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest82, %tag4, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 668), align 16
  %"closure->ND=SUCHE_FEIND_ZEILEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 21722, i64 609, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 670), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND=SUCHE_FEIND_ZEILEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 673), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND=SUCHE_FEIND_ZEILEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 674), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 668), align 16
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 676), align 16
  %ptrtoint46 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %30, i64 3, {}* %31, {}* %32, {}* %33, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 2436 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 668), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off123 = add i64 %19, -1001
  %39 = icmp ult i64 %.off123, 5
  br i1 %39, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt118 = extractvalue { {}*, i64 } %42, 0
  %.elt120 = extractvalue { {}*, i64 } %42, 1
  %cond95 = icmp eq i64 %.elt120, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240119.1 = select i1 %cond95, {}* %43, {}* %.elt118
  br label %tag

normal-dest82:                                    ; preds = %tag4
  %44 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %45 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %46 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %47 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 667), align 8
  %ptrtoint83 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %14, i64 5, {}* %44, {}* %45, {}* %18, {}* %46, {}* %47)
          to label %normal-dest89 unwind label %cleanup-lpad

normal-dest89:                                    ; preds = %normal-dest82
  %.elt = extractvalue { {}*, i64 } %48, 0
  %.elt97 = extractvalue { {}*, i64 } %48, 1
  %cond = icmp eq i64 %.elt97, 0
  %49 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240119.2 = select i1 %cond, {}* %49, {}* %.elt
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !114 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 338), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 130), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %farg0, {}* %16, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %17, 0
  %.elt21 = extractvalue { {}*, i64 } %17, 1
  %cond = icmp eq i64 %.elt21, 0
  %18 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240139.0 = select i1 %cond, {}* %18, {}* %.elt
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 2, {}* %farg0, {}* %G240139.0, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %19
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^617^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !115 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^617^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G240162.0 = phi {}* [ %18, %header-check-br ], [ %G240162.1, %normal-dest63 ], [ %G240162.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 679), align 8
  %ptrtoint22 = ptrtoint {}* %G240162.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G240162.0, i64 2, {}* %"closure->ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests21, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 679), align 8
  %"closure->ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 22071, i64 617, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 681), align 8
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 682), align 16
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 2468 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 679), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %maybe-more-tests21
  %ptrtoint57 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240162.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag2

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %39 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %41 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 678), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240162.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !116 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 400), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 402), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %16 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %16, 0
  %.elt21 = extractvalue { {}*, i64 } %16, 1
  %cond = icmp eq i64 %.elt21, 0
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240181.0 = select i1 %cond, {}* %17, {}* %.elt
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %18 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 1, {}* %G240181.0, {}* null, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %18
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"n-queens-scheduling.lisp^620^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !117 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"n-queens-scheduling.lisp^620^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G240204.0 = phi {}* [ %18, %header-check-br ], [ %G240204.1, %normal-dest54 ], [ %G240204.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 685), align 8
  %ptrtoint13 = ptrtoint {}* %G240204.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G240204.0, i64 2, {}* %"closure->ND=SUCHE-START-DAMEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 685), align 8
  %"closure->ND=SUCHE-START-DAMEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 22176, i64 620, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 14), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 39), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 687), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->ND=SUCHE-START-DAMEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 44), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 688), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->ND=SUCHE-START-DAMEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 49), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2480 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 685), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %35 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %36 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 684), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240204.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag2

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 22), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240204.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !118 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc63 unwind label %cleanup-lpad

.noexc63:                                         ; preds = %10
  unreachable

tag3:                                             ; preds = %tag4, %normal-dest42, %tag9
  %11 = phi {}* [ %27, %tag9 ], [ %34, %normal-dest42 ], [ %27, %tag4 ]
  %G240225.0 = phi {}* [ %20, %tag9 ], [ %G240225.1, %normal-dest42 ], [ %27, %tag4 ]
  %12 = icmp eq {}* %G240225.0, %11
  %G240224.0 = select i1 %12, {}* %G240188.0, {}* %11
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint24 = add i64 %ptrtoint23, 7
  %entry-point-addr25 = inttoptr i64 %entry-point-addr-uint24 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point26 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr25, align 8
  %13 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point26({}* %23, i64 2, {}* %farg0, {}* %G240224.0, {}* null, {}* null)
          to label %normal-dest29 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest20
  %14 = icmp eq {}* %G240188.0, %27
  %.val = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 58), align 16
  %G240236.0 = select i1 %14, {}* %.val, {}* %27
  %15 = icmp eq {}* %G240236.0, %27
  br i1 %15, label %tag7, label %tag3

tag7:                                             ; preds = %tag4
  %16 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest35 unwind label %cleanup-lpad

tag9:                                             ; preds = %normal-dest20
  %18 = add i64 %28, 5
  %19 = inttoptr i64 %18 to {}**
  %20 = load {}*, {}** %19, align 8
  br label %tag3

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest35, %tag7, %tag3, %normal-dest17, %normal-dest15, %normal-dest
  %21 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %21

normal-dest:                                      ; preds = %entry
  %22 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest
  %24 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 668), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest15
  %ptrtoint = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest17
  %.elt = extractvalue { {}*, i64 } %26, 0
  %.elt50 = extractvalue { {}*, i64 } %26, 1
  %cond = icmp eq i64 %.elt50, 0
  %27 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240188.0 = select i1 %cond, {}* %27, {}* %.elt
  %28 = ptrtoint {}* %G240188.0 to i64
  %tag-only51 = and i64 %28, 7
  %consp-test = icmp eq i64 %tag-only51, 3
  br i1 %consp-test, label %tag9, label %tag4

normal-dest29:                                    ; preds = %tag3
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %13

normal-dest35:                                    ; preds = %tag7
  %29 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 26), align 16
  %30 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 28), align 16
  %31 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 32), align 16
  %32 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  %ptrtoint36 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint37 = add i64 %ptrtoint36, 7
  %entry-point-addr38 = inttoptr i64 %entry-point-addr-uint37 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point39 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr38, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point39({}* %17, i64 5, {}* %29, {}* %30, {}* %G240188.0, {}* %31, {}* %32)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest35
  %.elt60 = extractvalue { {}*, i64 } %33, 0
  %.elt62 = extractvalue { {}*, i64 } %33, 1
  %cond48 = icmp eq i64 %.elt62, 0
  %34 = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  %G240225.1 = select i1 %cond48, {}* %34, {}* %.elt60
  br label %tag3
}

; Function Attrs: uwtable
define internal void @RUN-ALL.6() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !119 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-*MAKE-SPECIAL", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CORE, i64 0, i64 0))
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 3), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 2, {}* %"CONTAB[3]*")
  %"CONTAB[1]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 1), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 0, {}* %"CONTAB[1]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-*ND_ANZAHL_DER_DAMEN*", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-COMMON-LISP-USER, i64 0, i64 0))
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 7), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 6, {}* %"CONTAB[7]*")
  %"CONTAB[5]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 5), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 4, {}* %"CONTAB[5]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TOP-LEVEL, i64 0, i64 0))
  %"CONTAB[9]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 9), align 8
  %"CONTAB[2]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 8, {}* %"CONTAB[9]*", {}* %"CONTAB[2]*1")
  tail call void @ltvc_make_nil({ i8*, i8*, i64 }* nonnull @constants-table, i64 10)
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^1^TOP-COMPILE-FILE", i8* getelementptr inbounds ([44 x i8], [44 x i8]* @"str-n-queens-scheduling.lisp^1^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-B=KONKATENIERE-NACH-ATOM", i64 0, i64 0))
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 12), align 16
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 11, {}* %"CONTAB[12]*", {}* %"CONTAB[6]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-Zeile_, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-FDEFINITION, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-COMMON-LISP, i64 0, i64 0))
  %"CONTAB[17]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 17), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 16, {}* %"CONTAB[17]*")
  %"CONTAB[15]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 15), align 8
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 14, {}* %"CONTAB[15]*", {}* %"CONTAB[16]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-FUNCTION, i64 0, i64 0))
  %"CONTAB[19]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 19), align 8
  %"CONTAB[16]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 18, {}* %"CONTAB[19]*", {}* %"CONTAB[16]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SYMBOL, i64 0, i64 0))
  %"CONTAB[21]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 21), align 8
  %"CONTAB[16]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 20, {}* %"CONTAB[21]*", {}* %"CONTAB[16]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SYMBOL-FUNCTION, i64 0, i64 0))
  %"CONTAB[23]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 23), align 8
  %"CONTAB[16]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 22, {}* %"CONTAB[23]*", {}* %"CONTAB[16]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ERROR, i64 0, i64 0))
  %"CONTAB[25]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 25), align 8
  %"CONTAB[16]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 24, {}* %"CONTAB[25]*", {}* %"CONTAB[16]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-TYPE-ERROR, i64 0, i64 0))
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 27), align 8
  %"CONTAB[16]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 26, {}* %"CONTAB[27]*", {}* %"CONTAB[16]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-DATUM, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KEYWORD, i64 0, i64 0))
  %"CONTAB[31]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 31), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 30, {}* %"CONTAB[31]*")
  %"CONTAB[29]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 29), align 8
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 28, {}* %"CONTAB[29]*", {}* %"CONTAB[30]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-EXPECTED-TYPE, i64 0, i64 0))
  %"CONTAB[33]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 33), align 8
  %"CONTAB[30]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 32, {}* %"CONTAB[33]*", {}* %"CONTAB[30]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-OR, i64 0, i64 0))
  %"CONTAB[36]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 36), align 16
  %"CONTAB[16]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 35, {}* %"CONTAB[36]*", {}* %"CONTAB[16]*9")
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 34, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 38, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-ND=ZEILE_AUS_INDEX", i64 0, i64 0))
  %"CONTAB[38]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 38), align 16
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 37, {}* %"CONTAB[38]*", {}* %"CONTAB[6]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SETF-LAMBDA-LIST, i64 0, i64 0))
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 40), align 16
  %"CONTAB[2]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 39, {}* %"CONTAB[40]*", {}* %"CONTAB[2]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 43, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-INDEX, i64 0, i64 0))
  %"CONTAB[43]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 43), align 8
  %"CONTAB[6]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 42, {}* %"CONTAB[43]*", {}* %"CONTAB[6]*12")
  %"CONTAB[42]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 41, i64 1, {}* %"CONTAB[42]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 45, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SET-SOURCE-INFO, i64 0, i64 0))
  %"CONTAB[45]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 45), align 8
  %"CONTAB[2]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 44, {}* %"CONTAB[45]*", {}* %"CONTAB[2]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-CURRENT-SOURCE-FILE, i64 0, i64 0))
  %"CONTAB[48]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 48), align 16
  %"CONTAB[2]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 47, {}* %"CONTAB[48]*", {}* %"CONTAB[2]*14")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 46, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 8068 to {}*), {}* inttoptr (i64 204 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 50, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-*CURRENT-FORM-LINENO*", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-COMPILER, i64 0, i64 0))
  %"CONTAB[52]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 52), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 51, {}* %"CONTAB[52]*")
  %"CONTAB[50]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 50), align 16
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 51), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 49, {}* %"CONTAB[50]*", {}* %"CONTAB[51]*")
  %"CONTAB[42]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 53, i64 1, {}* %"CONTAB[42]*15")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^40^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^40^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 55, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-ND_ABBILDUNGSHASHTABELLE, i64 0, i64 0))
  %"CONTAB[55]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 55), align 8
  %"CONTAB[6]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 54, {}* %"CONTAB[55]*", {}* %"CONTAB[6]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 57, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-BOUNDP, i64 0, i64 0))
  %"CONTAB[57]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 57), align 8
  %"CONTAB[16]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 56, {}* %"CONTAB[57]*", {}* %"CONTAB[16]*17")
  tail call void @ltvc_make_t({ i8*, i8*, i64 }* nonnull @constants-table, i64 58)
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^54^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^54^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 60, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-HASH-TABLE-P, i64 0, i64 0))
  %"CONTAB[60]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 60), align 16
  %"CONTAB[16]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 59, {}* %"CONTAB[60]*", {}* %"CONTAB[16]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 62, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-CLRHASH, i64 0, i64 0))
  %"CONTAB[62]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 62), align 16
  %"CONTAB[16]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 61, {}* %"CONTAB[62]*", {}* %"CONTAB[16]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 64, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-MAKE-HASH-TABLE, i64 0, i64 0))
  %"CONTAB[64]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 64), align 16
  %"CONTAB[16]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 63, {}* %"CONTAB[64]*", {}* %"CONTAB[16]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-TEST, i64 0, i64 0))
  %"CONTAB[66]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 66), align 16
  %"CONTAB[30]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 65, {}* %"CONTAB[66]*", {}* %"CONTAB[30]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-EQUAL, i64 0, i64 0))
  %"CONTAB[68]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 68), align 16
  %"CONTAB[16]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 67, {}* %"CONTAB[68]*", {}* %"CONTAB[16]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-SIZE, i64 0, i64 0))
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 70), align 16
  %"CONTAB[30]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 69, {}* %"CONTAB[70]*", {}* %"CONTAB[30]*23")
  %"CONTAB[35]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 71, i64 3, {}* %"CONTAB[35]*24", {}* %"CONTAB[20]*25", {}* %"CONTAB[18]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 73, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-ND=HASPTABELLEERZEUGEN/RUECKSETZEN", i64 0, i64 0))
  %"CONTAB[73]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 73), align 8
  %"CONTAB[6]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 72, {}* %"CONTAB[73]*", {}* %"CONTAB[6]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 76, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-ANZAHL, i64 0, i64 0))
  %"CONTAB[76]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 76), align 16
  %"CONTAB[6]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 75, {}* %"CONTAB[76]*", {}* %"CONTAB[6]*28")
  %"CONTAB[75]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 75), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 74, i64 1, {}* %"CONTAB[75]*")
  %"CONTAB[47]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 77, i64 4, {}* %"CONTAB[47]*29", {}* inttoptr (i64 8564 to {}*), {}* inttoptr (i64 224 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[75]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 75), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 78, i64 1, {}* %"CONTAB[75]*30")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^56^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^56^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 80, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-GETHASH, i64 0, i64 0))
  %"CONTAB[80]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 80), align 16
  %"CONTAB[16]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 79, {}* %"CONTAB[80]*", {}* %"CONTAB[16]*31")
  %"CONTAB[35]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 81, i64 3, {}* %"CONTAB[35]*32", {}* %"CONTAB[20]*33", {}* %"CONTAB[18]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 83, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-ND=DAME_AUS_INDEX_SCHNELL", i64 0, i64 0))
  %"CONTAB[83]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 83), align 8
  %"CONTAB[6]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 82, {}* %"CONTAB[83]*", {}* %"CONTAB[6]*35")
  %"CONTAB[42]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 84, i64 1, {}* %"CONTAB[42]*36")
  %"CONTAB[47]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 85, i64 4, {}* %"CONTAB[47]*37", {}* inttoptr (i64 9480 to {}*), {}* inttoptr (i64 248 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[42]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 86, i64 1, {}* %"CONTAB[42]*38")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^62^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^62^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind
declare void @ltvc_make_base_string({ i8*, i8*, i64 }*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_package({ i8*, i8*, i64 }*, i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_symbol({ i8*, i8*, i64 }*, i64, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_nil({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

declare void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @ltvc_make_list({ i8*, i8*, i64 }*, i64, i64, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_t({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @RUN-ALL.7() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !120 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 88, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str-HASH-TABLE-SETF-GETHASH, i64 0, i64 0))
  %"CONTAB[88]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 88), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 87, {}* %"CONTAB[88]*", {}* %"CONTAB[2]*")
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 89, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 91, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-ND=DAMEN-UND-INDEX-EINTRAGEN", i64 0, i64 0))
  %"CONTAB[91]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 91), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 90, {}* %"CONTAB[91]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 94, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-DAME, i64 0, i64 0))
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 94), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 93, {}* %"CONTAB[94]*", {}* %"CONTAB[6]*1")
  %"CONTAB[42]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %"CONTAB[93]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 93), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 92, i64 2, {}* %"CONTAB[42]*", {}* %"CONTAB[93]*")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 95, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 9836 to {}*), {}* inttoptr (i64 260 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[42]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  %"CONTAB[93]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 93), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 96, i64 2, {}* %"CONTAB[42]*2", {}* %"CONTAB[93]*3")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^65^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^65^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 97, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-dame_, i64 0, i64 0))
  %"CONTAB[35]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 98, i64 3, {}* %"CONTAB[35]*4", {}* %"CONTAB[20]*5", {}* %"CONTAB[18]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 100, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-ND=DAME_AUS_INDEX", i64 0, i64 0))
  %"CONTAB[100]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 100), align 16
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 99, {}* %"CONTAB[100]*", {}* %"CONTAB[6]*7")
  %"CONTAB[42]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 101, i64 1, {}* %"CONTAB[42]*8")
  %"CONTAB[47]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 102, i64 4, {}* %"CONTAB[47]*9", {}* inttoptr (i64 10272 to {}*), {}* inttoptr (i64 272 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[42]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 42), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 103, i64 1, {}* %"CONTAB[42]*10")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^68^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^68^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-YAS=ALLE", i64 0, i64 0))
  %"CONTAB[105]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 105), align 8
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 104, {}* %"CONTAB[105]*", {}* %"CONTAB[6]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 107, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-DAMEN, i64 0, i64 0))
  %"CONTAB[107]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 107), align 8
  %"CONTAB[6]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 106, {}* %"CONTAB[107]*", {}* %"CONTAB[6]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CONS, i64 0, i64 0))
  %"CONTAB[109]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 109), align 8
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 108, {}* %"CONTAB[109]*", {}* %"CONTAB[16]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 111, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-VECTOR, i64 0, i64 0))
  %"CONTAB[111]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 111), align 8
  %"CONTAB[16]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 110, {}* %"CONTAB[111]*", {}* %"CONTAB[16]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-NULL, i64 0, i64 0))
  %"CONTAB[113]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 113), align 8
  %"CONTAB[16]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 112, {}* %"CONTAB[113]*", {}* %"CONTAB[16]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 115, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-ETYPECASE-ERROR, i64 0, i64 0))
  %"CONTAB[115]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 115), align 8
  %"CONTAB[2]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 114, {}* %"CONTAB[115]*", {}* %"CONTAB[2]*15")
  %"CONTAB[108]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 110), align 16
  %"CONTAB[112]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 116, i64 3, {}* %"CONTAB[108]*", {}* %"CONTAB[110]*", {}* %"CONTAB[112]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-LIST, i64 0, i64 0))
  %"CONTAB[118]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 118), align 16
  %"CONTAB[16]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 117, {}* %"CONTAB[118]*", {}* %"CONTAB[16]*16")
  %"CONTAB[108]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[112]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 119, i64 2, {}* %"CONTAB[108]*17", {}* %"CONTAB[112]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 121, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FIXNUM, i64 0, i64 0))
  %"CONTAB[121]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 121), align 8
  %"CONTAB[16]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 120, {}* %"CONTAB[121]*", {}* %"CONTAB[16]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 123, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SINGLE-FLOAT, i64 0, i64 0))
  %"CONTAB[123]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 123), align 8
  %"CONTAB[16]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 122, {}* %"CONTAB[123]*", {}* %"CONTAB[16]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 125, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-DOUBLE-FLOAT, i64 0, i64 0))
  %"CONTAB[125]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 125), align 8
  %"CONTAB[16]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 124, {}* %"CONTAB[125]*", {}* %"CONTAB[16]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 127, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM, i64 0, i64 0))
  %"CONTAB[127]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 127), align 8
  %"CONTAB[2]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 126, {}* %"CONTAB[127]*", {}* %"CONTAB[2]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 129, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-+", i64 0, i64 0))
  %"CONTAB[129]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 129), align 8
  %"CONTAB[2]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 128, {}* %"CONTAB[129]*", {}* %"CONTAB[2]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 131, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-YAS=LESE_WERT", i64 0, i64 0))
  %"CONTAB[131]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 131), align 8
  %"CONTAB[6]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 130, {}* %"CONTAB[131]*", {}* %"CONTAB[6]*24")
  %"CONTAB[35]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 132, i64 3, {}* %"CONTAB[35]*25", {}* %"CONTAB[20]*26", {}* %"CONTAB[18]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 134, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-ND=ERZEUGE-RUECKVERZEIGERUNG", i64 0, i64 0))
  %"CONTAB[134]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 134), align 16
  %"CONTAB[6]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 133, {}* %"CONTAB[134]*", {}* %"CONTAB[6]*28")
  %"CONTAB[47]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 135, i64 4, {}* %"CONTAB[47]*29", {}* inttoptr (i64 10596 to {}*), {}* inttoptr (i64 284 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 137, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-ARRAY-RANK, i64 0, i64 0))
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 137), align 8
  %"CONTAB[16]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 136, {}* %"CONTAB[137]*", {}* %"CONTAB[16]*30")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^71^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^71^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[108]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[110]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 110), align 16
  %"CONTAB[112]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 138, i64 3, {}* %"CONTAB[108]*31", {}* %"CONTAB[110]*32", {}* %"CONTAB[112]*33")
  %"CONTAB[108]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[112]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 139, i64 2, {}* %"CONTAB[108]*34", {}* %"CONTAB[112]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 141, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-ZEILEN, i64 0, i64 0))
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 141), align 8
  %"CONTAB[6]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 140, {}* %"CONTAB[141]*", {}* %"CONTAB[6]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 143, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-YAS=SCHREIBE_WERT", i64 0, i64 0))
  %"CONTAB[143]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 143), align 8
  %"CONTAB[6]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 142, {}* %"CONTAB[143]*", {}* %"CONTAB[6]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 145, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-AKTUELLES_DISLIKE, i64 0, i64 0))
  %"CONTAB[145]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 145), align 8
  %"CONTAB[6]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 144, {}* %"CONTAB[145]*", {}* %"CONTAB[6]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 147, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-ARRAY-INDEX, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 149, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-EXT, i64 0, i64 0))
  %"CONTAB[149]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 149), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 148, {}* %"CONTAB[149]*")
  %"CONTAB[147]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 147), align 8
  %"CONTAB[148]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 148), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 146, {}* %"CONTAB[147]*", {}* %"CONTAB[148]*")
  %"CONTAB[108]*39" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[146]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 146), align 16
  %"CONTAB[112]*40" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 150, i64 3, {}* %"CONTAB[108]*39", {}* %"CONTAB[146]*", {}* %"CONTAB[112]*40")
  %"CONTAB[108]*41" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[146]*42" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 146), align 16
  %"CONTAB[112]*43" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 152, i64 3, {}* %"CONTAB[108]*41", {}* %"CONTAB[146]*42", {}* %"CONTAB[112]*43")
  %"CONTAB[146]*44" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 146), align 16
  %"CONTAB[152]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 152), align 16
  %"CONTAB[117]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 151, i64 3, {}* %"CONTAB[146]*44", {}* %"CONTAB[152]*", {}* %"CONTAB[117]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 154, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str-MAKE-SIMPLE-MDARRAY-T, i64 0, i64 0))
  %"CONTAB[154]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 154), align 16
  %"CONTAB[2]*45" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 153, {}* %"CONTAB[154]*", {}* %"CONTAB[2]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 156, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-MAKE-SIMPLE-VECTOR-T, i64 0, i64 0))
  %"CONTAB[156]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 156), align 16
  %"CONTAB[2]*46" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 155, {}* %"CONTAB[156]*", {}* %"CONTAB[2]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 158, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-INFORMANT, i64 0, i64 0))
  %"CONTAB[158]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 158), align 16
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 157, {}* %"CONTAB[158]*", {}* %"CONTAB[30]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 160, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-EINGABE, i64 0, i64 0))
  %"CONTAB[160]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 160), align 16
  %"CONTAB[6]*47" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 159, {}* %"CONTAB[160]*", {}* %"CONTAB[6]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 162, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-AKTUELLE_FEINDE, i64 0, i64 0))
  %"CONTAB[162]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 162), align 16
  %"CONTAB[6]*48" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 161, {}* %"CONTAB[162]*", {}* %"CONTAB[6]*48")
  %"CONTAB[108]*49" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[146]*50" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 146), align 16
  %"CONTAB[112]*51" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 163, i64 3, {}* %"CONTAB[108]*49", {}* %"CONTAB[146]*50", {}* %"CONTAB[112]*51")
  %"CONTAB[108]*52" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[146]*53" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 146), align 16
  %"CONTAB[112]*54" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 165, i64 3, {}* %"CONTAB[108]*52", {}* %"CONTAB[146]*53", {}* %"CONTAB[112]*54")
  %"CONTAB[146]*55" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 146), align 16
  %"CONTAB[165]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 165), align 8
  %"CONTAB[117]*56" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 117), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 164, i64 3, {}* %"CONTAB[146]*55", {}* %"CONTAB[165]*", {}* %"CONTAB[117]*56")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 167, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-ALLE_ANDEREN_ZEILEN, i64 0, i64 0))
  %"CONTAB[167]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 167), align 8
  %"CONTAB[6]*57" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 166, {}* %"CONTAB[167]*", {}* %"CONTAB[6]*57")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 169, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-REMOVE, i64 0, i64 0))
  %"CONTAB[169]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 169), align 8
  %"CONTAB[16]*58" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 168, {}* %"CONTAB[169]*", {}* %"CONTAB[16]*58")
  %"CONTAB[35]*59" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*60" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*61" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 170, i64 3, {}* %"CONTAB[35]*59", {}* %"CONTAB[20]*60", {}* %"CONTAB[18]*61")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 172, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"str-ND=VORZUORDNUNG-STARTEN", i64 0, i64 0))
  %"CONTAB[172]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 172), align 16
  %"CONTAB[6]*62" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 171, {}* %"CONTAB[172]*", {}* %"CONTAB[6]*62")
  %"CONTAB[47]*63" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 173, i64 4, {}* %"CONTAB[47]*63", {}* inttoptr (i64 11420 to {}*), {}* inttoptr (i64 304 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 175, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str->=", i64 0, i64 0))
  %"CONTAB[175]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 175), align 8
  %"CONTAB[16]*64" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 174, {}* %"CONTAB[175]*", {}* %"CONTAB[16]*64")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.8() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !121 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.6)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.7)
  ret void
}

declare void @cc_invoke_sub_run_all_function(void ()*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.9() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !122 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 177, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-<=", i64 0, i64 0))
  %"CONTAB[177]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 177), align 8
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 176, {}* %"CONTAB[177]*", {}* %"CONTAB[16]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^76^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^76^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[106]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 106), align 16
  %"CONTAB[140]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 140), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 178, i64 2, {}* %"CONTAB[106]*", {}* %"CONTAB[140]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 180, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"str-YAS=LOESCHE_ALLE_KINDER", i64 0, i64 0))
  %"CONTAB[180]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 180), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 179, {}* %"CONTAB[180]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 182, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-YAS=NEUE_INSTANZ", i64 0, i64 0))
  %"CONTAB[182]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 182), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 181, {}* %"CONTAB[182]*", {}* %"CONTAB[6]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 184, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-<", i64 0, i64 0))
  %"CONTAB[184]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 184), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 183, {}* %"CONTAB[184]*", {}* %"CONTAB[2]*")
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 185, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 187, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-ND=OBJEKTE-ERZEUGEN", i64 0, i64 0))
  %"CONTAB[187]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 187), align 8
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 186, {}* %"CONTAB[187]*", {}* %"CONTAB[6]*2")
  %"CONTAB[75]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 75), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 188, i64 1, {}* %"CONTAB[75]*")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 189, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 15240 to {}*), {}* inttoptr (i64 392 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[75]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 75), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 190, i64 1, {}* %"CONTAB[75]*3")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^98^TOP-COMPILE-FILE", i8* getelementptr inbounds ([45 x i8], [45 x i8]* @"str-n-queens-scheduling.lisp^98^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 192, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-IHRE_DAME, i64 0, i64 0))
  %"CONTAB[192]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 192), align 16
  %"CONTAB[6]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 191, {}* %"CONTAB[192]*", {}* %"CONTAB[6]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 194, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-EQ-INCOMPARABLE, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 196, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-CLASP-CLEAVIR, i64 0, i64 0))
  %"CONTAB[196]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 196), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 195, {}* %"CONTAB[196]*")
  %"CONTAB[194]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 194), align 16
  %"CONTAB[195]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 195), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 193, {}* %"CONTAB[194]*", {}* %"CONTAB[195]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 198, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-EQL-UNDERLYING, i64 0, i64 0))
  %"CONTAB[198]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 198), align 16
  %"CONTAB[2]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 197, {}* %"CONTAB[198]*", {}* %"CONTAB[2]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 200, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-ABS, i64 0, i64 0))
  %"CONTAB[200]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 200), align 16
  %"CONTAB[16]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 199, {}* %"CONTAB[200]*", {}* %"CONTAB[16]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 202, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TWO-ARG--, i64 0, i64 0))
  %"CONTAB[202]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 202), align 16
  %"CONTAB[2]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 201, {}* %"CONTAB[202]*", {}* %"CONTAB[2]*7")
  %"CONTAB[35]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 203, i64 3, {}* %"CONTAB[35]*8", {}* %"CONTAB[20]*9", {}* %"CONTAB[18]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 205, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str-ND=ERZEUGE_STOER_DAMEN_VALUES", i64 0, i64 0))
  %"CONTAB[205]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 205), align 8
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 204, {}* %"CONTAB[205]*", {}* %"CONTAB[6]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 208, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-STOERZEILE, i64 0, i64 0))
  %"CONTAB[208]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 208), align 16
  %"CONTAB[6]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 207, {}* %"CONTAB[208]*", {}* %"CONTAB[6]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 210, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-MEINE_ZEILE, i64 0, i64 0))
  %"CONTAB[210]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 210), align 16
  %"CONTAB[6]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 209, {}* %"CONTAB[210]*", {}* %"CONTAB[6]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 212, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-&OPTIONAL", i64 0, i64 0))
  %"CONTAB[212]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 212), align 16
  %"CONTAB[16]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 211, {}* %"CONTAB[212]*", {}* %"CONTAB[16]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 215, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-STOERDAME, i64 0, i64 0))
  %"CONTAB[215]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 215), align 8
  %"CONTAB[6]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 214, {}* %"CONTAB[215]*", {}* %"CONTAB[6]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 218, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-$?", i64 0, i64 0))
  %"CONTAB[218]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 218), align 16
  %"CONTAB[6]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 217, {}* %"CONTAB[218]*", {}* %"CONTAB[6]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 221, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-QUOTE, i64 0, i64 0))
  %"CONTAB[221]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 221), align 8
  %"CONTAB[16]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 220, {}* %"CONTAB[221]*", {}* %"CONTAB[16]*17")
  %"CONTAB[220]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 220), align 16
  %"CONTAB[191]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 219, i64 2, {}* %"CONTAB[220]*", {}* %"CONTAB[191]*")
  %"CONTAB[217]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 217), align 8
  %"CONTAB[207]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 207), align 8
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 219), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 216, i64 3, {}* %"CONTAB[217]*", {}* %"CONTAB[207]*", {}* %"CONTAB[219]*")
  %"CONTAB[214]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 214), align 16
  %"CONTAB[216]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 216), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 213, i64 2, {}* %"CONTAB[214]*", {}* %"CONTAB[216]*")
  %"CONTAB[207]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 207), align 8
  %"CONTAB[209]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 209), align 8
  %"CONTAB[211]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[213]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 213), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 206, i64 4, {}* %"CONTAB[207]*18", {}* %"CONTAB[209]*", {}* %"CONTAB[211]*", {}* %"CONTAB[213]*")
  %"CONTAB[47]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 222, i64 4, {}* %"CONTAB[47]*19", {}* inttoptr (i64 20464 to {}*), {}* inttoptr (i64 564 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 224, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-NUMBER, i64 0, i64 0))
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 224), align 16
  %"CONTAB[16]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 223, {}* %"CONTAB[224]*", {}* %"CONTAB[16]*20")
  %"CONTAB[220]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 220), align 16
  %"CONTAB[191]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 191), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 228, i64 2, {}* %"CONTAB[220]*21", {}* %"CONTAB[191]*22")
  %"CONTAB[217]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 217), align 8
  %"CONTAB[207]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 207), align 8
  %"CONTAB[228]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 228), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 227, i64 3, {}* %"CONTAB[217]*23", {}* %"CONTAB[207]*24", {}* %"CONTAB[228]*")
  %"CONTAB[214]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 214), align 16
  %"CONTAB[227]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 227), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 226, i64 2, {}* %"CONTAB[214]*25", {}* %"CONTAB[227]*")
  %"CONTAB[207]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 207), align 8
  %"CONTAB[209]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 209), align 8
  %"CONTAB[211]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[226]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 226), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 225, i64 4, {}* %"CONTAB[207]*26", {}* %"CONTAB[209]*27", {}* %"CONTAB[211]*28", {}* %"CONTAB[226]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^117^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^117^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 229, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-Damentest, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 231, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-KLH=MULTIPLE-GC-SOFORT", i64 0, i64 0))
  %"CONTAB[231]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 231), align 8
  %"CONTAB[6]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 230, {}* %"CONTAB[231]*", {}* %"CONTAB[6]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 233, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ROOM, i64 0, i64 0))
  %"CONTAB[233]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 233), align 8
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 232, {}* %"CONTAB[233]*", {}* %"CONTAB[30]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 235, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-FORMAT-ERROR, i64 0, i64 0))
  %"CONTAB[235]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 235), align 8
  %"CONTAB[2]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 234, {}* %"CONTAB[235]*", {}* %"CONTAB[2]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 237, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-COMPLAINT, i64 0, i64 0))
  %"CONTAB[237]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 237), align 8
  %"CONTAB[30]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 236, {}* %"CONTAB[237]*", {}* %"CONTAB[30]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 238, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-Required argument missing", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 240, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-CONTROL-STRING, i64 0, i64 0))
  %"CONTAB[240]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 240), align 16
  %"CONTAB[30]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 239, {}* %"CONTAB[240]*", {}* %"CONTAB[30]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 241, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-Bei ~A Damen ;;;;;", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 243, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-OFFSET, i64 0, i64 0))
  %"CONTAB[243]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 243), align 8
  %"CONTAB[30]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 242, {}* %"CONTAB[243]*", {}* %"CONTAB[30]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 245, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-WRITE-STRING, i64 0, i64 0))
  %"CONTAB[245]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 245), align 8
  %"CONTAB[16]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 244, {}* %"CONTAB[245]*", {}* %"CONTAB[16]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 246, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"str-Bei ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 248, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PRINC, i64 0, i64 0))
  %"CONTAB[248]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 248), align 16
  %"CONTAB[16]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 247, {}* %"CONTAB[248]*", {}* %"CONTAB[16]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 249, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str- Damen ;;;;;", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 251, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-STRINGP, i64 0, i64 0))
  %"CONTAB[251]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 251), align 8
  %"CONTAB[16]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 250, {}* %"CONTAB[251]*", {}* %"CONTAB[16]*36")
  %"CONTAB[35]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*39" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 252, i64 3, {}* %"CONTAB[35]*37", {}* %"CONTAB[20]*38", {}* %"CONTAB[18]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 254, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str-MAKE-STRING-OUTPUT-STREAM-FROM-STRING, i64 0, i64 0))
  %"CONTAB[254]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 254), align 16
  %"CONTAB[2]*40" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 253, {}* %"CONTAB[254]*", {}* %"CONTAB[2]*40")
  %"CONTAB[35]*41" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*42" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*43" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 255, i64 3, {}* %"CONTAB[35]*41", {}* %"CONTAB[20]*42", {}* %"CONTAB[18]*43")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 257, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str-MAKE-STRING-OUTPUT-STREAM, i64 0, i64 0))
  %"CONTAB[257]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 257), align 8
  %"CONTAB[16]*44" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 256, {}* %"CONTAB[257]*", {}* %"CONTAB[16]*44")
  %"CONTAB[35]*45" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*46" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*47" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 258, i64 3, {}* %"CONTAB[35]*45", {}* %"CONTAB[20]*46", {}* %"CONTAB[18]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 260, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-GET-OUTPUT-STREAM-STRING, i64 0, i64 0))
  %"CONTAB[260]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 260), align 16
  %"CONTAB[16]*48" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 259, {}* %"CONTAB[260]*", {}* %"CONTAB[16]*48")
  %"CONTAB[35]*49" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*50" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*51" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 261, i64 3, {}* %"CONTAB[35]*49", {}* %"CONTAB[20]*50", {}* %"CONTAB[18]*51")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 263, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-*STANDARD-OUTPUT*", i64 0, i64 0))
  %"CONTAB[263]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 263), align 8
  %"CONTAB[16]*52" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 262, {}* %"CONTAB[263]*", {}* %"CONTAB[16]*52")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 265, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-PRO=STARTE_ALGORITHMUS", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.10() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !123 {
entry:
  %"CONTAB[265]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 265), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 264, {}* %"CONTAB[265]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 267, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str-PRO=CONSTRAINLISTE_HERSTELLEN", i64 0, i64 0))
  %"CONTAB[267]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 267), align 8
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 266, {}* %"CONTAB[267]*", {}* %"CONTAB[6]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 269, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PRINT, i64 0, i64 0))
  %"CONTAB[269]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 269), align 8
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 268, {}* %"CONTAB[269]*", {}* %"CONTAB[16]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 271, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-BACKQUOTE-APPEND, i64 0, i64 0))
  %"CONTAB[271]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 271), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 270, {}* %"CONTAB[271]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 273, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-VERSAGT, i64 0, i64 0))
  %"CONTAB[273]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 273), align 8
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 272, {}* %"CONTAB[273]*", {}* %"CONTAB[6]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 275, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-BEI, i64 0, i64 0))
  %"CONTAB[275]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 275), align 8
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 274, {}* %"CONTAB[275]*", {}* %"CONTAB[6]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 277, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-TERPRI, i64 0, i64 0))
  %"CONTAB[277]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 277), align 8
  %"CONTAB[16]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 276, {}* %"CONTAB[277]*", {}* %"CONTAB[16]*4")
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 278, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  %"CONTAB[35]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 279, i64 3, {}* %"CONTAB[35]*5", {}* %"CONTAB[20]*6", {}* %"CONTAB[18]*7")
  %"CONTAB[35]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 280, i64 3, {}* %"CONTAB[35]*8", {}* %"CONTAB[20]*9", {}* %"CONTAB[18]*10")
  %"CONTAB[35]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 281, i64 3, {}* %"CONTAB[35]*11", {}* %"CONTAB[20]*12", {}* %"CONTAB[18]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 282, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-~20A --> ~a~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 284, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-FORMAT-PRINC, i64 0, i64 0))
  %"CONTAB[284]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 284), align 16
  %"CONTAB[2]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 283, {}* %"CONTAB[284]*", {}* %"CONTAB[2]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 285, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str- --> ", i64 0, i64 0))
  %"CONTAB[35]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 286, i64 3, {}* %"CONTAB[35]*15", {}* %"CONTAB[20]*16", {}* %"CONTAB[18]*17")
  %"CONTAB[35]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 287, i64 3, {}* %"CONTAB[35]*18", {}* %"CONTAB[20]*19", {}* %"CONTAB[18]*20")
  %"CONTAB[35]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 288, i64 3, {}* %"CONTAB[35]*21", {}* %"CONTAB[20]*22", {}* %"CONTAB[18]*23")
  %"CONTAB[35]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 289, i64 3, {}* %"CONTAB[35]*24", {}* %"CONTAB[20]*25", {}* %"CONTAB[18]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 291, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-CWR=SPEICHERE_FALL", i64 0, i64 0))
  %"CONTAB[291]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 291), align 8
  %"CONTAB[6]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 290, {}* %"CONTAB[291]*", {}* %"CONTAB[6]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 293, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-B=KONKATENIERE-NACH-STRING", i64 0, i64 0))
  %"CONTAB[293]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 293), align 8
  %"CONTAB[6]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 292, {}* %"CONTAB[293]*", {}* %"CONTAB[6]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 294, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-Faelle;Damenfaelle-", i64 0, i64 0))
  %"CONTAB[35]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 295, i64 3, {}* %"CONTAB[35]*29", {}* %"CONTAB[20]*30", {}* %"CONTAB[18]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-ND=DAMENTEST", i64 0, i64 0))
  %"CONTAB[297]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 297), align 8
  %"CONTAB[6]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 296, {}* %"CONTAB[297]*", {}* %"CONTAB[6]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 300, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-DISTANZ, i64 0, i64 0))
  %"CONTAB[300]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 300), align 16
  %"CONTAB[6]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 299, {}* %"CONTAB[300]*", {}* %"CONTAB[6]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 303, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-RECHNER, i64 0, i64 0))
  %"CONTAB[303]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 303), align 8
  %"CONTAB[6]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 302, {}* %"CONTAB[303]*", {}* %"CONTAB[6]*34")
  %"CONTAB[302]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 302), align 16
  %"CONTAB[229]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 229), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 301, i64 2, {}* %"CONTAB[302]*", {}* %"CONTAB[229]*")
  %"CONTAB[75]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 75), align 8
  %"CONTAB[299]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 299), align 8
  %"CONTAB[211]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[301]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 301), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 298, i64 4, {}* %"CONTAB[75]*", {}* %"CONTAB[299]*", {}* %"CONTAB[211]*", {}* %"CONTAB[301]*")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 304, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 22452 to {}*), {}* inttoptr (i64 612 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[302]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 302), align 16
  %"CONTAB[229]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 229), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 306, i64 2, {}* %"CONTAB[302]*35", {}* %"CONTAB[229]*36")
  %"CONTAB[75]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 75), align 8
  %"CONTAB[299]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 299), align 8
  %"CONTAB[211]*39" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[306]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 306), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 305, i64 4, {}* %"CONTAB[75]*37", {}* %"CONTAB[299]*38", {}* %"CONTAB[211]*39", {}* %"CONTAB[306]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 308, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LAMBDA, i64 0, i64 0))
  %"CONTAB[308]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 308), align 16
  %"CONTAB[16]*40" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 307, {}* %"CONTAB[308]*", {}* %"CONTAB[16]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 311, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-STREAM, i64 0, i64 0))
  %"CONTAB[311]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 311), align 8
  %"CONTAB[16]*41" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 310, {}* %"CONTAB[311]*", {}* %"CONTAB[16]*41")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 314, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-233456, i64 0, i64 0))
  %"CONTAB[314]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 314), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 313, {}* %"CONTAB[314]*", {}* %"CONTAB[10]*")
  %"CONTAB[220]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 220), align 16
  %"CONTAB[234]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 234), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 316, i64 2, {}* %"CONTAB[220]*", {}* %"CONTAB[234]*")
  %"CONTAB[24]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %"CONTAB[316]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 316), align 16
  %"CONTAB[236]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 236), align 16
  %"CONTAB[238]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 238), align 16
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 239), align 8
  %"CONTAB[241]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 241), align 8
  %"CONTAB[242]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 242), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 315, i64 8, {}* %"CONTAB[24]*", {}* %"CONTAB[316]*", {}* %"CONTAB[236]*", {}* %"CONTAB[238]*", {}* %"CONTAB[239]*", {}* %"CONTAB[241]*", {}* %"CONTAB[242]*", {}* inttoptr (i64 20 to {}*))
  %"CONTAB[313]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 313), align 8
  %"CONTAB[315]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 315), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 312, i64 2, {}* %"CONTAB[313]*", {}* %"CONTAB[315]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 318, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str-&REST", i64 0, i64 0))
  %"CONTAB[318]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 318), align 16
  %"CONTAB[16]*42" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 317, {}* %"CONTAB[318]*", {}* %"CONTAB[16]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 320, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ARGS, i64 0, i64 0))
  %"CONTAB[320]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 320), align 16
  %"CONTAB[2]*43" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 319, {}* %"CONTAB[320]*", {}* %"CONTAB[2]*43")
  %"CONTAB[310]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 310), align 16
  %"CONTAB[211]*44" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[312]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 312), align 16
  %"CONTAB[317]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 317), align 8
  %"CONTAB[319]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 319), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 309, i64 5, {}* %"CONTAB[310]*", {}* %"CONTAB[211]*44", {}* %"CONTAB[312]*", {}* %"CONTAB[317]*", {}* %"CONTAB[319]*")
  %"CONTAB[310]*45" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 310), align 16
  %"CONTAB[211]*46" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[317]*47" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 317), align 8
  %"CONTAB[319]*48" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 319), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 321, i64 4, {}* %"CONTAB[310]*45", {}* %"CONTAB[211]*46", {}* %"CONTAB[317]*47", {}* %"CONTAB[319]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 325, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-233493, i64 0, i64 0))
  %"CONTAB[325]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 325), align 8
  %"CONTAB[10]*49" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 324, {}* %"CONTAB[325]*", {}* %"CONTAB[10]*49")
  %"CONTAB[220]*50" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 220), align 16
  %"CONTAB[234]*51" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 234), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 327, i64 2, {}* %"CONTAB[220]*50", {}* %"CONTAB[234]*51")
  %"CONTAB[24]*52" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %"CONTAB[327]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 327), align 8
  %"CONTAB[236]*53" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 236), align 16
  %"CONTAB[238]*54" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 238), align 16
  %"CONTAB[239]*55" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 239), align 8
  %"CONTAB[282]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 282), align 16
  %"CONTAB[242]*56" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 242), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 326, i64 8, {}* %"CONTAB[24]*52", {}* %"CONTAB[327]*", {}* %"CONTAB[236]*53", {}* %"CONTAB[238]*54", {}* %"CONTAB[239]*55", {}* %"CONTAB[282]*", {}* %"CONTAB[242]*56", {}* inttoptr (i64 12 to {}*))
  %"CONTAB[324]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 324), align 16
  %"CONTAB[326]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 326), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 323, i64 2, {}* %"CONTAB[324]*", {}* %"CONTAB[326]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 330, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-233494, i64 0, i64 0))
  %"CONTAB[330]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 330), align 16
  %"CONTAB[10]*57" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 329, {}* %"CONTAB[330]*", {}* %"CONTAB[10]*57")
  %"CONTAB[220]*58" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 220), align 16
  %"CONTAB[234]*59" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 234), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 332, i64 2, {}* %"CONTAB[220]*58", {}* %"CONTAB[234]*59")
  %"CONTAB[24]*60" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 24), align 16
  %"CONTAB[332]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 332), align 16
  %"CONTAB[236]*61" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 236), align 16
  %"CONTAB[238]*62" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 238), align 16
  %"CONTAB[239]*63" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 239), align 8
  %"CONTAB[282]*64" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 282), align 16
  %"CONTAB[242]*65" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 242), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 331, i64 8, {}* %"CONTAB[24]*60", {}* %"CONTAB[332]*", {}* %"CONTAB[236]*61", {}* %"CONTAB[238]*62", {}* %"CONTAB[239]*63", {}* %"CONTAB[282]*64", {}* %"CONTAB[242]*65", {}* inttoptr (i64 40 to {}*))
  %"CONTAB[329]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 329), align 8
  %"CONTAB[331]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 331), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 328, i64 2, {}* %"CONTAB[329]*", {}* %"CONTAB[331]*")
  %"CONTAB[310]*66" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 310), align 16
  %"CONTAB[211]*67" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[323]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 323), align 8
  %"CONTAB[328]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 328), align 16
  %"CONTAB[317]*68" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 317), align 8
  %"CONTAB[319]*69" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 319), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 322, i64 6, {}* %"CONTAB[310]*66", {}* %"CONTAB[211]*67", {}* %"CONTAB[323]*", {}* %"CONTAB[328]*", {}* %"CONTAB[317]*68", {}* %"CONTAB[319]*69")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^153^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^153^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 334, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-SIMPLE-VECTOR, i64 0, i64 0))
  %"CONTAB[334]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 334), align 16
  %"CONTAB[16]*70" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 333, {}* %"CONTAB[334]*", {}* %"CONTAB[16]*70")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 336, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str-TWO-ARG-<=", i64 0, i64 0))
  %"CONTAB[336]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 336), align 16
  %"CONTAB[2]*71" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 335, {}* %"CONTAB[336]*", {}* %"CONTAB[2]*71")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 337, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-Invalid index ~d for vector of length ~d", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 339, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN", i64 0, i64 0))
  %"CONTAB[339]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 339), align 8
  %"CONTAB[6]*72" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 338, {}* %"CONTAB[339]*", {}* %"CONTAB[6]*72")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 341, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-B=MENGEN-GLEICH-P", i64 0, i64 0))
  %"CONTAB[341]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 341), align 8
  %"CONTAB[6]*73" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 340, {}* %"CONTAB[341]*", {}* %"CONTAB[6]*73")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 343, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-BREAK, i64 0, i64 0))
  %"CONTAB[343]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 343), align 8
  %"CONTAB[16]*74" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 342, {}* %"CONTAB[343]*", {}* %"CONTAB[16]*74")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 344, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"str-zeile ~A spalte ~A gespeichert ~A errechnet ~A", i64 0, i64 0))
  %"CONTAB[35]*75" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*76" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*77" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 345, i64 3, {}* %"CONTAB[35]*75", {}* %"CONTAB[20]*76", {}* %"CONTAB[18]*77")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 347, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-ND=FEIND_KONSISTENZCHECK", i64 0, i64 0))
  %"CONTAB[347]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 347), align 8
  %"CONTAB[6]*78" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 346, {}* %"CONTAB[347]*", {}* %"CONTAB[6]*78")
  %"CONTAB[47]*79" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 348, i64 4, {}* %"CONTAB[47]*79", {}* inttoptr (i64 24784 to {}*), {}* inttoptr (i64 680 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^170^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^170^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 350, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FEHLER, i64 0, i64 0))
  %"CONTAB[350]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 350), align 16
  %"CONTAB[6]*80" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 349, {}* %"CONTAB[350]*", {}* %"CONTAB[6]*80")
  %"CONTAB[35]*81" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*82" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*83" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 351, i64 3, {}* %"CONTAB[35]*81", {}* %"CONTAB[20]*82", {}* %"CONTAB[18]*83")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 353, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"str-ND=ERGEBNIS-KONSISTENZCHECK", i64 0, i64 0))
  %"CONTAB[353]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 353), align 8
  %"CONTAB[6]*84" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 352, {}* %"CONTAB[353]*", {}* %"CONTAB[6]*84")
  %"CONTAB[47]*85" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 354, i64 4, {}* %"CONTAB[47]*85", {}* inttoptr (i64 26916 to {}*), {}* inttoptr (i64 736 to {}*), {}* inttoptr (i64 4 to {}*))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.11() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !124 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.9)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.10)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.12() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !125 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.8)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.11)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.13() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !126 {
entry:
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^184^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^184^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 356, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-ND_DEBUG, i64 0, i64 0))
  %"CONTAB[356]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 356), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 355, {}* %"CONTAB[356]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^192^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^192^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^193^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 358, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-ND=AKTUALISIERE_ALLE_DOMAINS", i64 0, i64 0))
  %"CONTAB[358]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 358), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 357, {}* %"CONTAB[358]*", {}* %"CONTAB[6]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 360, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-ND-ZEIGE_DOMAIN, i64 0, i64 0))
  %"CONTAB[360]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 360), align 16
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 359, {}* %"CONTAB[360]*", {}* %"CONTAB[6]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 362, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"str-ND=BERECHNE_DISLIKE_DER_ZEILEN", i64 0, i64 0))
  %"CONTAB[362]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 362), align 16
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 361, {}* %"CONTAB[362]*", {}* %"CONTAB[6]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 364, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-ND-ZEIGE_DISLIKE, i64 0, i64 0))
  %"CONTAB[364]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 364), align 16
  %"CONTAB[6]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 363, {}* %"CONTAB[364]*", {}* %"CONTAB[6]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 366, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-ND-ZEIGE_OMEGA, i64 0, i64 0))
  %"CONTAB[366]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 366), align 16
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 365, {}* %"CONTAB[366]*", {}* %"CONTAB[6]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 367, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-eine Iteration", i64 0, i64 0))
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 368, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 370, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str-ND=VOR_MINIMUM_IN_AGENDA_SUCHEN", i64 0, i64 0))
  %"CONTAB[370]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 370), align 16
  %"CONTAB[6]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 369, {}* %"CONTAB[370]*", {}* %"CONTAB[6]*6")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 371, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 28672 to {}*), {}* inttoptr (i64 780 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^193^TOP-COMPILE-FILE.3", i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"str-n-queens-scheduling.lisp^193^TOP-COMPILE-FILE.3", i64 0, i64 0))
  %"CONTAB[35]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 372, i64 3, {}* %"CONTAB[35]*7", {}* %"CONTAB[20]*8", {}* %"CONTAB[18]*9")
  %"CONTAB[47]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 373, i64 4, {}* %"CONTAB[47]*10", {}* inttoptr (i64 29776 to {}*), {}* inttoptr (i64 828 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^207^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^207^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 375, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-AKTUELLES_FEINDE, i64 0, i64 0))
  %"CONTAB[375]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 375), align 8
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 374, {}* %"CONTAB[375]*", {}* %"CONTAB[6]*11")
  %"CONTAB[35]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 376, i64 3, {}* %"CONTAB[35]*12", {}* %"CONTAB[20]*13", {}* %"CONTAB[18]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 378, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-ND-ZEIGE_FEINDE, i64 0, i64 0))
  %"CONTAB[378]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 378), align 16
  %"CONTAB[6]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 377, {}* %"CONTAB[378]*", {}* %"CONTAB[6]*15")
  %"CONTAB[47]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 379, i64 4, {}* %"CONTAB[47]*16", {}* inttoptr (i64 30368 to {}*), {}* inttoptr (i64 852 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^213^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^213^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 380, i64 3, {}* %"CONTAB[35]*17", {}* %"CONTAB[20]*18", {}* %"CONTAB[18]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 382, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-ND-ZEIGE_DAMEN, i64 0, i64 0))
  %"CONTAB[382]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 382), align 16
  %"CONTAB[6]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 381, {}* %"CONTAB[382]*", {}* %"CONTAB[6]*20")
  %"CONTAB[47]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 383, i64 4, {}* %"CONTAB[47]*21", {}* inttoptr (i64 30944 to {}*), {}* inttoptr (i64 876 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^219^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^219^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 385, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-ND=BERECHNE_OMEGA", i64 0, i64 0))
  %"CONTAB[385]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 385), align 8
  %"CONTAB[6]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 384, {}* %"CONTAB[385]*", {}* %"CONTAB[6]*22")
  %"CONTAB[35]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 386, i64 3, {}* %"CONTAB[35]*23", {}* %"CONTAB[20]*24", {}* %"CONTAB[18]*25")
  %"CONTAB[47]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 387, i64 4, {}* %"CONTAB[47]*26", {}* inttoptr (i64 31492 to {}*), {}* inttoptr (i64 900 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^225^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^225^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 389, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str-ND=BERECHNE_DISLIKE_EINER_ZEILE", i64 0, i64 0))
  %"CONTAB[389]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 389), align 8
  %"CONTAB[6]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 388, {}* %"CONTAB[389]*", {}* %"CONTAB[6]*27")
  %"CONTAB[35]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 390, i64 3, {}* %"CONTAB[35]*28", {}* %"CONTAB[20]*29", {}* %"CONTAB[18]*30")
  %"CONTAB[47]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 391, i64 4, {}* %"CONTAB[47]*31", {}* inttoptr (i64 31936 to {}*), {}* inttoptr (i64 920 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^230^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^230^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 392, i64 3, {}* %"CONTAB[35]*32", {}* %"CONTAB[20]*33", {}* %"CONTAB[18]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 394, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-ND=DRINGLICHKEIT_IJCAI", i64 0, i64 0))
  %"CONTAB[394]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 394), align 16
  %"CONTAB[6]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 393, {}* %"CONTAB[394]*", {}* %"CONTAB[6]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 397, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-PAAR, i64 0, i64 0))
  %"CONTAB[397]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 397), align 8
  %"CONTAB[6]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 396, {}* %"CONTAB[397]*", {}* %"CONTAB[6]*36")
  %"CONTAB[396]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 396), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 395, i64 1, {}* %"CONTAB[396]*")
  %"CONTAB[47]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 398, i64 4, {}* %"CONTAB[47]*37", {}* inttoptr (i64 32600 to {}*), {}* inttoptr (i64 944 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[396]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 396), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 399, i64 1, {}* %"CONTAB[396]*38")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^236^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^236^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 401, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-NEGATE, i64 0, i64 0))
  %"CONTAB[401]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 401), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 400, {}* %"CONTAB[401]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 403, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str-ND=LAENGE_DES_AKTUELLEN_DOMAINS", i64 0, i64 0))
  %"CONTAB[403]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 403), align 8
  %"CONTAB[6]*39" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 402, {}* %"CONTAB[403]*", {}* %"CONTAB[6]*39")
  %"CONTAB[35]*40" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*41" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*42" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 404, i64 3, {}* %"CONTAB[35]*40", {}* %"CONTAB[20]*41", {}* %"CONTAB[18]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 406, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"str-ND=DOMAIN-DRINGLICHKEIT", i64 0, i64 0))
  %"CONTAB[406]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 406), align 16
  %"CONTAB[6]*43" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 405, {}* %"CONTAB[406]*", {}* %"CONTAB[6]*43")
  %"CONTAB[396]*44" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 396), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 407, i64 1, {}* %"CONTAB[396]*44")
  %"CONTAB[47]*45" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 408, i64 4, {}* %"CONTAB[47]*45", {}* inttoptr (i64 32908 to {}*), {}* inttoptr (i64 956 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[396]*46" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 396), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 409, i64 1, {}* %"CONTAB[396]*46")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^239^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^239^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 411, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-LAENGE_DOMAIN, i64 0, i64 0))
  %"CONTAB[411]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 411), align 8
  %"CONTAB[6]*47" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 410, {}* %"CONTAB[411]*", {}* %"CONTAB[6]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 413, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-PROGRAMM, i64 0, i64 0))
  %"CONTAB[413]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 413), align 8
  %"CONTAB[6]*48" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 412, {}* %"CONTAB[413]*", {}* %"CONTAB[6]*48")
  %"CONTAB[35]*49" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*50" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*51" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 414, i64 3, {}* %"CONTAB[35]*49", {}* %"CONTAB[20]*50", {}* %"CONTAB[18]*51")
  %"CONTAB[47]*52" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 415, i64 4, {}* %"CONTAB[47]*52", {}* inttoptr (i64 33440 to {}*), {}* inttoptr (i64 980 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^245^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^245^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*53" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*54" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*55" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 416, i64 3, {}* %"CONTAB[35]*53", {}* %"CONTAB[20]*54", {}* %"CONTAB[18]*55")
  %"CONTAB[47]*56" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 417, i64 4, {}* %"CONTAB[47]*56", {}* inttoptr (i64 34388 to {}*), {}* inttoptr (i64 1004 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^251^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^251^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*57" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*58" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*59" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 418, i64 3, {}* %"CONTAB[35]*57", {}* %"CONTAB[20]*58", {}* %"CONTAB[18]*59")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 420, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str-ND=DAME_IM_DOMAIN_ENTHALTEN_P", i64 0, i64 0))
  %"CONTAB[420]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 420), align 16
  %"CONTAB[6]*60" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 419, {}* %"CONTAB[420]*", {}* %"CONTAB[6]*60")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 423, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ZEILE, i64 0, i64 0))
  %"CONTAB[423]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 423), align 8
  %"CONTAB[6]*61" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 422, {}* %"CONTAB[423]*", {}* %"CONTAB[6]*61")
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[93]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 93), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 421, i64 2, {}* %"CONTAB[422]*", {}* %"CONTAB[93]*")
  %"CONTAB[47]*62" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 424, i64 4, {}* %"CONTAB[47]*62", {}* inttoptr (i64 34592 to {}*), {}* inttoptr (i64 1016 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*63" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[93]*64" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 93), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 425, i64 2, {}* %"CONTAB[422]*63", {}* %"CONTAB[93]*64")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^254^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^254^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[108]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 110), align 16
  %"CONTAB[112]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 426, i64 3, {}* %"CONTAB[108]*", {}* %"CONTAB[110]*", {}* %"CONTAB[112]*")
  %"CONTAB[108]*65" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[112]*66" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 427, i64 2, {}* %"CONTAB[108]*65", {}* %"CONTAB[112]*66")
  %"CONTAB[35]*67" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*68" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*69" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 428, i64 3, {}* %"CONTAB[35]*67", {}* %"CONTAB[20]*68", {}* %"CONTAB[18]*69")
  %"CONTAB[422]*70" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 429, i64 1, {}* %"CONTAB[422]*70")
  %"CONTAB[47]*71" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 430, i64 4, {}* %"CONTAB[47]*71", {}* inttoptr (i64 35188 to {}*), {}* inttoptr (i64 1036 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*72" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 431, i64 1, {}* %"CONTAB[422]*72")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^259^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^259^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.14() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !127 {
entry:
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 432, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 434, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"str-ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL", i64 0, i64 0))
  %"CONTAB[434]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 434), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 433, {}* %"CONTAB[434]*", {}* %"CONTAB[6]*")
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 435, i64 1, {}* %"CONTAB[422]*")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 436, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 36576 to {}*), {}* inttoptr (i64 1088 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 437, i64 1, {}* %"CONTAB[422]*1")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^272^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^272^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[108]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 110), align 16
  %"CONTAB[112]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 438, i64 3, {}* %"CONTAB[108]*", {}* %"CONTAB[110]*", {}* %"CONTAB[112]*")
  %"CONTAB[108]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[112]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 439, i64 2, {}* %"CONTAB[108]*2", {}* %"CONTAB[112]*3")
  %"CONTAB[35]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 440, i64 3, {}* %"CONTAB[35]*4", {}* %"CONTAB[20]*5", {}* %"CONTAB[18]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 442, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-ND=AKTUELLES_DOMAIN_LEER_P", i64 0, i64 0))
  %"CONTAB[442]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 442), align 16
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 441, {}* %"CONTAB[442]*", {}* %"CONTAB[6]*7")
  %"CONTAB[422]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 443, i64 1, {}* %"CONTAB[422]*8")
  %"CONTAB[47]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 444, i64 4, {}* %"CONTAB[47]*9", {}* inttoptr (i64 36972 to {}*), {}* inttoptr (i64 1100 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 445, i64 1, {}* %"CONTAB[422]*10")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^275^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^275^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 447, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-=", i64 0, i64 0))
  %"CONTAB[447]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 447), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 446, {}* %"CONTAB[447]*", {}* %"CONTAB[2]*")
  %"CONTAB[35]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 448, i64 3, {}* %"CONTAB[35]*11", {}* %"CONTAB[20]*12", {}* %"CONTAB[18]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 450, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL", i64 0, i64 0))
  %"CONTAB[450]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 450), align 16
  %"CONTAB[6]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 449, {}* %"CONTAB[450]*", {}* %"CONTAB[6]*14")
  %"CONTAB[422]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 451, i64 1, {}* %"CONTAB[422]*15")
  %"CONTAB[47]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 452, i64 4, {}* %"CONTAB[47]*16", {}* inttoptr (i64 38216 to {}*), {}* inttoptr (i64 1148 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 453, i64 1, {}* %"CONTAB[422]*17")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^287^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^287^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 455, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-DM-TOO-FEW-ARGUMENTS, i64 0, i64 0))
  %"CONTAB[455]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 455), align 8
  %"CONTAB[2]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 454, {}* %"CONTAB[455]*", {}* %"CONTAB[2]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 457, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str-DM-TOO-MANY-ARGUMENTS, i64 0, i64 0))
  %"CONTAB[457]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 457), align 8
  %"CONTAB[2]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 456, {}* %"CONTAB[457]*", {}* %"CONTAB[2]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 459, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-GENSYM, i64 0, i64 0))
  %"CONTAB[459]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 459), align 8
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 458, {}* %"CONTAB[459]*", {}* %"CONTAB[16]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 460, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-DAMENINDEX-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 462, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-DOTIMES, i64 0, i64 0))
  %"CONTAB[462]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 462), align 16
  %"CONTAB[16]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 461, {}* %"CONTAB[462]*", {}* %"CONTAB[16]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 464, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LENGTH, i64 0, i64 0))
  %"CONTAB[464]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 464), align 16
  %"CONTAB[16]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 463, {}* %"CONTAB[464]*", {}* %"CONTAB[16]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 466, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-WHEN, i64 0, i64 0))
  %"CONTAB[466]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 466), align 16
  %"CONTAB[16]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 465, {}* %"CONTAB[466]*", {}* %"CONTAB[16]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 468, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-SVREF, i64 0, i64 0))
  %"CONTAB[468]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 468), align 16
  %"CONTAB[16]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 467, {}* %"CONTAB[468]*", {}* %"CONTAB[16]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 470, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-LET, i64 0, i64 0))
  %"CONTAB[470]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 470), align 16
  %"CONTAB[16]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 469, {}* %"CONTAB[470]*", {}* %"CONTAB[16]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 472, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-MACRO-FUNCTION, i64 0, i64 0))
  %"CONTAB[472]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 472), align 16
  %"CONTAB[16]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 471, {}* %"CONTAB[472]*", {}* %"CONTAB[16]*25")
  %"CONTAB[35]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 473, i64 3, {}* %"CONTAB[35]*26", {}* %"CONTAB[20]*27", {}* %"CONTAB[18]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 475, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"str-ND=MIT-DAMEN-MEINES-DOMAINS", i64 0, i64 0))
  %"CONTAB[475]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 475), align 8
  %"CONTAB[6]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 474, {}* %"CONTAB[475]*", {}* %"CONTAB[6]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 479, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-DAMENBEZEICHNER, i64 0, i64 0))
  %"CONTAB[479]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 479), align 8
  %"CONTAB[6]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 478, {}* %"CONTAB[479]*", {}* %"CONTAB[6]*30")
  %"CONTAB[478]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 478), align 16
  %"CONTAB[422]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 477, i64 2, {}* %"CONTAB[478]*", {}* %"CONTAB[422]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 481, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str-&BODY", i64 0, i64 0))
  %"CONTAB[481]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 481), align 8
  %"CONTAB[16]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 480, {}* %"CONTAB[481]*", {}* %"CONTAB[16]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 483, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-BODY, i64 0, i64 0))
  %"CONTAB[483]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 483), align 8
  %"CONTAB[6]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 482, {}* %"CONTAB[483]*", {}* %"CONTAB[6]*33")
  %"CONTAB[477]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 477), align 8
  %"CONTAB[480]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 480), align 16
  %"CONTAB[482]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 482), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 476, i64 3, {}* %"CONTAB[477]*", {}* %"CONTAB[480]*", {}* %"CONTAB[482]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 486, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-G236240, i64 0, i64 0))
  %"CONTAB[486]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 486), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 485, {}* %"CONTAB[486]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 488, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-G236239, i64 0, i64 0))
  %"CONTAB[488]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 488), align 16
  %"CONTAB[10]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 487, {}* %"CONTAB[488]*", {}* %"CONTAB[10]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 490, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"str-&AUX", i64 0, i64 0))
  %"CONTAB[490]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 490), align 16
  %"CONTAB[16]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 489, {}* %"CONTAB[490]*", {}* %"CONTAB[16]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 493, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-G236241, i64 0, i64 0))
  %"CONTAB[493]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 493), align 8
  %"CONTAB[10]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 492, {}* %"CONTAB[493]*", {}* %"CONTAB[10]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 496, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-CDR, i64 0, i64 0))
  %"CONTAB[496]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 496), align 16
  %"CONTAB[16]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 495, {}* %"CONTAB[496]*", {}* %"CONTAB[16]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 499, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-THE, i64 0, i64 0))
  %"CONTAB[499]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 499), align 8
  %"CONTAB[16]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 498, {}* %"CONTAB[499]*", {}* %"CONTAB[16]*38")
  %"CONTAB[498]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 498), align 16
  %"CONTAB[108]*39" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[485]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 485), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 497, i64 3, {}* %"CONTAB[498]*", {}* %"CONTAB[108]*39", {}* %"CONTAB[485]*")
  %"CONTAB[495]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 495), align 8
  %"CONTAB[497]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 497), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 494, i64 2, {}* %"CONTAB[495]*", {}* %"CONTAB[497]*")
  %"CONTAB[492]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 492), align 16
  %"CONTAB[494]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 494), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 491, i64 2, {}* %"CONTAB[492]*", {}* %"CONTAB[494]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 502, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-G236242, i64 0, i64 0))
  %"CONTAB[502]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 502), align 16
  %"CONTAB[10]*40" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 501, {}* %"CONTAB[502]*", {}* %"CONTAB[10]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 505, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PROGN, i64 0, i64 0))
  %"CONTAB[505]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 505), align 8
  %"CONTAB[16]*41" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 504, {}* %"CONTAB[505]*", {}* %"CONTAB[16]*41")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 508, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-IF, i64 0, i64 0))
  %"CONTAB[508]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 508), align 16
  %"CONTAB[16]*42" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 507, {}* %"CONTAB[508]*", {}* %"CONTAB[16]*42")
  %"CONTAB[112]*43" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  %"CONTAB[492]*44" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 492), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 509, i64 2, {}* %"CONTAB[112]*43", {}* %"CONTAB[492]*44")
  %"CONTAB[454]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 454), align 16
  %"CONTAB[485]*45" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 485), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 510, i64 2, {}* %"CONTAB[454]*", {}* %"CONTAB[485]*45")
  %"CONTAB[507]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 507), align 8
  %"CONTAB[509]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 509), align 8
  %"CONTAB[510]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 510), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 506, i64 3, {}* %"CONTAB[507]*", {}* %"CONTAB[509]*", {}* %"CONTAB[510]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 513, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PROG1, i64 0, i64 0))
  %"CONTAB[513]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 513), align 8
  %"CONTAB[16]*46" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 512, {}* %"CONTAB[513]*", {}* %"CONTAB[16]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 516, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-CAR, i64 0, i64 0))
  %"CONTAB[516]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 516), align 16
  %"CONTAB[16]*47" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 515, {}* %"CONTAB[516]*", {}* %"CONTAB[16]*47")
  %"CONTAB[498]*48" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 498), align 16
  %"CONTAB[108]*49" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[492]*50" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 492), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 517, i64 3, {}* %"CONTAB[498]*48", {}* %"CONTAB[108]*49", {}* %"CONTAB[492]*50")
  %"CONTAB[515]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 515), align 8
  %"CONTAB[517]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 517), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 514, i64 2, {}* %"CONTAB[515]*", {}* %"CONTAB[517]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 520, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-SETQ, i64 0, i64 0))
  %"CONTAB[520]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 520), align 16
  %"CONTAB[16]*51" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 519, {}* %"CONTAB[520]*", {}* %"CONTAB[16]*51")
  %"CONTAB[498]*52" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 498), align 16
  %"CONTAB[108]*53" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[492]*54" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 492), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 522, i64 3, {}* %"CONTAB[498]*52", {}* %"CONTAB[108]*53", {}* %"CONTAB[492]*54")
  %"CONTAB[495]*55" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 495), align 8
  %"CONTAB[522]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 522), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 521, i64 2, {}* %"CONTAB[495]*55", {}* %"CONTAB[522]*")
  %"CONTAB[519]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 519), align 8
  %"CONTAB[492]*56" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 492), align 16
  %"CONTAB[521]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 521), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 518, i64 3, {}* %"CONTAB[519]*", {}* %"CONTAB[492]*56", {}* %"CONTAB[521]*")
  %"CONTAB[512]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 512), align 16
  %"CONTAB[514]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 514), align 16
  %"CONTAB[518]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 518), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 511, i64 3, {}* %"CONTAB[512]*", {}* %"CONTAB[514]*", {}* %"CONTAB[518]*")
  %"CONTAB[504]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 504), align 16
  %"CONTAB[506]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 506), align 16
  %"CONTAB[511]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 511), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 503, i64 3, {}* %"CONTAB[504]*", {}* %"CONTAB[506]*", {}* %"CONTAB[511]*")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.15() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !128 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.13)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.14)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.16() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !129 {
entry:
  %"CONTAB[501]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 501), align 8
  %"CONTAB[503]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 503), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 500, i64 2, {}* %"CONTAB[501]*", {}* %"CONTAB[503]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 525, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-G236243, i64 0, i64 0))
  %"CONTAB[525]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 525), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 524, {}* %"CONTAB[525]*", {}* %"CONTAB[10]*")
  %"CONTAB[524]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  %"CONTAB[501]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 501), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 523, i64 2, {}* %"CONTAB[524]*", {}* %"CONTAB[501]*1")
  %"CONTAB[112]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  %"CONTAB[524]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 529, i64 2, {}* %"CONTAB[112]*", {}* %"CONTAB[524]*2")
  %"CONTAB[454]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 454), align 16
  %"CONTAB[485]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 485), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 530, i64 2, {}* %"CONTAB[454]*", {}* %"CONTAB[485]*")
  %"CONTAB[507]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 507), align 8
  %"CONTAB[529]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 529), align 8
  %"CONTAB[530]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 530), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 528, i64 3, {}* %"CONTAB[507]*", {}* %"CONTAB[529]*", {}* %"CONTAB[530]*")
  %"CONTAB[498]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 498), align 16
  %"CONTAB[108]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[524]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 533, i64 3, {}* %"CONTAB[498]*", {}* %"CONTAB[108]*", {}* %"CONTAB[524]*3")
  %"CONTAB[515]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 515), align 8
  %"CONTAB[533]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 533), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 532, i64 2, {}* %"CONTAB[515]*", {}* %"CONTAB[533]*")
  %"CONTAB[498]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 498), align 16
  %"CONTAB[108]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[524]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 536, i64 3, {}* %"CONTAB[498]*4", {}* %"CONTAB[108]*5", {}* %"CONTAB[524]*6")
  %"CONTAB[495]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 495), align 8
  %"CONTAB[536]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 536), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 535, i64 2, {}* %"CONTAB[495]*", {}* %"CONTAB[536]*")
  %"CONTAB[519]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 519), align 8
  %"CONTAB[524]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  %"CONTAB[535]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 535), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 534, i64 3, {}* %"CONTAB[519]*", {}* %"CONTAB[524]*7", {}* %"CONTAB[535]*")
  %"CONTAB[512]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 512), align 16
  %"CONTAB[532]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 532), align 16
  %"CONTAB[534]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 534), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 531, i64 3, {}* %"CONTAB[512]*", {}* %"CONTAB[532]*", {}* %"CONTAB[534]*")
  %"CONTAB[504]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 504), align 16
  %"CONTAB[528]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 528), align 16
  %"CONTAB[531]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 531), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 527, i64 3, {}* %"CONTAB[504]*", {}* %"CONTAB[528]*", {}* %"CONTAB[531]*")
  %"CONTAB[478]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 478), align 16
  %"CONTAB[527]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 527), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 526, i64 2, {}* %"CONTAB[478]*", {}* %"CONTAB[527]*")
  %"CONTAB[112]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  %"CONTAB[524]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 540, i64 2, {}* %"CONTAB[112]*8", {}* %"CONTAB[524]*9")
  %"CONTAB[454]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 454), align 16
  %"CONTAB[485]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 485), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 541, i64 2, {}* %"CONTAB[454]*10", {}* %"CONTAB[485]*11")
  %"CONTAB[507]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 507), align 8
  %"CONTAB[540]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 540), align 16
  %"CONTAB[541]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 541), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 539, i64 3, {}* %"CONTAB[507]*12", {}* %"CONTAB[540]*", {}* %"CONTAB[541]*")
  %"CONTAB[498]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 498), align 16
  %"CONTAB[108]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[524]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 544, i64 3, {}* %"CONTAB[498]*13", {}* %"CONTAB[108]*14", {}* %"CONTAB[524]*15")
  %"CONTAB[515]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 515), align 8
  %"CONTAB[544]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 544), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 543, i64 2, {}* %"CONTAB[515]*16", {}* %"CONTAB[544]*")
  %"CONTAB[498]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 498), align 16
  %"CONTAB[108]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[524]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 547, i64 3, {}* %"CONTAB[498]*17", {}* %"CONTAB[108]*18", {}* %"CONTAB[524]*19")
  %"CONTAB[495]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 495), align 8
  %"CONTAB[547]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 547), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 546, i64 2, {}* %"CONTAB[495]*20", {}* %"CONTAB[547]*")
  %"CONTAB[519]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 519), align 8
  %"CONTAB[524]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 524), align 16
  %"CONTAB[546]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 546), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 545, i64 3, {}* %"CONTAB[519]*21", {}* %"CONTAB[524]*22", {}* %"CONTAB[546]*")
  %"CONTAB[512]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 512), align 16
  %"CONTAB[543]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 543), align 8
  %"CONTAB[545]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 545), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 542, i64 3, {}* %"CONTAB[512]*23", {}* %"CONTAB[543]*", {}* %"CONTAB[545]*")
  %"CONTAB[504]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 504), align 16
  %"CONTAB[539]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 539), align 8
  %"CONTAB[542]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 542), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 538, i64 3, {}* %"CONTAB[504]*24", {}* %"CONTAB[539]*", {}* %"CONTAB[542]*")
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[538]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 538), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 537, i64 2, {}* %"CONTAB[422]*", {}* %"CONTAB[538]*")
  %"CONTAB[482]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 482), align 16
  %"CONTAB[492]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 492), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 548, i64 2, {}* %"CONTAB[482]*", {}* %"CONTAB[492]*")
  %"CONTAB[485]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 485), align 8
  %"CONTAB[487]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 487), align 8
  %"CONTAB[489]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 489), align 8
  %"CONTAB[491]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 491), align 8
  %"CONTAB[500]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 500), align 16
  %"CONTAB[523]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 523), align 8
  %"CONTAB[526]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 526), align 16
  %"CONTAB[537]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 537), align 8
  %"CONTAB[548]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 548), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 484, i64 9, {}* %"CONTAB[485]*25", {}* %"CONTAB[487]*", {}* %"CONTAB[489]*", {}* %"CONTAB[491]*", {}* %"CONTAB[500]*", {}* %"CONTAB[523]*", {}* %"CONTAB[526]*", {}* %"CONTAB[537]*", {}* %"CONTAB[548]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^290^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^290^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[108]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 110), align 16
  %"CONTAB[112]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 549, i64 3, {}* %"CONTAB[108]*26", {}* %"CONTAB[110]*", {}* %"CONTAB[112]*27")
  %"CONTAB[108]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[112]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 550, i64 2, {}* %"CONTAB[108]*28", {}* %"CONTAB[112]*29")
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 551, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  %"CONTAB[108]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[110]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 110), align 16
  %"CONTAB[112]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 552, i64 3, {}* %"CONTAB[108]*30", {}* %"CONTAB[110]*31", {}* %"CONTAB[112]*32")
  %"CONTAB[108]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[112]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 553, i64 2, {}* %"CONTAB[108]*33", {}* %"CONTAB[112]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 555, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES", i64 0, i64 0))
  %"CONTAB[555]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 555), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 554, {}* %"CONTAB[555]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 557, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P", i64 0, i64 0))
  %"CONTAB[557]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 557), align 8
  %"CONTAB[6]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 556, {}* %"CONTAB[557]*", {}* %"CONTAB[6]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 559, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-/", i64 0, i64 0))
  %"CONTAB[559]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 559), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 558, {}* %"CONTAB[559]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 561, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-*", i64 0, i64 0))
  %"CONTAB[561]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 561), align 8
  %"CONTAB[2]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 560, {}* %"CONTAB[561]*", {}* %"CONTAB[2]*36")
  %"CONTAB[35]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*39" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 562, i64 3, {}* %"CONTAB[35]*37", {}* %"CONTAB[20]*38", {}* %"CONTAB[18]*39")
  %"CONTAB[35]*40" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*41" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*42" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 563, i64 3, {}* %"CONTAB[35]*40", {}* %"CONTAB[20]*41", {}* %"CONTAB[18]*42")
  %"CONTAB[422]*43" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 564, i64 1, {}* %"CONTAB[422]*43")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 565, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 46624 to {}*), {}* inttoptr (i64 1364 to {}*), {}* inttoptr (i64 4 to {}*))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.17() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !130 {
entry:
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 566, i64 1, {}* %"CONTAB[422]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^298^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^298^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 567, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 570, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-DAMENINDEX, i64 0, i64 0))
  %"CONTAB[570]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 570), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 569, {}* %"CONTAB[570]*", {}* %"CONTAB[6]*")
  %"CONTAB[422]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[569]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 569), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 568, i64 2, {}* %"CONTAB[422]*1", {}* %"CONTAB[569]*")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 571, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 55296 to {}*), {}* inttoptr (i64 1572 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[569]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 569), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 572, i64 2, {}* %"CONTAB[422]*2", {}* %"CONTAB[569]*3")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^393^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^393^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 574, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str-TWO-ARG->=", i64 0, i64 0))
  %"CONTAB[574]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 574), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 573, {}* %"CONTAB[574]*", {}* %"CONTAB[2]*")
  %"CONTAB[35]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 575, i64 3, {}* %"CONTAB[35]*4", {}* %"CONTAB[20]*5", {}* %"CONTAB[18]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 578, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-STOERINDEX, i64 0, i64 0))
  %"CONTAB[578]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 578), align 16
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 577, {}* %"CONTAB[578]*", {}* %"CONTAB[6]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 580, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-MEINE_ZEILE_INDEX, i64 0, i64 0))
  %"CONTAB[580]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 580), align 16
  %"CONTAB[6]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 579, {}* %"CONTAB[580]*", {}* %"CONTAB[6]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 582, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-STOERDAMEN-INDEX, i64 0, i64 0))
  %"CONTAB[582]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 582), align 16
  %"CONTAB[6]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 581, {}* %"CONTAB[582]*", {}* %"CONTAB[6]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 584, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-MAXIMUM, i64 0, i64 0))
  %"CONTAB[584]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 584), align 16
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 583, {}* %"CONTAB[584]*", {}* %"CONTAB[6]*10")
  %"CONTAB[577]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 577), align 8
  %"CONTAB[579]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 579), align 8
  %"CONTAB[581]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 581), align 8
  %"CONTAB[583]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 583), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 576, i64 4, {}* %"CONTAB[577]*", {}* %"CONTAB[579]*", {}* %"CONTAB[581]*", {}* %"CONTAB[583]*")
  %"CONTAB[47]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 585, i64 4, {}* %"CONTAB[47]*11", {}* inttoptr (i64 55916 to {}*), {}* inttoptr (i64 1592 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[577]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 577), align 8
  %"CONTAB[579]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 579), align 8
  %"CONTAB[581]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 581), align 8
  %"CONTAB[583]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 583), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 586, i64 4, {}* %"CONTAB[577]*12", {}* %"CONTAB[579]*13", {}* %"CONTAB[581]*14", {}* %"CONTAB[583]*15")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^398^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^398^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 587, i64 3, {}* %"CONTAB[35]*16", {}* %"CONTAB[20]*17", {}* %"CONTAB[18]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 589, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-ND=VOR_SUCHEN", i64 0, i64 0))
  %"CONTAB[589]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 589), align 8
  %"CONTAB[6]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 588, {}* %"CONTAB[589]*", {}* %"CONTAB[6]*19")
  %"CONTAB[47]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 590, i64 4, {}* %"CONTAB[47]*20", {}* inttoptr (i64 59272 to {}*), {}* inttoptr (i64 1684 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^421^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^421^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[108]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 110), align 16
  %"CONTAB[112]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 591, i64 3, {}* %"CONTAB[108]*", {}* %"CONTAB[110]*", {}* %"CONTAB[112]*")
  %"CONTAB[108]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 108), align 16
  %"CONTAB[112]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 112), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 592, i64 2, {}* %"CONTAB[108]*21", {}* %"CONTAB[112]*22")
  %"CONTAB[35]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 593, i64 3, {}* %"CONTAB[35]*23", {}* %"CONTAB[20]*24", {}* %"CONTAB[18]*25")
  %"CONTAB[422]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 594, i64 1, {}* %"CONTAB[422]*26")
  %"CONTAB[47]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 595, i64 4, {}* %"CONTAB[47]*27", {}* inttoptr (i64 59672 to {}*), {}* inttoptr (i64 1704 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 596, i64 1, {}* %"CONTAB[422]*28")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^426^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^426^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 597, i64 3, {}* %"CONTAB[35]*29", {}* %"CONTAB[20]*30", {}* %"CONTAB[18]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 599, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-ND=DAMEN_SCHLUESSEL", i64 0, i64 0))
  %"CONTAB[599]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 599), align 8
  %"CONTAB[6]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 598, {}* %"CONTAB[599]*", {}* %"CONTAB[6]*32")
  %"CONTAB[422]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[93]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 93), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 600, i64 2, {}* %"CONTAB[422]*33", {}* %"CONTAB[93]*")
  %"CONTAB[47]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 601, i64 4, {}* %"CONTAB[47]*34", {}* inttoptr (i64 61472 to {}*), {}* inttoptr (i64 1760 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[93]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 93), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 602, i64 2, {}* %"CONTAB[422]*35", {}* %"CONTAB[93]*36")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^440^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^440^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*39" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 603, i64 3, {}* %"CONTAB[35]*37", {}* %"CONTAB[20]*38", {}* %"CONTAB[18]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 605, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str-ND=AUSGABE", i64 0, i64 0))
  %"CONTAB[605]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 605), align 8
  %"CONTAB[6]*40" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 604, {}* %"CONTAB[605]*", {}* %"CONTAB[6]*40")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.18() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !131 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.16)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.17)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.19() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !132 {
entry:
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 606, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 66928 to {}*), {}* inttoptr (i64 1900 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^444^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^444^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 607, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  %"CONTAB[35]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 608, i64 3, {}* %"CONTAB[35]*1", {}* %"CONTAB[20]*2", {}* %"CONTAB[18]*3")
  %"CONTAB[35]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 609, i64 3, {}* %"CONTAB[35]*4", {}* %"CONTAB[20]*5", {}* %"CONTAB[18]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 611, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-PROPAGIERT, i64 0, i64 0))
  %"CONTAB[611]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 611), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 610, {}* %"CONTAB[611]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 613, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-SICHERN, i64 0, i64 0))
  %"CONTAB[613]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 613), align 8
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 30), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 612, {}* %"CONTAB[613]*", {}* %"CONTAB[30]*")
  %"CONTAB[35]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 614, i64 3, {}* %"CONTAB[35]*7", {}* %"CONTAB[20]*8", {}* %"CONTAB[18]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 616, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-ND=PARAMETER_BEKANNT", i64 0, i64 0))
  %"CONTAB[616]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 616), align 16
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 615, {}* %"CONTAB[616]*", {}* %"CONTAB[6]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 619, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-ICH, i64 0, i64 0))
  %"CONTAB[619]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 619), align 8
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 618, {}* %"CONTAB[619]*", {}* %"CONTAB[6]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 621, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-VON_WEM, i64 0, i64 0))
  %"CONTAB[621]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 621), align 8
  %"CONTAB[6]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 620, {}* %"CONTAB[621]*", {}* %"CONTAB[6]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 623, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-WAS, i64 0, i64 0))
  %"CONTAB[623]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 623), align 8
  %"CONTAB[6]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 622, {}* %"CONTAB[623]*", {}* %"CONTAB[6]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 625, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-WERT, i64 0, i64 0))
  %"CONTAB[625]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 625), align 8
  %"CONTAB[6]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 624, {}* %"CONTAB[625]*", {}* %"CONTAB[6]*14")
  %"CONTAB[618]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 618), align 16
  %"CONTAB[620]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 620), align 16
  %"CONTAB[622]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 622), align 16
  %"CONTAB[624]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 624), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 617, i64 4, {}* %"CONTAB[618]*", {}* %"CONTAB[620]*", {}* %"CONTAB[622]*", {}* %"CONTAB[624]*")
  %"CONTAB[47]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 626, i64 4, {}* %"CONTAB[47]*15", {}* inttoptr (i64 76116 to {}*), {}* inttoptr (i64 2140 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[618]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 618), align 16
  %"CONTAB[620]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 620), align 16
  %"CONTAB[622]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 622), align 16
  %"CONTAB[624]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 624), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 627, i64 4, {}* %"CONTAB[618]*16", {}* %"CONTAB[620]*17", {}* %"CONTAB[622]*18", {}* %"CONTAB[624]*19")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^480^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^480^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 629, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-DELETE, i64 0, i64 0))
  %"CONTAB[629]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 629), align 8
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 628, {}* %"CONTAB[629]*", {}* %"CONTAB[16]*")
  %"CONTAB[35]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 630, i64 3, {}* %"CONTAB[35]*20", {}* %"CONTAB[20]*21", {}* %"CONTAB[18]*22")
  %"CONTAB[35]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 631, i64 3, {}* %"CONTAB[35]*23", {}* %"CONTAB[20]*24", {}* %"CONTAB[18]*25")
  %"CONTAB[35]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 632, i64 3, {}* %"CONTAB[35]*26", {}* %"CONTAB[20]*27", {}* %"CONTAB[18]*28")
  %"CONTAB[35]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 633, i64 3, {}* %"CONTAB[35]*29", {}* %"CONTAB[20]*30", {}* %"CONTAB[18]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 635, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-ND=PARAMETER_UNBEKANNT", i64 0, i64 0))
  %"CONTAB[635]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 635), align 8
  %"CONTAB[6]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 634, {}* %"CONTAB[635]*", {}* %"CONTAB[6]*32")
  %"CONTAB[618]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 618), align 16
  %"CONTAB[620]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 620), align 16
  %"CONTAB[622]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 622), align 16
  %"CONTAB[624]*36" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 624), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 636, i64 4, {}* %"CONTAB[618]*33", {}* %"CONTAB[620]*34", {}* %"CONTAB[622]*35", {}* %"CONTAB[624]*36")
  %"CONTAB[47]*37" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 637, i64 4, {}* %"CONTAB[47]*37", {}* inttoptr (i64 78924 to {}*), {}* inttoptr (i64 2220 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[618]*38" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 618), align 16
  %"CONTAB[620]*39" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 620), align 16
  %"CONTAB[622]*40" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 622), align 16
  %"CONTAB[624]*41" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 624), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 638, i64 4, {}* %"CONTAB[618]*38", {}* %"CONTAB[620]*39", {}* %"CONTAB[622]*40", {}* %"CONTAB[624]*41")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^555^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^555^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 640, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-NEQ, i64 0, i64 0))
  %"CONTAB[640]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 640), align 16
  %"CONTAB[6]*42" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 639, {}* %"CONTAB[640]*", {}* %"CONTAB[6]*42")
  %"CONTAB[35]*43" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*44" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*45" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 641, i64 3, {}* %"CONTAB[35]*43", {}* %"CONTAB[20]*44", {}* %"CONTAB[18]*45")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 643, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-ND=STOER_DIAGNONAL_DAMEN", i64 0, i64 0))
  %"CONTAB[643]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 643), align 8
  %"CONTAB[6]*46" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 642, {}* %"CONTAB[643]*", {}* %"CONTAB[6]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 646, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SPALTE, i64 0, i64 0))
  %"CONTAB[646]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 646), align 16
  %"CONTAB[6]*47" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 645, {}* %"CONTAB[646]*", {}* %"CONTAB[6]*47")
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[645]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 645), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 644, i64 2, {}* %"CONTAB[422]*", {}* %"CONTAB[645]*")
  %"CONTAB[47]*48" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 647, i64 4, {}* %"CONTAB[47]*48", {}* inttoptr (i64 82576 to {}*), {}* inttoptr (i64 2328 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*49" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[645]*50" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 645), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 648, i64 2, {}* %"CONTAB[422]*49", {}* %"CONTAB[645]*50")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.20() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !133 {
entry:
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^578^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^578^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 650, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-REMOVE-IF-NOT, i64 0, i64 0))
  %"CONTAB[650]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 650), align 16
  %"CONTAB[16]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 649, {}* %"CONTAB[650]*", {}* %"CONTAB[16]*")
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 651, i64 3, {}* %"CONTAB[35]*", {}* %"CONTAB[20]*", {}* %"CONTAB[18]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 653, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-ND=ZEILEN_MIT_DAME_IN_SPALTE", i64 0, i64 0))
  %"CONTAB[653]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 653), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 652, {}* %"CONTAB[653]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 656, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-AUSSER_ZEILE, i64 0, i64 0))
  %"CONTAB[656]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 656), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 655, {}* %"CONTAB[656]*", {}* %"CONTAB[6]*1")
  %"CONTAB[645]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 645), align 8
  %"CONTAB[211]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[655]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 655), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 654, i64 3, {}* %"CONTAB[645]*", {}* %"CONTAB[211]*", {}* %"CONTAB[655]*")
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 657, i64 4, {}* %"CONTAB[47]*", {}* inttoptr (i64 84560 to {}*), {}* inttoptr (i64 2380 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[645]*2" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 645), align 8
  %"CONTAB[211]*3" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 211), align 8
  %"CONTAB[655]*4" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 655), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 658, i64 3, {}* %"CONTAB[645]*2", {}* %"CONTAB[211]*3", {}* %"CONTAB[655]*4")
  %"CONTAB[422]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 659, i64 1, {}* %"CONTAB[422]*")
  %"CONTAB[422]*5" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 660, i64 1, {}* %"CONTAB[422]*5")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^595^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^595^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 662, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-UNION, i64 0, i64 0))
  %"CONTAB[662]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 662), align 16
  %"CONTAB[16]*6" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 16), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 661, {}* %"CONTAB[662]*", {}* %"CONTAB[16]*6")
  %"CONTAB[35]*7" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*8" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*9" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 663, i64 3, {}* %"CONTAB[35]*7", {}* %"CONTAB[20]*8", {}* %"CONTAB[18]*9")
  %"CONTAB[422]*10" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[645]*11" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 645), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 664, i64 2, {}* %"CONTAB[422]*10", {}* %"CONTAB[645]*11")
  %"CONTAB[47]*12" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 665, i64 4, {}* %"CONTAB[47]*12", {}* inttoptr (i64 86224 to {}*), {}* inttoptr (i64 2420 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*13" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  %"CONTAB[645]*14" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 645), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 666, i64 2, {}* %"CONTAB[422]*13", {}* %"CONTAB[645]*14")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^605^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^605^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*15" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*16" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*17" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 667, i64 3, {}* %"CONTAB[35]*15", {}* %"CONTAB[20]*16", {}* %"CONTAB[18]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 669, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-ND=SUCHE_FEIND_ZEILEN", i64 0, i64 0))
  %"CONTAB[669]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 669), align 8
  %"CONTAB[6]*18" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 668, {}* %"CONTAB[669]*", {}* %"CONTAB[6]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 672, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-AUSGANGSZEILE, i64 0, i64 0))
  %"CONTAB[672]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 672), align 16
  %"CONTAB[6]*19" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 671, {}* %"CONTAB[672]*", {}* %"CONTAB[6]*19")
  %"CONTAB[671]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 671), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 670, i64 1, {}* %"CONTAB[671]*")
  %"CONTAB[47]*20" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 673, i64 4, {}* %"CONTAB[47]*20", {}* inttoptr (i64 86892 to {}*), {}* inttoptr (i64 2436 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 675, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-SET-DOCUMENTATION, i64 0, i64 0))
  %"CONTAB[675]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 675), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 674, {}* %"CONTAB[675]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 676, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @"str-In zeile ist eine Dame, die in einem Constraint vorkommt,\0D\0A   suche alle zeilen mit Dame, die diese Dame Schlagen koennen", i64 0, i64 0))
  %"CONTAB[671]*21" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 671), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 677, i64 1, {}* %"CONTAB[671]*21")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^609^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^609^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*22" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*23" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*24" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 678, i64 3, {}* %"CONTAB[35]*22", {}* %"CONTAB[20]*23", {}* %"CONTAB[18]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 680, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"str-ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN", i64 0, i64 0))
  %"CONTAB[680]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 680), align 16
  %"CONTAB[6]*25" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 679, {}* %"CONTAB[680]*", {}* %"CONTAB[6]*25")
  %"CONTAB[422]*26" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 681, i64 1, {}* %"CONTAB[422]*26")
  %"CONTAB[47]*27" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 682, i64 4, {}* %"CONTAB[47]*27", {}* inttoptr (i64 88288 to {}*), {}* inttoptr (i64 2468 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[422]*28" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 422), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 683, i64 1, {}* %"CONTAB[422]*28")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^617^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^617^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[35]*29" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 35), align 8
  %"CONTAB[20]*30" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 20), align 16
  %"CONTAB[18]*31" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 684, i64 3, {}* %"CONTAB[35]*29", {}* %"CONTAB[20]*30", {}* %"CONTAB[18]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 686, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-ND=SUCHE-START-DAMEN", i64 0, i64 0))
  %"CONTAB[686]*" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 686), align 16
  %"CONTAB[6]*32" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 685, {}* %"CONTAB[686]*", {}* %"CONTAB[6]*32")
  %"CONTAB[671]*33" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 671), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 687, i64 1, {}* %"CONTAB[671]*33")
  %"CONTAB[47]*34" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 47), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 688, i64 4, {}* %"CONTAB[47]*34", {}* inttoptr (i64 88708 to {}*), {}* inttoptr (i64 2480 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[671]*35" = load {}*, {}** getelementptr inbounds ([690 x {}*], [690 x {}*]* @CONTAB4906, i64 0, i64 671), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 689, i64 1, {}* %"CONTAB[671]*35")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"n-queens-scheduling.lisp^620^TOP-COMPILE-FILE", i8* getelementptr inbounds ([46 x i8], [46 x i8]* @"str-n-queens-scheduling.lisp^620^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.21() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !134 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.19)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.20)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.22() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !135 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.18)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.21)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.23() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !136 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.15)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.22)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.24() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !137 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.12)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.23)
  ret void
}

; Function Attrs: nounwind
declare void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }*, {}**, i64, {}*) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @CLASP-CTOR() #0 personality i32 (...)* @__gxx_personality_v0 {
entry:
  tail call void @cc_register_startup_function(void ()* nonnull @RUN-ALL)
  ret void
}

declare void @cc_register_startup_function(void ()*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @cc_error_too_few_arguments(i64, i64, %0*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @cc_error_too_many_arguments(i64, i64, %0*) local_unnamed_addr #5

attributes #0 = { uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #1 = { nounwind "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #2 = { ssp uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #3 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #4 = { nounwind readnone speculatable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn }

!llvm.ident = !{!0, !1}
!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5, !6, !7, !8}

!0 = !{!"Clasp"}
!1 = !{!"clang version 5.0.1 (tags/RELEASE_501/final)"}
!2 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !3, producer: "clasp Common Lisp compiler", isOptimized: false, flags: "-v", runtimeVersion: 1, splitDebugFilename: "the-split-name.log", emissionKind: LineTablesOnly, enums: !4)
!3 = !DIFile(filename: "n-queens-scheduling.lisp", directory: "/Users/karstenpoeck/lisp/coke/helpers")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"PIC Level", i32 2}
!9 = distinct !DISubprogram(name: "RUN-ALL", linkageName: "RUN-ALL", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed_fixed)
!13 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^1^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^1^TOP-COMPILE-FILE", scope: !3, file: !3, line: 1, type: !10, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !2, variables: !4)
!14 = !{!15, !19, i64 16}
!15 = !{!"_ZTS13__va_list_tag", !16, i64 0, !16, i64 4, !19, i64 8, !19, i64 16}
!16 = !{!"int", !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C++ TBAA"}
!19 = !{!"any pointer", !17, i64 0}
!20 = !{!15, !16, i64 0}
!21 = !{!22, !22, i64 0}
!22 = !{!"long", !17, i64 0}
!23 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^40^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^40^TOP-COMPILE-FILE", scope: !3, file: !3, line: 40, type: !10, isLocal: false, isDefinition: true, scopeLine: 40, isOptimized: false, unit: !2, variables: !4)
!24 = distinct !DISubprogram(name: "ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^", linkageName: "ND=ZEILE_AUS_INDEX^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 40, type: !10, isLocal: false, isDefinition: true, scopeLine: 40, isOptimized: false, unit: !2, variables: !4)
!25 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^54^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^54^TOP-COMPILE-FILE", scope: !3, file: !3, line: 54, type: !10, isLocal: false, isDefinition: true, scopeLine: 54, isOptimized: false, unit: !2, variables: !4)
!26 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^56^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^56^TOP-COMPILE-FILE", scope: !3, file: !3, line: 56, type: !10, isLocal: false, isDefinition: true, scopeLine: 56, isOptimized: false, unit: !2, variables: !4)
!27 = distinct !DISubprogram(name: "ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^", linkageName: "ND=HASPTABELLEERZEUGEN/RUECKSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 56, type: !10, isLocal: false, isDefinition: true, scopeLine: 56, isOptimized: false, unit: !2, variables: !4)
!28 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^62^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^62^TOP-COMPILE-FILE", scope: !3, file: !3, line: 62, type: !10, isLocal: false, isDefinition: true, scopeLine: 62, isOptimized: false, unit: !2, variables: !4)
!29 = distinct !DISubprogram(name: "ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^", linkageName: "ND=DAME_AUS_INDEX_SCHNELL^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 62, type: !10, isLocal: false, isDefinition: true, scopeLine: 62, isOptimized: false, unit: !2, variables: !4)
!30 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^65^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^65^TOP-COMPILE-FILE", scope: !3, file: !3, line: 65, type: !10, isLocal: false, isDefinition: true, scopeLine: 65, isOptimized: false, unit: !2, variables: !4)
!31 = distinct !DISubprogram(name: "ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^", linkageName: "ND=DAMEN-UND-INDEX-EINTRAGEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 65, type: !10, isLocal: false, isDefinition: true, scopeLine: 65, isOptimized: false, unit: !2, variables: !4)
!32 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^68^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^68^TOP-COMPILE-FILE", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!33 = distinct !DISubprogram(name: "ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^", linkageName: "ND=DAME_AUS_INDEX^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!34 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^71^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^71^TOP-COMPILE-FILE", scope: !3, file: !3, line: 71, type: !10, isLocal: false, isDefinition: true, scopeLine: 71, isOptimized: false, unit: !2, variables: !4)
!35 = distinct !DISubprogram(name: "ND=ERZEUGE-RUECKVERZEIGERUNG^COMMON-LISP-USER^FN^^", linkageName: "ND=ERZEUGE-RUECKVERZEIGERUNG^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 71, type: !10, isLocal: false, isDefinition: true, scopeLine: 71, isOptimized: false, unit: !2, variables: !4)
!36 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^76^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^76^TOP-COMPILE-FILE", scope: !3, file: !3, line: 76, type: !10, isLocal: false, isDefinition: true, scopeLine: 76, isOptimized: false, unit: !2, variables: !4)
!37 = distinct !DISubprogram(name: "ND=VORZUORDNUNG-STARTEN^COMMON-LISP-USER^FN^^", linkageName: "ND=VORZUORDNUNG-STARTEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 76, type: !10, isLocal: false, isDefinition: true, scopeLine: 76, isOptimized: false, unit: !2, variables: !4)
!38 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^98^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^98^TOP-COMPILE-FILE", scope: !3, file: !3, line: 98, type: !10, isLocal: false, isDefinition: true, scopeLine: 98, isOptimized: false, unit: !2, variables: !4)
!39 = distinct !DISubprogram(name: "ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^", linkageName: "ND=OBJEKTE-ERZEUGEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 98, type: !10, isLocal: false, isDefinition: true, scopeLine: 98, isOptimized: false, unit: !2, variables: !4)
!40 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^117^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^117^TOP-COMPILE-FILE", scope: !3, file: !3, line: 117, type: !10, isLocal: false, isDefinition: true, scopeLine: 117, isOptimized: false, unit: !2, variables: !4)
!41 = distinct !DISubprogram(name: "ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^", linkageName: "ND=ERZEUGE_STOER_DAMEN_VALUES^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 117, type: !10, isLocal: false, isDefinition: true, scopeLine: 117, isOptimized: false, unit: !2, variables: !4)
!42 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^153^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^153^TOP-COMPILE-FILE", scope: !3, file: !3, line: 153, type: !10, isLocal: false, isDefinition: true, scopeLine: 153, isOptimized: false, unit: !2, variables: !4)
!43 = distinct !DISubprogram(name: "ND=DAMENTEST^COMMON-LISP-USER^FN^^", linkageName: "ND=DAMENTEST^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 153, type: !10, isLocal: false, isDefinition: true, scopeLine: 153, isOptimized: false, unit: !2, variables: !4)
!44 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 153, type: !10, isLocal: false, isDefinition: true, scopeLine: 153, isOptimized: false, unit: !2, variables: !4)
!45 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 153, type: !10, isLocal: false, isDefinition: true, scopeLine: 153, isOptimized: false, unit: !2, variables: !4)
!46 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 153, type: !10, isLocal: false, isDefinition: true, scopeLine: 153, isOptimized: false, unit: !2, variables: !4)
!47 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^170^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^170^TOP-COMPILE-FILE", scope: !3, file: !3, line: 170, type: !10, isLocal: false, isDefinition: true, scopeLine: 170, isOptimized: false, unit: !2, variables: !4)
!48 = distinct !DISubprogram(name: "ND=FEIND_KONSISTENZCHECK^COMMON-LISP-USER^FN^^", linkageName: "ND=FEIND_KONSISTENZCHECK^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 170, type: !10, isLocal: false, isDefinition: true, scopeLine: 170, isOptimized: false, unit: !2, variables: !4)
!49 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^184^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^184^TOP-COMPILE-FILE", scope: !3, file: !3, line: 184, type: !10, isLocal: false, isDefinition: true, scopeLine: 184, isOptimized: false, unit: !2, variables: !4)
!50 = distinct !DISubprogram(name: "ND=ERGEBNIS-KONSISTENZCHECK^COMMON-LISP-USER^FN^^", linkageName: "ND=ERGEBNIS-KONSISTENZCHECK^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 184, type: !10, isLocal: false, isDefinition: true, scopeLine: 184, isOptimized: false, unit: !2, variables: !4)
!51 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^192^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^192^TOP-COMPILE-FILE", scope: !3, file: !3, line: 192, type: !10, isLocal: false, isDefinition: true, scopeLine: 192, isOptimized: false, unit: !2, variables: !4)
!52 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^193^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^193^TOP-COMPILE-FILE", scope: !3, file: !3, line: 193, type: !10, isLocal: false, isDefinition: true, scopeLine: 193, isOptimized: false, unit: !2, variables: !4)
!53 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^193^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^193^TOP-COMPILE-FILE", scope: !3, file: !3, line: 193, type: !10, isLocal: false, isDefinition: true, scopeLine: 193, isOptimized: false, unit: !2, variables: !4)
!54 = distinct !DISubprogram(name: "ND=VOR_MINIMUM_IN_AGENDA_SUCHEN^COMMON-LISP-USER^FN^^", linkageName: "ND=VOR_MINIMUM_IN_AGENDA_SUCHEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 193, type: !10, isLocal: false, isDefinition: true, scopeLine: 193, isOptimized: false, unit: !2, variables: !4)
!55 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^207^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^207^TOP-COMPILE-FILE", scope: !3, file: !3, line: 207, type: !10, isLocal: false, isDefinition: true, scopeLine: 207, isOptimized: false, unit: !2, variables: !4)
!56 = distinct !DISubprogram(name: "ND-ZEIGE_DISLIKE^COMMON-LISP-USER^FN^^", linkageName: "ND-ZEIGE_DISLIKE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 207, type: !10, isLocal: false, isDefinition: true, scopeLine: 207, isOptimized: false, unit: !2, variables: !4)
!57 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^213^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^213^TOP-COMPILE-FILE", scope: !3, file: !3, line: 213, type: !10, isLocal: false, isDefinition: true, scopeLine: 213, isOptimized: false, unit: !2, variables: !4)
!58 = distinct !DISubprogram(name: "ND-ZEIGE_FEINDE^COMMON-LISP-USER^FN^^", linkageName: "ND-ZEIGE_FEINDE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 213, type: !10, isLocal: false, isDefinition: true, scopeLine: 213, isOptimized: false, unit: !2, variables: !4)
!59 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^219^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^219^TOP-COMPILE-FILE", scope: !3, file: !3, line: 219, type: !10, isLocal: false, isDefinition: true, scopeLine: 219, isOptimized: false, unit: !2, variables: !4)
!60 = distinct !DISubprogram(name: "ND-ZEIGE_DAMEN^COMMON-LISP-USER^FN^^", linkageName: "ND-ZEIGE_DAMEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 219, type: !10, isLocal: false, isDefinition: true, scopeLine: 219, isOptimized: false, unit: !2, variables: !4)
!61 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^225^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^225^TOP-COMPILE-FILE", scope: !3, file: !3, line: 225, type: !10, isLocal: false, isDefinition: true, scopeLine: 225, isOptimized: false, unit: !2, variables: !4)
!62 = distinct !DISubprogram(name: "ND-ZEIGE_OMEGA^COMMON-LISP-USER^FN^^", linkageName: "ND-ZEIGE_OMEGA^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 225, type: !10, isLocal: false, isDefinition: true, scopeLine: 225, isOptimized: false, unit: !2, variables: !4)
!63 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^230^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^230^TOP-COMPILE-FILE", scope: !3, file: !3, line: 230, type: !10, isLocal: false, isDefinition: true, scopeLine: 230, isOptimized: false, unit: !2, variables: !4)
!64 = distinct !DISubprogram(name: "ND=BERECHNE_DISLIKE_DER_ZEILEN^COMMON-LISP-USER^FN^^", linkageName: "ND=BERECHNE_DISLIKE_DER_ZEILEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 230, type: !10, isLocal: false, isDefinition: true, scopeLine: 230, isOptimized: false, unit: !2, variables: !4)
!65 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^236^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^236^TOP-COMPILE-FILE", scope: !3, file: !3, line: 236, type: !10, isLocal: false, isDefinition: true, scopeLine: 236, isOptimized: false, unit: !2, variables: !4)
!66 = distinct !DISubprogram(name: "ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^", linkageName: "ND=DRINGLICHKEIT_IJCAI^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 236, type: !10, isLocal: false, isDefinition: true, scopeLine: 236, isOptimized: false, unit: !2, variables: !4)
!67 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^239^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^239^TOP-COMPILE-FILE", scope: !3, file: !3, line: 239, type: !10, isLocal: false, isDefinition: true, scopeLine: 239, isOptimized: false, unit: !2, variables: !4)
!68 = distinct !DISubprogram(name: "ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^", linkageName: "ND=DOMAIN-DRINGLICHKEIT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 239, type: !10, isLocal: false, isDefinition: true, scopeLine: 239, isOptimized: false, unit: !2, variables: !4)
!69 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^245^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^245^TOP-COMPILE-FILE", scope: !3, file: !3, line: 245, type: !10, isLocal: false, isDefinition: true, scopeLine: 245, isOptimized: false, unit: !2, variables: !4)
!70 = distinct !DISubprogram(name: "ND=AKTUALISIERE_ALLE_DOMAINS^COMMON-LISP-USER^FN^^", linkageName: "ND=AKTUALISIERE_ALLE_DOMAINS^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 245, type: !10, isLocal: false, isDefinition: true, scopeLine: 245, isOptimized: false, unit: !2, variables: !4)
!71 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^251^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^251^TOP-COMPILE-FILE", scope: !3, file: !3, line: 251, type: !10, isLocal: false, isDefinition: true, scopeLine: 251, isOptimized: false, unit: !2, variables: !4)
!72 = distinct !DISubprogram(name: "ND-ZEIGE_DOMAIN^COMMON-LISP-USER^FN^^", linkageName: "ND-ZEIGE_DOMAIN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 251, type: !10, isLocal: false, isDefinition: true, scopeLine: 251, isOptimized: false, unit: !2, variables: !4)
!73 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^254^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^254^TOP-COMPILE-FILE", scope: !3, file: !3, line: 254, type: !10, isLocal: false, isDefinition: true, scopeLine: 254, isOptimized: false, unit: !2, variables: !4)
!74 = distinct !DISubprogram(name: "ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^", linkageName: "ND=DAME_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 254, type: !10, isLocal: false, isDefinition: true, scopeLine: 254, isOptimized: false, unit: !2, variables: !4)
!75 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^259^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^259^TOP-COMPILE-FILE", scope: !3, file: !3, line: 259, type: !10, isLocal: false, isDefinition: true, scopeLine: 259, isOptimized: false, unit: !2, variables: !4)
!76 = distinct !DISubprogram(name: "ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^", linkageName: "ND=LAENGE_DES_AKTUELLEN_DOMAINS^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 259, type: !10, isLocal: false, isDefinition: true, scopeLine: 259, isOptimized: false, unit: !2, variables: !4)
!77 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^272^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^272^TOP-COMPILE-FILE", scope: !3, file: !3, line: 272, type: !10, isLocal: false, isDefinition: true, scopeLine: 272, isOptimized: false, unit: !2, variables: !4)
!78 = distinct !DISubprogram(name: "ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^", linkageName: "ND=LAENGE_DES_AKTUELLEN_DOMAINS_SCHNELL^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 272, type: !10, isLocal: false, isDefinition: true, scopeLine: 272, isOptimized: false, unit: !2, variables: !4)
!79 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^275^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^275^TOP-COMPILE-FILE", scope: !3, file: !3, line: 275, type: !10, isLocal: false, isDefinition: true, scopeLine: 275, isOptimized: false, unit: !2, variables: !4)
!80 = distinct !DISubprogram(name: "ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^", linkageName: "ND=AKTUELLES_DOMAIN_LEER_P^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 275, type: !10, isLocal: false, isDefinition: true, scopeLine: 275, isOptimized: false, unit: !2, variables: !4)
!81 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^287^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^287^TOP-COMPILE-FILE", scope: !3, file: !3, line: 287, type: !10, isLocal: false, isDefinition: true, scopeLine: 287, isOptimized: false, unit: !2, variables: !4)
!82 = distinct !DISubprogram(name: "ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^", linkageName: "ND=AKTUELLES_DOMAIN_LEER_P_SCHNELL^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 287, type: !10, isLocal: false, isDefinition: true, scopeLine: 287, isOptimized: false, unit: !2, variables: !4)
!83 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^290^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^290^TOP-COMPILE-FILE", scope: !3, file: !3, line: 290, type: !10, isLocal: false, isDefinition: true, scopeLine: 290, isOptimized: false, unit: !2, variables: !4)
!84 = distinct !DISubprogram(name: "ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^", linkageName: "ND=MIT-DAMEN-MEINES-DOMAINS^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 290, type: !10, isLocal: false, isDefinition: true, scopeLine: 290, isOptimized: false, unit: !2, variables: !4)
!85 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^298^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^298^TOP-COMPILE-FILE", scope: !3, file: !3, line: 298, type: !10, isLocal: false, isDefinition: true, scopeLine: 298, isOptimized: false, unit: !2, variables: !4)
!86 = distinct !DISubprogram(name: "ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^", linkageName: "ND=BERECHNE_DISLIKE_EINER_ZEILE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 298, type: !10, isLocal: false, isDefinition: true, scopeLine: 298, isOptimized: false, unit: !2, variables: !4)
!87 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^393^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^393^TOP-COMPILE-FILE", scope: !3, file: !3, line: 393, type: !10, isLocal: false, isDefinition: true, scopeLine: 393, isOptimized: false, unit: !2, variables: !4)
!88 = distinct !DISubprogram(name: "ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^", linkageName: "ND=DAMENINDEX_IM_DOMAIN_ENTHALTEN_P^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 393, type: !10, isLocal: false, isDefinition: true, scopeLine: 393, isOptimized: false, unit: !2, variables: !4)
!89 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^398^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^398^TOP-COMPILE-FILE", scope: !3, file: !3, line: 398, type: !10, isLocal: false, isDefinition: true, scopeLine: 398, isOptimized: false, unit: !2, variables: !4)
!90 = distinct !DISubprogram(name: "ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^", linkageName: "ND=ERZEUGE_STOER_DAMEN_VALUES-INDIZES^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 398, type: !10, isLocal: false, isDefinition: true, scopeLine: 398, isOptimized: false, unit: !2, variables: !4)
!91 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^421^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^421^TOP-COMPILE-FILE", scope: !3, file: !3, line: 421, type: !10, isLocal: false, isDefinition: true, scopeLine: 421, isOptimized: false, unit: !2, variables: !4)
!92 = distinct !DISubprogram(name: "ND=VOR_SUCHEN^COMMON-LISP-USER^FN^^", linkageName: "ND=VOR_SUCHEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 421, type: !10, isLocal: false, isDefinition: true, scopeLine: 421, isOptimized: false, unit: !2, variables: !4)
!93 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^426^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^426^TOP-COMPILE-FILE", scope: !3, file: !3, line: 426, type: !10, isLocal: false, isDefinition: true, scopeLine: 426, isOptimized: false, unit: !2, variables: !4)
!94 = distinct !DISubprogram(name: "ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^", linkageName: "ND=BERECHNE_OMEGA^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 426, type: !10, isLocal: false, isDefinition: true, scopeLine: 426, isOptimized: false, unit: !2, variables: !4)
!95 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^440^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^440^TOP-COMPILE-FILE", scope: !3, file: !3, line: 440, type: !10, isLocal: false, isDefinition: true, scopeLine: 440, isOptimized: false, unit: !2, variables: !4)
!96 = distinct !DISubprogram(name: "ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^", linkageName: "ND=DAMEN_SCHLUESSEL^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 440, type: !10, isLocal: false, isDefinition: true, scopeLine: 440, isOptimized: false, unit: !2, variables: !4)
!97 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^444^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^444^TOP-COMPILE-FILE", scope: !3, file: !3, line: 444, type: !10, isLocal: false, isDefinition: true, scopeLine: 444, isOptimized: false, unit: !2, variables: !4)
!98 = distinct !DISubprogram(name: "ND=AUSGABE^COMMON-LISP-USER^FN^^", linkageName: "ND=AUSGABE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 444, type: !10, isLocal: false, isDefinition: true, scopeLine: 444, isOptimized: false, unit: !2, variables: !4)
!99 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^480^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^480^TOP-COMPILE-FILE", scope: !3, file: !3, line: 480, type: !10, isLocal: false, isDefinition: true, scopeLine: 480, isOptimized: false, unit: !2, variables: !4)
!100 = distinct !DISubprogram(name: "ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^", linkageName: "ND=PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 480, type: !10, isLocal: false, isDefinition: true, scopeLine: 480, isOptimized: false, unit: !2, variables: !4)
!101 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^555^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^555^TOP-COMPILE-FILE", scope: !3, file: !3, line: 555, type: !10, isLocal: false, isDefinition: true, scopeLine: 555, isOptimized: false, unit: !2, variables: !4)
!102 = distinct !DISubprogram(name: "ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^", linkageName: "ND=PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 555, type: !10, isLocal: false, isDefinition: true, scopeLine: 555, isOptimized: false, unit: !2, variables: !4)
!103 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^578^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^578^TOP-COMPILE-FILE", scope: !3, file: !3, line: 578, type: !10, isLocal: false, isDefinition: true, scopeLine: 578, isOptimized: false, unit: !2, variables: !4)
!104 = distinct !DISubprogram(name: "ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^", linkageName: "ND=STOER_DIAGNONAL_DAMEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 578, type: !10, isLocal: false, isDefinition: true, scopeLine: 578, isOptimized: false, unit: !2, variables: !4)
!105 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^595^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^595^TOP-COMPILE-FILE", scope: !3, file: !3, line: 595, type: !10, isLocal: false, isDefinition: true, scopeLine: 595, isOptimized: false, unit: !2, variables: !4)
!106 = distinct !DISubprogram(name: "ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^", linkageName: "ND=ZEILEN_MIT_DAME_IN_SPALTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 595, type: !10, isLocal: false, isDefinition: true, scopeLine: 595, isOptimized: false, unit: !2, variables: !4)
!107 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 595, type: !10, isLocal: false, isDefinition: true, scopeLine: 595, isOptimized: false, unit: !2, variables: !4)
!108 = !{!109, !19, i64 0}
!109 = !{!"_ZTSN7gctools9smart_ptrIN4core3T_OEEE", !19, i64 0}
!110 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 595, type: !10, isLocal: false, isDefinition: true, scopeLine: 595, isOptimized: false, unit: !2, variables: !4)
!111 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^605^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^605^TOP-COMPILE-FILE", scope: !3, file: !3, line: 605, type: !10, isLocal: false, isDefinition: true, scopeLine: 605, isOptimized: false, unit: !2, variables: !4)
!112 = distinct !DISubprogram(name: "ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^", linkageName: "ND=ZEILEN_DIE_ZEILE-SPALTE-BEDROHEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 605, type: !10, isLocal: false, isDefinition: true, scopeLine: 605, isOptimized: false, unit: !2, variables: !4)
!113 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^609^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^609^TOP-COMPILE-FILE", scope: !3, file: !3, line: 609, type: !10, isLocal: false, isDefinition: true, scopeLine: 609, isOptimized: false, unit: !2, variables: !4)
!114 = distinct !DISubprogram(name: "ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^", linkageName: "ND=SUCHE_FEIND_ZEILEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 609, type: !10, isLocal: false, isDefinition: true, scopeLine: 609, isOptimized: false, unit: !2, variables: !4)
!115 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^617^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^617^TOP-COMPILE-FILE", scope: !3, file: !3, line: 617, type: !10, isLocal: false, isDefinition: true, scopeLine: 617, isOptimized: false, unit: !2, variables: !4)
!116 = distinct !DISubprogram(name: "ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^", linkageName: "ND=DAMEN-VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 617, type: !10, isLocal: false, isDefinition: true, scopeLine: 617, isOptimized: false, unit: !2, variables: !4)
!117 = distinct !DISubprogram(name: "n-queens-scheduling.lisp^620^TOP-COMPILE-FILE", linkageName: "n-queens-scheduling.lisp^620^TOP-COMPILE-FILE", scope: !3, file: !3, line: 620, type: !10, isLocal: false, isDefinition: true, scopeLine: 620, isOptimized: false, unit: !2, variables: !4)
!118 = distinct !DISubprogram(name: "ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^", linkageName: "ND=SUCHE-START-DAMEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 620, type: !10, isLocal: false, isDefinition: true, scopeLine: 620, isOptimized: false, unit: !2, variables: !4)
!119 = distinct !DISubprogram(name: "RUN-ALL.6", linkageName: "RUN-ALL.6", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!120 = distinct !DISubprogram(name: "RUN-ALL.7", linkageName: "RUN-ALL.7", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!121 = distinct !DISubprogram(name: "RUN-ALL.8", linkageName: "RUN-ALL.8", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!122 = distinct !DISubprogram(name: "RUN-ALL.9", linkageName: "RUN-ALL.9", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!123 = distinct !DISubprogram(name: "RUN-ALL.10", linkageName: "RUN-ALL.10", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!124 = distinct !DISubprogram(name: "RUN-ALL.11", linkageName: "RUN-ALL.11", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!125 = distinct !DISubprogram(name: "RUN-ALL.12", linkageName: "RUN-ALL.12", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!126 = distinct !DISubprogram(name: "RUN-ALL.13", linkageName: "RUN-ALL.13", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!127 = distinct !DISubprogram(name: "RUN-ALL.14", linkageName: "RUN-ALL.14", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!128 = distinct !DISubprogram(name: "RUN-ALL.15", linkageName: "RUN-ALL.15", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!129 = distinct !DISubprogram(name: "RUN-ALL.16", linkageName: "RUN-ALL.16", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!130 = distinct !DISubprogram(name: "RUN-ALL.17", linkageName: "RUN-ALL.17", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!131 = distinct !DISubprogram(name: "RUN-ALL.18", linkageName: "RUN-ALL.18", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!132 = distinct !DISubprogram(name: "RUN-ALL.19", linkageName: "RUN-ALL.19", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!133 = distinct !DISubprogram(name: "RUN-ALL.20", linkageName: "RUN-ALL.20", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!134 = distinct !DISubprogram(name: "RUN-ALL.21", linkageName: "RUN-ALL.21", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!135 = distinct !DISubprogram(name: "RUN-ALL.22", linkageName: "RUN-ALL.22", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!136 = distinct !DISubprogram(name: "RUN-ALL.23", linkageName: "RUN-ALL.23", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!137 = distinct !DISubprogram(name: "RUN-ALL.24", linkageName: "RUN-ALL.24", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
