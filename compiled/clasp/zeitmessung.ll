; ModuleID = '/Users/karstenpoeck/lisp/coke/program/zeitmessung.lisp'
source_filename = "/Users/karstenpoeck/lisp/coke/program/zeitmessung.lisp"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

%0 = type { i8*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }
%1 = type { %2, %0*, %"class.gctools::smart_ptr", i32, %"class.gctools::GCArray_moveable.7" }
%2 = type { %"class.core::Closure_O", %"class.gctools::smart_ptr", %3, i64, i64, i64, i64 }
%3 = type { %4* }
%4 = type { %"class.core::General_O", %"class.gctools::smart_ptr.1", %5, %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", i64, i8, i8, %"class.gctools::smart_ptr" }
%5 = type { %"class.core::T_O" }
%"class.core::Closure_O" = type { %"class.core::NamedFunction_O" }
%"class.core::NamedFunction_O" = type { %"class.core::Function_O", %"class.gctools::smart_ptr" }
%"class.core::Function_O" = type { %"class.core::General_O", %"struct.std::__1::atomic" }
%"class.core::General_O" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { { %"class.core::T_O"*, i64 } (%"class.core::T_O"*, i64, %"class.core::T_O"*, %"class.core::T_O"*, %"class.core::T_O"*, %"class.core::T_O"*, ...)* }
%"class.core::T_O" = type { i8 }
%"class.gctools::smart_ptr.1" = type { %"class.core::SimpleString_O"* }
%"class.core::SimpleString_O" = type { %"class.core::AbstractSimpleVector_O" }
%"class.core::AbstractSimpleVector_O" = type { %"class.core::Array_O" }
%"class.core::Array_O" = type { %"class.core::General_O", [0 x i64] }
%"class.gctools::smart_ptr" = type { %"class.core::T_O"* }
%"class.gctools::GCArray_moveable.7" = type { i64, [0 x %"class.gctools::smart_ptr"] }

@":::global-str-/Users/karstenpoeck/lisp/coke/program/zeitmessung.lisp" = private unnamed_addr constant [55 x i8] c"/Users/karstenpoeck/lisp/coke/program/zeitmessung.lisp\00"
@source-file-info-handle = internal global i32 -1
@constants-table = internal global { i8*, i8*, i64 } undef
@"zeitmessung.lisp^1^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitmessung.lisp^1^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitmessung.lisp^1^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"zeitmessung.lisp^1^TOP-COMPILE-FILE\00"
@"zeitmessung.lisp^3^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitmessung.lisp^3^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 43, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitmessung.lisp^3^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"zeitmessung.lisp^3^TOP-COMPILE-FILE\00"
@"zeitmessung.lisp^7^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitmessung.lisp^7^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^" = private unnamed_addr constant [56 x i8] c"PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^\00"
@"PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 67, i64 75, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitmessung.lisp^7^TOP-COMPILE-FILE" = private unnamed_addr constant [36 x i8] c"zeitmessung.lisp^7^TOP-COMPILE-FILE\00"
@"zeitmessung.lisp^15^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitmessung.lisp^15^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"PRO-MERK-HASH-TABELLE-AUSGEBEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"PRO-MERK-HASH-TABELLE-AUSGEBEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 101, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitmessung.lisp^15^TOP-COMPILE-FILE" = private unnamed_addr constant [37 x i8] c"zeitmessung.lisp^15^TOP-COMPILE-FILE\00"
@"zeitmessung.lisp^31^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitmessung.lisp^31^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"PRO-ALLES-SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"PRO-ALLES-SCHLUESSEL^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 107, i64 12, i64 12, i64 0, i64 1, i64 0 }
@":::global-str-LAMBDA^COMMON-LISP^FN^^" = private unnamed_addr constant [24 x i8] c"LAMBDA^COMMON-LISP^FN^^\00"
@"LAMBDA^COMMON-LISP^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 112, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitmessung.lisp^31^TOP-COMPILE-FILE" = private unnamed_addr constant [37 x i8] c"zeitmessung.lisp^31^TOP-COMPILE-FILE\00"
@"zeitmessung.lisp^39^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitmessung.lisp^39^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"PRO-MERK-HASH-TABELLE-AUSGEBEN_0^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"PRO-MERK-HASH-TABELLE-AUSGEBEN_0^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 76, i64 228, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.1^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.1", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 231, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.2^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.2", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 268, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.3^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.3", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 269, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.4^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.4", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 300, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.5^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.5", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 301, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.6^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.6", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 317, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitmessung.lisp^39^TOP-COMPILE-FILE" = private unnamed_addr constant [37 x i8] c"zeitmessung.lisp^39^TOP-COMPILE-FILE\00"
@"zeitmessung.lisp^68^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitmessung.lisp^68^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 410, i64 420, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.7^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.7", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 421, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.8^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.8", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 422, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.9^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.9", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 423, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.10^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.10", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 459, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.11^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.11", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 475, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.12^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.12", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 511, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.13^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.13", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 516, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.14^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.14", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 110, i64 532, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitmessung.lisp^68^TOP-COMPILE-FILE" = private unnamed_addr constant [37 x i8] c"zeitmessung.lisp^68^TOP-COMPILE-FILE\00"
@"zeitmessung.lisp^200^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitmessung.lisp^200^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"PRO-MERKE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"PRO-MERKE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 534, i64 544, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitmessung.lisp^200^TOP-COMPILE-FILE" = private unnamed_addr constant [38 x i8] c"zeitmessung.lisp^200^TOP-COMPILE-FILE\00"
@"str-*MAKE-SPECIAL" = private unnamed_addr constant [14 x i8] c"*MAKE-SPECIAL\00"
@str-CORE = private unnamed_addr constant [5 x i8] c"CORE\00"
@str-PRO_MERKHASHTABELLE = private unnamed_addr constant [20 x i8] c"PRO_MERKHASHTABELLE\00"
@str-COMMON-LISP-USER = private unnamed_addr constant [17 x i8] c"COMMON-LISP-USER\00"
@str-BOUNDP = private unnamed_addr constant [7 x i8] c"BOUNDP\00"
@str-COMMON-LISP = private unnamed_addr constant [12 x i8] c"COMMON-LISP\00"
@str-TOP-LEVEL = private unnamed_addr constant [10 x i8] c"TOP-LEVEL\00"
@str-MAKE-HASH-TABLE = private unnamed_addr constant [16 x i8] c"MAKE-HASH-TABLE\00"
@str-TEST = private unnamed_addr constant [5 x i8] c"TEST\00"
@str-KEYWORD = private unnamed_addr constant [8 x i8] c"KEYWORD\00"
@str-EQ = private unnamed_addr constant [3 x i8] c"EQ\00"
@str-FDEFINITION = private unnamed_addr constant [12 x i8] c"FDEFINITION\00"
@str-FUNCTION = private unnamed_addr constant [9 x i8] c"FUNCTION\00"
@str-SYMBOL = private unnamed_addr constant [7 x i8] c"SYMBOL\00"
@str-SYMBOL-FUNCTION = private unnamed_addr constant [16 x i8] c"SYMBOL-FUNCTION\00"
@str-ERROR = private unnamed_addr constant [6 x i8] c"ERROR\00"
@str-TYPE-ERROR = private unnamed_addr constant [11 x i8] c"TYPE-ERROR\00"
@str-DATUM = private unnamed_addr constant [6 x i8] c"DATUM\00"
@str-EXPECTED-TYPE = private unnamed_addr constant [14 x i8] c"EXPECTED-TYPE\00"
@str-OR = private unnamed_addr constant [3 x i8] c"OR\00"
@str-PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN = private unnamed_addr constant [36 x i8] c"PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN\00"
@str-SETF-LAMBDA-LIST = private unnamed_addr constant [17 x i8] c"SETF-LAMBDA-LIST\00"
@str-SET-SOURCE-INFO = private unnamed_addr constant [16 x i8] c"SET-SOURCE-INFO\00"
@str-CURRENT-SOURCE-FILE = private unnamed_addr constant [20 x i8] c"CURRENT-SOURCE-FILE\00"
@"str-*CURRENT-FORM-LINENO*" = private unnamed_addr constant [22 x i8] c"*CURRENT-FORM-LINENO*\00"
@str-COMPILER = private unnamed_addr constant [9 x i8] c"COMPILER\00"
@str-HASH-TABLE-P = private unnamed_addr constant [13 x i8] c"HASH-TABLE-P\00"
@str-CLRHASH = private unnamed_addr constant [8 x i8] c"CLRHASH\00"
@str-CONS = private unnamed_addr constant [5 x i8] c"CONS\00"
@str-LIST = private unnamed_addr constant [5 x i8] c"LIST\00"
@str-HASH-TABLE-SETF-GETHASH = private unnamed_addr constant [24 x i8] c"HASH-TABLE-SETF-GETHASH\00"
@str-PRO-MERK-HASH-TABELLE-RUECKSETZEN = private unnamed_addr constant [34 x i8] c"PRO-MERK-HASH-TABELLE-RUECKSETZEN\00"
@"str-&REST" = private unnamed_addr constant [6 x i8] c"&REST\00"
@str-ALLE-SCHLUESSEL = private unnamed_addr constant [16 x i8] c"ALLE-SCHLUESSEL\00"
@str-PRO-MERK-HASH-TABELLE-AUSGEBEN_0 = private unnamed_addr constant [33 x i8] c"PRO-MERK-HASH-TABELLE-AUSGEBEN_0\00"
@str-NACHFOLGER_GENERIEREN = private unnamed_addr constant [22 x i8] c"NACHFOLGER_GENERIEREN\00"
@"str-PRO=STOERENFRIEDE" = private unnamed_addr constant [18 x i8] c"PRO=STOERENFRIEDE\00"
@str-ZUSTAND-WIEDERHERSTELLEN1 = private unnamed_addr constant [26 x i8] c"ZUSTAND-WIEDERHERSTELLEN1\00"
@"str-REMOVE_PRO=SUCHVORSCHLAG" = private unnamed_addr constant [25 x i8] c"REMOVE_PRO=SUCHVORSCHLAG\00"
@str-ZYKLUSTEST = private unnamed_addr constant [11 x i8] c"ZYKLUSTEST\00"
@str-WERT_SETZEN = private unnamed_addr constant [12 x i8] c"WERT_SETZEN\00"
@str-WERT_ZURUECKZIEHEN = private unnamed_addr constant [19 x i8] c"WERT_ZURUECKZIEHEN\00"
@str-PUSH = private unnamed_addr constant [5 x i8] c"PUSH\00"
@str-KORREKTURSUCHEN = private unnamed_addr constant [16 x i8] c"KORREKTURSUCHEN\00"
@str-ZUSTAND-WIEDERHERSTELLEN2 = private unnamed_addr constant [26 x i8] c"ZUSTAND-WIEDERHERSTELLEN2\00"
@str-PRO-MERK-HASH-TABELLE-AUSGEBEN = private unnamed_addr constant [31 x i8] c"PRO-MERK-HASH-TABELLE-AUSGEBEN\00"
@str-MAPHASH = private unnamed_addr constant [8 x i8] c"MAPHASH\00"
@str-PRO-ALLES-SCHLUESSEL = private unnamed_addr constant [21 x i8] c"PRO-ALLES-SCHLUESSEL\00"
@str-LAMBDA = private unnamed_addr constant [7 x i8] c"LAMBDA\00"
@str-KEY = private unnamed_addr constant [4 x i8] c"KEY\00"
@str-LISTE = private unnamed_addr constant [6 x i8] c"LISTE\00"
@str-EQ-INCOMPARABLE = private unnamed_addr constant [16 x i8] c"EQ-INCOMPARABLE\00"
@str-CLASP-CLEAVIR = private unnamed_addr constant [14 x i8] c"CLASP-CLEAVIR\00"
@str-EQL-UNDERLYING = private unnamed_addr constant [15 x i8] c"EQL-UNDERLYING\00"
@str-FIXNUM = private unnamed_addr constant [7 x i8] c"FIXNUM\00"
@str-SINGLE-FLOAT = private unnamed_addr constant [13 x i8] c"SINGLE-FLOAT\00"
@str-DOUBLE-FLOAT = private unnamed_addr constant [13 x i8] c"DOUBLE-FLOAT\00"
@str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM = private unnamed_addr constant [34 x i8] c"CONVERT-OVERFLOW-RESULT-TO-BIGNUM\00"
@"str-TWO-ARG-+" = private unnamed_addr constant [10 x i8] c"TWO-ARG-+\00"
@str-FORMAT-ERROR = private unnamed_addr constant [13 x i8] c"FORMAT-ERROR\00"
@str-COMPLAINT = private unnamed_addr constant [10 x i8] c"COMPLAINT\00"
@"str-Required argument missing" = private unnamed_addr constant [26 x i8] c"Required argument missing\00"
@str-CONTROL-STRING = private unnamed_addr constant [15 x i8] c"CONTROL-STRING\00"
@"str-~2%Gesamt   :Minuten~7a Sekunden ~7a  Bytes ~A~%" = private unnamed_addr constant [49 x i8] c"~2%Gesamt   :Minuten~7a Sekunden ~7a  Bytes ~A~%\00"
@str-OFFSET = private unnamed_addr constant [7 x i8] c"OFFSET\00"
@str-TERPRI = private unnamed_addr constant [7 x i8] c"TERPRI\00"
@"str-TWO-ARG-<" = private unnamed_addr constant [10 x i8] c"TWO-ARG-<\00"
@str-WRITE-STRING = private unnamed_addr constant [13 x i8] c"WRITE-STRING\00"
@"str-Gesamt   :Minuten" = private unnamed_addr constant [18 x i8] c"Gesamt   :Minuten\00"
@str-FORMAT-PRINC = private unnamed_addr constant [13 x i8] c"FORMAT-PRINC\00"
@"str- Sekunden " = private unnamed_addr constant [11 x i8] c" Sekunden \00"
@"str-  Bytes " = private unnamed_addr constant [9 x i8] c"  Bytes \00"
@str-PRINC = private unnamed_addr constant [6 x i8] c"PRINC\00"
@str-STRINGP = private unnamed_addr constant [8 x i8] c"STRINGP\00"
@str- = private unnamed_addr constant [1 x i8] zeroinitializer
@str-MAKE-STRING-OUTPUT-STREAM-FROM-STRING = private unnamed_addr constant [38 x i8] c"MAKE-STRING-OUTPUT-STREAM-FROM-STRING\00"
@str-MAKE-STRING-OUTPUT-STREAM = private unnamed_addr constant [26 x i8] c"MAKE-STRING-OUTPUT-STREAM\00"
@str-GET-OUTPUT-STREAM-STRING = private unnamed_addr constant [25 x i8] c"GET-OUTPUT-STREAM-STRING\00"
@"str-*STANDARD-OUTPUT*" = private unnamed_addr constant [18 x i8] c"*STANDARD-OUTPUT*\00"
@"str-      ~10,4f       ~10,4f         ~14A~2%" = private unnamed_addr constant [42 x i8] c"      ~10,4f       ~10,4f         ~14A~2%\00"
@"str-      " = private unnamed_addr constant [7 x i8] c"      \00"
@str-FORMAT-FIXED = private unnamed_addr constant [13 x i8] c"FORMAT-FIXED\00"
@"str-       " = private unnamed_addr constant [8 x i8] c"       \00"
@"str-         " = private unnamed_addr constant [10 x i8] c"         \00"
@str-FLOAT = private unnamed_addr constant [6 x i8] c"FLOAT\00"
@"str-TWO-ARG-*" = private unnamed_addr constant [10 x i8] c"TWO-ARG-*\00"
@"str-TWO-ARG-/" = private unnamed_addr constant [10 x i8] c"TWO-ARG-/\00"
@"str-~40A ~6@a ~8@a ~14@a ~14@a ~15@A~2%" = private unnamed_addr constant [36 x i8] c"~40A ~6@a ~8@a ~14@a ~14@a ~15@A~2%\00"
@"str- " = private unnamed_addr constant [2 x i8] c" \00"
@str-Operation = private unnamed_addr constant [10 x i8] c"Operation\00"
@str-number = private unnamed_addr constant [7 x i8] c"number\00"
@str-Percent = private unnamed_addr constant [8 x i8] c"Percent\00"
@"str-Duration (m)" = private unnamed_addr constant [13 x i8] c"Duration (m)\00"
@"str-Duration (s)" = private unnamed_addr constant [13 x i8] c"Duration (s)\00"
@str-Storage = private unnamed_addr constant [8 x i8] c"Storage\00"
@"str-~40a ~6d ~8,2f ~14,4f ~14,4f ~15d~%" = private unnamed_addr constant [36 x i8] c"~40a ~6d ~8,2f ~14,4f ~14,4f ~15d~%\00"
@str-FORMAT-PRINT-INTEGER = private unnamed_addr constant [21 x i8] c"FORMAT-PRINT-INTEGER\00"
@"str-&OPTIONAL" = private unnamed_addr constant [10 x i8] c"&OPTIONAL\00"
@str-SCHLUESSELLISTE = private unnamed_addr constant [16 x i8] c"SCHLUESSELLISTE\00"
@str-NUMBER = private unnamed_addr constant [7 x i8] c"NUMBER\00"
@str-STREAM = private unnamed_addr constant [7 x i8] c"STREAM\00"
@str-FORMAT-ARG-158829 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158829\00"
@str-QUOTE = private unnamed_addr constant [6 x i8] c"QUOTE\00"
@str-FORMAT-ARG-158830 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158830\00"
@str-FORMAT-ARG-158831 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158831\00"
@str-FORMAT-ARG-158832 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158832\00"
@str-FORMAT-ARG-158833 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158833\00"
@str-FORMAT-ARG-158834 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158834\00"
@str-ARGS = private unnamed_addr constant [5 x i8] c"ARGS\00"
@str-FORMAT-ARG-158890 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158890\00"
@str-FORMAT-ARG-158891 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158891\00"
@str-FORMAT-ARG-158892 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158892\00"
@str-FORMAT-ARG-158893 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158893\00"
@str-FORMAT-ARG-158894 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158894\00"
@str-FORMAT-ARG-158895 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158895\00"
@str-FORMAT-ARG-158759 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158759\00"
@str-FORMAT-ARG-158760 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158760\00"
@str-FORMAT-ARG-158761 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158761\00"
@str-FORMAT-ARG-158791 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158791\00"
@str-FORMAT-ARG-158792 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158792\00"
@str-FORMAT-ARG-158793 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-158793\00"
@str-VOR_MINIMUM_AUS_AGENDA_LESEN_FUNKTION = private unnamed_addr constant [38 x i8] c"VOR_MINIMUM_AUS_AGENDA_LESEN_FUNKTION\00"
@str-WICHTIGSTES_ELEMENT_LESEN = private unnamed_addr constant [26 x i8] c"WICHTIGSTES_ELEMENT_LESEN\00"
@str-VOR_VORSCHLAGSBERECHNUNG = private unnamed_addr constant [25 x i8] c"VOR_VORSCHLAGSBERECHNUNG\00"
@str-BESTER_VORSCHLAG = private unnamed_addr constant [17 x i8] c"BESTER_VORSCHLAG\00"
@str-KORRIGIEREN = private unnamed_addr constant [12 x i8] c"KORRIGIEREN\00"
@str-NACHOPTIMIERUNG = private unnamed_addr constant [16 x i8] c"NACHOPTIMIERUNG\00"
@str-ZEROP = private unnamed_addr constant [6 x i8] c"ZEROP\00"
@"str-~2%~10@a ~10@a ~14@a~%" = private unnamed_addr constant [23 x i8] c"~2%~10@a ~10@a ~14@a~%\00"
@"str-Total (m)" = private unnamed_addr constant [10 x i8] c"Total (m)\00"
@"str-Total (s)" = private unnamed_addr constant [10 x i8] c"Total (s)\00"
@str-Bytes = private unnamed_addr constant [6 x i8] c"Bytes\00"
@"str-~10,4f ~10,4f ~14d~2%" = private unnamed_addr constant [22 x i8] c"~10,4f ~10,4f ~14d~2%\00"
@"str-~25A ~10@a ~6@a ~9@a ~14@a ~14@a ~15@A~2%" = private unnamed_addr constant [42 x i8] c"~25A ~10@a ~6@a ~9@a ~14@a ~14@a ~15@A~2%\00"
@str-method = private unnamed_addr constant [7 x i8] c"method\00"
@str-percent = private unnamed_addr constant [8 x i8] c"percent\00"
@"str-duration (m)" = private unnamed_addr constant [13 x i8] c"duration (m)\00"
@"str-duration (s)" = private unnamed_addr constant [13 x i8] c"duration (s)\00"
@"str-storage need" = private unnamed_addr constant [13 x i8] c"storage need\00"
@str-MAPCAR = private unnamed_addr constant [7 x i8] c"MAPCAR\00"
@"str-~25a ~10@a ~6d ~8,2f% ~14,4f ~14,4f ~15d~%" = private unnamed_addr constant [43 x i8] c"~25a ~10@a ~6d ~8,2f% ~14,4f ~14,4f ~15d~%\00"
@"str-% " = private unnamed_addr constant [3 x i8] c"% \00"
@str-Presort = private unnamed_addr constant [8 x i8] c"Presort\00"
@str-Selection = private unnamed_addr constant [10 x i8] c"Selection\00"
@str-Propose = private unnamed_addr constant [8 x i8] c"Propose\00"
@"str-Exchange local" = private unnamed_addr constant [15 x i8] c"Exchange local\00"
@"str-Exchange global" = private unnamed_addr constant [16 x i8] c"Exchange global\00"
@str-GETHASH = private unnamed_addr constant [8 x i8] c"GETHASH\00"
@str-VORSORTIEREN = private unnamed_addr constant [13 x i8] c"VORSORTIEREN\00"
@str-MAX = private unnamed_addr constant [4 x i8] c"MAX\00"
@str-PRO-MERK-HASH-TABELLE-AUSGEBEN_2 = private unnamed_addr constant [33 x i8] c"PRO-MERK-HASH-TABELLE-AUSGEBEN_2\00"
@str-METHODE = private unnamed_addr constant [8 x i8] c"METHODE\00"
@str-KORREKTURTICKS = private unnamed_addr constant [15 x i8] c"KORREKTURTICKS\00"
@str-EXCHANGEFAKTOR = private unnamed_addr constant [15 x i8] c"EXCHANGEFAKTOR\00"
@str-FORMAT-ARG-162048 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-162048\00"
@str-FORMAT-ARG-162049 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-162049\00"
@str-FORMAT-ARG-162050 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-162050\00"
@str-FORMAT-ARG-162051 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-162051\00"
@str-FORMAT-ARG-162052 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-162052\00"
@str-FORMAT-ARG-162053 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-162053\00"
@str-FORMAT-ARG-162054 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-162054\00"
@str-FORMAT-ARG-161950 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161950\00"
@str-FORMAT-ARG-161951 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161951\00"
@str-FORMAT-ARG-161952 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161952\00"
@str-FORMAT-ARG-161988 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161988\00"
@str-FORMAT-ARG-161989 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161989\00"
@str-FORMAT-ARG-161990 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161990\00"
@str-FORMAT-ARG-161991 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161991\00"
@str-FORMAT-ARG-161992 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161992\00"
@str-FORMAT-ARG-161993 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161993\00"
@str-FORMAT-ARG-161994 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161994\00"
@str-A = private unnamed_addr constant [2 x i8] c"A\00"
@str-B = private unnamed_addr constant [2 x i8] c"B\00"
@str-FORMAT-ARG-161914 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161914\00"
@str-FORMAT-ARG-161915 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161915\00"
@str-FORMAT-ARG-161916 = private unnamed_addr constant [18 x i8] c"FORMAT-ARG-161916\00"
@str-PRO-MERKE = private unnamed_addr constant [10 x i8] c"PRO-MERKE\00"
@str-EINTRAG = private unnamed_addr constant [8 x i8] c"EINTRAG\00"
@str-ZEIT = private unnamed_addr constant [5 x i8] c"ZEIT\00"
@str-BYTES = private unnamed_addr constant [6 x i8] c"BYTES\00"
@CONTAB4422 = internal global [545 x {}*] undef
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 19, void ()* @CLASP-CTOR, i8* null }]

; Function Attrs: uwtable
define internal void @RUN-ALL() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !9 {
entry:
  tail call void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }* nonnull @constants-table, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 0), i64 545, {}* null)
  tail call void @ltvc_assign_source_file_info_handle(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/program/zeitmessung.lisp", i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/program/zeitmessung.lisp", i64 0, i64 0), i64 0, i32 1, i32* nonnull @source-file-info-handle)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.33)
  ret void
}

; Function Attrs: nounwind
declare i32 @__gxx_personality_v0(...) #1

; Function Attrs: nounwind
declare void @ltvc_assign_source_file_info_handle(i8*, i8*, i64, i32, i32*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitmessung.lisp^1^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !13 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitmessung.lisp^1^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %tag4, %normal-dest23
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag4:                                             ; preds = %normal-dest23
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %14, {}* %24)
  br label %tag

cleanup-lpad:                                     ; preds = %10, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 0), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 8), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %ptrtoint17 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %21, i64 1, {}* %22, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt33 = extractvalue { {}*, i64 } %23, 0
  %.elt35 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt35, 0
  %24 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %24, {}* %.elt33
  %25 = icmp eq {}* %object.0, %24
  %.val = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G158484.0 = select i1 %25, {}* %.val, {}* %24
  %26 = icmp eq {}* %G158484.0, %24
  br i1 %26, label %tag, label %tag4
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #1

; Function Attrs: nounwind
declare void @cc_pop_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @cc_push_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*, { i32, i32, i8*, i8* }*, i64) local_unnamed_addr #1

declare {}* @cc_safe_fdefinition({}*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_setSymbolValue({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitmessung.lisp^3^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !23 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitmessung.lisp^3^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G158513.0 = phi {}* [ %18, %header-check-br ], [ %G158513.1, %normal-dest17 ], [ %G158513.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 43), align 8
  %ptrtoint20 = ptrtoint {}* %G158513.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G158513.0, i64 2, {}* %"closure->PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 43), align 8
  %"closure->PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 36, i64 3, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 24), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %24 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 40), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158513.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 45), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 47), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 49), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 52), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 12 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 43), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158513.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !24 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 16), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 18), align 16
  %15 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 22), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %14, {}* %16, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %17, 0
  %.elt16 = extractvalue { {}*, i64 } %17, 1
  %cond = icmp eq i64 %.elt16, 0
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158497.0 = select i1 %cond, {}* %18, {}* %.elt
  %19 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %19, {}* %G158497.0)
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %20 = insertvalue { {}*, i64 } undef, {}* %G158497.0, 0
  %21 = insertvalue { {}*, i64 } %20, i64 1, 1
  ret { {}*, i64 } %21
}

declare {}* @cc_enclose({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) local_unnamed_addr #3

declare {}* @cc_safe_setfdefinition({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitmessung.lisp^7^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !25 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitmessung.lisp^7^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G158563.0 = phi {}* [ %18, %header-check-br ], [ %G158563.1, %normal-dest17 ], [ %G158563.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 67), align 8
  %ptrtoint43 = ptrtoint {}* %G158563.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G158563.0, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-RUECKSETZEN", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 67), align 8
  %"closure->PRO-MERK-HASH-TABELLE-RUECKSETZEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 154, i64 7, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 24), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158563.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %28 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 66), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158563.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 45), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 69), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-RUECKSETZEN", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 47), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 74), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-RUECKSETZEN", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 52), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 28 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 67), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !26 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 0
  br i1 %enough-args, label %error, label %process-rest-argument

tag:                                              ; preds = %tag7
  %9 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest36 unwind label %cleanup-lpad.loopexit

tag2:                                             ; preds = %normal-dest109
  %11 = add i64 %20, 5
  %12 = inttoptr i64 %11 to {}**
  %13 = load {}*, {}** %12, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag14.backedge

tag14.backedge:                                   ; preds = %tag2, %normal-dest79
  %14 = phi {}* [ %.pre, %tag2 ], [ %57, %normal-dest79 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %13, %tag2 ], [ %"%DOLIST-VAR.1", %normal-dest79 ]
  %15 = icmp eq {}* %"%DOLIST-VAR.0.be", %14
  br i1 %15, label %tag11, label %tag7

tag3:                                             ; preds = %normal-dest32
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 43), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest51 unwind label %cleanup-lpad.loopexit.split-lp

tag5:                                             ; preds = %normal-dest51, %normal-dest128
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %19 = icmp eq {}* %37, %18
  br i1 %19, label %tag11, label %tag7.preheader

tag7.preheader:                                   ; preds = %tag5
  br label %tag7

tag7:                                             ; preds = %tag7.preheader, %tag14.backedge
  %.val180 = phi {}* [ %14, %tag14.backedge ], [ %18, %tag7.preheader ]
  %"%DOLIST-VAR.0183" = phi {}* [ %"%DOLIST-VAR.0.be", %tag14.backedge ], [ %37, %tag7.preheader ]
  %20 = ptrtoint {}* %"%DOLIST-VAR.0183" to i64
  %tag-only149 = and i64 %20, 7
  %consp-test = icmp eq i64 %tag-only149, 3
  %.val = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G158628.0 = select i1 %consp-test, {}* %.val, {}* %.val180
  %21 = icmp eq {}* %G158628.0, %.val180
  br i1 %21, label %tag, label %tag8

tag8:                                             ; preds = %tag7
  %22 = add i64 %20, -3
  %23 = inttoptr i64 %22 to {}**
  %24 = load {}*, {}** %23, align 8
  br label %tag10

tag9:                                             ; preds = %tag12
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest72 unwind label %cleanup-lpad.loopexit

tag10:                                            ; preds = %normal-dest43, %tag8
  %SCHLUESSEL.0 = phi {}* [ %24, %tag8 ], [ %SCHLUESSEL.1, %normal-dest43 ]
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %28 = invoke {}* @cc_safe_symbol_value({}* %27)
          to label %normal-dest86 unwind label %cleanup-lpad.loopexit

tag11:                                            ; preds = %tag12, %tag14.backedge, %tag5
  %29 = phi {}* [ %37, %tag5 ], [ %14, %tag14.backedge ], [ %32, %tag12 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %30 = insertvalue { {}*, i64 } undef, {}* %29, 0
  %31 = insertvalue { {}*, i64 } %30, i64 1, 1
  ret { {}*, i64 } %31

tag12:                                            ; preds = %normal-dest109
  %32 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %33 = icmp eq {}* %"%DOLIST-VAR.0183", %32
  %.val181 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G158594.0 = select i1 %33, {}* %.val181, {}* %32
  %34 = icmp eq {}* %G158594.0, %32
  br i1 %34, label %tag9, label %tag11

tag18:                                            ; preds = %normal-dest32
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 58), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest126 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag, %normal-dest36, %tag9, %normal-dest72, %tag10, %normal-dest86, %normal-dest88, %normal-dest95, %normal-dest102
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %process-rest-argument, %normal-dest28, %normal-dest29, %tag3, %normal-dest51, %tag18, %normal-dest126, %normal-dest128
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @":::global-str-PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^", i64 0, i64 0), i64 %nargs, i64 0)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

process-rest-argument:                            ; preds = %entry
  %37 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* %"remaining-nargs*")
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 56), align 16
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest28 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest28:                                    ; preds = %process-rest-argument
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %41 = invoke {}* @cc_safe_symbol_value({}* %40)
          to label %normal-dest29 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest29:                                    ; preds = %normal-dest28
  %ptrtoint = ptrtoint {}* %39 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %39, i64 1, {}* %41, {}* null, {}* null, {}* null)
          to label %normal-dest32 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest32:                                    ; preds = %normal-dest29
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt144 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt144, 0
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158638.0 = select i1 %cond, {}* %43, {}* %.elt
  %44 = icmp eq {}* %G158638.0, %43
  br i1 %44, label %tag3, label %tag18

normal-dest36:                                    ; preds = %tag
  %45 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %47 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint37 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint38 = add i64 %ptrtoint37, 7
  %entry-point-addr39 = inttoptr i64 %entry-point-addr-uint38 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point40 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr39, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point40({}* %10, i64 5, {}* %45, {}* %46, {}* %"%DOLIST-VAR.0183", {}* %47, {}* %48)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit

normal-dest43:                                    ; preds = %normal-dest36
  %.elt164 = extractvalue { {}*, i64 } %49, 0
  %.elt166 = extractvalue { {}*, i64 } %49, 1
  %cond142 = icmp eq i64 %.elt166, 0
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %SCHLUESSEL.1 = select i1 %cond142, {}* %50, {}* %.elt164
  br label %tag10

normal-dest51:                                    ; preds = %tag3
  %ptrtoint52 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint53 = add i64 %ptrtoint52, 7
  %entry-point-addr54 = inttoptr i64 %entry-point-addr-uint53 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point55 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr54, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point55({}* %17, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %tag5 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest72:                                    ; preds = %tag9
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %53 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %54 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint73 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint74 = add i64 %ptrtoint73, 7
  %entry-point-addr75 = inttoptr i64 %entry-point-addr-uint74 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point76 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr75, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point76({}* %26, i64 5, {}* %52, {}* %53, {}* %"%DOLIST-VAR.0183", {}* %54, {}* %55)
          to label %normal-dest79 unwind label %cleanup-lpad.loopexit

normal-dest79:                                    ; preds = %normal-dest72
  %.elt160 = extractvalue { {}*, i64 } %56, 0
  %.elt162 = extractvalue { {}*, i64 } %56, 1
  %cond141 = icmp eq i64 %.elt162, 0
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond141, {}* %57, {}* %.elt160
  br label %tag14.backedge

normal-dest86:                                    ; preds = %tag10
  %58 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %59 = invoke {}* @cc_safe_fdefinition({}* %58)
          to label %normal-dest88 unwind label %cleanup-lpad.loopexit

normal-dest88:                                    ; preds = %normal-dest86
  %ptrtoint89 = ptrtoint {}* %59 to i64
  %entry-point-addr-uint90 = add i64 %ptrtoint89, 7
  %entry-point-addr91 = inttoptr i64 %entry-point-addr-uint90 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point92 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr91, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point92({}* %59, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest95 unwind label %cleanup-lpad.loopexit

normal-dest95:                                    ; preds = %normal-dest88
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %62 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 64), align 16
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest102 unwind label %cleanup-lpad.loopexit

normal-dest102:                                   ; preds = %normal-dest95
  %.elt153 = extractvalue { {}*, i64 } %60, 1
  %cond140 = icmp eq i64 %.elt153, 0
  %.elt151 = extractvalue { {}*, i64 } %60, 0
  %G158545158546.0 = select i1 %cond140, {}* %61, {}* %.elt151
  %ptrtoint103 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint104 = add i64 %ptrtoint103, 7
  %entry-point-addr105 = inttoptr i64 %entry-point-addr-uint104 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point106 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr105, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point106({}* %63, i64 3, {}* %28, {}* %SCHLUESSEL.0, {}* %G158545158546.0, {}* null)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit

normal-dest109:                                   ; preds = %normal-dest102
  br i1 %consp-test, label %tag2, label %tag12

normal-dest126:                                   ; preds = %tag18
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %66 = invoke {}* @cc_safe_symbol_value({}* %65)
          to label %normal-dest128 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest128:                                   ; preds = %normal-dest126
  %ptrtoint129 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint130 = add i64 %ptrtoint129, 7
  %entry-point-addr131 = inttoptr i64 %entry-point-addr-uint130 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point132 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr131, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point132({}* %36, i64 1, {}* %66, {}* null, {}* null, {}* null)
          to label %tag5 unwind label %cleanup-lpad.loopexit.split-lp
}

declare void @va_notEnoughArgumentsException(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @unreachableError() local_unnamed_addr #1

; Function Attrs: nounwind
declare {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }*, i64*) local_unnamed_addr #1

declare {}* @cc_safe_symbol_value({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitmessung.lisp^15^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !27 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitmessung.lisp^15^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G158661.0 = phi {}* [ %18, %header-check-br ], [ %G158661.1, %normal-dest54 ], [ %G158661.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 101), align 8
  %ptrtoint13 = ptrtoint {}* %G158661.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G158661.0, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest47, %maybe-more-tests67, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 101), align 8
  %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"PRO-MERK-HASH-TABELLE-AUSGEBEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERK-HASH-TABELLE-AUSGEBEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 462, i64 15, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 24), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 45), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 47), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 103), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 52), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 60 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 101), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests67
  %ptrtoint48 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158661.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag1

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %41 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 100), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158661.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"PRO-MERK-HASH-TABELLE-AUSGEBEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !28 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERK-HASH-TABELLE-AUSGEBEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest12, %mvn-final, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 76), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 78), align 16
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 1, {}* %14, {}* null, {}* null, {}* null)
          to label %mvn-final unwind label %cleanup-lpad

mvn-final:                                        ; preds = %normal-dest5
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 76), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %mvn-final
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 81), align 8
  %ptrtoint13 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest12
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %19
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitmessung.lisp^31^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !29 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitmessung.lisp^31^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G158704.0 = phi {}* [ %18, %header-check-br ], [ %G158704.1, %normal-dest54 ], [ %G158704.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 107), align 8
  %ptrtoint13 = ptrtoint {}* %G158704.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G158704.0, i64 2, {}* %"closure->PRO-ALLES-SCHLUESSEL", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 107), align 8
  %"closure->PRO-ALLES-SCHLUESSEL" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"PRO-ALLES-SCHLUESSEL^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-ALLES-SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 837, i64 31, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 24), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 45), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->PRO-ALLES-SCHLUESSEL", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 47), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 109), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->PRO-ALLES-SCHLUESSEL", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 52), align 16
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 124 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 107), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 106), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158704.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158704.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"PRO-ALLES-SCHLUESSEL^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !30 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-ALLES-SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %normal-dest9, %normal-dest8, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = invoke {}* @cc_makeCell()
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  call void @cc_writeCell({}* %12, {}* %13)
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 104), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 837, i64 31, i64 0, i64 1, {}* %12)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest6
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %18 = invoke {}* @cc_safe_symbol_value({}* %17)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest8
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %"closure->LAMBDA", {}* %18, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = ptrtoint {}* %12 to i64
  %21 = add i64 %20, -3
  %22 = inttoptr i64 %21 to {}**
  %23 = load {}*, {}** %22, align 8, !tbaa !31
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %24 = insertvalue { {}*, i64 } undef, {}* %23, 0
  %25 = insertvalue { {}*, i64 } %24, i64 1, 1
  ret { {}*, i64 } %25
}

declare {}* @cc_makeCell() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_writeCell({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !33 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to %0*)) #7
          to label %.noexc20 unwind label %cleanup-lpad

.noexc20:                                         ; preds = %13
  unreachable

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest5, %normal-dest
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %11
  %15 = ptrtoint {}* %closure-ptr to i64
  %16 = and i64 %15, -8
  %17 = inttoptr i64 %16 to %1*
  %18 = getelementptr inbounds %1, %1* %17, i64 0, i32 4, i32 1, i64 0, i32 0
  %19 = load %"class.core::T_O"*, %"class.core::T_O"** %18, align 8, !tbaa !31
  %20 = bitcast %"class.core::T_O"* %19 to {}*
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %23 = ptrtoint %"class.core::T_O"* %19 to i64
  %24 = add i64 %23, -3
  %25 = inttoptr i64 %24 to {}**
  %26 = load {}*, {}** %25, align 8, !tbaa !31
  %ptrtoint = ptrtoint {}* %22 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %22, i64 2, {}* %farg0, {}* %26, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt16 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt16, 0
  %28 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158739.0 = select i1 %cond, {}* %28, {}* %.elt
  call void @cc_writeCell({}* %20, {}* %G158739.0)
  %29 = load {}*, {}** %25, align 8, !tbaa !31
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %30 = insertvalue { {}*, i64 } undef, {}* %29, 0
  %31 = insertvalue { {}*, i64 } %30, i64 1, 1
  ret { {}*, i64 } %31
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitmessung.lisp^39^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !34 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitmessung.lisp^39^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G158957.0 = phi {}* [ %18, %header-check-br ], [ %G158957.1, %normal-dest26 ], [ %G158957.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 76), align 16
  %ptrtoint43 = ptrtoint {}* %G158957.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G158957.0, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN_0", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %maybe-more-tests21, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 76), align 16
  %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN_0" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"PRO-MERK-HASH-TABELLE-AUSGEBEN_0^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERK-HASH-TABELLE-AUSGEBEN_0^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1049, i64 39, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 24), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %26 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 217), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158957.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag4

normal-dest30:                                    ; preds = %maybe-more-tests21
  %ptrtoint31 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt101 = extractvalue { {}*, i64 } %30, 0
  %.elt103 = extractvalue { {}*, i64 } %30, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158957.2 = select i1 %cond82, {}* %31, {}* %.elt101
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 45), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 218), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN_0", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 47), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 225), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN_0", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 52), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 156 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 76), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"PRO-MERK-HASH-TABELLE-AUSGEBEN_0^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !35 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %111 [
    i64 1, label %case-opt1-bb
    i64 0, label %req-bb
  ]

tag6:                                             ; preds = %normal-dest2144, %header-check-br1519
  %9 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest371 unwind label %cleanup-lpad

tag15:                                            ; preds = %normal-dest2003, %header-check-br1630, %normal-dest1328
  %G160481.0 = phi {}* [ %G160481.1, %normal-dest1328 ], [ %"closure->LAMBDA", %header-check-br1630 ], [ %G160481.2, %normal-dest2003 ]
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 196), align 16
  %12 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 197), align 8
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 198), align 16
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 199), align 8
  %15 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 200), align 16
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 201), align 8
  %ptrtoint435 = ptrtoint {}* %G160481.0 to i64
  %entry-point-addr-uint436 = add i64 %ptrtoint435, 7
  %entry-point-addr437 = inttoptr i64 %entry-point-addr-uint436 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point438 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr437, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point438({}* %G160481.0, i64 7, {}* %151, {}* %11, {}* %12, {}* %13, {}* %14, {}* %15, {}* %16)
          to label %tag80 unwind label %cleanup-lpad

tag23:                                            ; preds = %tag97, %header-check-br2089
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest511 unwind label %cleanup-lpad

tag28:                                            ; preds = %normal-dest2083, %normal-dest871, %normal-dest798
  %G161095.0 = phi {}* [ %180, %normal-dest798 ], [ %193, %normal-dest871 ], [ %G161095.1, %normal-dest2083 ]
  %ptrtoint538 = ptrtoint {}* %216 to i64
  %entry-point-addr-uint539 = add i64 %ptrtoint538, 7
  %entry-point-addr540 = inttoptr i64 %entry-point-addr-uint539 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point541 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr540, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point541({}* %216, i64 1, {}* %G161095.0, {}* null, {}* null, {}* null)
          to label %normal-dest544 unwind label %cleanup-lpad

tag32:                                            ; preds = %normal-dest2041
  %21 = icmp eq i64 %tag-only1436, 6
  %fixnum-tag-only10152284 = and i64 %ptrtoint1435, 3
  %fixnump-test1016 = icmp eq i64 %fixnum-tag-only10152284, 0
  %or.cond = or i1 %21, %fixnump-test1016
  br i1 %or.cond, label %tag224, label %tag47

tag38:                                            ; preds = %normal-dest399, %normal-dest2015, %normal-dest1584
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %22, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.1", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.1^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1049, i64 39, i64 0, i64 0)
          to label %normal-dest599 unwind label %cleanup-lpad

tag40:                                            ; preds = %tag134
  %23 = icmp eq i64 %tag-only1436, 6
  br i1 %23, label %tag76, label %tag285

tag42:                                            ; preds = %normal-dest1742, %normal-dest1027, %normal-dest802
  %G160904.0 = phi {}* [ %183, %normal-dest802 ], [ %G160904.1, %normal-dest1027 ], [ %361, %normal-dest1742 ]
  %ptrtoint629 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint630 = add i64 %ptrtoint629, 7
  %entry-point-addr631 = inttoptr i64 %entry-point-addr-uint630 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point632 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr631, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point632({}* %64, i64 1, {}* %G160904.0, {}* null, {}* null, {}* null)
          to label %normal-dest635 unwind label %cleanup-lpad

tag47:                                            ; preds = %switch.early.test2712, %tag32
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest667 unwind label %cleanup-lpad

tag60:                                            ; preds = %tag82
  %trunc2693 = trunc i64 %32 to i3
  switch i3 %trunc2693, label %tag119 [
    i3 -2, label %tag272
    i3 1, label %header-check-br896
  ]

tag67:                                            ; preds = %normal-dest1905
  %27 = icmp eq i64 %tag-only1210, 6
  %fixnum-tag-only17392455 = and i64 %ptrtoint1209, 3
  %fixnump-test1740 = icmp eq i64 %fixnum-tag-only17392455, 0
  %or.cond2679 = or i1 %27, %fixnump-test1740
  br i1 %or.cond2679, label %tag82, label %tag105

tag76:                                            ; preds = %tag40
  %28 = invoke float @from_object_float({}* %222)
          to label %normal-dest797 unwind label %cleanup-lpad

tag77:                                            ; preds = %tag272
  %29 = invoke float @from_object_float({}* %269)
          to label %normal-dest800 unwind label %cleanup-lpad

tag80:                                            ; preds = %tag15, %normal-dest1640, %tag86
  %30 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 104), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest827 unwind label %cleanup-lpad

tag82:                                            ; preds = %switch.early.test, %switch.early.test, %header-check-br659, %header-check-br1208, %header-check-br1208, %tag67
  %32 = ptrtoint %"class.core::T_O"* %268 to i64
  %fixnum-tag-only8482460 = and i64 %32, 3
  %fixnump-test849 = icmp eq i64 %fixnum-tag-only8482460, 0
  br i1 %fixnump-test849, label %tag119, label %tag60

tag83:                                            ; preds = %normal-dest472
  %33 = icmp eq i64 %tag-only670, 6
  %fixnum-tag-only19182497 = and i64 %ptrtoint669, 3
  %fixnump-test1919 = icmp eq i64 %fixnum-tag-only19182497, 0
  %or.cond2683 = or i1 %33, %fixnump-test1919
  br i1 %or.cond2683, label %tag287, label %tag219

tag86:                                            ; preds = %normal-dest2198, %normal-dest2177, %header-check-br1761
  %G160501.0 = phi {}* [ %"closure->LAMBDA", %header-check-br1761 ], [ %G160501.1, %normal-dest2177 ], [ %G160501.2, %normal-dest2198 ]
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 196), align 16
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 197), align 8
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 198), align 16
  %37 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 199), align 8
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 200), align 16
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 201), align 8
  %ptrtoint855 = ptrtoint {}* %G160501.0 to i64
  %entry-point-addr-uint856 = add i64 %ptrtoint855, 7
  %entry-point-addr857 = inttoptr i64 %entry-point-addr-uint856 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point858 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr857, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point858({}* %G160501.0, i64 7, {}* %OUT158827.0, {}* %34, {}* %35, {}* %36, {}* %37, {}* %38, {}* %39)
          to label %tag80 unwind label %cleanup-lpad

tag91:                                            ; preds = %header-check-br1670
  %41 = invoke double @from_object_double({}* nonnull %222)
          to label %normal-dest870 unwind label %cleanup-lpad

tag97:                                            ; preds = %normal-dest599
  %ptrtoint904 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only905 = and i64 %ptrtoint904, 7
  %test906 = icmp eq i64 %tag-only905, 1
  br i1 %test906, label %header-check-br903, label %tag23

tag104:                                           ; preds = %normal-dest1771
  %ptrtoint929 = ptrtoint {}* %"closure->LAMBDA1772" to i64
  %tag-only930 = and i64 %ptrtoint929, 7
  %test931 = icmp eq i64 %tag-only930, 1
  br i1 %test931, label %header-check-br928, label %tag167

tag105:                                           ; preds = %switch.early.test, %tag67
  %42 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest938 unwind label %cleanup-lpad

tag107:                                           ; preds = %header-check-br1236, %normal-dest1194, %normal-dest773
  %G160788.0 = phi {}* [ %G160788.1, %normal-dest773 ], [ %G160788.2, %normal-dest1194 ], [ %"closure->LAMBDA1772", %header-check-br1236 ]
  %44 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest941 unwind label %cleanup-lpad

tag110:                                           ; preds = %normal-dest1572, %normal-dest1348, %header-check-br928
  %G161065.0 = phi {}* [ %"closure->LAMBDA1772", %header-check-br928 ], [ %G161065.1, %normal-dest1348 ], [ %G161065.2, %normal-dest1572 ]
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 171), align 8
  %47 = invoke {}* @cc_safe_symbol_value({}* %46)
          to label %normal-dest951 unwind label %cleanup-lpad

tag116:                                           ; preds = %normal-dest1499, %header-check-br1368, %normal-dest1045
  %G161305.0 = phi {}* [ %G161305.1, %normal-dest1045 ], [ %"closure->LAMBDA1403", %header-check-br1368 ], [ %G161305.2, %normal-dest1499 ]
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 159), align 8
  %49 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 160), align 16
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 161), align 8
  %ptrtoint1004 = ptrtoint {}* %G161305.0 to i64
  %entry-point-addr-uint1005 = add i64 %ptrtoint1004, 7
  %entry-point-addr1006 = inttoptr i64 %entry-point-addr-uint1005 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1007 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1006, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1007({}* %G161305.0, i64 4, {}* %OUT1587571003.0, {}* %48, {}* %49, {}* %50)
          to label %tag234 unwind label %cleanup-lpad

tag119:                                           ; preds = %header-check-br896, %tag60, %tag82, %tag272, %header-check-br985
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest1020 unwind label %cleanup-lpad

tag121:                                           ; preds = %header-check-br563
  %54 = invoke double @from_object_double({}* nonnull %212)
          to label %normal-dest1034 unwind label %cleanup-lpad

tag122:                                           ; preds = %normal-dest1362, %header-check-br693
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest1038 unwind label %cleanup-lpad

tag126:                                           ; preds = %normal-dest1402
  %ptrtoint1075 = ptrtoint {}* %"closure->LAMBDA1403" to i64
  %tag-only1076 = and i64 %ptrtoint1075, 7
  %test1077 = icmp eq i64 %tag-only1076, 1
  br i1 %test1077, label %header-check-br1074, label %tag190

tag134:                                           ; preds = %tag224
  %trunc = trunc i64 %86 to i3
  switch i3 %trunc, label %tag285 [
    i3 -2, label %tag40
    i3 1, label %header-check-br1299
  ]

tag143:                                           ; preds = %normal-dest1771
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 156), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest1173 unwind label %cleanup-lpad

tag145:                                           ; preds = %tag154, %header-check-br425
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest1187 unwind label %cleanup-lpad

tag154:                                           ; preds = %normal-dest1180
  %ptrtoint1237 = ptrtoint {}* %"closure->LAMBDA1772" to i64
  %tag-only1238 = and i64 %ptrtoint1237, 7
  %test1239 = icmp eq i64 %tag-only1238, 1
  br i1 %test1239, label %header-check-br1236, label %tag145

tag159:                                           ; preds = %tag223, %header-check-br446
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest1264 unwind label %cleanup-lpad

tag162:                                           ; preds = %header-check-br2150, %normal-dest1545, %normal-dest378
  %G160874.0 = phi {}* [ %G160874.1, %normal-dest378 ], [ %G160874.2, %normal-dest1545 ], [ %"closure->LAMBDA1772", %header-check-br2150 ]
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest1293 unwind label %cleanup-lpad

tag164:                                           ; preds = %tag240, %header-check-br1484, %tag287, %tag294, %header-check-br563
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest1307 unwind label %cleanup-lpad

tag167:                                           ; preds = %tag104, %header-check-br994
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest1341 unwind label %cleanup-lpad

tag168:                                           ; preds = %normal-dest1617
  %69 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 162), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest1355 unwind label %cleanup-lpad

tag169:                                           ; preds = %normal-dest1449, %normal-dest315
  %schluesselliste.0 = phi {}* [ %farg0, %normal-dest315 ], [ %schluesselliste.2, %normal-dest1449 ]
  call void @cc_writeCell({}* %113, {}* %schluesselliste.0)
  call void @cc_writeCell({}* %110, {}* null)
  call void @cc_writeCell({}* %112, {}* null)
  %71 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 104), align 16
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest1383 unwind label %cleanup-lpad

tag175:                                           ; preds = %normal-dest315
  %73 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 107), align 8
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest1442 unwind label %cleanup-lpad

tag190:                                           ; preds = %tag126, %header-check-br1837
  %75 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest1506 unwind label %cleanup-lpad

tag197:                                           ; preds = %normal-dest1513, %header-check-br1074, %normal-dest890
  %G161358.0 = phi {}* [ %G161358.1, %normal-dest890 ], [ %"closure->LAMBDA1403", %header-check-br1074 ], [ %G161358.2, %normal-dest1513 ]
  %77 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 171), align 8
  %78 = invoke {}* @cc_safe_symbol_value({}* %77)
          to label %normal-dest1552 unwind label %cleanup-lpad

tag203:                                           ; preds = %normal-dest1402
  %79 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 156), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest1610 unwind label %cleanup-lpad

tag206:                                           ; preds = %normal-dest2062
  %ptrtoint1631 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only1632 = and i64 %ptrtoint1631, 7
  %test1633 = icmp eq i64 %tag-only1632, 1
  br i1 %test1633, label %header-check-br1630, label %tag273

tag207:                                           ; preds = %normal-dest1888, %header-check-br903, %normal-dest518
  %G160560.0 = phi {}* [ %G160560.1, %normal-dest518 ], [ %"closure->LAMBDA", %header-check-br903 ], [ %G160560.2, %normal-dest1888 ]
  %81 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 171), align 8
  %82 = invoke {}* @cc_safe_symbol_value({}* %81)
          to label %normal-dest1640 unwind label %cleanup-lpad

tag215:                                           ; preds = %normal-dest1847, %normal-dest1314, %normal-dest1035
  %G160818.0 = phi {}* [ %234, %normal-dest1035 ], [ %G160818.1, %normal-dest1314 ], [ %374, %normal-dest1847 ]
  %ptrtoint1678 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint1679 = add i64 %ptrtoint1678, 7
  %entry-point-addr1680 = inttoptr i64 %entry-point-addr-uint1679 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1681 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1680, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1681({}* %45, i64 1, {}* %G160818.0, {}* null, {}* null, {}* null)
          to label %normal-dest1684 unwind label %cleanup-lpad

tag219:                                           ; preds = %switch.early.test2711, %tag83
  %84 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest1718 unwind label %cleanup-lpad

tag223:                                           ; preds = %normal-dest1617
  %ptrtoint1729 = ptrtoint {}* %"closure->LAMBDA1403" to i64
  %tag-only1730 = and i64 %ptrtoint1729, 7
  %test1731 = icmp eq i64 %tag-only1730, 1
  br i1 %test1731, label %header-check-br1728, label %tag159

tag224:                                           ; preds = %switch.early.test2712, %switch.early.test2712, %header-check-br2100, %header-check-br1434, %header-check-br1434, %tag32
  %86 = ptrtoint %"class.core::T_O"* %221 to i64
  %fixnum-tag-only17372289 = and i64 %86, 3
  %fixnump-test1738 = icmp eq i64 %fixnum-tag-only17372289, 0
  br i1 %fixnump-test1738, label %tag285, label %tag134

tag226:                                           ; preds = %header-check-br985
  %87 = invoke double @from_object_double({}* nonnull %269)
          to label %normal-dest1741 unwind label %cleanup-lpad

tag230:                                           ; preds = %normal-dest2062
  %88 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 162), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest1748 unwind label %cleanup-lpad

tag234:                                           ; preds = %tag116, %tag243, %normal-dest1552
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA1772" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %90, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.6", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.6^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1049, i64 39, i64 0, i64 0)
          to label %normal-dest1771 unwind label %cleanup-lpad

tag240:                                           ; preds = %tag287
  %trunc2696 = trunc i64 %103 to i3
  switch i3 %trunc2696, label %tag164 [
    i3 -2, label %tag294
    i3 1, label %header-check-br1484
  ]

tag243:                                           ; preds = %header-check-br1728, %normal-dest1428, %normal-dest1271
  %G161288.0 = phi {}* [ %G161288.1, %normal-dest1271 ], [ %G161288.2, %normal-dest1428 ], [ %"closure->LAMBDA1403", %header-check-br1728 ]
  %91 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 159), align 8
  %92 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 160), align 16
  %93 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 161), align 8
  %ptrtoint1802 = ptrtoint {}* %G161288.0 to i64
  %entry-point-addr-uint1803 = add i64 %ptrtoint1802, 7
  %entry-point-addr1804 = inttoptr i64 %entry-point-addr-uint1803 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1805 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1804, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1805({}* %G161288.0, i64 4, {}* %293, {}* %91, {}* %92, {}* %93)
          to label %tag234 unwind label %cleanup-lpad

tag252:                                           ; preds = %tag294
  %95 = invoke float @from_object_float({}* %212)
          to label %normal-dest1846 unwind label %cleanup-lpad

tag272:                                           ; preds = %tag60
  %96 = icmp eq i64 %tag-only1210, 6
  br i1 %96, label %tag77, label %tag119

tag273:                                           ; preds = %tag206, %header-check-br1163
  %97 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %98 = invoke {}* @cc_safe_fdefinition({}* %97)
          to label %normal-dest1996 unwind label %cleanup-lpad

tag283:                                           ; preds = %normal-dest599
  %99 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 156), align 16
  %100 = invoke {}* @cc_safe_fdefinition({}* %99)
          to label %normal-dest2055 unwind label %cleanup-lpad

tag285:                                           ; preds = %header-check-br1299, %tag134, %tag224, %header-check-br1670, %tag40
  %101 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest2076 unwind label %cleanup-lpad

tag287:                                           ; preds = %switch.early.test2711, %switch.early.test2711, %header-check-br1107, %header-check-br668, %header-check-br668, %tag83
  %103 = ptrtoint %"class.core::T_O"* %211 to i64
  %fixnum-tag-only20982502 = and i64 %103, 3
  %fixnump-test2099 = icmp eq i64 %fixnum-tag-only20982502, 0
  br i1 %fixnump-test2099, label %tag164, label %tag240

tag294:                                           ; preds = %tag240
  %104 = icmp eq i64 %tag-only670, 6
  br i1 %104, label %tag252, label %tag164

tag296:                                           ; preds = %normal-dest1180
  %105 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 162), align 16
  %106 = invoke {}* @cc_safe_fdefinition({}* %105)
          to label %normal-dest2137 unwind label %cleanup-lpad

tag300:                                           ; preds = %normal-dest1755, %header-check-br677
  %107 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %108 = invoke {}* @cc_safe_fdefinition({}* %107)
          to label %normal-dest2170 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %111, %normal-dest2191, %maybe-more-tests685, %normal-dest938, %normal-dest2170, %tag300, %normal-dest2137, %tag296, %normal-dest2076, %tag285, %normal-dest2055, %tag283, %normal-dest2034, %normal-dest953, %normal-dest2015, %normal-dest820, %normal-dest1996, %tag273, %normal-dest667, %normal-dest1898, %normal-dest1293, %normal-dest1881, %maybe-more-tests2097, %normal-dest1847, %normal-dest1846, %tag252, %tag243, %tag234, %normal-dest1748, %tag230, %normal-dest1742, %normal-dest1741, %tag226, %tag219, %normal-dest1684, %tag215, %normal-dest1653, %normal-dest642, %normal-dest1640, %tag207, %normal-dest1610, %tag203, %normal-dest1584, %normal-dest1660, %normal-dest1565, %maybe-more-tests1002, %normal-dest1552, %tag197, %normal-dest1538, %maybe-more-tests1527, %normal-dest1506, %tag190, %normal-dest1492, %maybe-more-tests701, %normal-dest1442, %tag175, %normal-dest1421, %maybe-more-tests454, %normal-dest1397, %normal-dest1390, %normal-dest1387, %normal-dest1383, %tag169, %normal-dest1355, %tag168, %normal-dest1341, %tag167, %normal-dest1321, %maybe-more-tests1171, %normal-dest1307, %tag164, %tag162, %normal-dest1264, %tag159, %normal-dest1187, %tag145, %normal-dest1173, %tag143, %normal-dest1038, %tag122, %normal-dest1035, %normal-dest1034, %tag121, %normal-dest1020, %tag119, %tag116, %normal-dest951, %tag110, %tag107, %tag105, %normal-dest883, %maybe-more-tests1845, %normal-dest871, %normal-dest870, %tag91, %tag86, %normal-dest832, %normal-dest830, %normal-dest827, %tag80, %normal-dest812, %normal-dest551, %normal-dest802, %normal-dest800, %tag77, %normal-dest798, %normal-dest797, %tag76, %normal-dest766, %maybe-more-tests433, %normal-dest1718, %tag47, %normal-dest635, %tag42, %normal-dest605, %normal-dest1691, %tag38, %normal-dest544, %tag28, %normal-dest511, %tag23, %normal-dest464, %normal-dest941, %tag15, %normal-dest399, %normal-dest614, %normal-dest371, %tag6, %normal-dest314, %normal-dest313, %req-bb
  %109 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %109

req-bb:                                           ; preds = %entry, %case-opt1-bb
  %G158941.0.in = phi {}** [ getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), %case-opt1-bb ], [ getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), %entry ]
  %G158941.0 = load {}*, {}** %G158941.0.in, align 8
  %110 = invoke {}* @cc_makeCell()
          to label %normal-dest313 unwind label %cleanup-lpad

; <label>:111:                                    ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERK-HASH-TABELLE-AUSGEBEN_0^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %111
  unreachable

case-opt1-bb:                                     ; preds = %entry
  br label %req-bb

normal-dest313:                                   ; preds = %req-bb
  %112 = invoke {}* @cc_makeCell()
          to label %normal-dest314 unwind label %cleanup-lpad

normal-dest314:                                   ; preds = %normal-dest313
  %113 = invoke {}* @cc_makeCell()
          to label %normal-dest315 unwind label %cleanup-lpad

normal-dest315:                                   ; preds = %normal-dest314
  %114 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %115 = icmp eq {}* %G158941.0, %114
  br i1 %115, label %tag175, label %tag169

normal-dest371:                                   ; preds = %tag6
  %116 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %117 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %118 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %119 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 186), align 16
  %ptrtoint372 = ptrtoint {}* %10 to i64
  %entry-point-addr-uint373 = add i64 %ptrtoint372, 7
  %entry-point-addr374 = inttoptr i64 %entry-point-addr-uint373 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point375 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr374, align 8
  %120 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point375({}* %10, i64 5, {}* %116, {}* %117, {}* %"closure->LAMBDA1772", {}* %118, {}* %119)
          to label %normal-dest378 unwind label %cleanup-lpad

normal-dest378:                                   ; preds = %normal-dest371
  %.elt2448 = extractvalue { {}*, i64 } %120, 0
  %.elt2450 = extractvalue { {}*, i64 } %120, 1
  %cond2241 = icmp eq i64 %.elt2450, 0
  %121 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160874.1 = select i1 %cond2241, {}* %121, {}* %.elt2448
  br label %tag162

normal-dest399:                                   ; preds = %normal-dest614
  %.elt2517 = extractvalue { {}*, i64 } %156, 0
  %.elt2519 = extractvalue { {}*, i64 } %156, 1
  %cond2253 = icmp eq i64 %.elt2519, 0
  %122 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160791.0 = select i1 %cond2253, {}* %122, {}* %.elt2517
  %123 = ptrtoint {}* %110 to i64
  %124 = add i64 %123, -3
  %125 = inttoptr i64 %124 to {}**
  %126 = load {}*, {}** %125, align 8, !tbaa !31
  %ptrtoint406 = ptrtoint {}* %G160788.0 to i64
  %entry-point-addr-uint407 = add i64 %ptrtoint406, 7
  %entry-point-addr408 = inttoptr i64 %entry-point-addr-uint407 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point409 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr408, align 8
  %127 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point409({}* %G160788.0, i64 4, {}* %366, {}* %G160790.0, {}* %G160791.0, {}* %126)
          to label %tag38 unwind label %cleanup-lpad

header-check-br425:                               ; preds = %header-check-br1236
  %.off2698 = add i64 %256, -1001
  %128 = icmp ult i64 %.off2698, 5
  br i1 %128, label %maybe-more-tests433, label %tag145

maybe-more-tests433:                              ; preds = %header-check-br425
  %129 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %130 = invoke {}* @cc_safe_fdefinition({}* %129)
          to label %normal-dest766 unwind label %cleanup-lpad

header-check-br446:                               ; preds = %header-check-br1728
  %.off2704 = add i64 %357, -1001
  %131 = icmp ult i64 %.off2704, 5
  br i1 %131, label %maybe-more-tests454, label %tag159

maybe-more-tests454:                              ; preds = %header-check-br446
  %132 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %133 = invoke {}* @cc_safe_fdefinition({}* %132)
          to label %normal-dest1421 unwind label %cleanup-lpad

normal-dest464:                                   ; preds = %normal-dest941
  %ptrtoint466 = ptrtoint {}* %214 to i64
  %entry-point-addr-uint467 = add i64 %ptrtoint466, 7
  %entry-point-addr468 = inttoptr i64 %entry-point-addr-uint467 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point469 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr468, align 8
  %134 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point469({}* %214, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest472 unwind label %cleanup-lpad

normal-dest472:                                   ; preds = %normal-dest464
  %.elt2494 = extractvalue { {}*, i64 } %134, 0
  %.elt2496 = extractvalue { {}*, i64 } %134, 1
  %cond2249 = icmp eq i64 %.elt2496, 0
  %135 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y473.1 = select i1 %cond2249, {}* %135, {}* %.elt2494
  %ptrtoint669 = ptrtoint {}* %y473.1 to i64
  %tag-only670 = and i64 %ptrtoint669, 7
  %test671 = icmp eq i64 %tag-only670, 1
  br i1 %test671, label %header-check-br668, label %tag83

normal-dest511:                                   ; preds = %tag23
  %136 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %137 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %138 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %139 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 204), align 16
  %ptrtoint512 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint513 = add i64 %ptrtoint512, 7
  %entry-point-addr514 = inttoptr i64 %entry-point-addr-uint513 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point515 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr514, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point515({}* %19, i64 5, {}* %136, {}* %137, {}* %"closure->LAMBDA", {}* %138, {}* %139)
          to label %normal-dest518 unwind label %cleanup-lpad

normal-dest518:                                   ; preds = %normal-dest511
  %.elt2312 = extractvalue { {}*, i64 } %140, 0
  %.elt2314 = extractvalue { {}*, i64 } %140, 1
  %cond2219 = icmp eq i64 %.elt2314, 0
  %141 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160560.1 = select i1 %cond2219, {}* %141, {}* %.elt2312
  br label %tag207

normal-dest544:                                   ; preds = %tag28
  %.elt2295 = extractvalue { {}*, i64 } %20, 0
  %.elt2297 = extractvalue { {}*, i64 } %20, 1
  %cond2216 = icmp eq i64 %.elt2297, 0
  %142 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161067.0 = select i1 %cond2216, {}* %142, {}* %.elt2295
  %143 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %144 = invoke {}* @cc_safe_fdefinition({}* %143)
          to label %normal-dest551 unwind label %cleanup-lpad

normal-dest551:                                   ; preds = %normal-dest544
  %145 = inttoptr i64 %218 to {}**
  %146 = load {}*, {}** %145, align 8, !tbaa !31
  %147 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %148 = invoke {}* @cc_safe_fdefinition({}* %147)
          to label %normal-dest812 unwind label %cleanup-lpad

header-check-br563:                               ; preds = %header-check-br1484
  %irc-bit-cast567 = bitcast {}* %y473.1 to i8*
  %gep568 = getelementptr inbounds i8, i8* %irc-bit-cast567, i64 -9
  %irc-bit-cast569 = bitcast i8* %gep568 to i64*
  %149 = load i64, i64* %irc-bit-cast569, align 8
  %150 = icmp eq i64 %149, 1325
  br i1 %150, label %tag121, label %tag164

normal-dest599:                                   ; preds = %tag38
  %151 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %152 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %153 = icmp eq {}* %151, %152
  br i1 %153, label %tag283, label %tag97

normal-dest605:                                   ; preds = %normal-dest1691
  %ptrtoint608 = ptrtoint {}* %351 to i64
  %entry-point-addr-uint609 = add i64 %ptrtoint608, 7
  %entry-point-addr610 = inttoptr i64 %entry-point-addr-uint609 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point611 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr610, align 8
  %154 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point611({}* %351, i64 2, {}* %349, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest614 unwind label %cleanup-lpad

normal-dest614:                                   ; preds = %normal-dest605
  %.elt2513 = extractvalue { {}*, i64 } %154, 0
  %.elt2515 = extractvalue { {}*, i64 } %154, 1
  %cond2252 = icmp eq i64 %.elt2515, 0
  %155 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160794.1 = select i1 %cond2252, {}* %155, {}* %.elt2513
  %ptrtoint393 = ptrtoint {}* %347 to i64
  %entry-point-addr-uint394 = add i64 %ptrtoint393, 7
  %entry-point-addr395 = inttoptr i64 %entry-point-addr-uint394 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point396 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr395, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point396({}* %347, i64 1, {}* %G160794.1, {}* null, {}* null, {}* null)
          to label %normal-dest399 unwind label %cleanup-lpad

normal-dest635:                                   ; preds = %tag42
  %.elt2466 = extractvalue { {}*, i64 } %24, 0
  %.elt2468 = extractvalue { {}*, i64 } %24, 1
  %cond2244 = icmp eq i64 %.elt2468, 0
  %157 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160876.0 = select i1 %cond2244, {}* %157, {}* %.elt2466
  %158 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %159 = invoke {}* @cc_safe_fdefinition({}* %158)
          to label %normal-dest642 unwind label %cleanup-lpad

normal-dest642:                                   ; preds = %normal-dest635
  %160 = inttoptr i64 %265 to {}**
  %161 = load {}*, {}** %160, align 8, !tbaa !31
  %162 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %163 = invoke {}* @cc_safe_fdefinition({}* %162)
          to label %normal-dest1653 unwind label %cleanup-lpad

header-check-br659:                               ; preds = %header-check-br1208
  %.old2678 = and i64 %ptrtoint1209, 3
  %fixnump-test1740.old = icmp eq i64 %.old2678, 0
  br i1 %fixnump-test1740.old, label %tag82, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br659
  switch i64 %255, label %tag105 [
    i64 1349, label %tag82
    i64 1309, label %tag82
  ]

normal-dest667:                                   ; preds = %tag47
  %164 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %165 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %166 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %167 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint1950 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint1951 = add i64 %ptrtoint1950, 7
  %entry-point-addr1952 = inttoptr i64 %entry-point-addr-uint1951 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1953 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1952, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1953({}* %26, i64 5, {}* %164, {}* %165, {}* %y455.1, {}* %166, {}* %167)
          to label %normal-dest1956 unwind label %cleanup-lpad

header-check-br668:                               ; preds = %normal-dest472
  %irc-bit-cast672 = bitcast {}* %y473.1 to i8*
  %gep673 = getelementptr inbounds i8, i8* %irc-bit-cast672, i64 -9
  %irc-bit-cast674 = bitcast i8* %gep673 to i64*
  %169 = load i64, i64* %irc-bit-cast674, align 8
  switch i64 %169, label %header-check-br1107 [
    i64 1325, label %tag287
    i64 1341, label %tag287
  ]

header-check-br677:                               ; preds = %header-check-br1761
  %.off2688 = add i64 %364, -1001
  %170 = icmp ult i64 %.off2688, 5
  br i1 %170, label %maybe-more-tests685, label %tag300

maybe-more-tests685:                              ; preds = %header-check-br677
  %171 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %172 = invoke {}* @cc_safe_fdefinition({}* %171)
          to label %normal-dest2191 unwind label %cleanup-lpad

header-check-br693:                               ; preds = %header-check-br1368
  %.off2702 = add i64 %286, -1001
  %173 = icmp ult i64 %.off2702, 5
  br i1 %173, label %maybe-more-tests701, label %tag122

maybe-more-tests701:                              ; preds = %header-check-br693
  %174 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %175 = invoke {}* @cc_safe_fdefinition({}* %174)
          to label %normal-dest1492 unwind label %cleanup-lpad

normal-dest715:                                   ; preds = %normal-dest1718
  call void @unreachableError()
  unreachable

normal-dest766:                                   ; preds = %maybe-more-tests433
  %ptrtoint767 = ptrtoint {}* %130 to i64
  %entry-point-addr-uint768 = add i64 %ptrtoint767, 7
  %entry-point-addr769 = inttoptr i64 %entry-point-addr-uint768 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point770 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr769, align 8
  %176 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point770({}* %130, i64 1, {}* nonnull %"closure->LAMBDA1772", {}* null, {}* null, {}* null)
          to label %normal-dest773 unwind label %cleanup-lpad

normal-dest773:                                   ; preds = %normal-dest766
  %.elt2528 = extractvalue { {}*, i64 } %176, 0
  %.elt2530 = extractvalue { {}*, i64 } %176, 1
  %cond2254 = icmp eq i64 %.elt2530, 0
  %177 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160788.1 = select i1 %cond2254, {}* %177, {}* %.elt2528
  br label %tag107

normal-dest797:                                   ; preds = %tag76
  %178 = invoke float @from_object_float({}* %y455.1)
          to label %normal-dest798 unwind label %cleanup-lpad

normal-dest798:                                   ; preds = %normal-dest797
  %179 = fdiv float %28, %178
  %180 = invoke {}* @to_object_float(float %179)
          to label %tag28 unwind label %cleanup-lpad

normal-dest800:                                   ; preds = %tag77
  %181 = invoke float @from_object_float({}* %y362.1)
          to label %normal-dest802 unwind label %cleanup-lpad

normal-dest802:                                   ; preds = %normal-dest800
  %182 = fdiv float %29, %181
  %183 = invoke {}* @to_object_float(float %182)
          to label %tag42 unwind label %cleanup-lpad

normal-dest812:                                   ; preds = %normal-dest551
  %ptrtoint814 = ptrtoint {}* %148 to i64
  %entry-point-addr-uint815 = add i64 %ptrtoint814, 7
  %entry-point-addr816 = inttoptr i64 %entry-point-addr-uint815 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point817 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr816, align 8
  %184 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point817({}* %148, i64 2, {}* %146, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest820 unwind label %cleanup-lpad

normal-dest820:                                   ; preds = %normal-dest812
  %.elt2300 = extractvalue { {}*, i64 } %184, 0
  %.elt2302 = extractvalue { {}*, i64 } %184, 1
  %cond2217 = icmp eq i64 %.elt2302, 0
  %185 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161071.1 = select i1 %cond2217, {}* %185, {}* %.elt2300
  %ptrtoint2009 = ptrtoint {}* %144 to i64
  %entry-point-addr-uint2010 = add i64 %ptrtoint2009, 7
  %entry-point-addr2011 = inttoptr i64 %entry-point-addr-uint2010 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2012 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2011, align 8
  %186 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2012({}* %144, i64 1, {}* %G161071.1, {}* null, {}* null, {}* null)
          to label %normal-dest2015 unwind label %cleanup-lpad

normal-dest827:                                   ; preds = %tag80
  %187 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA831" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %187, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.2", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1049, i64 39, i64 0, i64 2, {}* %113, {}* %112)
          to label %normal-dest830 unwind label %cleanup-lpad

normal-dest830:                                   ; preds = %normal-dest827
  %188 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %189 = invoke {}* @cc_safe_symbol_value({}* %188)
          to label %normal-dest832 unwind label %cleanup-lpad

normal-dest832:                                   ; preds = %normal-dest830
  %ptrtoint833 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint834 = add i64 %ptrtoint833, 7
  %entry-point-addr835 = inttoptr i64 %entry-point-addr-uint834 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point836 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr835, align 8
  %190 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point836({}* %31, i64 2, {}* %"closure->LAMBDA831", {}* %189, {}* null, {}* null)
          to label %normal-dest839 unwind label %cleanup-lpad

normal-dest839:                                   ; preds = %normal-dest832
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %190

normal-dest870:                                   ; preds = %tag91
  %191 = invoke double @from_object_double({}* nonnull %y455.1)
          to label %normal-dest871 unwind label %cleanup-lpad

normal-dest871:                                   ; preds = %normal-dest870
  %192 = fdiv double %41, %191
  %193 = invoke {}* @to_object_double(double %192)
          to label %tag28 unwind label %cleanup-lpad

normal-dest883:                                   ; preds = %maybe-more-tests1845
  %ptrtoint884 = ptrtoint {}* %371 to i64
  %entry-point-addr-uint885 = add i64 %ptrtoint884, 7
  %entry-point-addr886 = inttoptr i64 %entry-point-addr-uint885 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point887 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr886, align 8
  %194 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point887({}* %371, i64 1, {}* nonnull %"closure->LAMBDA1403", {}* null, {}* null, {}* null)
          to label %normal-dest890 unwind label %cleanup-lpad

normal-dest890:                                   ; preds = %normal-dest883
  %.elt2532 = extractvalue { {}*, i64 } %194, 0
  %.elt2534 = extractvalue { {}*, i64 } %194, 1
  %cond2255 = icmp eq i64 %.elt2534, 0
  %195 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161358.1 = select i1 %cond2255, {}* %195, {}* %.elt2532
  br label %tag197

header-check-br896:                               ; preds = %tag60
  %gep901 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %268, i64 -9, i32 0
  %irc-bit-cast902 = bitcast i8* %gep901 to i64*
  %196 = load i64, i64* %irc-bit-cast902, align 8
  %197 = icmp ne i64 %196, 1325
  %test1211.not = xor i1 %test1211, true
  %brmerge2673 = or i1 %197, %test1211.not
  br i1 %brmerge2673, label %tag119, label %header-check-br985

header-check-br903:                               ; preds = %tag97
  %irc-bit-cast907 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep908 = getelementptr inbounds i8, i8* %irc-bit-cast907, i64 -9
  %irc-bit-cast909 = bitcast i8* %gep908 to i64*
  %198 = load i64, i64* %irc-bit-cast909, align 8
  %.off = add i64 %198, -913
  %199 = icmp ult i64 %.off, 85
  br i1 %199, label %tag207, label %header-check-br2089

header-check-br928:                               ; preds = %tag104
  %irc-bit-cast932 = bitcast {}* %"closure->LAMBDA1772" to i8*
  %gep933 = getelementptr inbounds i8, i8* %irc-bit-cast932, i64 -9
  %irc-bit-cast934 = bitcast i8* %gep933 to i64*
  %200 = load i64, i64* %irc-bit-cast934, align 8
  %.off2691 = add i64 %200, -913
  %201 = icmp ult i64 %.off2691, 85
  br i1 %201, label %tag110, label %header-check-br994

normal-dest938:                                   ; preds = %tag105
  %202 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %203 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %204 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %205 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint2183 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint2184 = add i64 %ptrtoint2183, 7
  %entry-point-addr2185 = inttoptr i64 %entry-point-addr-uint2184 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2186 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2185, align 8
  %206 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2186({}* %43, i64 5, {}* %202, {}* %203, {}* %y362.1, {}* %204, {}* %205)
          to label %normal-dest2189 unwind label %cleanup-lpad

normal-dest941:                                   ; preds = %tag107
  %207 = ptrtoint {}* %112 to i64
  %208 = add i64 %207, -3
  %209 = inttoptr i64 %208 to %"class.gctools::smart_ptr"*
  %210 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %209, i64 0, i32 0
  %211 = load %"class.core::T_O"*, %"class.core::T_O"** %210, align 8, !tbaa !31
  %212 = bitcast %"class.core::T_O"* %211 to {}*
  %213 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %214 = invoke {}* @cc_safe_fdefinition({}* %213)
          to label %normal-dest464 unwind label %cleanup-lpad

normal-dest951:                                   ; preds = %tag110
  %215 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %216 = invoke {}* @cc_safe_fdefinition({}* %215)
          to label %normal-dest953 unwind label %cleanup-lpad

normal-dest953:                                   ; preds = %normal-dest951
  %217 = ptrtoint {}* %112 to i64
  %218 = add i64 %217, -3
  %219 = inttoptr i64 %218 to %"class.gctools::smart_ptr"*
  %220 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %219, i64 0, i32 0
  %221 = load %"class.core::T_O"*, %"class.core::T_O"** %220, align 8, !tbaa !31
  %222 = bitcast %"class.core::T_O"* %221 to {}*
  %223 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %224 = invoke {}* @cc_safe_fdefinition({}* %223)
          to label %normal-dest2034 unwind label %cleanup-lpad

header-check-br985:                               ; preds = %header-check-br896
  %irc-bit-cast989 = bitcast {}* %y362.1 to i8*
  %gep990 = getelementptr inbounds i8, i8* %irc-bit-cast989, i64 -9
  %irc-bit-cast991 = bitcast i8* %gep990 to i64*
  %225 = load i64, i64* %irc-bit-cast991, align 8
  %226 = icmp eq i64 %225, 1325
  br i1 %226, label %tag226, label %tag119

header-check-br994:                               ; preds = %header-check-br928
  %.off2692 = add i64 %200, -1001
  %227 = icmp ult i64 %.off2692, 5
  br i1 %227, label %maybe-more-tests1002, label %tag167

maybe-more-tests1002:                             ; preds = %header-check-br994
  %228 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %229 = invoke {}* @cc_safe_fdefinition({}* %228)
          to label %normal-dest1565 unwind label %cleanup-lpad

normal-dest1020:                                  ; preds = %tag119
  %ptrtoint1021 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint1022 = add i64 %ptrtoint1021, 7
  %entry-point-addr1023 = inttoptr i64 %entry-point-addr-uint1022 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1024 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1023, align 8
  %230 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1024({}* %53, i64 2, {}* %269, {}* %y362.1, {}* null, {}* null)
          to label %normal-dest1027 unwind label %cleanup-lpad

normal-dest1027:                                  ; preds = %normal-dest1020
  %.elt2462 = extractvalue { {}*, i64 } %230, 0
  %.elt2464 = extractvalue { {}*, i64 } %230, 1
  %cond2243 = icmp eq i64 %.elt2464, 0
  %231 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160904.1 = select i1 %cond2243, {}* %231, {}* %.elt2462
  br label %tag42

normal-dest1034:                                  ; preds = %tag121
  %232 = invoke double @from_object_double({}* nonnull %y473.1)
          to label %normal-dest1035 unwind label %cleanup-lpad

normal-dest1035:                                  ; preds = %normal-dest1034
  %233 = fdiv double %54, %232
  %234 = invoke {}* @to_object_double(double %233)
          to label %tag215 unwind label %cleanup-lpad

normal-dest1038:                                  ; preds = %tag122
  %235 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %236 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %237 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %238 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 164), align 16
  %ptrtoint1039 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint1040 = add i64 %ptrtoint1039, 7
  %entry-point-addr1041 = inttoptr i64 %entry-point-addr-uint1040 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1042 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1041, align 8
  %239 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1042({}* %56, i64 5, {}* %235, {}* %236, {}* %"closure->LAMBDA1403", {}* %237, {}* %238)
          to label %normal-dest1045 unwind label %cleanup-lpad

normal-dest1045:                                  ; preds = %normal-dest1038
  %.elt2564 = extractvalue { {}*, i64 } %239, 0
  %.elt2566 = extractvalue { {}*, i64 } %239, 1
  %cond2261 = icmp eq i64 %.elt2566, 0
  %240 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161305.1 = select i1 %cond2261, {}* %240, {}* %.elt2564
  br label %tag116

header-check-br1074:                              ; preds = %tag126
  %irc-bit-cast1078 = bitcast {}* %"closure->LAMBDA1403" to i8*
  %gep1079 = getelementptr inbounds i8, i8* %irc-bit-cast1078, i64 -9
  %irc-bit-cast1080 = bitcast i8* %gep1079 to i64*
  %241 = load i64, i64* %irc-bit-cast1080, align 8
  %.off2699 = add i64 %241, -913
  %242 = icmp ult i64 %.off2699, 85
  br i1 %242, label %tag197, label %header-check-br1837

header-check-br1107:                              ; preds = %header-check-br668
  %.old2682 = and i64 %ptrtoint669, 3
  %fixnump-test1919.old = icmp eq i64 %.old2682, 0
  br i1 %fixnump-test1919.old, label %tag287, label %switch.early.test2711

switch.early.test2711:                            ; preds = %header-check-br1107
  switch i64 %169, label %tag219 [
    i64 1349, label %tag287
    i64 1309, label %tag287
  ]

header-check-br1163:                              ; preds = %header-check-br1630
  %.off2690 = add i64 %331, -1001
  %243 = icmp ult i64 %.off2690, 5
  br i1 %243, label %maybe-more-tests1171, label %tag273

maybe-more-tests1171:                             ; preds = %header-check-br1163
  %244 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %245 = invoke {}* @cc_safe_fdefinition({}* %244)
          to label %normal-dest1321 unwind label %cleanup-lpad

normal-dest1173:                                  ; preds = %tag143
  %ptrtoint1174 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint1175 = add i64 %ptrtoint1174, 7
  %entry-point-addr1176 = inttoptr i64 %entry-point-addr-uint1175 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1177 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1176, align 8
  %246 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1177({}* %58, i64 1, {}* %366, {}* null, {}* null, {}* null)
          to label %normal-dest1180 unwind label %cleanup-lpad

normal-dest1180:                                  ; preds = %normal-dest1173
  %.elt2440 = extractvalue { {}*, i64 } %246, 0
  %.elt2442 = extractvalue { {}*, i64 } %246, 1
  %cond2239 = icmp eq i64 %.elt2442, 0
  %247 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160963.0 = select i1 %cond2239, {}* %247, {}* %.elt2440
  %248 = icmp eq {}* %G160963.0, %247
  br i1 %248, label %tag154, label %tag296

normal-dest1187:                                  ; preds = %tag145
  %249 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %250 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %251 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %252 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 179), align 8
  %ptrtoint1188 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint1189 = add i64 %ptrtoint1188, 7
  %entry-point-addr1190 = inttoptr i64 %entry-point-addr-uint1189 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1191 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1190, align 8
  %253 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1191({}* %60, i64 5, {}* %249, {}* %250, {}* %"closure->LAMBDA1772", {}* %251, {}* %252)
          to label %normal-dest1194 unwind label %cleanup-lpad

normal-dest1194:                                  ; preds = %normal-dest1187
  %.elt2490 = extractvalue { {}*, i64 } %253, 0
  %.elt2492 = extractvalue { {}*, i64 } %253, 1
  %cond2248 = icmp eq i64 %.elt2492, 0
  %254 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160788.2 = select i1 %cond2248, {}* %254, {}* %.elt2490
  br label %tag107

header-check-br1208:                              ; preds = %normal-dest1905
  %irc-bit-cast1212 = bitcast {}* %y362.1 to i8*
  %gep1213 = getelementptr inbounds i8, i8* %irc-bit-cast1212, i64 -9
  %irc-bit-cast1214 = bitcast i8* %gep1213 to i64*
  %255 = load i64, i64* %irc-bit-cast1214, align 8
  switch i64 %255, label %header-check-br659 [
    i64 1325, label %tag82
    i64 1341, label %tag82
  ]

header-check-br1236:                              ; preds = %tag154
  %irc-bit-cast1240 = bitcast {}* %"closure->LAMBDA1772" to i8*
  %gep1241 = getelementptr inbounds i8, i8* %irc-bit-cast1240, i64 -9
  %irc-bit-cast1242 = bitcast i8* %gep1241 to i64*
  %256 = load i64, i64* %irc-bit-cast1242, align 8
  %.off2697 = add i64 %256, -913
  %257 = icmp ult i64 %.off2697, 85
  br i1 %257, label %tag107, label %header-check-br425

normal-dest1264:                                  ; preds = %tag159
  %258 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %259 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %260 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %261 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 158), align 16
  %ptrtoint1265 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint1266 = add i64 %ptrtoint1265, 7
  %entry-point-addr1267 = inttoptr i64 %entry-point-addr-uint1266 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1268 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1267, align 8
  %262 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1268({}* %62, i64 5, {}* %258, {}* %259, {}* %"closure->LAMBDA1403", {}* %260, {}* %261)
          to label %normal-dest1271 unwind label %cleanup-lpad

normal-dest1271:                                  ; preds = %normal-dest1264
  %.elt2576 = extractvalue { {}*, i64 } %262, 0
  %.elt2578 = extractvalue { {}*, i64 } %262, 1
  %cond2263 = icmp eq i64 %.elt2578, 0
  %263 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161288.1 = select i1 %cond2263, {}* %263, {}* %.elt2576
  br label %tag243

normal-dest1293:                                  ; preds = %tag162
  %264 = ptrtoint {}* %112 to i64
  %265 = add i64 %264, -3
  %266 = inttoptr i64 %265 to %"class.gctools::smart_ptr"*
  %267 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %266, i64 0, i32 0
  %268 = load %"class.core::T_O"*, %"class.core::T_O"** %267, align 8, !tbaa !31
  %269 = bitcast %"class.core::T_O"* %268 to {}*
  %270 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %271 = invoke {}* @cc_safe_fdefinition({}* %270)
          to label %normal-dest1898 unwind label %cleanup-lpad

header-check-br1299:                              ; preds = %tag134
  %gep1304 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %221, i64 -9, i32 0
  %irc-bit-cast1305 = bitcast i8* %gep1304 to i64*
  %272 = load i64, i64* %irc-bit-cast1305, align 8
  %273 = icmp ne i64 %272, 1325
  %test1437.not = xor i1 %test1437, true
  %brmerge2677 = or i1 %273, %test1437.not
  br i1 %brmerge2677, label %tag285, label %header-check-br1670

normal-dest1307:                                  ; preds = %tag164
  %ptrtoint1308 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint1309 = add i64 %ptrtoint1308, 7
  %entry-point-addr1310 = inttoptr i64 %entry-point-addr-uint1309 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1311 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1310, align 8
  %274 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1311({}* %66, i64 2, {}* %212, {}* %y473.1, {}* null, {}* null)
          to label %normal-dest1314 unwind label %cleanup-lpad

normal-dest1314:                                  ; preds = %normal-dest1307
  %.elt2504 = extractvalue { {}*, i64 } %274, 0
  %.elt2506 = extractvalue { {}*, i64 } %274, 1
  %cond2250 = icmp eq i64 %.elt2506, 0
  %275 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160818.1 = select i1 %cond2250, {}* %275, {}* %.elt2504
  br label %tag215

normal-dest1321:                                  ; preds = %maybe-more-tests1171
  %ptrtoint1322 = ptrtoint {}* %245 to i64
  %entry-point-addr-uint1323 = add i64 %ptrtoint1322, 7
  %entry-point-addr1324 = inttoptr i64 %entry-point-addr-uint1323 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1325 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1324, align 8
  %276 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1325({}* %245, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1328 unwind label %cleanup-lpad

normal-dest1328:                                  ; preds = %normal-dest1321
  %.elt2379 = extractvalue { {}*, i64 } %276, 0
  %.elt2381 = extractvalue { {}*, i64 } %276, 1
  %cond2229 = icmp eq i64 %.elt2381, 0
  %277 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160481.1 = select i1 %cond2229, {}* %277, {}* %.elt2379
  br label %tag15

normal-dest1341:                                  ; preds = %tag167
  %278 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %279 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %280 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %281 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 188), align 16
  %ptrtoint1342 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint1343 = add i64 %ptrtoint1342, 7
  %entry-point-addr1344 = inttoptr i64 %entry-point-addr-uint1343 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1345 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1344, align 8
  %282 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1345({}* %68, i64 5, {}* %278, {}* %279, {}* %"closure->LAMBDA1772", {}* %280, {}* %281)
          to label %normal-dest1348 unwind label %cleanup-lpad

normal-dest1348:                                  ; preds = %normal-dest1341
  %.elt2277 = extractvalue { {}*, i64 } %282, 0
  %.elt2279 = extractvalue { {}*, i64 } %282, 1
  %cond2213 = icmp eq i64 %.elt2279, 0
  %283 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161065.1 = select i1 %cond2213, {}* %283, {}* %.elt2277
  br label %tag110

normal-dest1355:                                  ; preds = %tag168
  %ptrtoint1356 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint1357 = add i64 %ptrtoint1356, 7
  %entry-point-addr1358 = inttoptr i64 %entry-point-addr-uint1357 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1359 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1358, align 8
  %284 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1359({}* %70, i64 1, {}* %293, {}* null, {}* null, {}* null)
          to label %normal-dest1362 unwind label %cleanup-lpad

normal-dest1362:                                  ; preds = %normal-dest1355
  %.elt2560 = extractvalue { {}*, i64 } %284, 0
  %.elt2562 = extractvalue { {}*, i64 } %284, 1
  %cond2260 = icmp eq i64 %.elt2562, 0
  %285 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %OUT1587571003.0 = select i1 %cond2260, {}* %285, {}* %.elt2560
  %ptrtoint1369 = ptrtoint {}* %"closure->LAMBDA1403" to i64
  %tag-only1370 = and i64 %ptrtoint1369, 7
  %test1371 = icmp eq i64 %tag-only1370, 1
  br i1 %test1371, label %header-check-br1368, label %tag122

header-check-br1368:                              ; preds = %normal-dest1362
  %irc-bit-cast1372 = bitcast {}* %"closure->LAMBDA1403" to i8*
  %gep1373 = getelementptr inbounds i8, i8* %irc-bit-cast1372, i64 -9
  %irc-bit-cast1374 = bitcast i8* %gep1373 to i64*
  %286 = load i64, i64* %irc-bit-cast1374, align 8
  %.off2701 = add i64 %286, -913
  %287 = icmp ult i64 %.off2701, 85
  br i1 %287, label %tag116, label %header-check-br693

normal-dest1383:                                  ; preds = %tag169
  %288 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA1388" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %288, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.4", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1049, i64 39, i64 0, i64 3, {}* %113, {}* %112, {}* %110)
          to label %normal-dest1387 unwind label %cleanup-lpad

normal-dest1387:                                  ; preds = %normal-dest1383
  %289 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %290 = invoke {}* @cc_safe_symbol_value({}* %289)
          to label %normal-dest1390 unwind label %cleanup-lpad

normal-dest1390:                                  ; preds = %normal-dest1387
  %ptrtoint1391 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint1392 = add i64 %ptrtoint1391, 7
  %entry-point-addr1393 = inttoptr i64 %entry-point-addr-uint1392 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1394 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1393, align 8
  %291 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1394({}* %72, i64 2, {}* %"closure->LAMBDA1388", {}* %290, {}* null, {}* null)
          to label %normal-dest1397 unwind label %cleanup-lpad

normal-dest1397:                                  ; preds = %normal-dest1390
  %292 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA1403" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %292, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.5", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.5^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1049, i64 39, i64 0, i64 0)
          to label %normal-dest1402 unwind label %cleanup-lpad

normal-dest1402:                                  ; preds = %normal-dest1397
  %293 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %294 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %295 = icmp eq {}* %293, %294
  br i1 %295, label %tag203, label %tag126

normal-dest1421:                                  ; preds = %maybe-more-tests454
  %ptrtoint1422 = ptrtoint {}* %133 to i64
  %entry-point-addr-uint1423 = add i64 %ptrtoint1422, 7
  %entry-point-addr1424 = inttoptr i64 %entry-point-addr-uint1423 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1425 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1424, align 8
  %296 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1425({}* %133, i64 1, {}* nonnull %"closure->LAMBDA1403", {}* null, {}* null, {}* null)
          to label %normal-dest1428 unwind label %cleanup-lpad

normal-dest1428:                                  ; preds = %normal-dest1421
  %.elt2584 = extractvalue { {}*, i64 } %296, 0
  %.elt2586 = extractvalue { {}*, i64 } %296, 1
  %cond2264 = icmp eq i64 %.elt2586, 0
  %297 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161288.2 = select i1 %cond2264, {}* %297, {}* %.elt2584
  br label %tag243

header-check-br1434:                              ; preds = %normal-dest2041
  %irc-bit-cast1438 = bitcast {}* %y455.1 to i8*
  %gep1439 = getelementptr inbounds i8, i8* %irc-bit-cast1438, i64 -9
  %irc-bit-cast1440 = bitcast i8* %gep1439 to i64*
  %298 = load i64, i64* %irc-bit-cast1440, align 8
  switch i64 %298, label %header-check-br2100 [
    i64 1325, label %tag224
    i64 1341, label %tag224
  ]

normal-dest1442:                                  ; preds = %tag175
  %ptrtoint1443 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint1444 = add i64 %ptrtoint1443, 7
  %entry-point-addr1445 = inttoptr i64 %entry-point-addr-uint1444 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1446 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1445, align 8
  %299 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1446({}* %74, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1449 unwind label %cleanup-lpad

normal-dest1449:                                  ; preds = %normal-dest1442
  %.elt2588 = extractvalue { {}*, i64 } %299, 0
  %.elt2590 = extractvalue { {}*, i64 } %299, 1
  %cond2265 = icmp eq i64 %.elt2590, 0
  %300 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %schluesselliste.2 = select i1 %cond2265, {}* %300, {}* %.elt2588
  br label %tag169

header-check-br1484:                              ; preds = %tag240
  %gep1489 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %211, i64 -9, i32 0
  %irc-bit-cast1490 = bitcast i8* %gep1489 to i64*
  %301 = load i64, i64* %irc-bit-cast1490, align 8
  %302 = icmp ne i64 %301, 1325
  %test671.not = xor i1 %test671, true
  %brmerge = or i1 %302, %test671.not
  br i1 %brmerge, label %tag164, label %header-check-br563

normal-dest1492:                                  ; preds = %maybe-more-tests701
  %ptrtoint1493 = ptrtoint {}* %175 to i64
  %entry-point-addr-uint1494 = add i64 %ptrtoint1493, 7
  %entry-point-addr1495 = inttoptr i64 %entry-point-addr-uint1494 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1496 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1495, align 8
  %303 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1496({}* %175, i64 1, {}* nonnull %"closure->LAMBDA1403", {}* null, {}* null, {}* null)
          to label %normal-dest1499 unwind label %cleanup-lpad

normal-dest1499:                                  ; preds = %normal-dest1492
  %.elt2572 = extractvalue { {}*, i64 } %303, 0
  %.elt2574 = extractvalue { {}*, i64 } %303, 1
  %cond2262 = icmp eq i64 %.elt2574, 0
  %304 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161305.2 = select i1 %cond2262, {}* %304, {}* %.elt2572
  br label %tag116

normal-dest1506:                                  ; preds = %tag190
  %305 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %306 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %307 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %308 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 170), align 16
  %ptrtoint1507 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint1508 = add i64 %ptrtoint1507, 7
  %entry-point-addr1509 = inttoptr i64 %entry-point-addr-uint1508 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1510 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1509, align 8
  %309 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1510({}* %76, i64 5, {}* %305, {}* %306, {}* %"closure->LAMBDA1403", {}* %307, {}* %308)
          to label %normal-dest1513 unwind label %cleanup-lpad

normal-dest1513:                                  ; preds = %normal-dest1506
  %.elt2269 = extractvalue { {}*, i64 } %309, 0
  %.elt2271 = extractvalue { {}*, i64 } %309, 1
  %cond2212 = icmp eq i64 %.elt2271, 0
  %310 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161358.2 = select i1 %cond2212, {}* %310, {}* %.elt2269
  br label %tag197

header-check-br1519:                              ; preds = %header-check-br2150
  %.off2695 = add i64 %403, -1001
  %311 = icmp ult i64 %.off2695, 5
  br i1 %311, label %maybe-more-tests1527, label %tag6

maybe-more-tests1527:                             ; preds = %header-check-br1519
  %312 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %313 = invoke {}* @cc_safe_fdefinition({}* %312)
          to label %normal-dest1538 unwind label %cleanup-lpad

normal-dest1538:                                  ; preds = %maybe-more-tests1527
  %ptrtoint1539 = ptrtoint {}* %313 to i64
  %entry-point-addr-uint1540 = add i64 %ptrtoint1539, 7
  %entry-point-addr1541 = inttoptr i64 %entry-point-addr-uint1540 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1542 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1541, align 8
  %314 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1542({}* %313, i64 1, {}* nonnull %"closure->LAMBDA1772", {}* null, {}* null, {}* null)
          to label %normal-dest1545 unwind label %cleanup-lpad

normal-dest1545:                                  ; preds = %normal-dest1538
  %.elt2486 = extractvalue { {}*, i64 } %314, 0
  %.elt2488 = extractvalue { {}*, i64 } %314, 1
  %cond2247 = icmp eq i64 %.elt2488, 0
  %315 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160874.2 = select i1 %cond2247, {}* %315, {}* %.elt2486
  br label %tag162

normal-dest1552:                                  ; preds = %tag197
  %316 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 159), align 8
  %317 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 160), align 16
  %318 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 161), align 8
  %ptrtoint1553 = ptrtoint {}* %G161358.0 to i64
  %entry-point-addr-uint1554 = add i64 %ptrtoint1553, 7
  %entry-point-addr1555 = inttoptr i64 %entry-point-addr-uint1554 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1556 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1555, align 8
  %319 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1556({}* %G161358.0, i64 4, {}* %78, {}* %316, {}* %317, {}* %318)
          to label %tag234 unwind label %cleanup-lpad

normal-dest1565:                                  ; preds = %maybe-more-tests1002
  %ptrtoint1566 = ptrtoint {}* %229 to i64
  %entry-point-addr-uint1567 = add i64 %ptrtoint1566, 7
  %entry-point-addr1568 = inttoptr i64 %entry-point-addr-uint1567 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1569 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1568, align 8
  %320 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1569({}* %229, i64 1, {}* nonnull %"closure->LAMBDA1772", {}* null, {}* null, {}* null)
          to label %normal-dest1572 unwind label %cleanup-lpad

normal-dest1572:                                  ; preds = %normal-dest1565
  %.elt2386 = extractvalue { {}*, i64 } %320, 0
  %.elt2388 = extractvalue { {}*, i64 } %320, 1
  %cond2230 = icmp eq i64 %.elt2388, 0
  %321 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161065.2 = select i1 %cond2230, {}* %321, {}* %.elt2386
  br label %tag110

normal-dest1584:                                  ; preds = %normal-dest1660
  %.elt2475 = extractvalue { {}*, i64 } %342, 0
  %.elt2477 = extractvalue { {}*, i64 } %342, 1
  %cond2246 = icmp eq i64 %.elt2477, 0
  %322 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160877.0 = select i1 %cond2246, {}* %322, {}* %.elt2475
  %323 = ptrtoint {}* %110 to i64
  %324 = add i64 %323, -3
  %325 = inttoptr i64 %324 to {}**
  %326 = load {}*, {}** %325, align 8, !tbaa !31
  %ptrtoint1591 = ptrtoint {}* %G160874.0 to i64
  %entry-point-addr-uint1592 = add i64 %ptrtoint1591, 7
  %entry-point-addr1593 = inttoptr i64 %entry-point-addr-uint1592 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1594 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1593, align 8
  %327 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1594({}* %G160874.0, i64 4, {}* %OUT1587891291.0, {}* %G160876.0, {}* %G160877.0, {}* %326)
          to label %tag38 unwind label %cleanup-lpad

normal-dest1610:                                  ; preds = %tag203
  %ptrtoint1611 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint1612 = add i64 %ptrtoint1611, 7
  %entry-point-addr1613 = inttoptr i64 %entry-point-addr-uint1612 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1614 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1613, align 8
  %328 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1614({}* %80, i64 1, {}* %293, {}* null, {}* null, {}* null)
          to label %normal-dest1617 unwind label %cleanup-lpad

normal-dest1617:                                  ; preds = %normal-dest1610
  %.elt2556 = extractvalue { {}*, i64 } %328, 0
  %.elt2558 = extractvalue { {}*, i64 } %328, 1
  %cond2259 = icmp eq i64 %.elt2558, 0
  %329 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161325.0 = select i1 %cond2259, {}* %329, {}* %.elt2556
  %330 = icmp eq {}* %G161325.0, %329
  br i1 %330, label %tag223, label %tag168

header-check-br1630:                              ; preds = %tag206
  %irc-bit-cast1634 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1635 = getelementptr inbounds i8, i8* %irc-bit-cast1634, i64 -9
  %irc-bit-cast1636 = bitcast i8* %gep1635 to i64*
  %331 = load i64, i64* %irc-bit-cast1636, align 8
  %.off2689 = add i64 %331, -913
  %332 = icmp ult i64 %.off2689, 85
  br i1 %332, label %tag15, label %header-check-br1163

normal-dest1640:                                  ; preds = %tag207
  %333 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 196), align 16
  %334 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 197), align 8
  %335 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 198), align 16
  %336 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 199), align 8
  %337 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 200), align 16
  %338 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 201), align 8
  %ptrtoint1641 = ptrtoint {}* %G160560.0 to i64
  %entry-point-addr-uint1642 = add i64 %ptrtoint1641, 7
  %entry-point-addr1643 = inttoptr i64 %entry-point-addr-uint1642 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1644 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1643, align 8
  %339 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1644({}* %G160560.0, i64 7, {}* %82, {}* %333, {}* %334, {}* %335, {}* %336, {}* %337, {}* %338)
          to label %tag80 unwind label %cleanup-lpad

normal-dest1653:                                  ; preds = %normal-dest642
  %ptrtoint1654 = ptrtoint {}* %163 to i64
  %entry-point-addr-uint1655 = add i64 %ptrtoint1654, 7
  %entry-point-addr1656 = inttoptr i64 %entry-point-addr-uint1655 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1657 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1656, align 8
  %340 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1657({}* %163, i64 2, {}* %161, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1660 unwind label %cleanup-lpad

normal-dest1660:                                  ; preds = %normal-dest1653
  %.elt2471 = extractvalue { {}*, i64 } %340, 0
  %.elt2473 = extractvalue { {}*, i64 } %340, 1
  %cond2245 = icmp eq i64 %.elt2473, 0
  %341 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160880.1 = select i1 %cond2245, {}* %341, {}* %.elt2471
  %ptrtoint1578 = ptrtoint {}* %159 to i64
  %entry-point-addr-uint1579 = add i64 %ptrtoint1578, 7
  %entry-point-addr1580 = inttoptr i64 %entry-point-addr-uint1579 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1581 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1580, align 8
  %342 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1581({}* %159, i64 1, {}* %G160880.1, {}* null, {}* null, {}* null)
          to label %normal-dest1584 unwind label %cleanup-lpad

header-check-br1670:                              ; preds = %header-check-br1299
  %irc-bit-cast1674 = bitcast {}* %y455.1 to i8*
  %gep1675 = getelementptr inbounds i8, i8* %irc-bit-cast1674, i64 -9
  %irc-bit-cast1676 = bitcast i8* %gep1675 to i64*
  %343 = load i64, i64* %irc-bit-cast1676, align 8
  %344 = icmp eq i64 %343, 1325
  br i1 %344, label %tag91, label %tag285

normal-dest1684:                                  ; preds = %tag215
  %.elt2508 = extractvalue { {}*, i64 } %83, 0
  %.elt2510 = extractvalue { {}*, i64 } %83, 1
  %cond2251 = icmp eq i64 %.elt2510, 0
  %345 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160790.0 = select i1 %cond2251, {}* %345, {}* %.elt2508
  %346 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %347 = invoke {}* @cc_safe_fdefinition({}* %346)
          to label %normal-dest1691 unwind label %cleanup-lpad

normal-dest1691:                                  ; preds = %normal-dest1684
  %348 = inttoptr i64 %208 to {}**
  %349 = load {}*, {}** %348, align 8, !tbaa !31
  %350 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %351 = invoke {}* @cc_safe_fdefinition({}* %350)
          to label %normal-dest605 unwind label %cleanup-lpad

normal-dest1718:                                  ; preds = %tag219
  %352 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %353 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %354 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %355 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint709 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint710 = add i64 %ptrtoint709, 7
  %entry-point-addr711 = inttoptr i64 %entry-point-addr-uint710 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point712 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr711, align 8
  %356 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point712({}* %85, i64 5, {}* %352, {}* %353, {}* %y473.1, {}* %354, {}* %355)
          to label %normal-dest715 unwind label %cleanup-lpad

header-check-br1728:                              ; preds = %tag223
  %irc-bit-cast1732 = bitcast {}* %"closure->LAMBDA1403" to i8*
  %gep1733 = getelementptr inbounds i8, i8* %irc-bit-cast1732, i64 -9
  %irc-bit-cast1734 = bitcast i8* %gep1733 to i64*
  %357 = load i64, i64* %irc-bit-cast1734, align 8
  %.off2703 = add i64 %357, -913
  %358 = icmp ult i64 %.off2703, 85
  br i1 %358, label %tag243, label %header-check-br446

normal-dest1741:                                  ; preds = %tag226
  %359 = invoke double @from_object_double({}* nonnull %y362.1)
          to label %normal-dest1742 unwind label %cleanup-lpad

normal-dest1742:                                  ; preds = %normal-dest1741
  %360 = fdiv double %87, %359
  %361 = invoke {}* @to_object_double(double %360)
          to label %tag42 unwind label %cleanup-lpad

normal-dest1748:                                  ; preds = %tag230
  %ptrtoint1749 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint1750 = add i64 %ptrtoint1749, 7
  %entry-point-addr1751 = inttoptr i64 %entry-point-addr-uint1750 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1752 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1751, align 8
  %362 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1752({}* %89, i64 1, {}* %151, {}* null, {}* null, {}* null)
          to label %normal-dest1755 unwind label %cleanup-lpad

normal-dest1755:                                  ; preds = %normal-dest1748
  %.elt2355 = extractvalue { {}*, i64 } %362, 0
  %.elt2357 = extractvalue { {}*, i64 } %362, 1
  %cond2225 = icmp eq i64 %.elt2357, 0
  %363 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %OUT158827.0 = select i1 %cond2225, {}* %363, {}* %.elt2355
  %ptrtoint1762 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only1763 = and i64 %ptrtoint1762, 7
  %test1764 = icmp eq i64 %tag-only1763, 1
  br i1 %test1764, label %header-check-br1761, label %tag300

header-check-br1761:                              ; preds = %normal-dest1755
  %irc-bit-cast1765 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep1766 = getelementptr inbounds i8, i8* %irc-bit-cast1765, i64 -9
  %irc-bit-cast1767 = bitcast i8* %gep1766 to i64*
  %364 = load i64, i64* %irc-bit-cast1767, align 8
  %.off2687 = add i64 %364, -913
  %365 = icmp ult i64 %.off2687, 85
  br i1 %365, label %tag86, label %header-check-br677

normal-dest1771:                                  ; preds = %tag234
  %366 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %367 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %368 = icmp eq {}* %366, %367
  br i1 %368, label %tag143, label %tag104

header-check-br1837:                              ; preds = %header-check-br1074
  %.off2700 = add i64 %241, -1001
  %369 = icmp ult i64 %.off2700, 5
  br i1 %369, label %maybe-more-tests1845, label %tag190

maybe-more-tests1845:                             ; preds = %header-check-br1837
  %370 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %371 = invoke {}* @cc_safe_fdefinition({}* %370)
          to label %normal-dest883 unwind label %cleanup-lpad

normal-dest1846:                                  ; preds = %tag252
  %372 = invoke float @from_object_float({}* %y473.1)
          to label %normal-dest1847 unwind label %cleanup-lpad

normal-dest1847:                                  ; preds = %normal-dest1846
  %373 = fdiv float %95, %372
  %374 = invoke {}* @to_object_float(float %373)
          to label %tag215 unwind label %cleanup-lpad

normal-dest1881:                                  ; preds = %maybe-more-tests2097
  %ptrtoint1882 = ptrtoint {}* %400 to i64
  %entry-point-addr-uint1883 = add i64 %ptrtoint1882, 7
  %entry-point-addr1884 = inttoptr i64 %entry-point-addr-uint1883 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1885 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1884, align 8
  %375 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1885({}* %400, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1888 unwind label %cleanup-lpad

normal-dest1888:                                  ; preds = %normal-dest1881
  %.elt2327 = extractvalue { {}*, i64 } %375, 0
  %.elt2329 = extractvalue { {}*, i64 } %375, 1
  %cond2220 = icmp eq i64 %.elt2329, 0
  %376 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160560.2 = select i1 %cond2220, {}* %376, {}* %.elt2327
  br label %tag207

normal-dest1898:                                  ; preds = %normal-dest1293
  %ptrtoint1899 = ptrtoint {}* %271 to i64
  %entry-point-addr-uint1900 = add i64 %ptrtoint1899, 7
  %entry-point-addr1901 = inttoptr i64 %entry-point-addr-uint1900 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1902 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1901, align 8
  %377 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1902({}* %271, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1905 unwind label %cleanup-lpad

normal-dest1905:                                  ; preds = %normal-dest1898
  %.elt2452 = extractvalue { {}*, i64 } %377, 0
  %.elt2454 = extractvalue { {}*, i64 } %377, 1
  %cond2242 = icmp eq i64 %.elt2454, 0
  %378 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y362.1 = select i1 %cond2242, {}* %378, {}* %.elt2452
  %ptrtoint1209 = ptrtoint {}* %y362.1 to i64
  %tag-only1210 = and i64 %ptrtoint1209, 7
  %test1211 = icmp eq i64 %tag-only1210, 1
  br i1 %test1211, label %header-check-br1208, label %tag67

normal-dest1956:                                  ; preds = %normal-dest667
  call void @unreachableError()
  unreachable

normal-dest1996:                                  ; preds = %tag273
  %379 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %380 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %381 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %382 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 195), align 8
  %ptrtoint1997 = ptrtoint {}* %98 to i64
  %entry-point-addr-uint1998 = add i64 %ptrtoint1997, 7
  %entry-point-addr1999 = inttoptr i64 %entry-point-addr-uint1998 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2000 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1999, align 8
  %383 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2000({}* %98, i64 5, {}* %379, {}* %380, {}* %"closure->LAMBDA", {}* %381, {}* %382)
          to label %normal-dest2003 unwind label %cleanup-lpad

normal-dest2003:                                  ; preds = %normal-dest1996
  %.elt2371 = extractvalue { {}*, i64 } %383, 0
  %.elt2373 = extractvalue { {}*, i64 } %383, 1
  %cond2228 = icmp eq i64 %.elt2373, 0
  %384 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160481.2 = select i1 %cond2228, {}* %384, {}* %.elt2371
  br label %tag15

normal-dest2015:                                  ; preds = %normal-dest820
  %.elt2304 = extractvalue { {}*, i64 } %186, 0
  %.elt2306 = extractvalue { {}*, i64 } %186, 1
  %cond2218 = icmp eq i64 %.elt2306, 0
  %385 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161068.0 = select i1 %cond2218, {}* %385, {}* %.elt2304
  %386 = ptrtoint {}* %110 to i64
  %387 = add i64 %386, -3
  %388 = inttoptr i64 %387 to {}**
  %389 = load {}*, {}** %388, align 8, !tbaa !31
  %ptrtoint2022 = ptrtoint {}* %G161065.0 to i64
  %entry-point-addr-uint2023 = add i64 %ptrtoint2022, 7
  %entry-point-addr2024 = inttoptr i64 %entry-point-addr-uint2023 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2025 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2024, align 8
  %390 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2025({}* %G161065.0, i64 4, {}* %47, {}* %G161067.0, {}* %G161068.0, {}* %389)
          to label %tag38 unwind label %cleanup-lpad

normal-dest2034:                                  ; preds = %normal-dest953
  %ptrtoint2035 = ptrtoint {}* %224 to i64
  %entry-point-addr-uint2036 = add i64 %ptrtoint2035, 7
  %entry-point-addr2037 = inttoptr i64 %entry-point-addr-uint2036 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2038 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2037, align 8
  %391 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2038({}* %224, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest2041 unwind label %cleanup-lpad

normal-dest2041:                                  ; preds = %normal-dest2034
  %.elt2281 = extractvalue { {}*, i64 } %391, 0
  %.elt2283 = extractvalue { {}*, i64 } %391, 1
  %cond2214 = icmp eq i64 %.elt2283, 0
  %392 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y455.1 = select i1 %cond2214, {}* %392, {}* %.elt2281
  %ptrtoint1435 = ptrtoint {}* %y455.1 to i64
  %tag-only1436 = and i64 %ptrtoint1435, 7
  %test1437 = icmp eq i64 %tag-only1436, 1
  br i1 %test1437, label %header-check-br1434, label %tag32

normal-dest2055:                                  ; preds = %tag283
  %ptrtoint2056 = ptrtoint {}* %100 to i64
  %entry-point-addr-uint2057 = add i64 %ptrtoint2056, 7
  %entry-point-addr2058 = inttoptr i64 %entry-point-addr-uint2057 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2059 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2058, align 8
  %393 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2059({}* %100, i64 1, {}* %151, {}* null, {}* null, {}* null)
          to label %normal-dest2062 unwind label %cleanup-lpad

normal-dest2062:                                  ; preds = %normal-dest2055
  %.elt2351 = extractvalue { {}*, i64 } %393, 0
  %.elt2353 = extractvalue { {}*, i64 } %393, 1
  %cond2224 = icmp eq i64 %.elt2353, 0
  %394 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160524.0 = select i1 %cond2224, {}* %394, {}* %.elt2351
  %395 = icmp eq {}* %G160524.0, %394
  br i1 %395, label %tag206, label %tag230

normal-dest2076:                                  ; preds = %tag285
  %ptrtoint2077 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint2078 = add i64 %ptrtoint2077, 7
  %entry-point-addr2079 = inttoptr i64 %entry-point-addr-uint2078 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2080 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2079, align 8
  %396 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2080({}* %102, i64 2, {}* %222, {}* %y455.1, {}* null, {}* null)
          to label %normal-dest2083 unwind label %cleanup-lpad

normal-dest2083:                                  ; preds = %normal-dest2076
  %.elt2291 = extractvalue { {}*, i64 } %396, 0
  %.elt2293 = extractvalue { {}*, i64 } %396, 1
  %cond2215 = icmp eq i64 %.elt2293, 0
  %397 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161095.1 = select i1 %cond2215, {}* %397, {}* %.elt2291
  br label %tag28

header-check-br2089:                              ; preds = %header-check-br903
  %.off2686 = add i64 %198, -1001
  %398 = icmp ult i64 %.off2686, 5
  br i1 %398, label %maybe-more-tests2097, label %tag23

maybe-more-tests2097:                             ; preds = %header-check-br2089
  %399 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %400 = invoke {}* @cc_safe_fdefinition({}* %399)
          to label %normal-dest1881 unwind label %cleanup-lpad

header-check-br2100:                              ; preds = %header-check-br1434
  %.old = and i64 %ptrtoint1435, 3
  %fixnump-test1016.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test1016.old, label %tag224, label %switch.early.test2712

switch.early.test2712:                            ; preds = %header-check-br2100
  switch i64 %298, label %tag47 [
    i64 1349, label %tag224
    i64 1309, label %tag224
  ]

normal-dest2137:                                  ; preds = %tag296
  %ptrtoint2138 = ptrtoint {}* %106 to i64
  %entry-point-addr-uint2139 = add i64 %ptrtoint2138, 7
  %entry-point-addr2140 = inttoptr i64 %entry-point-addr-uint2139 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2141 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2140, align 8
  %401 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2141({}* %106, i64 1, {}* %366, {}* null, {}* null, {}* null)
          to label %normal-dest2144 unwind label %cleanup-lpad

normal-dest2144:                                  ; preds = %normal-dest2137
  %.elt2444 = extractvalue { {}*, i64 } %401, 0
  %.elt2446 = extractvalue { {}*, i64 } %401, 1
  %cond2240 = icmp eq i64 %.elt2446, 0
  %402 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %OUT1587891291.0 = select i1 %cond2240, {}* %402, {}* %.elt2444
  %ptrtoint2151 = ptrtoint {}* %"closure->LAMBDA1772" to i64
  %tag-only2152 = and i64 %ptrtoint2151, 7
  %test2153 = icmp eq i64 %tag-only2152, 1
  br i1 %test2153, label %header-check-br2150, label %tag6

header-check-br2150:                              ; preds = %normal-dest2144
  %irc-bit-cast2154 = bitcast {}* %"closure->LAMBDA1772" to i8*
  %gep2155 = getelementptr inbounds i8, i8* %irc-bit-cast2154, i64 -9
  %irc-bit-cast2156 = bitcast i8* %gep2155 to i64*
  %403 = load i64, i64* %irc-bit-cast2156, align 8
  %.off2694 = add i64 %403, -913
  %404 = icmp ult i64 %.off2694, 85
  br i1 %404, label %tag162, label %header-check-br1519

normal-dest2170:                                  ; preds = %tag300
  %405 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %406 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %407 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %408 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 202), align 16
  %ptrtoint2171 = ptrtoint {}* %108 to i64
  %entry-point-addr-uint2172 = add i64 %ptrtoint2171, 7
  %entry-point-addr2173 = inttoptr i64 %entry-point-addr-uint2172 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2174 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2173, align 8
  %409 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2174({}* %108, i64 5, {}* %405, {}* %406, {}* %"closure->LAMBDA", {}* %407, {}* %408)
          to label %normal-dest2177 unwind label %cleanup-lpad

normal-dest2177:                                  ; preds = %normal-dest2170
  %.elt2359 = extractvalue { {}*, i64 } %409, 0
  %.elt2361 = extractvalue { {}*, i64 } %409, 1
  %cond2226 = icmp eq i64 %.elt2361, 0
  %410 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160501.1 = select i1 %cond2226, {}* %410, {}* %.elt2359
  br label %tag86

normal-dest2189:                                  ; preds = %normal-dest938
  call void @unreachableError()
  unreachable

normal-dest2191:                                  ; preds = %maybe-more-tests685
  %ptrtoint2192 = ptrtoint {}* %172 to i64
  %entry-point-addr-uint2193 = add i64 %ptrtoint2192, 7
  %entry-point-addr2194 = inttoptr i64 %entry-point-addr-uint2193 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2195 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2194, align 8
  %411 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2195({}* %172, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest2198 unwind label %cleanup-lpad

normal-dest2198:                                  ; preds = %normal-dest2191
  %.elt2367 = extractvalue { {}*, i64 } %411, 0
  %.elt2369 = extractvalue { {}*, i64 } %411, 1
  %cond2227 = icmp eq i64 %.elt2369, 0
  %412 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160501.2 = select i1 %cond2227, {}* %412, {}* %.elt2367
  br label %tag86
}

declare float @from_object_float({}*) local_unnamed_addr #3

declare {}* @to_object_float(float) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.1"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !36 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag2:                                             ; preds = %tag29, %tag23
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %9 = insertvalue { {}*, i64 } undef, {}* %52, 0
  %10 = insertvalue { {}*, i64 } %9, i64 1, 1
  ret { {}*, i64 } %10

tag3:                                             ; preds = %tag16
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit.split-lp

tag5:                                             ; preds = %normal-dest116, %tag20
  %13 = phi {}* [ %28, %tag20 ], [ %70, %normal-dest116 ]
  %format-arg-158833.0 = phi {}* [ %format-arg-158833.1605, %tag20 ], [ %format-arg-158833.2, %normal-dest116 ]
  %14 = icmp eq {}* %G158864.0, %13
  br i1 %14, label %tag19, label %tag35

tag7:                                             ; preds = %tag29
  %15 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %.pre611 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag23

tag9:                                             ; preds = %tag20
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit.split-lp

tag11:                                            ; preds = %normal-dest237, %process-rest-argument
  %18 = phi {}* [ %53, %process-rest-argument ], [ %108, %normal-dest237 ]
  %format-arg-158829.0 = phi {}* [ %format-arg-158829.1545548563574597, %process-rest-argument ], [ %format-arg-158829.2, %normal-dest237 ]
  %19 = icmp eq {}* %G158868.0552559578593, %18
  br i1 %19, label %tag13, label %tag16

tag13:                                            ; preds = %tag11
  %20 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit.split-lp

tag14:                                            ; preds = %tag41
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest159 unwind label %cleanup-lpad.loopexit.split-lp

tag16:                                            ; preds = %normal-dest152, %tag11
  %24 = phi {}* [ %18, %tag11 ], [ %80, %normal-dest152 ]
  %format-arg-158830.0 = phi {}* [ %format-arg-158830.1554557580591, %tag11 ], [ %format-arg-158830.2, %normal-dest152 ]
  %25 = icmp eq {}* %G158867.0565572599, %24
  br i1 %25, label %tag3, label %tag41

tag19:                                            ; preds = %tag5
  %26 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit.split-lp

tag20:                                            ; preds = %normal-dest166, %tag41
  %28 = phi {}* [ %48, %tag41 ], [ %88, %normal-dest166 ]
  %format-arg-158832.0 = phi {}* [ %format-arg-158832.1584587, %tag41 ], [ %format-arg-158832.2, %normal-dest166 ]
  %29 = icmp eq {}* %G158865.0603, %28
  br i1 %29, label %tag9, label %tag5

tag21:                                            ; preds = %tag28
  %30 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest194 unwind label %cleanup-lpad.loopexit

tag23:                                            ; preds = %normal-dest215, %tag7
  %32 = phi {}* [ %.pre611, %tag7 ], [ %100, %normal-dest215 ]
  %G160590.0 = phi {}* [ %15, %tag7 ], [ %G160590.1, %normal-dest215 ]
  %33 = icmp eq {}* %G160590.0, %32
  br i1 %33, label %tag2, label %tag36

tag26:                                            ; preds = %tag26.backedge, %tag26.preheader
  %I.0 = phi {}* [ null, %tag26.preheader ], [ %I.0.be, %tag26.backedge ]
  %34 = ptrtoint {}* %I.0 to i64
  %fixnum-tag-only223489 = and i64 %34, 3
  %fixnump-test224 = icmp eq i64 %fixnum-tag-only223489, 0
  br i1 %fixnump-test224, label %tag29, label %tag33

tag27:                                            ; preds = %normal-dest422
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit

tag28:                                            ; preds = %normal-dest422
  %37 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %34, i64 4)
  %result = extractvalue { i64, i1 } %37, 0
  %overflow = extractvalue { i64, i1 } %37, 1
  %38 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag21, label %tag26.backedge

tag26.backedge:                                   ; preds = %tag28, %normal-dest131, %normal-dest201
  %I.0.be = phi {}* [ %I.2, %normal-dest201 ], [ %I.1, %normal-dest131 ], [ %38, %tag28 ]
  br label %tag26

tag29:                                            ; preds = %tag26
  %39 = icmp slt {}* %I.0, inttoptr (i64 8 to {}*)
  br i1 %39, label %tag7, label %tag2

tag31:                                            ; preds = %process-rest-argument
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest230 unwind label %cleanup-lpad.loopexit.split-lp

tag33:                                            ; preds = %tag26
  %42 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 145), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest208 unwind label %cleanup-lpad.loopexit

tag35:                                            ; preds = %normal-dest187, %tag5
  %format-arg-158834.0 = phi {}* [ %format-arg-158834.1, %tag5 ], [ %format-arg-158834.2, %normal-dest187 ]
  %44 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest252 unwind label %cleanup-lpad.loopexit.split-lp

tag36:                                            ; preds = %tag23
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest415 unwind label %cleanup-lpad.loopexit

tag41:                                            ; preds = %normal-dest101, %tag16
  %48 = phi {}* [ %24, %tag16 ], [ %62, %normal-dest101 ]
  %format-arg-158831.0 = phi {}* [ %format-arg-158831.1567570601, %tag16 ], [ %format-arg-158831.2, %normal-dest101 ]
  %49 = icmp eq {}* %G158866.0582589, %48
  br i1 %49, label %tag14, label %tag20

cleanup-lpad.loopexit:                            ; preds = %tag27, %normal-dest123, %tag21, %normal-dest194, %tag33, %normal-dest208, %tag36, %normal-dest415
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %tag3, %normal-dest98, %tag9, %normal-dest109, %tag13, %normal-dest145, %tag14, %normal-dest159, %tag19, %normal-dest180, %tag31, %normal-dest230, %tag35, %normal-dest252, %normal-dest259, %normal-dest265, %normal-dest272, %normal-dest282, %normal-dest289, %normal-dest295, %normal-dest302, %normal-dest312, %normal-dest319, %normal-dest325, %normal-dest332, %normal-dest342, %normal-dest349, %normal-dest355, %normal-dest362, %normal-dest372, %normal-dest379, %normal-dest385, %normal-dest392, %normal-dest402
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %51 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs46 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-147 = add i64 %rem-nargs46, -1
  store i64 %rem-nargs-147, i64* %"remaining-nargs*", align 8
  %vaarg48 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args53 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args53, label %opt-cont52, label %opt-cont.opt-cont52.thread_crit_edge

opt-cont.opt-cont52.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont52:                                       ; preds = %opt-cont
  %rem-nargs54 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-155 = add i64 %rem-nargs54, -1
  store i64 %rem-nargs-155, i64* %"remaining-nargs*", align 8
  %vaarg56 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args61 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args61, label %opt-cont52.opt-cont60.thread_crit_edge, label %opt-cont60

opt-cont52.opt-cont60.thread_crit_edge:           ; preds = %opt-cont52
  %.pre607 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont60:                                       ; preds = %opt-cont52
  %rem-nargs62 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-163 = add i64 %rem-nargs62, -1
  store i64 %rem-nargs-163, i64* %"remaining-nargs*", align 8
  %vaarg64 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args69 = icmp sgt i64 %nargs, 4
  br i1 %enough-given-args69, label %opt-cont68, label %opt-cont60.opt-cont68.thread_crit_edge

opt-cont60.opt-cont68.thread_crit_edge:           ; preds = %opt-cont60
  %.pre608 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont68:                                       ; preds = %opt-cont60
  %rem-nargs70 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-171 = add i64 %rem-nargs70, -1
  store i64 %rem-nargs-171, i64* %"remaining-nargs*", align 8
  %vaarg72 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args77 = icmp eq i64 %nargs, 5
  br i1 %enough-given-args77, label %opt-cont68.opt-cont76.thread_crit_edge, label %opt-cont76

opt-cont68.opt-cont76.thread_crit_edge:           ; preds = %opt-cont68
  %.pre609 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont76:                                       ; preds = %opt-cont68
  %rem-nargs78 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-179 = add i64 %rem-nargs78, -1
  store i64 %rem-nargs-179, i64* %"remaining-nargs*", align 8
  %vaarg80 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args85 = icmp sgt i64 %nargs, 6
  br i1 %enough-given-args85, label %opt-arg82, label %opt-cont76.opt-init83_crit_edge

opt-cont76.opt-init83_crit_edge:                  ; preds = %opt-cont76
  %.pre610 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg82:                                        ; preds = %opt-cont76
  %rem-nargs86 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-187 = add i64 %rem-nargs86, -1
  store i64 %rem-nargs-187, i64* %"remaining-nargs*", align 8
  %vaarg88 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont76.opt-init83_crit_edge, %opt-cont60.opt-cont68.thread_crit_edge, %opt-cont.thread, %opt-cont.opt-cont52.thread_crit_edge, %opt-cont52.opt-cont60.thread_crit_edge, %opt-cont68.opt-cont76.thread_crit_edge, %opt-arg82
  %format-arg-158833.1605 = phi {}* [ %vaarg80, %opt-arg82 ], [ %vaarg80, %opt-cont76.opt-init83_crit_edge ], [ undef, %opt-cont60.opt-cont68.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont52.thread_crit_edge ], [ undef, %opt-cont52.opt-cont60.thread_crit_edge ], [ undef, %opt-cont68.opt-cont76.thread_crit_edge ]
  %G158865.0603 = phi {}* [ %50, %opt-arg82 ], [ %50, %opt-cont76.opt-init83_crit_edge ], [ %.pre608, %opt-cont60.opt-cont68.thread_crit_edge ], [ %51, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont52.thread_crit_edge ], [ %.pre607, %opt-cont52.opt-cont60.thread_crit_edge ], [ %.pre609, %opt-cont68.opt-cont76.thread_crit_edge ]
  %format-arg-158831.1567570601 = phi {}* [ %vaarg64, %opt-arg82 ], [ %vaarg64, %opt-cont76.opt-init83_crit_edge ], [ %vaarg64, %opt-cont60.opt-cont68.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont52.thread_crit_edge ], [ undef, %opt-cont52.opt-cont60.thread_crit_edge ], [ %vaarg64, %opt-cont68.opt-cont76.thread_crit_edge ]
  %G158867.0565572599 = phi {}* [ %50, %opt-arg82 ], [ %50, %opt-cont76.opt-init83_crit_edge ], [ %50, %opt-cont60.opt-cont68.thread_crit_edge ], [ %51, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont52.thread_crit_edge ], [ %.pre607, %opt-cont52.opt-cont60.thread_crit_edge ], [ %50, %opt-cont68.opt-cont76.thread_crit_edge ]
  %format-arg-158829.1545548563574597 = phi {}* [ %vaarg48, %opt-arg82 ], [ %vaarg48, %opt-cont76.opt-init83_crit_edge ], [ %vaarg48, %opt-cont60.opt-cont68.thread_crit_edge ], [ undef, %opt-cont.thread ], [ %vaarg48, %opt-cont.opt-cont52.thread_crit_edge ], [ %vaarg48, %opt-cont52.opt-cont60.thread_crit_edge ], [ %vaarg48, %opt-cont68.opt-cont76.thread_crit_edge ]
  %G158869.0543550561576595 = phi {}* [ %50, %opt-arg82 ], [ %50, %opt-cont76.opt-init83_crit_edge ], [ %50, %opt-cont60.opt-cont68.thread_crit_edge ], [ %51, %opt-cont.thread ], [ %50, %opt-cont.opt-cont52.thread_crit_edge ], [ %50, %opt-cont52.opt-cont60.thread_crit_edge ], [ %50, %opt-cont68.opt-cont76.thread_crit_edge ]
  %G158868.0552559578593 = phi {}* [ %50, %opt-arg82 ], [ %50, %opt-cont76.opt-init83_crit_edge ], [ %50, %opt-cont60.opt-cont68.thread_crit_edge ], [ %51, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont52.thread_crit_edge ], [ %50, %opt-cont52.opt-cont60.thread_crit_edge ], [ %50, %opt-cont68.opt-cont76.thread_crit_edge ]
  %format-arg-158830.1554557580591 = phi {}* [ %vaarg56, %opt-arg82 ], [ %vaarg56, %opt-cont76.opt-init83_crit_edge ], [ %vaarg56, %opt-cont60.opt-cont68.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont52.thread_crit_edge ], [ %vaarg56, %opt-cont52.opt-cont60.thread_crit_edge ], [ %vaarg56, %opt-cont68.opt-cont76.thread_crit_edge ]
  %G158866.0582589 = phi {}* [ %50, %opt-arg82 ], [ %50, %opt-cont76.opt-init83_crit_edge ], [ %.pre608, %opt-cont60.opt-cont68.thread_crit_edge ], [ %51, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont52.thread_crit_edge ], [ %.pre607, %opt-cont52.opt-cont60.thread_crit_edge ], [ %50, %opt-cont68.opt-cont76.thread_crit_edge ]
  %format-arg-158832.1584587 = phi {}* [ %vaarg72, %opt-arg82 ], [ %vaarg72, %opt-cont76.opt-init83_crit_edge ], [ undef, %opt-cont60.opt-cont68.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont52.thread_crit_edge ], [ undef, %opt-cont52.opt-cont60.thread_crit_edge ], [ %vaarg72, %opt-cont68.opt-cont76.thread_crit_edge ]
  %G158864.0 = phi {}* [ %50, %opt-arg82 ], [ %.pre610, %opt-cont76.opt-init83_crit_edge ], [ %.pre608, %opt-cont60.opt-cont68.thread_crit_edge ], [ %51, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont52.thread_crit_edge ], [ %.pre607, %opt-cont52.opt-cont60.thread_crit_edge ], [ %.pre609, %opt-cont68.opt-cont76.thread_crit_edge ]
  %format-arg-158834.1 = phi {}* [ %vaarg88, %opt-arg82 ], [ undef, %opt-cont76.opt-init83_crit_edge ], [ undef, %opt-cont60.opt-cont68.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont52.thread_crit_edge ], [ undef, %opt-cont52.opt-cont60.thread_crit_edge ], [ undef, %opt-cont68.opt-cont76.thread_crit_edge ]
  %52 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %53 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %54 = icmp eq {}* %G158869.0543550561576595, %53
  br i1 %54, label %tag31, label %tag11

normal-dest98:                                    ; preds = %tag3
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %56 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %58 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %60 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 7, {}* %55, {}* %56, {}* %57, {}* %58, {}* %59, {}* %60, {}* inttoptr (i64 52 to {}*))
          to label %normal-dest101 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest101:                                   ; preds = %normal-dest98
  %.elt523 = extractvalue { {}*, i64 } %61, 0
  %.elt525 = extractvalue { {}*, i64 } %61, 1
  %cond444 = icmp eq i64 %.elt525, 0
  %62 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158831.2 = select i1 %cond444, {}* %62, {}* %.elt523
  br label %tag41

normal-dest109:                                   ; preds = %tag9
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %64 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %66 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %68 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint110 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint111 = add i64 %ptrtoint110, 7
  %entry-point-addr112 = inttoptr i64 %entry-point-addr-uint111 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point113 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr112, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point113({}* %17, i64 7, {}* %63, {}* %64, {}* %65, {}* %66, {}* %67, {}* %68, {}* inttoptr (i64 100 to {}*))
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest116:                                   ; preds = %normal-dest109
  %.elt515 = extractvalue { {}*, i64 } %69, 0
  %.elt517 = extractvalue { {}*, i64 } %69, 1
  %cond442 = icmp eq i64 %.elt517, 0
  %70 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158833.2 = select i1 %cond442, {}* %70, {}* %.elt515
  br label %tag5

normal-dest123:                                   ; preds = %tag27
  %ptrtoint125 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint126 = add i64 %ptrtoint125, 7
  %entry-point-addr127 = inttoptr i64 %entry-point-addr-uint126 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point128 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr127, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point128({}* %36, i64 2, {}* %I.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest131 unwind label %cleanup-lpad.loopexit

normal-dest131:                                   ; preds = %normal-dest123
  %.elt500 = extractvalue { {}*, i64 } %71, 0
  %.elt502 = extractvalue { {}*, i64 } %71, 1
  %cond439 = icmp eq i64 %.elt502, 0
  %72 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.1 = select i1 %cond439, {}* %72, {}* %.elt500
  br label %tag26.backedge

normal-dest145:                                   ; preds = %tag13
  %73 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %74 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %75 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %76 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %77 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint146 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint147 = add i64 %ptrtoint146, 7
  %entry-point-addr148 = inttoptr i64 %entry-point-addr-uint147 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point149 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr148, align 8
  %79 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point149({}* %21, i64 7, {}* %73, {}* %74, {}* %75, {}* %76, {}* %77, {}* %78, {}* inttoptr (i64 32 to {}*))
          to label %normal-dest152 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest152:                                   ; preds = %normal-dest145
  %.elt527 = extractvalue { {}*, i64 } %79, 0
  %.elt529 = extractvalue { {}*, i64 } %79, 1
  %cond445 = icmp eq i64 %.elt529, 0
  %80 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158830.2 = select i1 %cond445, {}* %80, {}* %.elt527
  br label %tag16

normal-dest159:                                   ; preds = %tag14
  %81 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %82 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %83 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %84 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %85 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %86 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint160 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint161 = add i64 %ptrtoint160, 7
  %entry-point-addr162 = inttoptr i64 %entry-point-addr-uint161 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point163 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr162, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point163({}* %23, i64 7, {}* %81, {}* %82, {}* %83, {}* %84, {}* %85, {}* %86, {}* inttoptr (i64 76 to {}*))
          to label %normal-dest166 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest166:                                   ; preds = %normal-dest159
  %.elt519 = extractvalue { {}*, i64 } %87, 0
  %.elt521 = extractvalue { {}*, i64 } %87, 1
  %cond443 = icmp eq i64 %.elt521, 0
  %88 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158832.2 = select i1 %cond443, {}* %88, {}* %.elt519
  br label %tag20

normal-dest180:                                   ; preds = %tag19
  %89 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %91 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %92 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %93 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %94 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint181 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint182 = add i64 %ptrtoint181, 7
  %entry-point-addr183 = inttoptr i64 %entry-point-addr-uint182 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point184 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr183, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point184({}* %27, i64 7, {}* %89, {}* %90, {}* %91, {}* %92, {}* %93, {}* %94, {}* inttoptr (i64 124 to {}*))
          to label %normal-dest187 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest187:                                   ; preds = %normal-dest180
  %.elt511 = extractvalue { {}*, i64 } %95, 0
  %.elt513 = extractvalue { {}*, i64 } %95, 1
  %cond441 = icmp eq i64 %.elt513, 0
  %96 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158834.2 = select i1 %cond441, {}* %96, {}* %.elt511
  br label %tag35

normal-dest194:                                   ; preds = %tag21
  %ptrtoint195 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint196 = add i64 %ptrtoint195, 7
  %entry-point-addr197 = inttoptr i64 %entry-point-addr-uint196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr197, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point198({}* %31, i64 1, {}* %38, {}* null, {}* null, {}* null)
          to label %normal-dest201 unwind label %cleanup-lpad.loopexit

normal-dest201:                                   ; preds = %normal-dest194
  %.elt504 = extractvalue { {}*, i64 } %97, 0
  %.elt506 = extractvalue { {}*, i64 } %97, 1
  %cond440 = icmp eq i64 %.elt506, 0
  %98 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.2 = select i1 %cond440, {}* %98, {}* %.elt504
  br label %tag26.backedge

normal-dest208:                                   ; preds = %tag33
  %ptrtoint209 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint210 = add i64 %ptrtoint209, 7
  %entry-point-addr211 = inttoptr i64 %entry-point-addr-uint210 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point212 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr211, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point212({}* %43, i64 2, {}* %I.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest215 unwind label %cleanup-lpad.loopexit

normal-dest215:                                   ; preds = %normal-dest208
  %.elt491 = extractvalue { {}*, i64 } %99, 0
  %.elt493 = extractvalue { {}*, i64 } %99, 1
  %cond = icmp eq i64 %.elt493, 0
  %100 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160590.1 = select i1 %cond, {}* %100, {}* %.elt491
  br label %tag23

normal-dest230:                                   ; preds = %tag31
  %101 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %102 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %103 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %104 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %105 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %106 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint231 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint232 = add i64 %ptrtoint231, 7
  %entry-point-addr233 = inttoptr i64 %entry-point-addr-uint232 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point234 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr233, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point234({}* %41, i64 7, {}* %101, {}* %102, {}* %103, {}* %104, {}* %105, {}* %106, {}* inttoptr (i64 12 to {}*))
          to label %normal-dest237 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest237:                                   ; preds = %normal-dest230
  %.elt531 = extractvalue { {}*, i64 } %107, 0
  %.elt533 = extractvalue { {}*, i64 } %107, 1
  %cond446 = icmp eq i64 %.elt533, 0
  %108 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158829.2 = select i1 %cond446, {}* %108, {}* %.elt531
  br label %tag11

normal-dest252:                                   ; preds = %tag35
  %109 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint253 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint254 = add i64 %ptrtoint253, 7
  %entry-point-addr255 = inttoptr i64 %entry-point-addr-uint254 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point256 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr255, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point256({}* %45, i64 8, {}* %vaarg, {}* %format-arg-158829.0, {}* %109, {}* %109, {}* inttoptr (i64 160 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest259 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest259:                                   ; preds = %normal-dest252
  %111 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %112 = invoke {}* @cc_safe_fdefinition({}* %111)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest265:                                   ; preds = %normal-dest259
  %113 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 190), align 16
  %ptrtoint266 = ptrtoint {}* %112 to i64
  %entry-point-addr-uint267 = add i64 %ptrtoint266, 7
  %entry-point-addr268 = inttoptr i64 %entry-point-addr-uint267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr268, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point269({}* %112, i64 2, {}* %113, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest272 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest272:                                   ; preds = %normal-dest265
  %115 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %116 = invoke {}* @cc_safe_fdefinition({}* %115)
          to label %normal-dest282 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest282:                                   ; preds = %normal-dest272
  %117 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %118 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint283 = ptrtoint {}* %116 to i64
  %entry-point-addr-uint284 = add i64 %ptrtoint283, 7
  %entry-point-addr285 = inttoptr i64 %entry-point-addr-uint284 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point286 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr285, align 8
  %119 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point286({}* %116, i64 8, {}* %vaarg, {}* %format-arg-158830.0, {}* %117, {}* %118, {}* inttoptr (i64 24 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest289 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest289:                                   ; preds = %normal-dest282
  %120 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest295 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest295:                                   ; preds = %normal-dest289
  %122 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 191), align 8
  %ptrtoint296 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint297 = add i64 %ptrtoint296, 7
  %entry-point-addr298 = inttoptr i64 %entry-point-addr-uint297 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point299 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr298, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point299({}* %121, i64 2, {}* %122, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest302 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest302:                                   ; preds = %normal-dest295
  %124 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest312 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest312:                                   ; preds = %normal-dest302
  %126 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %127 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint313 = ptrtoint {}* %125 to i64
  %entry-point-addr-uint314 = add i64 %ptrtoint313, 7
  %entry-point-addr315 = inttoptr i64 %entry-point-addr-uint314 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point316 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr315, align 8
  %128 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point316({}* %125, i64 8, {}* %vaarg, {}* %format-arg-158831.0, {}* %126, {}* %127, {}* inttoptr (i64 32 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest319 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest319:                                   ; preds = %normal-dest312
  %129 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %130 = invoke {}* @cc_safe_fdefinition({}* %129)
          to label %normal-dest325 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest325:                                   ; preds = %normal-dest319
  %131 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 192), align 16
  %ptrtoint326 = ptrtoint {}* %130 to i64
  %entry-point-addr-uint327 = add i64 %ptrtoint326, 7
  %entry-point-addr328 = inttoptr i64 %entry-point-addr-uint327 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point329 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr328, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point329({}* %130, i64 2, {}* %131, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest332 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest332:                                   ; preds = %normal-dest325
  %133 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %134 = invoke {}* @cc_safe_fdefinition({}* %133)
          to label %normal-dest342 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest342:                                   ; preds = %normal-dest332
  %135 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %136 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint343 = ptrtoint {}* %134 to i64
  %entry-point-addr-uint344 = add i64 %ptrtoint343, 7
  %entry-point-addr345 = inttoptr i64 %entry-point-addr-uint344 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point346 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr345, align 8
  %137 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point346({}* %134, i64 8, {}* %vaarg, {}* %format-arg-158832.0, {}* %135, {}* %136, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest349 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest349:                                   ; preds = %normal-dest342
  %138 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %139 = invoke {}* @cc_safe_fdefinition({}* %138)
          to label %normal-dest355 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest355:                                   ; preds = %normal-dest349
  %140 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 193), align 8
  %ptrtoint356 = ptrtoint {}* %139 to i64
  %entry-point-addr-uint357 = add i64 %ptrtoint356, 7
  %entry-point-addr358 = inttoptr i64 %entry-point-addr-uint357 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point359 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr358, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point359({}* %139, i64 2, {}* %140, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest362 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest362:                                   ; preds = %normal-dest355
  %142 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %143 = invoke {}* @cc_safe_fdefinition({}* %142)
          to label %normal-dest372 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest372:                                   ; preds = %normal-dest362
  %144 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %145 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint373 = ptrtoint {}* %143 to i64
  %entry-point-addr-uint374 = add i64 %ptrtoint373, 7
  %entry-point-addr375 = inttoptr i64 %entry-point-addr-uint374 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point376 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr375, align 8
  %146 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point376({}* %143, i64 8, {}* %vaarg, {}* %format-arg-158833.0, {}* %144, {}* %145, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest379 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest379:                                   ; preds = %normal-dest372
  %147 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %148 = invoke {}* @cc_safe_fdefinition({}* %147)
          to label %normal-dest385 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest385:                                   ; preds = %normal-dest379
  %149 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 194), align 16
  %ptrtoint386 = ptrtoint {}* %148 to i64
  %entry-point-addr-uint387 = add i64 %ptrtoint386, 7
  %entry-point-addr388 = inttoptr i64 %entry-point-addr-uint387 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point389 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr388, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point389({}* %148, i64 2, {}* %149, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest392 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest392:                                   ; preds = %normal-dest385
  %151 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %152 = invoke {}* @cc_safe_fdefinition({}* %151)
          to label %normal-dest402 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest402:                                   ; preds = %normal-dest392
  %153 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %154 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint403 = ptrtoint {}* %152 to i64
  %entry-point-addr-uint404 = add i64 %ptrtoint403, 7
  %entry-point-addr405 = inttoptr i64 %entry-point-addr-uint404 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point406 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr405, align 8
  %155 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point406({}* %152, i64 8, {}* %vaarg, {}* %format-arg-158834.0, {}* %153, {}* %154, {}* inttoptr (i64 60 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %tag26.preheader unwind label %cleanup-lpad.loopexit.split-lp

tag26.preheader:                                  ; preds = %normal-dest402
  br label %tag26

normal-dest415:                                   ; preds = %tag36
  %ptrtoint416 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint417 = add i64 %ptrtoint416, 7
  %entry-point-addr418 = inttoptr i64 %entry-point-addr-uint417 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point419 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr418, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point419({}* %47, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest422 unwind label %cleanup-lpad.loopexit

normal-dest422:                                   ; preds = %normal-dest415
  br i1 %fixnump-test224, label %tag28, label %tag27
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

declare double @from_object_double({}*) local_unnamed_addr #3

declare {}* @to_object_double(double) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.2"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !37 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to %0*)) #7
          to label %.noexc4469 unwind label %cleanup-lpad.loopexit.split-lp

.noexc4469:                                       ; preds = %13
  unreachable

tag3:                                             ; preds = %tag581
  %14 = icmp eq {}* %x1068.0, %.val4657
  %G159470.0 = select i1 %14, {}* %.val4639, {}* %.val4657
  %15 = icmp eq {}* %G159470.0, %.val4657
  br i1 %15, label %tag44, label %tag575

tag8:                                             ; preds = %tag722, %normal-dest3226, %tag306
  %16 = phi {}* [ %785, %tag306 ], [ %779, %normal-dest3226 ], [ %785, %tag722 ]
  %x825.0 = phi {}* [ %163, %tag306 ], [ %x825.1, %normal-dest3226 ], [ %785, %tag722 ]
  %17 = ptrtoint {}* %x825.0 to i64
  %tag-only8273967 = and i64 %17, 7
  %consp-test = icmp eq i64 %tag-only8273967, 3
  br i1 %consp-test, label %tag152, label %tag743

tag19:                                            ; preds = %switch.early.test4753, %tag799
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest855 unwind label %cleanup-lpad.loopexit.split-lp

tag25:                                            ; preds = %tag165
  %20 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest879 unwind label %cleanup-lpad.loopexit.split-lp

tag28:                                            ; preds = %tag738
  %22 = icmp eq i64 %tag-only3569, 6
  %fixnum-tag-only8374299 = and i64 %ptrtoint3568, 3
  %fixnump-test838 = icmp eq i64 %fixnum-tag-only8374299, 0
  %or.cond = or i1 %22, %fixnump-test838
  br i1 %or.cond, label %tag592, label %tag115

tag30:                                            ; preds = %tag478
  %23 = icmp eq i64 %tag-only2976, 6
  br i1 %23, label %tag560, label %tag503

tag31:                                            ; preds = %tag263, %normal-dest2989, %tag506
  %.val4597 = phi {}* [ %233, %tag506 ], [ %735, %normal-dest2989 ], [ %G160476.0, %tag263 ]
  %24 = phi {}* [ %G160476.0, %tag506 ], [ %.val4596.pre, %normal-dest2989 ], [ %G160476.0, %tag263 ]
  %.in4424 = phi {}* [ %267, %tag506 ], [ %.in4423, %normal-dest2989 ], [ %G160476.0, %tag263 ]
  %25 = bitcast {}* %.in4424 to i8*
  %26 = icmp eq {}* %.in4424, %farg0
  %G160456.0 = select i1 %26, {}* %24, {}* %.val4597
  %27 = icmp eq {}* %G160456.0, %.val4597
  br i1 %27, label %tag416, label %tag654

tag33:                                            ; preds = %tag359
  %28 = icmp eq {}* %x1002.0, %.val4653
  %G159314.0 = select i1 %28, {}* %.val4650, {}* %.val4653
  %29 = icmp eq {}* %G159314.0, %.val4653
  br i1 %29, label %tag166, label %tag440

tag34:                                            ; preds = %tag99
  %30 = icmp eq {}* %x1247.0, %.val4659
  %G159551.0 = select i1 %30, {}* %.val4634, {}* %.val4659
  %31 = icmp eq {}* %G159551.0, %.val4659
  br i1 %31, label %tag70, label %tag381

tag35:                                            ; preds = %tag776
  %32 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest934 unwind label %cleanup-lpad.loopexit.split-lp

tag37:                                            ; preds = %header-check-br2229
  %34 = invoke double @from_object_double({}* nonnull %.in4270)
          to label %normal-dest950 unwind label %cleanup-lpad.loopexit.split-lp

tag40:                                            ; preds = %tag712
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest960 unwind label %cleanup-lpad.loopexit.split-lp

tag44:                                            ; preds = %tag3
  %37 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %38 = invoke {}* @cc_safe_fdefinition({}* %37)
          to label %normal-dest987 unwind label %cleanup-lpad.loopexit.split-lp

tag45:                                            ; preds = %tag405
  %39 = add i64 %208, 5
  %40 = inttoptr i64 %39 to {}**
  %41 = load {}*, {}** %40, align 8
  br label %tag359

tag47:                                            ; preds = %normal-dest1631
  %42 = add i64 %823, 5
  %43 = inttoptr i64 %42 to {}**
  %44 = load {}*, {}** %43, align 8
  %.val4603.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag719

tag48:                                            ; preds = %header-check-br1682, %tag132, %tag296, %header-check-br3368, %tag534
  %45 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest1021 unwind label %cleanup-lpad.loopexit.split-lp

tag51:                                            ; preds = %tag553, %normal-dest2724, %tag401
  %x2482.0 = phi {}* [ %206, %tag401 ], [ %.in4369, %normal-dest2724 ], [ %.val4689, %tag553 ]
  %47 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest3082 unwind label %cleanup-lpad.loopexit.split-lp

tag52:                                            ; preds = %normal-dest3013, %normal-dest2859, %normal-dest1639
  %G159103.0 = phi {}* [ %534, %normal-dest1639 ], [ %G159103.1, %normal-dest2859 ], [ %738, %normal-dest3013 ]
  %ptrtoint1048 = ptrtoint {}* %728 to i64
  %entry-point-addr-uint1049 = add i64 %ptrtoint1048, 7
  %entry-point-addr1050 = inttoptr i64 %entry-point-addr-uint1049 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1051 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1050, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1051({}* %728, i64 1, {}* %G159103.0, {}* null, {}* null, {}* null)
          to label %normal-dest1054 unwind label %cleanup-lpad.loopexit.split-lp

tag55:                                            ; preds = %normal-dest3147
  %50 = add i64 %159, 5
  %51 = inttoptr i64 %50 to {}**
  %52 = load {}*, {}** %51, align 8
  %.val4640.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag581

tag58:                                            ; preds = %tag475, %header-check-br2745
  %53 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest1077 unwind label %cleanup-lpad.loopexit.split-lp

tag67:                                            ; preds = %normal-dest1470
  %55 = icmp eq {}* %512, %farg1
  %.val4680 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159035.0 = select i1 %55, {}* %.val4680, {}* %512
  %56 = icmp eq {}* %G159035.0, %512
  br i1 %56, label %tag375, label %tag801

tag69:                                            ; preds = %tag632
  %trunc = trunc i64 %319 to i3
  switch i3 %trunc, label %tag289 [
    i3 -2, label %tag711
    i3 1, label %header-check-br1160
  ]

tag70:                                            ; preds = %tag34
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest1131 unwind label %cleanup-lpad.loopexit.split-lp

tag71:                                            ; preds = %tag801
  %59 = add i64 %412, 5
  %60 = inttoptr i64 %59 to {}**
  %61 = load {}*, {}** %60, align 8
  br label %tag424

tag73:                                            ; preds = %tag429
  %62 = icmp eq {}* %G160476.0, %233
  br i1 %62, label %tag263, label %tag506

tag80:                                            ; preds = %tag719
  %63 = add i64 %354, -3
  %64 = inttoptr i64 %63 to {}**
  %65 = load {}*, {}** %64, align 8
  br label %tag780

tag85:                                            ; preds = %normal-dest3216, %normal-dest3193, %normal-dest1761
  %G159205.0 = phi {}* [ %550, %normal-dest1761 ], [ %G159205.1, %normal-dest3193 ], [ %773, %normal-dest3216 ]
  %ptrtoint1189 = ptrtoint {}* %213 to i64
  %entry-point-addr-uint1190 = add i64 %ptrtoint1189, 7
  %entry-point-addr1191 = inttoptr i64 %entry-point-addr-uint1190 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1192 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1191, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1192({}* %213, i64 1, {}* %G159205.0, {}* null, {}* null, {}* null)
          to label %normal-dest1195 unwind label %cleanup-lpad.loopexit.split-lp

tag94:                                            ; preds = %normal-dest2307
  %67 = icmp eq i64 %tag-only3017, 6
  %fixnum-tag-only33193941 = and i64 %ptrtoint3016, 3
  %fixnump-test3320 = icmp eq i64 %fixnum-tag-only33193941, 0
  %or.cond4578 = or i1 %67, %fixnump-test3320
  br i1 %or.cond4578, label %tag96, label %tag523

tag96:                                            ; preds = %switch.early.test4755, %switch.early.test4755, %header-check-br1558, %header-check-br3015, %header-check-br3015, %tag94
  %68 = ptrtoint {}* %.in3998 to i64
  %fixnum-tag-only12433946 = and i64 %68, 3
  %fixnump-test1244 = icmp eq i64 %fixnum-tag-only12433946, 0
  br i1 %fixnump-test1244, label %tag761, label %tag342

tag97:                                            ; preds = %tag592
  %trunc4670 = trunc i64 %301 to i3
  switch i3 %trunc4670, label %tag629 [
    i3 -2, label %tag804
    i3 1, label %header-check-br1252
  ]

tag99:                                            ; preds = %tag727, %normal-dest2629, %tag614
  %.val4659 = phi {}* [ %.val4635.pre, %tag614 ], [ %672, %normal-dest2629 ], [ %360, %tag727 ]
  %x1247.0 = phi {}* [ %309, %tag614 ], [ %x1247.1, %normal-dest2629 ], [ %360, %tag727 ]
  %69 = ptrtoint {}* %x1247.0 to i64
  %tag-only12504176 = and i64 %69, 7
  %consp-test1251 = icmp eq i64 %tag-only12504176, 3
  %.val4634 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159558.0 = select i1 %consp-test1251, {}* %.val4634, {}* %.val4659
  %70 = icmp eq {}* %G159558.0, %.val4659
  br i1 %70, label %tag34, label %tag623

tag105:                                           ; preds = %tag509
  %71 = add i64 %268, -3
  %72 = inttoptr i64 %71 to {}**
  %73 = load {}*, {}** %72, align 8
  br label %tag683

tag107:                                           ; preds = %normal-dest3677, %normal-dest2241, %normal-dest1353
  %G160066.0 = phi {}* [ %501, %normal-dest1353 ], [ %610, %normal-dest2241 ], [ %G160066.1, %normal-dest3677 ]
  %ptrtoint1268 = ptrtoint {}* %666 to i64
  %entry-point-addr-uint1269 = add i64 %ptrtoint1268, 7
  %entry-point-addr1270 = inttoptr i64 %entry-point-addr-uint1269 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1271 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1270, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1271({}* %666, i64 1, {}* %G160066.0, {}* null, {}* null, {}* null)
          to label %normal-dest1274 unwind label %cleanup-lpad.loopexit.split-lp

tag115:                                           ; preds = %switch.early.test4757, %tag28
  %75 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest1321 unwind label %cleanup-lpad.loopexit.split-lp

tag116:                                           ; preds = %tag680, %tag326, %normal-dest1659
  %x1660.0 = phi {}* [ %171, %tag326 ], [ %.in, %normal-dest1659 ], [ %.val4622, %tag680 ]
  %77 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest1323 unwind label %cleanup-lpad.loopexit.split-lp

tag122:                                           ; preds = %tag205
  %79 = invoke float @from_object_float({}* %.in3998)
          to label %normal-dest1352 unwind label %cleanup-lpad.loopexit.split-lp

tag127:                                           ; preds = %tag414
  %80 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %81 = invoke {}* @cc_safe_fdefinition({}* %80)
          to label %normal-dest1366 unwind label %cleanup-lpad.loopexit.split-lp

tag128:                                           ; preds = %normal-dest3684
  %82 = add i64 %823, -3
  %83 = inttoptr i64 %82 to {}**
  %84 = load {}*, {}** %83, align 8
  br label %tag199

tag130:                                           ; preds = %normal-dest1631
  %85 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %86 = icmp eq {}* %85, %farg1
  %.val4600 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G160219.0 = select i1 %86, {}* %.val4600, {}* %85
  %87 = icmp eq {}* %G160219.0, %85
  br i1 %87, label %tag260, label %tag719

tag132:                                           ; preds = %tag296
  %trunc4641 = trunc i64 %154 to i3
  switch i3 %trunc4641, label %tag48 [
    i3 -2, label %tag534
    i3 1, label %header-check-br1682
  ]

tag136:                                           ; preds = %tag169, %normal-dest2927, %tag286
  %.val4624 = phi {}* [ %.val4607.pre, %tag286 ], [ %724, %normal-dest2927 ], [ %105, %tag169 ]
  %x1417.0 = phi {}* [ %151, %tag286 ], [ %x1417.1, %normal-dest2927 ], [ %105, %tag169 ]
  %88 = ptrtoint {}* %x1417.0 to i64
  %tag-only14213936 = and i64 %88, 7
  %consp-test1422 = icmp eq i64 %tag-only14213936, 3
  %.val4606 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G160125.0 = select i1 %consp-test1422, {}* %.val4606, {}* %.val4624
  %89 = icmp eq {}* %G160125.0, %.val4624
  br i1 %89, label %tag213, label %tag645

tag137:                                           ; preds = %tag693
  %90 = add i64 %338, -3
  %91 = inttoptr i64 %90 to {}**
  %92 = load {}*, {}** %91, align 8
  br label %tag738

tag152:                                           ; preds = %tag8
  %93 = add i64 %17, 5
  %94 = inttoptr i64 %93 to {}**
  %95 = load {}*, {}** %94, align 8
  br label %tag509

tag155:                                           ; preds = %tag266
  %96 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest1485 unwind label %cleanup-lpad.loopexit.split-lp

tag156:                                           ; preds = %switch.early.test, %tag487
  %98 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest1499 unwind label %cleanup-lpad.loopexit.split-lp

tag165:                                           ; preds = %normal-dest2044
  %100 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %101 = icmp eq {}* %100, %farg1
  %.val4671 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159175.0 = select i1 %101, {}* %.val4671, {}* %100
  %102 = icmp eq {}* %G159175.0, %100
  br i1 %102, label %tag25, label %tag715

tag166:                                           ; preds = %tag33
  %103 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest1519 unwind label %cleanup-lpad.loopexit.split-lp

tag169:                                           ; preds = %normal-dest3051
  %105 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %106 = icmp eq {}* %105, %farg1
  %.val4604 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G160138.0 = select i1 %106, {}* %.val4604, {}* %105
  %107 = icmp eq {}* %G160138.0, %105
  br i1 %107, label %tag531, label %tag136

tag177:                                           ; preds = %normal-dest1281
  %108 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %109 = icmp eq {}* %108, %farg1
  %.val4609 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G160057.0 = select i1 %109, {}* %.val4609, {}* %108
  %110 = icmp eq {}* %G160057.0, %108
  br i1 %110, label %tag448, label %tag518

tag199:                                           ; preds = %tag734, %normal-dest2072, %tag128
  %G159948.0 = phi {}* [ %84, %tag128 ], [ %G159948.1, %normal-dest2072 ], [ %.val4599, %tag734 ]
  %111 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %112 = invoke {}* @cc_safe_fdefinition({}* %111)
          to label %normal-dest1631 unwind label %cleanup-lpad.loopexit.split-lp

tag200:                                           ; preds = %header-check-br3750
  %113 = invoke double @from_object_double({}* nonnull %.in4380)
          to label %normal-dest1638 unwind label %cleanup-lpad.loopexit.split-lp

tag204:                                           ; preds = %tag504
  %114 = icmp eq i64 %tag-only2410, 6
  br i1 %114, label %tag589, label %tag740

tag205:                                           ; preds = %tag342
  %115 = icmp eq i64 %tag-only3017, 6
  br i1 %115, label %tag122, label %tag761

tag207:                                           ; preds = %tag680
  %116 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %117 = invoke {}* @cc_safe_fdefinition({}* %116)
          to label %normal-dest1651 unwind label %cleanup-lpad.loopexit.split-lp

tag209:                                           ; preds = %switch.early.test4754, %tag335
  %118 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %119 = invoke {}* @cc_safe_fdefinition({}* %118)
          to label %normal-dest1667 unwind label %cleanup-lpad.loopexit.split-lp

tag213:                                           ; preds = %tag136
  %120 = icmp eq {}* %x1417.0, %.val4624
  %G160118.0 = select i1 %120, {}* %.val4606, {}* %.val4624
  %121 = icmp eq {}* %G160118.0, %.val4624
  br i1 %121, label %tag280, label %tag695

tag217:                                           ; preds = %normal-dest2541
  %122 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %123 = icmp eq {}* %122, %farg1
  %.val4666 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159256.0 = select i1 %123, {}* %.val4666, {}* %122
  %124 = icmp eq {}* %G159256.0, %122
  br i1 %124, label %tag365, label %tag693

tag225:                                           ; preds = %normal-dest3030, %header-check-br2781, %normal-dest1084
  %.val4695 = phi {}* [ %472, %normal-dest1084 ], [ %712, %header-check-br2781 ], [ %741, %normal-dest3030 ]
  %G158982.0 = phi {}* [ %G158982.1, %normal-dest1084 ], [ %"closure->LAMBDA", %header-check-br2781 ], [ %G158982.2, %normal-dest3030 ]
  %125 = ptrtoint {}* %farg1 to i64
  %tag-only17494296 = and i64 %125, 7
  %consp-test1750 = icmp eq i64 %tag-only17494296, 3
  %.val4664 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159280.0 = select i1 %consp-test1750, {}* %.val4664, {}* %.val4695
  %126 = icmp eq {}* %G159280.0, %.val4695
  br i1 %126, label %tag675, label %tag454

tag228:                                           ; preds = %tag804
  %127 = invoke float @from_object_float({}* %.in4392)
          to label %normal-dest1759 unwind label %cleanup-lpad.loopexit.split-lp

tag231:                                           ; preds = %tag424
  %128 = icmp eq {}* %x1146.0, %.val4687
  %G158999.0 = select i1 %128, {}* %.val4684, {}* %.val4687
  %129 = icmp eq {}* %G158999.0, %.val4687
  br i1 %129, label %tag483, label %tag699

tag234:                                           ; preds = %tag555, %normal-dest, %tag699, %tag683, %tag440, %tag377
  %130 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %131 = insertvalue { {}*, i64 } undef, {}* %130, 0
  %132 = insertvalue { {}*, i64 } %131, i64 1, 1
  ret { {}*, i64 } %132

tag239:                                           ; preds = %tag463
  %133 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %134 = invoke {}* @cc_safe_fdefinition({}* %133)
          to label %normal-dest1788 unwind label %cleanup-lpad.loopexit.split-lp

tag245:                                           ; preds = %tag775
  %135 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %136 = invoke {}* @cc_safe_fdefinition({}* %135)
          to label %normal-dest1834 unwind label %cleanup-lpad.loopexit.split-lp

tag252:                                           ; preds = %tag625
  %137 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %138 = invoke {}* @cc_safe_fdefinition({}* %137)
          to label %normal-dest1863 unwind label %cleanup-lpad.loopexit.split-lp

tag258:                                           ; preds = %tag625, %normal-dest1871, %tag413
  %G159300.0 = phi {}* [ %216, %tag413 ], [ %G159300.1, %normal-dest1871 ], [ %.val4661, %tag625 ]
  %139 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %140 = invoke {}* @cc_safe_fdefinition({}* %139)
          to label %normal-dest1897 unwind label %cleanup-lpad.loopexit.split-lp

tag260:                                           ; preds = %tag130
  %141 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %142 = invoke {}* @cc_safe_fdefinition({}* %141)
          to label %normal-dest1912 unwind label %cleanup-lpad.loopexit.split-lp

tag263:                                           ; preds = %tag73
  br i1 %232, label %tag549, label %tag31

tag266:                                           ; preds = %tag405
  %143 = icmp eq {}* %x1797.0, %207
  %.val4648 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159334.0 = select i1 %143, {}* %.val4648, {}* %207
  %144 = icmp eq {}* %G159334.0, %207
  br i1 %144, label %tag155, label %tag359

tag279:                                           ; preds = %tag298
  %145 = icmp eq {}* %x2059.0, %.val4655
  %G159389.0 = select i1 %145, {}* %.val4644, {}* %.val4655
  %146 = icmp eq {}* %G159389.0, %.val4655
  br i1 %146, label %tag419, label %tag726

tag280:                                           ; preds = %tag213
  %147 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %148 = invoke {}* @cc_safe_fdefinition({}* %147)
          to label %normal-dest2006 unwind label %cleanup-lpad.loopexit.split-lp

tag286:                                           ; preds = %normal-dest3051
  %149 = add i64 %823, 5
  %150 = inttoptr i64 %149 to {}**
  %151 = load {}*, {}** %150, align 8
  %.val4607.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag136

tag289:                                           ; preds = %header-check-br1160, %tag69, %tag632, %tag711, %header-check-br2844
  %152 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %153 = invoke {}* @cc_safe_fdefinition({}* %152)
          to label %normal-dest2023 unwind label %cleanup-lpad.loopexit.split-lp

tag296:                                           ; preds = %switch.early.test4756, %switch.early.test4756, %header-check-br1925, %header-check-br2731, %header-check-br2731, %tag386
  %154 = ptrtoint {}* %.in4258 to i64
  %fixnum-tag-only20504208 = and i64 %154, 3
  %fixnump-test2051 = icmp eq i64 %fixnum-tag-only20504208, 0
  br i1 %fixnump-test2051, label %tag48, label %tag132

tag298:                                           ; preds = %tag310, %normal-dest2117, %tag561
  %.val4655 = phi {}* [ %.val4645.pre, %tag561 ], [ %603, %normal-dest2117 ], [ %164, %tag310 ]
  %x2059.0 = phi {}* [ %294, %tag561 ], [ %x2059.1, %normal-dest2117 ], [ %164, %tag310 ]
  %155 = ptrtoint {}* %x2059.0 to i64
  %tag-only20624218 = and i64 %155, 7
  %consp-test2063 = icmp eq i64 %tag-only20624218, 3
  %.val4644 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159396.0 = select i1 %consp-test2063, {}* %.val4644, {}* %.val4655
  %156 = icmp eq {}* %G159396.0, %.val4655
  br i1 %156, label %tag279, label %tag703

tag300:                                           ; preds = %tag734
  %157 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %158 = invoke {}* @cc_safe_fdefinition({}* %157)
          to label %normal-dest2065 unwind label %cleanup-lpad.loopexit.split-lp

tag305:                                           ; preds = %normal-dest3649, %header-check-br3406, %normal-dest1983
  %.val4661 = phi {}* [ %578, %normal-dest1983 ], [ %787, %header-check-br3406 ], [ %820, %normal-dest3649 ]
  %G159297.0 = phi {}* [ %G159297.1, %normal-dest1983 ], [ %"closure->LAMBDA", %header-check-br3406 ], [ %G159297.2, %normal-dest3649 ]
  %159 = ptrtoint {}* %farg1 to i64
  %tag-only20954174 = and i64 %159, 7
  %consp-test2096 = icmp eq i64 %tag-only20954174, 3
  %.val4630 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159595.0 = select i1 %consp-test2096, {}* %.val4630, {}* %.val4661
  %160 = icmp eq {}* %G159595.0, %.val4661
  br i1 %160, label %tag625, label %tag413

tag306:                                           ; preds = %normal-dest3381
  %161 = add i64 %823, 5
  %162 = inttoptr i64 %161 to {}**
  %163 = load {}*, {}** %162, align 8
  br label %tag8

tag310:                                           ; preds = %normal-dest2671
  %164 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %165 = icmp eq {}* %164, %farg1
  %.val4642 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159409.0 = select i1 %165, {}* %.val4642, {}* %164
  %166 = icmp eq {}* %G159409.0, %164
  br i1 %166, label %tag312, label %tag298

tag312:                                           ; preds = %tag310
  %167 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %168 = invoke {}* @cc_safe_fdefinition({}* %167)
          to label %normal-dest2110 unwind label %cleanup-lpad.loopexit.split-lp

tag326:                                           ; preds = %tag518
  %169 = add i64 %270, -3
  %170 = inttoptr i64 %169 to {}**
  %171 = load {}*, {}** %170, align 8
  br label %tag116

tag335:                                           ; preds = %tag381
  %172 = icmp eq i64 %tag-only2410, 6
  %fixnum-tag-only33214177 = and i64 %ptrtoint2409, 3
  %fixnump-test3322 = icmp eq i64 %fixnum-tag-only33214177, 0
  %or.cond4582 = or i1 %172, %fixnump-test3322
  br i1 %or.cond4582, label %tag473, label %tag209

tag338:                                           ; preds = %header-check-br
  %173 = invoke double @from_object_double({}* nonnull %.in3998)
          to label %normal-dest2240 unwind label %cleanup-lpad.loopexit.split-lp

tag342:                                           ; preds = %tag96
  %trunc4608 = trunc i64 %68 to i3
  switch i3 %trunc4608, label %tag761 [
    i3 -2, label %tag205
    i3 1, label %header-check-br2429
  ]

tag345:                                           ; preds = %normal-dest2455, %normal-dest2297, %normal-dest2030
  %G160168.0 = phi {}* [ %G160168.1, %normal-dest2030 ], [ %622, %normal-dest2297 ], [ %650, %normal-dest2455 ]
  %ptrtoint2257 = ptrtoint {}* %112 to i64
  %entry-point-addr-uint2258 = add i64 %ptrtoint2257, 7
  %entry-point-addr2259 = inttoptr i64 %entry-point-addr-uint2258 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2260 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2259, align 8
  %174 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2260({}* %112, i64 1, {}* %G160168.0, {}* null, {}* null, {}* null)
          to label %normal-dest2263 unwind label %cleanup-lpad.loopexit.split-lp

tag346:                                           ; preds = %tag358
  %175 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %176 = invoke {}* @cc_safe_fdefinition({}* %175)
          to label %normal-dest2274 unwind label %cleanup-lpad.loopexit.split-lp

tag351:                                           ; preds = %header-check-br2844
  %177 = invoke double @from_object_double({}* nonnull %.in4010)
          to label %normal-dest2296 unwind label %cleanup-lpad.loopexit.split-lp

tag358:                                           ; preds = %tag715
  %178 = icmp eq {}* %x888.0, %.val4691
  %G159155.0 = select i1 %178, {}* %.val4673, {}* %.val4691
  %179 = icmp eq {}* %G159155.0, %.val4691
  br i1 %179, label %tag346, label %tag476

tag359:                                           ; preds = %tag266, %normal-dest1492, %tag45
  %.val4653 = phi {}* [ %207, %tag45 ], [ %518, %normal-dest1492 ], [ %207, %tag266 ]
  %x1002.0 = phi {}* [ %41, %tag45 ], [ %x1002.1, %normal-dest1492 ], [ %207, %tag266 ]
  %180 = ptrtoint {}* %x1002.0 to i64
  %tag-only23214230 = and i64 %180, 7
  %consp-test2322 = icmp eq i64 %tag-only23214230, 3
  %.val4650 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159321.0 = select i1 %consp-test2322, {}* %.val4650, {}* %.val4653
  %181 = icmp eq {}* %G159321.0, %.val4653
  br i1 %181, label %tag33, label %tag446

tag362:                                           ; preds = %tag743
  %182 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %183 = invoke {}* @cc_safe_fdefinition({}* %182)
          to label %normal-dest2327 unwind label %cleanup-lpad.loopexit.split-lp

tag365:                                           ; preds = %tag217
  %184 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %185 = invoke {}* @cc_safe_fdefinition({}* %184)
          to label %normal-dest2343 unwind label %cleanup-lpad.loopexit.split-lp

tag375:                                           ; preds = %tag67
  %186 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %187 = invoke {}* @cc_safe_fdefinition({}* %186)
          to label %normal-dest2379 unwind label %cleanup-lpad.loopexit.split-lp

tag377:                                           ; preds = %tag654
  %188 = icmp eq {}* %"%SUBLIST158881.04705", %326
  br i1 %188, label %tag234, label %tag657

tag379:                                           ; preds = %tag719
  %189 = icmp eq {}* %x1019.0, %.val4626
  %G160199.0 = select i1 %189, {}* %.val4602, {}* %.val4626
  %190 = icmp eq {}* %G160199.0, %.val4626
  br i1 %190, label %tag748, label %tag780

tag381:                                           ; preds = %tag34, %normal-dest1138, %tag623
  %.in4270 = phi {}* [ %312, %tag623 ], [ %.in4269, %normal-dest1138 ], [ %.val4659, %tag34 ]
  %191 = bitcast {}* %.in4270 to i8*
  %192 = ptrtoint %"class.core::T_O"* %418 to i64
  %193 = add i64 %192, -3
  %194 = inttoptr i64 %193 to %"class.gctools::smart_ptr"*
  %195 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %194, i64 0, i32 0
  %196 = load %"class.core::T_O"*, %"class.core::T_O"** %195, align 8, !tbaa !31
  %197 = bitcast %"class.core::T_O"* %196 to {}*
  %ptrtoint2409 = ptrtoint %"class.core::T_O"* %196 to i64
  %tag-only2410 = and i64 %ptrtoint2409, 7
  %test2411 = icmp eq i64 %tag-only2410, 1
  br i1 %test2411, label %header-check-br2408, label %tag335

tag382:                                           ; preds = %header-check-br2078, %header-check-br2078, %header-check-br2078, %header-check-br2078
  %198 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 121), align 8
  %199 = invoke {}* @cc_safe_fdefinition({}* %198)
          to label %normal-dest2416 unwind label %cleanup-lpad.loopexit

tag386:                                           ; preds = %normal-dest1225
  %200 = icmp eq i64 %tag-only2733, 6
  %fixnum-tag-only28834203 = and i64 %ptrtoint2732, 3
  %fixnump-test2884 = icmp eq i64 %fixnum-tag-only28834203, 0
  %or.cond4573 = or i1 %200, %fixnump-test2884
  br i1 %or.cond4573, label %tag296, label %tag442

tag390:                                           ; preds = %tag711
  %201 = invoke float @from_object_float({}* %.in4010)
          to label %normal-dest2454 unwind label %cleanup-lpad.loopexit.split-lp

tag396:                                           ; preds = %tag627, %header-check-br3061
  %202 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %203 = invoke {}* @cc_safe_fdefinition({}* %202)
          to label %normal-dest2468 unwind label %cleanup-lpad.loopexit.split-lp

tag401:                                           ; preds = %tag665
  %204 = add i64 %329, -3
  %205 = inttoptr i64 %204 to {}**
  %206 = load {}*, {}** %205, align 8
  br label %tag51

tag405:                                           ; preds = %tag463, %normal-dest1796, %tag425
  %207 = phi {}* [ %802, %tag425 ], [ %558, %normal-dest1796 ], [ %802, %tag463 ]
  %x1797.0 = phi {}* [ %229, %tag425 ], [ %x1797.1, %normal-dest1796 ], [ %802, %tag463 ]
  %208 = ptrtoint {}* %x1797.0 to i64
  %tag-only25164229 = and i64 %208, 7
  %consp-test2517 = icmp eq i64 %tag-only25164229, 3
  br i1 %consp-test2517, label %tag45, label %tag266

tag406:                                           ; preds = %normal-dest2541
  %209 = add i64 %125, 5
  %210 = inttoptr i64 %209 to {}**
  %211 = load {}*, {}** %210, align 8
  %.val4669.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag693

tag411:                                           ; preds = %tag675, %normal-dest3796, %tag454
  %G158985.0 = phi {}* [ %248, %tag454 ], [ %G158985.1, %normal-dest3796 ], [ %.val4695, %tag675 ]
  %212 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %213 = invoke {}* @cc_safe_fdefinition({}* %212)
          to label %normal-dest2541 unwind label %cleanup-lpad.loopexit.split-lp

tag413:                                           ; preds = %tag305
  %214 = add i64 %159, -3
  %215 = inttoptr i64 %214 to {}**
  %216 = load {}*, {}** %215, align 8
  br label %tag258

tag414:                                           ; preds = %tag509
  %217 = icmp eq {}* %x1481.0, %.val4620
  %G159962.0 = select i1 %217, {}* %.val4617, {}* %.val4620
  %218 = icmp eq {}* %G159962.0, %.val4620
  br i1 %218, label %tag127, label %tag683

tag416:                                           ; preds = %tag31
  br i1 %or.cond4576, label %header-check-br3095, label %tag555

tag418:                                           ; preds = %switch.early.test4753, %switch.early.test4753, %header-check-br1386, %header-check-br2974, %header-check-br2974, %tag799
  %219 = ptrtoint {}* %.in4380 to i64
  %fixnum-tag-only25824330 = and i64 %219, 3
  %fixnump-test2583 = icmp eq i64 %fixnum-tag-only25824330, 0
  br i1 %fixnump-test2583, label %tag503, label %tag478

tag419:                                           ; preds = %tag279
  %220 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %221 = invoke {}* @cc_safe_fdefinition({}* %220)
          to label %normal-dest2585 unwind label %cleanup-lpad.loopexit.split-lp

tag420:                                           ; preds = %normal-dest1470
  %222 = add i64 %125, 5
  %223 = inttoptr i64 %222 to {}**
  %224 = load {}*, {}** %223, align 8
  br label %tag801

tag424:                                           ; preds = %tag462, %normal-dest3163, %tag71
  %.val4687 = phi {}* [ %411, %tag71 ], [ %766, %normal-dest3163 ], [ %411, %tag462 ]
  %x1146.0 = phi {}* [ %61, %tag71 ], [ %x1146.1, %normal-dest3163 ], [ %411, %tag462 ]
  %225 = ptrtoint {}* %x1146.0 to i64
  %tag-only26194352 = and i64 %225, 7
  %consp-test2620 = icmp eq i64 %tag-only26194352, 3
  %.val4684 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159006.0 = select i1 %consp-test2620, {}* %.val4684, {}* %.val4687
  %226 = icmp eq {}* %G159006.0, %.val4687
  br i1 %226, label %tag231, label %tag498

tag425:                                           ; preds = %normal-dest3607
  %227 = add i64 %159, 5
  %228 = inttoptr i64 %227 to {}**
  %229 = load {}*, {}** %228, align 8
  br label %tag405

tag427:                                           ; preds = %tag727
  %230 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %231 = invoke {}* @cc_safe_fdefinition({}* %230)
          to label %normal-dest2622 unwind label %cleanup-lpad.loopexit.split-lp

tag429:                                           ; preds = %tag429.lr.ph, %tag555
  %G160476.0 = phi {}* [ %.val4702, %tag429.lr.ph ], [ %.val, %tag555 ]
  %232 = phi i1 [ %425, %tag429.lr.ph ], [ %289, %tag555 ]
  %233 = phi {}* [ %423, %tag429.lr.ph ], [ %286, %tag555 ]
  %"%SUBLIST158881.04705" = phi {}* [ %"%SUBLIST158881.04701", %tag429.lr.ph ], [ %"%SUBLIST158881.0", %tag555 ]
  %234 = ptrtoint {}* %"%SUBLIST158881.04705" to i64
  %tag-only26423904 = and i64 %234, 7
  %consp-test2643 = icmp eq i64 %tag-only26423904, 3
  br i1 %consp-test2643, label %tag73, label %tag603

tag432:                                           ; preds = %normal-dest3639, %normal-dest3622, %normal-dest1030
  %G159418.0 = phi {}* [ %G159418.1, %normal-dest1030 ], [ %805, %normal-dest3622 ], [ %814, %normal-dest3639 ]
  %ptrtoint2658 = ptrtoint {}* %511 to i64
  %entry-point-addr-uint2659 = add i64 %ptrtoint2658, 7
  %entry-point-addr2660 = inttoptr i64 %entry-point-addr-uint2659 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2661 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2660, align 8
  %235 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2661({}* %511, i64 1, {}* %G159418.0, {}* null, {}* null, {}* null)
          to label %normal-dest2664 unwind label %cleanup-lpad.loopexit.split-lp

tag440:                                           ; preds = %tag33, %normal-dest1526, %tag446
  %G159304.0 = phi {}* [ %241, %tag446 ], [ %G159304.1, %normal-dest1526 ], [ %.val4653, %tag33 ]
  %ptrtoint2684 = ptrtoint {}* %G159297.0 to i64
  %entry-point-addr-uint2685 = add i64 %ptrtoint2684, 7
  %entry-point-addr2686 = inttoptr i64 %entry-point-addr-uint2685 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2687 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2686, align 8
  %236 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2687({}* %G159297.0, i64 7, {}* %OUT1588882089.0, {}* %farg0, {}* %G159300.0, {}* %G159301.1, {}* %G159302.0, {}* %G159303.0, {}* %G159304.0)
          to label %tag234 unwind label %cleanup-lpad.loopexit.split-lp

tag442:                                           ; preds = %switch.early.test4756, %tag386
  %237 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %238 = invoke {}* @cc_safe_fdefinition({}* %237)
          to label %normal-dest2698 unwind label %cleanup-lpad.loopexit.split-lp

tag446:                                           ; preds = %tag359
  %239 = add i64 %180, -3
  %240 = inttoptr i64 %239 to {}**
  %241 = load {}*, {}** %240, align 8
  br label %tag440

tag448:                                           ; preds = %tag177
  %242 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %243 = invoke {}* @cc_safe_fdefinition({}* %242)
          to label %normal-dest2702 unwind label %cleanup-lpad.loopexit.split-lp

tag449:                                           ; preds = %tag553
  %244 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %245 = invoke {}* @cc_safe_fdefinition({}* %244)
          to label %normal-dest2717 unwind label %cleanup-lpad.loopexit.split-lp

tag454:                                           ; preds = %tag225
  %246 = add i64 %125, -3
  %247 = inttoptr i64 %246 to {}**
  %248 = load {}*, {}** %247, align 8
  br label %tag411

tag462:                                           ; preds = %tag801
  %249 = icmp eq {}* %x2387.0, %411
  %.val4682 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159019.0 = select i1 %249, {}* %.val4682, {}* %411
  %250 = icmp eq {}* %G159019.0, %411
  br i1 %250, label %tag624, label %tag424

tag463:                                           ; preds = %normal-dest3607
  %251 = icmp eq {}* %802, %farg1
  %.val4646 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159350.0 = select i1 %251, {}* %.val4646, {}* %802
  %252 = icmp eq {}* %G159350.0, %802
  br i1 %252, label %tag239, label %tag405

tag473:                                           ; preds = %switch.early.test4754, %switch.early.test4754, %header-check-br1410, %header-check-br2408, %header-check-br2408, %tag335
  %253 = ptrtoint {}* %.in4270 to i64
  %fixnum-tag-only27794183 = and i64 %253, 3
  %fixnump-test2780 = icmp eq i64 %fixnum-tag-only27794183, 0
  br i1 %fixnump-test2780, label %tag740, label %tag504

tag475:                                           ; preds = %normal-dest2898
  %ptrtoint2782 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only2783 = and i64 %ptrtoint2782, 7
  %test2784 = icmp eq i64 %tag-only2783, 1
  br i1 %test2784, label %header-check-br2781, label %tag58

tag476:                                           ; preds = %tag358, %normal-dest2282, %tag778
  %.in4380 = phi {}* [ %396, %tag778 ], [ %.in4379, %normal-dest2282 ], [ %.val4691, %tag358 ]
  %254 = bitcast {}* %.in4380 to i8*
  %255 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %256 = invoke {}* @cc_safe_fdefinition({}* %255)
          to label %normal-dest1773 unwind label %cleanup-lpad.loopexit.split-lp

tag478:                                           ; preds = %tag418
  %trunc4675 = trunc i64 %219 to i3
  switch i3 %trunc4675, label %tag503 [
    i3 -2, label %tag30
    i3 1, label %header-check-br2869
  ]

tag483:                                           ; preds = %tag231
  %257 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %258 = invoke {}* @cc_safe_fdefinition({}* %257)
          to label %normal-dest2806 unwind label %cleanup-lpad.loopexit.split-lp

tag487:                                           ; preds = %tag780
  %259 = icmp eq i64 %tag-only3745, 6
  %fixnum-tag-only36553915 = and i64 %ptrtoint3744, 3
  %fixnump-test3656 = icmp eq i64 %fixnum-tag-only36553915, 0
  %or.cond4588 = or i1 %259, %fixnump-test3656
  br i1 %or.cond4588, label %tag632, label %tag156

tag498:                                           ; preds = %tag424
  %260 = add i64 %225, -3
  %261 = inttoptr i64 %260 to {}**
  %262 = load {}*, {}** %261, align 8
  br label %tag699

tag503:                                           ; preds = %header-check-br2869, %tag478, %tag418, %header-check-br3750, %tag30
  %263 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %264 = invoke {}* @cc_safe_fdefinition({}* %263)
          to label %normal-dest2852 unwind label %cleanup-lpad.loopexit.split-lp

tag504:                                           ; preds = %tag473
  %trunc4636 = trunc i64 %253 to i3
  switch i3 %trunc4636, label %tag740 [
    i3 -2, label %tag204
    i3 1, label %header-check-br1569
  ]

tag506:                                           ; preds = %tag73
  %265 = add i64 %234, -3
  %266 = inttoptr i64 %265 to {}**
  %267 = load {}*, {}** %266, align 8
  br label %tag31

tag509:                                           ; preds = %tag743, %normal-dest2334, %tag152
  %.val4620 = phi {}* [ %16, %tag152 ], [ %630, %normal-dest2334 ], [ %16, %tag743 ]
  %x1481.0 = phi {}* [ %95, %tag152 ], [ %x1481.1, %normal-dest2334 ], [ %16, %tag743 ]
  %268 = ptrtoint {}* %x1481.0 to i64
  %tag-only28783968 = and i64 %268, 7
  %consp-test2879 = icmp eq i64 %tag-only28783968, 3
  %.val4617 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159969.0 = select i1 %consp-test2879, {}* %.val4617, {}* %.val4620
  %269 = icmp eq {}* %G159969.0, %.val4620
  br i1 %269, label %tag414, label %tag105

tag518:                                           ; preds = %tag177, %normal-dest2709, %tag764
  %.val4622 = phi {}* [ %.val4612.pre, %tag764 ], [ %686, %normal-dest2709 ], [ %108, %tag177 ]
  %x2710.0 = phi {}* [ %386, %tag764 ], [ %x2710.1, %normal-dest2709 ], [ %108, %tag177 ]
  %270 = ptrtoint {}* %x2710.0 to i64
  %tag-only28873956 = and i64 %270, 7
  %consp-test2888 = icmp eq i64 %tag-only28873956, 3
  %.val4611 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G160044.0 = select i1 %consp-test2888, {}* %.val4611, {}* %.val4622
  %271 = icmp eq {}* %G160044.0, %.val4622
  br i1 %271, label %tag680, label %tag326

tag522:                                           ; preds = %normal-dest3271
  %272 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 156), align 16
  %273 = invoke {}* @cc_safe_fdefinition({}* %272)
          to label %normal-dest2891 unwind label %cleanup-lpad.loopexit.split-lp

tag523:                                           ; preds = %switch.early.test4755, %tag94
  %274 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %275 = invoke {}* @cc_safe_fdefinition({}* %274)
          to label %normal-dest2905 unwind label %cleanup-lpad.loopexit.split-lp

tag531:                                           ; preds = %tag169
  %276 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %277 = invoke {}* @cc_safe_fdefinition({}* %276)
          to label %normal-dest2920 unwind label %cleanup-lpad.loopexit.split-lp

tag534:                                           ; preds = %tag132
  %278 = icmp eq i64 %tag-only2733, 6
  br i1 %278, label %tag750, label %tag48

tag540:                                           ; preds = %tag581
  %279 = add i64 %298, -3
  %280 = inttoptr i64 %279 to {}**
  %281 = load {}*, {}** %280, align 8
  br label %tag575

tag549:                                           ; preds = %tag263
  %282 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %283 = invoke {}* @cc_safe_fdefinition({}* %282)
          to label %normal-dest2982 unwind label %cleanup-lpad.loopexit

tag553:                                           ; preds = %tag665
  %284 = icmp eq {}* %x969.0, %.val4689
  %G159074.0 = select i1 %284, {}* %.val4678, {}* %.val4689
  %285 = icmp eq {}* %G159074.0, %.val4689
  br i1 %285, label %tag449, label %tag51

tag555:                                           ; preds = %tag654.tag555_crit_edge, %header-check-br2078, %header-check-br3095, %tag785, %tag416
  %.val = phi {}* [ %.val.pre, %tag654.tag555_crit_edge ], [ %24, %tag416 ], [ %24, %tag785 ], [ %24, %header-check-br3095 ], [ %24, %header-check-br2078 ]
  %286 = phi {}* [ %326, %tag654.tag555_crit_edge ], [ %.val4597, %tag416 ], [ %.val4597, %tag785 ], [ %.val4597, %header-check-br3095 ], [ %.val4597, %header-check-br2078 ]
  %287 = add i64 %234, 5
  %"%SUBLIST158881.0.in" = inttoptr i64 %287 to {}**
  %"%SUBLIST158881.0" = load {}*, {}** %"%SUBLIST158881.0.in", align 8
  %288 = icmp eq {}* %"%SUBLIST158881.0", %286
  %object.0 = select i1 %288, {}* %.val, {}* %286
  %289 = icmp eq {}* %object.0, %286
  %G160422.0 = select i1 %289, {}* %.val, {}* %286
  %290 = icmp eq {}* %G160422.0, %286
  br i1 %290, label %tag234, label %tag429

tag560:                                           ; preds = %tag30
  %291 = invoke float @from_object_float({}* %.in4380)
          to label %normal-dest3012 unwind label %cleanup-lpad.loopexit.split-lp

tag561:                                           ; preds = %normal-dest2671
  %292 = add i64 %159, 5
  %293 = inttoptr i64 %292 to {}**
  %294 = load {}*, {}** %293, align 8
  %.val4645.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag298

tag575:                                           ; preds = %tag3, %normal-dest994, %tag540
  %.in4258 = phi {}* [ %281, %tag540 ], [ %.in4257, %normal-dest994 ], [ %.val4657, %tag3 ]
  %295 = bitcast {}* %.in4258 to i8*
  %296 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %297 = invoke {}* @cc_safe_fdefinition({}* %296)
          to label %normal-dest1216 unwind label %cleanup-lpad.loopexit.split-lp

tag581:                                           ; preds = %tag775, %normal-dest1841, %tag55
  %.val4657 = phi {}* [ %.val4640.pre, %tag55 ], [ %564, %normal-dest1841 ], [ %389, %tag775 ]
  %x1068.0 = phi {}* [ %52, %tag55 ], [ %x1068.1, %normal-dest1841 ], [ %389, %tag775 ]
  %298 = ptrtoint {}* %x1068.0 to i64
  %tag-only30724198 = and i64 %298, 7
  %consp-test3073 = icmp eq i64 %tag-only30724198, 3
  %.val4639 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159477.0 = select i1 %consp-test3073, {}* %.val4639, {}* %.val4657
  %299 = icmp eq {}* %G159477.0, %.val4657
  br i1 %299, label %tag3, label %tag540

tag589:                                           ; preds = %tag204
  %300 = invoke float @from_object_float({}* %.in4270)
          to label %normal-dest3102 unwind label %cleanup-lpad.loopexit.split-lp

tag592:                                           ; preds = %switch.early.test4757, %switch.early.test4757, %header-check-br3201, %header-check-br3567, %header-check-br3567, %tag28
  %301 = ptrtoint {}* %.in4392 to i64
  %fixnum-tag-only31064305 = and i64 %301, 3
  %fixnump-test3107 = icmp eq i64 %fixnum-tag-only31064305, 0
  br i1 %fixnump-test3107, label %tag629, label %tag97

tag603:                                           ; preds = %tag429
  %302 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %303 = invoke {}* @cc_safe_fdefinition({}* %302)
          to label %normal-dest3138 unwind label %cleanup-lpad.loopexit.split-lp

tag606:                                           ; preds = %normal-dest2044
  %304 = add i64 %125, 5
  %305 = inttoptr i64 %304 to {}**
  %306 = load {}*, {}** %305, align 8
  %.val4674.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag715

tag614:                                           ; preds = %normal-dest1897
  %307 = add i64 %159, 5
  %308 = inttoptr i64 %307 to {}**
  %309 = load {}*, {}** %308, align 8
  %.val4635.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag99

tag623:                                           ; preds = %tag99
  %310 = add i64 %69, -3
  %311 = inttoptr i64 %310 to {}**
  %312 = load {}*, {}** %311, align 8
  br label %tag381

tag624:                                           ; preds = %tag462
  %313 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %314 = invoke {}* @cc_safe_fdefinition({}* %313)
          to label %normal-dest3156 unwind label %cleanup-lpad.loopexit.split-lp

tag625:                                           ; preds = %tag305
  %315 = icmp eq {}* %.val4661, %farg1
  %G159588.0 = select i1 %315, {}* %.val4630, {}* %.val4661
  %316 = icmp eq {}* %G159588.0, %.val4661
  br i1 %316, label %tag252, label %tag258

tag627:                                           ; preds = %normal-dest3271
  %ptrtoint3177 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only3178 = and i64 %ptrtoint3177, 7
  %test3179 = icmp eq i64 %tag-only3178, 1
  br i1 %test3179, label %header-check-br3176, label %tag396

tag629:                                           ; preds = %header-check-br1252, %tag97, %tag592, %tag804, %header-check-br2215
  %317 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %318 = invoke {}* @cc_safe_fdefinition({}* %317)
          to label %normal-dest3186 unwind label %cleanup-lpad.loopexit.split-lp

tag632:                                           ; preds = %switch.early.test, %switch.early.test, %header-check-br891, %header-check-br3743, %header-check-br3743, %tag487
  %319 = ptrtoint {}* %.in4010 to i64
  %fixnum-tag-only31993921 = and i64 %319, 3
  %fixnump-test3200 = icmp eq i64 %fixnum-tag-only31993921, 0
  br i1 %fixnump-test3200, label %tag289, label %tag69

tag637:                                           ; preds = %header-check-br2215
  %320 = invoke double @from_object_double({}* nonnull %.in4392)
          to label %normal-dest3215 unwind label %cleanup-lpad.loopexit.split-lp

tag645:                                           ; preds = %tag136
  %321 = add i64 %88, -3
  %322 = inttoptr i64 %321 to {}**
  %323 = load {}*, {}** %322, align 8
  br label %tag695

tag646:                                           ; preds = %tag722
  %324 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %325 = invoke {}* @cc_safe_fdefinition({}* %324)
          to label %normal-dest3219 unwind label %cleanup-lpad.loopexit.split-lp

tag654:                                           ; preds = %tag31, %normal-dest2423
  %326 = phi {}* [ %645, %normal-dest2423 ], [ %.val4597, %tag31 ]
  %G160447.0 = phi {}* [ %G160447.1, %normal-dest2423 ], [ %24, %tag31 ]
  %327 = icmp eq {}* %G160447.0, %326
  br i1 %327, label %tag654.tag555_crit_edge, label %tag377

tag654.tag555_crit_edge:                          ; preds = %tag654
  %.val.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  br label %tag555

tag657:                                           ; preds = %tag377
  %328 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %328, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.3", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.3^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1049, i64 39, i64 0, i64 0)
          to label %normal-dest3271 unwind label %cleanup-lpad.loopexit.split-lp

tag665:                                           ; preds = %tag712, %normal-dest968, %tag782
  %.val4689 = phi {}* [ %.val4679.pre, %tag782 ], [ %455, %normal-dest968 ], [ %349, %tag712 ]
  %x969.0 = phi {}* [ %406, %tag782 ], [ %x969.1, %normal-dest968 ], [ %349, %tag712 ]
  %329 = ptrtoint {}* %x969.0 to i64
  %tag-only32894340 = and i64 %329, 7
  %consp-test3290 = icmp eq i64 %tag-only32894340, 3
  %.val4678 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159081.0 = select i1 %consp-test3290, {}* %.val4678, {}* %.val4689
  %330 = icmp eq {}* %G159081.0, %.val4689
  br i1 %330, label %tag553, label %tag401

tag675:                                           ; preds = %tag225
  %331 = icmp eq {}* %.val4695, %farg1
  %G159273.0 = select i1 %331, {}* %.val4664, {}* %.val4695
  %332 = icmp eq {}* %G159273.0, %.val4695
  br i1 %332, label %tag796, label %tag411

tag680:                                           ; preds = %tag518
  %333 = icmp eq {}* %x2710.0, %.val4622
  %G160037.0 = select i1 %333, {}* %.val4611, {}* %.val4622
  %334 = icmp eq {}* %G160037.0, %.val4622
  br i1 %334, label %tag207, label %tag116

tag683:                                           ; preds = %tag414, %normal-dest1373, %tag105
  %G159952.0 = phi {}* [ %73, %tag105 ], [ %G159952.1, %normal-dest1373 ], [ %.val4620, %tag414 ]
  %ptrtoint3348 = ptrtoint {}* %G159945.0 to i64
  %entry-point-addr-uint3349 = add i64 %ptrtoint3348, 7
  %entry-point-addr3350 = inttoptr i64 %entry-point-addr-uint3349 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3351 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3350, align 8
  %335 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3351({}* %G159945.0, i64 7, {}* %388, {}* %farg0, {}* %G159948.0, {}* %G159949.1, {}* %G159950.0, {}* %G159951.0, {}* %G159952.0)
          to label %tag234 unwind label %cleanup-lpad.loopexit.split-lp

tag687:                                           ; preds = %normal-dest2898
  %336 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 162), align 16
  %337 = invoke {}* @cc_safe_fdefinition({}* %336)
          to label %normal-dest3393 unwind label %cleanup-lpad.loopexit.split-lp

tag693:                                           ; preds = %tag217, %normal-dest2350, %tag406
  %.val4693 = phi {}* [ %.val4669.pre, %tag406 ], [ %636, %normal-dest2350 ], [ %122, %tag217 ]
  %x2351.0 = phi {}* [ %211, %tag406 ], [ %x2351.1, %normal-dest2350 ], [ %122, %tag217 ]
  %338 = ptrtoint {}* %x2351.0 to i64
  %tag-only34194298 = and i64 %338, 7
  %consp-test3420 = icmp eq i64 %tag-only34194298, 3
  %.val4668 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159243.0 = select i1 %consp-test3420, {}* %.val4668, {}* %.val4693
  %339 = icmp eq {}* %G159243.0, %.val4693
  br i1 %339, label %tag776, label %tag137

tag695:                                           ; preds = %tag213, %normal-dest2013, %tag645
  %.in3998 = phi {}* [ %323, %tag645 ], [ %.in3997, %normal-dest2013 ], [ %.val4624, %tag213 ]
  %340 = bitcast {}* %.in3998 to i8*
  %341 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %342 = invoke {}* @cc_safe_fdefinition({}* %341)
          to label %normal-dest2300 unwind label %cleanup-lpad.loopexit.split-lp

tag699:                                           ; preds = %tag231, %normal-dest2813, %tag498
  %G158989.0 = phi {}* [ %262, %tag498 ], [ %G158989.1, %normal-dest2813 ], [ %.val4687, %tag231 ]
  %ptrtoint3426 = ptrtoint {}* %G158982.0 to i64
  %entry-point-addr-uint3427 = add i64 %ptrtoint3426, 7
  %entry-point-addr3428 = inttoptr i64 %entry-point-addr-uint3427 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3429 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3428, align 8
  %343 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3429({}* %G158982.0, i64 7, {}* %780, {}* %farg0, {}* %G158985.0, {}* %G158986.1, {}* %G158987.0, {}* %G158988.0, {}* %G158989.0)
          to label %tag234 unwind label %cleanup-lpad.loopexit.split-lp

tag703:                                           ; preds = %tag298
  %344 = add i64 %155, -3
  %345 = inttoptr i64 %344 to {}**
  %346 = load {}*, {}** %345, align 8
  br label %tag726

tag705:                                           ; preds = %normal-dest3589, %normal-dest3103, %normal-dest952
  %G159520.0 = phi {}* [ %449, %normal-dest952 ], [ %755, %normal-dest3103 ], [ %G159520.1, %normal-dest3589 ]
  %ptrtoint3443 = ptrtoint {}* %140 to i64
  %entry-point-addr-uint3444 = add i64 %ptrtoint3443, 7
  %entry-point-addr3445 = inttoptr i64 %entry-point-addr-uint3444 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3446 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3445, align 8
  %347 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3446({}* %140, i64 1, {}* %G159520.0, {}* null, {}* null, {}* null)
          to label %normal-dest3449 unwind label %cleanup-lpad.loopexit.split-lp

tag711:                                           ; preds = %tag69
  %348 = icmp eq i64 %tag-only3745, 6
  br i1 %348, label %tag390, label %tag289

tag712:                                           ; preds = %normal-dest1061
  %349 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %350 = icmp eq {}* %349, %farg1
  %.val4676 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159094.0 = select i1 %350, {}* %.val4676, {}* %349
  %351 = icmp eq {}* %G159094.0, %349
  br i1 %351, label %tag40, label %tag665

tag715:                                           ; preds = %tag165, %normal-dest887, %tag606
  %.val4691 = phi {}* [ %.val4674.pre, %tag606 ], [ %440, %normal-dest887 ], [ %100, %tag165 ]
  %x888.0 = phi {}* [ %306, %tag606 ], [ %x888.1, %normal-dest887 ], [ %100, %tag165 ]
  %352 = ptrtoint {}* %x888.0 to i64
  %tag-only34794320 = and i64 %352, 7
  %consp-test3480 = icmp eq i64 %tag-only34794320, 3
  %.val4673 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159162.0 = select i1 %consp-test3480, {}* %.val4673, {}* %.val4691
  %353 = icmp eq {}* %G159162.0, %.val4691
  br i1 %353, label %tag358, label %tag778

tag719:                                           ; preds = %tag130, %normal-dest1919, %tag47
  %.val4626 = phi {}* [ %.val4603.pre, %tag47 ], [ %576, %normal-dest1919 ], [ %85, %tag130 ]
  %x1019.0 = phi {}* [ %44, %tag47 ], [ %x1019.1, %normal-dest1919 ], [ %85, %tag130 ]
  %354 = ptrtoint {}* %x1019.0 to i64
  %tag-only35063914 = and i64 %354, 7
  %consp-test3507 = icmp eq i64 %tag-only35063914, 3
  %.val4602 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G160206.0 = select i1 %consp-test3507, {}* %.val4602, {}* %.val4626
  %355 = icmp eq {}* %G160206.0, %.val4626
  br i1 %355, label %tag379, label %tag80

tag722:                                           ; preds = %normal-dest3381
  %356 = icmp eq {}* %785, %farg1
  %.val4613 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159998.0 = select i1 %356, {}* %.val4613, {}* %785
  %357 = icmp eq {}* %G159998.0, %785
  br i1 %357, label %tag646, label %tag8

tag726:                                           ; preds = %tag279, %tag703, %normal-dest2592
  %x2374.0 = phi {}* [ %346, %tag703 ], [ %x2374.1, %normal-dest2592 ], [ %.val4655, %tag279 ]
  %358 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %359 = invoke {}* @cc_safe_fdefinition({}* %358)
          to label %normal-dest3524 unwind label %cleanup-lpad.loopexit.split-lp

tag727:                                           ; preds = %normal-dest1897
  %360 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %361 = icmp eq {}* %360, %farg1
  %.val4632 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159571.0 = select i1 %361, {}* %.val4632, {}* %360
  %362 = icmp eq {}* %G159571.0, %360
  br i1 %362, label %tag427, label %tag99

tag734:                                           ; preds = %normal-dest3684
  %363 = icmp eq {}* %.val4599, %farg1
  %G160236.0 = select i1 %363, {}* %.val4598, {}* %.val4599
  %364 = icmp eq {}* %G160236.0, %.val4599
  br i1 %364, label %tag300, label %tag199

tag738:                                           ; preds = %tag776, %normal-dest942, %tag137
  %.in4392 = phi {}* [ %92, %tag137 ], [ %.in4391, %normal-dest942 ], [ %.val4693, %tag776 ]
  %365 = bitcast {}* %.in4392 to i8*
  %366 = ptrtoint %"class.core::T_O"* %418 to i64
  %367 = add i64 %366, -3
  %368 = inttoptr i64 %367 to %"class.gctools::smart_ptr"*
  %369 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %368, i64 0, i32 0
  %370 = load %"class.core::T_O"*, %"class.core::T_O"** %369, align 8, !tbaa !31
  %371 = bitcast %"class.core::T_O"* %370 to {}*
  %ptrtoint3568 = ptrtoint %"class.core::T_O"* %370 to i64
  %tag-only3569 = and i64 %ptrtoint3568, 7
  %test3570 = icmp eq i64 %tag-only3569, 1
  br i1 %test3570, label %header-check-br3567, label %tag28

tag740:                                           ; preds = %header-check-br1569, %tag504, %tag473, %header-check-br2229, %tag204
  %372 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %373 = invoke {}* @cc_safe_fdefinition({}* %372)
          to label %normal-dest3582 unwind label %cleanup-lpad.loopexit.split-lp

tag743:                                           ; preds = %tag8
  %374 = icmp eq {}* %x825.0, %16
  %.val4615 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159982.0 = select i1 %374, {}* %.val4615, {}* %16
  %375 = icmp eq {}* %G159982.0, %16
  br i1 %375, label %tag362, label %tag509

tag747:                                           ; preds = %header-check-br3368
  %376 = invoke double @from_object_double({}* nonnull %.in4258)
          to label %normal-dest3621 unwind label %cleanup-lpad.loopexit.split-lp

tag748:                                           ; preds = %tag379
  %377 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %378 = invoke {}* @cc_safe_fdefinition({}* %377)
          to label %normal-dest3625 unwind label %cleanup-lpad.loopexit.split-lp

tag750:                                           ; preds = %tag534
  %379 = invoke float @from_object_float({}* %.in4258)
          to label %normal-dest3638 unwind label %cleanup-lpad.loopexit.split-lp

tag753:                                           ; preds = %normal-dest3400, %header-check-br3545
  %380 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %381 = invoke {}* @cc_safe_fdefinition({}* %380)
          to label %normal-dest3642 unwind label %cleanup-lpad.loopexit.split-lp

tag761:                                           ; preds = %tag342, %header-check-br2429, %tag96, %tag205, %header-check-br
  %382 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %383 = invoke {}* @cc_safe_fdefinition({}* %382)
          to label %normal-dest3670 unwind label %cleanup-lpad.loopexit.split-lp

tag764:                                           ; preds = %normal-dest1281
  %384 = add i64 %823, 5
  %385 = inttoptr i64 %384 to {}**
  %386 = load {}*, {}** %385, align 8
  %.val4612.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag518

tag766:                                           ; preds = %normal-dest3715, %header-check-br3176, %normal-dest2475
  %G159945.0 = phi {}* [ %G159945.1, %normal-dest2475 ], [ %"closure->LAMBDA", %header-check-br3176 ], [ %G159945.2, %normal-dest3715 ]
  %387 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 171), align 8
  %388 = invoke {}* @cc_safe_symbol_value({}* %387)
          to label %normal-dest3684 unwind label %cleanup-lpad.loopexit.split-lp

tag775:                                           ; preds = %normal-dest3147
  %389 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %390 = icmp eq {}* %389, %farg1
  %.val4637 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G159490.0 = select i1 %390, {}* %.val4637, {}* %389
  %391 = icmp eq {}* %G159490.0, %389
  br i1 %391, label %tag245, label %tag581

tag776:                                           ; preds = %tag693
  %392 = icmp eq {}* %x2351.0, %.val4693
  %G159236.0 = select i1 %392, {}* %.val4668, {}* %.val4693
  %393 = icmp eq {}* %G159236.0, %.val4693
  br i1 %393, label %tag35, label %tag738

tag778:                                           ; preds = %tag715
  %394 = add i64 %352, -3
  %395 = inttoptr i64 %394 to {}**
  %396 = load {}*, {}** %395, align 8
  br label %tag476

tag780:                                           ; preds = %tag379, %normal-dest3632, %tag80
  %.in4010 = phi {}* [ %65, %tag80 ], [ %.in4009, %normal-dest3632 ], [ %.val4626, %tag379 ]
  %397 = bitcast {}* %.in4010 to i8*
  %398 = ptrtoint %"class.core::T_O"* %418 to i64
  %399 = add i64 %398, -3
  %400 = inttoptr i64 %399 to %"class.gctools::smart_ptr"*
  %401 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %400, i64 0, i32 0
  %402 = load %"class.core::T_O"*, %"class.core::T_O"** %401, align 8, !tbaa !31
  %403 = bitcast %"class.core::T_O"* %402 to {}*
  %ptrtoint3744 = ptrtoint %"class.core::T_O"* %402 to i64
  %tag-only3745 = and i64 %ptrtoint3744, 7
  %test3746 = icmp eq i64 %tag-only3745, 1
  br i1 %test3746, label %header-check-br3743, label %tag487

tag782:                                           ; preds = %normal-dest1061
  %404 = add i64 %125, 5
  %405 = inttoptr i64 %404 to {}**
  %406 = load {}*, {}** %405, align 8
  %.val4679.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag665

tag785:                                           ; preds = %header-check-br3095, %header-check-br3095, %header-check-br3095, %header-check-br3095
  %407 = ptrtoint {}* %.in4424 to i64
  %single-float-tag-only3764 = and i64 %407, 7
  %fixnum-tag-only13554421 = and i64 %407, 3
  %fixnump-test1356 = icmp ne i64 %fixnum-tag-only13554421, 0
  %test2081 = icmp eq i64 %single-float-tag-only3764, 1
  %or.cond4565 = and i1 %fixnump-test1356, %test2081
  br i1 %or.cond4565, label %header-check-br2078, label %tag555

tag796:                                           ; preds = %tag675
  %408 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %409 = invoke {}* @cc_safe_fdefinition({}* %408)
          to label %normal-dest3789 unwind label %cleanup-lpad.loopexit.split-lp

tag799:                                           ; preds = %normal-dest1780
  %410 = icmp eq i64 %tag-only2976, 6
  %fixnum-tag-only17634325 = and i64 %ptrtoint2975, 3
  %fixnump-test1764 = icmp eq i64 %fixnum-tag-only17634325, 0
  %or.cond4562 = or i1 %410, %fixnump-test1764
  br i1 %or.cond4562, label %tag418, label %tag19

tag801:                                           ; preds = %tag67, %normal-dest2386, %tag420
  %411 = phi {}* [ %512, %tag420 ], [ %642, %normal-dest2386 ], [ %512, %tag67 ]
  %x2387.0 = phi {}* [ %224, %tag420 ], [ %x2387.1, %normal-dest2386 ], [ %512, %tag67 ]
  %412 = ptrtoint {}* %x2387.0 to i64
  %tag-only38094351 = and i64 %412, 7
  %consp-test3810 = icmp eq i64 %tag-only38094351, 3
  br i1 %consp-test3810, label %tag71, label %tag462

tag804:                                           ; preds = %tag97
  %413 = icmp eq i64 %tag-only3569, 6
  br i1 %413, label %tag228, label %tag629

cleanup-lpad.loopexit:                            ; preds = %tag382, %normal-dest2416, %tag549, %normal-dest2982
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %tag19, %tag25, %normal-dest879, %tag35, %normal-dest934, %tag37, %normal-dest950, %normal-dest952, %tag40, %normal-dest960, %tag44, %normal-dest987, %tag48, %normal-dest1021, %tag52, %normal-dest1054, %tag58, %normal-dest1077, %normal-dest855, %tag70, %normal-dest1131, %tag85, %tag575, %normal-dest1216, %tag107, %normal-dest1274, %tag115, %tag116, %normal-dest1323, %tag122, %normal-dest1352, %normal-dest1353, %tag127, %normal-dest1366, %normal-dest3449, %normal-dest1395, %normal-dest3089, %tag155, %normal-dest1485, %tag156, %tag166, %normal-dest1519, %tag199, %tag200, %normal-dest1638, %normal-dest1639, %tag207, %normal-dest1651, %tag209, %tag228, %normal-dest1759, %normal-dest1761, %tag476, %normal-dest1773, %tag239, %normal-dest1788, %normal-dest1667, %tag245, %normal-dest1834, %tag252, %normal-dest1863, %tag258, %tag260, %normal-dest1912, %maybe-more-tests3553, %normal-dest1976, %normal-dest1321, %tag280, %normal-dest2006, %tag289, %normal-dest2023, %normal-dest2959, %tag300, %normal-dest2065, %tag312, %normal-dest2110, %tag338, %normal-dest2240, %normal-dest2241, %tag345, %tag346, %normal-dest2274, %tag351, %normal-dest2296, %normal-dest2297, %tag695, %normal-dest2300, %tag362, %normal-dest2327, %tag365, %normal-dest2343, %tag375, %normal-dest2379, %tag390, %normal-dest2454, %normal-dest2455, %tag396, %normal-dest2468, %tag411, %tag419, %normal-dest2585, %normal-dest2263, %normal-dest2601, %tag427, %normal-dest2622, %tag432, %normal-dest2664, %tag440, %tag442, %tag448, %normal-dest2702, %tag449, %normal-dest2717, %normal-dest2698, %tag483, %normal-dest2806, %tag503, %normal-dest2852, %tag522, %normal-dest2891, %tag523, %tag531, %normal-dest2920, %normal-dest1195, %normal-dest2952, %tag560, %normal-dest3012, %normal-dest3013, %maybe-more-tests2753, %normal-dest3023, %normal-dest2608, %tag51, %normal-dest3082, %tag589, %normal-dest3102, %normal-dest3103, %tag603, %normal-dest1403, %tag624, %normal-dest3156, %tag629, %normal-dest3186, %tag637, %normal-dest3215, %normal-dest3216, %tag646, %normal-dest3219, %normal-dest1499, %normal-dest2905, %tag657, %tag683, %normal-dest1331, %tag687, %normal-dest3393, %tag699, %tag705, %normal-dest3138, %tag726, %normal-dest3524, %tag740, %normal-dest3582, %normal-dest3531, %tag747, %normal-dest3621, %normal-dest3622, %tag748, %normal-dest3625, %tag750, %normal-dest3638, %normal-dest3639, %tag753, %normal-dest3642, %tag761, %normal-dest3670, %tag766, %maybe-more-tests3069, %normal-dest3708, %tag796, %normal-dest3789, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %414 = ptrtoint {}* %closure-ptr to i64
  %415 = and i64 %414, -8
  %416 = inttoptr i64 %415 to %1*
  %417 = getelementptr inbounds %1, %1* %416, i64 0, i32 4, i32 1, i64 1, i32 0
  %418 = load %"class.core::T_O"*, %"class.core::T_O"** %417, align 8, !tbaa !31
  %419 = getelementptr inbounds %1, %1* %416, i64 0, i32 4, i32 1, i64 0, i32 0
  %420 = bitcast %"class.core::T_O"** %419 to i64*
  %421 = load i64, i64* %420, align 8, !tbaa !31
  %422 = add i64 %421, -3
  %"%SUBLIST158881.0.in4700" = inttoptr i64 %422 to {}**
  %"%SUBLIST158881.04701" = load {}*, {}** %"%SUBLIST158881.0.in4700", align 8
  %423 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %424 = icmp eq {}* %"%SUBLIST158881.04701", %423
  %.val4702 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %object.04703 = select i1 %424, {}* %.val4702, {}* %423
  %425 = icmp eq {}* %object.04703, %423
  %G160422.04704 = select i1 %425, {}* %.val4702, {}* %423
  %426 = icmp eq {}* %G160422.04704, %423
  br i1 %426, label %tag234, label %tag429.lr.ph

tag429.lr.ph:                                     ; preds = %normal-dest
  %427 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only2581 = and i64 %427, 7
  %fixnum-tag-only14544419 = and i64 %427, 3
  %fixnump-test1455 = icmp ne i64 %fixnum-tag-only14544419, 0
  %test3098 = icmp eq i64 %single-float-tag-only2581, 1
  %or.cond4576 = and i1 %fixnump-test1455, %test3098
  %irc-bit-cast3099 = bitcast {}* %farg0 to i8*
  %gep3100 = getelementptr inbounds i8, i8* %irc-bit-cast3099, i64 -9
  %irc-bit-cast3101 = bitcast i8* %gep3100 to i64*
  br label %tag429

header-check-br:                                  ; preds = %header-check-br2429
  %irc-bit-cast822 = bitcast {}* %y978.1 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast822, i64 -9
  %irc-bit-cast823 = bitcast i8* %gep to i64*
  %428 = load i64, i64* %irc-bit-cast823, align 8
  %429 = icmp eq i64 %428, 1325
  br i1 %429, label %tag338, label %tag761

normal-dest855:                                   ; preds = %tag19
  %430 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %431 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %432 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %433 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint1121 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint1122 = add i64 %ptrtoint1121, 7
  %entry-point-addr1123 = inttoptr i64 %entry-point-addr-uint1122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1123, align 8
  %434 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1124({}* %19, i64 5, {}* %430, {}* %431, {}* %y1120.1, {}* %432, {}* %433)
          to label %normal-dest1127 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest879:                                   ; preds = %tag25
  %435 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %436 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %437 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %438 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint881 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint882 = add i64 %ptrtoint881, 7
  %entry-point-addr883 = inttoptr i64 %entry-point-addr-uint882 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point884 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr883, align 8
  %439 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point884({}* %21, i64 5, {}* %435, {}* %436, {}* %farg1, {}* %437, {}* %438)
          to label %normal-dest887 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest887:                                   ; preds = %normal-dest879
  %.elt4387 = extractvalue { {}*, i64 } %439, 0
  %.elt4389 = extractvalue { {}*, i64 } %439, 1
  %cond3896 = icmp eq i64 %.elt4389, 0
  %440 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x888.1 = select i1 %cond3896, {}* %440, {}* %.elt4387
  br label %tag715

header-check-br891:                               ; preds = %header-check-br3743
  %.old4587 = and i64 %ptrtoint3744, 3
  %fixnump-test3656.old = icmp eq i64 %.old4587, 0
  br i1 %fixnump-test3656.old, label %tag632, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br891
  switch i64 %827, label %tag156 [
    i64 1349, label %tag632
    i64 1309, label %tag632
  ]

normal-dest934:                                   ; preds = %tag35
  %441 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %442 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %443 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %444 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint936 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint937 = add i64 %ptrtoint936, 7
  %entry-point-addr938 = inttoptr i64 %entry-point-addr-uint937 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point939 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr938, align 8
  %445 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point939({}* %33, i64 5, {}* %441, {}* %442, {}* %x2351.0, {}* %443, {}* %444)
          to label %normal-dest942 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest942:                                   ; preds = %normal-dest934
  %.elt4399 = extractvalue { {}*, i64 } %445, 0
  %.elt4401 = extractvalue { {}*, i64 } %445, 1
  %cond3897 = icmp eq i64 %.elt4401, 0
  %446 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4391 = select i1 %cond3897, {}* %446, {}* %.elt4399
  br label %tag738

normal-dest950:                                   ; preds = %tag37
  %447 = invoke double @from_object_double({}* nonnull %197)
          to label %normal-dest952 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest952:                                   ; preds = %normal-dest950
  %448 = fdiv double %34, %447
  %449 = invoke {}* @to_object_double(double %448)
          to label %tag705 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest960:                                   ; preds = %tag40
  %450 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %451 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %452 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %453 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint962 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint963 = add i64 %ptrtoint962, 7
  %entry-point-addr964 = inttoptr i64 %entry-point-addr-uint963 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point965 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr964, align 8
  %454 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point965({}* %36, i64 5, {}* %450, {}* %451, {}* %farg1, {}* %452, {}* %453)
          to label %normal-dest968 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest968:                                   ; preds = %normal-dest960
  %.elt4376 = extractvalue { {}*, i64 } %454, 0
  %.elt4378 = extractvalue { {}*, i64 } %454, 1
  %cond3894 = icmp eq i64 %.elt4378, 0
  %455 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x969.1 = select i1 %cond3894, {}* %455, {}* %.elt4376
  br label %tag665

normal-dest987:                                   ; preds = %tag44
  %456 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %457 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %458 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %459 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint988 = ptrtoint {}* %38 to i64
  %entry-point-addr-uint989 = add i64 %ptrtoint988, 7
  %entry-point-addr990 = inttoptr i64 %entry-point-addr-uint989 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point991 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr990, align 8
  %460 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point991({}* %38, i64 5, {}* %456, {}* %457, {}* %x1068.0, {}* %458, {}* %459)
          to label %normal-dest994 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest994:                                   ; preds = %normal-dest987
  %.elt4261 = extractvalue { {}*, i64 } %460, 0
  %.elt4263 = extractvalue { {}*, i64 } %460, 1
  %cond3875 = icmp eq i64 %.elt4263, 0
  %461 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4257 = select i1 %cond3875, {}* %461, {}* %.elt4261
  br label %tag575

normal-dest1021:                                  ; preds = %tag48
  %ptrtoint1024 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint1025 = add i64 %ptrtoint1024, 7
  %entry-point-addr1026 = inttoptr i64 %entry-point-addr-uint1025 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1027 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1026, align 8
  %462 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1027({}* %46, i64 2, {}* %.in4258, {}* %y1167.1, {}* null, {}* null)
          to label %normal-dest1030 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1030:                                  ; preds = %normal-dest1021
  %.elt4210 = extractvalue { {}*, i64 } %462, 0
  %.elt4212 = extractvalue { {}*, i64 } %462, 1
  %cond3866 = icmp eq i64 %.elt4212, 0
  %463 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159418.1 = select i1 %cond3866, {}* %463, {}* %.elt4210
  br label %tag432

normal-dest1054:                                  ; preds = %tag52
  %.elt4336 = extractvalue { {}*, i64 } %49, 0
  %.elt4338 = extractvalue { {}*, i64 } %49, 1
  %cond3887 = icmp eq i64 %.elt4338, 0
  %464 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158987.0 = select i1 %cond3887, {}* %464, {}* %.elt4336
  %465 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %466 = invoke {}* @cc_safe_fdefinition({}* %465)
          to label %normal-dest1061 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1061:                                  ; preds = %normal-dest1054
  br i1 %consp-test1750, label %tag782, label %tag712

normal-dest1077:                                  ; preds = %tag58
  %467 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %468 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %469 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %470 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 213), align 8
  %ptrtoint1078 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint1079 = add i64 %ptrtoint1078, 7
  %entry-point-addr1080 = inttoptr i64 %entry-point-addr-uint1079 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1081 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1080, align 8
  %471 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1081({}* %54, i64 5, {}* %467, {}* %468, {}* %"closure->LAMBDA", {}* %469, {}* %470)
          to label %normal-dest1084 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1084:                                  ; preds = %normal-dest1077
  %.elt4293 = extractvalue { {}*, i64 } %471, 0
  %.elt4295 = extractvalue { {}*, i64 } %471, 1
  %cond3881 = icmp eq i64 %.elt4295, 0
  %472 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158982.1 = select i1 %cond3881, {}* %472, {}* %.elt4293
  br label %tag225

normal-dest1127:                                  ; preds = %normal-dest855
  call void @unreachableError()
  unreachable

normal-dest1131:                                  ; preds = %tag70
  %473 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %474 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %475 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %476 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1132 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint1133 = add i64 %ptrtoint1132, 7
  %entry-point-addr1134 = inttoptr i64 %entry-point-addr-uint1133 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1135 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1134, align 8
  %477 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1135({}* %58, i64 5, {}* %473, {}* %474, {}* %x1247.0, {}* %475, {}* %476)
          to label %normal-dest1138 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1138:                                  ; preds = %normal-dest1131
  %.elt4277 = extractvalue { {}*, i64 } %477, 0
  %.elt4279 = extractvalue { {}*, i64 } %477, 1
  %cond3877 = icmp eq i64 %.elt4279, 0
  %478 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4269 = select i1 %cond3877, {}* %478, {}* %.elt4277
  br label %tag381

header-check-br1160:                              ; preds = %tag69
  %gep1165 = getelementptr inbounds i8, i8* %397, i64 -9
  %irc-bit-cast1166 = bitcast i8* %gep1165 to i64*
  %479 = load i64, i64* %irc-bit-cast1166, align 8
  %480 = icmp ne i64 %479, 1325
  %test3746.not = xor i1 %test3746, true
  %brmerge4571 = or i1 %480, %test3746.not
  br i1 %brmerge4571, label %tag289, label %header-check-br2844

normal-dest1195:                                  ; preds = %tag85
  %481 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %482 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %483 = invoke {}* @cc_safe_fdefinition({}* %482)
          to label %normal-dest2952 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1216:                                  ; preds = %tag575
  %ptrtoint1219 = ptrtoint {}* %297 to i64
  %entry-point-addr-uint1220 = add i64 %ptrtoint1219, 7
  %entry-point-addr1221 = inttoptr i64 %entry-point-addr-uint1220 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1222 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1221, align 8
  %484 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1222({}* %297, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1225 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1225:                                  ; preds = %normal-dest1216
  %.elt4200 = extractvalue { {}*, i64 } %484, 0
  %.elt4202 = extractvalue { {}*, i64 } %484, 1
  %cond3865 = icmp eq i64 %.elt4202, 0
  %485 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y1167.1 = select i1 %cond3865, {}* %485, {}* %.elt4200
  %ptrtoint2732 = ptrtoint {}* %y1167.1 to i64
  %tag-only2733 = and i64 %ptrtoint2732, 7
  %test2734 = icmp eq i64 %tag-only2733, 1
  br i1 %test2734, label %header-check-br2731, label %tag386

header-check-br1252:                              ; preds = %tag97
  %gep1257 = getelementptr inbounds i8, i8* %365, i64 -9
  %irc-bit-cast1258 = bitcast i8* %gep1257 to i64*
  %486 = load i64, i64* %irc-bit-cast1258, align 8
  %487 = icmp ne i64 %486, 1325
  %test3570.not = xor i1 %test3570, true
  %brmerge4567 = or i1 %487, %test3570.not
  br i1 %brmerge4567, label %tag629, label %header-check-br2215

normal-dest1274:                                  ; preds = %tag107
  %.elt3952 = extractvalue { {}*, i64 } %74, 0
  %.elt3954 = extractvalue { {}*, i64 } %74, 1
  %cond3824 = icmp eq i64 %.elt3954, 0
  %488 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159950.0 = select i1 %cond3824, {}* %488, {}* %.elt3952
  %489 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %490 = invoke {}* @cc_safe_fdefinition({}* %489)
          to label %normal-dest1281 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1281:                                  ; preds = %normal-dest1274
  br i1 %consp-test3691, label %tag764, label %tag177

normal-dest1321:                                  ; preds = %tag115
  %491 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %492 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %493 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %494 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint1989 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint1990 = add i64 %ptrtoint1989, 7
  %entry-point-addr1991 = inttoptr i64 %entry-point-addr-uint1990 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1992 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1991, align 8
  %495 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1992({}* %76, i64 5, {}* %491, {}* %492, {}* %371, {}* %493, {}* %494)
          to label %normal-dest1995 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1323:                                  ; preds = %tag116
  %ptrtoint1325 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint1326 = add i64 %ptrtoint1325, 7
  %entry-point-addr1327 = inttoptr i64 %entry-point-addr-uint1326 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1328 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1327, align 8
  %496 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1328({}* %78, i64 2, {}* %x1660.0, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1331 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1331:                                  ; preds = %normal-dest1323
  %.elt3959 = extractvalue { {}*, i64 } %496, 0
  %.elt3961 = extractvalue { {}*, i64 } %496, 1
  %cond3825 = icmp eq i64 %.elt3961, 0
  %497 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160006.1 = select i1 %cond3825, {}* %497, {}* %.elt3959
  %ptrtoint3375 = ptrtoint {}* %490 to i64
  %entry-point-addr-uint3376 = add i64 %ptrtoint3375, 7
  %entry-point-addr3377 = inttoptr i64 %entry-point-addr-uint3376 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3378 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3377, align 8
  %498 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3378({}* %490, i64 1, {}* %G160006.1, {}* null, {}* null, {}* null)
          to label %normal-dest3381 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1352:                                  ; preds = %tag122
  %499 = invoke float @from_object_float({}* %y978.1)
          to label %normal-dest1353 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1353:                                  ; preds = %normal-dest1352
  %500 = fdiv float %79, %499
  %501 = invoke {}* @to_object_float(float %500)
          to label %tag107 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1366:                                  ; preds = %tag127
  %502 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %503 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %504 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %505 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1367 = ptrtoint {}* %81 to i64
  %entry-point-addr-uint1368 = add i64 %ptrtoint1367, 7
  %entry-point-addr1369 = inttoptr i64 %entry-point-addr-uint1368 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1370 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1369, align 8
  %506 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1370({}* %81, i64 5, {}* %502, {}* %503, {}* %x1481.0, {}* %504, {}* %505)
          to label %normal-dest1373 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1373:                                  ; preds = %normal-dest1366
  %.elt3977 = extractvalue { {}*, i64 } %506, 0
  %.elt3979 = extractvalue { {}*, i64 } %506, 1
  %cond3827 = icmp eq i64 %.elt3979, 0
  %507 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159952.1 = select i1 %cond3827, {}* %507, {}* %.elt3977
  br label %tag683

header-check-br1386:                              ; preds = %header-check-br2974
  %.old4561 = and i64 %ptrtoint2975, 3
  %fixnump-test1764.old = icmp eq i64 %.old4561, 0
  br i1 %fixnump-test1764.old, label %tag418, label %switch.early.test4753

switch.early.test4753:                            ; preds = %header-check-br1386
  switch i64 %729, label %tag19 [
    i64 1349, label %tag418
    i64 1309, label %tag418
  ]

normal-dest1395:                                  ; preds = %normal-dest3449
  %.elt4191 = extractvalue { {}*, i64 } %347, 1
  %cond3863 = icmp eq i64 %.elt4191, 0
  %.elt4189 = extractvalue { {}*, i64 } %347, 0
  %x3450.0 = select i1 %cond3863, {}* %790, {}* %.elt4189
  %ptrtoint1397 = ptrtoint {}* %792 to i64
  %entry-point-addr-uint1398 = add i64 %ptrtoint1397, 7
  %entry-point-addr1399 = inttoptr i64 %entry-point-addr-uint1398 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1400 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1399, align 8
  %508 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1400({}* %792, i64 2, {}* %x3450.0, {}* inttoptr (i64 400 to {}*), {}* null, {}* null)
          to label %normal-dest1403 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1403:                                  ; preds = %normal-dest1395
  %.elt4194 = extractvalue { {}*, i64 } %508, 0
  %.elt4196 = extractvalue { {}*, i64 } %508, 1
  %cond3864 = icmp eq i64 %.elt4196, 0
  %509 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159301.1 = select i1 %cond3864, {}* %509, {}* %.elt4194
  %510 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %511 = invoke {}* @cc_safe_fdefinition({}* %510)
          to label %normal-dest3147 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br1410:                              ; preds = %header-check-br2408
  %.old4581 = and i64 %ptrtoint2409, 3
  %fixnump-test3322.old = icmp eq i64 %.old4581, 0
  br i1 %fixnump-test3322.old, label %tag473, label %switch.early.test4754

switch.early.test4754:                            ; preds = %header-check-br1410
  switch i64 %643, label %tag209 [
    i64 1349, label %tag473
    i64 1309, label %tag473
  ]

normal-dest1470:                                  ; preds = %normal-dest3089
  %.elt4347 = extractvalue { {}*, i64 } %747, 0
  %.elt4349 = extractvalue { {}*, i64 } %747, 1
  %cond3889 = icmp eq i64 %.elt4349, 0
  %512 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158988.0 = select i1 %cond3889, {}* %512, {}* %.elt4347
  br i1 %consp-test1750, label %tag420, label %tag67

normal-dest1485:                                  ; preds = %tag155
  %513 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %514 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %515 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %516 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1486 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint1487 = add i64 %ptrtoint1486, 7
  %entry-point-addr1488 = inttoptr i64 %entry-point-addr-uint1487 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1489 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1488, align 8
  %517 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1489({}* %97, i64 5, {}* %513, {}* %514, {}* %x1797.0, {}* %515, {}* %516)
          to label %normal-dest1492 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1492:                                  ; preds = %normal-dest1485
  %.elt4240 = extractvalue { {}*, i64 } %517, 0
  %.elt4242 = extractvalue { {}*, i64 } %517, 1
  %cond3871 = icmp eq i64 %.elt4242, 0
  %518 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1002.1 = select i1 %cond3871, {}* %518, {}* %.elt4240
  br label %tag359

normal-dest1499:                                  ; preds = %tag156
  %519 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %520 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %521 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %522 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint3232 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint3233 = add i64 %ptrtoint3232, 7
  %entry-point-addr3234 = inttoptr i64 %entry-point-addr-uint3233 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3235 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3234, align 8
  %523 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3235({}* %99, i64 5, {}* %519, {}* %520, {}* %403, {}* %521, {}* %522)
          to label %normal-dest3238 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1519:                                  ; preds = %tag166
  %524 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %525 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %526 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %527 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1520 = ptrtoint {}* %104 to i64
  %entry-point-addr-uint1521 = add i64 %ptrtoint1520, 7
  %entry-point-addr1522 = inttoptr i64 %entry-point-addr-uint1521 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1523 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1522, align 8
  %528 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1523({}* %104, i64 5, {}* %524, {}* %525, {}* %x1002.0, {}* %526, {}* %527)
          to label %normal-dest1526 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1526:                                  ; preds = %normal-dest1519
  %.elt4236 = extractvalue { {}*, i64 } %528, 0
  %.elt4238 = extractvalue { {}*, i64 } %528, 1
  %cond3870 = icmp eq i64 %.elt4238, 0
  %529 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159304.1 = select i1 %cond3870, {}* %529, {}* %.elt4236
  br label %tag440

header-check-br1558:                              ; preds = %header-check-br3015
  %.old4577 = and i64 %ptrtoint3016, 3
  %fixnump-test3320.old = icmp eq i64 %.old4577, 0
  br i1 %fixnump-test3320.old, label %tag96, label %switch.early.test4755

switch.early.test4755:                            ; preds = %header-check-br1558
  switch i64 %739, label %tag523 [
    i64 1349, label %tag96
    i64 1309, label %tag96
  ]

header-check-br1569:                              ; preds = %tag504
  %gep1574 = getelementptr inbounds i8, i8* %191, i64 -9
  %irc-bit-cast1575 = bitcast i8* %gep1574 to i64*
  %530 = load i64, i64* %irc-bit-cast1575, align 8
  %531 = icmp ne i64 %530, 1325
  %test2411.not = xor i1 %test2411, true
  %brmerge4569 = or i1 %531, %test2411.not
  br i1 %brmerge4569, label %tag740, label %header-check-br2229

normal-dest1631:                                  ; preds = %tag199
  br i1 %consp-test3691, label %tag47, label %tag130

normal-dest1638:                                  ; preds = %tag200
  %532 = invoke double @from_object_double({}* nonnull %y1120.1)
          to label %normal-dest1639 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1639:                                  ; preds = %normal-dest1638
  %533 = fdiv double %113, %532
  %534 = invoke {}* @to_object_double(double %533)
          to label %tag52 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1651:                                  ; preds = %tag207
  %535 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %536 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %537 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %538 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1653 = ptrtoint {}* %117 to i64
  %entry-point-addr-uint1654 = add i64 %ptrtoint1653, 7
  %entry-point-addr1655 = inttoptr i64 %entry-point-addr-uint1654 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1656 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1655, align 8
  %539 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1656({}* %117, i64 5, {}* %535, {}* %536, {}* %x2710.0, {}* %537, {}* %538)
          to label %normal-dest1659 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1659:                                  ; preds = %normal-dest1651
  %.elt3990 = extractvalue { {}*, i64 } %539, 0
  %.elt3992 = extractvalue { {}*, i64 } %539, 1
  %cond3830 = icmp eq i64 %.elt3992, 0
  %540 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in = select i1 %cond3830, {}* %540, {}* %.elt3990
  br label %tag116

normal-dest1667:                                  ; preds = %tag209
  %541 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %542 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %543 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %544 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint1819 = ptrtoint {}* %119 to i64
  %entry-point-addr-uint1820 = add i64 %ptrtoint1819, 7
  %entry-point-addr1821 = inttoptr i64 %entry-point-addr-uint1820 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1822 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1821, align 8
  %545 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1822({}* %119, i64 5, {}* %541, {}* %542, {}* %197, {}* %543, {}* %544)
          to label %normal-dest1825 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br1682:                              ; preds = %tag132
  %gep1687 = getelementptr inbounds i8, i8* %295, i64 -9
  %irc-bit-cast1688 = bitcast i8* %gep1687 to i64*
  %546 = load i64, i64* %irc-bit-cast1688, align 8
  %547 = icmp ne i64 %546, 1325
  %test2734.not = xor i1 %test2734, true
  %brmerge4586 = or i1 %547, %test2734.not
  br i1 %brmerge4586, label %tag48, label %header-check-br3368

normal-dest1759:                                  ; preds = %tag228
  %548 = invoke float @from_object_float({}* %371)
          to label %normal-dest1761 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1761:                                  ; preds = %normal-dest1759
  %549 = fdiv float %127, %548
  %550 = invoke {}* @to_object_float(float %549)
          to label %tag85 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1773:                                  ; preds = %tag476
  %ptrtoint1774 = ptrtoint {}* %256 to i64
  %entry-point-addr-uint1775 = add i64 %ptrtoint1774, 7
  %entry-point-addr1776 = inttoptr i64 %entry-point-addr-uint1775 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1777 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1776, align 8
  %551 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1777({}* %256, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1780 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1780:                                  ; preds = %normal-dest1773
  %.elt4322 = extractvalue { {}*, i64 } %551, 0
  %.elt4324 = extractvalue { {}*, i64 } %551, 1
  %cond3885 = icmp eq i64 %.elt4324, 0
  %552 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y1120.1 = select i1 %cond3885, {}* %552, {}* %.elt4322
  %ptrtoint2975 = ptrtoint {}* %y1120.1 to i64
  %tag-only2976 = and i64 %ptrtoint2975, 7
  %test2977 = icmp eq i64 %tag-only2976, 1
  br i1 %test2977, label %header-check-br2974, label %tag799

normal-dest1788:                                  ; preds = %tag239
  %553 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %554 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %555 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %556 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1790 = ptrtoint {}* %134 to i64
  %entry-point-addr-uint1791 = add i64 %ptrtoint1790, 7
  %entry-point-addr1792 = inttoptr i64 %entry-point-addr-uint1791 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1793 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1792, align 8
  %557 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1793({}* %134, i64 5, {}* %553, {}* %554, {}* %farg1, {}* %555, {}* %556)
          to label %normal-dest1796 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1796:                                  ; preds = %normal-dest1788
  %.elt4244 = extractvalue { {}*, i64 } %557, 0
  %.elt4246 = extractvalue { {}*, i64 } %557, 1
  %cond3872 = icmp eq i64 %.elt4246, 0
  %558 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1797.1 = select i1 %cond3872, {}* %558, {}* %.elt4244
  br label %tag405

normal-dest1825:                                  ; preds = %normal-dest1667
  call void @unreachableError()
  unreachable

normal-dest1834:                                  ; preds = %tag245
  %559 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %560 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %561 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %562 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1835 = ptrtoint {}* %136 to i64
  %entry-point-addr-uint1836 = add i64 %ptrtoint1835, 7
  %entry-point-addr1837 = inttoptr i64 %entry-point-addr-uint1836 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1838 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1837, align 8
  %563 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1838({}* %136, i64 5, {}* %559, {}* %560, {}* %farg1, {}* %561, {}* %562)
          to label %normal-dest1841 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1841:                                  ; preds = %normal-dest1834
  %.elt4265 = extractvalue { {}*, i64 } %563, 0
  %.elt4267 = extractvalue { {}*, i64 } %563, 1
  %cond3876 = icmp eq i64 %.elt4267, 0
  %564 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1068.1 = select i1 %cond3876, {}* %564, {}* %.elt4265
  br label %tag581

normal-dest1863:                                  ; preds = %tag252
  %565 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %566 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %567 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %568 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1865 = ptrtoint {}* %138 to i64
  %entry-point-addr-uint1866 = add i64 %ptrtoint1865, 7
  %entry-point-addr1867 = inttoptr i64 %entry-point-addr-uint1866 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1868 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1867, align 8
  %569 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1868({}* %138, i64 5, {}* %565, {}* %566, {}* %farg1, {}* %567, {}* %568)
          to label %normal-dest1871 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1871:                                  ; preds = %normal-dest1863
  %.elt4285 = extractvalue { {}*, i64 } %569, 0
  %.elt4287 = extractvalue { {}*, i64 } %569, 1
  %cond3879 = icmp eq i64 %.elt4287, 0
  %570 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159300.1 = select i1 %cond3879, {}* %570, {}* %.elt4285
  br label %tag258

normal-dest1897:                                  ; preds = %tag258
  br i1 %consp-test2096, label %tag614, label %tag727

normal-dest1912:                                  ; preds = %tag260
  %571 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %572 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %573 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %574 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1913 = ptrtoint {}* %142 to i64
  %entry-point-addr-uint1914 = add i64 %ptrtoint1913, 7
  %entry-point-addr1915 = inttoptr i64 %entry-point-addr-uint1914 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1916 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1915, align 8
  %575 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1916({}* %142, i64 5, {}* %571, {}* %572, {}* %farg1, {}* %573, {}* %574)
          to label %normal-dest1919 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1919:                                  ; preds = %normal-dest1912
  %.elt4021 = extractvalue { {}*, i64 } %575, 0
  %.elt4023 = extractvalue { {}*, i64 } %575, 1
  %cond3835 = icmp eq i64 %.elt4023, 0
  %576 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1019.1 = select i1 %cond3835, {}* %576, {}* %.elt4021
  br label %tag719

header-check-br1925:                              ; preds = %header-check-br2731
  %.old4572 = and i64 %ptrtoint2732, 3
  %fixnump-test2884.old = icmp eq i64 %.old4572, 0
  br i1 %fixnump-test2884.old, label %tag296, label %switch.early.test4756

switch.early.test4756:                            ; preds = %header-check-br1925
  switch i64 %693, label %tag442 [
    i64 1349, label %tag296
    i64 1309, label %tag296
  ]

normal-dest1976:                                  ; preds = %maybe-more-tests3553
  %ptrtoint1977 = ptrtoint {}* %798 to i64
  %entry-point-addr-uint1978 = add i64 %ptrtoint1977, 7
  %entry-point-addr1979 = inttoptr i64 %entry-point-addr-uint1978 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1980 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1979, align 8
  %577 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1980({}* %798, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1983 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest1983:                                  ; preds = %normal-dest1976
  %.elt4289 = extractvalue { {}*, i64 } %577, 0
  %.elt4291 = extractvalue { {}*, i64 } %577, 1
  %cond3880 = icmp eq i64 %.elt4291, 0
  %578 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159297.1 = select i1 %cond3880, {}* %578, {}* %.elt4289
  br label %tag305

normal-dest1995:                                  ; preds = %normal-dest1321
  call void @unreachableError()
  unreachable

normal-dest2006:                                  ; preds = %tag280
  %579 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %580 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %581 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %582 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2007 = ptrtoint {}* %148 to i64
  %entry-point-addr-uint2008 = add i64 %ptrtoint2007, 7
  %entry-point-addr2009 = inttoptr i64 %entry-point-addr-uint2008 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2010 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2009, align 8
  %583 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2010({}* %148, i64 5, {}* %579, {}* %580, {}* %x1417.0, {}* %581, {}* %582)
          to label %normal-dest2013 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2013:                                  ; preds = %normal-dest2006
  %.elt4001 = extractvalue { {}*, i64 } %583, 0
  %.elt4003 = extractvalue { {}*, i64 } %583, 1
  %cond3832 = icmp eq i64 %.elt4003, 0
  %584 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in3997 = select i1 %cond3832, {}* %584, {}* %.elt4001
  br label %tag695

normal-dest2023:                                  ; preds = %tag289
  %ptrtoint2024 = ptrtoint {}* %153 to i64
  %entry-point-addr-uint2025 = add i64 %ptrtoint2024, 7
  %entry-point-addr2026 = inttoptr i64 %entry-point-addr-uint2025 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2027 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2026, align 8
  %585 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2027({}* %153, i64 2, {}* %.in4010, {}* %403, {}* null, {}* null)
          to label %normal-dest2030 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2030:                                  ; preds = %normal-dest2023
  %.elt3923 = extractvalue { {}*, i64 } %585, 0
  %.elt3925 = extractvalue { {}*, i64 } %585, 1
  %cond3819 = icmp eq i64 %.elt3925, 0
  %586 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160168.1 = select i1 %cond3819, {}* %586, {}* %.elt3923
  br label %tag345

normal-dest2044:                                  ; preds = %normal-dest2959
  br i1 %consp-test1750, label %tag606, label %tag165

normal-dest2065:                                  ; preds = %tag300
  %587 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %588 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %589 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %590 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2066 = ptrtoint {}* %158 to i64
  %entry-point-addr-uint2067 = add i64 %ptrtoint2066, 7
  %entry-point-addr2068 = inttoptr i64 %entry-point-addr-uint2067 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2069 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2068, align 8
  %591 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2069({}* %158, i64 5, {}* %587, {}* %588, {}* %farg1, {}* %589, {}* %590)
          to label %normal-dest2072 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2072:                                  ; preds = %normal-dest2065
  %.elt4025 = extractvalue { {}*, i64 } %591, 0
  %.elt4027 = extractvalue { {}*, i64 } %591, 1
  %cond3836 = icmp eq i64 %.elt4027, 0
  %592 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159948.1 = select i1 %cond3836, {}* %592, {}* %.elt4025
  br label %tag199

header-check-br2078:                              ; preds = %tag785
  %gep2083 = getelementptr inbounds i8, i8* %25, i64 -9
  %irc-bit-cast2084 = bitcast i8* %gep2083 to i64*
  %593 = load i64, i64* %irc-bit-cast2084, align 8
  %594 = add i64 %593, -1309
  %595 = lshr i64 %594, 3
  %596 = shl i64 %594, 61
  %597 = or i64 %595, %596
  switch i64 %597, label %tag555 [
    i64 2, label %tag382
    i64 4, label %tag382
    i64 5, label %tag382
    i64 0, label %tag382
  ]

normal-dest2110:                                  ; preds = %tag312
  %598 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %599 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %600 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %601 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2111 = ptrtoint {}* %168 to i64
  %entry-point-addr-uint2112 = add i64 %ptrtoint2111, 7
  %entry-point-addr2113 = inttoptr i64 %entry-point-addr-uint2112 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2114 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2113, align 8
  %602 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2114({}* %168, i64 5, {}* %598, {}* %599, {}* %farg1, {}* %600, {}* %601)
          to label %normal-dest2117 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2117:                                  ; preds = %normal-dest2110
  %.elt4254 = extractvalue { {}*, i64 } %602, 0
  %.elt4256 = extractvalue { {}*, i64 } %602, 1
  %cond3874 = icmp eq i64 %.elt4256, 0
  %603 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2059.1 = select i1 %cond3874, {}* %603, {}* %.elt4254
  br label %tag298

header-check-br2215:                              ; preds = %header-check-br1252
  %gep2220 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %370, i64 -9, i32 0
  %irc-bit-cast2221 = bitcast i8* %gep2220 to i64*
  %604 = load i64, i64* %irc-bit-cast2221, align 8
  %605 = icmp eq i64 %604, 1325
  br i1 %605, label %tag637, label %tag629

header-check-br2229:                              ; preds = %header-check-br1569
  %gep2234 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %196, i64 -9, i32 0
  %irc-bit-cast2235 = bitcast i8* %gep2234 to i64*
  %606 = load i64, i64* %irc-bit-cast2235, align 8
  %607 = icmp eq i64 %606, 1325
  br i1 %607, label %tag37, label %tag740

normal-dest2240:                                  ; preds = %tag338
  %608 = invoke double @from_object_double({}* nonnull %y978.1)
          to label %normal-dest2241 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2241:                                  ; preds = %normal-dest2240
  %609 = fdiv double %173, %608
  %610 = invoke {}* @to_object_double(double %609)
          to label %tag107 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2263:                                  ; preds = %tag345
  %611 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %612 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %613 = invoke {}* @cc_safe_fdefinition({}* %612)
          to label %normal-dest2601 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2274:                                  ; preds = %tag346
  %614 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %615 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %616 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %617 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2276 = ptrtoint {}* %176 to i64
  %entry-point-addr-uint2277 = add i64 %ptrtoint2276, 7
  %entry-point-addr2278 = inttoptr i64 %entry-point-addr-uint2277 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2279 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2278, align 8
  %618 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2279({}* %176, i64 5, {}* %614, {}* %615, {}* %x888.0, {}* %616, {}* %617)
          to label %normal-dest2282 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2282:                                  ; preds = %normal-dest2274
  %.elt4383 = extractvalue { {}*, i64 } %618, 0
  %.elt4385 = extractvalue { {}*, i64 } %618, 1
  %cond3895 = icmp eq i64 %.elt4385, 0
  %619 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4379 = select i1 %cond3895, {}* %619, {}* %.elt4383
  br label %tag476

normal-dest2296:                                  ; preds = %tag351
  %620 = invoke double @from_object_double({}* nonnull %403)
          to label %normal-dest2297 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2297:                                  ; preds = %normal-dest2296
  %621 = fdiv double %177, %620
  %622 = invoke {}* @to_object_double(double %621)
          to label %tag345 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2300:                                  ; preds = %tag695
  %ptrtoint2301 = ptrtoint {}* %342 to i64
  %entry-point-addr-uint2302 = add i64 %ptrtoint2301, 7
  %entry-point-addr2303 = inttoptr i64 %entry-point-addr-uint2302 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2304 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2303, align 8
  %623 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2304({}* %342, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest2307 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2307:                                  ; preds = %normal-dest2300
  %.elt3938 = extractvalue { {}*, i64 } %623, 0
  %.elt3940 = extractvalue { {}*, i64 } %623, 1
  %cond3822 = icmp eq i64 %.elt3940, 0
  %624 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y978.1 = select i1 %cond3822, {}* %624, {}* %.elt3938
  %ptrtoint3016 = ptrtoint {}* %y978.1 to i64
  %tag-only3017 = and i64 %ptrtoint3016, 7
  %test3018 = icmp eq i64 %tag-only3017, 1
  br i1 %test3018, label %header-check-br3015, label %tag94

normal-dest2327:                                  ; preds = %tag362
  %625 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %626 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %627 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %628 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2328 = ptrtoint {}* %183 to i64
  %entry-point-addr-uint2329 = add i64 %ptrtoint2328, 7
  %entry-point-addr2330 = inttoptr i64 %entry-point-addr-uint2329 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2331 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2330, align 8
  %629 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2331({}* %183, i64 5, {}* %625, {}* %626, {}* %x825.0, {}* %627, {}* %628)
          to label %normal-dest2334 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2334:                                  ; preds = %normal-dest2327
  %.elt3981 = extractvalue { {}*, i64 } %629, 0
  %.elt3983 = extractvalue { {}*, i64 } %629, 1
  %cond3828 = icmp eq i64 %.elt3983, 0
  %630 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1481.1 = select i1 %cond3828, {}* %630, {}* %.elt3981
  br label %tag509

normal-dest2343:                                  ; preds = %tag365
  %631 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %632 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %633 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %634 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2344 = ptrtoint {}* %185 to i64
  %entry-point-addr-uint2345 = add i64 %ptrtoint2344, 7
  %entry-point-addr2346 = inttoptr i64 %entry-point-addr-uint2345 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2347 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2346, align 8
  %635 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2347({}* %185, i64 5, {}* %631, {}* %632, {}* %farg1, {}* %633, {}* %634)
          to label %normal-dest2350 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2350:                                  ; preds = %normal-dest2343
  %.elt4403 = extractvalue { {}*, i64 } %635, 0
  %.elt4405 = extractvalue { {}*, i64 } %635, 1
  %cond3898 = icmp eq i64 %.elt4405, 0
  %636 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2351.1 = select i1 %cond3898, {}* %636, {}* %.elt4403
  br label %tag693

normal-dest2379:                                  ; preds = %tag375
  %637 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %638 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %639 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %640 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2380 = ptrtoint {}* %187 to i64
  %entry-point-addr-uint2381 = add i64 %ptrtoint2380, 7
  %entry-point-addr2382 = inttoptr i64 %entry-point-addr-uint2381 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2383 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2382, align 8
  %641 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2383({}* %187, i64 5, {}* %637, {}* %638, {}* %farg1, {}* %639, {}* %640)
          to label %normal-dest2386 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2386:                                  ; preds = %normal-dest2379
  %.elt4366 = extractvalue { {}*, i64 } %641, 0
  %.elt4368 = extractvalue { {}*, i64 } %641, 1
  %cond3892 = icmp eq i64 %.elt4368, 0
  %642 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2387.1 = select i1 %cond3892, {}* %642, {}* %.elt4366
  br label %tag801

header-check-br2408:                              ; preds = %tag381
  %gep2413 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %196, i64 -9, i32 0
  %irc-bit-cast2414 = bitcast i8* %gep2413 to i64*
  %643 = load i64, i64* %irc-bit-cast2414, align 8
  switch i64 %643, label %header-check-br1410 [
    i64 1325, label %tag473
    i64 1341, label %tag473
  ]

normal-dest2416:                                  ; preds = %tag382
  %ptrtoint2417 = ptrtoint {}* %199 to i64
  %entry-point-addr-uint2418 = add i64 %ptrtoint2417, 7
  %entry-point-addr2419 = inttoptr i64 %entry-point-addr-uint2418 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2420 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2419, align 8
  %644 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2420({}* %199, i64 2, {}* nonnull %farg0, {}* nonnull %.in4424, {}* null, {}* null)
          to label %normal-dest2423 unwind label %cleanup-lpad.loopexit

normal-dest2423:                                  ; preds = %normal-dest2416
  %.elt4426 = extractvalue { {}*, i64 } %644, 0
  %.elt4428 = extractvalue { {}*, i64 } %644, 1
  %cond3902 = icmp eq i64 %.elt4428, 0
  %645 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160447.1 = select i1 %cond3902, {}* %645, {}* %.elt4426
  br label %tag654

header-check-br2429:                              ; preds = %tag342
  %gep2434 = getelementptr inbounds i8, i8* %340, i64 -9
  %irc-bit-cast2435 = bitcast i8* %gep2434 to i64*
  %646 = load i64, i64* %irc-bit-cast2435, align 8
  %647 = icmp ne i64 %646, 1325
  %test3018.not = xor i1 %test3018, true
  %brmerge = or i1 %647, %test3018.not
  br i1 %brmerge, label %tag761, label %header-check-br

normal-dest2454:                                  ; preds = %tag390
  %648 = invoke float @from_object_float({}* %403)
          to label %normal-dest2455 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2455:                                  ; preds = %normal-dest2454
  %649 = fdiv float %201, %648
  %650 = invoke {}* @to_object_float(float %649)
          to label %tag345 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2468:                                  ; preds = %tag396
  %651 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %652 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %653 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %654 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 216), align 16
  %ptrtoint2469 = ptrtoint {}* %203 to i64
  %entry-point-addr-uint2470 = add i64 %ptrtoint2469, 7
  %entry-point-addr2471 = inttoptr i64 %entry-point-addr-uint2470 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2472 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2471, align 8
  %655 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2472({}* %203, i64 5, {}* %651, {}* %652, {}* %"closure->LAMBDA", {}* %653, {}* %654)
          to label %normal-dest2475 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2475:                                  ; preds = %normal-dest2468
  %.elt3909 = extractvalue { {}*, i64 } %655, 0
  %.elt3911 = extractvalue { {}*, i64 } %655, 1
  %cond = icmp eq i64 %.elt3911, 0
  %656 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159945.1 = select i1 %cond, {}* %656, {}* %.elt3909
  br label %tag766

normal-dest2541:                                  ; preds = %tag411
  br i1 %consp-test1750, label %tag406, label %tag217

normal-dest2585:                                  ; preds = %tag419
  %657 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %658 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %659 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %660 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2586 = ptrtoint {}* %221 to i64
  %entry-point-addr-uint2587 = add i64 %ptrtoint2586, 7
  %entry-point-addr2588 = inttoptr i64 %entry-point-addr-uint2587 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2589 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2588, align 8
  %661 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2589({}* %221, i64 5, {}* %657, {}* %658, {}* %x2059.0, {}* %659, {}* %660)
          to label %normal-dest2592 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2592:                                  ; preds = %normal-dest2585
  %.elt4250 = extractvalue { {}*, i64 } %661, 0
  %.elt4252 = extractvalue { {}*, i64 } %661, 1
  %cond3873 = icmp eq i64 %.elt4252, 0
  %662 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2374.1 = select i1 %cond3873, {}* %662, {}* %.elt4250
  br label %tag726

normal-dest2601:                                  ; preds = %normal-dest2263
  %.elt3929 = extractvalue { {}*, i64 } %174, 1
  %cond3820 = icmp eq i64 %.elt3929, 0
  %.elt3927 = extractvalue { {}*, i64 } %174, 0
  %x2264.0 = select i1 %cond3820, {}* %611, {}* %.elt3927
  %ptrtoint2602 = ptrtoint {}* %613 to i64
  %entry-point-addr-uint2603 = add i64 %ptrtoint2602, 7
  %entry-point-addr2604 = inttoptr i64 %entry-point-addr-uint2603 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2605 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2604, align 8
  %663 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2605({}* %613, i64 2, {}* %x2264.0, {}* inttoptr (i64 400 to {}*), {}* null, {}* null)
          to label %normal-dest2608 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2608:                                  ; preds = %normal-dest2601
  %.elt3932 = extractvalue { {}*, i64 } %663, 0
  %.elt3934 = extractvalue { {}*, i64 } %663, 1
  %cond3821 = icmp eq i64 %.elt3934, 0
  %664 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159949.1 = select i1 %cond3821, {}* %664, {}* %.elt3932
  %665 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %666 = invoke {}* @cc_safe_fdefinition({}* %665)
          to label %normal-dest3051 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2622:                                  ; preds = %tag427
  %667 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %668 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %669 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %670 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2623 = ptrtoint {}* %231 to i64
  %entry-point-addr-uint2624 = add i64 %ptrtoint2623, 7
  %entry-point-addr2625 = inttoptr i64 %entry-point-addr-uint2624 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2626 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2625, align 8
  %671 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2626({}* %231, i64 5, {}* %667, {}* %668, {}* %farg1, {}* %669, {}* %670)
          to label %normal-dest2629 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2629:                                  ; preds = %normal-dest2622
  %.elt4281 = extractvalue { {}*, i64 } %671, 0
  %.elt4283 = extractvalue { {}*, i64 } %671, 1
  %cond3878 = icmp eq i64 %.elt4283, 0
  %672 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1247.1 = select i1 %cond3878, {}* %672, {}* %.elt4281
  br label %tag99

normal-dest2664:                                  ; preds = %tag432
  %.elt4214 = extractvalue { {}*, i64 } %235, 0
  %.elt4216 = extractvalue { {}*, i64 } %235, 1
  %cond3867 = icmp eq i64 %.elt4216, 0
  %673 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159302.0 = select i1 %cond3867, {}* %673, {}* %.elt4214
  %674 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %675 = invoke {}* @cc_safe_fdefinition({}* %674)
          to label %normal-dest2671 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2671:                                  ; preds = %normal-dest2664
  br i1 %consp-test2096, label %tag561, label %tag310

normal-dest2698:                                  ; preds = %tag442
  %676 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %677 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %678 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %679 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint2772 = ptrtoint {}* %238 to i64
  %entry-point-addr-uint2773 = add i64 %ptrtoint2772, 7
  %entry-point-addr2774 = inttoptr i64 %entry-point-addr-uint2773 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2775 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2774, align 8
  %680 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2775({}* %238, i64 5, {}* %676, {}* %677, {}* %y1167.1, {}* %678, {}* %679)
          to label %normal-dest2778 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2702:                                  ; preds = %tag448
  %681 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %682 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %683 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %684 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2703 = ptrtoint {}* %243 to i64
  %entry-point-addr-uint2704 = add i64 %ptrtoint2703, 7
  %entry-point-addr2705 = inttoptr i64 %entry-point-addr-uint2704 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2706 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2705, align 8
  %685 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2706({}* %243, i64 5, {}* %681, {}* %682, {}* %farg1, {}* %683, {}* %684)
          to label %normal-dest2709 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2709:                                  ; preds = %normal-dest2702
  %.elt3994 = extractvalue { {}*, i64 } %685, 0
  %.elt3996 = extractvalue { {}*, i64 } %685, 1
  %cond3831 = icmp eq i64 %.elt3996, 0
  %686 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2710.1 = select i1 %cond3831, {}* %686, {}* %.elt3994
  br label %tag518

normal-dest2717:                                  ; preds = %tag449
  %687 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %688 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %689 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %690 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2718 = ptrtoint {}* %245 to i64
  %entry-point-addr-uint2719 = add i64 %ptrtoint2718, 7
  %entry-point-addr2720 = inttoptr i64 %entry-point-addr-uint2719 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2721 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2720, align 8
  %691 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2721({}* %245, i64 5, {}* %687, {}* %688, {}* %x969.0, {}* %689, {}* %690)
          to label %normal-dest2724 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2724:                                  ; preds = %normal-dest2717
  %.elt4372 = extractvalue { {}*, i64 } %691, 0
  %.elt4374 = extractvalue { {}*, i64 } %691, 1
  %cond3893 = icmp eq i64 %.elt4374, 0
  %692 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4369 = select i1 %cond3893, {}* %692, {}* %.elt4372
  br label %tag51

header-check-br2731:                              ; preds = %normal-dest1225
  %irc-bit-cast2735 = bitcast {}* %y1167.1 to i8*
  %gep2736 = getelementptr inbounds i8, i8* %irc-bit-cast2735, i64 -9
  %irc-bit-cast2737 = bitcast i8* %gep2736 to i64*
  %693 = load i64, i64* %irc-bit-cast2737, align 8
  switch i64 %693, label %header-check-br1925 [
    i64 1325, label %tag296
    i64 1341, label %tag296
  ]

header-check-br2745:                              ; preds = %header-check-br2781
  %.off4697 = add i64 %697, -1001
  %694 = icmp ult i64 %.off4697, 5
  br i1 %694, label %maybe-more-tests2753, label %tag58

maybe-more-tests2753:                             ; preds = %header-check-br2745
  %695 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %696 = invoke {}* @cc_safe_fdefinition({}* %695)
          to label %normal-dest3023 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2778:                                  ; preds = %normal-dest2698
  call void @unreachableError()
  unreachable

header-check-br2781:                              ; preds = %tag475
  %irc-bit-cast2785 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep2786 = getelementptr inbounds i8, i8* %irc-bit-cast2785, i64 -9
  %irc-bit-cast2787 = bitcast i8* %gep2786 to i64*
  %697 = load i64, i64* %irc-bit-cast2787, align 8
  %.off4696 = add i64 %697, -913
  %698 = icmp ult i64 %.off4696, 85
  br i1 %698, label %tag225, label %header-check-br2745

normal-dest2806:                                  ; preds = %tag483
  %699 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %700 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %701 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %702 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2807 = ptrtoint {}* %258 to i64
  %entry-point-addr-uint2808 = add i64 %ptrtoint2807, 7
  %entry-point-addr2809 = inttoptr i64 %entry-point-addr-uint2808 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2810 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2809, align 8
  %703 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2810({}* %258, i64 5, {}* %699, {}* %700, {}* %x1146.0, {}* %701, {}* %702)
          to label %normal-dest2813 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2813:                                  ; preds = %normal-dest2806
  %.elt4358 = extractvalue { {}*, i64 } %703, 0
  %.elt4360 = extractvalue { {}*, i64 } %703, 1
  %cond3890 = icmp eq i64 %.elt4360, 0
  %704 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158989.1 = select i1 %cond3890, {}* %704, {}* %.elt4358
  br label %tag699

header-check-br2844:                              ; preds = %header-check-br1160
  %gep2849 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %402, i64 -9, i32 0
  %irc-bit-cast2850 = bitcast i8* %gep2849 to i64*
  %705 = load i64, i64* %irc-bit-cast2850, align 8
  %706 = icmp eq i64 %705, 1325
  br i1 %706, label %tag351, label %tag289

normal-dest2852:                                  ; preds = %tag503
  %ptrtoint2853 = ptrtoint {}* %264 to i64
  %entry-point-addr-uint2854 = add i64 %ptrtoint2853, 7
  %entry-point-addr2855 = inttoptr i64 %entry-point-addr-uint2854 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2856 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2855, align 8
  %707 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2856({}* %264, i64 2, {}* %.in4380, {}* %y1120.1, {}* null, {}* null)
          to label %normal-dest2859 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2859:                                  ; preds = %normal-dest2852
  %.elt4332 = extractvalue { {}*, i64 } %707, 0
  %.elt4334 = extractvalue { {}*, i64 } %707, 1
  %cond3886 = icmp eq i64 %.elt4334, 0
  %708 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159103.1 = select i1 %cond3886, {}* %708, {}* %.elt4332
  br label %tag52

header-check-br2869:                              ; preds = %tag478
  %gep2874 = getelementptr inbounds i8, i8* %254, i64 -9
  %irc-bit-cast2875 = bitcast i8* %gep2874 to i64*
  %709 = load i64, i64* %irc-bit-cast2875, align 8
  %710 = icmp ne i64 %709, 1325
  %test2977.not = xor i1 %test2977, true
  %brmerge4592 = or i1 %710, %test2977.not
  br i1 %brmerge4592, label %tag503, label %header-check-br3750

normal-dest2891:                                  ; preds = %tag522
  %ptrtoint2892 = ptrtoint {}* %273 to i64
  %entry-point-addr-uint2893 = add i64 %ptrtoint2892, 7
  %entry-point-addr2894 = inttoptr i64 %entry-point-addr-uint2893 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2895 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2894, align 8
  %711 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2895({}* %273, i64 1, {}* %780, {}* null, {}* null, {}* null)
          to label %normal-dest2898 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2898:                                  ; preds = %normal-dest2891
  %.elt4163 = extractvalue { {}*, i64 } %711, 0
  %.elt4165 = extractvalue { {}*, i64 } %711, 1
  %cond3859 = icmp eq i64 %.elt4165, 0
  %712 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159614.0 = select i1 %cond3859, {}* %712, {}* %.elt4163
  %713 = icmp eq {}* %G159614.0, %712
  br i1 %713, label %tag475, label %tag687

normal-dest2905:                                  ; preds = %tag523
  %714 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %715 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %716 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %717 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint3250 = ptrtoint {}* %275 to i64
  %entry-point-addr-uint3251 = add i64 %ptrtoint3250, 7
  %entry-point-addr3252 = inttoptr i64 %entry-point-addr-uint3251 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3253 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3252, align 8
  %718 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3253({}* %275, i64 5, {}* %714, {}* %715, {}* %y978.1, {}* %716, {}* %717)
          to label %normal-dest3256 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2920:                                  ; preds = %tag531
  %719 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %720 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %721 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %722 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2921 = ptrtoint {}* %277 to i64
  %entry-point-addr-uint2922 = add i64 %ptrtoint2921, 7
  %entry-point-addr2923 = inttoptr i64 %entry-point-addr-uint2922 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2924 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2923, align 8
  %723 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2924({}* %277, i64 5, {}* %719, {}* %720, {}* %farg1, {}* %721, {}* %722)
          to label %normal-dest2927 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2927:                                  ; preds = %normal-dest2920
  %.elt4005 = extractvalue { {}*, i64 } %723, 0
  %.elt4007 = extractvalue { {}*, i64 } %723, 1
  %cond3833 = icmp eq i64 %.elt4007, 0
  %724 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1417.1 = select i1 %cond3833, {}* %724, {}* %.elt4005
  br label %tag136

normal-dest2952:                                  ; preds = %normal-dest1195
  %.elt4313 = extractvalue { {}*, i64 } %66, 1
  %cond3883 = icmp eq i64 %.elt4313, 0
  %.elt4311 = extractvalue { {}*, i64 } %66, 0
  %.in4390 = select i1 %cond3883, {}* %481, {}* %.elt4311
  %ptrtoint2953 = ptrtoint {}* %483 to i64
  %entry-point-addr-uint2954 = add i64 %ptrtoint2953, 7
  %entry-point-addr2955 = inttoptr i64 %entry-point-addr-uint2954 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2956 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2955, align 8
  %725 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2956({}* %483, i64 2, {}* %.in4390, {}* inttoptr (i64 400 to {}*), {}* null, {}* null)
          to label %normal-dest2959 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest2959:                                  ; preds = %normal-dest2952
  %.elt4316 = extractvalue { {}*, i64 } %725, 0
  %.elt4318 = extractvalue { {}*, i64 } %725, 1
  %cond3884 = icmp eq i64 %.elt4318, 0
  %726 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158986.1 = select i1 %cond3884, {}* %726, {}* %.elt4316
  %727 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %728 = invoke {}* @cc_safe_fdefinition({}* %727)
          to label %normal-dest2044 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br2974:                              ; preds = %normal-dest1780
  %irc-bit-cast2978 = bitcast {}* %y1120.1 to i8*
  %gep2979 = getelementptr inbounds i8, i8* %irc-bit-cast2978, i64 -9
  %irc-bit-cast2980 = bitcast i8* %gep2979 to i64*
  %729 = load i64, i64* %irc-bit-cast2980, align 8
  switch i64 %729, label %header-check-br1386 [
    i64 1325, label %tag418
    i64 1341, label %tag418
  ]

normal-dest2982:                                  ; preds = %tag549
  %730 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %731 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %732 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %733 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2983 = ptrtoint {}* %283 to i64
  %entry-point-addr-uint2984 = add i64 %ptrtoint2983, 7
  %entry-point-addr2985 = inttoptr i64 %entry-point-addr-uint2984 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2986 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2985, align 8
  %734 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2986({}* %283, i64 5, {}* %730, {}* %731, {}* %"%SUBLIST158881.04705", {}* %732, {}* %733)
          to label %normal-dest2989 unwind label %cleanup-lpad.loopexit

normal-dest2989:                                  ; preds = %normal-dest2982
  %.elt4430 = extractvalue { {}*, i64 } %734, 0
  %.elt4432 = extractvalue { {}*, i64 } %734, 1
  %cond3903 = icmp eq i64 %.elt4432, 0
  %735 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4423 = select i1 %cond3903, {}* %735, {}* %.elt4430
  %.val4596.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  br label %tag31

normal-dest3012:                                  ; preds = %tag560
  %736 = invoke float @from_object_float({}* %y1120.1)
          to label %normal-dest3013 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3013:                                  ; preds = %normal-dest3012
  %737 = fdiv float %291, %736
  %738 = invoke {}* @to_object_float(float %737)
          to label %tag52 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br3015:                              ; preds = %normal-dest2307
  %irc-bit-cast3019 = bitcast {}* %y978.1 to i8*
  %gep3020 = getelementptr inbounds i8, i8* %irc-bit-cast3019, i64 -9
  %irc-bit-cast3021 = bitcast i8* %gep3020 to i64*
  %739 = load i64, i64* %irc-bit-cast3021, align 8
  switch i64 %739, label %header-check-br1558 [
    i64 1325, label %tag96
    i64 1341, label %tag96
  ]

normal-dest3023:                                  ; preds = %maybe-more-tests2753
  %ptrtoint3024 = ptrtoint {}* %696 to i64
  %entry-point-addr-uint3025 = add i64 %ptrtoint3024, 7
  %entry-point-addr3026 = inttoptr i64 %entry-point-addr-uint3025 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3027 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3026, align 8
  %740 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3027({}* %696, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest3030 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3030:                                  ; preds = %normal-dest3023
  %.elt4411 = extractvalue { {}*, i64 } %740, 0
  %.elt4413 = extractvalue { {}*, i64 } %740, 1
  %cond3900 = icmp eq i64 %.elt4413, 0
  %741 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158982.2 = select i1 %cond3900, {}* %741, {}* %.elt4411
  br label %tag225

normal-dest3051:                                  ; preds = %normal-dest2608
  br i1 %consp-test3691, label %tag286, label %tag169

header-check-br3061:                              ; preds = %header-check-br3176
  %.off4629 = add i64 %767, -1001
  %742 = icmp ult i64 %.off4629, 5
  br i1 %742, label %maybe-more-tests3069, label %tag396

maybe-more-tests3069:                             ; preds = %header-check-br3061
  %743 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %744 = invoke {}* @cc_safe_fdefinition({}* %743)
          to label %normal-dest3708 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3082:                                  ; preds = %tag51
  %ptrtoint3083 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint3084 = add i64 %ptrtoint3083, 7
  %entry-point-addr3085 = inttoptr i64 %entry-point-addr-uint3084 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3086 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3085, align 8
  %745 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3086({}* %48, i64 2, {}* %x2482.0, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest3089 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3089:                                  ; preds = %normal-dest3082
  %.elt4343 = extractvalue { {}*, i64 } %745, 0
  %.elt4345 = extractvalue { {}*, i64 } %745, 1
  %cond3888 = icmp eq i64 %.elt4345, 0
  %746 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159043.1 = select i1 %cond3888, {}* %746, {}* %.elt4343
  %ptrtoint1464 = ptrtoint {}* %466 to i64
  %entry-point-addr-uint1465 = add i64 %ptrtoint1464, 7
  %entry-point-addr1466 = inttoptr i64 %entry-point-addr-uint1465 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1467 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1466, align 8
  %747 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1467({}* %466, i64 1, {}* %G159043.1, {}* null, {}* null, {}* null)
          to label %normal-dest1470 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br3095:                              ; preds = %tag416
  %748 = load i64, i64* %irc-bit-cast3101, align 8
  %749 = add i64 %748, -1309
  %750 = lshr i64 %749, 3
  %751 = shl i64 %749, 61
  %752 = or i64 %750, %751
  switch i64 %752, label %tag555 [
    i64 2, label %tag785
    i64 4, label %tag785
    i64 5, label %tag785
    i64 0, label %tag785
  ]

normal-dest3102:                                  ; preds = %tag589
  %753 = invoke float @from_object_float({}* %197)
          to label %normal-dest3103 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3103:                                  ; preds = %normal-dest3102
  %754 = fdiv float %300, %753
  %755 = invoke {}* @to_object_float(float %754)
          to label %tag705 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3138:                                  ; preds = %tag603
  %756 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %757 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %758 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %759 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %ptrtoint3460 = ptrtoint {}* %303 to i64
  %entry-point-addr-uint3461 = add i64 %ptrtoint3460, 7
  %entry-point-addr3462 = inttoptr i64 %entry-point-addr-uint3461 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3463 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3462, align 8
  %760 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3463({}* %303, i64 5, {}* %756, {}* %757, {}* %"%SUBLIST158881.04705", {}* %758, {}* %759)
          to label %normal-dest3466 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3147:                                  ; preds = %normal-dest1403
  br i1 %consp-test2096, label %tag55, label %tag775

normal-dest3156:                                  ; preds = %tag624
  %761 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %762 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %763 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %764 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3157 = ptrtoint {}* %314 to i64
  %entry-point-addr-uint3158 = add i64 %ptrtoint3157, 7
  %entry-point-addr3159 = inttoptr i64 %entry-point-addr-uint3158 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3160 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3159, align 8
  %765 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3160({}* %314, i64 5, {}* %761, {}* %762, {}* %x2387.0, {}* %763, {}* %764)
          to label %normal-dest3163 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3163:                                  ; preds = %normal-dest3156
  %.elt4362 = extractvalue { {}*, i64 } %765, 0
  %.elt4364 = extractvalue { {}*, i64 } %765, 1
  %cond3891 = icmp eq i64 %.elt4364, 0
  %766 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1146.1 = select i1 %cond3891, {}* %766, {}* %.elt4362
  br label %tag424

header-check-br3176:                              ; preds = %tag627
  %irc-bit-cast3180 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep3181 = getelementptr inbounds i8, i8* %irc-bit-cast3180, i64 -9
  %irc-bit-cast3182 = bitcast i8* %gep3181 to i64*
  %767 = load i64, i64* %irc-bit-cast3182, align 8
  %.off = add i64 %767, -913
  %768 = icmp ult i64 %.off, 85
  br i1 %768, label %tag766, label %header-check-br3061

normal-dest3186:                                  ; preds = %tag629
  %ptrtoint3187 = ptrtoint {}* %318 to i64
  %entry-point-addr-uint3188 = add i64 %ptrtoint3187, 7
  %entry-point-addr3189 = inttoptr i64 %entry-point-addr-uint3188 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3190 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3189, align 8
  %769 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3190({}* %318, i64 2, {}* %.in4392, {}* %371, {}* null, {}* null)
          to label %normal-dest3193 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3193:                                  ; preds = %normal-dest3186
  %.elt4307 = extractvalue { {}*, i64 } %769, 0
  %.elt4309 = extractvalue { {}*, i64 } %769, 1
  %cond3882 = icmp eq i64 %.elt4309, 0
  %770 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159205.1 = select i1 %cond3882, {}* %770, {}* %.elt4307
  br label %tag85

header-check-br3201:                              ; preds = %header-check-br3567
  %.old = and i64 %ptrtoint3568, 3
  %fixnump-test838.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test838.old, label %tag592, label %switch.early.test4757

switch.early.test4757:                            ; preds = %header-check-br3201
  switch i64 %799, label %tag115 [
    i64 1349, label %tag592
    i64 1309, label %tag592
  ]

normal-dest3215:                                  ; preds = %tag637
  %771 = invoke double @from_object_double({}* nonnull %371)
          to label %normal-dest3216 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3216:                                  ; preds = %normal-dest3215
  %772 = fdiv double %320, %771
  %773 = invoke {}* @to_object_double(double %772)
          to label %tag85 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3219:                                  ; preds = %tag646
  %774 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %775 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %776 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %777 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3220 = ptrtoint {}* %325 to i64
  %entry-point-addr-uint3221 = add i64 %ptrtoint3220, 7
  %entry-point-addr3222 = inttoptr i64 %entry-point-addr-uint3221 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3223 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3222, align 8
  %778 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3223({}* %325, i64 5, {}* %774, {}* %775, {}* %farg1, {}* %776, {}* %777)
          to label %normal-dest3226 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3226:                                  ; preds = %normal-dest3219
  %.elt3985 = extractvalue { {}*, i64 } %778, 0
  %.elt3987 = extractvalue { {}*, i64 } %778, 1
  %cond3829 = icmp eq i64 %.elt3987, 0
  %779 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x825.1 = select i1 %cond3829, {}* %779, {}* %.elt3985
  br label %tag8

normal-dest3238:                                  ; preds = %normal-dest1499
  call void @unreachableError()
  unreachable

normal-dest3256:                                  ; preds = %normal-dest2905
  call void @unreachableError()
  unreachable

normal-dest3271:                                  ; preds = %tag657
  %780 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %781 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %782 = icmp eq {}* %780, %781
  br i1 %782, label %tag522, label %tag627

header-check-br3368:                              ; preds = %header-check-br1682
  %irc-bit-cast3372 = bitcast {}* %y1167.1 to i8*
  %gep3373 = getelementptr inbounds i8, i8* %irc-bit-cast3372, i64 -9
  %irc-bit-cast3374 = bitcast i8* %gep3373 to i64*
  %783 = load i64, i64* %irc-bit-cast3374, align 8
  %784 = icmp eq i64 %783, 1325
  br i1 %784, label %tag747, label %tag48

normal-dest3381:                                  ; preds = %normal-dest1331
  %.elt3963 = extractvalue { {}*, i64 } %498, 0
  %.elt3965 = extractvalue { {}*, i64 } %498, 1
  %cond3826 = icmp eq i64 %.elt3965, 0
  %785 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159951.0 = select i1 %cond3826, {}* %785, {}* %.elt3963
  br i1 %consp-test3691, label %tag306, label %tag722

normal-dest3393:                                  ; preds = %tag687
  %ptrtoint3394 = ptrtoint {}* %337 to i64
  %entry-point-addr-uint3395 = add i64 %ptrtoint3394, 7
  %entry-point-addr3396 = inttoptr i64 %entry-point-addr-uint3395 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3397 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3396, align 8
  %786 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3397({}* %337, i64 1, {}* %780, {}* null, {}* null, {}* null)
          to label %normal-dest3400 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3400:                                  ; preds = %normal-dest3393
  %.elt4167 = extractvalue { {}*, i64 } %786, 0
  %.elt4169 = extractvalue { {}*, i64 } %786, 1
  %cond3860 = icmp eq i64 %.elt4169, 0
  %787 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %OUT1588882089.0 = select i1 %cond3860, {}* %787, {}* %.elt4167
  %ptrtoint3407 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only3408 = and i64 %ptrtoint3407, 7
  %test3409 = icmp eq i64 %tag-only3408, 1
  br i1 %test3409, label %header-check-br3406, label %tag753

header-check-br3406:                              ; preds = %normal-dest3400
  %irc-bit-cast3410 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep3411 = getelementptr inbounds i8, i8* %irc-bit-cast3410, i64 -9
  %irc-bit-cast3412 = bitcast i8* %gep3411 to i64*
  %788 = load i64, i64* %irc-bit-cast3412, align 8
  %.off4662 = add i64 %788, -913
  %789 = icmp ult i64 %.off4662, 85
  br i1 %789, label %tag305, label %header-check-br3545

normal-dest3449:                                  ; preds = %tag705
  %790 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %791 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %792 = invoke {}* @cc_safe_fdefinition({}* %791)
          to label %normal-dest1395 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3466:                                  ; preds = %normal-dest3138
  call void @unreachableError()
  unreachable

normal-dest3524:                                  ; preds = %tag726
  %ptrtoint3525 = ptrtoint {}* %359 to i64
  %entry-point-addr-uint3526 = add i64 %ptrtoint3525, 7
  %entry-point-addr3527 = inttoptr i64 %entry-point-addr-uint3526 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3528 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3527, align 8
  %793 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3528({}* %359, i64 2, {}* %x2374.0, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest3531 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3531:                                  ; preds = %normal-dest3524
  %.elt4221 = extractvalue { {}*, i64 } %793, 0
  %.elt4223 = extractvalue { {}*, i64 } %793, 1
  %cond3868 = icmp eq i64 %.elt4223, 0
  %794 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159358.1 = select i1 %cond3868, {}* %794, {}* %.elt4221
  %ptrtoint3601 = ptrtoint {}* %675 to i64
  %entry-point-addr-uint3602 = add i64 %ptrtoint3601, 7
  %entry-point-addr3603 = inttoptr i64 %entry-point-addr-uint3602 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3604 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3603, align 8
  %795 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3604({}* %675, i64 1, {}* %G159358.1, {}* null, {}* null, {}* null)
          to label %normal-dest3607 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br3545:                              ; preds = %header-check-br3406
  %.off4663 = add i64 %788, -1001
  %796 = icmp ult i64 %.off4663, 5
  br i1 %796, label %maybe-more-tests3553, label %tag753

maybe-more-tests3553:                             ; preds = %header-check-br3545
  %797 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %798 = invoke {}* @cc_safe_fdefinition({}* %797)
          to label %normal-dest1976 unwind label %cleanup-lpad.loopexit.split-lp

header-check-br3567:                              ; preds = %tag738
  %gep3572 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %370, i64 -9, i32 0
  %irc-bit-cast3573 = bitcast i8* %gep3572 to i64*
  %799 = load i64, i64* %irc-bit-cast3573, align 8
  switch i64 %799, label %header-check-br3201 [
    i64 1325, label %tag592
    i64 1341, label %tag592
  ]

normal-dest3582:                                  ; preds = %tag740
  %ptrtoint3583 = ptrtoint {}* %373 to i64
  %entry-point-addr-uint3584 = add i64 %ptrtoint3583, 7
  %entry-point-addr3585 = inttoptr i64 %entry-point-addr-uint3584 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3586 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3585, align 8
  %800 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3586({}* %373, i64 2, {}* %.in4270, {}* %197, {}* null, {}* null)
          to label %normal-dest3589 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3589:                                  ; preds = %normal-dest3582
  %.elt4185 = extractvalue { {}*, i64 } %800, 0
  %.elt4187 = extractvalue { {}*, i64 } %800, 1
  %cond3862 = icmp eq i64 %.elt4187, 0
  %801 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159520.1 = select i1 %cond3862, {}* %801, {}* %.elt4185
  br label %tag705

normal-dest3607:                                  ; preds = %normal-dest3531
  %.elt4225 = extractvalue { {}*, i64 } %795, 0
  %.elt4227 = extractvalue { {}*, i64 } %795, 1
  %cond3869 = icmp eq i64 %.elt4227, 0
  %802 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159303.0 = select i1 %cond3869, {}* %802, {}* %.elt4225
  br i1 %consp-test2096, label %tag425, label %tag463

normal-dest3621:                                  ; preds = %tag747
  %803 = invoke double @from_object_double({}* nonnull %y1167.1)
          to label %normal-dest3622 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3622:                                  ; preds = %normal-dest3621
  %804 = fdiv double %376, %803
  %805 = invoke {}* @to_object_double(double %804)
          to label %tag432 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3625:                                  ; preds = %tag748
  %806 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %807 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %808 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %809 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3626 = ptrtoint {}* %378 to i64
  %entry-point-addr-uint3627 = add i64 %ptrtoint3626, 7
  %entry-point-addr3628 = inttoptr i64 %entry-point-addr-uint3627 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3629 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3628, align 8
  %810 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3629({}* %378, i64 5, {}* %806, {}* %807, {}* %x1019.0, {}* %808, {}* %809)
          to label %normal-dest3632 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3632:                                  ; preds = %normal-dest3625
  %.elt4017 = extractvalue { {}*, i64 } %810, 0
  %.elt4019 = extractvalue { {}*, i64 } %810, 1
  %cond3834 = icmp eq i64 %.elt4019, 0
  %811 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4009 = select i1 %cond3834, {}* %811, {}* %.elt4017
  br label %tag780

normal-dest3638:                                  ; preds = %tag750
  %812 = invoke float @from_object_float({}* %y1167.1)
          to label %normal-dest3639 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3639:                                  ; preds = %normal-dest3638
  %813 = fdiv float %379, %812
  %814 = invoke {}* @to_object_float(float %813)
          to label %tag432 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3642:                                  ; preds = %tag753
  %815 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %816 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %817 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %818 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 214), align 16
  %ptrtoint3643 = ptrtoint {}* %381 to i64
  %entry-point-addr-uint3644 = add i64 %ptrtoint3643, 7
  %entry-point-addr3645 = inttoptr i64 %entry-point-addr-uint3644 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3646 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3645, align 8
  %819 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3646({}* %381, i64 5, {}* %815, {}* %816, {}* %"closure->LAMBDA", {}* %817, {}* %818)
          to label %normal-dest3649 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3649:                                  ; preds = %normal-dest3642
  %.elt4171 = extractvalue { {}*, i64 } %819, 0
  %.elt4173 = extractvalue { {}*, i64 } %819, 1
  %cond3861 = icmp eq i64 %.elt4173, 0
  %820 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159297.2 = select i1 %cond3861, {}* %820, {}* %.elt4171
  br label %tag305

normal-dest3670:                                  ; preds = %tag761
  %ptrtoint3671 = ptrtoint {}* %383 to i64
  %entry-point-addr-uint3672 = add i64 %ptrtoint3671, 7
  %entry-point-addr3673 = inttoptr i64 %entry-point-addr-uint3672 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3674 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3673, align 8
  %821 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3674({}* %383, i64 2, {}* %.in3998, {}* %y978.1, {}* null, {}* null)
          to label %normal-dest3677 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3677:                                  ; preds = %normal-dest3670
  %.elt3948 = extractvalue { {}*, i64 } %821, 0
  %.elt3950 = extractvalue { {}*, i64 } %821, 1
  %cond3823 = icmp eq i64 %.elt3950, 0
  %822 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160066.1 = select i1 %cond3823, {}* %822, {}* %.elt3948
  br label %tag107

normal-dest3684:                                  ; preds = %tag766
  %823 = ptrtoint {}* %farg1 to i64
  %tag-only36903912 = and i64 %823, 7
  %consp-test3691 = icmp eq i64 %tag-only36903912, 3
  %.val4598 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %.val4599 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G160243.0 = select i1 %consp-test3691, {}* %.val4598, {}* %.val4599
  %824 = icmp eq {}* %G160243.0, %.val4599
  br i1 %824, label %tag734, label %tag128

normal-dest3708:                                  ; preds = %maybe-more-tests3069
  %ptrtoint3709 = ptrtoint {}* %744 to i64
  %entry-point-addr-uint3710 = add i64 %ptrtoint3709, 7
  %entry-point-addr3711 = inttoptr i64 %entry-point-addr-uint3710 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3712 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3711, align 8
  %825 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3712({}* %744, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest3715 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3715:                                  ; preds = %normal-dest3708
  %.elt4029 = extractvalue { {}*, i64 } %825, 0
  %.elt4031 = extractvalue { {}*, i64 } %825, 1
  %cond3837 = icmp eq i64 %.elt4031, 0
  %826 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G159945.2 = select i1 %cond3837, {}* %826, {}* %.elt4029
  br label %tag766

header-check-br3743:                              ; preds = %tag780
  %gep3748 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %402, i64 -9, i32 0
  %irc-bit-cast3749 = bitcast i8* %gep3748 to i64*
  %827 = load i64, i64* %irc-bit-cast3749, align 8
  switch i64 %827, label %header-check-br891 [
    i64 1325, label %tag632
    i64 1341, label %tag632
  ]

header-check-br3750:                              ; preds = %header-check-br2869
  %irc-bit-cast3754 = bitcast {}* %y1120.1 to i8*
  %gep3755 = getelementptr inbounds i8, i8* %irc-bit-cast3754, i64 -9
  %irc-bit-cast3756 = bitcast i8* %gep3755 to i64*
  %828 = load i64, i64* %irc-bit-cast3756, align 8
  %829 = icmp eq i64 %828, 1325
  br i1 %829, label %tag200, label %tag503

normal-dest3789:                                  ; preds = %tag796
  %830 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %831 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %832 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %833 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3790 = ptrtoint {}* %409 to i64
  %entry-point-addr-uint3791 = add i64 %ptrtoint3790, 7
  %entry-point-addr3792 = inttoptr i64 %entry-point-addr-uint3791 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3793 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3792, align 8
  %834 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3793({}* %409, i64 5, {}* %830, {}* %831, {}* %farg1, {}* %832, {}* %833)
          to label %normal-dest3796 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest3796:                                  ; preds = %normal-dest3789
  %.elt4407 = extractvalue { {}*, i64 } %834, 0
  %.elt4409 = extractvalue { {}*, i64 } %834, 1
  %cond3899 = icmp eq i64 %.elt4409, 0
  %835 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G158985.1 = select i1 %cond3899, {}* %835, {}* %.elt4407
  br label %tag411
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.3"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !38 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest80, %tag11
  %9 = phi {}* [ %31, %tag11 ], [ %54, %normal-dest80 ]
  %format-arg-158891.0 = phi {}* [ %format-arg-158891.1409412435446, %tag11 ], [ %format-arg-158891.2, %normal-dest80 ]
  %10 = icmp eq {}* %G158928.0420427454, %9
  br i1 %10, label %tag9, label %tag1

tag1:                                             ; preds = %normal-dest294, %tag
  %11 = phi {}* [ %9, %tag ], [ %128, %normal-dest294 ]
  %format-arg-158892.0 = phi {}* [ %format-arg-158892.1422425456, %tag ], [ %format-arg-158892.2, %normal-dest294 ]
  %12 = icmp eq {}* %G158927.0437444, %11
  br i1 %12, label %tag10, label %tag2

tag2:                                             ; preds = %normal-dest308, %tag1
  %13 = phi {}* [ %11, %tag1 ], [ %136, %normal-dest308 ]
  %format-arg-158893.0 = phi {}* [ %format-arg-158893.1439442, %tag1 ], [ %format-arg-158893.2, %normal-dest308 ]
  %14 = icmp eq {}* %G158926.0458, %13
  br i1 %14, label %tag8, label %tag3

tag3:                                             ; preds = %normal-dest280, %tag2
  %15 = phi {}* [ %13, %tag2 ], [ %120, %normal-dest280 ]
  %format-arg-158894.0 = phi {}* [ %format-arg-158894.1460, %tag2 ], [ %format-arg-158894.2, %normal-dest280 ]
  %16 = icmp eq {}* %G158925.0, %15
  br i1 %16, label %tag4, label %tag7

tag4:                                             ; preds = %tag3
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest66 unwind label %cleanup-lpad

tag5:                                             ; preds = %tag11
  %19 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest73 unwind label %cleanup-lpad

tag6:                                             ; preds = %process-rest-argument
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest87 unwind label %cleanup-lpad

tag7:                                             ; preds = %normal-dest69, %tag3
  %format-arg-158895.0 = phi {}* [ %format-arg-158895.1, %tag3 ], [ %format-arg-158895.2, %normal-dest69 ]
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest101 unwind label %cleanup-lpad

tag8:                                             ; preds = %tag2
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest273 unwind label %cleanup-lpad

tag9:                                             ; preds = %tag
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest287 unwind label %cleanup-lpad

tag10:                                            ; preds = %tag1
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest301 unwind label %cleanup-lpad

tag11:                                            ; preds = %normal-dest94, %process-rest-argument
  %31 = phi {}* [ %37, %process-rest-argument ], [ %62, %normal-dest94 ]
  %format-arg-158890.0 = phi {}* [ %format-arg-158890.1400403418429452, %process-rest-argument ], [ %format-arg-158890.2, %normal-dest94 ]
  %32 = icmp eq {}* %G158929.0407414433448, %31
  br i1 %32, label %tag5, label %tag

cleanup-lpad:                                     ; preds = %normal-dest301, %tag10, %normal-dest287, %tag9, %normal-dest273, %tag8, %normal-dest258, %normal-dest252, %normal-dest245, %normal-dest235, %normal-dest228, %normal-dest222, %normal-dest215, %normal-dest204, %normal-dest197, %normal-dest191, %normal-dest184, %normal-dest173, %normal-dest166, %normal-dest160, %normal-dest153, %normal-dest147, %normal-dest140, %normal-dest134, %normal-dest127, %normal-dest121, %normal-dest114, %normal-dest108, %normal-dest101, %tag7, %normal-dest87, %tag6, %normal-dest73, %tag5, %normal-dest66, %tag4, %error
  %33 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %33

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs16 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-117 = add i64 %rem-nargs16, -1
  store i64 %rem-nargs-117, i64* %"remaining-nargs*", align 8
  %vaarg18 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args23 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args23, label %opt-cont22, label %opt-cont.opt-cont22.thread_crit_edge

opt-cont.opt-cont22.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont22:                                       ; preds = %opt-cont
  %rem-nargs24 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-125 = add i64 %rem-nargs24, -1
  store i64 %rem-nargs-125, i64* %"remaining-nargs*", align 8
  %vaarg26 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args31 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args31, label %opt-cont22.opt-cont30.thread_crit_edge, label %opt-cont30

opt-cont22.opt-cont30.thread_crit_edge:           ; preds = %opt-cont22
  %.pre462 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont30:                                       ; preds = %opt-cont22
  %rem-nargs32 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-133 = add i64 %rem-nargs32, -1
  store i64 %rem-nargs-133, i64* %"remaining-nargs*", align 8
  %vaarg34 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args39 = icmp sgt i64 %nargs, 4
  br i1 %enough-given-args39, label %opt-cont38, label %opt-cont30.opt-cont38.thread_crit_edge

opt-cont30.opt-cont38.thread_crit_edge:           ; preds = %opt-cont30
  %.pre463 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont38:                                       ; preds = %opt-cont30
  %rem-nargs40 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-141 = add i64 %rem-nargs40, -1
  store i64 %rem-nargs-141, i64* %"remaining-nargs*", align 8
  %vaarg42 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args47 = icmp eq i64 %nargs, 5
  br i1 %enough-given-args47, label %opt-cont38.opt-cont46.thread_crit_edge, label %opt-cont46

opt-cont38.opt-cont46.thread_crit_edge:           ; preds = %opt-cont38
  %.pre464 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont46:                                       ; preds = %opt-cont38
  %rem-nargs48 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-149 = add i64 %rem-nargs48, -1
  store i64 %rem-nargs-149, i64* %"remaining-nargs*", align 8
  %vaarg50 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args55 = icmp sgt i64 %nargs, 6
  br i1 %enough-given-args55, label %opt-arg52, label %opt-cont46.opt-init53_crit_edge

opt-cont46.opt-init53_crit_edge:                  ; preds = %opt-cont46
  %.pre465 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg52:                                        ; preds = %opt-cont46
  %rem-nargs56 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-157 = add i64 %rem-nargs56, -1
  store i64 %rem-nargs-157, i64* %"remaining-nargs*", align 8
  %vaarg58 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont46.opt-init53_crit_edge, %opt-cont30.opt-cont38.thread_crit_edge, %opt-cont.thread, %opt-cont.opt-cont22.thread_crit_edge, %opt-cont22.opt-cont30.thread_crit_edge, %opt-cont38.opt-cont46.thread_crit_edge, %opt-arg52
  %format-arg-158894.1460 = phi {}* [ %vaarg50, %opt-arg52 ], [ %vaarg50, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont30.opt-cont38.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont22.thread_crit_edge ], [ undef, %opt-cont22.opt-cont30.thread_crit_edge ], [ undef, %opt-cont38.opt-cont46.thread_crit_edge ]
  %G158926.0458 = phi {}* [ %34, %opt-arg52 ], [ %34, %opt-cont46.opt-init53_crit_edge ], [ %.pre463, %opt-cont30.opt-cont38.thread_crit_edge ], [ %35, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont22.thread_crit_edge ], [ %.pre462, %opt-cont22.opt-cont30.thread_crit_edge ], [ %.pre464, %opt-cont38.opt-cont46.thread_crit_edge ]
  %format-arg-158892.1422425456 = phi {}* [ %vaarg34, %opt-arg52 ], [ %vaarg34, %opt-cont46.opt-init53_crit_edge ], [ %vaarg34, %opt-cont30.opt-cont38.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont22.thread_crit_edge ], [ undef, %opt-cont22.opt-cont30.thread_crit_edge ], [ %vaarg34, %opt-cont38.opt-cont46.thread_crit_edge ]
  %G158928.0420427454 = phi {}* [ %34, %opt-arg52 ], [ %34, %opt-cont46.opt-init53_crit_edge ], [ %34, %opt-cont30.opt-cont38.thread_crit_edge ], [ %35, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont22.thread_crit_edge ], [ %.pre462, %opt-cont22.opt-cont30.thread_crit_edge ], [ %34, %opt-cont38.opt-cont46.thread_crit_edge ]
  %format-arg-158890.1400403418429452 = phi {}* [ %vaarg18, %opt-arg52 ], [ %vaarg18, %opt-cont46.opt-init53_crit_edge ], [ %vaarg18, %opt-cont30.opt-cont38.thread_crit_edge ], [ undef, %opt-cont.thread ], [ %vaarg18, %opt-cont.opt-cont22.thread_crit_edge ], [ %vaarg18, %opt-cont22.opt-cont30.thread_crit_edge ], [ %vaarg18, %opt-cont38.opt-cont46.thread_crit_edge ]
  %G158930.0398405416431450 = phi {}* [ %34, %opt-arg52 ], [ %34, %opt-cont46.opt-init53_crit_edge ], [ %34, %opt-cont30.opt-cont38.thread_crit_edge ], [ %35, %opt-cont.thread ], [ %34, %opt-cont.opt-cont22.thread_crit_edge ], [ %34, %opt-cont22.opt-cont30.thread_crit_edge ], [ %34, %opt-cont38.opt-cont46.thread_crit_edge ]
  %G158929.0407414433448 = phi {}* [ %34, %opt-arg52 ], [ %34, %opt-cont46.opt-init53_crit_edge ], [ %34, %opt-cont30.opt-cont38.thread_crit_edge ], [ %35, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont22.thread_crit_edge ], [ %34, %opt-cont22.opt-cont30.thread_crit_edge ], [ %34, %opt-cont38.opt-cont46.thread_crit_edge ]
  %format-arg-158891.1409412435446 = phi {}* [ %vaarg26, %opt-arg52 ], [ %vaarg26, %opt-cont46.opt-init53_crit_edge ], [ %vaarg26, %opt-cont30.opt-cont38.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont22.thread_crit_edge ], [ %vaarg26, %opt-cont22.opt-cont30.thread_crit_edge ], [ %vaarg26, %opt-cont38.opt-cont46.thread_crit_edge ]
  %G158927.0437444 = phi {}* [ %34, %opt-arg52 ], [ %34, %opt-cont46.opt-init53_crit_edge ], [ %.pre463, %opt-cont30.opt-cont38.thread_crit_edge ], [ %35, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont22.thread_crit_edge ], [ %.pre462, %opt-cont22.opt-cont30.thread_crit_edge ], [ %34, %opt-cont38.opt-cont46.thread_crit_edge ]
  %format-arg-158893.1439442 = phi {}* [ %vaarg42, %opt-arg52 ], [ %vaarg42, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont30.opt-cont38.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont22.thread_crit_edge ], [ undef, %opt-cont22.opt-cont30.thread_crit_edge ], [ %vaarg42, %opt-cont38.opt-cont46.thread_crit_edge ]
  %format-arg-158895.1 = phi {}* [ %vaarg58, %opt-arg52 ], [ undef, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont30.opt-cont38.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont.opt-cont22.thread_crit_edge ], [ undef, %opt-cont22.opt-cont30.thread_crit_edge ], [ undef, %opt-cont38.opt-cont46.thread_crit_edge ]
  %G158925.0 = phi {}* [ %34, %opt-arg52 ], [ %.pre465, %opt-cont46.opt-init53_crit_edge ], [ %.pre463, %opt-cont30.opt-cont38.thread_crit_edge ], [ %35, %opt-cont.thread ], [ %.pre, %opt-cont.opt-cont22.thread_crit_edge ], [ %.pre462, %opt-cont22.opt-cont30.thread_crit_edge ], [ %.pre464, %opt-cont38.opt-cont46.thread_crit_edge ]
  %36 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %37 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %38 = icmp eq {}* %G158930.0398405416431450, %37
  br i1 %38, label %tag6, label %tag11

normal-dest66:                                    ; preds = %tag4
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %41 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %42 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %44 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint = ptrtoint {}* %18 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %18, i64 7, {}* %39, {}* %40, {}* %41, {}* %42, {}* %43, {}* %44, {}* inttoptr (i64 128 to {}*))
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %normal-dest66
  %.elt369 = extractvalue { {}*, i64 } %45, 0
  %.elt371 = extractvalue { {}*, i64 } %45, 1
  %cond = icmp eq i64 %.elt371, 0
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158895.2 = select i1 %cond, {}* %46, {}* %.elt369
  br label %tag7

normal-dest73:                                    ; preds = %tag5
  %47 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %49 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %51 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint74 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %20, i64 7, {}* %47, {}* %48, {}* %49, {}* %50, {}* %51, {}* %52, {}* inttoptr (i64 28 to {}*))
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest73
  %.elt385 = extractvalue { {}*, i64 } %53, 0
  %.elt387 = extractvalue { {}*, i64 } %53, 1
  %cond317 = icmp eq i64 %.elt387, 0
  %54 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158891.2 = select i1 %cond317, {}* %54, {}* %.elt385
  br label %tag

normal-dest87:                                    ; preds = %tag6
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %56 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %58 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %60 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint88 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint89 = add i64 %ptrtoint88, 7
  %entry-point-addr90 = inttoptr i64 %entry-point-addr-uint89 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point91 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr90, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point91({}* %22, i64 7, {}* %55, {}* %56, {}* %57, {}* %58, {}* %59, {}* %60, {}* inttoptr (i64 12 to {}*))
          to label %normal-dest94 unwind label %cleanup-lpad

normal-dest94:                                    ; preds = %normal-dest87
  %.elt389 = extractvalue { {}*, i64 } %61, 0
  %.elt391 = extractvalue { {}*, i64 } %61, 1
  %cond318 = icmp eq i64 %.elt391, 0
  %62 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158890.2 = select i1 %cond318, {}* %62, {}* %.elt389
  br label %tag11

normal-dest101:                                   ; preds = %tag7
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint102 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint103 = add i64 %ptrtoint102, 7
  %entry-point-addr104 = inttoptr i64 %entry-point-addr-uint103 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point105 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr104, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point105({}* %24, i64 8, {}* %vaarg, {}* %format-arg-158890.0, {}* %63, {}* %63, {}* inttoptr (i64 160 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest108 unwind label %cleanup-lpad

normal-dest108:                                   ; preds = %normal-dest101
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest114 unwind label %cleanup-lpad

normal-dest114:                                   ; preds = %normal-dest108
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 206), align 16
  %ptrtoint115 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint116 = add i64 %ptrtoint115, 7
  %entry-point-addr117 = inttoptr i64 %entry-point-addr-uint116 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point118 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr117, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point118({}* %66, i64 2, {}* %67, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest121 unwind label %cleanup-lpad

normal-dest121:                                   ; preds = %normal-dest114
  %69 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 207), align 8
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest127 unwind label %cleanup-lpad

normal-dest127:                                   ; preds = %normal-dest121
  %71 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint128 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint129 = add i64 %ptrtoint128, 7
  %entry-point-addr130 = inttoptr i64 %entry-point-addr-uint129 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point131 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr130, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point131({}* %70, i64 9, {}* %vaarg, {}* %format-arg-158891.0, {}* %71, {}* %71, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 24 to {}*), {}* inttoptr (i64 258 to {}*), {}* inttoptr (i64 354 to {}*), {}* inttoptr (i64 12 to {}*))
          to label %normal-dest134 unwind label %cleanup-lpad

normal-dest134:                                   ; preds = %normal-dest127
  %73 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest140 unwind label %cleanup-lpad

normal-dest140:                                   ; preds = %normal-dest134
  %75 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 209), align 8
  %ptrtoint141 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint142 = add i64 %ptrtoint141, 7
  %entry-point-addr143 = inttoptr i64 %entry-point-addr-uint142 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point144 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr143, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point144({}* %74, i64 2, {}* %75, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest147 unwind label %cleanup-lpad

normal-dest147:                                   ; preds = %normal-dest140
  %77 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest153 unwind label %cleanup-lpad

normal-dest153:                                   ; preds = %normal-dest147
  %80 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint154 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint155 = add i64 %ptrtoint154, 7
  %entry-point-addr156 = inttoptr i64 %entry-point-addr-uint155 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point157 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr156, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point157({}* %79, i64 8, {}* %vaarg, {}* %format-arg-158892.0, {}* inttoptr (i64 32 to {}*), {}* inttoptr (i64 8 to {}*), {}* null, {}* %77, {}* inttoptr (i64 258 to {}*), {}* %80)
          to label %normal-dest160 unwind label %cleanup-lpad

normal-dest160:                                   ; preds = %normal-dest153
  %82 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %83 = invoke {}* @cc_safe_fdefinition({}* %82)
          to label %normal-dest166 unwind label %cleanup-lpad

normal-dest166:                                   ; preds = %normal-dest160
  %84 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 210), align 16
  %ptrtoint167 = ptrtoint {}* %83 to i64
  %entry-point-addr-uint168 = add i64 %ptrtoint167, 7
  %entry-point-addr169 = inttoptr i64 %entry-point-addr-uint168 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point170 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr169, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point170({}* %83, i64 2, {}* %84, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest173 unwind label %cleanup-lpad

normal-dest173:                                   ; preds = %normal-dest166
  %86 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %87 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest184 unwind label %cleanup-lpad

normal-dest184:                                   ; preds = %normal-dest173
  %89 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint185 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint186 = add i64 %ptrtoint185, 7
  %entry-point-addr187 = inttoptr i64 %entry-point-addr-uint186 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point188 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr187, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point188({}* %88, i64 8, {}* %vaarg, {}* %format-arg-158893.0, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 16 to {}*), {}* null, {}* %86, {}* inttoptr (i64 258 to {}*), {}* %89)
          to label %normal-dest191 unwind label %cleanup-lpad

normal-dest191:                                   ; preds = %normal-dest184
  %91 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %92 = invoke {}* @cc_safe_fdefinition({}* %91)
          to label %normal-dest197 unwind label %cleanup-lpad

normal-dest197:                                   ; preds = %normal-dest191
  %93 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 211), align 8
  %ptrtoint198 = ptrtoint {}* %92 to i64
  %entry-point-addr-uint199 = add i64 %ptrtoint198, 7
  %entry-point-addr200 = inttoptr i64 %entry-point-addr-uint199 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point201 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr200, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point201({}* %92, i64 2, {}* %93, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest204 unwind label %cleanup-lpad

normal-dest204:                                   ; preds = %normal-dest197
  %95 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %96 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest215 unwind label %cleanup-lpad

normal-dest215:                                   ; preds = %normal-dest204
  %98 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint216 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint217 = add i64 %ptrtoint216, 7
  %entry-point-addr218 = inttoptr i64 %entry-point-addr-uint217 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point219 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr218, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point219({}* %97, i64 8, {}* %vaarg, {}* %format-arg-158894.0, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 16 to {}*), {}* null, {}* %95, {}* inttoptr (i64 258 to {}*), {}* %98)
          to label %normal-dest222 unwind label %cleanup-lpad

normal-dest222:                                   ; preds = %normal-dest215
  %100 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest228 unwind label %cleanup-lpad

normal-dest228:                                   ; preds = %normal-dest222
  %102 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 212), align 16
  %ptrtoint229 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint230 = add i64 %ptrtoint229, 7
  %entry-point-addr231 = inttoptr i64 %entry-point-addr-uint230 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point232 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr231, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point232({}* %101, i64 2, {}* %102, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest235 unwind label %cleanup-lpad

normal-dest235:                                   ; preds = %normal-dest228
  %104 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 207), align 8
  %105 = invoke {}* @cc_safe_fdefinition({}* %104)
          to label %normal-dest245 unwind label %cleanup-lpad

normal-dest245:                                   ; preds = %normal-dest235
  %106 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint246 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint247 = add i64 %ptrtoint246, 7
  %entry-point-addr248 = inttoptr i64 %entry-point-addr-uint247 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point249 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr248, align 8
  %107 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point249({}* %105, i64 9, {}* %vaarg, {}* %format-arg-158895.0, {}* %106, {}* %106, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 60 to {}*), {}* inttoptr (i64 258 to {}*), {}* inttoptr (i64 354 to {}*), {}* inttoptr (i64 12 to {}*))
          to label %normal-dest252 unwind label %cleanup-lpad

normal-dest252:                                   ; preds = %normal-dest245
  %108 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest258 unwind label %cleanup-lpad

normal-dest258:                                   ; preds = %normal-dest252
  %ptrtoint259 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint260 = add i64 %ptrtoint259, 7
  %entry-point-addr261 = inttoptr i64 %entry-point-addr-uint260 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point262 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr261, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point262({}* %109, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest265 unwind label %cleanup-lpad

normal-dest265:                                   ; preds = %normal-dest258
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %111 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %112 = insertvalue { {}*, i64 } %111, i64 1, 1
  ret { {}*, i64 } %112

normal-dest273:                                   ; preds = %tag8
  %113 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %114 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %115 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %116 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %117 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %118 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint274 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint275 = add i64 %ptrtoint274, 7
  %entry-point-addr276 = inttoptr i64 %entry-point-addr-uint275 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point277 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr276, align 8
  %119 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point277({}* %26, i64 7, {}* %113, {}* %114, {}* %115, {}* %116, {}* %117, {}* %118, {}* inttoptr (i64 108 to {}*))
          to label %normal-dest280 unwind label %cleanup-lpad

normal-dest280:                                   ; preds = %normal-dest273
  %.elt373 = extractvalue { {}*, i64 } %119, 0
  %.elt375 = extractvalue { {}*, i64 } %119, 1
  %cond314 = icmp eq i64 %.elt375, 0
  %120 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158894.2 = select i1 %cond314, {}* %120, {}* %.elt373
  br label %tag3

normal-dest287:                                   ; preds = %tag9
  %121 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %122 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %123 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %124 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %125 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %126 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint288 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint289 = add i64 %ptrtoint288, 7
  %entry-point-addr290 = inttoptr i64 %entry-point-addr-uint289 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point291 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr290, align 8
  %127 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point291({}* %28, i64 7, {}* %121, {}* %122, {}* %123, {}* %124, {}* %125, {}* %126, {}* inttoptr (i64 52 to {}*))
          to label %normal-dest294 unwind label %cleanup-lpad

normal-dest294:                                   ; preds = %normal-dest287
  %.elt381 = extractvalue { {}*, i64 } %127, 0
  %.elt383 = extractvalue { {}*, i64 } %127, 1
  %cond316 = icmp eq i64 %.elt383, 0
  %128 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158892.2 = select i1 %cond316, {}* %128, {}* %.elt381
  br label %tag1

normal-dest301:                                   ; preds = %tag10
  %129 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %130 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %131 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %132 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %133 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %134 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint302 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint303 = add i64 %ptrtoint302, 7
  %entry-point-addr304 = inttoptr i64 %entry-point-addr-uint303 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point305 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr304, align 8
  %135 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point305({}* %30, i64 7, {}* %129, {}* %130, {}* %131, {}* %132, {}* %133, {}* %134, {}* inttoptr (i64 80 to {}*))
          to label %normal-dest308 unwind label %cleanup-lpad

normal-dest308:                                   ; preds = %normal-dest301
  %.elt377 = extractvalue { {}*, i64 } %135, 0
  %.elt379 = extractvalue { {}*, i64 } %135, 1
  %cond315 = icmp eq i64 %.elt379, 0
  %136 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158893.2 = select i1 %cond315, {}* %136, {}* %.elt377
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.4"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !39 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to %0*)) #7
          to label %.noexc641 unwind label %cleanup-lpad.loopexit.split-lp

.noexc641:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %tag1.lr.ph, %tag12
  %G161713.0 = phi {}* [ %.val679, %tag1.lr.ph ], [ %.val, %tag12 ]
  %14 = phi i1 [ %139, %tag1.lr.ph ], [ %28, %tag12 ]
  %15 = phi {}* [ %137, %tag1.lr.ph ], [ %25, %tag12 ]
  %"%SUBLIST158746.0682" = phi {}* [ %"%SUBLIST158746.0678", %tag1.lr.ph ], [ %"%SUBLIST158746.0", %tag12 ]
  %16 = ptrtoint {}* %"%SUBLIST158746.0682" to i64
  %tag-only560 = and i64 %16, 7
  %consp-test = icmp eq i64 %tag-only560, 3
  br i1 %consp-test, label %tag3, label %tag119

tag3:                                             ; preds = %tag1
  %17 = icmp eq {}* %G161713.0, %15
  br i1 %17, label %tag58, label %tag126

tag6:                                             ; preds = %tag64
  %18 = add i64 %62, 5
  %19 = inttoptr i64 %18 to {}**
  %20 = load {}*, {}** %19, align 8
  br label %tag117

tag7:                                             ; preds = %tag117
  %21 = icmp eq {}* %x145.0, %102
  %.val661 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G161633.0 = select i1 %21, {}* %.val661, {}* %102
  %22 = icmp eq {}* %G161633.0, %102
  br i1 %22, label %tag125, label %tag53

tag9:                                             ; preds = %tag87
  %23 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %96, i64 %73)
  %result = extractvalue { i64, i1 } %23, 0
  %overflow = extractvalue { i64, i1 } %23, 1
  %24 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag85, label %tag112

tag12:                                            ; preds = %tag107.tag12_crit_edge, %header-check-br183, %header-check-br206, %tag78, %tag106, %tag127
  %.val = phi {}* [ %.val.pre, %tag107.tag12_crit_edge ], [ %39, %tag127 ], [ %39, %tag106 ], [ %39, %tag78 ], [ %39, %header-check-br206 ], [ %39, %header-check-br183 ]
  %25 = phi {}* [ %87, %tag107.tag12_crit_edge ], [ %.val658, %tag127 ], [ %.val658, %tag106 ], [ %.val658, %tag78 ], [ %.val658, %header-check-br206 ], [ %.val658, %header-check-br183 ]
  %26 = add i64 %16, 5
  %"%SUBLIST158746.0.in" = inttoptr i64 %26 to {}**
  %"%SUBLIST158746.0" = load {}*, {}** %"%SUBLIST158746.0.in", align 8
  %27 = icmp eq {}* %"%SUBLIST158746.0", %25
  %object.0 = select i1 %27, {}* %.val, {}* %25
  %28 = icmp eq {}* %object.0, %25
  %G161659.0 = select i1 %28, {}* %.val, {}* %25
  %29 = icmp eq {}* %G161659.0, %25
  br i1 %29, label %tag103, label %tag1

tag13:                                            ; preds = %tag86
  %30 = add i64 %71, -3
  %31 = inttoptr i64 %30 to {}**
  %32 = load {}*, {}** %31, align 8
  br label %tag109

tag18:                                            ; preds = %tag49, %tag87, %tag69, %header-check-br252, %tag36, %header-check-br191
  %33 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest168 unwind label %cleanup-lpad.loopexit.split-lp

tag19:                                            ; preds = %tag91
  %35 = ptrtoint {}* %.in599 to i64
  %single-float-tag-only = and i64 %35, 7
  %36 = icmp eq i64 %single-float-tag-only, 6
  br i1 %36, label %tag68, label %tag113

tag20:                                            ; preds = %tag111
  %37 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %123, i64 %99)
  %result181 = extractvalue { i64, i1 } %37, 0
  %overflow182 = extractvalue { i64, i1 } %37, 1
  %38 = inttoptr i64 %result181 to {}*
  br i1 %overflow182, label %tag93, label %tag38

tag27:                                            ; preds = %tag58, %normal-dest315, %tag126
  %.val658 = phi {}* [ %15, %tag126 ], [ %182, %normal-dest315 ], [ %G161713.0, %tag58 ]
  %39 = phi {}* [ %G161713.0, %tag126 ], [ %.val657.pre, %normal-dest315 ], [ %G161713.0, %tag58 ]
  %.in627 = phi {}* [ %112, %tag126 ], [ %.in626, %normal-dest315 ], [ %G161713.0, %tag58 ]
  %40 = bitcast {}* %.in627 to i8*
  %41 = icmp eq {}* %.in627, %farg0
  %G161693.0 = select i1 %41, {}* %39, {}* %.val658
  %42 = icmp eq {}* %G161693.0, %.val658
  br i1 %42, label %tag78, label %tag107

tag31:                                            ; preds = %tag112, %normal-dest445, %normal-dest398, %normal-dest299, %normal-dest175
  %.phi.trans.insert = inttoptr i64 %91 to {}**
  %return-value.sroa.0.0670.pre = load {}*, {}** %.phi.trans.insert, align 8
  br label %tag103

tag32:                                            ; preds = %tag46
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest224 unwind label %cleanup-lpad.loopexit.split-lp

tag34:                                            ; preds = %header-check-br183, %header-check-br183, %header-check-br183, %header-check-br183
  %45 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 121), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest239 unwind label %cleanup-lpad.loopexit

tag36:                                            ; preds = %header-check-br191
  %ptrtoint253 = ptrtoint {}* %.in583 to i64
  %tag-only254 = and i64 %ptrtoint253, 7
  %test255 = icmp eq i64 %tag-only254, 1
  br i1 %test255, label %header-check-br252, label %tag18

tag37:                                            ; preds = %tag59
  %47 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest260 unwind label %cleanup-lpad.loopexit.split-lp

tag38:                                            ; preds = %tag20
  call void @cc_writeCell({}* %129, {}* %38)
  br label %tag84

tag43:                                            ; preds = %tag84
  %49 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %50 = icmp eq {}* %49, %farg1
  %.val665 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G161571.0 = select i1 %50, {}* %.val665, {}* %49
  %51 = icmp eq {}* %G161571.0, %49
  br i1 %51, label %tag110, label %tag86

tag46:                                            ; preds = %tag53
  %52 = icmp eq {}* %x190.0, %.val674
  %G161613.0 = select i1 %52, {}* %.val663, {}* %.val674
  %53 = icmp eq {}* %G161613.0, %.val674
  br i1 %53, label %tag32, label %tag132

tag48:                                            ; preds = %tag69
  %54 = invoke float @from_object_float({}* %95)
          to label %normal-dest297 unwind label %cleanup-lpad.loopexit.split-lp

tag49:                                            ; preds = %tag109
  %trunc669 = trunc i64 %96 to i3
  switch i3 %trunc669, label %tag18 [
    i3 -2, label %tag69
    i3 1, label %header-check-br191
  ]

tag53:                                            ; preds = %tag7, %normal-dest536, %tag92
  %.val674 = phi {}* [ %102, %tag92 ], [ %222, %normal-dest536 ], [ %102, %tag7 ]
  %x190.0 = phi {}* [ %77, %tag92 ], [ %x190.1, %normal-dest536 ], [ %102, %tag7 ]
  %55 = ptrtoint {}* %x190.0 to i64
  %tag-only305566 = and i64 %55, 7
  %consp-test306 = icmp eq i64 %tag-only305566, 3
  %.val663 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G161620.0 = select i1 %consp-test306, {}* %.val663, {}* %.val674
  %56 = icmp eq {}* %G161620.0, %.val674
  br i1 %56, label %tag46, label %tag79

tag54:                                            ; preds = %tag58
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest308 unwind label %cleanup-lpad.loopexit

tag57:                                            ; preds = %header-check-br372
  %59 = invoke double @from_object_double({}* nonnull %122)
          to label %normal-dest321 unwind label %cleanup-lpad.loopexit.split-lp

tag58:                                            ; preds = %tag3
  br i1 %14, label %tag54, label %tag27

tag59:                                            ; preds = %tag86
  %60 = icmp eq {}* %x406.0, %.val672
  %G161551.0 = select i1 %60, {}* %.val667, {}* %.val672
  %61 = icmp eq {}* %G161551.0, %.val672
  br i1 %61, label %tag37, label %tag109

tag64:                                            ; preds = %tag88
  %62 = ptrtoint {}* %farg1 to i64
  %tag-only356564 = and i64 %62, 7
  %consp-test357 = icmp eq i64 %tag-only356564, 3
  br i1 %consp-test357, label %tag6, label %tag105

tag68:                                            ; preds = %tag19
  %63 = invoke float @from_object_float({}* %122)
          to label %normal-dest358 unwind label %cleanup-lpad.loopexit.split-lp

tag69:                                            ; preds = %tag49
  %64 = ptrtoint {}* %.in583 to i64
  %single-float-tag-only363 = and i64 %64, 7
  %65 = icmp eq i64 %single-float-tag-only363, 6
  br i1 %65, label %tag48, label %tag18

tag78:                                            ; preds = %tag27
  br i1 %brmerge, label %tag12, label %header-check-br206

tag79:                                            ; preds = %tag53
  %66 = add i64 %55, -3
  %67 = inttoptr i64 %66 to {}**
  %68 = load {}*, {}** %67, align 8
  br label %tag132

tag82:                                            ; preds = %header-check-br
  %ptrtoint373 = ptrtoint {}* %.in599 to i64
  %tag-only374 = and i64 %ptrtoint373, 7
  %test375 = icmp eq i64 %tag-only374, 1
  br i1 %test375, label %header-check-br372, label %tag113

tag84:                                            ; preds = %normal-dest493, %normal-dest423, %normal-dest360, %normal-dest323, %tag38
  br i1 %consp-test357, label %tag130, label %tag43

tag85:                                            ; preds = %tag9
  %69 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest391 unwind label %cleanup-lpad.loopexit.split-lp

tag86:                                            ; preds = %tag43, %normal-dest475, %tag130
  %.val672 = phi {}* [ %.val668.pre, %tag130 ], [ %203, %normal-dest475 ], [ %49, %tag43 ]
  %x406.0 = phi {}* [ %115, %tag130 ], [ %x406.1, %normal-dest475 ], [ %49, %tag43 ]
  %71 = ptrtoint {}* %x406.0 to i64
  %tag-only409573 = and i64 %71, 7
  %consp-test410 = icmp eq i64 %tag-only409573, 3
  %.val667 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G161558.0 = select i1 %consp-test410, {}* %.val667, {}* %.val672
  %72 = icmp eq {}* %G161558.0, %.val672
  br i1 %72, label %tag59, label %tag13

tag87:                                            ; preds = %tag109
  %73 = ptrtoint {}* %.in583 to i64
  %fixnum-tag-only411584 = and i64 %73, 3
  %fixnump-test412 = icmp eq i64 %fixnum-tag-only411584, 0
  br i1 %fixnump-test412, label %tag9, label %tag18

tag88:                                            ; preds = %tag107
  %74 = icmp eq {}* %"%SUBLIST158746.0682", %87
  br i1 %74, label %tag103, label %tag64

tag91:                                            ; preds = %tag132
  %trunc = trunc i64 %123 to i3
  switch i3 %trunc, label %tag113 [
    i3 -2, label %tag19
    i3 1, label %header-check-br
  ]

tag92:                                            ; preds = %tag117
  %75 = add i64 %103, 5
  %76 = inttoptr i64 %75 to {}**
  %77 = load {}*, {}** %76, align 8
  br label %tag53

tag93:                                            ; preds = %tag20
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest416 unwind label %cleanup-lpad.loopexit.split-lp

tag103:                                           ; preds = %tag12, %normal-dest, %tag88, %tag31
  %return-value.sroa.0.0670 = phi {}* [ %return-value.sroa.0.0670.pre, %tag31 ], [ %"%SUBLIST158746.0682", %tag88 ], [ %137, %normal-dest ], [ %25, %tag12 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %80 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0670, 0
  %81 = insertvalue { {}*, i64 } %80, i64 1, 1
  ret { {}*, i64 } %81

tag104:                                           ; preds = %header-check-br252
  %82 = invoke double @from_object_double({}* nonnull %95)
          to label %normal-dest443 unwind label %cleanup-lpad.loopexit.split-lp

tag105:                                           ; preds = %tag64
  %83 = icmp eq {}* %87, %farg1
  %.val659 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G161649.0 = select i1 %83, {}* %.val659, {}* %87
  %84 = icmp eq {}* %G161649.0, %87
  br i1 %84, label %tag120, label %tag117

tag106:                                           ; preds = %header-check-br206, %header-check-br206, %header-check-br206, %header-check-br206
  %85 = ptrtoint {}* %.in627 to i64
  %single-float-tag-only454 = and i64 %85, 7
  %86 = icmp eq i64 %single-float-tag-only454, 6
  br i1 %86, label %tag12, label %tag127

tag107:                                           ; preds = %tag27, %normal-dest246
  %87 = phi {}* [ %165, %normal-dest246 ], [ %.val658, %tag27 ]
  %G161684.0 = phi {}* [ %G161684.1, %normal-dest246 ], [ %39, %tag27 ]
  %88 = icmp eq {}* %G161684.0, %87
  br i1 %88, label %tag107.tag12_crit_edge, label %tag88

tag107.tag12_crit_edge:                           ; preds = %tag107
  %.val.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  br label %tag12

tag109:                                           ; preds = %tag59, %normal-dest267, %tag13
  %.in583 = phi {}* [ %32, %tag13 ], [ %.in, %normal-dest267 ], [ %.val672, %tag59 ]
  %89 = bitcast {}* %.in583 to i8*
  %90 = ptrtoint %"class.core::T_O"* %131 to i64
  %91 = add i64 %90, -3
  %92 = inttoptr i64 %91 to %"class.gctools::smart_ptr"*
  %93 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %92, i64 0, i32 0
  %94 = load %"class.core::T_O"*, %"class.core::T_O"** %93, align 8, !tbaa !31
  %95 = bitcast %"class.core::T_O"* %94 to {}*
  %96 = ptrtoint %"class.core::T_O"* %94 to i64
  %fixnum-tag-only465574 = and i64 %96, 3
  %fixnump-test466 = icmp eq i64 %fixnum-tag-only465574, 0
  br i1 %fixnump-test466, label %tag87, label %tag49

tag110:                                           ; preds = %tag43
  %97 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %98 = invoke {}* @cc_safe_fdefinition({}* %97)
          to label %normal-dest468 unwind label %cleanup-lpad.loopexit.split-lp

tag111:                                           ; preds = %tag132
  %99 = ptrtoint {}* %.in599 to i64
  %fixnum-tag-only481600 = and i64 %99, 3
  %fixnump-test482 = icmp eq i64 %fixnum-tag-only481600, 0
  br i1 %fixnump-test482, label %tag20, label %tag113

tag112:                                           ; preds = %tag9
  call void @cc_writeCell({}* %132, {}* %24)
  br label %tag31

tag113:                                           ; preds = %tag91, %tag111, %header-check-br372, %tag82, %tag19, %header-check-br
  %100 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest486 unwind label %cleanup-lpad.loopexit.split-lp

tag117:                                           ; preds = %tag105, %normal-dest520, %tag6
  %102 = phi {}* [ %87, %tag6 ], [ %216, %normal-dest520 ], [ %87, %tag105 ]
  %x145.0 = phi {}* [ %20, %tag6 ], [ %x145.1, %normal-dest520 ], [ %87, %tag105 ]
  %103 = ptrtoint {}* %x145.0 to i64
  %tag-only508565 = and i64 %103, 7
  %consp-test509 = icmp eq i64 %tag-only508565, 3
  br i1 %consp-test509, label %tag92, label %tag7

tag119:                                           ; preds = %tag1
  %104 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %105 = invoke {}* @cc_safe_fdefinition({}* %104)
          to label %normal-dest511 unwind label %cleanup-lpad.loopexit.split-lp

tag120:                                           ; preds = %tag105
  %106 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest513 unwind label %cleanup-lpad.loopexit.split-lp

tag125:                                           ; preds = %tag7
  %108 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest529 unwind label %cleanup-lpad.loopexit.split-lp

tag126:                                           ; preds = %tag3
  %110 = add i64 %16, -3
  %111 = inttoptr i64 %110 to {}**
  %112 = load {}*, {}** %111, align 8
  br label %tag27

tag127:                                           ; preds = %tag106
  %fixnum-tag-only542624 = and i64 %85, 3
  %fixnump-test543 = icmp ne i64 %fixnum-tag-only542624, 0
  %test186 = icmp eq i64 %single-float-tag-only454, 1
  %or.cond = and i1 %fixnump-test543, %test186
  br i1 %or.cond, label %header-check-br183, label %tag12

tag130:                                           ; preds = %tag84
  %113 = add i64 %62, 5
  %114 = inttoptr i64 %113 to {}**
  %115 = load {}*, {}** %114, align 8
  %.val668.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag86

tag132:                                           ; preds = %tag46, %normal-dest232, %tag79
  %.in599 = phi {}* [ %68, %tag79 ], [ %.in598, %normal-dest232 ], [ %.val674, %tag46 ]
  %116 = bitcast {}* %.in599 to i8*
  %117 = ptrtoint %"class.core::T_O"* %128 to i64
  %118 = add i64 %117, -3
  %119 = inttoptr i64 %118 to %"class.gctools::smart_ptr"*
  %120 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %119, i64 0, i32 0
  %121 = load %"class.core::T_O"*, %"class.core::T_O"** %120, align 8, !tbaa !31
  %122 = bitcast %"class.core::T_O"* %121 to {}*
  %123 = ptrtoint %"class.core::T_O"* %121 to i64
  %fixnum-tag-only547567 = and i64 %123, 3
  %fixnump-test548 = icmp eq i64 %fixnum-tag-only547567, 0
  br i1 %fixnump-test548, label %tag111, label %tag91

cleanup-lpad.loopexit:                            ; preds = %tag34, %normal-dest239, %tag54, %normal-dest308
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest511, %tag18, %normal-dest168, %tag32, %normal-dest224, %tag37, %normal-dest260, %tag48, %normal-dest297, %normal-dest298, %tag57, %normal-dest321, %normal-dest322, %tag68, %normal-dest358, %normal-dest359, %tag85, %normal-dest391, %tag93, %normal-dest416, %tag104, %normal-dest443, %normal-dest444, %tag110, %normal-dest468, %tag113, %normal-dest486, %tag119, %tag120, %normal-dest513, %tag125, %normal-dest529, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %124 = ptrtoint {}* %closure-ptr to i64
  %125 = and i64 %124, -8
  %126 = inttoptr i64 %125 to %1*
  %127 = getelementptr inbounds %1, %1* %126, i64 0, i32 4, i32 1, i64 2, i32 0
  %128 = load %"class.core::T_O"*, %"class.core::T_O"** %127, align 8, !tbaa !31
  %129 = bitcast %"class.core::T_O"* %128 to {}*
  %130 = getelementptr inbounds %1, %1* %126, i64 0, i32 4, i32 1, i64 1, i32 0
  %131 = load %"class.core::T_O"*, %"class.core::T_O"** %130, align 8, !tbaa !31
  %132 = bitcast %"class.core::T_O"* %131 to {}*
  %133 = getelementptr inbounds %1, %1* %126, i64 0, i32 4, i32 1, i64 0, i32 0
  %134 = bitcast %"class.core::T_O"** %133 to i64*
  %135 = load i64, i64* %134, align 8, !tbaa !31
  %136 = add i64 %135, -3
  %"%SUBLIST158746.0.in677" = inttoptr i64 %136 to {}**
  %"%SUBLIST158746.0678" = load {}*, {}** %"%SUBLIST158746.0.in677", align 8
  %137 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %138 = icmp eq {}* %"%SUBLIST158746.0678", %137
  %.val679 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %object.0680 = select i1 %138, {}* %.val679, {}* %137
  %139 = icmp eq {}* %object.0680, %137
  %G161659.0681 = select i1 %139, {}* %.val679, {}* %137
  %140 = icmp eq {}* %G161659.0681, %137
  br i1 %140, label %tag103, label %tag1.lr.ph

tag1.lr.ph:                                       ; preds = %normal-dest
  %141 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only371 = and i64 %141, 7
  %fixnum-tag-only622 = and i64 %141, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only622, 0
  %test209 = icmp ne i64 %single-float-tag-only371, 1
  %irc-bit-cast210 = bitcast {}* %farg0 to i8*
  %gep211 = getelementptr inbounds i8, i8* %irc-bit-cast210, i64 -9
  %irc-bit-cast212 = bitcast i8* %gep211 to i64*
  %brmerge = or i1 %test209, %fixnump-test
  br label %tag1

header-check-br:                                  ; preds = %tag91
  %gep = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %121, i64 -9, i32 0
  %irc-bit-cast156 = bitcast i8* %gep to i64*
  %142 = load i64, i64* %irc-bit-cast156, align 8
  %143 = icmp eq i64 %142, 1325
  br i1 %143, label %tag82, label %tag113

normal-dest160:                                   ; preds = %normal-dest511
  call void @unreachableError()
  unreachable

normal-dest168:                                   ; preds = %tag18
  %ptrtoint169 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint170 = add i64 %ptrtoint169, 7
  %entry-point-addr171 = inttoptr i64 %entry-point-addr-uint170 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point172 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr171, align 8
  %144 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point172({}* %34, i64 2, {}* %95, {}* %.in583, {}* null, {}* null)
          to label %normal-dest175 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest175:                                   ; preds = %normal-dest168
  %.elt576 = extractvalue { {}*, i64 } %144, 0
  %.elt578 = extractvalue { {}*, i64 } %144, 1
  %cond549 = icmp eq i64 %.elt578, 0
  %145 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161749.0 = select i1 %cond549, {}* %145, {}* %.elt576
  call void @cc_writeCell({}* %132, {}* %G161749.0)
  br label %tag31

header-check-br183:                               ; preds = %tag127
  %gep188 = getelementptr inbounds i8, i8* %40, i64 -9
  %irc-bit-cast189 = bitcast i8* %gep188 to i64*
  %146 = load i64, i64* %irc-bit-cast189, align 8
  %147 = add i64 %146, -1309
  %148 = lshr i64 %147, 3
  %149 = shl i64 %147, 61
  %150 = or i64 %148, %149
  switch i64 %150, label %tag12 [
    i64 2, label %tag34
    i64 4, label %tag34
    i64 5, label %tag34
    i64 0, label %tag34
  ]

header-check-br191:                               ; preds = %tag49
  %gep196 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %94, i64 -9, i32 0
  %irc-bit-cast197 = bitcast i8* %gep196 to i64*
  %151 = load i64, i64* %irc-bit-cast197, align 8
  %152 = icmp eq i64 %151, 1325
  br i1 %152, label %tag36, label %tag18

header-check-br206:                               ; preds = %tag78
  %153 = load i64, i64* %irc-bit-cast212, align 8
  %154 = add i64 %153, -1309
  %155 = lshr i64 %154, 3
  %156 = shl i64 %154, 61
  %157 = or i64 %155, %156
  switch i64 %157, label %tag12 [
    i64 2, label %tag106
    i64 4, label %tag106
    i64 5, label %tag106
    i64 0, label %tag106
  ]

normal-dest224:                                   ; preds = %tag32
  %158 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %159 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %160 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %161 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint226 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint227 = add i64 %ptrtoint226, 7
  %entry-point-addr228 = inttoptr i64 %entry-point-addr-uint227 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point229 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr228, align 8
  %162 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point229({}* %44, i64 5, {}* %158, {}* %159, {}* %x190.0, {}* %160, {}* %161)
          to label %normal-dest232 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest232:                                   ; preds = %normal-dest224
  %.elt606 = extractvalue { {}*, i64 } %162, 0
  %.elt608 = extractvalue { {}*, i64 } %162, 1
  %cond554 = icmp eq i64 %.elt608, 0
  %163 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in598 = select i1 %cond554, {}* %163, {}* %.elt606
  br label %tag132

normal-dest239:                                   ; preds = %tag34
  %ptrtoint240 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint241 = add i64 %ptrtoint240, 7
  %entry-point-addr242 = inttoptr i64 %entry-point-addr-uint241 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point243 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr242, align 8
  %164 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point243({}* %46, i64 2, {}* nonnull %farg0, {}* nonnull %.in627, {}* null, {}* null)
          to label %normal-dest246 unwind label %cleanup-lpad.loopexit

normal-dest246:                                   ; preds = %normal-dest239
  %.elt629 = extractvalue { {}*, i64 } %164, 0
  %.elt631 = extractvalue { {}*, i64 } %164, 1
  %cond558 = icmp eq i64 %.elt631, 0
  %165 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161684.1 = select i1 %cond558, {}* %165, {}* %.elt629
  br label %tag107

header-check-br252:                               ; preds = %tag36
  %gep257 = getelementptr inbounds i8, i8* %89, i64 -9
  %irc-bit-cast258 = bitcast i8* %gep257 to i64*
  %166 = load i64, i64* %irc-bit-cast258, align 8
  %167 = icmp eq i64 %166, 1325
  br i1 %167, label %tag104, label %tag18

normal-dest260:                                   ; preds = %tag37
  %168 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %169 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %170 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %171 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint261 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint262 = add i64 %ptrtoint261, 7
  %entry-point-addr263 = inttoptr i64 %entry-point-addr-uint262 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point264 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr263, align 8
  %172 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point264({}* %48, i64 5, {}* %168, {}* %169, {}* %x406.0, {}* %170, {}* %171)
          to label %normal-dest267 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest267:                                   ; preds = %normal-dest260
  %.elt590 = extractvalue { {}*, i64 } %172, 0
  %.elt592 = extractvalue { {}*, i64 } %172, 1
  %cond551 = icmp eq i64 %.elt592, 0
  %173 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in = select i1 %cond551, {}* %173, {}* %.elt590
  br label %tag109

normal-dest297:                                   ; preds = %tag48
  %174 = invoke float @from_object_float({}* %.in583)
          to label %normal-dest298 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest298:                                   ; preds = %normal-dest297
  %175 = fadd float %54, %174
  %176 = invoke {}* @to_object_float(float %175)
          to label %normal-dest299 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest299:                                   ; preds = %normal-dest298
  call void @cc_writeCell({}* %132, {}* %176)
  br label %tag31

normal-dest308:                                   ; preds = %tag54
  %177 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %178 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %179 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %180 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint309 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint310 = add i64 %ptrtoint309, 7
  %entry-point-addr311 = inttoptr i64 %entry-point-addr-uint310 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point312 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr311, align 8
  %181 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point312({}* %58, i64 5, {}* %177, {}* %178, {}* %"%SUBLIST158746.0682", {}* %179, {}* %180)
          to label %normal-dest315 unwind label %cleanup-lpad.loopexit

normal-dest315:                                   ; preds = %normal-dest308
  %.elt633 = extractvalue { {}*, i64 } %181, 0
  %.elt635 = extractvalue { {}*, i64 } %181, 1
  %cond559 = icmp eq i64 %.elt635, 0
  %182 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in626 = select i1 %cond559, {}* %182, {}* %.elt633
  %.val657.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  br label %tag27

normal-dest321:                                   ; preds = %tag57
  %183 = invoke double @from_object_double({}* nonnull %.in599)
          to label %normal-dest322 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest322:                                   ; preds = %normal-dest321
  %184 = fadd double %59, %183
  %185 = invoke {}* @to_object_double(double %184)
          to label %normal-dest323 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest323:                                   ; preds = %normal-dest322
  call void @cc_writeCell({}* %129, {}* %185)
  br label %tag84

normal-dest358:                                   ; preds = %tag68
  %186 = invoke float @from_object_float({}* %.in599)
          to label %normal-dest359 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest359:                                   ; preds = %normal-dest358
  %187 = fadd float %63, %186
  %188 = invoke {}* @to_object_float(float %187)
          to label %normal-dest360 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest360:                                   ; preds = %normal-dest359
  call void @cc_writeCell({}* %129, {}* %188)
  br label %tag84

header-check-br372:                               ; preds = %tag82
  %gep377 = getelementptr inbounds i8, i8* %116, i64 -9
  %irc-bit-cast378 = bitcast i8* %gep377 to i64*
  %189 = load i64, i64* %irc-bit-cast378, align 8
  %190 = icmp eq i64 %189, 1325
  br i1 %190, label %tag57, label %tag113

normal-dest391:                                   ; preds = %tag85
  %ptrtoint392 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint393 = add i64 %ptrtoint392, 7
  %entry-point-addr394 = inttoptr i64 %entry-point-addr-uint393 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point395 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr394, align 8
  %191 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point395({}* %70, i64 1, {}* %24, {}* null, {}* null, {}* null)
          to label %normal-dest398 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest398:                                   ; preds = %normal-dest391
  %.elt586 = extractvalue { {}*, i64 } %191, 0
  %.elt588 = extractvalue { {}*, i64 } %191, 1
  %cond550 = icmp eq i64 %.elt588, 0
  %192 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161746.0 = select i1 %cond550, {}* %192, {}* %.elt586
  call void @cc_writeCell({}* %132, {}* %G161746.0)
  br label %tag31

normal-dest416:                                   ; preds = %tag93
  %ptrtoint417 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint418 = add i64 %ptrtoint417, 7
  %entry-point-addr419 = inttoptr i64 %entry-point-addr-uint418 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point420 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr419, align 8
  %193 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point420({}* %79, i64 1, {}* %38, {}* null, {}* null, {}* null)
          to label %normal-dest423 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest423:                                   ; preds = %normal-dest416
  %.elt602 = extractvalue { {}*, i64 } %193, 0
  %.elt604 = extractvalue { {}*, i64 } %193, 1
  %cond553 = icmp eq i64 %.elt604, 0
  %194 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161759.0 = select i1 %cond553, {}* %194, {}* %.elt602
  call void @cc_writeCell({}* %129, {}* %G161759.0)
  br label %tag84

normal-dest443:                                   ; preds = %tag104
  %195 = invoke double @from_object_double({}* nonnull %.in583)
          to label %normal-dest444 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest444:                                   ; preds = %normal-dest443
  %196 = fadd double %82, %195
  %197 = invoke {}* @to_object_double(double %196)
          to label %normal-dest445 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest445:                                   ; preds = %normal-dest444
  call void @cc_writeCell({}* %132, {}* %197)
  br label %tag31

normal-dest468:                                   ; preds = %tag110
  %198 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %199 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %200 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %201 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint469 = ptrtoint {}* %98 to i64
  %entry-point-addr-uint470 = add i64 %ptrtoint469, 7
  %entry-point-addr471 = inttoptr i64 %entry-point-addr-uint470 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point472 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr471, align 8
  %202 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point472({}* %98, i64 5, {}* %198, {}* %199, {}* %farg1, {}* %200, {}* %201)
          to label %normal-dest475 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest475:                                   ; preds = %normal-dest468
  %.elt594 = extractvalue { {}*, i64 } %202, 0
  %.elt596 = extractvalue { {}*, i64 } %202, 1
  %cond552 = icmp eq i64 %.elt596, 0
  %203 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x406.1 = select i1 %cond552, {}* %203, {}* %.elt594
  br label %tag86

normal-dest486:                                   ; preds = %tag113
  %ptrtoint487 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint488 = add i64 %ptrtoint487, 7
  %entry-point-addr489 = inttoptr i64 %entry-point-addr-uint488 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point490 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr489, align 8
  %204 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point490({}* %101, i64 2, {}* %122, {}* %.in599, {}* null, {}* null)
          to label %normal-dest493 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest493:                                   ; preds = %normal-dest486
  %.elt569 = extractvalue { {}*, i64 } %204, 0
  %.elt571 = extractvalue { {}*, i64 } %204, 1
  %cond = icmp eq i64 %.elt571, 0
  %205 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161762.0 = select i1 %cond, {}* %205, {}* %.elt569
  call void @cc_writeCell({}* %129, {}* %G161762.0)
  br label %tag84

normal-dest511:                                   ; preds = %tag119
  %206 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %207 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %208 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %209 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %ptrtoint157 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint = add i64 %ptrtoint157, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %210 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %105, i64 5, {}* %206, {}* %207, {}* %"%SUBLIST158746.0682", {}* %208, {}* %209)
          to label %normal-dest160 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest513:                                   ; preds = %tag120
  %211 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %212 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %213 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %214 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint514 = ptrtoint {}* %107 to i64
  %entry-point-addr-uint515 = add i64 %ptrtoint514, 7
  %entry-point-addr516 = inttoptr i64 %entry-point-addr-uint515 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point517 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr516, align 8
  %215 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point517({}* %107, i64 5, {}* %211, {}* %212, {}* %farg1, {}* %213, {}* %214)
          to label %normal-dest520 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest520:                                   ; preds = %normal-dest513
  %.elt614 = extractvalue { {}*, i64 } %215, 0
  %.elt616 = extractvalue { {}*, i64 } %215, 1
  %cond556 = icmp eq i64 %.elt616, 0
  %216 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x145.1 = select i1 %cond556, {}* %216, {}* %.elt614
  br label %tag117

normal-dest529:                                   ; preds = %tag125
  %217 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %218 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %219 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %220 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint530 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint531 = add i64 %ptrtoint530, 7
  %entry-point-addr532 = inttoptr i64 %entry-point-addr-uint531 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point533 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr532, align 8
  %221 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point533({}* %109, i64 5, {}* %217, {}* %218, {}* %x145.0, {}* %219, {}* %220)
          to label %normal-dest536 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest536:                                   ; preds = %normal-dest529
  %.elt610 = extractvalue { {}*, i64 } %221, 0
  %.elt612 = extractvalue { {}*, i64 } %221, 1
  %cond555 = icmp eq i64 %.elt612, 0
  %222 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x190.1 = select i1 %cond555, {}* %222, {}* %.elt610
  br label %tag53
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.5"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !40 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag1:                                             ; preds = %tag1.backedge, %tag18
  %I.0 = phi {}* [ null, %tag18 ], [ %I.0.be, %tag1.backedge ]
  %9 = ptrtoint {}* %I.0 to i64
  %fixnum-tag-only301 = and i64 %9, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only301, 0
  br i1 %fixnump-test, label %tag28, label %tag7

tag3:                                             ; preds = %normal-dest153, %process-rest-argument
  %10 = phi {}* [ %39, %process-rest-argument ], [ %68, %normal-dest153 ]
  %format-arg-158759.0 = phi {}* [ %format-arg-158759.1368371, %process-rest-argument ], [ %format-arg-158759.2, %normal-dest153 ]
  %11 = icmp eq {}* %G158776.0375, %10
  br i1 %11, label %tag17, label %tag15

tag5:                                             ; preds = %tag20
  %12 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest67 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %tag1
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 145), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest162 unwind label %cleanup-lpad.loopexit

tag12:                                            ; preds = %tag28
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %.pre380 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag16

tag15:                                            ; preds = %normal-dest104, %tag3
  %17 = phi {}* [ %10, %tag3 ], [ %50, %normal-dest104 ]
  %format-arg-158760.0 = phi {}* [ %format-arg-158760.1377, %tag3 ], [ %format-arg-158760.2, %normal-dest104 ]
  %18 = icmp eq {}* %G158775.0, %17
  br i1 %18, label %tag24, label %tag18

tag16:                                            ; preds = %normal-dest169, %tag12
  %19 = phi {}* [ %.pre380, %tag12 ], [ %70, %normal-dest169 ]
  %G161424.0 = phi {}* [ %16, %tag12 ], [ %G161424.1, %normal-dest169 ]
  %20 = icmp eq {}* %G161424.0, %19
  br i1 %20, label %tag34, label %tag32

tag17:                                            ; preds = %tag3
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest97 unwind label %cleanup-lpad.loopexit.split-lp

tag18:                                            ; preds = %normal-dest124, %tag15
  %format-arg-158761.0 = phi {}* [ %format-arg-158761.1, %tag15 ], [ %format-arg-158761.2, %normal-dest124 ]
  br label %tag1

tag20:                                            ; preds = %normal-dest190
  %23 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %9, i64 4)
  %result = extractvalue { i64, i1 } %23, 0
  %overflow = extractvalue { i64, i1 } %23, 1
  %24 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag5, label %tag1.backedge

tag1.backedge:                                    ; preds = %tag20, %normal-dest71, %normal-dest139
  %I.0.be = phi {}* [ %I.1, %normal-dest71 ], [ %I.2, %normal-dest139 ], [ %24, %tag20 ]
  br label %tag1

tag24:                                            ; preds = %tag15
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest117 unwind label %cleanup-lpad.loopexit.split-lp

tag26:                                            ; preds = %normal-dest190
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest132 unwind label %cleanup-lpad.loopexit

tag27:                                            ; preds = %process-rest-argument
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest146 unwind label %cleanup-lpad.loopexit.split-lp

tag28:                                            ; preds = %tag1
  %31 = icmp slt {}* %I.0, inttoptr (i64 8 to {}*)
  br i1 %31, label %tag12, label %tag34

tag32:                                            ; preds = %tag16
  %32 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest183 unwind label %cleanup-lpad.loopexit

tag34:                                            ; preds = %tag28, %tag16
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest200 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag5, %normal-dest67, %tag26, %normal-dest132, %tag7, %normal-dest162, %tag32, %normal-dest183
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %tag17, %normal-dest97, %tag24, %normal-dest117, %tag27, %normal-dest146, %tag34, %normal-dest200, %normal-dest207, %normal-dest213, %normal-dest220, %normal-dest226, %normal-dest233, %normal-dest243, %normal-dest250, %normal-dest256, %normal-dest263, %normal-dest269, %normal-dest276, %normal-dest282
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %37 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs40 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-141 = add i64 %rem-nargs40, -1
  store i64 %rem-nargs-141, i64* %"remaining-nargs*", align 8
  %vaarg42 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args47 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args47, label %opt-cont46, label %opt-cont.opt-cont46.thread_crit_edge

opt-cont.opt-cont46.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont46:                                       ; preds = %opt-cont
  %rem-nargs48 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-149 = add i64 %rem-nargs48, -1
  store i64 %rem-nargs-149, i64* %"remaining-nargs*", align 8
  %vaarg50 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args55 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args55, label %opt-cont46.opt-init53_crit_edge, label %opt-arg52

opt-cont46.opt-init53_crit_edge:                  ; preds = %opt-cont46
  %.pre379 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg52:                                        ; preds = %opt-cont46
  %rem-nargs56 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-157 = add i64 %rem-nargs56, -1
  store i64 %rem-nargs-157, i64* %"remaining-nargs*", align 8
  %vaarg58 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont46.opt-init53_crit_edge, %opt-cont.opt-cont46.thread_crit_edge, %opt-cont.thread, %opt-arg52
  %format-arg-158760.1377 = phi {}* [ %vaarg50, %opt-arg52 ], [ %vaarg50, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G158776.0375 = phi {}* [ %36, %opt-arg52 ], [ %36, %opt-cont46.opt-init53_crit_edge ], [ %.pre, %opt-cont.opt-cont46.thread_crit_edge ], [ %37, %opt-cont.thread ]
  %G158777.0366373 = phi {}* [ %36, %opt-arg52 ], [ %36, %opt-cont46.opt-init53_crit_edge ], [ %36, %opt-cont.opt-cont46.thread_crit_edge ], [ %37, %opt-cont.thread ]
  %format-arg-158759.1368371 = phi {}* [ %vaarg42, %opt-arg52 ], [ %vaarg42, %opt-cont46.opt-init53_crit_edge ], [ %vaarg42, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G158775.0 = phi {}* [ %36, %opt-arg52 ], [ %.pre379, %opt-cont46.opt-init53_crit_edge ], [ %.pre, %opt-cont.opt-cont46.thread_crit_edge ], [ %37, %opt-cont.thread ]
  %format-arg-158761.1 = phi {}* [ %vaarg58, %opt-arg52 ], [ undef, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %38 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %40 = icmp eq {}* %G158777.0366373, %39
  br i1 %40, label %tag27, label %tag3

normal-dest67:                                    ; preds = %tag5
  %ptrtoint68 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint68, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 1, {}* %24, {}* null, {}* null, {}* null)
          to label %normal-dest71 unwind label %cleanup-lpad.loopexit

normal-dest71:                                    ; preds = %normal-dest67
  %.elt314 = extractvalue { {}*, i64 } %41, 0
  %.elt316 = extractvalue { {}*, i64 } %41, 1
  %cond297 = icmp eq i64 %.elt316, 0
  %42 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.1 = select i1 %cond297, {}* %42, {}* %.elt314
  br label %tag1.backedge

normal-dest97:                                    ; preds = %tag17
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %44 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %45 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %47 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 140), align 16
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint98 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint99 = add i64 %ptrtoint98, 7
  %entry-point-addr100 = inttoptr i64 %entry-point-addr-uint99 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr100, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point101({}* %22, i64 7, {}* %43, {}* %44, {}* %45, {}* %46, {}* %47, {}* %48, {}* inttoptr (i64 140 to {}*))
          to label %normal-dest104 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest104:                                   ; preds = %normal-dest97
  %.elt353 = extractvalue { {}*, i64 } %49, 0
  %.elt355 = extractvalue { {}*, i64 } %49, 1
  %cond299 = icmp eq i64 %.elt355, 0
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158760.2 = select i1 %cond299, {}* %50, {}* %.elt353
  br label %tag15

normal-dest117:                                   ; preds = %tag24
  %51 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %53 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %54 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 140), align 16
  %56 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint118 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint119 = add i64 %ptrtoint118, 7
  %entry-point-addr120 = inttoptr i64 %entry-point-addr-uint119 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point121 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr120, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point121({}* %26, i64 7, {}* %51, {}* %52, {}* %53, {}* %54, {}* %55, {}* %56, {}* inttoptr (i64 180 to {}*))
          to label %normal-dest124 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest124:                                   ; preds = %normal-dest117
  %.elt349 = extractvalue { {}*, i64 } %57, 0
  %.elt351 = extractvalue { {}*, i64 } %57, 1
  %cond298 = icmp eq i64 %.elt351, 0
  %58 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158761.2 = select i1 %cond298, {}* %58, {}* %.elt349
  br label %tag18

normal-dest132:                                   ; preds = %tag26
  %ptrtoint133 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint134 = add i64 %ptrtoint133, 7
  %entry-point-addr135 = inttoptr i64 %entry-point-addr-uint134 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point136 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr135, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point136({}* %28, i64 2, {}* %I.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest139 unwind label %cleanup-lpad.loopexit

normal-dest139:                                   ; preds = %normal-dest132
  %.elt310 = extractvalue { {}*, i64 } %59, 0
  %.elt312 = extractvalue { {}*, i64 } %59, 1
  %cond296 = icmp eq i64 %.elt312, 0
  %60 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.2 = select i1 %cond296, {}* %60, {}* %.elt310
  br label %tag1.backedge

normal-dest146:                                   ; preds = %tag27
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %62 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %64 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 140), align 16
  %66 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint147 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint148 = add i64 %ptrtoint147, 7
  %entry-point-addr149 = inttoptr i64 %entry-point-addr-uint148 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point150 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr149, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point150({}* %30, i64 7, {}* %61, {}* %62, {}* %63, {}* %64, {}* %65, {}* %66, {}* inttoptr (i64 88 to {}*))
          to label %normal-dest153 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest153:                                   ; preds = %normal-dest146
  %.elt357 = extractvalue { {}*, i64 } %67, 0
  %.elt359 = extractvalue { {}*, i64 } %67, 1
  %cond300 = icmp eq i64 %.elt359, 0
  %68 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158759.2 = select i1 %cond300, {}* %68, {}* %.elt357
  br label %tag3

normal-dest162:                                   ; preds = %tag7
  %ptrtoint163 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint164 = add i64 %ptrtoint163, 7
  %entry-point-addr165 = inttoptr i64 %entry-point-addr-uint164 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point166 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr165, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point166({}* %15, i64 2, {}* %I.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit

normal-dest169:                                   ; preds = %normal-dest162
  %.elt = extractvalue { {}*, i64 } %69, 0
  %.elt303 = extractvalue { {}*, i64 } %69, 1
  %cond = icmp eq i64 %.elt303, 0
  %70 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161424.1 = select i1 %cond, {}* %70, {}* %.elt
  br label %tag16

normal-dest183:                                   ; preds = %tag32
  %ptrtoint184 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint185 = add i64 %ptrtoint184, 7
  %entry-point-addr186 = inttoptr i64 %entry-point-addr-uint185 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point187 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr186, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point187({}* %33, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest190 unwind label %cleanup-lpad.loopexit

normal-dest190:                                   ; preds = %normal-dest183
  br i1 %fixnump-test, label %tag20, label %tag26

normal-dest200:                                   ; preds = %tag34
  %72 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 149), align 8
  %ptrtoint201 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint202 = add i64 %ptrtoint201, 7
  %entry-point-addr203 = inttoptr i64 %entry-point-addr-uint202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr203, align 8
  %73 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point204({}* %35, i64 2, {}* %72, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest207:                                   ; preds = %normal-dest200
  %74 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest213 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest213:                                   ; preds = %normal-dest207
  %76 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint214 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint215 = add i64 %ptrtoint214, 7
  %entry-point-addr216 = inttoptr i64 %entry-point-addr-uint215 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point217 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr216, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point217({}* %75, i64 8, {}* %vaarg, {}* %format-arg-158759.0, {}* %76, {}* %76, {}* inttoptr (i64 28 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest220 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest220:                                   ; preds = %normal-dest213
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest226 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest226:                                   ; preds = %normal-dest220
  %80 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 152), align 16
  %ptrtoint227 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint228 = add i64 %ptrtoint227, 7
  %entry-point-addr229 = inttoptr i64 %entry-point-addr-uint228 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point230 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr229, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point230({}* %79, i64 2, {}* %80, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest233 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest233:                                   ; preds = %normal-dest226
  %82 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %83 = invoke {}* @cc_safe_fdefinition({}* %82)
          to label %normal-dest243 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest243:                                   ; preds = %normal-dest233
  %84 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint244 = ptrtoint {}* %83 to i64
  %entry-point-addr-uint245 = add i64 %ptrtoint244, 7
  %entry-point-addr246 = inttoptr i64 %entry-point-addr-uint245 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point247 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr246, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point247({}* %83, i64 8, {}* %vaarg, {}* %format-arg-158760.0, {}* %84, {}* %84, {}* inttoptr (i64 28 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest250 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest250:                                   ; preds = %normal-dest243
  %86 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest256 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest256:                                   ; preds = %normal-dest250
  %88 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 153), align 8
  %ptrtoint257 = ptrtoint {}* %87 to i64
  %entry-point-addr-uint258 = add i64 %ptrtoint257, 7
  %entry-point-addr259 = inttoptr i64 %entry-point-addr-uint258 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point260 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr259, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point260({}* %87, i64 2, {}* %88, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest263 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest263:                                   ; preds = %normal-dest256
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 154), align 16
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest269 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest269:                                   ; preds = %normal-dest263
  %ptrtoint270 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint271 = add i64 %ptrtoint270, 7
  %entry-point-addr272 = inttoptr i64 %entry-point-addr-uint271 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point273 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr272, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point273({}* %91, i64 2, {}* %format-arg-158761.0, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest276 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest276:                                   ; preds = %normal-dest269
  %93 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest282 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest282:                                   ; preds = %normal-dest276
  %ptrtoint283 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint284 = add i64 %ptrtoint283, 7
  %entry-point-addr285 = inttoptr i64 %entry-point-addr-uint284 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point286 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr285, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point286({}* %94, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest289 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest289:                                   ; preds = %normal-dest282
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %96 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %97 = insertvalue { {}*, i64 } %96, i64 1, 1
  ret { {}*, i64 } %97
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.6"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !41 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %process-rest-argument
  %9 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest63 unwind label %cleanup-lpad.loopexit.split-lp

tag4:                                             ; preds = %tag14
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 145), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %normal-dest168, %tag20
  %13 = phi {}* [ %27, %tag20 ], [ %65, %normal-dest168 ]
  %format-arg-158792.0 = phi {}* [ %format-arg-158792.1361, %tag20 ], [ %format-arg-158792.2, %normal-dest168 ]
  %14 = icmp eq {}* %G158813.0, %13
  br i1 %14, label %tag28, label %tag33

tag8:                                             ; preds = %normal-dest81, %tag9
  %15 = phi {}* [ %.pre364, %tag9 ], [ %52, %normal-dest81 ]
  %G161161.0 = phi {}* [ %17, %tag9 ], [ %G161161.1, %normal-dest81 ]
  %16 = icmp eq {}* %G161161.0, %15
  br i1 %16, label %tag11, label %tag10

tag9:                                             ; preds = %tag29
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %.pre364 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag8

tag10:                                            ; preds = %tag8
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest95 unwind label %cleanup-lpad.loopexit

tag11:                                            ; preds = %tag29, %tag8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %20 = insertvalue { {}*, i64 } undef, {}* %40, 0
  %21 = insertvalue { {}*, i64 } %20, i64 1, 1
  ret { {}*, i64 } %21

tag14:                                            ; preds = %tag14.backedge, %tag14.preheader
  %I.0 = phi {}* [ null, %tag14.preheader ], [ %I.0.be, %tag14.backedge ]
  %22 = ptrtoint {}* %I.0 to i64
  %fixnum-tag-only113311 = and i64 %22, 3
  %fixnump-test114 = icmp eq i64 %fixnum-tag-only113311, 0
  br i1 %fixnump-test114, label %tag29, label %tag4

tag15:                                            ; preds = %normal-dest102
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit

tag19:                                            ; preds = %normal-dest102
  %25 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %22, i64 4)
  %result = extractvalue { i64, i1 } %25, 0
  %overflow = extractvalue { i64, i1 } %25, 1
  %26 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag21, label %tag14.backedge

tag14.backedge:                                   ; preds = %tag19, %normal-dest123, %normal-dest147
  %I.0.be = phi {}* [ %I.2, %normal-dest147 ], [ %I.1, %normal-dest123 ], [ %26, %tag19 ]
  br label %tag14

tag20:                                            ; preds = %normal-dest66, %process-rest-argument
  %27 = phi {}* [ %41, %process-rest-argument ], [ %50, %normal-dest66 ]
  %format-arg-158791.0 = phi {}* [ %format-arg-158791.1352355, %process-rest-argument ], [ %format-arg-158791.2, %normal-dest66 ]
  %28 = icmp eq {}* %G158814.0359, %27
  br i1 %28, label %tag24, label %tag7

tag21:                                            ; preds = %tag19
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest140 unwind label %cleanup-lpad.loopexit

tag24:                                            ; preds = %tag20
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest161 unwind label %cleanup-lpad.loopexit.split-lp

tag28:                                            ; preds = %tag7
  %33 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest179 unwind label %cleanup-lpad.loopexit.split-lp

tag29:                                            ; preds = %tag14
  %35 = icmp slt {}* %I.0, inttoptr (i64 8 to {}*)
  br i1 %35, label %tag9, label %tag11

tag33:                                            ; preds = %normal-dest186, %tag7
  %format-arg-158793.0 = phi {}* [ %format-arg-158793.1, %tag7 ], [ %format-arg-158793.2, %normal-dest186 ]
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest196 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag4, %normal-dest73, %tag10, %normal-dest95, %tag15, %normal-dest116, %tag21, %normal-dest140
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %tag, %normal-dest63, %tag24, %normal-dest161, %tag28, %normal-dest179, %tag33, %normal-dest196, %normal-dest203, %normal-dest209, %normal-dest216, %normal-dest222, %normal-dest229, %normal-dest240, %normal-dest247, %normal-dest253, %normal-dest260, %normal-dest266
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs40 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-141 = add i64 %rem-nargs40, -1
  store i64 %rem-nargs-141, i64* %"remaining-nargs*", align 8
  %vaarg42 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args47 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args47, label %opt-cont46, label %opt-cont.opt-cont46.thread_crit_edge

opt-cont.opt-cont46.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont46:                                       ; preds = %opt-cont
  %rem-nargs48 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-149 = add i64 %rem-nargs48, -1
  store i64 %rem-nargs-149, i64* %"remaining-nargs*", align 8
  %vaarg50 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args55 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args55, label %opt-cont46.opt-init53_crit_edge, label %opt-arg52

opt-cont46.opt-init53_crit_edge:                  ; preds = %opt-cont46
  %.pre363 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg52:                                        ; preds = %opt-cont46
  %rem-nargs56 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-157 = add i64 %rem-nargs56, -1
  store i64 %rem-nargs-157, i64* %"remaining-nargs*", align 8
  %vaarg58 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont46.opt-init53_crit_edge, %opt-cont.opt-cont46.thread_crit_edge, %opt-cont.thread, %opt-arg52
  %format-arg-158792.1361 = phi {}* [ %vaarg50, %opt-arg52 ], [ %vaarg50, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G158814.0359 = phi {}* [ %38, %opt-arg52 ], [ %38, %opt-cont46.opt-init53_crit_edge ], [ %.pre, %opt-cont.opt-cont46.thread_crit_edge ], [ %39, %opt-cont.thread ]
  %G158815.0350357 = phi {}* [ %38, %opt-arg52 ], [ %38, %opt-cont46.opt-init53_crit_edge ], [ %38, %opt-cont.opt-cont46.thread_crit_edge ], [ %39, %opt-cont.thread ]
  %format-arg-158791.1352355 = phi {}* [ %vaarg42, %opt-arg52 ], [ %vaarg42, %opt-cont46.opt-init53_crit_edge ], [ %vaarg42, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G158813.0 = phi {}* [ %38, %opt-arg52 ], [ %.pre363, %opt-cont46.opt-init53_crit_edge ], [ %.pre, %opt-cont.opt-cont46.thread_crit_edge ], [ %39, %opt-cont.thread ]
  %format-arg-158793.1 = phi {}* [ %vaarg58, %opt-arg52 ], [ undef, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %40 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %41 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %42 = icmp eq {}* %G158815.0350357, %41
  br i1 %42, label %tag, label %tag20

normal-dest63:                                    ; preds = %tag
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %44 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %45 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %47 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 173), align 8
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %43, {}* %44, {}* %45, {}* %46, {}* %47, {}* %48, {}* inttoptr (i64 44 to {}*))
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest66:                                    ; preds = %normal-dest63
  %.elt341 = extractvalue { {}*, i64 } %49, 0
  %.elt343 = extractvalue { {}*, i64 } %49, 1
  %cond288 = icmp eq i64 %.elt343, 0
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158791.2 = select i1 %cond288, {}* %50, {}* %.elt341
  br label %tag20

normal-dest73:                                    ; preds = %tag4
  %ptrtoint75 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint76 = add i64 %ptrtoint75, 7
  %entry-point-addr77 = inttoptr i64 %entry-point-addr-uint76 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point78 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr77, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point78({}* %12, i64 2, {}* %I.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest81 unwind label %cleanup-lpad.loopexit

normal-dest81:                                    ; preds = %normal-dest73
  %.elt313 = extractvalue { {}*, i64 } %51, 0
  %.elt315 = extractvalue { {}*, i64 } %51, 1
  %cond = icmp eq i64 %.elt315, 0
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G161161.1 = select i1 %cond, {}* %52, {}* %.elt313
  br label %tag8

normal-dest95:                                    ; preds = %tag10
  %ptrtoint96 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint97 = add i64 %ptrtoint96, 7
  %entry-point-addr98 = inttoptr i64 %entry-point-addr-uint97 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point99 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr98, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point99({}* %19, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest102 unwind label %cleanup-lpad.loopexit

normal-dest102:                                   ; preds = %normal-dest95
  br i1 %fixnump-test114, label %tag19, label %tag15

normal-dest116:                                   ; preds = %tag15
  %ptrtoint117 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint118 = add i64 %ptrtoint117, 7
  %entry-point-addr119 = inttoptr i64 %entry-point-addr-uint118 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point120 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr119, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point120({}* %24, i64 2, {}* %I.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit

normal-dest123:                                   ; preds = %normal-dest116
  %.elt322 = extractvalue { {}*, i64 } %54, 0
  %.elt324 = extractvalue { {}*, i64 } %54, 1
  %cond284 = icmp eq i64 %.elt324, 0
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.1 = select i1 %cond284, {}* %55, {}* %.elt322
  br label %tag14.backedge

normal-dest140:                                   ; preds = %tag21
  %ptrtoint141 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint142 = add i64 %ptrtoint141, 7
  %entry-point-addr143 = inttoptr i64 %entry-point-addr-uint142 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point144 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr143, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point144({}* %30, i64 1, {}* %26, {}* null, {}* null, {}* null)
          to label %normal-dest147 unwind label %cleanup-lpad.loopexit

normal-dest147:                                   ; preds = %normal-dest140
  %.elt326 = extractvalue { {}*, i64 } %56, 0
  %.elt328 = extractvalue { {}*, i64 } %56, 1
  %cond285 = icmp eq i64 %.elt328, 0
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.2 = select i1 %cond285, {}* %57, {}* %.elt326
  br label %tag14.backedge

normal-dest161:                                   ; preds = %tag24
  %58 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %60 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %62 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 173), align 8
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint162 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint163 = add i64 %ptrtoint162, 7
  %entry-point-addr164 = inttoptr i64 %entry-point-addr-uint163 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point165 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr164, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point165({}* %32, i64 7, {}* %58, {}* %59, {}* %60, {}* %61, {}* %62, {}* %63, {}* inttoptr (i64 96 to {}*))
          to label %normal-dest168 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest168:                                   ; preds = %normal-dest161
  %.elt337 = extractvalue { {}*, i64 } %64, 0
  %.elt339 = extractvalue { {}*, i64 } %64, 1
  %cond287 = icmp eq i64 %.elt339, 0
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158792.2 = select i1 %cond287, {}* %65, {}* %.elt337
  br label %tag7

normal-dest179:                                   ; preds = %tag28
  %66 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %68 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %69 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %70 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 173), align 8
  %71 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint180 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint181 = add i64 %ptrtoint180, 7
  %entry-point-addr182 = inttoptr i64 %entry-point-addr-uint181 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point183 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr182, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point183({}* %34, i64 7, {}* %66, {}* %67, {}* %68, {}* %69, {}* %70, {}* %71, {}* inttoptr (i64 148 to {}*))
          to label %normal-dest186 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest186:                                   ; preds = %normal-dest179
  %.elt333 = extractvalue { {}*, i64 } %72, 0
  %.elt335 = extractvalue { {}*, i64 } %72, 1
  %cond286 = icmp eq i64 %.elt335, 0
  %73 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-158793.2 = select i1 %cond286, {}* %73, {}* %.elt333
  br label %tag33

normal-dest196:                                   ; preds = %tag33
  %74 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 174), align 16
  %ptrtoint197 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint198 = add i64 %ptrtoint197, 7
  %entry-point-addr199 = inttoptr i64 %entry-point-addr-uint198 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point200 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr199, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point200({}* %37, i64 2, {}* %74, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest203 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest203:                                   ; preds = %normal-dest196
  %76 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %77 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest209 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest209:                                   ; preds = %normal-dest203
  %79 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint210 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint211 = add i64 %ptrtoint210, 7
  %entry-point-addr212 = inttoptr i64 %entry-point-addr-uint211 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point213 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr212, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point213({}* %78, i64 8, {}* %vaarg, {}* %format-arg-158791.0, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 16 to {}*), {}* null, {}* %76, {}* inttoptr (i64 258 to {}*), {}* %79)
          to label %normal-dest216 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest216:                                   ; preds = %normal-dest209
  %81 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %82 = invoke {}* @cc_safe_fdefinition({}* %81)
          to label %normal-dest222 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest222:                                   ; preds = %normal-dest216
  %83 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 177), align 8
  %ptrtoint223 = ptrtoint {}* %82 to i64
  %entry-point-addr-uint224 = add i64 %ptrtoint223, 7
  %entry-point-addr225 = inttoptr i64 %entry-point-addr-uint224 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point226 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr225, align 8
  %84 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point226({}* %82, i64 2, {}* %83, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest229 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest229:                                   ; preds = %normal-dest222
  %85 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %86 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest240 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest240:                                   ; preds = %normal-dest229
  %88 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint241 = ptrtoint {}* %87 to i64
  %entry-point-addr-uint242 = add i64 %ptrtoint241, 7
  %entry-point-addr243 = inttoptr i64 %entry-point-addr-uint242 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point244 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr243, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point244({}* %87, i64 8, {}* %vaarg, {}* %format-arg-158792.0, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 16 to {}*), {}* null, {}* %85, {}* inttoptr (i64 258 to {}*), {}* %88)
          to label %normal-dest247 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest247:                                   ; preds = %normal-dest240
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest253 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest253:                                   ; preds = %normal-dest247
  %92 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 178), align 16
  %ptrtoint254 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint255 = add i64 %ptrtoint254, 7
  %entry-point-addr256 = inttoptr i64 %entry-point-addr-uint255 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point257 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr256, align 8
  %93 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point257({}* %91, i64 2, {}* %92, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest260 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest260:                                   ; preds = %normal-dest253
  %94 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %95 = invoke {}* @cc_safe_fdefinition({}* %94)
          to label %normal-dest266 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest266:                                   ; preds = %normal-dest260
  %96 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint267 = ptrtoint {}* %95 to i64
  %entry-point-addr-uint268 = add i64 %ptrtoint267, 7
  %entry-point-addr269 = inttoptr i64 %entry-point-addr-uint268 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point270 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr269, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point270({}* %95, i64 8, {}* %vaarg, {}* %format-arg-158793.0, {}* %96, {}* %96, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %tag14.preheader unwind label %cleanup-lpad.loopexit.split-lp

tag14.preheader:                                  ; preds = %normal-dest266
  br label %tag14
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitmessung.lisp^68^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !42 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitmessung.lisp^68^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G162120.0 = phi {}* [ %18, %header-check-br ], [ %G162120.1, %normal-dest26 ], [ %G162120.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 410), align 16
  %ptrtoint43 = ptrtoint {}* %G162120.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G162120.0, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN_2", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 410), align 16
  %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN_2" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 24), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162120.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag4

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %28 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 409), align 8
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162120.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 45), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 412), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN_2", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 47), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 419), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->PRO-MERK-HASH-TABELLE-AUSGEBEN_2", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 52), align 16
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 540 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 410), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !43 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc3650 unwind label %cleanup-lpad

.noexc3650:                                       ; preds = %13
  unreachable

tag1:                                             ; preds = %normal-dest2884
  %14 = icmp eq {}* %x2885.0, %697
  %.val3772 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162225.0 = select i1 %14, {}* %.val3772, {}* %697
  %15 = icmp eq {}* %G162225.0, %697
  br i1 %15, label %tag126, label %tag26

tag2:                                             ; preds = %normal-dest2424
  %16 = add i64 %600, -3
  %17 = inttoptr i64 %16 to {}**
  %18 = load {}*, {}** %17, align 8
  br label %tag358

tag11:                                            ; preds = %tag183, %header-check-br1909
  %19 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest478 unwind label %cleanup-lpad

tag12:                                            ; preds = %tag47
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest492 unwind label %cleanup-lpad

tag21:                                            ; preds = %tag70
  %trunc = trunc i64 %54 to i3
  switch i3 %trunc, label %tag284 [
    i3 -2, label %tag253
    i3 1, label %header-check-br747
  ]

tag22:                                            ; preds = %normal-dest755, %tag336, %tag93
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 383), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest521 unwind label %cleanup-lpad

tag26:                                            ; preds = %tag1, %normal-dest1311, %tag271
  %G162187.0 = phi {}* [ %141, %tag271 ], [ %G162187.1, %normal-dest1311 ], [ %697, %tag1 ]
  %25 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest645 unwind label %cleanup-lpad

tag27:                                            ; preds = %header-check-br1385, %tag131, %tag230, %header-check-br1988, %tag95
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest679 unwind label %cleanup-lpad

tag33:                                            ; preds = %normal-dest966
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 156), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest710 unwind label %cleanup-lpad

tag35:                                            ; preds = %normal-dest2048
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 162), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest724 unwind label %cleanup-lpad

tag40:                                            ; preds = %header-check-br2710, %normal-dest1481, %normal-dest1268
  %G164481.0 = phi {}* [ %G164481.1, %normal-dest1268 ], [ %G164481.2, %normal-dest1481 ], [ %"closure->LAMBDA1432", %header-check-br2710 ]
  %33 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 171), align 8
  %34 = invoke {}* @cc_safe_symbol_value({}* %33)
          to label %normal-dest755 unwind label %cleanup-lpad

tag45:                                            ; preds = %normal-dest1797
  %35 = add i64 %460, -3
  %36 = inttoptr i64 %35 to {}**
  %37 = load {}*, {}** %36, align 8
  br label %tag308

tag47:                                            ; preds = %normal-dest2424
  %38 = icmp eq {}* %x2425.0, %599
  %G162287.0 = select i1 %38, {}* %.val3770, {}* %599
  %39 = icmp eq {}* %G162287.0, %599
  br i1 %39, label %tag12, label %tag358

tag48:                                            ; preds = %normal-dest865
  %40 = icmp eq {}* %x866.0, %306
  %.val3766 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162362.0 = select i1 %40, {}* %.val3766, {}* %306
  %41 = icmp eq {}* %G162362.0, %306
  br i1 %41, label %tag310, label %tag302

tag50:                                            ; preds = %normal-dest1797
  %42 = icmp eq {}* %x1798.0, %459
  %G162451.0 = select i1 %42, {}* %.val3762, {}* %459
  %43 = icmp eq {}* %G162451.0, %459
  br i1 %43, label %tag272, label %tag308

tag53:                                            ; preds = %normal-dest2175, %normal-dest2029, %normal-dest912
  %G164765.0 = phi {}* [ %G164765.1, %normal-dest912 ], [ %491, %normal-dest2029 ], [ %535, %normal-dest2175 ]
  %ptrtoint812 = ptrtoint {}* %123 to i64
  %entry-point-addr-uint813 = add i64 %ptrtoint812, 7
  %entry-point-addr814 = inttoptr i64 %entry-point-addr-uint813 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point815 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr814, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point815({}* %123, i64 1, {}* %G164765.0, {}* null, {}* null, {}* null)
          to label %normal-dest818 unwind label %cleanup-lpad

tag57:                                            ; preds = %tag253
  %45 = invoke float @from_object_float({}* %495)
          to label %normal-dest837 unwind label %cleanup-lpad

tag59:                                            ; preds = %tag67, %normal-dest2062, %tag195
  %G162351.0 = phi {}* [ %104, %tag195 ], [ %G162351.1, %normal-dest2062 ], [ %647, %tag67 ]
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest842 unwind label %cleanup-lpad

tag65:                                            ; preds = %switch.early.test3810, %tag265
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest893 unwind label %cleanup-lpad

tag67:                                            ; preds = %normal-dest2604
  %50 = icmp eq {}* %x2605.0, %647
  %.val3764 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162389.0 = select i1 %50, {}* %.val3764, {}* %647
  %51 = icmp eq {}* %G162389.0, %647
  br i1 %51, label %tag262, label %tag59

tag69:                                            ; preds = %header-check-br1503, %tag84, %tag254, %header-check-br1935, %tag217
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest903 unwind label %cleanup-lpad

tag70:                                            ; preds = %switch.early.test, %switch.early.test, %header-check-br1563, %header-check-br1570, %header-check-br1570, %tag121
  %54 = ptrtoint %"class.core::T_O"* %494 to i64
  %fixnum-tag-only9193136 = and i64 %54, 3
  %fixnump-test920 = icmp eq i64 %fixnum-tag-only9193136, 0
  br i1 %fixnump-test920, label %tag284, label %tag21

tag71:                                            ; preds = %tag309
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest922 unwind label %cleanup-lpad

tag76:                                            ; preds = %tag120
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest953 unwind label %cleanup-lpad

tag77:                                            ; preds = %tag154, %normal-dest1865, %tag212
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA967" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %59, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.10", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.10^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 0)
          to label %normal-dest966 unwind label %cleanup-lpad

tag84:                                            ; preds = %tag254
  %trunc3794 = trunc i64 %125 to i3
  switch i3 %trunc3794, label %tag69 [
    i3 -2, label %tag217
    i3 1, label %header-check-br1503
  ]

tag93:                                            ; preds = %normal-dest2166, %normal-dest1929, %header-check-br1531
  %G164399.0 = phi {}* [ %"closure->LAMBDA1432", %header-check-br1531 ], [ %G164399.1, %normal-dest1929 ], [ %G164399.2, %normal-dest2166 ]
  %60 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 373), align 8
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 374), align 16
  %62 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 375), align 8
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 376), align 16
  %64 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 377), align 8
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 378), align 16
  %66 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 379), align 8
  %ptrtoint1053 = ptrtoint {}* %G164399.0 to i64
  %entry-point-addr-uint1054 = add i64 %ptrtoint1053, 7
  %entry-point-addr1055 = inttoptr i64 %entry-point-addr-uint1054 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1056 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1055, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1056({}* %G164399.0, i64 8, {}* %400, {}* %60, {}* %61, {}* %62, {}* %63, {}* %64, {}* %65, {}* %66)
          to label %tag22 unwind label %cleanup-lpad

tag95:                                            ; preds = %tag131
  %68 = icmp eq i64 %tag-only2947, 6
  br i1 %68, label %tag138, label %tag27

tag97:                                            ; preds = %normal-dest1138
  %69 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 162), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest1087 unwind label %cleanup-lpad

tag101:                                           ; preds = %normal-dest1431
  %71 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 156), align 16
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest1131 unwind label %cleanup-lpad

tag102:                                           ; preds = %normal-dest731, %header-check-br1513
  %73 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest1145 unwind label %cleanup-lpad

tag106:                                           ; preds = %normal-dest1607, %header-check-br2835
  %75 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest1200 unwind label %cleanup-lpad

tag113:                                           ; preds = %normal-dest2069, %normal-dest1374, %normal-dest688
  %G164851.0 = phi {}* [ %G164851.1, %normal-dest688 ], [ %387, %normal-dest1374 ], [ %509, %normal-dest2069 ]
  %ptrtoint1233 = ptrtoint {}* %118 to i64
  %entry-point-addr-uint1234 = add i64 %ptrtoint1233, 7
  %entry-point-addr1235 = inttoptr i64 %entry-point-addr-uint1234 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1236 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1235, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1236({}* %118, i64 1, {}* %G164851.0, {}* null, {}* null, {}* null)
          to label %normal-dest1239 unwind label %cleanup-lpad

tag116:                                           ; preds = %normal-dest982
  %78 = icmp eq i64 %tag-only2947, 6
  %fixnum-tag-only29523482 = and i64 %ptrtoint2946, 3
  %fixnump-test2953 = icmp eq i64 %fixnum-tag-only29523482, 0
  %or.cond3758 = or i1 %78, %fixnump-test2953
  br i1 %or.cond3758, label %tag230, label %tag143

tag117:                                           ; preds = %tag326, %header-check-br1522
  %79 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest1261 unwind label %cleanup-lpad

tag120:                                           ; preds = %normal-dest668
  %81 = icmp eq {}* %x669.0, %268
  %.val3774 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162198.0 = select i1 %81, {}* %.val3774, {}* %268
  %82 = icmp eq {}* %G162198.0, %268
  br i1 %82, label %tag76, label %tag293

tag121:                                           ; preds = %normal-dest2662
  %83 = icmp eq i64 %tag-only1572, 6
  %fixnum-tag-only14713131 = and i64 %ptrtoint1571, 3
  %fixnump-test1472 = icmp eq i64 %fixnum-tag-only14713131, 0
  %or.cond3750 = or i1 %83, %fixnump-test1472
  br i1 %or.cond3750, label %tag70, label %tag153

tag126:                                           ; preds = %tag1
  %84 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest1304 unwind label %cleanup-lpad

tag131:                                           ; preds = %tag230
  %trunc3791 = trunc i64 %119 to i3
  switch i3 %trunc3791, label %tag27 [
    i3 -2, label %tag95
    i3 1, label %header-check-br1385
  ]

tag138:                                           ; preds = %tag95
  %86 = invoke float @from_object_float({}* %469)
          to label %normal-dest1373 unwind label %cleanup-lpad

tag143:                                           ; preds = %switch.early.test3809, %tag116
  %87 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest1400 unwind label %cleanup-lpad

tag145:                                           ; preds = %normal-dest717
  %ptrtoint1411 = ptrtoint {}* %"closure->LAMBDA967" to i64
  %tag-only1412 = and i64 %ptrtoint1411, 7
  %test1413 = icmp eq i64 %tag-only1412, 1
  br i1 %test1413, label %header-check-br1410, label %tag267

tag150:                                           ; preds = %normal-dest1181, %normal-dest2674, %normal-dest1682
  %89 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA1432" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %89, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.11", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.11^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 0)
          to label %normal-dest1431 unwind label %cleanup-lpad

tag153:                                           ; preds = %switch.early.test, %tag121
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest1459 unwind label %cleanup-lpad

tag154:                                           ; preds = %normal-dest2753, %normal-dest2207, %header-check-br1738
  %G165232.0 = phi {}* [ %"closure->LAMBDA2778", %header-check-br1738 ], [ %G165232.1, %normal-dest2207 ], [ %G165232.2, %normal-dest2753 ]
  %92 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 352), align 16
  %93 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 353), align 8
  %94 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 354), align 16
  %ptrtoint1460 = ptrtoint {}* %G165232.0 to i64
  %entry-point-addr-uint1461 = add i64 %ptrtoint1460, 7
  %entry-point-addr1462 = inttoptr i64 %entry-point-addr-uint1461 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1463 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1462, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1463({}* %G165232.0, i64 4, {}* %669, {}* %92, {}* %93, {}* %94)
          to label %tag77 unwind label %cleanup-lpad

tag163:                                           ; preds = %header-check-br1549
  %96 = invoke double @from_object_double({}* nonnull %495)
          to label %normal-dest1510 unwind label %cleanup-lpad

tag165:                                           ; preds = %normal-dest865
  %97 = add i64 %307, 5
  %98 = inttoptr i64 %97 to {}**
  %99 = load {}*, {}** %98, align 8
  br label %tag302

tag167:                                           ; preds = %normal-dest1138
  %ptrtoint1532 = ptrtoint {}* %"closure->LAMBDA1432" to i64
  %tag-only1533 = and i64 %ptrtoint1532, 7
  %test1534 = icmp eq i64 %tag-only1533, 1
  br i1 %test1534, label %header-check-br1531, label %tag236

tag182:                                           ; preds = %normal-dest717
  %100 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 162), align 16
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest1600 unwind label %cleanup-lpad

tag183:                                           ; preds = %normal-dest2777
  %ptrtoint1623 = ptrtoint {}* %"closure->LAMBDA2778" to i64
  %tag-only1624 = and i64 %ptrtoint1623, 7
  %test1625 = icmp eq i64 %tag-only1624, 1
  br i1 %test1625, label %header-check-br1622, label %tag11

tag195:                                           ; preds = %normal-dest2604
  %102 = add i64 %648, 5
  %103 = inttoptr i64 %102 to {}**
  %104 = load {}*, {}** %103, align 8
  br label %tag59

tag207:                                           ; preds = %normal-dest2048
  %ptrtoint1739 = ptrtoint {}* %"closure->LAMBDA2778" to i64
  %tag-only1740 = and i64 %ptrtoint1739, 7
  %test1741 = icmp eq i64 %tag-only1740, 1
  br i1 %test1741, label %header-check-br1738, label %tag286

tag208:                                           ; preds = %normal-dest668
  %105 = add i64 %269, 5
  %106 = inttoptr i64 %105 to {}**
  %107 = load {}*, {}** %106, align 8
  br label %tag293

tag212:                                           ; preds = %normal-dest2829, %normal-dest1152, %header-check-br737
  %G165249.0 = phi {}* [ %"closure->LAMBDA2778", %header-check-br737 ], [ %G165249.1, %normal-dest1152 ], [ %G165249.2, %normal-dest2829 ]
  %108 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 352), align 16
  %109 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 353), align 8
  %110 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 354), align 16
  %ptrtoint1762 = ptrtoint {}* %G165249.0 to i64
  %entry-point-addr-uint1763 = add i64 %ptrtoint1762, 7
  %entry-point-addr1764 = inttoptr i64 %entry-point-addr-uint1763 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1765 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1764, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1765({}* %G165249.0, i64 4, {}* %OUT161912.0, {}* %108, {}* %109, {}* %110)
          to label %tag77 unwind label %cleanup-lpad

tag214:                                           ; preds = %tag309, %normal-dest929, %tag318
  %G162440.0 = phi {}* [ %165, %tag318 ], [ %G162440.1, %normal-dest929 ], [ %257, %tag309 ]
  %112 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %113 = invoke {}* @cc_safe_fdefinition({}* %112)
          to label %normal-dest1774 unwind label %cleanup-lpad

tag217:                                           ; preds = %tag84
  %114 = icmp eq i64 %tag-only938, 6
  br i1 %114, label %tag259, label %tag69

tag220:                                           ; preds = %normal-dest2965, %header-check-br1622, %normal-dest485
  %G165302.0 = phi {}* [ %G165302.1, %normal-dest485 ], [ %"closure->LAMBDA2778", %header-check-br1622 ], [ %G165302.2, %normal-dest2965 ]
  %115 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 171), align 8
  %116 = invoke {}* @cc_safe_symbol_value({}* %115)
          to label %normal-dest1865 unwind label %cleanup-lpad

tag228:                                           ; preds = %normal-dest1818, %header-check-br1613, %normal-dest1207
  %G164821.0 = phi {}* [ %G164821.1, %normal-dest1207 ], [ %"closure->LAMBDA967", %header-check-br1613 ], [ %G164821.2, %normal-dest1818 ]
  %117 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %118 = invoke {}* @cc_safe_fdefinition({}* %117)
          to label %normal-dest1900 unwind label %cleanup-lpad

tag230:                                           ; preds = %switch.early.test3809, %switch.early.test3809, %header-check-br2551, %header-check-br2945, %header-check-br2945, %tag116
  %119 = ptrtoint %"class.core::T_O"* %468 to i64
  %fixnum-tag-only19073487 = and i64 %119, 3
  %fixnump-test1908 = icmp eq i64 %fixnum-tag-only19073487, 0
  br i1 %fixnump-test1908, label %tag27, label %tag131

tag236:                                           ; preds = %tag167, %header-check-br943
  %120 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %121 = invoke {}* @cc_safe_fdefinition({}* %120)
          to label %normal-dest1922 unwind label %cleanup-lpad

tag242:                                           ; preds = %normal-dest2080, %normal-dest1756, %header-check-br1410
  %G164735.0 = phi {}* [ %"closure->LAMBDA967", %header-check-br1410 ], [ %G164735.1, %normal-dest1756 ], [ %G164735.2, %normal-dest2080 ]
  %122 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest1957 unwind label %cleanup-lpad

tag253:                                           ; preds = %tag21
  %124 = icmp eq i64 %tag-only1572, 6
  br i1 %124, label %tag57, label %tag284

tag254:                                           ; preds = %switch.early.test3810, %switch.early.test3810, %header-check-br2803, %header-check-br936, %header-check-br936, %tag265
  %125 = ptrtoint %"class.core::T_O"* %483 to i64
  %fixnum-tag-only20123529 = and i64 %125, 3
  %fixnump-test2013 = icmp eq i64 %fixnum-tag-only20123529, 0
  br i1 %fixnump-test2013, label %tag69, label %tag84

tag259:                                           ; preds = %tag217
  %126 = invoke float @from_object_float({}* %484)
          to label %normal-dest2028 unwind label %cleanup-lpad

tag260:                                           ; preds = %header-check-br2701, %normal-dest2108, %normal-dest1282
  %G165012.0 = phi {}* [ %G165012.1, %normal-dest1282 ], [ %G165012.2, %normal-dest2108 ], [ %"closure->LAMBDA967", %header-check-br2701 ]
  %127 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 171), align 8
  %128 = invoke {}* @cc_safe_symbol_value({}* %127)
          to label %normal-dest2032 unwind label %cleanup-lpad

tag261:                                           ; preds = %normal-dest2777
  %129 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 156), align 16
  %130 = invoke {}* @cc_safe_fdefinition({}* %129)
          to label %normal-dest2041 unwind label %cleanup-lpad

tag262:                                           ; preds = %tag67
  %131 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %132 = invoke {}* @cc_safe_fdefinition({}* %131)
          to label %normal-dest2055 unwind label %cleanup-lpad

tag264:                                           ; preds = %header-check-br1988
  %133 = invoke double @from_object_double({}* nonnull %469)
          to label %normal-dest2068 unwind label %cleanup-lpad

tag265:                                           ; preds = %normal-dest1360
  %134 = icmp eq i64 %tag-only938, 6
  %fixnum-tag-only13763524 = and i64 %ptrtoint937, 3
  %fixnump-test1377 = icmp eq i64 %fixnum-tag-only13763524, 0
  %or.cond = or i1 %134, %fixnump-test1377
  br i1 %or.cond, label %tag254, label %tag65

tag267:                                           ; preds = %tag145, %header-check-br1421
  %135 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %136 = invoke {}* @cc_safe_fdefinition({}* %135)
          to label %normal-dest2073 unwind label %cleanup-lpad

tag270:                                           ; preds = %tag325, %header-check-br2810
  %137 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %138 = invoke {}* @cc_safe_fdefinition({}* %137)
          to label %normal-dest2101 unwind label %cleanup-lpad

tag271:                                           ; preds = %normal-dest2884
  %139 = add i64 %698, 5
  %140 = inttoptr i64 %139 to {}**
  %141 = load {}*, {}** %140, align 8
  br label %tag26

tag272:                                           ; preds = %tag50
  %142 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %143 = invoke {}* @cc_safe_fdefinition({}* %142)
          to label %normal-dest2115 unwind label %cleanup-lpad

tag279:                                           ; preds = %header-check-br1935
  %144 = invoke double @from_object_double({}* nonnull %484)
          to label %normal-dest2174 unwind label %cleanup-lpad

tag282:                                           ; preds = %normal-dest2538
  %145 = icmp eq {}* %x2539.0, %630
  %G162318.0 = select i1 %145, {}* %.val3768, {}* %630
  %146 = icmp eq {}* %G162318.0, %630
  br i1 %146, label %tag363, label %tag297

tag284:                                           ; preds = %header-check-br747, %tag21, %tag70, %tag253, %header-check-br1549
  %147 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %148 = invoke {}* @cc_safe_fdefinition({}* %147)
          to label %normal-dest2186 unwind label %cleanup-lpad

tag286:                                           ; preds = %tag207, %header-check-br1540
  %149 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %150 = invoke {}* @cc_safe_fdefinition({}* %149)
          to label %normal-dest2200 unwind label %cleanup-lpad

tag293:                                           ; preds = %tag120, %normal-dest960, %tag208
  %G162188.0 = phi {}* [ %107, %tag208 ], [ %G162188.1, %normal-dest960 ], [ %268, %tag120 ]
  %ptrtoint2234 = ptrtoint {}* %685 to i64
  %entry-point-addr-uint2235 = add i64 %ptrtoint2234, 7
  %entry-point-addr2236 = inttoptr i64 %entry-point-addr-uint2235 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2237 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2236, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2237({}* %685, i64 3, {}* %"closure->LAMBDA2859", {}* %G162187.0, {}* %G162188.0, {}* null)
          to label %normal-dest2240 unwind label %cleanup-lpad

tag295:                                           ; preds = %normal-dest1094, %header-check-br1631
  %152 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %153 = invoke {}* @cc_safe_fdefinition({}* %152)
          to label %normal-dest2386 unwind label %cleanup-lpad

tag297:                                           ; preds = %tag282, %normal-dest2901, %tag374
  %G162276.0 = phi {}* [ %180, %tag374 ], [ %G162276.1, %normal-dest2901 ], [ %630, %tag282 ]
  %154 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %155 = invoke {}* @cc_safe_fdefinition({}* %154)
          to label %normal-dest2401 unwind label %cleanup-lpad

tag298:                                           ; preds = %normal-dest2193, %normal-dest1511, %normal-dest839
  %G165042.0 = phi {}* [ %297, %normal-dest839 ], [ %417, %normal-dest1511 ], [ %G165042.1, %normal-dest2193 ]
  %ptrtoint2437 = ptrtoint {}* %493 to i64
  %entry-point-addr-uint2438 = add i64 %ptrtoint2437, 7
  %entry-point-addr2439 = inttoptr i64 %entry-point-addr-uint2438 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2440 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2439, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2440({}* %493, i64 1, {}* %G165042.0, {}* null, {}* null, {}* null)
          to label %normal-dest2443 unwind label %cleanup-lpad

tag302:                                           ; preds = %tag48, %normal-dest2627, %tag165
  %G162352.0 = phi {}* [ %99, %tag165 ], [ %G162352.1, %normal-dest2627 ], [ %306, %tag48 ]
  %ptrtoint2472 = ptrtoint {}* %635 to i64
  %entry-point-addr-uint2473 = add i64 %ptrtoint2472, 7
  %entry-point-addr2474 = inttoptr i64 %entry-point-addr-uint2473 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2475 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2474, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2475({}* %635, i64 3, {}* %"closure->LAMBDA2579", {}* %G162351.0, {}* %G162352.0, {}* null)
          to label %normal-dest2478 unwind label %cleanup-lpad

tag308:                                           ; preds = %tag50, %normal-dest2122, %tag45
  %G162441.0 = phi {}* [ %37, %tag45 ], [ %G162441.1, %normal-dest2122 ], [ %459, %tag50 ]
  %ptrtoint2564 = ptrtoint {}* %246 to i64
  %entry-point-addr-uint2565 = add i64 %ptrtoint2564, 7
  %entry-point-addr2566 = inttoptr i64 %entry-point-addr-uint2565 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2567 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2566, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2567({}* %246, i64 2, {}* %G162440.0, {}* %G162441.0, {}* null, {}* null)
          to label %normal-dest2570 unwind label %cleanup-lpad

tag309:                                           ; preds = %normal-dest615
  %159 = icmp eq {}* %x616.0, %257
  %G162482.0 = select i1 %159, {}* %.val, {}* %257
  %160 = icmp eq {}* %G162482.0, %257
  br i1 %160, label %tag71, label %tag214

tag310:                                           ; preds = %tag48
  %161 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %162 = invoke {}* @cc_safe_fdefinition({}* %161)
          to label %normal-dest2620 unwind label %cleanup-lpad

tag318:                                           ; preds = %normal-dest615
  %163 = add i64 %258, -3
  %164 = inttoptr i64 %163 to {}**
  %165 = load {}*, {}** %164, align 8
  br label %tag214

tag323:                                           ; preds = %normal-dest412
  call void @cc_writeCell({}* %183, {}* inttoptr (i64 400 to {}*))
  br label %tag344

tag325:                                           ; preds = %normal-dest966
  %ptrtoint2702 = ptrtoint {}* %"closure->LAMBDA967" to i64
  %tag-only2703 = and i64 %ptrtoint2702, 7
  %test2704 = icmp eq i64 %tag-only2703, 1
  br i1 %test2704, label %header-check-br2701, label %tag270

tag326:                                           ; preds = %normal-dest1431
  %ptrtoint2711 = ptrtoint {}* %"closure->LAMBDA1432" to i64
  %tag-only2712 = and i64 %ptrtoint2711, 7
  %test2713 = icmp eq i64 %tag-only2712, 1
  br i1 %test2713, label %header-check-br2710, label %tag117

tag336:                                           ; preds = %normal-dest2393, %normal-dest1124, %header-check-br1100
  %G164420.0 = phi {}* [ %"closure->LAMBDA1432", %header-check-br1100 ], [ %G164420.1, %normal-dest1124 ], [ %G164420.2, %normal-dest2393 ]
  %166 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 373), align 8
  %167 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 374), align 16
  %168 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 375), align 8
  %169 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 376), align 16
  %170 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 377), align 8
  %171 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 378), align 16
  %172 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 379), align 8
  %ptrtoint2759 = ptrtoint {}* %G164420.0 to i64
  %entry-point-addr-uint2760 = add i64 %ptrtoint2759, 7
  %entry-point-addr2761 = inttoptr i64 %entry-point-addr-uint2760 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2762 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2761, align 8
  %173 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2762({}* %G164420.0, i64 8, {}* %OUT161986.0, {}* %166, {}* %167, {}* %168, {}* %169, {}* %170, {}* %171, {}* %172)
          to label %tag22 unwind label %cleanup-lpad

tag344:                                           ; preds = %tag323, %normal-dest412
  %174 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA2778" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %174, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.13", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.13^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 0)
          to label %normal-dest2777 unwind label %cleanup-lpad

tag358:                                           ; preds = %tag47, %normal-dest499, %tag2
  %G162277.0 = phi {}* [ %18, %tag2 ], [ %G162277.1, %normal-dest499 ], [ %599, %tag47 ]
  %ptrtoint2844 = ptrtoint {}* %619 to i64
  %entry-point-addr-uint2845 = add i64 %ptrtoint2844, 7
  %entry-point-addr2846 = inttoptr i64 %entry-point-addr-uint2845 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2847 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2846, align 8
  %175 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2847({}* %619, i64 2, {}* %G162276.0, {}* %G162277.0, {}* null, {}* null)
          to label %normal-dest2850 unwind label %cleanup-lpad

tag363:                                           ; preds = %tag282
  %176 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %177 = invoke {}* @cc_safe_fdefinition({}* %176)
          to label %normal-dest2894 unwind label %cleanup-lpad

tag374:                                           ; preds = %normal-dest2538
  %178 = add i64 %631, -3
  %179 = inttoptr i64 %178 to {}**
  %180 = load {}*, {}** %179, align 8
  br label %tag297

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest2958, %maybe-more-tests1917, %normal-dest2894, %tag363, %normal-dest2872, %normal-dest2865, %normal-dest2863, %normal-dest2861, %normal-dest2858, %normal-dest2857, %normal-dest2850, %tag358, %normal-dest2822, %maybe-more-tests1521, %normal-dest2787, %normal-dest825, %tag344, %tag336, %normal-dest2746, %maybe-more-tests1548, %normal-dest2674, %normal-dest2794, %normal-dest2655, %normal-dest2034, %normal-dest2620, %tag310, %normal-dest2592, %normal-dest2585, %normal-dest2583, %normal-dest2581, %normal-dest2578, %normal-dest2577, %normal-dest2570, %tag308, %normal-dest2526, %normal-dest2519, %normal-dest2517, %normal-dest2515, %normal-dest2513, %normal-dest2511, %normal-dest2509, %normal-dest2502, %normal-dest2490, %normal-dest2478, %tag302, %normal-dest2443, %tag298, %normal-dest2412, %normal-dest2405, %normal-dest2403, %normal-dest2401, %tag297, %normal-dest2386, %tag295, %normal-dest2364, %normal-dest2352, %normal-dest2340, %normal-dest2328, %normal-dest2321, %normal-dest2319, %normal-dest2317, %normal-dest2315, %normal-dest2308, %normal-dest2296, %normal-dest2284, %normal-dest2277, %normal-dest2275, %normal-dest2273, %normal-dest2271, %normal-dest2264, %normal-dest2252, %normal-dest2240, %tag293, %normal-dest2200, %tag286, %normal-dest2186, %tag284, %normal-dest2175, %normal-dest2174, %tag279, %normal-dest2159, %maybe-more-tests951, %normal-dest2115, %tag272, %normal-dest2101, %tag270, %normal-dest2087, %normal-dest2450, %normal-dest2073, %tag267, %normal-dest2069, %normal-dest2068, %tag264, %normal-dest2055, %tag262, %normal-dest2041, %tag261, %normal-dest2032, %tag260, %normal-dest2029, %normal-dest2028, %tag259, %tag242, %normal-dest1922, %tag236, %tag228, %normal-dest1865, %tag220, %normal-dest1811, %maybe-more-tests2843, %normal-dest1785, %normal-dest1778, %normal-dest1776, %normal-dest1774, %tag214, %tag212, %normal-dest1749, %maybe-more-tests1429, %normal-dest1682, %normal-dest1445, %normal-dest1600, %tag182, %normal-dest1511, %normal-dest1510, %tag163, %normal-dest1474, %maybe-more-tests1530, %tag154, %tag153, %normal-dest1438, %normal-dest1246, %tag150, %tag143, %normal-dest1374, %normal-dest1373, %tag138, %normal-dest1352, %normal-dest1957, %normal-dest1304, %tag126, %normal-dest1275, %maybe-more-tests2818, %normal-dest1261, %tag117, %normal-dest1239, %tag113, %normal-dest1200, %tag106, %normal-dest1181, %normal-dest2094, %normal-dest1145, %tag102, %normal-dest1131, %tag101, %normal-dest1117, %maybe-more-tests1639, %normal-dest1087, %tag97, %tag93, %normal-dest1400, %normal-dest893, %normal-dest973, %normal-dest1900, %tag77, %normal-dest953, %tag76, %normal-dest922, %tag71, %normal-dest903, %tag69, %tag65, %normal-dest853, %normal-dest846, %normal-dest844, %normal-dest842, %tag59, %normal-dest839, %normal-dest837, %tag57, %normal-dest818, %tag53, %normal-dest755, %tag40, %normal-dest724, %tag35, %normal-dest710, %tag33, %normal-dest679, %tag27, %normal-dest656, %normal-dest649, %normal-dest647, %normal-dest645, %tag26, %normal-dest603, %normal-dest596, %normal-dest594, %normal-dest592, %normal-dest590, %normal-dest588, %normal-dest586, %normal-dest579, %normal-dest567, %normal-dest555, %normal-dest548, %normal-dest546, %normal-dest544, %normal-dest542, %normal-dest540, %normal-dest533, %normal-dest526, %normal-dest523, %normal-dest521, %tag22, %normal-dest1459, %normal-dest492, %tag12, %normal-dest478, %tag11, %normal-dest404, %normal-dest400, %normal-dest397, %normal-dest396, %normal-dest393, %normal-dest390, %normal-dest389, %normal-dest
  %181 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %181

normal-dest:                                      ; preds = %11
  %182 = invoke {}* @cc_makeCell()
          to label %normal-dest389 unwind label %cleanup-lpad

normal-dest389:                                   ; preds = %normal-dest
  %183 = invoke {}* @cc_makeCell()
          to label %normal-dest390 unwind label %cleanup-lpad

normal-dest390:                                   ; preds = %normal-dest389
  call void @cc_writeCell({}* %182, {}* null)
  call void @cc_writeCell({}* %183, {}* null)
  %184 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 104), align 16
  %185 = invoke {}* @cc_safe_fdefinition({}* %184)
          to label %normal-dest393 unwind label %cleanup-lpad

normal-dest393:                                   ; preds = %normal-dest390
  %186 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %186, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.7", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.7^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 2, {}* %183, {}* %182)
          to label %normal-dest396 unwind label %cleanup-lpad

normal-dest396:                                   ; preds = %normal-dest393
  %187 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %188 = invoke {}* @cc_safe_symbol_value({}* %187)
          to label %normal-dest397 unwind label %cleanup-lpad

normal-dest397:                                   ; preds = %normal-dest396
  %ptrtoint = ptrtoint {}* %185 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %189 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %185, i64 2, {}* %"closure->LAMBDA", {}* %188, {}* null, {}* null)
          to label %normal-dest400 unwind label %cleanup-lpad

normal-dest400:                                   ; preds = %normal-dest397
  %190 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 346), align 16
  %191 = invoke {}* @cc_safe_fdefinition({}* %190)
          to label %normal-dest404 unwind label %cleanup-lpad

normal-dest404:                                   ; preds = %normal-dest400
  %192 = ptrtoint {}* %183 to i64
  %193 = add i64 %192, -3
  %194 = inttoptr i64 %193 to %"class.gctools::smart_ptr"*
  %195 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %194, i64 0, i32 0
  %196 = inttoptr i64 %193 to {}**
  %197 = load {}*, {}** %196, align 8, !tbaa !31
  %ptrtoint406 = ptrtoint {}* %191 to i64
  %entry-point-addr-uint407 = add i64 %ptrtoint406, 7
  %entry-point-addr408 = inttoptr i64 %entry-point-addr-uint407 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point409 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr408, align 8
  %198 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point409({}* %191, i64 1, {}* %197, {}* null, {}* null, {}* null)
          to label %normal-dest412 unwind label %cleanup-lpad

normal-dest412:                                   ; preds = %normal-dest404
  %.elt3112 = extractvalue { {}*, i64 } %198, 0
  %.elt3114 = extractvalue { {}*, i64 } %198, 1
  %cond = icmp eq i64 %.elt3114, 0
  %199 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165455.0 = select i1 %cond, {}* %199, {}* %.elt3112
  %200 = icmp eq {}* %G165455.0, %199
  br i1 %200, label %tag344, label %tag323

normal-dest478:                                   ; preds = %tag11
  %201 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %202 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %203 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %204 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 357), align 8
  %ptrtoint479 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint480 = add i64 %ptrtoint479, 7
  %entry-point-addr481 = inttoptr i64 %entry-point-addr-uint480 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point482 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr481, align 8
  %205 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point482({}* %20, i64 5, {}* %201, {}* %202, {}* %"closure->LAMBDA2778", {}* %203, {}* %204)
          to label %normal-dest485 unwind label %cleanup-lpad

normal-dest485:                                   ; preds = %normal-dest478
  %.elt3116 = extractvalue { {}*, i64 } %205, 0
  %.elt3118 = extractvalue { {}*, i64 } %205, 1
  %cond3013 = icmp eq i64 %.elt3118, 0
  %206 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165302.1 = select i1 %cond3013, {}* %206, {}* %.elt3116
  br label %tag220

normal-dest492:                                   ; preds = %tag12
  %207 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %208 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %209 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %210 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint493 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint494 = add i64 %ptrtoint493, 7
  %entry-point-addr495 = inttoptr i64 %entry-point-addr-uint494 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point496 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr495, align 8
  %211 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point496({}* %22, i64 5, {}* %207, {}* %208, {}* %x2425.0, {}* %209, {}* %210)
          to label %normal-dest499 unwind label %cleanup-lpad

normal-dest499:                                   ; preds = %normal-dest492
  %.elt3330 = extractvalue { {}*, i64 } %211, 0
  %.elt3332 = extractvalue { {}*, i64 } %211, 1
  %cond3058 = icmp eq i64 %.elt3332, 0
  %212 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162277.1 = select i1 %cond3058, {}* %212, {}* %.elt3330
  br label %tag358

normal-dest518:                                   ; preds = %normal-dest1459
  call void @unreachableError()
  unreachable

normal-dest521:                                   ; preds = %tag22
  %213 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA524" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %213, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.8", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.8^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 1, {}* %183)
          to label %normal-dest523 unwind label %cleanup-lpad

normal-dest523:                                   ; preds = %normal-dest521
  %214 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %215 = invoke {}* @cc_safe_fdefinition({}* %214)
          to label %normal-dest526 unwind label %cleanup-lpad

normal-dest526:                                   ; preds = %normal-dest523
  %216 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 396), align 16
  %217 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 397), align 8
  %218 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 398), align 16
  %219 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 399), align 8
  %220 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 400), align 16
  %ptrtoint527 = ptrtoint {}* %215 to i64
  %entry-point-addr-uint528 = add i64 %ptrtoint527, 7
  %entry-point-addr529 = inttoptr i64 %entry-point-addr-uint528 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point530 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr529, align 8
  %221 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point530({}* %215, i64 5, {}* %216, {}* %217, {}* %218, {}* %219, {}* %220)
          to label %normal-dest533 unwind label %cleanup-lpad

normal-dest533:                                   ; preds = %normal-dest526
  %.elt3167 = extractvalue { {}*, i64 } %221, 0
  %.elt3169 = extractvalue { {}*, i64 } %221, 1
  %cond3021 = icmp eq i64 %.elt3169, 0
  %222 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162141.0 = select i1 %cond3021, {}* %222, {}* %.elt3167
  %223 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %224 = invoke {}* @cc_safe_fdefinition({}* %223)
          to label %normal-dest540 unwind label %cleanup-lpad

normal-dest540:                                   ; preds = %normal-dest533
  %225 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %226 = invoke {}* @cc_safe_fdefinition({}* %225)
          to label %normal-dest542 unwind label %cleanup-lpad

normal-dest542:                                   ; preds = %normal-dest540
  %227 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 401), align 8
  %228 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %229 = invoke {}* @cc_safe_fdefinition({}* %228)
          to label %normal-dest544 unwind label %cleanup-lpad

normal-dest544:                                   ; preds = %normal-dest542
  %230 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 404), align 16
  %231 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %232 = invoke {}* @cc_safe_symbol_value({}* %231)
          to label %normal-dest546 unwind label %cleanup-lpad

normal-dest546:                                   ; preds = %normal-dest544
  %233 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %234 = invoke {}* @cc_safe_fdefinition({}* %233)
          to label %normal-dest548 unwind label %cleanup-lpad

normal-dest548:                                   ; preds = %normal-dest546
  %ptrtoint549 = ptrtoint {}* %234 to i64
  %entry-point-addr-uint550 = add i64 %ptrtoint549, 7
  %entry-point-addr551 = inttoptr i64 %entry-point-addr-uint550 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point552 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr551, align 8
  %235 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point552({}* %234, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest555 unwind label %cleanup-lpad

normal-dest555:                                   ; preds = %normal-dest548
  %.elt3171 = extractvalue { {}*, i64 } %235, 0
  %.elt3173 = extractvalue { {}*, i64 } %235, 1
  %cond3022 = icmp eq i64 %.elt3173, 0
  %236 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162513.0 = select i1 %cond3022, {}* %236, {}* %.elt3171
  %ptrtoint561 = ptrtoint {}* %229 to i64
  %entry-point-addr-uint562 = add i64 %ptrtoint561, 7
  %entry-point-addr563 = inttoptr i64 %entry-point-addr-uint562 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point564 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr563, align 8
  %237 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point564({}* %229, i64 3, {}* %230, {}* %232, {}* %G162513.0, {}* null)
          to label %normal-dest567 unwind label %cleanup-lpad

normal-dest567:                                   ; preds = %normal-dest555
  %.elt3175 = extractvalue { {}*, i64 } %237, 0
  %.elt3177 = extractvalue { {}*, i64 } %237, 1
  %cond3023 = icmp eq i64 %.elt3177, 0
  %238 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162509.0 = select i1 %cond3023, {}* %238, {}* %.elt3175
  %ptrtoint573 = ptrtoint {}* %226 to i64
  %entry-point-addr-uint574 = add i64 %ptrtoint573, 7
  %entry-point-addr575 = inttoptr i64 %entry-point-addr-uint574 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point576 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr575, align 8
  %239 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point576({}* %226, i64 2, {}* %227, {}* %G162509.0, {}* null, {}* null)
          to label %normal-dest579 unwind label %cleanup-lpad

normal-dest579:                                   ; preds = %normal-dest567
  %.elt3179 = extractvalue { {}*, i64 } %239, 0
  %.elt3181 = extractvalue { {}*, i64 } %239, 1
  %cond3024 = icmp eq i64 %.elt3181, 0
  %240 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162144.0 = select i1 %cond3024, {}* %240, {}* %.elt3179
  %241 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %242 = invoke {}* @cc_safe_fdefinition({}* %241)
          to label %normal-dest586 unwind label %cleanup-lpad

normal-dest586:                                   ; preds = %normal-dest579
  %243 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %244 = invoke {}* @cc_safe_fdefinition({}* %243)
          to label %normal-dest588 unwind label %cleanup-lpad

normal-dest588:                                   ; preds = %normal-dest586
  %245 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 406), align 16
  %246 = invoke {}* @cc_safe_fdefinition({}* %245)
          to label %normal-dest590 unwind label %cleanup-lpad

normal-dest590:                                   ; preds = %normal-dest588
  %247 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %248 = invoke {}* @cc_safe_fdefinition({}* %247)
          to label %normal-dest592 unwind label %cleanup-lpad

normal-dest592:                                   ; preds = %normal-dest590
  %249 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 334), align 16
  %250 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %251 = invoke {}* @cc_safe_symbol_value({}* %250)
          to label %normal-dest594 unwind label %cleanup-lpad

normal-dest594:                                   ; preds = %normal-dest592
  %252 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %253 = invoke {}* @cc_safe_fdefinition({}* %252)
          to label %normal-dest596 unwind label %cleanup-lpad

normal-dest596:                                   ; preds = %normal-dest594
  %ptrtoint597 = ptrtoint {}* %253 to i64
  %entry-point-addr-uint598 = add i64 %ptrtoint597, 7
  %entry-point-addr599 = inttoptr i64 %entry-point-addr-uint598 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point600 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr599, align 8
  %254 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point600({}* %253, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest603 unwind label %cleanup-lpad

normal-dest603:                                   ; preds = %normal-dest596
  %.elt3183 = extractvalue { {}*, i64 } %254, 0
  %.elt3185 = extractvalue { {}*, i64 } %254, 1
  %cond3025 = icmp eq i64 %.elt3185, 0
  %255 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162496.0 = select i1 %cond3025, {}* %255, {}* %.elt3183
  %ptrtoint609 = ptrtoint {}* %248 to i64
  %entry-point-addr-uint610 = add i64 %ptrtoint609, 7
  %entry-point-addr611 = inttoptr i64 %entry-point-addr-uint610 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point612 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr611, align 8
  %256 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point612({}* %248, i64 3, {}* %249, {}* %251, {}* %G162496.0, {}* null)
          to label %normal-dest615 unwind label %cleanup-lpad

normal-dest615:                                   ; preds = %normal-dest603
  %.elt3187 = extractvalue { {}*, i64 } %256, 0
  %.elt3189 = extractvalue { {}*, i64 } %256, 1
  %cond3026 = icmp eq i64 %.elt3189, 0
  %257 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x616.0 = select i1 %cond3026, {}* %257, {}* %.elt3187
  %258 = ptrtoint {}* %x616.0 to i64
  %tag-only6273190 = and i64 %258, 7
  %consp-test = icmp eq i64 %tag-only6273190, 3
  %.val = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162489.0 = select i1 %consp-test, {}* %.val, {}* %257
  %259 = icmp eq {}* %G162489.0, %257
  br i1 %259, label %tag309, label %tag318

normal-dest645:                                   ; preds = %tag26
  %260 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 340), align 16
  %261 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %262 = invoke {}* @cc_safe_symbol_value({}* %261)
          to label %normal-dest647 unwind label %cleanup-lpad

normal-dest647:                                   ; preds = %normal-dest645
  %263 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %264 = invoke {}* @cc_safe_fdefinition({}* %263)
          to label %normal-dest649 unwind label %cleanup-lpad

normal-dest649:                                   ; preds = %normal-dest647
  %ptrtoint650 = ptrtoint {}* %264 to i64
  %entry-point-addr-uint651 = add i64 %ptrtoint650, 7
  %entry-point-addr652 = inttoptr i64 %entry-point-addr-uint651 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point653 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr652, align 8
  %265 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point653({}* %264, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest656 unwind label %cleanup-lpad

normal-dest656:                                   ; preds = %normal-dest649
  %.elt3266 = extractvalue { {}*, i64 } %265, 0
  %.elt3268 = extractvalue { {}*, i64 } %265, 1
  %cond3044 = icmp eq i64 %.elt3268, 0
  %266 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162208.0 = select i1 %cond3044, {}* %266, {}* %.elt3266
  %ptrtoint662 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint663 = add i64 %ptrtoint662, 7
  %entry-point-addr664 = inttoptr i64 %entry-point-addr-uint663 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point665 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr664, align 8
  %267 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point665({}* %26, i64 3, {}* %260, {}* %262, {}* %G162208.0, {}* null)
          to label %normal-dest668 unwind label %cleanup-lpad

normal-dest668:                                   ; preds = %normal-dest656
  %.elt3270 = extractvalue { {}*, i64 } %267, 0
  %.elt3272 = extractvalue { {}*, i64 } %267, 1
  %cond3045 = icmp eq i64 %.elt3272, 0
  %268 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x669.0 = select i1 %cond3045, {}* %268, {}* %.elt3270
  %269 = ptrtoint {}* %x669.0 to i64
  %tag-only6763273 = and i64 %269, 7
  %consp-test677 = icmp eq i64 %tag-only6763273, 3
  br i1 %consp-test677, label %tag208, label %tag120

normal-dest679:                                   ; preds = %tag27
  %ptrtoint682 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint683 = add i64 %ptrtoint682, 7
  %entry-point-addr684 = inttoptr i64 %entry-point-addr-uint683 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point685 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr684, align 8
  %270 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point685({}* %28, i64 2, {}* %469, {}* %y983.1, {}* null, {}* null)
          to label %normal-dest688 unwind label %cleanup-lpad

normal-dest688:                                   ; preds = %normal-dest679
  %.elt3489 = extractvalue { {}*, i64 } %270, 0
  %.elt3491 = extractvalue { {}*, i64 } %270, 1
  %cond3087 = icmp eq i64 %.elt3491, 0
  %271 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164851.1 = select i1 %cond3087, {}* %271, {}* %.elt3489
  br label %tag113

normal-dest710:                                   ; preds = %tag33
  %ptrtoint711 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint712 = add i64 %ptrtoint711, 7
  %entry-point-addr713 = inttoptr i64 %entry-point-addr-uint712 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point714 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr713, align 8
  %272 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point714({}* %30, i64 1, {}* %331, {}* null, {}* null, {}* null)
          to label %normal-dest717 unwind label %cleanup-lpad

normal-dest717:                                   ; preds = %normal-dest710
  %.elt3467 = extractvalue { {}*, i64 } %272, 0
  %.elt3469 = extractvalue { {}*, i64 } %272, 1
  %cond3083 = icmp eq i64 %.elt3469, 0
  %273 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164910.0 = select i1 %cond3083, {}* %273, {}* %.elt3467
  %274 = icmp eq {}* %G164910.0, %273
  br i1 %274, label %tag145, label %tag182

normal-dest724:                                   ; preds = %tag35
  %ptrtoint725 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint726 = add i64 %ptrtoint725, 7
  %entry-point-addr727 = inttoptr i64 %entry-point-addr-uint726 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point728 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr727, align 8
  %275 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point728({}* %32, i64 1, {}* %669, {}* null, {}* null, {}* null)
          to label %normal-dest731 unwind label %cleanup-lpad

normal-dest731:                                   ; preds = %normal-dest724
  %.elt3587 = extractvalue { {}*, i64 } %275, 0
  %.elt3589 = extractvalue { {}*, i64 } %275, 1
  %cond3104 = icmp eq i64 %.elt3589, 0
  %276 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %OUT161912.0 = select i1 %cond3104, {}* %276, {}* %.elt3587
  %ptrtoint738 = ptrtoint {}* %"closure->LAMBDA2778" to i64
  %tag-only739 = and i64 %ptrtoint738, 7
  %test740 = icmp eq i64 %tag-only739, 1
  br i1 %test740, label %header-check-br737, label %tag102

header-check-br737:                               ; preds = %normal-dest731
  %irc-bit-cast741 = bitcast {}* %"closure->LAMBDA2778" to i8*
  %gep742 = getelementptr inbounds i8, i8* %irc-bit-cast741, i64 -9
  %irc-bit-cast743 = bitcast i8* %gep742 to i64*
  %277 = load i64, i64* %irc-bit-cast743, align 8
  %.off3799 = add i64 %277, -913
  %278 = icmp ult i64 %.off3799, 85
  br i1 %278, label %tag212, label %header-check-br1513

header-check-br747:                               ; preds = %tag21
  %gep752 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %494, i64 -9, i32 0
  %irc-bit-cast753 = bitcast i8* %gep752 to i64*
  %279 = load i64, i64* %irc-bit-cast753, align 8
  %280 = icmp ne i64 %279, 1325
  %test1573.not = xor i1 %test1573, true
  %brmerge = or i1 %280, %test1573.not
  br i1 %brmerge, label %tag284, label %header-check-br1549

normal-dest755:                                   ; preds = %tag40
  %281 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 373), align 8
  %282 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 374), align 16
  %283 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 375), align 8
  %284 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 376), align 16
  %285 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 377), align 8
  %286 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 378), align 16
  %287 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 379), align 8
  %ptrtoint756 = ptrtoint {}* %G164481.0 to i64
  %entry-point-addr-uint757 = add i64 %ptrtoint756, 7
  %entry-point-addr758 = inttoptr i64 %entry-point-addr-uint757 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point759 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr758, align 8
  %288 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point759({}* %G164481.0, i64 8, {}* %34, {}* %281, {}* %282, {}* %283, {}* %284, {}* %285, {}* %286, {}* %287)
          to label %tag22 unwind label %cleanup-lpad

normal-dest818:                                   ; preds = %tag53
  %.elt3535 = extractvalue { {}*, i64 } %44, 0
  %.elt3537 = extractvalue { {}*, i64 } %44, 1
  %cond3095 = icmp eq i64 %.elt3537, 0
  %289 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164737.0 = select i1 %cond3095, {}* %289, {}* %.elt3535
  %290 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %291 = invoke {}* @cc_safe_fdefinition({}* %290)
          to label %normal-dest825 unwind label %cleanup-lpad

normal-dest825:                                   ; preds = %normal-dest818
  %292 = load {}*, {}** %196, align 8, !tbaa !31
  %293 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %294 = invoke {}* @cc_safe_fdefinition({}* %293)
          to label %normal-dest2787 unwind label %cleanup-lpad

normal-dest837:                                   ; preds = %tag57
  %295 = invoke float @from_object_float({}* %y455.1)
          to label %normal-dest839 unwind label %cleanup-lpad

normal-dest839:                                   ; preds = %normal-dest837
  %296 = fdiv float %45, %295
  %297 = invoke {}* @to_object_float(float %296)
          to label %tag298 unwind label %cleanup-lpad

normal-dest842:                                   ; preds = %tag59
  %298 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 336), align 16
  %299 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %300 = invoke {}* @cc_safe_symbol_value({}* %299)
          to label %normal-dest844 unwind label %cleanup-lpad

normal-dest844:                                   ; preds = %normal-dest842
  %301 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %302 = invoke {}* @cc_safe_fdefinition({}* %301)
          to label %normal-dest846 unwind label %cleanup-lpad

normal-dest846:                                   ; preds = %normal-dest844
  %ptrtoint847 = ptrtoint {}* %302 to i64
  %entry-point-addr-uint848 = add i64 %ptrtoint847, 7
  %entry-point-addr849 = inttoptr i64 %entry-point-addr-uint848 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point850 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr849, align 8
  %303 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point850({}* %302, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest853 unwind label %cleanup-lpad

normal-dest853:                                   ; preds = %normal-dest846
  %.elt3214 = extractvalue { {}*, i64 } %303, 0
  %.elt3216 = extractvalue { {}*, i64 } %303, 1
  %cond3032 = icmp eq i64 %.elt3216, 0
  %304 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162372.0 = select i1 %cond3032, {}* %304, {}* %.elt3214
  %ptrtoint859 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint860 = add i64 %ptrtoint859, 7
  %entry-point-addr861 = inttoptr i64 %entry-point-addr-uint860 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point862 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr861, align 8
  %305 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point862({}* %47, i64 3, {}* %298, {}* %300, {}* %G162372.0, {}* null)
          to label %normal-dest865 unwind label %cleanup-lpad

normal-dest865:                                   ; preds = %normal-dest853
  %.elt3218 = extractvalue { {}*, i64 } %305, 0
  %.elt3220 = extractvalue { {}*, i64 } %305, 1
  %cond3033 = icmp eq i64 %.elt3220, 0
  %306 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x866.0 = select i1 %cond3033, {}* %306, {}* %.elt3218
  %307 = ptrtoint {}* %x866.0 to i64
  %tag-only8723221 = and i64 %307, 7
  %consp-test873 = icmp eq i64 %tag-only8723221, 3
  br i1 %consp-test873, label %tag165, label %tag48

normal-dest893:                                   ; preds = %tag65
  %308 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %309 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %310 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %311 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint989 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint990 = add i64 %ptrtoint989, 7
  %entry-point-addr991 = inttoptr i64 %entry-point-addr-uint990 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point992 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr991, align 8
  %312 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point992({}* %49, i64 5, {}* %308, {}* %309, {}* %y935.1, {}* %310, {}* %311)
          to label %normal-dest995 unwind label %cleanup-lpad

normal-dest903:                                   ; preds = %tag69
  %ptrtoint906 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint907 = add i64 %ptrtoint906, 7
  %entry-point-addr908 = inttoptr i64 %entry-point-addr-uint907 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point909 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr908, align 8
  %313 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point909({}* %53, i64 2, {}* %484, {}* %y935.1, {}* null, {}* null)
          to label %normal-dest912 unwind label %cleanup-lpad

normal-dest912:                                   ; preds = %normal-dest903
  %.elt3531 = extractvalue { {}*, i64 } %313, 0
  %.elt3533 = extractvalue { {}*, i64 } %313, 1
  %cond3094 = icmp eq i64 %.elt3533, 0
  %314 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164765.1 = select i1 %cond3094, {}* %314, {}* %.elt3531
  br label %tag53

normal-dest922:                                   ; preds = %tag71
  %315 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %316 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %317 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %318 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint923 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint924 = add i64 %ptrtoint923, 7
  %entry-point-addr925 = inttoptr i64 %entry-point-addr-uint924 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point926 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr925, align 8
  %319 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point926({}* %56, i64 5, {}* %315, {}* %316, {}* %x616.0, {}* %317, {}* %318)
          to label %normal-dest929 unwind label %cleanup-lpad

normal-dest929:                                   ; preds = %normal-dest922
  %.elt3350 = extractvalue { {}*, i64 } %319, 0
  %.elt3352 = extractvalue { {}*, i64 } %319, 1
  %cond3063 = icmp eq i64 %.elt3352, 0
  %320 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162440.1 = select i1 %cond3063, {}* %320, {}* %.elt3350
  br label %tag214

header-check-br936:                               ; preds = %normal-dest1360
  %irc-bit-cast940 = bitcast {}* %y935.1 to i8*
  %gep941 = getelementptr inbounds i8, i8* %irc-bit-cast940, i64 -9
  %irc-bit-cast942 = bitcast i8* %gep941 to i64*
  %321 = load i64, i64* %irc-bit-cast942, align 8
  switch i64 %321, label %header-check-br2803 [
    i64 1325, label %tag254
    i64 1341, label %tag254
  ]

header-check-br943:                               ; preds = %header-check-br1531
  %.off3788 = add i64 %424, -1001
  %322 = icmp ult i64 %.off3788, 5
  br i1 %322, label %maybe-more-tests951, label %tag236

maybe-more-tests951:                              ; preds = %header-check-br943
  %323 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %324 = invoke {}* @cc_safe_fdefinition({}* %323)
          to label %normal-dest2159 unwind label %cleanup-lpad

normal-dest953:                                   ; preds = %tag76
  %325 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %326 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %327 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %328 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint954 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint955 = add i64 %ptrtoint954, 7
  %entry-point-addr956 = inttoptr i64 %entry-point-addr-uint955 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point957 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr956, align 8
  %329 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point957({}* %58, i64 5, {}* %325, {}* %326, {}* %x669.0, {}* %327, {}* %328)
          to label %normal-dest960 unwind label %cleanup-lpad

normal-dest960:                                   ; preds = %normal-dest953
  %.elt3322 = extractvalue { {}*, i64 } %329, 0
  %.elt3324 = extractvalue { {}*, i64 } %329, 1
  %cond3056 = icmp eq i64 %.elt3324, 0
  %330 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162188.1 = select i1 %cond3056, {}* %330, {}* %.elt3322
  br label %tag293

normal-dest966:                                   ; preds = %tag77
  %331 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %332 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %333 = icmp eq {}* %331, %332
  br i1 %333, label %tag33, label %tag325

normal-dest973:                                   ; preds = %normal-dest1900
  %ptrtoint976 = ptrtoint {}* %471 to i64
  %entry-point-addr-uint977 = add i64 %ptrtoint976, 7
  %entry-point-addr978 = inttoptr i64 %entry-point-addr-uint977 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point979 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr978, align 8
  %334 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point979({}* %471, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest982 unwind label %cleanup-lpad

normal-dest982:                                   ; preds = %normal-dest973
  %.elt3479 = extractvalue { {}*, i64 } %334, 0
  %.elt3481 = extractvalue { {}*, i64 } %334, 1
  %cond3086 = icmp eq i64 %.elt3481, 0
  %335 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y983.1 = select i1 %cond3086, {}* %335, {}* %.elt3479
  %ptrtoint2946 = ptrtoint {}* %y983.1 to i64
  %tag-only2947 = and i64 %ptrtoint2946, 7
  %test2948 = icmp eq i64 %tag-only2947, 1
  br i1 %test2948, label %header-check-br2945, label %tag116

normal-dest995:                                   ; preds = %normal-dest893
  call void @unreachableError()
  unreachable

normal-dest1038:                                  ; preds = %normal-dest1400
  call void @unreachableError()
  unreachable

normal-dest1087:                                  ; preds = %tag97
  %ptrtoint1088 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint1089 = add i64 %ptrtoint1088, 7
  %entry-point-addr1090 = inttoptr i64 %entry-point-addr-uint1089 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1091 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1090, align 8
  %336 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1091({}* %70, i64 1, {}* %400, {}* null, {}* null, {}* null)
          to label %normal-dest1094 unwind label %cleanup-lpad

normal-dest1094:                                  ; preds = %normal-dest1087
  %.elt3382 = extractvalue { {}*, i64 } %336, 0
  %.elt3384 = extractvalue { {}*, i64 } %336, 1
  %cond3069 = icmp eq i64 %.elt3384, 0
  %337 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %OUT161986.0 = select i1 %cond3069, {}* %337, {}* %.elt3382
  %ptrtoint1101 = ptrtoint {}* %"closure->LAMBDA1432" to i64
  %tag-only1102 = and i64 %ptrtoint1101, 7
  %test1103 = icmp eq i64 %tag-only1102, 1
  br i1 %test1103, label %header-check-br1100, label %tag295

header-check-br1100:                              ; preds = %normal-dest1094
  %irc-bit-cast1104 = bitcast {}* %"closure->LAMBDA1432" to i8*
  %gep1105 = getelementptr inbounds i8, i8* %irc-bit-cast1104, i64 -9
  %irc-bit-cast1106 = bitcast i8* %gep1105 to i64*
  %338 = load i64, i64* %irc-bit-cast1106, align 8
  %.off3785 = add i64 %338, -913
  %339 = icmp ult i64 %.off3785, 85
  br i1 %339, label %tag336, label %header-check-br1631

normal-dest1117:                                  ; preds = %maybe-more-tests1639
  %ptrtoint1118 = ptrtoint {}* %440 to i64
  %entry-point-addr-uint1119 = add i64 %ptrtoint1118, 7
  %entry-point-addr1120 = inttoptr i64 %entry-point-addr-uint1119 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1121 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1120, align 8
  %340 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1121({}* %440, i64 1, {}* nonnull %"closure->LAMBDA1432", {}* null, {}* null, {}* null)
          to label %normal-dest1124 unwind label %cleanup-lpad

normal-dest1124:                                  ; preds = %normal-dest1117
  %.elt3394 = extractvalue { {}*, i64 } %340, 0
  %.elt3396 = extractvalue { {}*, i64 } %340, 1
  %cond3071 = icmp eq i64 %.elt3396, 0
  %341 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164420.1 = select i1 %cond3071, {}* %341, {}* %.elt3394
  br label %tag336

normal-dest1131:                                  ; preds = %tag101
  %ptrtoint1132 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint1133 = add i64 %ptrtoint1132, 7
  %entry-point-addr1134 = inttoptr i64 %entry-point-addr-uint1133 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1135 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1134, align 8
  %342 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1135({}* %72, i64 1, {}* %400, {}* null, {}* null, {}* null)
          to label %normal-dest1138 unwind label %cleanup-lpad

normal-dest1138:                                  ; preds = %normal-dest1131
  %.elt3378 = extractvalue { {}*, i64 } %342, 0
  %.elt3380 = extractvalue { {}*, i64 } %342, 1
  %cond3068 = icmp eq i64 %.elt3380, 0
  %343 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164444.0 = select i1 %cond3068, {}* %343, {}* %.elt3378
  %344 = icmp eq {}* %G164444.0, %343
  br i1 %344, label %tag167, label %tag97

normal-dest1145:                                  ; preds = %tag102
  %345 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %346 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %347 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %348 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 355), align 8
  %ptrtoint1146 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint1147 = add i64 %ptrtoint1146, 7
  %entry-point-addr1148 = inttoptr i64 %entry-point-addr-uint1147 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1149 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1148, align 8
  %349 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1149({}* %74, i64 5, {}* %345, {}* %346, {}* %"closure->LAMBDA2778", {}* %347, {}* %348)
          to label %normal-dest1152 unwind label %cleanup-lpad

normal-dest1152:                                  ; preds = %normal-dest1145
  %.elt3591 = extractvalue { {}*, i64 } %349, 0
  %.elt3593 = extractvalue { {}*, i64 } %349, 1
  %cond3105 = icmp eq i64 %.elt3593, 0
  %350 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165249.1 = select i1 %cond3105, {}* %350, {}* %.elt3591
  br label %tag212

normal-dest1181:                                  ; preds = %normal-dest2094
  %.elt3151 = extractvalue { {}*, i64 } %518, 0
  %.elt3153 = extractvalue { {}*, i64 } %518, 1
  %cond3019 = icmp eq i64 %.elt3153, 0
  %351 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165015.0 = select i1 %cond3019, {}* %351, {}* %.elt3151
  %352 = ptrtoint {}* %182 to i64
  %353 = add i64 %352, -3
  %354 = inttoptr i64 %353 to {}**
  %355 = load {}*, {}** %354, align 8, !tbaa !31
  %ptrtoint1188 = ptrtoint {}* %G165012.0 to i64
  %entry-point-addr-uint1189 = add i64 %ptrtoint1188, 7
  %entry-point-addr1190 = inttoptr i64 %entry-point-addr-uint1189 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1191 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1190, align 8
  %356 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1191({}* %G165012.0, i64 4, {}* %128, {}* %G165014.0, {}* %G165015.0, {}* %355)
          to label %tag150 unwind label %cleanup-lpad

normal-dest1200:                                  ; preds = %tag106
  %357 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %358 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %359 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %360 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 362), align 16
  %ptrtoint1201 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint1202 = add i64 %ptrtoint1201, 7
  %entry-point-addr1203 = inttoptr i64 %entry-point-addr-uint1202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1203, align 8
  %361 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1204({}* %76, i64 5, {}* %357, {}* %358, {}* %"closure->LAMBDA967", {}* %359, {}* %360)
          to label %normal-dest1207 unwind label %cleanup-lpad

normal-dest1207:                                  ; preds = %normal-dest1200
  %.elt3475 = extractvalue { {}*, i64 } %361, 0
  %.elt3477 = extractvalue { {}*, i64 } %361, 1
  %cond3085 = icmp eq i64 %.elt3477, 0
  %362 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164821.1 = select i1 %cond3085, {}* %362, {}* %.elt3475
  br label %tag228

normal-dest1239:                                  ; preds = %tag113
  %.elt3493 = extractvalue { {}*, i64 } %77, 0
  %.elt3495 = extractvalue { {}*, i64 } %77, 1
  %cond3088 = icmp eq i64 %.elt3495, 0
  %363 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164823.0 = select i1 %cond3088, {}* %363, {}* %.elt3493
  %364 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %365 = invoke {}* @cc_safe_fdefinition({}* %364)
          to label %normal-dest1246 unwind label %cleanup-lpad

normal-dest1246:                                  ; preds = %normal-dest1239
  %366 = load {}*, {}** %196, align 8, !tbaa !31
  %367 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %368 = invoke {}* @cc_safe_fdefinition({}* %367)
          to label %normal-dest1438 unwind label %cleanup-lpad

normal-dest1261:                                  ; preds = %tag117
  %369 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %370 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %371 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %372 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 382), align 16
  %ptrtoint1262 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint1263 = add i64 %ptrtoint1262, 7
  %entry-point-addr1264 = inttoptr i64 %entry-point-addr-uint1263 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1265 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1264, align 8
  %373 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1265({}* %80, i64 5, {}* %369, {}* %370, {}* %"closure->LAMBDA1432", {}* %371, {}* %372)
          to label %normal-dest1268 unwind label %cleanup-lpad

normal-dest1268:                                  ; preds = %normal-dest1261
  %.elt3159 = extractvalue { {}*, i64 } %373, 0
  %.elt3161 = extractvalue { {}*, i64 } %373, 1
  %cond3020 = icmp eq i64 %.elt3161, 0
  %374 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164481.1 = select i1 %cond3020, {}* %374, {}* %.elt3159
  br label %tag40

normal-dest1275:                                  ; preds = %maybe-more-tests2818
  %ptrtoint1276 = ptrtoint {}* %677 to i64
  %entry-point-addr-uint1277 = add i64 %ptrtoint1276, 7
  %entry-point-addr1278 = inttoptr i64 %entry-point-addr-uint1277 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1279 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1278, align 8
  %375 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1279({}* %677, i64 1, {}* nonnull %"closure->LAMBDA967", {}* null, {}* null, {}* null)
          to label %normal-dest1282 unwind label %cleanup-lpad

normal-dest1282:                                  ; preds = %normal-dest1275
  %.elt3413 = extractvalue { {}*, i64 } %375, 0
  %.elt3415 = extractvalue { {}*, i64 } %375, 1
  %cond3074 = icmp eq i64 %.elt3415, 0
  %376 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165012.1 = select i1 %cond3074, {}* %376, {}* %.elt3413
  br label %tag260

normal-dest1304:                                  ; preds = %tag126
  %377 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %378 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %379 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %380 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1305 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint1306 = add i64 %ptrtoint1305, 7
  %entry-point-addr1307 = inttoptr i64 %entry-point-addr-uint1306 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1308 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1307, align 8
  %381 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1308({}* %85, i64 5, {}* %377, {}* %378, {}* %x2885.0, {}* %379, {}* %380)
          to label %normal-dest1311 unwind label %cleanup-lpad

normal-dest1311:                                  ; preds = %normal-dest1304
  %.elt3326 = extractvalue { {}*, i64 } %381, 0
  %.elt3328 = extractvalue { {}*, i64 } %381, 1
  %cond3057 = icmp eq i64 %.elt3328, 0
  %382 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162187.1 = select i1 %cond3057, {}* %382, {}* %.elt3326
  br label %tag26

normal-dest1352:                                  ; preds = %normal-dest1957
  %ptrtoint1354 = ptrtoint {}* %486 to i64
  %entry-point-addr-uint1355 = add i64 %ptrtoint1354, 7
  %entry-point-addr1356 = inttoptr i64 %entry-point-addr-uint1355 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1357 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1356, align 8
  %383 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1357({}* %486, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1360 unwind label %cleanup-lpad

normal-dest1360:                                  ; preds = %normal-dest1352
  %.elt3521 = extractvalue { {}*, i64 } %383, 0
  %.elt3523 = extractvalue { {}*, i64 } %383, 1
  %cond3093 = icmp eq i64 %.elt3523, 0
  %384 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y935.1 = select i1 %cond3093, {}* %384, {}* %.elt3521
  %ptrtoint937 = ptrtoint {}* %y935.1 to i64
  %tag-only938 = and i64 %ptrtoint937, 7
  %test939 = icmp eq i64 %tag-only938, 1
  br i1 %test939, label %header-check-br936, label %tag265

normal-dest1373:                                  ; preds = %tag138
  %385 = invoke float @from_object_float({}* %y983.1)
          to label %normal-dest1374 unwind label %cleanup-lpad

normal-dest1374:                                  ; preds = %normal-dest1373
  %386 = fdiv float %86, %385
  %387 = invoke {}* @to_object_float(float %386)
          to label %tag113 unwind label %cleanup-lpad

header-check-br1385:                              ; preds = %tag131
  %gep1390 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %468, i64 -9, i32 0
  %irc-bit-cast1391 = bitcast i8* %gep1390 to i64*
  %388 = load i64, i64* %irc-bit-cast1391, align 8
  %389 = icmp ne i64 %388, 1325
  %test2948.not = xor i1 %test2948, true
  %brmerge3756 = or i1 %389, %test2948.not
  br i1 %brmerge3756, label %tag27, label %header-check-br1988

normal-dest1400:                                  ; preds = %tag143
  %390 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %391 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %392 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %393 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint1032 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint1033 = add i64 %ptrtoint1032, 7
  %entry-point-addr1034 = inttoptr i64 %entry-point-addr-uint1033 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1035 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1034, align 8
  %394 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1035({}* %88, i64 5, {}* %390, {}* %391, {}* %y983.1, {}* %392, {}* %393)
          to label %normal-dest1038 unwind label %cleanup-lpad

header-check-br1410:                              ; preds = %tag145
  %irc-bit-cast1414 = bitcast {}* %"closure->LAMBDA967" to i8*
  %gep1415 = getelementptr inbounds i8, i8* %irc-bit-cast1414, i64 -9
  %irc-bit-cast1416 = bitcast i8* %gep1415 to i64*
  %395 = load i64, i64* %irc-bit-cast1416, align 8
  %.off3795 = add i64 %395, -913
  %396 = icmp ult i64 %.off3795, 85
  br i1 %396, label %tag242, label %header-check-br1421

header-check-br1421:                              ; preds = %header-check-br1410
  %.off3796 = add i64 %395, -1001
  %397 = icmp ult i64 %.off3796, 5
  br i1 %397, label %maybe-more-tests1429, label %tag267

maybe-more-tests1429:                             ; preds = %header-check-br1421
  %398 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %399 = invoke {}* @cc_safe_fdefinition({}* %398)
          to label %normal-dest1749 unwind label %cleanup-lpad

normal-dest1431:                                  ; preds = %tag150
  %400 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %401 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %402 = icmp eq {}* %400, %401
  br i1 %402, label %tag101, label %tag326

normal-dest1438:                                  ; preds = %normal-dest1246
  %ptrtoint1439 = ptrtoint {}* %368 to i64
  %entry-point-addr-uint1440 = add i64 %ptrtoint1439, 7
  %entry-point-addr1441 = inttoptr i64 %entry-point-addr-uint1440 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1442 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1441, align 8
  %403 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1442({}* %368, i64 2, {}* %366, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1445 unwind label %cleanup-lpad

normal-dest1445:                                  ; preds = %normal-dest1438
  %.elt3498 = extractvalue { {}*, i64 } %403, 0
  %.elt3500 = extractvalue { {}*, i64 } %403, 1
  %cond3089 = icmp eq i64 %.elt3500, 0
  %404 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164827.1 = select i1 %cond3089, {}* %404, {}* %.elt3498
  %ptrtoint1676 = ptrtoint {}* %365 to i64
  %entry-point-addr-uint1677 = add i64 %ptrtoint1676, 7
  %entry-point-addr1678 = inttoptr i64 %entry-point-addr-uint1677 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1679 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1678, align 8
  %405 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1679({}* %365, i64 1, {}* %G164827.1, {}* null, {}* null, {}* null)
          to label %normal-dest1682 unwind label %cleanup-lpad

normal-dest1459:                                  ; preds = %tag153
  %406 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %407 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %408 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %409 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint512 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint513 = add i64 %ptrtoint512, 7
  %entry-point-addr514 = inttoptr i64 %entry-point-addr-uint513 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point515 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr514, align 8
  %410 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point515({}* %91, i64 5, {}* %406, {}* %407, {}* %y455.1, {}* %408, {}* %409)
          to label %normal-dest518 unwind label %cleanup-lpad

normal-dest1474:                                  ; preds = %maybe-more-tests1530
  %ptrtoint1475 = ptrtoint {}* %423 to i64
  %entry-point-addr-uint1476 = add i64 %ptrtoint1475, 7
  %entry-point-addr1477 = inttoptr i64 %entry-point-addr-uint1476 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1478 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1477, align 8
  %411 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1478({}* %423, i64 1, {}* nonnull %"closure->LAMBDA1432", {}* null, {}* null, {}* null)
          to label %normal-dest1481 unwind label %cleanup-lpad

normal-dest1481:                                  ; preds = %normal-dest1474
  %.elt3354 = extractvalue { {}*, i64 } %411, 0
  %.elt3356 = extractvalue { {}*, i64 } %411, 1
  %cond3064 = icmp eq i64 %.elt3356, 0
  %412 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164481.2 = select i1 %cond3064, {}* %412, {}* %.elt3354
  br label %tag40

header-check-br1503:                              ; preds = %tag84
  %gep1508 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %483, i64 -9, i32 0
  %irc-bit-cast1509 = bitcast i8* %gep1508 to i64*
  %413 = load i64, i64* %irc-bit-cast1509, align 8
  %414 = icmp ne i64 %413, 1325
  %test939.not = xor i1 %test939, true
  %brmerge3754 = or i1 %414, %test939.not
  br i1 %brmerge3754, label %tag69, label %header-check-br1935

normal-dest1510:                                  ; preds = %tag163
  %415 = invoke double @from_object_double({}* nonnull %y455.1)
          to label %normal-dest1511 unwind label %cleanup-lpad

normal-dest1511:                                  ; preds = %normal-dest1510
  %416 = fdiv double %96, %415
  %417 = invoke {}* @to_object_double(double %416)
          to label %tag298 unwind label %cleanup-lpad

header-check-br1513:                              ; preds = %header-check-br737
  %.off3800 = add i64 %277, -1001
  %418 = icmp ult i64 %.off3800, 5
  br i1 %418, label %maybe-more-tests1521, label %tag102

maybe-more-tests1521:                             ; preds = %header-check-br1513
  %419 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %420 = invoke {}* @cc_safe_fdefinition({}* %419)
          to label %normal-dest2822 unwind label %cleanup-lpad

header-check-br1522:                              ; preds = %header-check-br2710
  %.off3784 = add i64 %665, -1001
  %421 = icmp ult i64 %.off3784, 5
  br i1 %421, label %maybe-more-tests1530, label %tag117

maybe-more-tests1530:                             ; preds = %header-check-br1522
  %422 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %423 = invoke {}* @cc_safe_fdefinition({}* %422)
          to label %normal-dest1474 unwind label %cleanup-lpad

header-check-br1531:                              ; preds = %tag167
  %irc-bit-cast1535 = bitcast {}* %"closure->LAMBDA1432" to i8*
  %gep1536 = getelementptr inbounds i8, i8* %irc-bit-cast1535, i64 -9
  %irc-bit-cast1537 = bitcast i8* %gep1536 to i64*
  %424 = load i64, i64* %irc-bit-cast1537, align 8
  %.off3787 = add i64 %424, -913
  %425 = icmp ult i64 %.off3787, 85
  br i1 %425, label %tag93, label %header-check-br943

header-check-br1540:                              ; preds = %header-check-br1738
  %.off3802 = add i64 %447, -1001
  %426 = icmp ult i64 %.off3802, 5
  br i1 %426, label %maybe-more-tests1548, label %tag286

maybe-more-tests1548:                             ; preds = %header-check-br1540
  %427 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %428 = invoke {}* @cc_safe_fdefinition({}* %427)
          to label %normal-dest2746 unwind label %cleanup-lpad

header-check-br1549:                              ; preds = %header-check-br747
  %irc-bit-cast1553 = bitcast {}* %y455.1 to i8*
  %gep1554 = getelementptr inbounds i8, i8* %irc-bit-cast1553, i64 -9
  %irc-bit-cast1555 = bitcast i8* %gep1554 to i64*
  %429 = load i64, i64* %irc-bit-cast1555, align 8
  %430 = icmp eq i64 %429, 1325
  br i1 %430, label %tag163, label %tag284

header-check-br1563:                              ; preds = %header-check-br1570
  %.old3749 = and i64 %ptrtoint1571, 3
  %fixnump-test1472.old = icmp eq i64 %.old3749, 0
  br i1 %fixnump-test1472.old, label %tag70, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br1563
  switch i64 %431, label %tag153 [
    i64 1349, label %tag70
    i64 1309, label %tag70
  ]

header-check-br1570:                              ; preds = %normal-dest2662
  %irc-bit-cast1574 = bitcast {}* %y455.1 to i8*
  %gep1575 = getelementptr inbounds i8, i8* %irc-bit-cast1574, i64 -9
  %irc-bit-cast1576 = bitcast i8* %gep1575 to i64*
  %431 = load i64, i64* %irc-bit-cast1576, align 8
  switch i64 %431, label %header-check-br1563 [
    i64 1325, label %tag70
    i64 1341, label %tag70
  ]

normal-dest1600:                                  ; preds = %tag182
  %ptrtoint1601 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint1602 = add i64 %ptrtoint1601, 7
  %entry-point-addr1603 = inttoptr i64 %entry-point-addr-uint1602 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1604 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1603, align 8
  %432 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1604({}* %101, i64 1, {}* %331, {}* null, {}* null, {}* null)
          to label %normal-dest1607 unwind label %cleanup-lpad

normal-dest1607:                                  ; preds = %normal-dest1600
  %.elt3471 = extractvalue { {}*, i64 } %432, 0
  %.elt3473 = extractvalue { {}*, i64 } %432, 1
  %cond3084 = icmp eq i64 %.elt3473, 0
  %433 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %OUT161948.0 = select i1 %cond3084, {}* %433, {}* %.elt3471
  %ptrtoint1614 = ptrtoint {}* %"closure->LAMBDA967" to i64
  %tag-only1615 = and i64 %ptrtoint1614, 7
  %test1616 = icmp eq i64 %tag-only1615, 1
  br i1 %test1616, label %header-check-br1613, label %tag106

header-check-br1613:                              ; preds = %normal-dest1607
  %irc-bit-cast1617 = bitcast {}* %"closure->LAMBDA967" to i8*
  %gep1618 = getelementptr inbounds i8, i8* %irc-bit-cast1617, i64 -9
  %irc-bit-cast1619 = bitcast i8* %gep1618 to i64*
  %434 = load i64, i64* %irc-bit-cast1619, align 8
  %.off3792 = add i64 %434, -913
  %435 = icmp ult i64 %.off3792, 85
  br i1 %435, label %tag228, label %header-check-br2835

header-check-br1622:                              ; preds = %tag183
  %irc-bit-cast1626 = bitcast {}* %"closure->LAMBDA2778" to i8*
  %gep1627 = getelementptr inbounds i8, i8* %irc-bit-cast1626, i64 -9
  %irc-bit-cast1628 = bitcast i8* %gep1627 to i64*
  %436 = load i64, i64* %irc-bit-cast1628, align 8
  %.off3797 = add i64 %436, -913
  %437 = icmp ult i64 %.off3797, 85
  br i1 %437, label %tag220, label %header-check-br1909

header-check-br1631:                              ; preds = %header-check-br1100
  %.off3786 = add i64 %338, -1001
  %438 = icmp ult i64 %.off3786, 5
  br i1 %438, label %maybe-more-tests1639, label %tag295

maybe-more-tests1639:                             ; preds = %header-check-br1631
  %439 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %440 = invoke {}* @cc_safe_fdefinition({}* %439)
          to label %normal-dest1117 unwind label %cleanup-lpad

normal-dest1682:                                  ; preds = %normal-dest1445
  %.elt3502 = extractvalue { {}*, i64 } %405, 0
  %.elt3504 = extractvalue { {}*, i64 } %405, 1
  %cond3090 = icmp eq i64 %.elt3504, 0
  %441 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164824.0 = select i1 %cond3090, {}* %441, {}* %.elt3502
  %442 = ptrtoint {}* %182 to i64
  %443 = add i64 %442, -3
  %444 = inttoptr i64 %443 to {}**
  %445 = load {}*, {}** %444, align 8, !tbaa !31
  %ptrtoint1689 = ptrtoint {}* %G164821.0 to i64
  %entry-point-addr-uint1690 = add i64 %ptrtoint1689, 7
  %entry-point-addr1691 = inttoptr i64 %entry-point-addr-uint1690 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1692 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1691, align 8
  %446 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1692({}* %G164821.0, i64 4, {}* %OUT161948.0, {}* %G164823.0, {}* %G164824.0, {}* %445)
          to label %tag150 unwind label %cleanup-lpad

header-check-br1738:                              ; preds = %tag207
  %irc-bit-cast1742 = bitcast {}* %"closure->LAMBDA2778" to i8*
  %gep1743 = getelementptr inbounds i8, i8* %irc-bit-cast1742, i64 -9
  %irc-bit-cast1744 = bitcast i8* %gep1743 to i64*
  %447 = load i64, i64* %irc-bit-cast1744, align 8
  %.off3801 = add i64 %447, -913
  %448 = icmp ult i64 %.off3801, 85
  br i1 %448, label %tag154, label %header-check-br1540

normal-dest1749:                                  ; preds = %maybe-more-tests1429
  %ptrtoint1750 = ptrtoint {}* %399 to i64
  %entry-point-addr-uint1751 = add i64 %ptrtoint1750, 7
  %entry-point-addr1752 = inttoptr i64 %entry-point-addr-uint1751 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1753 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1752, align 8
  %449 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1753({}* %399, i64 1, {}* nonnull %"closure->LAMBDA967", {}* null, {}* null, {}* null)
          to label %normal-dest1756 unwind label %cleanup-lpad

normal-dest1756:                                  ; preds = %normal-dest1749
  %.elt3555 = extractvalue { {}*, i64 } %449, 0
  %.elt3557 = extractvalue { {}*, i64 } %449, 1
  %cond3098 = icmp eq i64 %.elt3557, 0
  %450 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164735.1 = select i1 %cond3098, {}* %450, {}* %.elt3555
  br label %tag242

normal-dest1774:                                  ; preds = %tag214
  %451 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 336), align 16
  %452 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %453 = invoke {}* @cc_safe_symbol_value({}* %452)
          to label %normal-dest1776 unwind label %cleanup-lpad

normal-dest1776:                                  ; preds = %normal-dest1774
  %454 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %455 = invoke {}* @cc_safe_fdefinition({}* %454)
          to label %normal-dest1778 unwind label %cleanup-lpad

normal-dest1778:                                  ; preds = %normal-dest1776
  %ptrtoint1779 = ptrtoint {}* %455 to i64
  %entry-point-addr-uint1780 = add i64 %ptrtoint1779, 7
  %entry-point-addr1781 = inttoptr i64 %entry-point-addr-uint1780 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1782 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1781, align 8
  %456 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1782({}* %455, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest1785 unwind label %cleanup-lpad

normal-dest1785:                                  ; preds = %normal-dest1778
  %.elt3192 = extractvalue { {}*, i64 } %456, 0
  %.elt3194 = extractvalue { {}*, i64 } %456, 1
  %cond3027 = icmp eq i64 %.elt3194, 0
  %457 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162465.0 = select i1 %cond3027, {}* %457, {}* %.elt3192
  %ptrtoint1791 = ptrtoint {}* %113 to i64
  %entry-point-addr-uint1792 = add i64 %ptrtoint1791, 7
  %entry-point-addr1793 = inttoptr i64 %entry-point-addr-uint1792 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1794 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1793, align 8
  %458 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1794({}* %113, i64 3, {}* %451, {}* %453, {}* %G162465.0, {}* null)
          to label %normal-dest1797 unwind label %cleanup-lpad

normal-dest1797:                                  ; preds = %normal-dest1785
  %.elt3196 = extractvalue { {}*, i64 } %458, 0
  %.elt3198 = extractvalue { {}*, i64 } %458, 1
  %cond3028 = icmp eq i64 %.elt3198, 0
  %459 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1798.0 = select i1 %cond3028, {}* %459, {}* %.elt3196
  %460 = ptrtoint {}* %x1798.0 to i64
  %tag-only18083199 = and i64 %460, 7
  %consp-test1809 = icmp eq i64 %tag-only18083199, 3
  %.val3762 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162458.0 = select i1 %consp-test1809, {}* %.val3762, {}* %459
  %461 = icmp eq {}* %G162458.0, %459
  br i1 %461, label %tag50, label %tag45

normal-dest1811:                                  ; preds = %maybe-more-tests2843
  %ptrtoint1812 = ptrtoint {}* %682 to i64
  %entry-point-addr-uint1813 = add i64 %ptrtoint1812, 7
  %entry-point-addr1814 = inttoptr i64 %entry-point-addr-uint1813 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1815 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1814, align 8
  %462 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1815({}* %682, i64 1, {}* nonnull %"closure->LAMBDA967", {}* null, {}* null, {}* null)
          to label %normal-dest1818 unwind label %cleanup-lpad

normal-dest1818:                                  ; preds = %normal-dest1811
  %.elt3513 = extractvalue { {}*, i64 } %462, 0
  %.elt3515 = extractvalue { {}*, i64 } %462, 1
  %cond3091 = icmp eq i64 %.elt3515, 0
  %463 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164821.2 = select i1 %cond3091, {}* %463, {}* %.elt3513
  br label %tag228

normal-dest1865:                                  ; preds = %tag220
  %464 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 352), align 16
  %465 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 353), align 8
  %466 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 354), align 16
  %ptrtoint1866 = ptrtoint {}* %G165302.0 to i64
  %entry-point-addr-uint1867 = add i64 %ptrtoint1866, 7
  %entry-point-addr1868 = inttoptr i64 %entry-point-addr-uint1867 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1869 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1868, align 8
  %467 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1869({}* %G165302.0, i64 4, {}* %116, {}* %464, {}* %465, {}* %466)
          to label %tag77 unwind label %cleanup-lpad

normal-dest1900:                                  ; preds = %tag228
  %468 = load %"class.core::T_O"*, %"class.core::T_O"** %195, align 8, !tbaa !31
  %469 = bitcast %"class.core::T_O"* %468 to {}*
  %470 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %471 = invoke {}* @cc_safe_fdefinition({}* %470)
          to label %normal-dest973 unwind label %cleanup-lpad

header-check-br1909:                              ; preds = %header-check-br1622
  %.off3798 = add i64 %436, -1001
  %472 = icmp ult i64 %.off3798, 5
  br i1 %472, label %maybe-more-tests1917, label %tag11

maybe-more-tests1917:                             ; preds = %header-check-br1909
  %473 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %474 = invoke {}* @cc_safe_fdefinition({}* %473)
          to label %normal-dest2958 unwind label %cleanup-lpad

normal-dest1922:                                  ; preds = %tag236
  %475 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %476 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %477 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %478 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 372), align 16
  %ptrtoint1923 = ptrtoint {}* %121 to i64
  %entry-point-addr-uint1924 = add i64 %ptrtoint1923, 7
  %entry-point-addr1925 = inttoptr i64 %entry-point-addr-uint1924 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1926 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1925, align 8
  %479 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1926({}* %121, i64 5, {}* %475, {}* %476, {}* %"closure->LAMBDA1432", {}* %477, {}* %478)
          to label %normal-dest1929 unwind label %cleanup-lpad

normal-dest1929:                                  ; preds = %normal-dest1922
  %.elt3398 = extractvalue { {}*, i64 } %479, 0
  %.elt3400 = extractvalue { {}*, i64 } %479, 1
  %cond3072 = icmp eq i64 %.elt3400, 0
  %480 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164399.1 = select i1 %cond3072, {}* %480, {}* %.elt3398
  br label %tag93

header-check-br1935:                              ; preds = %header-check-br1503
  %irc-bit-cast1939 = bitcast {}* %y935.1 to i8*
  %gep1940 = getelementptr inbounds i8, i8* %irc-bit-cast1939, i64 -9
  %irc-bit-cast1941 = bitcast i8* %gep1940 to i64*
  %481 = load i64, i64* %irc-bit-cast1941, align 8
  %482 = icmp eq i64 %481, 1325
  br i1 %482, label %tag279, label %tag69

normal-dest1957:                                  ; preds = %tag242
  %483 = load %"class.core::T_O"*, %"class.core::T_O"** %195, align 8, !tbaa !31
  %484 = bitcast %"class.core::T_O"* %483 to {}*
  %485 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %486 = invoke {}* @cc_safe_fdefinition({}* %485)
          to label %normal-dest1352 unwind label %cleanup-lpad

header-check-br1988:                              ; preds = %header-check-br1385
  %irc-bit-cast1992 = bitcast {}* %y983.1 to i8*
  %gep1993 = getelementptr inbounds i8, i8* %irc-bit-cast1992, i64 -9
  %irc-bit-cast1994 = bitcast i8* %gep1993 to i64*
  %487 = load i64, i64* %irc-bit-cast1994, align 8
  %488 = icmp eq i64 %487, 1325
  br i1 %488, label %tag264, label %tag27

normal-dest2028:                                  ; preds = %tag259
  %489 = invoke float @from_object_float({}* %y935.1)
          to label %normal-dest2029 unwind label %cleanup-lpad

normal-dest2029:                                  ; preds = %normal-dest2028
  %490 = fdiv float %126, %489
  %491 = invoke {}* @to_object_float(float %490)
          to label %tag53 unwind label %cleanup-lpad

normal-dest2032:                                  ; preds = %tag260
  %492 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %493 = invoke {}* @cc_safe_fdefinition({}* %492)
          to label %normal-dest2034 unwind label %cleanup-lpad

normal-dest2034:                                  ; preds = %normal-dest2032
  %494 = load %"class.core::T_O"*, %"class.core::T_O"** %195, align 8, !tbaa !31
  %495 = bitcast %"class.core::T_O"* %494 to {}*
  %496 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %497 = invoke {}* @cc_safe_fdefinition({}* %496)
          to label %normal-dest2655 unwind label %cleanup-lpad

normal-dest2041:                                  ; preds = %tag261
  %ptrtoint2042 = ptrtoint {}* %130 to i64
  %entry-point-addr-uint2043 = add i64 %ptrtoint2042, 7
  %entry-point-addr2044 = inttoptr i64 %entry-point-addr-uint2043 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2045 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2044, align 8
  %498 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2045({}* %130, i64 1, {}* %669, {}* null, {}* null, {}* null)
          to label %normal-dest2048 unwind label %cleanup-lpad

normal-dest2048:                                  ; preds = %normal-dest2041
  %.elt3583 = extractvalue { {}*, i64 } %498, 0
  %.elt3585 = extractvalue { {}*, i64 } %498, 1
  %cond3103 = icmp eq i64 %.elt3585, 0
  %499 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165269.0 = select i1 %cond3103, {}* %499, {}* %.elt3583
  %500 = icmp eq {}* %G165269.0, %499
  br i1 %500, label %tag207, label %tag35

normal-dest2055:                                  ; preds = %tag262
  %501 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %502 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %503 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %504 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2056 = ptrtoint {}* %132 to i64
  %entry-point-addr-uint2057 = add i64 %ptrtoint2056, 7
  %entry-point-addr2058 = inttoptr i64 %entry-point-addr-uint2057 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2059 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2058, align 8
  %505 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2059({}* %132, i64 5, {}* %501, {}* %502, {}* %x2605.0, {}* %503, {}* %504)
          to label %normal-dest2062 unwind label %cleanup-lpad

normal-dest2062:                                  ; preds = %normal-dest2055
  %.elt3342 = extractvalue { {}*, i64 } %505, 0
  %.elt3344 = extractvalue { {}*, i64 } %505, 1
  %cond3061 = icmp eq i64 %.elt3344, 0
  %506 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162351.1 = select i1 %cond3061, {}* %506, {}* %.elt3342
  br label %tag59

normal-dest2068:                                  ; preds = %tag264
  %507 = invoke double @from_object_double({}* nonnull %y983.1)
          to label %normal-dest2069 unwind label %cleanup-lpad

normal-dest2069:                                  ; preds = %normal-dest2068
  %508 = fdiv double %133, %507
  %509 = invoke {}* @to_object_double(double %508)
          to label %tag113 unwind label %cleanup-lpad

normal-dest2073:                                  ; preds = %tag267
  %510 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %511 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %512 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %513 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 361), align 8
  %ptrtoint2074 = ptrtoint {}* %136 to i64
  %entry-point-addr-uint2075 = add i64 %ptrtoint2074, 7
  %entry-point-addr2076 = inttoptr i64 %entry-point-addr-uint2075 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2077 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2076, align 8
  %514 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2077({}* %136, i64 5, {}* %510, {}* %511, {}* %"closure->LAMBDA967", {}* %512, {}* %513)
          to label %normal-dest2080 unwind label %cleanup-lpad

normal-dest2080:                                  ; preds = %normal-dest2073
  %.elt3517 = extractvalue { {}*, i64 } %514, 0
  %.elt3519 = extractvalue { {}*, i64 } %514, 1
  %cond3092 = icmp eq i64 %.elt3519, 0
  %515 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164735.2 = select i1 %cond3092, {}* %515, {}* %.elt3517
  br label %tag242

normal-dest2087:                                  ; preds = %normal-dest2450
  %ptrtoint2088 = ptrtoint {}* %607 to i64
  %entry-point-addr-uint2089 = add i64 %ptrtoint2088, 7
  %entry-point-addr2090 = inttoptr i64 %entry-point-addr-uint2089 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2091 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2090, align 8
  %516 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2091({}* %607, i64 2, {}* %605, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest2094 unwind label %cleanup-lpad

normal-dest2094:                                  ; preds = %normal-dest2087
  %.elt3147 = extractvalue { {}*, i64 } %516, 0
  %.elt3149 = extractvalue { {}*, i64 } %516, 1
  %cond3018 = icmp eq i64 %.elt3149, 0
  %517 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165018.1 = select i1 %cond3018, {}* %517, {}* %.elt3147
  %ptrtoint1175 = ptrtoint {}* %604 to i64
  %entry-point-addr-uint1176 = add i64 %ptrtoint1175, 7
  %entry-point-addr1177 = inttoptr i64 %entry-point-addr-uint1176 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1178 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1177, align 8
  %518 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1178({}* %604, i64 1, {}* %G165018.1, {}* null, {}* null, {}* null)
          to label %normal-dest1181 unwind label %cleanup-lpad

normal-dest2101:                                  ; preds = %tag270
  %519 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %520 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %521 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %522 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 364), align 16
  %ptrtoint2102 = ptrtoint {}* %138 to i64
  %entry-point-addr-uint2103 = add i64 %ptrtoint2102, 7
  %entry-point-addr2104 = inttoptr i64 %entry-point-addr-uint2103 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2105 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2104, align 8
  %523 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2105({}* %138, i64 5, {}* %519, {}* %520, {}* %"closure->LAMBDA967", {}* %521, {}* %522)
          to label %normal-dest2108 unwind label %cleanup-lpad

normal-dest2108:                                  ; preds = %normal-dest2101
  %.elt3124 = extractvalue { {}*, i64 } %523, 0
  %.elt3126 = extractvalue { {}*, i64 } %523, 1
  %cond3014 = icmp eq i64 %.elt3126, 0
  %524 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165012.2 = select i1 %cond3014, {}* %524, {}* %.elt3124
  br label %tag260

normal-dest2115:                                  ; preds = %tag272
  %525 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %526 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %527 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %528 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2116 = ptrtoint {}* %143 to i64
  %entry-point-addr-uint2117 = add i64 %ptrtoint2116, 7
  %entry-point-addr2118 = inttoptr i64 %entry-point-addr-uint2117 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2119 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2118, align 8
  %529 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2119({}* %143, i64 5, {}* %525, {}* %526, {}* %x1798.0, {}* %527, {}* %528)
          to label %normal-dest2122 unwind label %cleanup-lpad

normal-dest2122:                                  ; preds = %normal-dest2115
  %.elt3346 = extractvalue { {}*, i64 } %529, 0
  %.elt3348 = extractvalue { {}*, i64 } %529, 1
  %cond3062 = icmp eq i64 %.elt3348, 0
  %530 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162441.1 = select i1 %cond3062, {}* %530, {}* %.elt3346
  br label %tag308

normal-dest2159:                                  ; preds = %maybe-more-tests951
  %ptrtoint2160 = ptrtoint {}* %324 to i64
  %entry-point-addr-uint2161 = add i64 %ptrtoint2160, 7
  %entry-point-addr2162 = inttoptr i64 %entry-point-addr-uint2161 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2163 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2162, align 8
  %531 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2163({}* %324, i64 1, {}* nonnull %"closure->LAMBDA1432", {}* null, {}* null, {}* null)
          to label %normal-dest2166 unwind label %cleanup-lpad

normal-dest2166:                                  ; preds = %normal-dest2159
  %.elt3406 = extractvalue { {}*, i64 } %531, 0
  %.elt3408 = extractvalue { {}*, i64 } %531, 1
  %cond3073 = icmp eq i64 %.elt3408, 0
  %532 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164399.2 = select i1 %cond3073, {}* %532, {}* %.elt3406
  br label %tag93

normal-dest2174:                                  ; preds = %tag279
  %533 = invoke double @from_object_double({}* nonnull %y935.1)
          to label %normal-dest2175 unwind label %cleanup-lpad

normal-dest2175:                                  ; preds = %normal-dest2174
  %534 = fdiv double %144, %533
  %535 = invoke {}* @to_object_double(double %534)
          to label %tag53 unwind label %cleanup-lpad

normal-dest2186:                                  ; preds = %tag284
  %ptrtoint2187 = ptrtoint {}* %148 to i64
  %entry-point-addr-uint2188 = add i64 %ptrtoint2187, 7
  %entry-point-addr2189 = inttoptr i64 %entry-point-addr-uint2188 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2190 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2189, align 8
  %536 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2190({}* %148, i64 2, {}* %495, {}* %y455.1, {}* null, {}* null)
          to label %normal-dest2193 unwind label %cleanup-lpad

normal-dest2193:                                  ; preds = %normal-dest2186
  %.elt3138 = extractvalue { {}*, i64 } %536, 0
  %.elt3140 = extractvalue { {}*, i64 } %536, 1
  %cond3016 = icmp eq i64 %.elt3140, 0
  %537 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165042.1 = select i1 %cond3016, {}* %537, {}* %.elt3138
  br label %tag298

normal-dest2200:                                  ; preds = %tag286
  %538 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %539 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %540 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %541 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 351), align 8
  %ptrtoint2201 = ptrtoint {}* %150 to i64
  %entry-point-addr-uint2202 = add i64 %ptrtoint2201, 7
  %entry-point-addr2203 = inttoptr i64 %entry-point-addr-uint2202 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2204 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2203, align 8
  %542 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2204({}* %150, i64 5, {}* %538, {}* %539, {}* %"closure->LAMBDA2778", {}* %540, {}* %541)
          to label %normal-dest2207 unwind label %cleanup-lpad

normal-dest2207:                                  ; preds = %normal-dest2200
  %.elt3603 = extractvalue { {}*, i64 } %542, 0
  %.elt3605 = extractvalue { {}*, i64 } %542, 1
  %cond3107 = icmp eq i64 %.elt3605, 0
  %543 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165232.1 = select i1 %cond3107, {}* %543, {}* %.elt3603
  br label %tag154

normal-dest2240:                                  ; preds = %tag293
  %.elt3275 = extractvalue { {}*, i64 } %151, 0
  %.elt3277 = extractvalue { {}*, i64 } %151, 1
  %cond3046 = icmp eq i64 %.elt3277, 0
  %544 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162184.0 = select i1 %cond3046, {}* %544, {}* %.elt3275
  %ptrtoint2246 = ptrtoint {}* %617 to i64
  %entry-point-addr-uint2247 = add i64 %ptrtoint2246, 7
  %entry-point-addr2248 = inttoptr i64 %entry-point-addr-uint2247 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2249 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2248, align 8
  %545 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2249({}* %617, i64 2, {}* %G162183.0, {}* %G162184.0, {}* null, {}* null)
          to label %normal-dest2252 unwind label %cleanup-lpad

normal-dest2252:                                  ; preds = %normal-dest2240
  %.elt3279 = extractvalue { {}*, i64 } %545, 0
  %.elt3281 = extractvalue { {}*, i64 } %545, 1
  %cond3047 = icmp eq i64 %.elt3281, 0
  %546 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162181.0 = select i1 %cond3047, {}* %546, {}* %.elt3279
  %ptrtoint2258 = ptrtoint {}* %614 to i64
  %entry-point-addr-uint2259 = add i64 %ptrtoint2258, 7
  %entry-point-addr2260 = inttoptr i64 %entry-point-addr-uint2259 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2261 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2260, align 8
  %547 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2261({}* %614, i64 2, {}* %615, {}* %G162181.0, {}* null, {}* null)
          to label %normal-dest2264 unwind label %cleanup-lpad

normal-dest2264:                                  ; preds = %normal-dest2252
  %.elt3283 = extractvalue { {}*, i64 } %547, 0
  %.elt3285 = extractvalue { {}*, i64 } %547, 1
  %cond3048 = icmp eq i64 %.elt3285, 0
  %548 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162146.0 = select i1 %cond3048, {}* %548, {}* %.elt3283
  %549 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %550 = invoke {}* @cc_safe_fdefinition({}* %549)
          to label %normal-dest2271 unwind label %cleanup-lpad

normal-dest2271:                                  ; preds = %normal-dest2264
  %551 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %552 = invoke {}* @cc_safe_fdefinition({}* %551)
          to label %normal-dest2273 unwind label %cleanup-lpad

normal-dest2273:                                  ; preds = %normal-dest2271
  %553 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 342), align 16
  %554 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %555 = invoke {}* @cc_safe_symbol_value({}* %554)
          to label %normal-dest2275 unwind label %cleanup-lpad

normal-dest2275:                                  ; preds = %normal-dest2273
  %556 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %557 = invoke {}* @cc_safe_fdefinition({}* %556)
          to label %normal-dest2277 unwind label %cleanup-lpad

normal-dest2277:                                  ; preds = %normal-dest2275
  %ptrtoint2278 = ptrtoint {}* %557 to i64
  %entry-point-addr-uint2279 = add i64 %ptrtoint2278, 7
  %entry-point-addr2280 = inttoptr i64 %entry-point-addr-uint2279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2280, align 8
  %558 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2281({}* %557, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2284 unwind label %cleanup-lpad

normal-dest2284:                                  ; preds = %normal-dest2277
  %.elt3287 = extractvalue { {}*, i64 } %558, 0
  %.elt3289 = extractvalue { {}*, i64 } %558, 1
  %cond3049 = icmp eq i64 %.elt3289, 0
  %559 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162170.0 = select i1 %cond3049, {}* %559, {}* %.elt3287
  %ptrtoint2290 = ptrtoint {}* %552 to i64
  %entry-point-addr-uint2291 = add i64 %ptrtoint2290, 7
  %entry-point-addr2292 = inttoptr i64 %entry-point-addr-uint2291 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2293 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2292, align 8
  %560 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2293({}* %552, i64 3, {}* %553, {}* %555, {}* %G162170.0, {}* null)
          to label %normal-dest2296 unwind label %cleanup-lpad

normal-dest2296:                                  ; preds = %normal-dest2284
  %.elt3291 = extractvalue { {}*, i64 } %560, 0
  %.elt3293 = extractvalue { {}*, i64 } %560, 1
  %cond3050 = icmp eq i64 %.elt3293, 0
  %561 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162166.0 = select i1 %cond3050, {}* %561, {}* %.elt3291
  %ptrtoint2302 = ptrtoint {}* %550 to i64
  %entry-point-addr-uint2303 = add i64 %ptrtoint2302, 7
  %entry-point-addr2304 = inttoptr i64 %entry-point-addr-uint2303 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2305 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2304, align 8
  %562 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2305({}* %550, i64 2, {}* %farg1, {}* %G162166.0, {}* null, {}* null)
          to label %normal-dest2308 unwind label %cleanup-lpad

normal-dest2308:                                  ; preds = %normal-dest2296
  %.elt3295 = extractvalue { {}*, i64 } %562, 0
  %.elt3297 = extractvalue { {}*, i64 } %562, 1
  %cond3051 = icmp eq i64 %.elt3297, 0
  %563 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162147.0 = select i1 %cond3051, {}* %563, {}* %.elt3295
  %564 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %565 = invoke {}* @cc_safe_fdefinition({}* %564)
          to label %normal-dest2315 unwind label %cleanup-lpad

normal-dest2315:                                  ; preds = %normal-dest2308
  %566 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %567 = invoke {}* @cc_safe_fdefinition({}* %566)
          to label %normal-dest2317 unwind label %cleanup-lpad

normal-dest2317:                                  ; preds = %normal-dest2315
  %568 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 344), align 16
  %569 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %570 = invoke {}* @cc_safe_symbol_value({}* %569)
          to label %normal-dest2319 unwind label %cleanup-lpad

normal-dest2319:                                  ; preds = %normal-dest2317
  %571 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %572 = invoke {}* @cc_safe_fdefinition({}* %571)
          to label %normal-dest2321 unwind label %cleanup-lpad

normal-dest2321:                                  ; preds = %normal-dest2319
  %ptrtoint2322 = ptrtoint {}* %572 to i64
  %entry-point-addr-uint2323 = add i64 %ptrtoint2322, 7
  %entry-point-addr2324 = inttoptr i64 %entry-point-addr-uint2323 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2325 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2324, align 8
  %573 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2325({}* %572, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2328 unwind label %cleanup-lpad

normal-dest2328:                                  ; preds = %normal-dest2321
  %.elt3299 = extractvalue { {}*, i64 } %573, 0
  %.elt3301 = extractvalue { {}*, i64 } %573, 1
  %cond3052 = icmp eq i64 %.elt3301, 0
  %574 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162155.0 = select i1 %cond3052, {}* %574, {}* %.elt3299
  %ptrtoint2334 = ptrtoint {}* %567 to i64
  %entry-point-addr-uint2335 = add i64 %ptrtoint2334, 7
  %entry-point-addr2336 = inttoptr i64 %entry-point-addr-uint2335 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2337 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2336, align 8
  %575 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2337({}* %567, i64 3, {}* %568, {}* %570, {}* %G162155.0, {}* null)
          to label %normal-dest2340 unwind label %cleanup-lpad

normal-dest2340:                                  ; preds = %normal-dest2328
  %.elt3303 = extractvalue { {}*, i64 } %575, 0
  %.elt3305 = extractvalue { {}*, i64 } %575, 1
  %cond3053 = icmp eq i64 %.elt3305, 0
  %576 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162151.0 = select i1 %cond3053, {}* %576, {}* %.elt3303
  %ptrtoint2346 = ptrtoint {}* %565 to i64
  %entry-point-addr-uint2347 = add i64 %ptrtoint2346, 7
  %entry-point-addr2348 = inttoptr i64 %entry-point-addr-uint2347 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2349 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2348, align 8
  %577 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2349({}* %565, i64 2, {}* %farg2, {}* %G162151.0, {}* null, {}* null)
          to label %normal-dest2352 unwind label %cleanup-lpad

normal-dest2352:                                  ; preds = %normal-dest2340
  %.elt3307 = extractvalue { {}*, i64 } %577, 0
  %.elt3309 = extractvalue { {}*, i64 } %577, 1
  %cond3054 = icmp eq i64 %.elt3309, 0
  %578 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162148.0 = select i1 %cond3054, {}* %578, {}* %.elt3307
  %ptrtoint2358 = ptrtoint {}* %224 to i64
  %entry-point-addr-uint2359 = add i64 %ptrtoint2358, 7
  %entry-point-addr2360 = inttoptr i64 %entry-point-addr-uint2359 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2361 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2360, align 8
  %579 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2361({}* %224, i64 5, {}* %G162144.0, {}* %G162145.0, {}* %G162146.0, {}* %G162147.0, {}* %G162148.0)
          to label %normal-dest2364 unwind label %cleanup-lpad

normal-dest2364:                                  ; preds = %normal-dest2352
  %.elt3311 = extractvalue { {}*, i64 } %579, 0
  %.elt3313 = extractvalue { {}*, i64 } %579, 1
  %cond3055 = icmp eq i64 %.elt3313, 0
  %580 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162142.0 = select i1 %cond3055, {}* %580, {}* %.elt3311
  %ptrtoint2370 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint2371 = add i64 %ptrtoint2370, 7
  %entry-point-addr2372 = inttoptr i64 %entry-point-addr-uint2371 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2373 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2372, align 8
  %581 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2373({}* %24, i64 3, {}* %"closure->LAMBDA524", {}* %G162141.0, {}* %G162142.0, {}* null)
          to label %normal-dest2376 unwind label %cleanup-lpad

normal-dest2376:                                  ; preds = %normal-dest2364
  %582 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %583 = insertvalue { {}*, i64 } undef, {}* %582, 0
  %584 = insertvalue { {}*, i64 } %583, i64 1, 1
  ret { {}*, i64 } %584

normal-dest2386:                                  ; preds = %tag295
  %585 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %586 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %587 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %588 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 380), align 16
  %ptrtoint2387 = ptrtoint {}* %153 to i64
  %entry-point-addr-uint2388 = add i64 %ptrtoint2387, 7
  %entry-point-addr2389 = inttoptr i64 %entry-point-addr-uint2388 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2390 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2389, align 8
  %589 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2390({}* %153, i64 5, {}* %585, {}* %586, {}* %"closure->LAMBDA1432", {}* %587, {}* %588)
          to label %normal-dest2393 unwind label %cleanup-lpad

normal-dest2393:                                  ; preds = %normal-dest2386
  %.elt3386 = extractvalue { {}*, i64 } %589, 0
  %.elt3388 = extractvalue { {}*, i64 } %589, 1
  %cond3070 = icmp eq i64 %.elt3388, 0
  %590 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164420.2 = select i1 %cond3070, {}* %590, {}* %.elt3386
  br label %tag336

normal-dest2401:                                  ; preds = %tag297
  %591 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 340), align 16
  %592 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %593 = invoke {}* @cc_safe_symbol_value({}* %592)
          to label %normal-dest2403 unwind label %cleanup-lpad

normal-dest2403:                                  ; preds = %normal-dest2401
  %594 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %595 = invoke {}* @cc_safe_fdefinition({}* %594)
          to label %normal-dest2405 unwind label %cleanup-lpad

normal-dest2405:                                  ; preds = %normal-dest2403
  %ptrtoint2406 = ptrtoint {}* %595 to i64
  %entry-point-addr-uint2407 = add i64 %ptrtoint2406, 7
  %entry-point-addr2408 = inttoptr i64 %entry-point-addr-uint2407 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2409 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2408, align 8
  %596 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2409({}* %595, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2412 unwind label %cleanup-lpad

normal-dest2412:                                  ; preds = %normal-dest2405
  %.elt3244 = extractvalue { {}*, i64 } %596, 0
  %.elt3246 = extractvalue { {}*, i64 } %596, 1
  %cond3039 = icmp eq i64 %.elt3246, 0
  %597 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162301.0 = select i1 %cond3039, {}* %597, {}* %.elt3244
  %ptrtoint2418 = ptrtoint {}* %155 to i64
  %entry-point-addr-uint2419 = add i64 %ptrtoint2418, 7
  %entry-point-addr2420 = inttoptr i64 %entry-point-addr-uint2419 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2421 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2420, align 8
  %598 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2421({}* %155, i64 3, {}* %591, {}* %593, {}* %G162301.0, {}* null)
          to label %normal-dest2424 unwind label %cleanup-lpad

normal-dest2424:                                  ; preds = %normal-dest2412
  %.elt3248 = extractvalue { {}*, i64 } %598, 0
  %.elt3250 = extractvalue { {}*, i64 } %598, 1
  %cond3040 = icmp eq i64 %.elt3250, 0
  %599 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2425.0 = select i1 %cond3040, {}* %599, {}* %.elt3248
  %600 = ptrtoint {}* %x2425.0 to i64
  %tag-only24353251 = and i64 %600, 7
  %consp-test2436 = icmp eq i64 %tag-only24353251, 3
  %.val3770 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162294.0 = select i1 %consp-test2436, {}* %.val3770, {}* %599
  %601 = icmp eq {}* %G162294.0, %599
  br i1 %601, label %tag47, label %tag2

normal-dest2443:                                  ; preds = %tag298
  %.elt3142 = extractvalue { {}*, i64 } %156, 0
  %.elt3144 = extractvalue { {}*, i64 } %156, 1
  %cond3017 = icmp eq i64 %.elt3144, 0
  %602 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165014.0 = select i1 %cond3017, {}* %602, {}* %.elt3142
  %603 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %604 = invoke {}* @cc_safe_fdefinition({}* %603)
          to label %normal-dest2450 unwind label %cleanup-lpad

normal-dest2450:                                  ; preds = %normal-dest2443
  %605 = load {}*, {}** %196, align 8, !tbaa !31
  %606 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %607 = invoke {}* @cc_safe_fdefinition({}* %606)
          to label %normal-dest2087 unwind label %cleanup-lpad

normal-dest2478:                                  ; preds = %tag302
  %.elt3223 = extractvalue { {}*, i64 } %157, 0
  %.elt3225 = extractvalue { {}*, i64 } %157, 1
  %cond3034 = icmp eq i64 %.elt3225, 0
  %608 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162348.0 = select i1 %cond3034, {}* %608, {}* %.elt3223
  %ptrtoint2484 = ptrtoint {}* %244 to i64
  %entry-point-addr-uint2485 = add i64 %ptrtoint2484, 7
  %entry-point-addr2486 = inttoptr i64 %entry-point-addr-uint2485 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2487 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2486, align 8
  %609 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2487({}* %244, i64 2, {}* %G162347.0, {}* %G162348.0, {}* null, {}* null)
          to label %normal-dest2490 unwind label %cleanup-lpad

normal-dest2490:                                  ; preds = %normal-dest2478
  %.elt3227 = extractvalue { {}*, i64 } %609, 0
  %.elt3229 = extractvalue { {}*, i64 } %609, 1
  %cond3035 = icmp eq i64 %.elt3229, 0
  %610 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162345.0 = select i1 %cond3035, {}* %610, {}* %.elt3227
  %ptrtoint2496 = ptrtoint {}* %242 to i64
  %entry-point-addr-uint2497 = add i64 %ptrtoint2496, 7
  %entry-point-addr2498 = inttoptr i64 %entry-point-addr-uint2497 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2499 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2498, align 8
  %611 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2499({}* %242, i64 2, {}* %farg0, {}* %G162345.0, {}* null, {}* null)
          to label %normal-dest2502 unwind label %cleanup-lpad

normal-dest2502:                                  ; preds = %normal-dest2490
  %.elt3231 = extractvalue { {}*, i64 } %611, 0
  %.elt3233 = extractvalue { {}*, i64 } %611, 1
  %cond3036 = icmp eq i64 %.elt3233, 0
  %612 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162145.0 = select i1 %cond3036, {}* %612, {}* %.elt3231
  %613 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %614 = invoke {}* @cc_safe_fdefinition({}* %613)
          to label %normal-dest2509 unwind label %cleanup-lpad

normal-dest2509:                                  ; preds = %normal-dest2502
  %615 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 408), align 16
  %616 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %617 = invoke {}* @cc_safe_fdefinition({}* %616)
          to label %normal-dest2511 unwind label %cleanup-lpad

normal-dest2511:                                  ; preds = %normal-dest2509
  %618 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 406), align 16
  %619 = invoke {}* @cc_safe_fdefinition({}* %618)
          to label %normal-dest2513 unwind label %cleanup-lpad

normal-dest2513:                                  ; preds = %normal-dest2511
  %620 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %621 = invoke {}* @cc_safe_fdefinition({}* %620)
          to label %normal-dest2515 unwind label %cleanup-lpad

normal-dest2515:                                  ; preds = %normal-dest2513
  %622 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 338), align 16
  %623 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %624 = invoke {}* @cc_safe_symbol_value({}* %623)
          to label %normal-dest2517 unwind label %cleanup-lpad

normal-dest2517:                                  ; preds = %normal-dest2515
  %625 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %626 = invoke {}* @cc_safe_fdefinition({}* %625)
          to label %normal-dest2519 unwind label %cleanup-lpad

normal-dest2519:                                  ; preds = %normal-dest2517
  %ptrtoint2520 = ptrtoint {}* %626 to i64
  %entry-point-addr-uint2521 = add i64 %ptrtoint2520, 7
  %entry-point-addr2522 = inttoptr i64 %entry-point-addr-uint2521 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2523 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2522, align 8
  %627 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2523({}* %626, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2526 unwind label %cleanup-lpad

normal-dest2526:                                  ; preds = %normal-dest2519
  %.elt3235 = extractvalue { {}*, i64 } %627, 0
  %.elt3237 = extractvalue { {}*, i64 } %627, 1
  %cond3037 = icmp eq i64 %.elt3237, 0
  %628 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162332.0 = select i1 %cond3037, {}* %628, {}* %.elt3235
  %ptrtoint2532 = ptrtoint {}* %621 to i64
  %entry-point-addr-uint2533 = add i64 %ptrtoint2532, 7
  %entry-point-addr2534 = inttoptr i64 %entry-point-addr-uint2533 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2535 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2534, align 8
  %629 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2535({}* %621, i64 3, {}* %622, {}* %624, {}* %G162332.0, {}* null)
          to label %normal-dest2538 unwind label %cleanup-lpad

normal-dest2538:                                  ; preds = %normal-dest2526
  %.elt3239 = extractvalue { {}*, i64 } %629, 0
  %.elt3241 = extractvalue { {}*, i64 } %629, 1
  %cond3038 = icmp eq i64 %.elt3241, 0
  %630 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2539.0 = select i1 %cond3038, {}* %630, {}* %.elt3239
  %631 = ptrtoint {}* %x2539.0 to i64
  %tag-only25493242 = and i64 %631, 7
  %consp-test2550 = icmp eq i64 %tag-only25493242, 3
  %.val3768 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162325.0 = select i1 %consp-test2550, {}* %.val3768, {}* %630
  %632 = icmp eq {}* %G162325.0, %630
  br i1 %632, label %tag282, label %tag374

header-check-br2551:                              ; preds = %header-check-br2945
  %.old3757 = and i64 %ptrtoint2946, 3
  %fixnump-test2953.old = icmp eq i64 %.old3757, 0
  br i1 %fixnump-test2953.old, label %tag230, label %switch.early.test3809

switch.early.test3809:                            ; preds = %header-check-br2551
  switch i64 %705, label %tag143 [
    i64 1349, label %tag230
    i64 1309, label %tag230
  ]

normal-dest2570:                                  ; preds = %tag308
  %.elt3201 = extractvalue { {}*, i64 } %158, 0
  %.elt3203 = extractvalue { {}*, i64 } %158, 1
  %cond3029 = icmp eq i64 %.elt3203, 0
  %633 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162347.0 = select i1 %cond3029, {}* %633, {}* %.elt3201
  %634 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 383), align 8
  %635 = invoke {}* @cc_safe_fdefinition({}* %634)
          to label %normal-dest2577 unwind label %cleanup-lpad

normal-dest2577:                                  ; preds = %normal-dest2570
  %636 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA2579" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %636, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.12", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.12^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 0)
          to label %normal-dest2578 unwind label %cleanup-lpad

normal-dest2578:                                  ; preds = %normal-dest2577
  %637 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %638 = invoke {}* @cc_safe_fdefinition({}* %637)
          to label %normal-dest2581 unwind label %cleanup-lpad

normal-dest2581:                                  ; preds = %normal-dest2578
  %639 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 334), align 16
  %640 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %641 = invoke {}* @cc_safe_symbol_value({}* %640)
          to label %normal-dest2583 unwind label %cleanup-lpad

normal-dest2583:                                  ; preds = %normal-dest2581
  %642 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %643 = invoke {}* @cc_safe_fdefinition({}* %642)
          to label %normal-dest2585 unwind label %cleanup-lpad

normal-dest2585:                                  ; preds = %normal-dest2583
  %ptrtoint2586 = ptrtoint {}* %643 to i64
  %entry-point-addr-uint2587 = add i64 %ptrtoint2586, 7
  %entry-point-addr2588 = inttoptr i64 %entry-point-addr-uint2587 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2589 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2588, align 8
  %644 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2589({}* %643, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2592 unwind label %cleanup-lpad

normal-dest2592:                                  ; preds = %normal-dest2585
  %.elt3205 = extractvalue { {}*, i64 } %644, 0
  %.elt3207 = extractvalue { {}*, i64 } %644, 1
  %cond3030 = icmp eq i64 %.elt3207, 0
  %645 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162399.0 = select i1 %cond3030, {}* %645, {}* %.elt3205
  %ptrtoint2598 = ptrtoint {}* %638 to i64
  %entry-point-addr-uint2599 = add i64 %ptrtoint2598, 7
  %entry-point-addr2600 = inttoptr i64 %entry-point-addr-uint2599 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2601 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2600, align 8
  %646 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2601({}* %638, i64 3, {}* %639, {}* %641, {}* %G162399.0, {}* null)
          to label %normal-dest2604 unwind label %cleanup-lpad

normal-dest2604:                                  ; preds = %normal-dest2592
  %.elt3209 = extractvalue { {}*, i64 } %646, 0
  %.elt3211 = extractvalue { {}*, i64 } %646, 1
  %cond3031 = icmp eq i64 %.elt3211, 0
  %647 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2605.0 = select i1 %cond3031, {}* %647, {}* %.elt3209
  %648 = ptrtoint {}* %x2605.0 to i64
  %tag-only26113212 = and i64 %648, 7
  %consp-test2612 = icmp eq i64 %tag-only26113212, 3
  br i1 %consp-test2612, label %tag195, label %tag67

normal-dest2620:                                  ; preds = %tag310
  %649 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %650 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %651 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %652 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2621 = ptrtoint {}* %162 to i64
  %entry-point-addr-uint2622 = add i64 %ptrtoint2621, 7
  %entry-point-addr2623 = inttoptr i64 %entry-point-addr-uint2622 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2624 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2623, align 8
  %653 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2624({}* %162, i64 5, {}* %649, {}* %650, {}* %x866.0, {}* %651, {}* %652)
          to label %normal-dest2627 unwind label %cleanup-lpad

normal-dest2627:                                  ; preds = %normal-dest2620
  %.elt3338 = extractvalue { {}*, i64 } %653, 0
  %.elt3340 = extractvalue { {}*, i64 } %653, 1
  %cond3060 = icmp eq i64 %.elt3340, 0
  %654 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162352.1 = select i1 %cond3060, {}* %654, {}* %.elt3338
  br label %tag302

normal-dest2655:                                  ; preds = %normal-dest2034
  %ptrtoint2656 = ptrtoint {}* %497 to i64
  %entry-point-addr-uint2657 = add i64 %ptrtoint2656, 7
  %entry-point-addr2658 = inttoptr i64 %entry-point-addr-uint2657 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2659 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2658, align 8
  %655 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2659({}* %497, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest2662 unwind label %cleanup-lpad

normal-dest2662:                                  ; preds = %normal-dest2655
  %.elt3128 = extractvalue { {}*, i64 } %655, 0
  %.elt3130 = extractvalue { {}*, i64 } %655, 1
  %cond3015 = icmp eq i64 %.elt3130, 0
  %656 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y455.1 = select i1 %cond3015, {}* %656, {}* %.elt3128
  %ptrtoint1571 = ptrtoint {}* %y455.1 to i64
  %tag-only1572 = and i64 %ptrtoint1571, 7
  %test1573 = icmp eq i64 %tag-only1572, 1
  br i1 %test1573, label %header-check-br1570, label %tag121

normal-dest2674:                                  ; preds = %normal-dest2794
  %.elt3544 = extractvalue { {}*, i64 } %674, 0
  %.elt3546 = extractvalue { {}*, i64 } %674, 1
  %cond3097 = icmp eq i64 %.elt3546, 0
  %657 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164738.0 = select i1 %cond3097, {}* %657, {}* %.elt3544
  %658 = ptrtoint {}* %182 to i64
  %659 = add i64 %658, -3
  %660 = inttoptr i64 %659 to {}**
  %661 = load {}*, {}** %660, align 8, !tbaa !31
  %ptrtoint2681 = ptrtoint {}* %G164735.0 to i64
  %entry-point-addr-uint2682 = add i64 %ptrtoint2681, 7
  %entry-point-addr2683 = inttoptr i64 %entry-point-addr-uint2682 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2684 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2683, align 8
  %662 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2684({}* %G164735.0, i64 4, {}* %331, {}* %G164737.0, {}* %G164738.0, {}* %661)
          to label %tag150 unwind label %cleanup-lpad

header-check-br2701:                              ; preds = %tag325
  %irc-bit-cast2705 = bitcast {}* %"closure->LAMBDA967" to i8*
  %gep2706 = getelementptr inbounds i8, i8* %irc-bit-cast2705, i64 -9
  %irc-bit-cast2707 = bitcast i8* %gep2706 to i64*
  %663 = load i64, i64* %irc-bit-cast2707, align 8
  %.off3789 = add i64 %663, -913
  %664 = icmp ult i64 %.off3789, 85
  br i1 %664, label %tag260, label %header-check-br2810

header-check-br2710:                              ; preds = %tag326
  %irc-bit-cast2714 = bitcast {}* %"closure->LAMBDA1432" to i8*
  %gep2715 = getelementptr inbounds i8, i8* %irc-bit-cast2714, i64 -9
  %irc-bit-cast2716 = bitcast i8* %gep2715 to i64*
  %665 = load i64, i64* %irc-bit-cast2716, align 8
  %.off = add i64 %665, -913
  %666 = icmp ult i64 %.off, 85
  br i1 %666, label %tag40, label %header-check-br1522

normal-dest2746:                                  ; preds = %maybe-more-tests1548
  %ptrtoint2747 = ptrtoint {}* %428 to i64
  %entry-point-addr-uint2748 = add i64 %ptrtoint2747, 7
  %entry-point-addr2749 = inttoptr i64 %entry-point-addr-uint2748 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2750 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2749, align 8
  %667 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2750({}* %428, i64 1, {}* nonnull %"closure->LAMBDA2778", {}* null, {}* null, {}* null)
          to label %normal-dest2753 unwind label %cleanup-lpad

normal-dest2753:                                  ; preds = %normal-dest2746
  %.elt3611 = extractvalue { {}*, i64 } %667, 0
  %.elt3613 = extractvalue { {}*, i64 } %667, 1
  %cond3108 = icmp eq i64 %.elt3613, 0
  %668 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165232.2 = select i1 %cond3108, {}* %668, {}* %.elt3611
  br label %tag154

normal-dest2777:                                  ; preds = %tag344
  %669 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %670 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %671 = icmp eq {}* %669, %670
  br i1 %671, label %tag261, label %tag183

normal-dest2787:                                  ; preds = %normal-dest825
  %ptrtoint2788 = ptrtoint {}* %294 to i64
  %entry-point-addr-uint2789 = add i64 %ptrtoint2788, 7
  %entry-point-addr2790 = inttoptr i64 %entry-point-addr-uint2789 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2791 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2790, align 8
  %672 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2791({}* %294, i64 2, {}* %292, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest2794 unwind label %cleanup-lpad

normal-dest2794:                                  ; preds = %normal-dest2787
  %.elt3540 = extractvalue { {}*, i64 } %672, 0
  %.elt3542 = extractvalue { {}*, i64 } %672, 1
  %cond3096 = icmp eq i64 %.elt3542, 0
  %673 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164741.1 = select i1 %cond3096, {}* %673, {}* %.elt3540
  %ptrtoint2668 = ptrtoint {}* %291 to i64
  %entry-point-addr-uint2669 = add i64 %ptrtoint2668, 7
  %entry-point-addr2670 = inttoptr i64 %entry-point-addr-uint2669 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2671 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2670, align 8
  %674 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2671({}* %291, i64 1, {}* %G164741.1, {}* null, {}* null, {}* null)
          to label %normal-dest2674 unwind label %cleanup-lpad

header-check-br2803:                              ; preds = %header-check-br936
  %.old = and i64 %ptrtoint937, 3
  %fixnump-test1377.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test1377.old, label %tag254, label %switch.early.test3810

switch.early.test3810:                            ; preds = %header-check-br2803
  switch i64 %321, label %tag65 [
    i64 1349, label %tag254
    i64 1309, label %tag254
  ]

header-check-br2810:                              ; preds = %header-check-br2701
  %.off3790 = add i64 %663, -1001
  %675 = icmp ult i64 %.off3790, 5
  br i1 %675, label %maybe-more-tests2818, label %tag270

maybe-more-tests2818:                             ; preds = %header-check-br2810
  %676 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %677 = invoke {}* @cc_safe_fdefinition({}* %676)
          to label %normal-dest1275 unwind label %cleanup-lpad

normal-dest2822:                                  ; preds = %maybe-more-tests1521
  %ptrtoint2823 = ptrtoint {}* %420 to i64
  %entry-point-addr-uint2824 = add i64 %ptrtoint2823, 7
  %entry-point-addr2825 = inttoptr i64 %entry-point-addr-uint2824 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2826 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2825, align 8
  %678 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2826({}* %420, i64 1, {}* nonnull %"closure->LAMBDA2778", {}* null, {}* null, {}* null)
          to label %normal-dest2829 unwind label %cleanup-lpad

normal-dest2829:                                  ; preds = %normal-dest2822
  %.elt3599 = extractvalue { {}*, i64 } %678, 0
  %.elt3601 = extractvalue { {}*, i64 } %678, 1
  %cond3106 = icmp eq i64 %.elt3601, 0
  %679 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165249.2 = select i1 %cond3106, {}* %679, {}* %.elt3599
  br label %tag212

header-check-br2835:                              ; preds = %header-check-br1613
  %.off3793 = add i64 %434, -1001
  %680 = icmp ult i64 %.off3793, 5
  br i1 %680, label %maybe-more-tests2843, label %tag106

maybe-more-tests2843:                             ; preds = %header-check-br2835
  %681 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %682 = invoke {}* @cc_safe_fdefinition({}* %681)
          to label %normal-dest1811 unwind label %cleanup-lpad

normal-dest2850:                                  ; preds = %tag358
  %.elt3253 = extractvalue { {}*, i64 } %175, 0
  %.elt3255 = extractvalue { {}*, i64 } %175, 1
  %cond3041 = icmp eq i64 %.elt3255, 0
  %683 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162183.0 = select i1 %cond3041, {}* %683, {}* %.elt3253
  %684 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 383), align 8
  %685 = invoke {}* @cc_safe_fdefinition({}* %684)
          to label %normal-dest2857 unwind label %cleanup-lpad

normal-dest2857:                                  ; preds = %normal-dest2850
  %686 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA2859" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %686, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.14", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.14^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 0)
          to label %normal-dest2858 unwind label %cleanup-lpad

normal-dest2858:                                  ; preds = %normal-dest2857
  %687 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %688 = invoke {}* @cc_safe_fdefinition({}* %687)
          to label %normal-dest2861 unwind label %cleanup-lpad

normal-dest2861:                                  ; preds = %normal-dest2858
  %689 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 338), align 16
  %690 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %691 = invoke {}* @cc_safe_symbol_value({}* %690)
          to label %normal-dest2863 unwind label %cleanup-lpad

normal-dest2863:                                  ; preds = %normal-dest2861
  %692 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %693 = invoke {}* @cc_safe_fdefinition({}* %692)
          to label %normal-dest2865 unwind label %cleanup-lpad

normal-dest2865:                                  ; preds = %normal-dest2863
  %ptrtoint2866 = ptrtoint {}* %693 to i64
  %entry-point-addr-uint2867 = add i64 %ptrtoint2866, 7
  %entry-point-addr2868 = inttoptr i64 %entry-point-addr-uint2867 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2869 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2868, align 8
  %694 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2869({}* %693, i64 3, {}* null, {}* null, {}* null, {}* null)
          to label %normal-dest2872 unwind label %cleanup-lpad

normal-dest2872:                                  ; preds = %normal-dest2865
  %.elt3257 = extractvalue { {}*, i64 } %694, 0
  %.elt3259 = extractvalue { {}*, i64 } %694, 1
  %cond3042 = icmp eq i64 %.elt3259, 0
  %695 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162235.0 = select i1 %cond3042, {}* %695, {}* %.elt3257
  %ptrtoint2878 = ptrtoint {}* %688 to i64
  %entry-point-addr-uint2879 = add i64 %ptrtoint2878, 7
  %entry-point-addr2880 = inttoptr i64 %entry-point-addr-uint2879 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2881 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2880, align 8
  %696 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2881({}* %688, i64 3, {}* %689, {}* %691, {}* %G162235.0, {}* null)
          to label %normal-dest2884 unwind label %cleanup-lpad

normal-dest2884:                                  ; preds = %normal-dest2872
  %.elt3261 = extractvalue { {}*, i64 } %696, 0
  %.elt3263 = extractvalue { {}*, i64 } %696, 1
  %cond3043 = icmp eq i64 %.elt3263, 0
  %697 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2885.0 = select i1 %cond3043, {}* %697, {}* %.elt3261
  %698 = ptrtoint {}* %x2885.0 to i64
  %tag-only28913264 = and i64 %698, 7
  %consp-test2892 = icmp eq i64 %tag-only28913264, 3
  br i1 %consp-test2892, label %tag271, label %tag1

normal-dest2894:                                  ; preds = %tag363
  %699 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %700 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %701 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %702 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2895 = ptrtoint {}* %177 to i64
  %entry-point-addr-uint2896 = add i64 %ptrtoint2895, 7
  %entry-point-addr2897 = inttoptr i64 %entry-point-addr-uint2896 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2898 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2897, align 8
  %703 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2898({}* %177, i64 5, {}* %699, {}* %700, {}* %x2539.0, {}* %701, {}* %702)
          to label %normal-dest2901 unwind label %cleanup-lpad

normal-dest2901:                                  ; preds = %normal-dest2894
  %.elt3334 = extractvalue { {}*, i64 } %703, 0
  %.elt3336 = extractvalue { {}*, i64 } %703, 1
  %cond3059 = icmp eq i64 %.elt3336, 0
  %704 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162276.1 = select i1 %cond3059, {}* %704, {}* %.elt3334
  br label %tag297

header-check-br2945:                              ; preds = %normal-dest982
  %irc-bit-cast2949 = bitcast {}* %y983.1 to i8*
  %gep2950 = getelementptr inbounds i8, i8* %irc-bit-cast2949, i64 -9
  %irc-bit-cast2951 = bitcast i8* %gep2950 to i64*
  %705 = load i64, i64* %irc-bit-cast2951, align 8
  switch i64 %705, label %header-check-br2551 [
    i64 1325, label %tag230
    i64 1341, label %tag230
  ]

normal-dest2958:                                  ; preds = %maybe-more-tests1917
  %ptrtoint2959 = ptrtoint {}* %474 to i64
  %entry-point-addr-uint2960 = add i64 %ptrtoint2959, 7
  %entry-point-addr2961 = inttoptr i64 %entry-point-addr-uint2960 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2962 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2961, align 8
  %706 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2962({}* %474, i64 1, {}* nonnull %"closure->LAMBDA2778", {}* null, {}* null, {}* null)
          to label %normal-dest2965 unwind label %cleanup-lpad

normal-dest2965:                                  ; preds = %normal-dest2958
  %.elt3559 = extractvalue { {}*, i64 } %706, 0
  %.elt3561 = extractvalue { {}*, i64 } %706, 1
  %cond3099 = icmp eq i64 %.elt3561, 0
  %707 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165302.2 = select i1 %cond3099, {}* %707, {}* %.elt3559
  br label %tag220
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.7"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !44 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.7^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.7^DESC" to %0*)) #7
          to label %.noexc640 unwind label %cleanup-lpad.loopexit.split-lp

.noexc640:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %tag40
  %14 = invoke float @from_object_float({}* %40)
          to label %normal-dest138 unwind label %cleanup-lpad.loopexit.split-lp

tag1:                                             ; preds = %tag120, %normal-dest418, %normal-dest320, %normal-dest242, %normal-dest212
  br i1 %consp-test184, label %tag114, label %tag123

tag3:                                             ; preds = %tag3.lr.ph, %tag76
  %G165664.0 = phi {}* [ %.val677, %tag3.lr.ph ], [ %.val, %tag76 ]
  %15 = phi i1 [ %138, %tag3.lr.ph ], [ %81, %tag76 ]
  %16 = phi {}* [ %136, %tag3.lr.ph ], [ %76, %tag76 ]
  %17 = phi {}* [ %135, %tag3.lr.ph ], [ %79, %tag76 ]
  %18 = ptrtoint {}* %17 to i64
  %tag-only145558 = and i64 %18, 7
  %consp-test146 = icmp eq i64 %tag-only145558, 3
  br i1 %consp-test146, label %tag74, label %tag77

tag5:                                             ; preds = %header-check-br268
  %19 = invoke double @from_object_double({}* nonnull %40)
          to label %normal-dest147 unwind label %cleanup-lpad.loopexit.split-lp

tag9:                                             ; preds = %tag107, %normal-dest351, %normal-dest297, %normal-dest149, %normal-dest140
  %.phi.trans.insert = inttoptr i64 %36 to {}**
  %return-value.sroa.0.0670.pre = load {}*, {}** %.phi.trans.insert, align 8
  br label %tag17

tag13:                                            ; preds = %tag18
  %20 = icmp eq {}* %42, %farg1
  %.val659 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165600.0 = select i1 %20, {}* %.val659, {}* %42
  %21 = icmp eq {}* %G165600.0, %42
  br i1 %21, label %tag14, label %tag26

tag14:                                            ; preds = %tag13
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest172 unwind label %cleanup-lpad.loopexit.split-lp

tag17:                                            ; preds = %tag76, %normal-dest, %tag22, %tag9
  %return-value.sroa.0.0670 = phi {}* [ %return-value.sroa.0.0670.pre, %tag9 ], [ %17, %tag22 ], [ %136, %normal-dest ], [ %76, %tag76 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %24 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0670, 0
  %25 = insertvalue { {}*, i64 } %24, i64 1, 1
  ret { {}*, i64 } %25

tag18:                                            ; preds = %tag22
  %26 = ptrtoint {}* %farg1 to i64
  %tag-only183562 = and i64 %26, 7
  %consp-test184 = icmp eq i64 %tag-only183562, 3
  br i1 %consp-test184, label %tag50, label %tag13

tag22:                                            ; preds = %tag37
  %27 = icmp eq {}* %17, %42
  br i1 %27, label %tag17, label %tag18

tag25:                                            ; preds = %tag32
  %28 = ptrtoint {}* %.in581 to i64
  %fixnum-tag-only187582 = and i64 %28, 3
  %fixnump-test188 = icmp eq i64 %fixnum-tag-only187582, 0
  br i1 %fixnump-test188, label %tag71, label %tag57

tag26:                                            ; preds = %tag13, %normal-dest176, %tag50
  %29 = phi {}* [ %42, %tag50 ], [ %152, %normal-dest176 ], [ %42, %tag13 ]
  %x177.0 = phi {}* [ %54, %tag50 ], [ %x177.1, %normal-dest176 ], [ %42, %tag13 ]
  %30 = ptrtoint {}* %x177.0 to i64
  %tag-only190563 = and i64 %30, 7
  %consp-test191 = icmp eq i64 %tag-only190563, 3
  br i1 %consp-test191, label %tag59, label %tag96

tag29:                                            ; preds = %header-check-br474, %header-check-br474, %header-check-br474, %header-check-br474
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 121), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest193 unwind label %cleanup-lpad.loopexit

tag30:                                            ; preds = %tag98
  %33 = invoke float @from_object_float({}* %124)
          to label %normal-dest209 unwind label %cleanup-lpad.loopexit.split-lp

tag32:                                            ; preds = %tag97, %normal-dest376, %tag121
  %.in581 = phi {}* [ %110, %tag121 ], [ %.in, %normal-dest376 ], [ %.val672, %tag97 ]
  %34 = bitcast {}* %.in581 to i8*
  %35 = ptrtoint %"class.core::T_O"* %133 to i64
  %36 = add i64 %35, -3
  %37 = inttoptr i64 %36 to %"class.gctools::smart_ptr"*
  %38 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %37, i64 0, i32 0
  %39 = load %"class.core::T_O"*, %"class.core::T_O"** %38, align 8, !tbaa !31
  %40 = bitcast %"class.core::T_O"* %39 to {}*
  %41 = ptrtoint %"class.core::T_O"* %39 to i64
  %fixnum-tag-only225572 = and i64 %41, 3
  %fixnump-test226 = icmp eq i64 %fixnum-tag-only225572, 0
  br i1 %fixnump-test226, label %tag25, label %tag63

tag37:                                            ; preds = %tag66, %normal-dest202
  %42 = phi {}* [ %154, %normal-dest202 ], [ %.val658, %tag66 ]
  %G165635.0 = phi {}* [ %G165635.1, %normal-dest202 ], [ %67, %tag66 ]
  %43 = icmp eq {}* %G165635.0, %42
  br i1 %43, label %tag37.tag76_crit_edge, label %tag22

tag37.tag76_crit_edge:                            ; preds = %tag37
  %.val.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  br label %tag76

tag38:                                            ; preds = %tag53
  %44 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %45 = invoke {}* @cc_safe_fdefinition({}* %44)
          to label %normal-dest235 unwind label %cleanup-lpad.loopexit.split-lp

tag39:                                            ; preds = %tag96, %normal-dest507, %tag59
  %.val674 = phi {}* [ %29, %tag59 ], [ %215, %normal-dest507 ], [ %29, %tag96 ]
  %x250.0 = phi {}* [ %64, %tag59 ], [ %x250.1, %normal-dest507 ], [ %29, %tag96 ]
  %46 = ptrtoint {}* %x250.0 to i64
  %tag-only254564 = and i64 %46, 7
  %consp-test255 = icmp eq i64 %tag-only254564, 3
  %.val663 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165571.0 = select i1 %consp-test255, {}* %.val663, {}* %.val674
  %47 = icmp eq {}* %G165571.0, %.val674
  br i1 %47, label %tag102, label %tag51

tag40:                                            ; preds = %tag63
  %48 = ptrtoint {}* %.in581 to i64
  %single-float-tag-only256 = and i64 %48, 7
  %49 = icmp eq i64 %single-float-tag-only256, 6
  br i1 %49, label %tag, label %tag57

tag46:                                            ; preds = %header-check-br259
  %ptrtoint269 = ptrtoint {}* %.in581 to i64
  %tag-only270 = and i64 %ptrtoint269, 7
  %test271 = icmp eq i64 %tag-only270, 1
  br i1 %test271, label %header-check-br268, label %tag57

tag49:                                            ; preds = %tag123, %normal-dest466, %tag114
  %.val672 = phi {}* [ %.val668.pre, %tag114 ], [ %204, %normal-dest466 ], [ %111, %tag123 ]
  %x164.0 = phi {}* [ %106, %tag114 ], [ %x164.1, %normal-dest466 ], [ %111, %tag123 ]
  %50 = ptrtoint {}* %x164.0 to i64
  %tag-only280571 = and i64 %50, 7
  %consp-test281 = icmp eq i64 %tag-only280571, 3
  %.val667 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165509.0 = select i1 %consp-test281, {}* %.val667, {}* %.val672
  %51 = icmp eq {}* %G165509.0, %.val672
  br i1 %51, label %tag97, label %tag121

tag50:                                            ; preds = %tag18
  %52 = add i64 %26, 5
  %53 = inttoptr i64 %52 to {}**
  %54 = load {}*, {}** %53, align 8
  br label %tag26

tag51:                                            ; preds = %tag39
  %55 = add i64 %46, -3
  %56 = inttoptr i64 %55 to {}**
  %57 = load {}*, {}** %56, align 8
  br label %tag127

tag53:                                            ; preds = %tag116
  %58 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %125, i64 %107)
  %result = extractvalue { i64, i1 } %58, 0
  %overflow = extractvalue { i64, i1 } %58, 1
  %59 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag38, label %tag120

tag57:                                            ; preds = %tag63, %header-check-br268, %tag46, %header-check-br259, %tag40, %tag25
  %60 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest290 unwind label %cleanup-lpad.loopexit.split-lp

tag59:                                            ; preds = %tag26
  %62 = add i64 %30, 5
  %63 = inttoptr i64 %62 to {}**
  %64 = load {}*, {}** %63, align 8
  br label %tag39

tag62:                                            ; preds = %tag129, %tag116, %header-check-br451, %tag98, %header-check-br388, %tag85
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest313 unwind label %cleanup-lpad.loopexit.split-lp

tag63:                                            ; preds = %tag32
  %trunc669 = trunc i64 %41 to i3
  switch i3 %trunc669, label %tag57 [
    i3 -2, label %tag40
    i3 1, label %header-check-br259
  ]

tag66:                                            ; preds = %tag90, %normal-dest403, %tag88
  %.val658 = phi {}* [ %16, %tag88 ], [ %193, %normal-dest403 ], [ %G165664.0, %tag90 ]
  %67 = phi {}* [ %G165664.0, %tag88 ], [ %.val657.pre, %normal-dest403 ], [ %G165664.0, %tag90 ]
  %.in625 = phi {}* [ %91, %tag88 ], [ %.in624, %normal-dest403 ], [ %G165664.0, %tag90 ]
  %68 = bitcast {}* %.in625 to i8*
  %69 = icmp eq {}* %.in625, %farg0
  %G165644.0 = select i1 %69, {}* %67, {}* %.val658
  %70 = icmp eq {}* %G165644.0, %.val658
  br i1 %70, label %tag91, label %tag37

tag68:                                            ; preds = %tag71
  %71 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest343 unwind label %cleanup-lpad.loopexit.split-lp

tag71:                                            ; preds = %tag25
  %73 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %41, i64 %28)
  %result359 = extractvalue { i64, i1 } %73, 0
  %overflow360 = extractvalue { i64, i1 } %73, 1
  %74 = inttoptr i64 %result359 to {}*
  br i1 %overflow360, label %tag68, label %tag107

tag74:                                            ; preds = %tag3
  %75 = icmp eq {}* %G165664.0, %16
  br i1 %75, label %tag90, label %tag88

tag76:                                            ; preds = %tag37.tag76_crit_edge, %header-check-br474, %header-check-br227, %tag112, %tag91
  %.val = phi {}* [ %.val.pre, %tag37.tag76_crit_edge ], [ %67, %tag91 ], [ %67, %tag112 ], [ %67, %header-check-br227 ], [ %67, %header-check-br474 ]
  %76 = phi {}* [ %42, %tag37.tag76_crit_edge ], [ %.val658, %tag91 ], [ %.val658, %tag112 ], [ %.val658, %header-check-br227 ], [ %.val658, %header-check-br474 ]
  %77 = add i64 %18, 5
  %78 = inttoptr i64 %77 to {}**
  %79 = load {}*, {}** %78, align 8
  %80 = icmp eq {}* %79, %76
  %object.0 = select i1 %80, {}* %.val, {}* %76
  %81 = icmp eq {}* %object.0, %76
  %G165610.0 = select i1 %81, {}* %.val, {}* %76
  %82 = icmp eq {}* %G165610.0, %76
  br i1 %82, label %tag17, label %tag3

tag77:                                            ; preds = %tag3
  %83 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest367 unwind label %cleanup-lpad.loopexit.split-lp

tag81:                                            ; preds = %tag97
  %85 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest369 unwind label %cleanup-lpad.loopexit.split-lp

tag85:                                            ; preds = %header-check-br451
  %ptrtoint389 = ptrtoint {}* %.in597 to i64
  %tag-only390 = and i64 %ptrtoint389, 7
  %test391 = icmp eq i64 %tag-only390, 1
  br i1 %test391, label %header-check-br388, label %tag62

tag87:                                            ; preds = %tag90
  %87 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest396 unwind label %cleanup-lpad.loopexit

tag88:                                            ; preds = %tag74
  %89 = add i64 %18, -3
  %90 = inttoptr i64 %89 to {}**
  %91 = load {}*, {}** %90, align 8
  br label %tag66

tag90:                                            ; preds = %tag74
  br i1 %15, label %tag87, label %tag66

tag91:                                            ; preds = %tag66
  br i1 %brmerge, label %tag76, label %header-check-br227

tag92:                                            ; preds = %header-check-br388
  %92 = invoke double @from_object_double({}* nonnull %124)
          to label %normal-dest416 unwind label %cleanup-lpad.loopexit.split-lp

tag96:                                            ; preds = %tag26
  %93 = icmp eq {}* %x177.0, %29
  %.val661 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165584.0 = select i1 %93, {}* %.val661, {}* %29
  %94 = icmp eq {}* %G165584.0, %29
  br i1 %94, label %tag124, label %tag39

tag97:                                            ; preds = %tag49
  %95 = icmp eq {}* %x164.0, %.val672
  %G165502.0 = select i1 %95, {}* %.val667, {}* %.val672
  %96 = icmp eq {}* %G165502.0, %.val672
  br i1 %96, label %tag81, label %tag32

tag98:                                            ; preds = %tag129
  %97 = ptrtoint {}* %.in597 to i64
  %single-float-tag-only443 = and i64 %97, 7
  %98 = icmp eq i64 %single-float-tag-only443, 6
  br i1 %98, label %tag30, label %tag62

tag102:                                           ; preds = %tag39
  %99 = icmp eq {}* %x250.0, %.val674
  %G165564.0 = select i1 %99, {}* %.val663, {}* %.val674
  %100 = icmp eq {}* %G165564.0, %.val674
  br i1 %100, label %tag126, label %tag127

tag105:                                           ; preds = %tag123
  %101 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest459 unwind label %cleanup-lpad.loopexit.split-lp

tag107:                                           ; preds = %tag71
  call void @cc_writeCell({}* %134, {}* %74)
  br label %tag9

tag112:                                           ; preds = %header-check-br227, %header-check-br227, %header-check-br227, %header-check-br227
  %103 = ptrtoint {}* %.in625 to i64
  %single-float-tag-only481 = and i64 %103, 7
  %fixnum-tag-only266622 = and i64 %103, 3
  %fixnump-test267 = icmp ne i64 %fixnum-tag-only266622, 0
  %test477 = icmp eq i64 %single-float-tag-only481, 1
  %or.cond653 = and i1 %fixnump-test267, %test477
  br i1 %or.cond653, label %header-check-br474, label %tag76

tag114:                                           ; preds = %tag1
  %104 = add i64 %26, 5
  %105 = inttoptr i64 %104 to {}**
  %106 = load {}*, {}** %105, align 8
  %.val668.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag49

tag116:                                           ; preds = %tag127
  %107 = ptrtoint {}* %.in597 to i64
  %fixnum-tag-only482598 = and i64 %107, 3
  %fixnump-test483 = icmp eq i64 %fixnum-tag-only482598, 0
  br i1 %fixnump-test483, label %tag53, label %tag62

tag120:                                           ; preds = %tag53
  call void @cc_writeCell({}* %131, {}* %59)
  br label %tag1

tag121:                                           ; preds = %tag49
  %108 = add i64 %50, -3
  %109 = inttoptr i64 %108 to {}**
  %110 = load {}*, {}** %109, align 8
  br label %tag32

tag123:                                           ; preds = %tag1
  %111 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %112 = icmp eq {}* %111, %farg1
  %.val665 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165522.0 = select i1 %112, {}* %.val665, {}* %111
  %113 = icmp eq {}* %G165522.0, %111
  br i1 %113, label %tag105, label %tag49

tag124:                                           ; preds = %tag96
  %114 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %115 = invoke {}* @cc_safe_fdefinition({}* %114)
          to label %normal-dest500 unwind label %cleanup-lpad.loopexit.split-lp

tag126:                                           ; preds = %tag102
  %116 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %117 = invoke {}* @cc_safe_fdefinition({}* %116)
          to label %normal-dest514 unwind label %cleanup-lpad.loopexit.split-lp

tag127:                                           ; preds = %tag102, %normal-dest521, %tag51
  %.in597 = phi {}* [ %57, %tag51 ], [ %.in596, %normal-dest521 ], [ %.val674, %tag102 ]
  %118 = bitcast {}* %.in597 to i8*
  %119 = ptrtoint %"class.core::T_O"* %130 to i64
  %120 = add i64 %119, -3
  %121 = inttoptr i64 %120 to %"class.gctools::smart_ptr"*
  %122 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %121, i64 0, i32 0
  %123 = load %"class.core::T_O"*, %"class.core::T_O"** %122, align 8, !tbaa !31
  %124 = bitcast %"class.core::T_O"* %123 to {}*
  %125 = ptrtoint %"class.core::T_O"* %123 to i64
  %fixnum-tag-only530565 = and i64 %125, 3
  %fixnump-test531 = icmp eq i64 %fixnum-tag-only530565, 0
  br i1 %fixnump-test531, label %tag116, label %tag129

tag129:                                           ; preds = %tag127
  %trunc = trunc i64 %125 to i3
  switch i3 %trunc, label %tag62 [
    i3 -2, label %tag98
    i3 1, label %header-check-br451
  ]

cleanup-lpad.loopexit:                            ; preds = %tag29, %normal-dest193, %tag87, %normal-dest396
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %tag, %normal-dest138, %normal-dest139, %tag5, %normal-dest147, %normal-dest148, %tag14, %normal-dest172, %tag30, %normal-dest209, %normal-dest211, %tag38, %normal-dest235, %normal-dest367, %tag57, %normal-dest290, %tag62, %normal-dest313, %tag68, %normal-dest343, %tag77, %tag81, %normal-dest369, %tag92, %normal-dest416, %normal-dest417, %tag105, %normal-dest459, %tag124, %normal-dest500, %tag126, %normal-dest514, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %126 = ptrtoint {}* %closure-ptr to i64
  %127 = and i64 %126, -8
  %128 = inttoptr i64 %127 to %1*
  %129 = getelementptr inbounds %1, %1* %128, i64 0, i32 4, i32 1, i64 1, i32 0
  %130 = load %"class.core::T_O"*, %"class.core::T_O"** %129, align 8, !tbaa !31
  %131 = bitcast %"class.core::T_O"* %130 to {}*
  %132 = getelementptr inbounds %1, %1* %128, i64 0, i32 4, i32 1, i64 0, i32 0
  %133 = load %"class.core::T_O"*, %"class.core::T_O"** %132, align 8, !tbaa !31
  %134 = bitcast %"class.core::T_O"* %133 to {}*
  %135 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 333), align 8
  %136 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %137 = icmp eq {}* %135, %136
  %.val677 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %object.0678 = select i1 %137, {}* %.val677, {}* %136
  %138 = icmp eq {}* %object.0678, %136
  %G165610.0679 = select i1 %138, {}* %.val677, {}* %136
  %139 = icmp eq {}* %G165610.0679, %136
  br i1 %139, label %tag17, label %tag3.lr.ph

tag3.lr.ph:                                       ; preds = %normal-dest
  %140 = ptrtoint {}* %farg0 to i64
  %single-float-tag-only415 = and i64 %140, 7
  %fixnum-tag-only275620 = and i64 %140, 3
  %fixnump-test276 = icmp eq i64 %fixnum-tag-only275620, 0
  %test230 = icmp ne i64 %single-float-tag-only415, 1
  %irc-bit-cast231 = bitcast {}* %farg0 to i8*
  %gep232 = getelementptr inbounds i8, i8* %irc-bit-cast231, i64 -9
  %irc-bit-cast233 = bitcast i8* %gep232 to i64*
  %brmerge = or i1 %test230, %fixnump-test276
  br label %tag3

normal-dest138:                                   ; preds = %tag
  %141 = invoke float @from_object_float({}* %.in581)
          to label %normal-dest139 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest139:                                   ; preds = %normal-dest138
  %142 = fadd float %14, %141
  %143 = invoke {}* @to_object_float(float %142)
          to label %normal-dest140 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest140:                                   ; preds = %normal-dest139
  call void @cc_writeCell({}* %134, {}* %143)
  br label %tag9

normal-dest147:                                   ; preds = %tag5
  %144 = invoke double @from_object_double({}* nonnull %.in581)
          to label %normal-dest148 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest148:                                   ; preds = %normal-dest147
  %145 = fadd double %19, %144
  %146 = invoke {}* @to_object_double(double %145)
          to label %normal-dest149 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest149:                                   ; preds = %normal-dest148
  call void @cc_writeCell({}* %134, {}* %146)
  br label %tag9

normal-dest172:                                   ; preds = %tag14
  %147 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %148 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %149 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %150 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint173 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint173, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 5, {}* %147, {}* %148, {}* %farg1, {}* %149, {}* %150)
          to label %normal-dest176 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest176:                                   ; preds = %normal-dest172
  %.elt612 = extractvalue { {}*, i64 } %151, 0
  %.elt614 = extractvalue { {}*, i64 } %151, 1
  %cond554 = icmp eq i64 %.elt614, 0
  %152 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x177.1 = select i1 %cond554, {}* %152, {}* %.elt612
  br label %tag26

normal-dest193:                                   ; preds = %tag29
  %ptrtoint196 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint197 = add i64 %ptrtoint196, 7
  %entry-point-addr198 = inttoptr i64 %entry-point-addr-uint197 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point199 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr198, align 8
  %153 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point199({}* %32, i64 2, {}* nonnull %farg0, {}* nonnull %.in625, {}* null, {}* null)
          to label %normal-dest202 unwind label %cleanup-lpad.loopexit

normal-dest202:                                   ; preds = %normal-dest193
  %.elt627 = extractvalue { {}*, i64 } %153, 0
  %.elt629 = extractvalue { {}*, i64 } %153, 1
  %cond556 = icmp eq i64 %.elt629, 0
  %154 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165635.1 = select i1 %cond556, {}* %154, {}* %.elt627
  br label %tag37

normal-dest209:                                   ; preds = %tag30
  %155 = invoke float @from_object_float({}* %.in597)
          to label %normal-dest211 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest211:                                   ; preds = %normal-dest209
  %156 = fadd float %33, %155
  %157 = invoke {}* @to_object_float(float %156)
          to label %normal-dest212 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest212:                                   ; preds = %normal-dest211
  call void @cc_writeCell({}* %131, {}* %157)
  br label %tag1

header-check-br227:                               ; preds = %tag91
  %158 = load i64, i64* %irc-bit-cast233, align 8
  %159 = add i64 %158, -1309
  %160 = lshr i64 %159, 3
  %161 = shl i64 %159, 61
  %162 = or i64 %160, %161
  switch i64 %162, label %tag76 [
    i64 2, label %tag112
    i64 4, label %tag112
    i64 5, label %tag112
    i64 0, label %tag112
  ]

normal-dest235:                                   ; preds = %tag38
  %ptrtoint236 = ptrtoint {}* %45 to i64
  %entry-point-addr-uint237 = add i64 %ptrtoint236, 7
  %entry-point-addr238 = inttoptr i64 %entry-point-addr-uint237 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point239 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr238, align 8
  %163 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point239({}* %45, i64 1, {}* %59, {}* null, {}* null, {}* null)
          to label %normal-dest242 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest242:                                   ; preds = %normal-dest235
  %.elt600 = extractvalue { {}*, i64 } %163, 0
  %.elt602 = extractvalue { {}*, i64 } %163, 1
  %cond551 = icmp eq i64 %.elt602, 0
  %164 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165702.0 = select i1 %cond551, {}* %164, {}* %.elt600
  call void @cc_writeCell({}* %131, {}* %G165702.0)
  br label %tag1

header-check-br259:                               ; preds = %tag63
  %gep264 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %39, i64 -9, i32 0
  %irc-bit-cast265 = bitcast i8* %gep264 to i64*
  %165 = load i64, i64* %irc-bit-cast265, align 8
  %166 = icmp eq i64 %165, 1325
  br i1 %166, label %tag46, label %tag57

header-check-br268:                               ; preds = %tag46
  %gep273 = getelementptr inbounds i8, i8* %34, i64 -9
  %irc-bit-cast274 = bitcast i8* %gep273 to i64*
  %167 = load i64, i64* %irc-bit-cast274, align 8
  %168 = icmp eq i64 %167, 1325
  br i1 %168, label %tag5, label %tag57

normal-dest288:                                   ; preds = %normal-dest367
  call void @unreachableError()
  unreachable

normal-dest290:                                   ; preds = %tag57
  %ptrtoint291 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint292 = add i64 %ptrtoint291, 7
  %entry-point-addr293 = inttoptr i64 %entry-point-addr-uint292 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point294 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr293, align 8
  %169 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point294({}* %61, i64 2, {}* %40, {}* %.in581, {}* null, {}* null)
          to label %normal-dest297 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest297:                                   ; preds = %normal-dest290
  %.elt574 = extractvalue { {}*, i64 } %169, 0
  %.elt576 = extractvalue { {}*, i64 } %169, 1
  %cond547 = icmp eq i64 %.elt576, 0
  %170 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165691.0 = select i1 %cond547, {}* %170, {}* %.elt574
  call void @cc_writeCell({}* %134, {}* %G165691.0)
  br label %tag9

normal-dest313:                                   ; preds = %tag62
  %ptrtoint314 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint315 = add i64 %ptrtoint314, 7
  %entry-point-addr316 = inttoptr i64 %entry-point-addr-uint315 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point317 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr316, align 8
  %171 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point317({}* %66, i64 2, {}* %124, {}* %.in597, {}* null, {}* null)
          to label %normal-dest320 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest320:                                   ; preds = %normal-dest313
  %.elt567 = extractvalue { {}*, i64 } %171, 0
  %.elt569 = extractvalue { {}*, i64 } %171, 1
  %cond = icmp eq i64 %.elt569, 0
  %172 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165705.0 = select i1 %cond, {}* %172, {}* %.elt567
  call void @cc_writeCell({}* %131, {}* %G165705.0)
  br label %tag1

normal-dest343:                                   ; preds = %tag68
  %ptrtoint345 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint346 = add i64 %ptrtoint345, 7
  %entry-point-addr347 = inttoptr i64 %entry-point-addr-uint346 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point348 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr347, align 8
  %173 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point348({}* %72, i64 1, {}* %74, {}* null, {}* null, {}* null)
          to label %normal-dest351 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest351:                                   ; preds = %normal-dest343
  %.elt584 = extractvalue { {}*, i64 } %173, 0
  %.elt586 = extractvalue { {}*, i64 } %173, 1
  %cond548 = icmp eq i64 %.elt586, 0
  %174 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165688.0 = select i1 %cond548, {}* %174, {}* %.elt584
  call void @cc_writeCell({}* %134, {}* %G165688.0)
  br label %tag9

normal-dest367:                                   ; preds = %tag77
  %175 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %176 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %177 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %178 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %ptrtoint282 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint283 = add i64 %ptrtoint282, 7
  %entry-point-addr284 = inttoptr i64 %entry-point-addr-uint283 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point285 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr284, align 8
  %179 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point285({}* %84, i64 5, {}* %175, {}* %176, {}* %17, {}* %177, {}* %178)
          to label %normal-dest288 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest369:                                   ; preds = %tag81
  %180 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %181 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %182 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %183 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint370 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint371 = add i64 %ptrtoint370, 7
  %entry-point-addr372 = inttoptr i64 %entry-point-addr-uint371 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point373 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr372, align 8
  %184 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point373({}* %86, i64 5, {}* %180, {}* %181, {}* %x164.0, {}* %182, {}* %183)
          to label %normal-dest376 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest376:                                   ; preds = %normal-dest369
  %.elt588 = extractvalue { {}*, i64 } %184, 0
  %.elt590 = extractvalue { {}*, i64 } %184, 1
  %cond549 = icmp eq i64 %.elt590, 0
  %185 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in = select i1 %cond549, {}* %185, {}* %.elt588
  br label %tag32

header-check-br388:                               ; preds = %tag85
  %gep393 = getelementptr inbounds i8, i8* %118, i64 -9
  %irc-bit-cast394 = bitcast i8* %gep393 to i64*
  %186 = load i64, i64* %irc-bit-cast394, align 8
  %187 = icmp eq i64 %186, 1325
  br i1 %187, label %tag92, label %tag62

normal-dest396:                                   ; preds = %tag87
  %188 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %189 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %190 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %191 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint397 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint398 = add i64 %ptrtoint397, 7
  %entry-point-addr399 = inttoptr i64 %entry-point-addr-uint398 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point400 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr399, align 8
  %192 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point400({}* %88, i64 5, {}* %188, {}* %189, {}* %17, {}* %190, {}* %191)
          to label %normal-dest403 unwind label %cleanup-lpad.loopexit

normal-dest403:                                   ; preds = %normal-dest396
  %.elt631 = extractvalue { {}*, i64 } %192, 0
  %.elt633 = extractvalue { {}*, i64 } %192, 1
  %cond557 = icmp eq i64 %.elt633, 0
  %193 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in624 = select i1 %cond557, {}* %193, {}* %.elt631
  %.val657.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  br label %tag66

normal-dest416:                                   ; preds = %tag92
  %194 = invoke double @from_object_double({}* nonnull %.in597)
          to label %normal-dest417 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest417:                                   ; preds = %normal-dest416
  %195 = fadd double %92, %194
  %196 = invoke {}* @to_object_double(double %195)
          to label %normal-dest418 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest418:                                   ; preds = %normal-dest417
  call void @cc_writeCell({}* %131, {}* %196)
  br label %tag1

header-check-br451:                               ; preds = %tag129
  %gep456 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %123, i64 -9, i32 0
  %irc-bit-cast457 = bitcast i8* %gep456 to i64*
  %197 = load i64, i64* %irc-bit-cast457, align 8
  %198 = icmp eq i64 %197, 1325
  br i1 %198, label %tag85, label %tag62

normal-dest459:                                   ; preds = %tag105
  %199 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %200 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %201 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %202 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint460 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint461 = add i64 %ptrtoint460, 7
  %entry-point-addr462 = inttoptr i64 %entry-point-addr-uint461 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point463 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr462, align 8
  %203 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point463({}* %102, i64 5, {}* %199, {}* %200, {}* %farg1, {}* %201, {}* %202)
          to label %normal-dest466 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest466:                                   ; preds = %normal-dest459
  %.elt592 = extractvalue { {}*, i64 } %203, 0
  %.elt594 = extractvalue { {}*, i64 } %203, 1
  %cond550 = icmp eq i64 %.elt594, 0
  %204 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x164.1 = select i1 %cond550, {}* %204, {}* %.elt592
  br label %tag49

header-check-br474:                               ; preds = %tag112
  %gep479 = getelementptr inbounds i8, i8* %68, i64 -9
  %irc-bit-cast480 = bitcast i8* %gep479 to i64*
  %205 = load i64, i64* %irc-bit-cast480, align 8
  %206 = add i64 %205, -1309
  %207 = lshr i64 %206, 3
  %208 = shl i64 %206, 61
  %209 = or i64 %207, %208
  switch i64 %209, label %tag76 [
    i64 2, label %tag29
    i64 4, label %tag29
    i64 5, label %tag29
    i64 0, label %tag29
  ]

normal-dest500:                                   ; preds = %tag124
  %210 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %211 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %212 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %213 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint501 = ptrtoint {}* %115 to i64
  %entry-point-addr-uint502 = add i64 %ptrtoint501, 7
  %entry-point-addr503 = inttoptr i64 %entry-point-addr-uint502 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point504 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr503, align 8
  %214 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point504({}* %115, i64 5, {}* %210, {}* %211, {}* %x177.0, {}* %212, {}* %213)
          to label %normal-dest507 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest507:                                   ; preds = %normal-dest500
  %.elt608 = extractvalue { {}*, i64 } %214, 0
  %.elt610 = extractvalue { {}*, i64 } %214, 1
  %cond553 = icmp eq i64 %.elt610, 0
  %215 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x250.1 = select i1 %cond553, {}* %215, {}* %.elt608
  br label %tag39

normal-dest514:                                   ; preds = %tag126
  %216 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %217 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %218 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %219 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint515 = ptrtoint {}* %117 to i64
  %entry-point-addr-uint516 = add i64 %ptrtoint515, 7
  %entry-point-addr517 = inttoptr i64 %entry-point-addr-uint516 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point518 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr517, align 8
  %220 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point518({}* %117, i64 5, {}* %216, {}* %217, {}* %x250.0, {}* %218, {}* %219)
          to label %normal-dest521 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest521:                                   ; preds = %normal-dest514
  %.elt604 = extractvalue { {}*, i64 } %220, 0
  %.elt606 = extractvalue { {}*, i64 } %220, 1
  %cond552 = icmp eq i64 %.elt606, 0
  %221 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in596 = select i1 %cond552, {}* %221, {}* %.elt604
  br label %tag127
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.8"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !45 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.8^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.8^DESC" to %0*)) #7
          to label %.noexc5175 unwind label %cleanup-lpad

.noexc5175:                                       ; preds = %13
  unreachable

tag5:                                             ; preds = %tag700
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %15 = icmp eq {}* %x1556.0, %14
  %.val5368 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163271.0 = select i1 %15, {}* %.val5368, {}* %14
  %16 = icmp eq {}* %G163271.0, %14
  br i1 %16, label %tag496, label %tag740

tag12:                                            ; preds = %tag82
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest988 unwind label %cleanup-lpad

tag15:                                            ; preds = %tag237
  %19 = add i64 %177, -3
  %20 = inttoptr i64 %19 to {}**
  %21 = load {}*, {}** %20, align 8
  br label %tag523

tag16:                                            ; preds = %tag295, %tag310, %normal-dest4370
  %x1603.0 = phi {}* [ %204, %tag310 ], [ %x1603.1, %normal-dest4370 ], [ %.val5397, %tag295 ]
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest1015 unwind label %cleanup-lpad

tag17:                                            ; preds = %tag805, %tag431, %tag35
  %24 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %25 = insertvalue { {}*, i64 } undef, {}* %24, 0
  %26 = insertvalue { {}*, i64 } %25, i64 1, 1
  ret { {}*, i64 } %26

tag22:                                            ; preds = %tag691
  %27 = add i64 %421, 5
  %28 = inttoptr i64 %27 to {}**
  %29 = load {}*, {}** %28, align 8
  br label %tag781

tag30:                                            ; preds = %normal-dest2774
  %30 = icmp eq i64 %tag-only2509, 6
  %fixnum-tag-only42445007 = and i64 %ptrtoint2508, 3
  %fixnump-test4245 = icmp eq i64 %fixnum-tag-only42445007, 0
  %or.cond5304 = or i1 %30, %fixnump-test4245
  br i1 %or.cond5304, label %tag719, label %tag109

tag31:                                            ; preds = %tag632
  %31 = add i64 %388, -3
  %32 = inttoptr i64 %31 to {}**
  %33 = load {}*, {}** %32, align 8
  br label %tag188

tag35:                                            ; preds = %tag853, %normal-dest4303, %tag66
  %G162540.0 = phi {}* [ %56, %tag66 ], [ %G162540.1, %normal-dest4303 ], [ %.val5443, %tag853 ]
  %ptrtoint1043 = ptrtoint {}* %G162532.0 to i64
  %entry-point-addr-uint1044 = add i64 %ptrtoint1043, 7
  %entry-point-addr1045 = inttoptr i64 %entry-point-addr-uint1044 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1046 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1045, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1046({}* %G162532.0, i64 8, {}* %553, {}* %farg0, {}* %G162535.0, {}* %G162536.0, {}* %G162537.1, {}* %G162538.0, {}* %G162539.0, {}* %G162540.0)
          to label %tag17 unwind label %cleanup-lpad

tag41:                                            ; preds = %tag201, %normal-dest2501, %tag692
  %.val5447 = phi {}* [ %.val5426.pre, %tag692 ], [ %785, %normal-dest2501 ], [ %146, %tag201 ]
  %x1070.0 = phi {}* [ %424, %tag692 ], [ %x1070.1, %normal-dest2501 ], [ %146, %tag201 ]
  %35 = ptrtoint {}* %x1070.0 to i64
  %tag-only10745002 = and i64 %35, 7
  %consp-test1075 = icmp eq i64 %tag-only10745002, 3
  %.val5425 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162745.0 = select i1 %consp-test1075, {}* %.val5425, {}* %.val5447
  %36 = icmp eq {}* %G162745.0, %.val5447
  br i1 %36, label %tag633, label %tag787

tag43:                                            ; preds = %tag212
  %37 = add i64 %163, -3
  %38 = inttoptr i64 %37 to {}**
  %39 = load {}*, {}** %38, align 8
  br label %tag825

tag51:                                            ; preds = %tag658
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest1097 unwind label %cleanup-lpad

tag52:                                            ; preds = %tag602, %normal-dest3538, %tag739
  %.val5449 = phi {}* [ %.val5419.pre, %tag739 ], [ %921, %normal-dest3538 ], [ %371, %tag602 ]
  %x1112.0 = phi {}* [ %455, %tag739 ], [ %x1112.1, %normal-dest3538 ], [ %371, %tag602 ]
  %42 = ptrtoint {}* %x1112.0 to i64
  %tag-only11164979 = and i64 %42, 7
  %consp-test1117 = icmp eq i64 %tag-only11164979, 3
  %.val5418 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162842.0 = select i1 %consp-test1117, {}* %.val5418, {}* %.val5449
  %43 = icmp eq {}* %G162842.0, %.val5449
  br i1 %43, label %tag197, label %tag581

tag55:                                            ; preds = %normal-dest3216
  %44 = add i64 %890, 5
  %45 = inttoptr i64 %44 to {}**
  %46 = load {}*, {}** %45, align 8
  br label %tag687

tag60:                                            ; preds = %tag573
  %47 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest1124 unwind label %cleanup-lpad

tag62:                                            ; preds = %normal-dest2232
  %49 = add i64 %163, 5
  %50 = inttoptr i64 %49 to {}**
  %51 = load {}*, {}** %50, align 8
  br label %tag933

tag65:                                            ; preds = %normal-dest1610
  %52 = icmp eq {}* %643, %farg1
  %.val5386 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163018.0 = select i1 %52, {}* %.val5386, {}* %643
  %53 = icmp eq {}* %G163018.0, %643
  br i1 %53, label %tag117, label %tag209

tag66:                                            ; preds = %tag729
  %54 = add i64 %448, -3
  %55 = inttoptr i64 %54 to {}**
  %56 = load {}*, {}** %55, align 8
  br label %tag35

tag68:                                            ; preds = %tag740
  %57 = icmp eq {}* %x2941.0, %.val5401
  %G163251.0 = select i1 %57, {}* %.val5370, {}* %.val5401
  %58 = icmp eq {}* %G163251.0, %.val5401
  br i1 %58, label %tag883, label %tag723

tag70:                                            ; preds = %tag914, %header-check-br3904, %tag506, %header-check-br2981, %tag132
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest1174 unwind label %cleanup-lpad

tag72:                                            ; preds = %normal-dest3448, %normal-dest1467, %normal-dest1300
  %G164070.0 = phi {}* [ %594, %normal-dest1300 ], [ %624, %normal-dest1467 ], [ %G164070.1, %normal-dest3448 ]
  %ptrtoint1196 = ptrtoint {}* %345 to i64
  %entry-point-addr-uint1197 = add i64 %ptrtoint1196, 7
  %entry-point-addr1198 = inttoptr i64 %entry-point-addr-uint1197 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1199 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1198, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1199({}* %345, i64 1, {}* %G164070.0, {}* null, {}* null, {}* null)
          to label %normal-dest1202 unwind label %cleanup-lpad

tag73:                                            ; preds = %tag884
  %62 = add i64 %514, 5
  %63 = inttoptr i64 %62 to {}**
  %64 = load {}*, {}** %63, align 8
  br label %tag202

tag82:                                            ; preds = %tag400
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %66 = icmp eq {}* %x1504.0, %65
  %.val5382 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163077.0 = select i1 %66, {}* %.val5382, {}* %65
  %67 = icmp eq {}* %G163077.0, %65
  br i1 %67, label %tag12, label %tag667

tag83:                                            ; preds = %tag170, %tag841, %normal-dest1629
  %x1630.0 = phi {}* [ %501, %tag841 ], [ %.in5057, %normal-dest1629 ], [ %.val5445, %tag170 ]
  %68 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %69 = invoke {}* @cc_safe_fdefinition({}* %68)
          to label %normal-dest1265 unwind label %cleanup-lpad

tag84:                                            ; preds = %tag749
  %70 = icmp eq {}* %464, %farg1
  %.val5410 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162908.0 = select i1 %70, {}* %.val5410, {}* %464
  %71 = icmp eq {}* %G162908.0, %464
  br i1 %71, label %tag513, label %tag778

tag87:                                            ; preds = %tag679
  %72 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %73 = icmp eq {}* %x2531.0, %72
  %.val5328 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G164024.0 = select i1 %73, {}* %.val5328, {}* %72
  %74 = icmp eq {}* %G164024.0, %72
  br i1 %74, label %tag898, label %tag744

tag88:                                            ; preds = %header-check-br2150
  %75 = invoke double @from_object_double({}* nonnull %.in4616)
          to label %normal-dest1298 unwind label %cleanup-lpad

tag89:                                            ; preds = %tag847
  %76 = invoke float @from_object_float({}* %.in4920)
          to label %normal-dest1303 unwind label %cleanup-lpad

tag92:                                            ; preds = %normal-dest2423, %normal-dest2337, %normal-dest2178
  %G163952.0 = phi {}* [ %G163952.1, %normal-dest2178 ], [ %758, %normal-dest2337 ], [ %779, %normal-dest2423 ]
  %ptrtoint1320 = ptrtoint {}* %945 to i64
  %entry-point-addr-uint1321 = add i64 %ptrtoint1320, 7
  %entry-point-addr1322 = inttoptr i64 %entry-point-addr-uint1321 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1323 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1322, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1323({}* %945, i64 1, {}* %G163952.0, {}* null, {}* null, {}* null)
          to label %normal-dest1326 unwind label %cleanup-lpad

tag99:                                            ; preds = %normal-dest2232
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %79 = icmp eq {}* %78, %farg1
  %.val5373 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163190.0 = select i1 %79, {}* %.val5373, {}* %78
  %80 = icmp eq {}* %G163190.0, %78
  br i1 %80, label %tag367, label %tag933

tag102:                                           ; preds = %tag439
  %81 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %82 = invoke {}* @cc_safe_fdefinition({}* %81)
          to label %normal-dest1356 unwind label %cleanup-lpad

tag105:                                           ; preds = %tag106, %normal-dest4384, %tag671
  %.val5445 = phi {}* [ %.val5433.pre, %tag671 ], [ %1045, %normal-dest4384 ], [ %85, %tag106 ]
  %x1371.0 = phi {}* [ %410, %tag671 ], [ %x1371.1, %normal-dest4384 ], [ %85, %tag106 ]
  %83 = ptrtoint {}* %x1371.0 to i64
  %tag-only13755023 = and i64 %83, 7
  %consp-test1376 = icmp eq i64 %tag-only13755023, 3
  %.val5432 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162648.0 = select i1 %consp-test1376, {}* %.val5432, {}* %.val5445
  %84 = icmp eq {}* %G162648.0, %.val5445
  br i1 %84, label %tag170, label %tag841

tag106:                                           ; preds = %tag450
  %85 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %86 = icmp eq {}* %x1106.0, %85
  %.val5430 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162661.0 = select i1 %86, {}* %.val5430, {}* %85
  %87 = icmp eq {}* %G162661.0, %85
  br i1 %87, label %tag947, label %tag105

tag109:                                           ; preds = %switch.early.test5484, %tag30
  %88 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest1395 unwind label %cleanup-lpad

tag114:                                           ; preds = %tag398
  %90 = icmp eq {}* %x1933.0, %.val5356
  %G164154.0 = select i1 %90, {}* %.val5318, {}* %.val5356
  %91 = icmp eq {}* %G164154.0, %.val5356
  br i1 %91, label %tag521, label %tag571

tag116:                                           ; preds = %header-check-br2981
  %92 = invoke double @from_object_double({}* nonnull %.in5088)
          to label %normal-dest1419 unwind label %cleanup-lpad

tag117:                                           ; preds = %tag65
  %93 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest1423 unwind label %cleanup-lpad

tag128:                                           ; preds = %tag633, %normal-dest3366, %tag787
  %.in5072 = phi {}* [ %483, %tag787 ], [ %.in5071, %normal-dest3366 ], [ %.val5447, %tag633 ]
  %95 = bitcast {}* %.in5072 to i8*
  %96 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest2767 unwind label %cleanup-lpad

tag132:                                           ; preds = %tag914
  %98 = icmp eq i64 %tag-only1638, 6
  br i1 %98, label %tag307, label %tag70

tag135:                                           ; preds = %tag177
  %99 = invoke float @from_object_float({}* %.in4616)
          to label %normal-dest1466 unwind label %cleanup-lpad

tag140:                                           ; preds = %tag463
  %100 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest1485 unwind label %cleanup-lpad

tag141:                                           ; preds = %tag707
  %102 = invoke float @from_object_float({}* %.in5072)
          to label %normal-dest1501 unwind label %cleanup-lpad

tag148:                                           ; preds = %header-check-br981
  %103 = invoke double @from_object_double({}* nonnull %.in5072)
          to label %normal-dest1527 unwind label %cleanup-lpad

tag152:                                           ; preds = %tag780
  %104 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %105 = invoke {}* @cc_safe_fdefinition({}* %104)
          to label %normal-dest1547 unwind label %cleanup-lpad

tag155:                                           ; preds = %tag380
  %106 = icmp eq {}* %x2419.0, %238
  %.val5390 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162986.0 = select i1 %106, {}* %.val5390, {}* %238
  %107 = icmp eq {}* %G162986.0, %238
  br i1 %107, label %tag373, label %tag536

tag164:                                           ; preds = %tag170
  %108 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest1622 unwind label %cleanup-lpad

tag165:                                           ; preds = %tag197, %normal-dest4121, %tag581
  %.in5088 = phi {}* [ %357, %tag581 ], [ %.in5087, %normal-dest4121 ], [ %.val5449, %tag197 ]
  %110 = bitcast {}* %.in5088 to i8*
  %111 = ptrtoint %"class.core::T_O"* %551 to i64
  %112 = add i64 %111, -3
  %113 = inttoptr i64 %112 to %"class.gctools::smart_ptr"*
  %114 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %113, i64 0, i32 0
  %115 = load %"class.core::T_O"*, %"class.core::T_O"** %114, align 8, !tbaa !31
  %116 = bitcast %"class.core::T_O"* %115 to {}*
  %ptrtoint1637 = ptrtoint %"class.core::T_O"* %115 to i64
  %tag-only1638 = and i64 %ptrtoint1637, 7
  %test1639 = icmp eq i64 %tag-only1638, 1
  br i1 %test1639, label %header-check-br1636, label %tag916

tag166:                                           ; preds = %tag492, %normal-dest2222, %tag440
  %G162536.0 = phi {}* [ %268, %tag440 ], [ %G162536.1, %normal-dest2222 ], [ %.val5451, %tag492 ]
  %117 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %118 = invoke {}* @cc_safe_fdefinition({}* %117)
          to label %normal-dest1644 unwind label %cleanup-lpad

tag170:                                           ; preds = %tag105
  %119 = icmp eq {}* %x1371.0, %.val5445
  %G162641.0 = select i1 %119, {}* %.val5432, {}* %.val5445
  %120 = icmp eq {}* %G162641.0, %.val5445
  br i1 %120, label %tag164, label %tag83

tag172:                                           ; preds = %tag808, %header-check-br1730
  %121 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %122 = invoke {}* @cc_safe_fdefinition({}* %121)
          to label %normal-dest1666 unwind label %cleanup-lpad

tag174:                                           ; preds = %tag400
  %123 = add i64 %246, 5
  %124 = inttoptr i64 %123 to {}**
  %125 = load {}*, {}** %124, align 8
  %.val5385.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag667

tag176:                                           ; preds = %normal-dest3293, %normal-dest2896, %normal-dest1867
  %G163220.0 = phi {}* [ %694, %normal-dest1867 ], [ %837, %normal-dest2896 ], [ %G163220.1, %normal-dest3293 ]
  %ptrtoint1679 = ptrtoint {}* %319 to i64
  %entry-point-addr-uint1680 = add i64 %ptrtoint1679, 7
  %entry-point-addr1681 = inttoptr i64 %entry-point-addr-uint1680 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1682 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1681, align 8
  %126 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1682({}* %319, i64 1, {}* %G163220.0, {}* null, {}* null, {}* null)
          to label %normal-dest1685 unwind label %cleanup-lpad

tag177:                                           ; preds = %tag555
  %127 = icmp eq i64 %tag-only1743, 6
  br i1 %127, label %tag135, label %tag630

tag180:                                           ; preds = %tag458
  %128 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %129 = invoke {}* @cc_safe_fdefinition({}* %128)
          to label %normal-dest1710 unwind label %cleanup-lpad

tag188:                                           ; preds = %tag666, %normal-dest4180, %tag31
  %.in4616 = phi {}* [ %33, %tag31 ], [ %.in4615, %normal-dest4180 ], [ %.val5354, %tag666 ]
  %130 = bitcast {}* %.in4616 to i8*
  %131 = ptrtoint %"class.core::T_O"* %551 to i64
  %132 = add i64 %131, -3
  %133 = inttoptr i64 %132 to %"class.gctools::smart_ptr"*
  %134 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %133, i64 0, i32 0
  %135 = load %"class.core::T_O"*, %"class.core::T_O"** %134, align 8, !tbaa !31
  %136 = bitcast %"class.core::T_O"* %135 to {}*
  %ptrtoint1742 = ptrtoint %"class.core::T_O"* %135 to i64
  %tag-only1743 = and i64 %ptrtoint1742, 7
  %test1744 = icmp eq i64 %tag-only1743, 1
  br i1 %test1744, label %header-check-br1741, label %tag662

tag192:                                           ; preds = %tag603
  %137 = add i64 %374, -3
  %138 = inttoptr i64 %137 to {}**
  %139 = load {}*, {}** %138, align 8
  br label %tag805

tag194:                                           ; preds = %tag719
  %trunc5427 = trunc i64 %434 to i3
  switch i3 %trunc5427, label %tag541 [
    i3 -2, label %tag707
    i3 1, label %header-check-br4188
  ]

tag195:                                           ; preds = %tag445
  %140 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %141 = invoke {}* @cc_safe_fdefinition({}* %140)
          to label %normal-dest1751 unwind label %cleanup-lpad

tag197:                                           ; preds = %tag52
  %142 = icmp eq {}* %x1112.0, %.val5449
  %G162835.0 = select i1 %142, {}* %.val5418, {}* %.val5449
  %143 = icmp eq {}* %G162835.0, %.val5449
  br i1 %143, label %tag844, label %tag165

tag198:                                           ; preds = %tag209
  %144 = icmp eq {}* %x1431.0, %156
  %.val5388 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163002.0 = select i1 %144, {}* %.val5388, {}* %156
  %145 = icmp eq {}* %G163002.0, %156
  br i1 %145, label %tag904, label %tag380

tag201:                                           ; preds = %tag607
  %146 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %147 = icmp eq {}* %x2047.0, %146
  %.val5423 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162758.0 = select i1 %147, {}* %.val5423, {}* %146
  %148 = icmp eq {}* %G162758.0, %146
  br i1 %148, label %tag403, label %tag41

tag202:                                           ; preds = %tag458, %normal-dest1717, %tag73
  %149 = phi {}* [ %513, %tag73 ], [ %668, %normal-dest1717 ], [ %513, %tag458 ]
  %x1215.0 = phi {}* [ %64, %tag73 ], [ %x1215.1, %normal-dest1717 ], [ %513, %tag458 ]
  %150 = ptrtoint {}* %x1215.0 to i64
  %tag-only17864561 = and i64 %150, 7
  %consp-test1787 = icmp eq i64 %tag-only17864561, 3
  br i1 %consp-test1787, label %tag229, label %tag507

tag204:                                           ; preds = %tag822
  %151 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %152 = invoke {}* @cc_safe_fdefinition({}* %151)
          to label %normal-dest1796 unwind label %cleanup-lpad

tag205:                                           ; preds = %tag933
  %153 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %154 = icmp eq {}* %x1140.0, %153
  %.val5375 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163174.0 = select i1 %154, {}* %.val5375, {}* %153
  %155 = icmp eq {}* %G163174.0, %153
  br i1 %155, label %tag438, label %tag277

tag209:                                           ; preds = %tag65, %normal-dest1430, %tag711
  %156 = phi {}* [ %643, %tag711 ], [ %620, %normal-dest1430 ], [ %643, %tag65 ]
  %x1431.0 = phi {}* [ %433, %tag711 ], [ %x1431.1, %normal-dest1430 ], [ %643, %tag65 ]
  %157 = ptrtoint {}* %x1431.0 to i64
  %tag-only18324882 = and i64 %157, 7
  %consp-test1833 = icmp eq i64 %tag-only18324882, 3
  br i1 %consp-test1833, label %tag464, label %tag198

tag210:                                           ; preds = %normal-dest2144
  %158 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %159 = icmp eq {}* %158, %farg1
  %.val5326 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G164040.0 = select i1 %159, {}* %.val5326, {}* %158
  %160 = icmp eq {}* %G164040.0, %158
  br i1 %160, label %tag816, label %tag679

tag211:                                           ; preds = %tag479, %header-check-br3193, %tag300, %tag847, %header-check-br3002
  %161 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %162 = invoke {}* @cc_safe_fdefinition({}* %161)
          to label %normal-dest1842 unwind label %cleanup-lpad

tag212:                                           ; preds = %normal-dest3599, %header-check-br2711, %normal-dest1064
  %.val5405 = phi {}* [ %568, %normal-dest1064 ], [ %809, %header-check-br2711 ], [ %929, %normal-dest3599 ]
  %G162948.0 = phi {}* [ %G162948.1, %normal-dest1064 ], [ %"closure->LAMBDA", %header-check-br2711 ], [ %G162948.2, %normal-dest3599 ]
  %163 = ptrtoint {}* %farg1 to i64
  %tag-only18604822 = and i64 %163, 7
  %consp-test1861 = icmp eq i64 %tag-only18604822, 3
  %.val5360 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163347.0 = select i1 %consp-test1861, {}* %.val5360, {}* %.val5405
  %164 = icmp eq {}* %G163347.0, %.val5405
  br i1 %164, label %tag334, label %tag43

tag213:                                           ; preds = %switch.early.test5487, %tag662
  %165 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %166 = invoke {}* @cc_safe_fdefinition({}* %165)
          to label %normal-dest1863 unwind label %cleanup-lpad

tag218:                                           ; preds = %header-check-br3834
  %167 = invoke double @from_object_double({}* nonnull %.in4936)
          to label %normal-dest1865 unwind label %cleanup-lpad

tag223:                                           ; preds = %tag553, %normal-dest3230, %tag365
  %x1876.0 = phi {}* [ %232, %tag365 ], [ %x1876.1, %normal-dest3230 ], [ %335, %tag553 ]
  %168 = ptrtoint {}* %x1876.0 to i64
  %tag-only18784978 = and i64 %168, 7
  %consp-test1879 = icmp eq i64 %tag-only18784978, 3
  br i1 %consp-test1879, label %tag739, label %tag602

tag229:                                           ; preds = %tag202
  %169 = add i64 %150, 5
  %170 = inttoptr i64 %169 to {}**
  %171 = load {}*, {}** %170, align 8
  br label %tag603

tag230:                                           ; preds = %switch.early.test5485, %tag916
  %172 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %173 = invoke {}* @cc_safe_fdefinition({}* %172)
          to label %normal-dest1894 unwind label %cleanup-lpad

tag232:                                           ; preds = %tag595
  %174 = add i64 %368, -3
  %175 = inttoptr i64 %174 to {}**
  %176 = load {}*, {}** %175, align 8
  br label %tag782

tag237:                                           ; preds = %tag587, %normal-dest3503, %tag457
  %.val5403 = phi {}* [ %498, %tag457 ], [ %913, %normal-dest3503 ], [ %498, %tag587 ]
  %x1526.0 = phi {}* [ %280, %tag457 ], [ %x1526.1, %normal-dest3503 ], [ %498, %tag587 ]
  %177 = ptrtoint {}* %x1526.0 to i64
  %tag-only18994824 = and i64 %177, 7
  %consp-test1900 = icmp eq i64 %tag-only18994824, 3
  %.val5364 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163311.0 = select i1 %consp-test1900, {}* %.val5364, {}* %.val5403
  %178 = icmp eq {}* %G163311.0, %.val5403
  br i1 %178, label %tag466, label %tag15

tag244:                                           ; preds = %tag265
  %179 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %180 = invoke {}* @cc_safe_fdefinition({}* %179)
          to label %normal-dest1924 unwind label %cleanup-lpad

tag249:                                           ; preds = %tag595
  %181 = icmp eq {}* %x3277.0, %.val5350
  %G163907.0 = select i1 %181, {}* %.val5337, {}* %.val5350
  %182 = icmp eq {}* %G163907.0, %.val5350
  br i1 %182, label %tag493, label %tag782

tag250:                                           ; preds = %tag886
  %183 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %184 = invoke {}* @cc_safe_fdefinition({}* %183)
          to label %normal-dest1949 unwind label %cleanup-lpad

tag262:                                           ; preds = %switch.early.test, %switch.early.test, %header-check-br, %header-check-br3757, %header-check-br3757, %tag659
  %185 = ptrtoint {}* %.in4936 to i64
  %fixnum-tag-only19814834 = and i64 %185, 3
  %fixnump-test1982 = icmp eq i64 %fixnum-tag-only19814834, 0
  br i1 %fixnump-test1982, label %tag593, label %tag815

tag265:                                           ; preds = %tag903
  %186 = icmp eq {}* %519, %farg1
  %.val5316 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G164174.0 = select i1 %186, {}* %.val5316, {}* %519
  %187 = icmp eq {}* %G164174.0, %519
  br i1 %187, label %tag244, label %tag398

tag277:                                           ; preds = %tag205, %normal-dest2657, %tag531
  %.val5399 = phi {}* [ %.val5378.pre, %tag531 ], [ %807, %normal-dest2657 ], [ %153, %tag205 ]
  %x1965.0 = phi {}* [ %324, %tag531 ], [ %x1965.1, %normal-dest2657 ], [ %153, %tag205 ]
  %188 = ptrtoint {}* %x1965.0 to i64
  %tag-only20284850 = and i64 %188, 7
  %consp-test2029 = icmp eq i64 %tag-only20284850, 3
  %.val5377 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163161.0 = select i1 %consp-test2029, {}* %.val5377, {}* %.val5399
  %189 = icmp eq {}* %G163161.0, %.val5399
  br i1 %189, label %tag362, label %tag538

tag281:                                           ; preds = %tag395
  %190 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %191 = invoke {}* @cc_safe_fdefinition({}* %190)
          to label %normal-dest2038 unwind label %cleanup-lpad

tag286:                                           ; preds = %switch.early.test5486, %tag907
  %192 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %193 = invoke {}* @cc_safe_fdefinition({}* %192)
          to label %normal-dest2055 unwind label %cleanup-lpad

tag289:                                           ; preds = %normal-dest2815
  %194 = icmp eq i64 %tag-only1446, 6
  %fixnum-tag-only29634533 = and i64 %ptrtoint1445, 3
  %fixnump-test2964 = icmp eq i64 %fixnum-tag-only29634533, 0
  %or.cond5292 = or i1 %194, %fixnump-test2964
  br i1 %or.cond5292, label %tag820, label %tag567

tag295:                                           ; preds = %tag667
  %195 = icmp eq {}* %x994.0, %.val5397
  %G163057.0 = select i1 %195, {}* %.val5384, {}* %.val5397
  %196 = icmp eq {}* %G163057.0, %.val5397
  br i1 %196, label %tag946, label %tag16

tag300:                                           ; preds = %switch.early.test5486, %switch.early.test5486, %header-check-br3140, %header-check-br3263, %header-check-br3263, %tag907
  %197 = ptrtoint {}* %.in4920 to i64
  %fixnum-tag-only21124860 = and i64 %197, 3
  %fixnump-test2113 = icmp eq i64 %fixnum-tag-only21124860, 0
  br i1 %fixnump-test2113, label %tag211, label %tag479

tag302:                                           ; preds = %normal-dest3943
  %198 = add i64 %425, 5
  %199 = inttoptr i64 %198 to {}**
  %200 = load {}*, {}** %199, align 8
  br label %tag691

tag307:                                           ; preds = %tag132
  %201 = invoke float @from_object_float({}* %.in5088)
          to label %normal-dest2118 unwind label %cleanup-lpad

tag310:                                           ; preds = %tag667
  %202 = add i64 %406, -3
  %203 = inttoptr i64 %202 to {}**
  %204 = load {}*, {}** %203, align 8
  br label %tag16

tag318:                                           ; preds = %tag791, %normal-dest2577, %tag354
  %x2164.0 = phi {}* [ %221, %tag354 ], [ %x2164.1, %normal-dest2577 ], [ %484, %tag791 ]
  %205 = ptrtoint {}* %x2164.0 to i64
  %tag-only21664548 = and i64 %205, 7
  %consp-test2167 = icmp eq i64 %tag-only21664548, 3
  br i1 %consp-test2167, label %tag928, label %tag663

tag320:                                           ; preds = %header-check-br3426, %tag875, %tag820, %header-check-br3523, %tag369
  %206 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %207 = invoke {}* @cc_safe_fdefinition({}* %206)
          to label %normal-dest2170 unwind label %cleanup-lpad

tag321:                                           ; preds = %tag668, %header-check-br1189
  %208 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %209 = invoke {}* @cc_safe_fdefinition({}* %208)
          to label %normal-dest2185 unwind label %cleanup-lpad

tag327:                                           ; preds = %tag492
  %210 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %211 = invoke {}* @cc_safe_fdefinition({}* %210)
          to label %normal-dest2214 unwind label %cleanup-lpad

tag334:                                           ; preds = %tag212
  %212 = icmp eq {}* %.val5405, %farg1
  %G163340.0 = select i1 %212, {}* %.val5360, {}* %.val5405
  %213 = icmp eq {}* %G163340.0, %.val5405
  br i1 %213, label %tag846, label %tag825

tag337:                                           ; preds = %tag362, %normal-dest2355, %tag538
  %.in4920 = phi {}* [ %329, %tag538 ], [ %.in4919, %normal-dest2355 ], [ %.val5399, %tag362 ]
  %214 = bitcast {}* %.in4920 to i8*
  %215 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %216 = invoke {}* @cc_safe_fdefinition({}* %215)
          to label %normal-dest3967 unwind label %cleanup-lpad

tag346:                                           ; preds = %tag625
  %217 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %218 = invoke {}* @cc_safe_fdefinition({}* %217)
          to label %normal-dest2296 unwind label %cleanup-lpad

tag354:                                           ; preds = %normal-dest1333
  %219 = add i64 %890, 5
  %220 = inttoptr i64 %219 to {}**
  %221 = load {}*, {}** %220, align 8
  br label %tag318

tag357:                                           ; preds = %tag369
  %222 = invoke float @from_object_float({}* %.in4600)
          to label %normal-dest2336 unwind label %cleanup-lpad

tag360:                                           ; preds = %tag362
  %223 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %224 = invoke {}* @cc_safe_fdefinition({}* %223)
          to label %normal-dest2348 unwind label %cleanup-lpad

tag361:                                           ; preds = %tag398
  %225 = add i64 %244, -3
  %226 = inttoptr i64 %225 to {}**
  %227 = load {}*, {}** %226, align 8
  br label %tag571

tag362:                                           ; preds = %tag277
  %228 = icmp eq {}* %x1965.0, %.val5399
  %G163154.0 = select i1 %228, {}* %.val5377, {}* %.val5399
  %229 = icmp eq {}* %G163154.0, %.val5399
  br i1 %229, label %tag360, label %tag337

tag365:                                           ; preds = %normal-dest1644
  %230 = add i64 %425, 5
  %231 = inttoptr i64 %230 to {}**
  %232 = load {}*, {}** %231, align 8
  br label %tag223

tag367:                                           ; preds = %tag99
  %233 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %234 = invoke {}* @cc_safe_fdefinition({}* %233)
          to label %normal-dest2370 unwind label %cleanup-lpad

tag369:                                           ; preds = %tag875
  %235 = icmp eq i64 %tag-only1446, 6
  br i1 %235, label %tag357, label %tag320

tag373:                                           ; preds = %tag155
  %236 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %237 = invoke {}* @cc_safe_fdefinition({}* %236)
          to label %normal-dest2395 unwind label %cleanup-lpad

tag380:                                           ; preds = %tag198, %normal-dest4286, %tag464
  %238 = phi {}* [ %156, %tag464 ], [ %1021, %normal-dest4286 ], [ %156, %tag198 ]
  %x2419.0 = phi {}* [ %290, %tag464 ], [ %x2419.1, %normal-dest4286 ], [ %156, %tag198 ]
  %239 = ptrtoint {}* %x2419.0 to i64
  %tag-only24204883 = and i64 %239, 7
  %consp-test2421 = icmp eq i64 %tag-only24204883, 3
  br i1 %consp-test2421, label %tag733, label %tag155

tag381:                                           ; preds = %header-check-br3523
  %240 = invoke double @from_object_double({}* nonnull %.in4600)
          to label %normal-dest2422 unwind label %cleanup-lpad

tag395:                                           ; preds = %normal-dest2746
  %241 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %242 = icmp eq {}* %241, %farg1
  %.val5421 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162774.0 = select i1 %242, {}* %.val5421, {}* %241
  %243 = icmp eq {}* %G162774.0, %241
  br i1 %243, label %tag281, label %tag607

tag398:                                           ; preds = %tag265, %normal-dest1932, %tag927
  %.val5356 = phi {}* [ %519, %tag927 ], [ %709, %normal-dest1932 ], [ %519, %tag265 ]
  %x1933.0 = phi {}* [ %530, %tag927 ], [ %x1933.1, %normal-dest1932 ], [ %519, %tag265 ]
  %244 = ptrtoint {}* %x1933.0 to i64
  %tag-only24824502 = and i64 %244, 7
  %consp-test2483 = icmp eq i64 %tag-only24824502, 3
  %.val5318 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G164161.0 = select i1 %consp-test2483, {}* %.val5318, {}* %.val5356
  %245 = icmp eq {}* %G164161.0, %.val5356
  br i1 %245, label %tag114, label %tag361

tag400:                                           ; preds = %tag822, %normal-dest1804, %tag585
  %x1504.0 = phi {}* [ %363, %tag585 ], [ %x1504.1, %normal-dest1804 ], [ %495, %tag822 ]
  %246 = ptrtoint {}* %x1504.0 to i64
  %tag-only24914870 = and i64 %246, 7
  %consp-test2492 = icmp eq i64 %tag-only24914870, 3
  br i1 %consp-test2492, label %tag174, label %tag82

tag403:                                           ; preds = %tag201
  %247 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %248 = invoke {}* @cc_safe_fdefinition({}* %247)
          to label %normal-dest2494 unwind label %cleanup-lpad

tag405:                                           ; preds = %normal-dest3828
  %249 = add i64 %425, 5
  %250 = inttoptr i64 %249 to {}**
  %251 = load {}*, {}** %250, align 8
  br label %tag450

tag410:                                           ; preds = %tag568
  %252 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %253 = invoke {}* @cc_safe_fdefinition({}* %252)
          to label %normal-dest2535 unwind label %cleanup-lpad

tag414:                                           ; preds = %tag744
  %254 = icmp eq {}* %x2014.0, %.val5352
  %G164004.0 = select i1 %254, {}* %.val5330, {}* %.val5352
  %255 = icmp eq {}* %G164004.0, %.val5352
  br i1 %255, label %tag449, label %tag623

tag415:                                           ; preds = %tag791
  %256 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %257 = invoke {}* @cc_safe_fdefinition({}* %256)
          to label %normal-dest2570 unwind label %cleanup-lpad

tag419:                                           ; preds = %normal-dest3245
  %258 = add i64 %890, -3
  %259 = inttoptr i64 %258 to {}**
  %260 = load {}*, {}** %259, align 8
  br label %tag903

tag431:                                           ; preds = %tag439, %normal-dest1364, %tag502
  %G162956.0 = phi {}* [ %304, %tag502 ], [ %G162956.1, %normal-dest1364 ], [ %.val5395, %tag439 ]
  %ptrtoint2606 = ptrtoint {}* %G162948.0 to i64
  %entry-point-addr-uint2607 = add i64 %ptrtoint2606, 7
  %entry-point-addr2608 = inttoptr i64 %entry-point-addr-uint2607 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2609 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2608, align 8
  %261 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2609({}* %G162948.0, i64 8, {}* %OUT162046.0, {}* %farg0, {}* %G162951.0, {}* %G162952.0, {}* %G162953.1, {}* %G162954.0, {}* %G162955.0, {}* %G162956.0)
          to label %tag17 unwind label %cleanup-lpad

tag438:                                           ; preds = %tag205
  %262 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %263 = invoke {}* @cc_safe_fdefinition({}* %262)
          to label %normal-dest2650 unwind label %cleanup-lpad

tag439:                                           ; preds = %tag536
  %264 = icmp eq {}* %x2403.0, %.val5395
  %G162966.0 = select i1 %264, {}* %.val5392, {}* %.val5395
  %265 = icmp eq {}* %G162966.0, %.val5395
  br i1 %265, label %tag102, label %tag431

tag440:                                           ; preds = %tag778
  %266 = add i64 %472, -3
  %267 = inttoptr i64 %266 to {}**
  %268 = load {}*, {}** %267, align 8
  br label %tag166

tag445:                                           ; preds = %normal-dest2520
  %269 = icmp eq {}* %787, %farg1
  %.val5339 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163868.0 = select i1 %269, {}* %.val5339, {}* %787
  %270 = icmp eq {}* %G163868.0, %787
  br i1 %270, label %tag195, label %tag884

tag446:                                           ; preds = %normal-dest4025
  %271 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 162), align 16
  %272 = invoke {}* @cc_safe_fdefinition({}* %271)
          to label %normal-dest2698 unwind label %cleanup-lpad

tag449:                                           ; preds = %tag414
  %273 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %274 = invoke {}* @cc_safe_fdefinition({}* %273)
          to label %normal-dest2728 unwind label %cleanup-lpad

tag450:                                           ; preds = %tag658, %normal-dest1105, %tag405
  %x1106.0 = phi {}* [ %251, %tag405 ], [ %x1106.1, %normal-dest1105 ], [ %396, %tag658 ]
  %275 = ptrtoint {}* %x1106.0 to i64
  %tag-only27415022 = and i64 %275, 7
  %consp-test2742 = icmp eq i64 %tag-only27415022, 3
  br i1 %consp-test2742, label %tag671, label %tag106

tag452:                                           ; preds = %switch.early.test, %tag659
  %276 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %277 = invoke {}* @cc_safe_fdefinition({}* %276)
          to label %normal-dest2744 unwind label %cleanup-lpad

tag457:                                           ; preds = %tag825
  %278 = add i64 %163, 5
  %279 = inttoptr i64 %278 to {}**
  %280 = load {}*, {}** %279, align 8
  br label %tag237

tag458:                                           ; preds = %tag884
  %281 = icmp eq {}* %x1095.0, %513
  %.val5341 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163852.0 = select i1 %281, {}* %.val5341, {}* %513
  %282 = icmp eq {}* %G163852.0, %513
  br i1 %282, label %tag180, label %tag202

tag460:                                           ; preds = %tag749
  %283 = add i64 %425, 5
  %284 = inttoptr i64 %283 to {}**
  %285 = load {}*, {}** %284, align 8
  br label %tag778

tag463:                                           ; preds = %normal-dest3943
  %286 = icmp eq {}* %970, %farg1
  %.val5434 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162602.0 = select i1 %286, {}* %.val5434, {}* %970
  %287 = icmp eq {}* %G162602.0, %970
  br i1 %287, label %tag140, label %tag691

tag464:                                           ; preds = %tag209
  %288 = add i64 %157, 5
  %289 = inttoptr i64 %288 to {}**
  %290 = load {}*, {}** %289, align 8
  br label %tag380

tag466:                                           ; preds = %tag237
  %291 = icmp eq {}* %x1526.0, %.val5403
  %G163304.0 = select i1 %291, {}* %.val5364, {}* %.val5403
  %292 = icmp eq {}* %G163304.0, %.val5403
  br i1 %292, label %tag676, label %tag523

tag478:                                           ; preds = %tag517
  %293 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %294 = invoke {}* @cc_safe_fdefinition({}* %293)
          to label %normal-dest2843 unwind label %cleanup-lpad

tag479:                                           ; preds = %tag300
  %trunc5379 = trunc i64 %197 to i3
  switch i3 %trunc5379, label %tag211 [
    i3 -2, label %tag847
    i3 1, label %header-check-br3193
  ]

tag490:                                           ; preds = %tag931
  %295 = invoke float @from_object_float({}* %.in4936)
          to label %normal-dest2895 unwind label %cleanup-lpad

tag492:                                           ; preds = %tag778
  %296 = icmp eq {}* %x2780.0, %.val5451
  %G162888.0 = select i1 %296, {}* %.val5412, {}* %.val5451
  %297 = icmp eq {}* %G162888.0, %.val5451
  br i1 %297, label %tag327, label %tag166

tag493:                                           ; preds = %tag249
  %298 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %299 = invoke {}* @cc_safe_fdefinition({}* %298)
          to label %normal-dest2912 unwind label %cleanup-lpad

tag496:                                           ; preds = %tag5
  %300 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %301 = invoke {}* @cc_safe_fdefinition({}* %300)
          to label %normal-dest2933 unwind label %cleanup-lpad

tag502:                                           ; preds = %tag536
  %302 = add i64 %325, -3
  %303 = inttoptr i64 %302 to {}**
  %304 = load {}*, {}** %303, align 8
  br label %tag431

tag506:                                           ; preds = %switch.early.test5485, %switch.early.test5485, %header-check-br2007, %header-check-br1636, %header-check-br1636, %tag916
  %305 = ptrtoint {}* %.in5088 to i64
  %fixnum-tag-only29654986 = and i64 %305, 3
  %fixnump-test2966 = icmp eq i64 %fixnum-tag-only29654986, 0
  br i1 %fixnump-test2966, label %tag70, label %tag914

tag507:                                           ; preds = %tag202
  %306 = icmp eq {}* %x1215.0, %149
  %.val5343 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163836.0 = select i1 %306, {}* %.val5343, {}* %149
  %307 = icmp eq {}* %G163836.0, %149
  br i1 %307, label %tag529, label %tag603

tag513:                                           ; preds = %tag84
  %308 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %309 = invoke {}* @cc_safe_fdefinition({}* %308)
          to label %normal-dest2989 unwind label %cleanup-lpad

tag517:                                           ; preds = %tag687
  %310 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %311 = icmp eq {}* %x1119.0, %310
  %.val5322 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G164121.0 = select i1 %311, {}* %.val5322, {}* %310
  %312 = icmp eq {}* %G164121.0, %310
  br i1 %312, label %tag478, label %tag632

tag519:                                           ; preds = %normal-dest3040
  %313 = add i64 %163, 5
  %314 = inttoptr i64 %313 to {}**
  %315 = load {}*, {}** %314, align 8
  br label %tag700

tag521:                                           ; preds = %tag114
  %316 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %317 = invoke {}* @cc_safe_fdefinition({}* %316)
          to label %normal-dest3019 unwind label %cleanup-lpad

tag523:                                           ; preds = %tag466, %normal-dest3613, %tag15
  %G162952.0 = phi {}* [ %21, %tag15 ], [ %G162952.1, %normal-dest3613 ], [ %.val5403, %tag466 ]
  %318 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %319 = invoke {}* @cc_safe_fdefinition({}* %318)
          to label %normal-dest3040 unwind label %cleanup-lpad

tag529:                                           ; preds = %tag507
  %320 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %321 = invoke {}* @cc_safe_fdefinition({}* %320)
          to label %normal-dest3064 unwind label %cleanup-lpad

tag531:                                           ; preds = %tag933
  %322 = add i64 %535, 5
  %323 = inttoptr i64 %322 to {}**
  %324 = load {}*, {}** %323, align 8
  %.val5378.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag277

tag536:                                           ; preds = %tag155, %normal-dest2402, %tag733
  %.val5395 = phi {}* [ %238, %tag733 ], [ %776, %normal-dest2402 ], [ %238, %tag155 ]
  %x2403.0 = phi {}* [ %452, %tag733 ], [ %x2403.1, %normal-dest2402 ], [ %238, %tag155 ]
  %325 = ptrtoint {}* %x2403.0 to i64
  %tag-only30804884 = and i64 %325, 7
  %consp-test3081 = icmp eq i64 %tag-only30804884, 3
  %.val5392 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162973.0 = select i1 %consp-test3081, {}* %.val5392, {}* %.val5395
  %326 = icmp eq {}* %G162973.0, %.val5395
  br i1 %326, label %tag439, label %tag502

tag538:                                           ; preds = %tag277
  %327 = add i64 %188, -3
  %328 = inttoptr i64 %327 to {}**
  %329 = load {}*, {}** %328, align 8
  br label %tag337

tag541:                                           ; preds = %tag194, %header-check-br4188, %tag719, %tag707, %header-check-br981
  %330 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %331 = invoke {}* @cc_safe_fdefinition({}* %330)
          to label %normal-dest3083 unwind label %cleanup-lpad

tag547:                                           ; preds = %tag687
  %332 = add i64 %419, 5
  %333 = inttoptr i64 %332 to {}**
  %334 = load {}*, {}** %333, align 8
  %.val5325.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag632

tag553:                                           ; preds = %normal-dest1644
  %335 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %336 = icmp eq {}* %335, %farg1
  %.val5414 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162871.0 = select i1 %336, {}* %.val5414, {}* %335
  %337 = icmp eq {}* %G162871.0, %335
  br i1 %337, label %tag572, label %tag223

tag555:                                           ; preds = %tag743
  %trunc = trunc i64 %458 to i3
  switch i3 %trunc, label %tag630 [
    i3 -2, label %tag177
    i3 1, label %header-check-br3862
  ]

tag556:                                           ; preds = %normal-dest2119, %normal-dest1420, %normal-dest1183
  %G162804.0 = phi {}* [ %G162804.1, %normal-dest1183 ], [ %614, %normal-dest1420 ], [ %729, %normal-dest2119 ]
  %ptrtoint3169 = ptrtoint {}* %118 to i64
  %entry-point-addr-uint3170 = add i64 %ptrtoint3169, 7
  %entry-point-addr3171 = inttoptr i64 %entry-point-addr-uint3170 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3172 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3171, align 8
  %338 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3172({}* %118, i64 1, {}* %G162804.0, {}* null, {}* null, {}* null)
          to label %normal-dest3175 unwind label %cleanup-lpad

tag567:                                           ; preds = %switch.early.test5488, %tag289
  %339 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %340 = invoke {}* @cc_safe_fdefinition({}* %339)
          to label %normal-dest3201 unwind label %cleanup-lpad

tag568:                                           ; preds = %normal-dest3216
  %341 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %342 = icmp eq {}* %341, %farg1
  %.val5320 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G164137.0 = select i1 %342, {}* %.val5320, {}* %341
  %343 = icmp eq {}* %G164137.0, %341
  br i1 %343, label %tag410, label %tag687

tag571:                                           ; preds = %tag114, %normal-dest3026, %tag361
  %G163802.0 = phi {}* [ %227, %tag361 ], [ %G163802.1, %normal-dest3026 ], [ %.val5356, %tag114 ]
  %344 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %345 = invoke {}* @cc_safe_fdefinition({}* %344)
          to label %normal-dest3216 unwind label %cleanup-lpad

tag572:                                           ; preds = %tag553
  %346 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %347 = invoke {}* @cc_safe_fdefinition({}* %346)
          to label %normal-dest3223 unwind label %cleanup-lpad

tag573:                                           ; preds = %tag781
  %348 = icmp eq {}* %x1031.0, %477
  %.val5438 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162570.0 = select i1 %348, {}* %.val5438, {}* %477
  %349 = icmp eq {}* %G162570.0, %477
  br i1 %349, label %tag60, label %tag729

tag576:                                           ; preds = %tag694
  %350 = add i64 %425, -3
  %351 = inttoptr i64 %350 to {}**
  %352 = load {}*, {}** %351, align 8
  br label %tag749

tag578:                                           ; preds = %header-check-br4008, %normal-dest2556, %normal-dest1673
  %G163798.0 = phi {}* [ %G163798.1, %normal-dest1673 ], [ %G163798.2, %normal-dest2556 ], [ %"closure->LAMBDA", %header-check-br4008 ]
  %353 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 171), align 8
  %354 = invoke {}* @cc_safe_symbol_value({}* %353)
          to label %normal-dest3245 unwind label %cleanup-lpad

tag581:                                           ; preds = %tag52
  %355 = add i64 %42, -3
  %356 = inttoptr i64 %355 to {}**
  %357 = load {}*, {}** %356, align 8
  br label %tag165

tag584:                                           ; preds = %tag740
  %358 = add i64 %456, -3
  %359 = inttoptr i64 %358 to {}**
  %360 = load {}*, {}** %359, align 8
  br label %tag723

tag585:                                           ; preds = %normal-dest3896
  %361 = add i64 %163, 5
  %362 = inttoptr i64 %361 to {}**
  %363 = load {}*, {}** %362, align 8
  br label %tag400

tag587:                                           ; preds = %tag825
  %364 = icmp eq {}* %498, %farg1
  %.val5362 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163324.0 = select i1 %364, {}* %.val5362, {}* %498
  %365 = icmp eq {}* %G163324.0, %498
  br i1 %365, label %tag652, label %tag237

tag593:                                           ; preds = %header-check-br3733, %tag815, %tag262, %tag931, %header-check-br3834
  %366 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %367 = invoke {}* @cc_safe_fdefinition({}* %366)
          to label %normal-dest3286 unwind label %cleanup-lpad

tag595:                                           ; preds = %tag663, %normal-dest4337, %tag928
  %.val5350 = phi {}* [ %.val5338.pre, %tag928 ], [ %1033, %normal-dest4337 ], [ %401, %tag663 ]
  %x3277.0 = phi {}* [ %533, %tag928 ], [ %x3277.1, %normal-dest4337 ], [ %401, %tag663 ]
  %368 = ptrtoint {}* %x3277.0 to i64
  %tag-only33014549 = and i64 %368, 7
  %consp-test3302 = icmp eq i64 %tag-only33014549, 3
  %.val5337 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163914.0 = select i1 %consp-test3302, {}* %.val5337, {}* %.val5350
  %369 = icmp eq {}* %G163914.0, %.val5350
  br i1 %369, label %tag249, label %tag232

tag598:                                           ; preds = %header-check-br3002
  %370 = invoke double @from_object_double({}* nonnull %.in4920)
          to label %normal-dest3313 unwind label %cleanup-lpad

tag602:                                           ; preds = %tag223
  %371 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %372 = icmp eq {}* %x1876.0, %371
  %.val5416 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162855.0 = select i1 %372, {}* %.val5416, {}* %371
  %373 = icmp eq {}* %G162855.0, %371
  br i1 %373, label %tag656, label %tag52

tag603:                                           ; preds = %tag507, %normal-dest3071, %tag229
  %.val5348 = phi {}* [ %149, %tag229 ], [ %871, %normal-dest3071 ], [ %149, %tag507 ]
  %x1892.0 = phi {}* [ %171, %tag229 ], [ %x1892.1, %normal-dest3071 ], [ %149, %tag507 ]
  %374 = ptrtoint {}* %x1892.0 to i64
  %tag-only33304562 = and i64 %374, 7
  %consp-test3331 = icmp eq i64 %tag-only33304562, 3
  %.val5345 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163823.0 = select i1 %consp-test3331, {}* %.val5345, {}* %.val5348
  %375 = icmp eq {}* %G163823.0, %.val5348
  br i1 %375, label %tag792, label %tag192

tag607:                                           ; preds = %tag395, %normal-dest2046, %tag935
  %x2047.0 = phi {}* [ %538, %tag935 ], [ %x2047.1, %normal-dest2046 ], [ %241, %tag395 ]
  %376 = ptrtoint {}* %x2047.0 to i64
  %tag-only33475001 = and i64 %376, 7
  %consp-test3348 = icmp eq i64 %tag-only33475001, 3
  br i1 %consp-test3348, label %tag692, label %tag201

tag611:                                           ; preds = %tag633
  %377 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %378 = invoke {}* @cc_safe_fdefinition({}* %377)
          to label %normal-dest3359 unwind label %cleanup-lpad

tag615:                                           ; preds = %normal-dest3245
  %379 = icmp eq {}* %.val5315, %farg1
  %G164190.0 = select i1 %379, {}* %.val, {}* %.val5315
  %380 = icmp eq {}* %G164190.0, %.val5315
  br i1 %380, label %tag697, label %tag903

tag623:                                           ; preds = %tag414, %normal-dest2735, %tag673
  %.in4600 = phi {}* [ %413, %tag673 ], [ %.in4599, %normal-dest2735 ], [ %.val5352, %tag414 ]
  %381 = bitcast {}* %.in4600 to i8*
  %382 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %383 = invoke {}* @cc_safe_fdefinition({}* %382)
          to label %normal-dest2808 unwind label %cleanup-lpad

tag625:                                           ; preds = %tag691
  %384 = icmp eq {}* %x1494.0, %420
  %.val5436 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162586.0 = select i1 %384, {}* %.val5436, {}* %420
  %385 = icmp eq {}* %G162586.0, %420
  br i1 %385, label %tag346, label %tag781

tag630:                                           ; preds = %tag555, %header-check-br3862, %tag743, %header-check-br2150, %tag177
  %386 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %387 = invoke {}* @cc_safe_fdefinition({}* %386)
          to label %normal-dest3441 unwind label %cleanup-lpad

tag632:                                           ; preds = %tag517, %normal-dest2851, %tag547
  %.val5354 = phi {}* [ %.val5325.pre, %tag547 ], [ %834, %normal-dest2851 ], [ %310, %tag517 ]
  %x2346.0 = phi {}* [ %334, %tag547 ], [ %x2346.1, %normal-dest2851 ], [ %310, %tag517 ]
  %388 = ptrtoint {}* %x2346.0 to i64
  %tag-only34564505 = and i64 %388, 7
  %consp-test3457 = icmp eq i64 %tag-only34564505, 3
  %.val5324 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G164108.0 = select i1 %consp-test3457, {}* %.val5324, {}* %.val5354
  %389 = icmp eq {}* %G164108.0, %.val5354
  br i1 %389, label %tag666, label %tag31

tag633:                                           ; preds = %tag41
  %390 = icmp eq {}* %x1070.0, %.val5447
  %G162738.0 = select i1 %390, {}* %.val5425, {}* %.val5447
  %391 = icmp eq {}* %G162738.0, %.val5447
  br i1 %391, label %tag611, label %tag128

tag652:                                           ; preds = %tag587
  %392 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %393 = invoke {}* @cc_safe_fdefinition({}* %392)
          to label %normal-dest3496 unwind label %cleanup-lpad

tag656:                                           ; preds = %tag602
  %394 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %395 = invoke {}* @cc_safe_fdefinition({}* %394)
          to label %normal-dest3531 unwind label %cleanup-lpad

tag658:                                           ; preds = %normal-dest3828
  %396 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %397 = icmp eq {}* %396, %farg1
  %.val5428 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162677.0 = select i1 %397, {}* %.val5428, {}* %396
  %398 = icmp eq {}* %G162677.0, %396
  br i1 %398, label %tag51, label %tag450

tag659:                                           ; preds = %tag723
  %399 = icmp eq i64 %tag-only3759, 6
  %fixnum-tag-only29474828 = and i64 %ptrtoint3758, 3
  %fixnump-test2948 = icmp eq i64 %fixnum-tag-only29474828, 0
  %or.cond5288 = or i1 %399, %fixnump-test2948
  br i1 %or.cond5288, label %tag262, label %tag452

tag662:                                           ; preds = %tag188
  %400 = icmp eq i64 %tag-only1743, 6
  %fixnum-tag-only20604506 = and i64 %ptrtoint1742, 3
  %fixnump-test2061 = icmp eq i64 %fixnum-tag-only20604506, 0
  %or.cond5282 = or i1 %400, %fixnump-test2061
  br i1 %or.cond5282, label %tag743, label %tag213

tag663:                                           ; preds = %tag318
  %401 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %402 = icmp eq {}* %x2164.0, %401
  %.val5335 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163927.0 = select i1 %402, {}* %.val5335, {}* %401
  %403 = icmp eq {}* %G163927.0, %401
  br i1 %403, label %tag923, label %tag595

tag666:                                           ; preds = %tag632
  %404 = icmp eq {}* %x2346.0, %.val5354
  %G164101.0 = select i1 %404, {}* %.val5324, {}* %.val5354
  %405 = icmp eq {}* %G164101.0, %.val5354
  br i1 %405, label %tag873, label %tag188

tag667:                                           ; preds = %tag82, %normal-dest993, %tag174
  %.val5397 = phi {}* [ %.val5385.pre, %tag174 ], [ %563, %normal-dest993 ], [ %65, %tag82 ]
  %x994.0 = phi {}* [ %125, %tag174 ], [ %x994.1, %normal-dest993 ], [ %65, %tag82 ]
  %406 = ptrtoint {}* %x994.0 to i64
  %tag-only35704871 = and i64 %406, 7
  %consp-test3571 = icmp eq i64 %tag-only35704871, 3
  %.val5384 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163064.0 = select i1 %consp-test3571, {}* %.val5384, {}* %.val5397
  %407 = icmp eq {}* %G163064.0, %.val5397
  br i1 %407, label %tag295, label %tag310

tag668:                                           ; preds = %normal-dest4025
  %ptrtoint3573 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only3574 = and i64 %ptrtoint3573, 7
  %test3575 = icmp eq i64 %tag-only3574, 1
  br i1 %test3575, label %header-check-br3572, label %tag321

tag671:                                           ; preds = %tag450
  %408 = add i64 %275, 5
  %409 = inttoptr i64 %408 to {}**
  %410 = load {}*, {}** %409, align 8
  %.val5433.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag105

tag673:                                           ; preds = %tag744
  %411 = add i64 %459, -3
  %412 = inttoptr i64 %411 to {}**
  %413 = load {}*, {}** %412, align 8
  br label %tag623

tag674:                                           ; preds = %normal-dest2705, %header-check-br1698
  %414 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %415 = invoke {}* @cc_safe_fdefinition({}* %414)
          to label %normal-dest3592 unwind label %cleanup-lpad

tag676:                                           ; preds = %tag466
  %416 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %417 = invoke {}* @cc_safe_fdefinition({}* %416)
          to label %normal-dest3606 unwind label %cleanup-lpad

tag679:                                           ; preds = %tag210, %normal-dest4053, %tag939
  %x2531.0 = phi {}* [ %541, %tag939 ], [ %x2531.1, %normal-dest4053 ], [ %158, %tag210 ]
  %418 = ptrtoint {}* %x2531.0 to i64
  %tag-only36194527 = and i64 %418, 7
  %consp-test3620 = icmp eq i64 %tag-only36194527, 3
  br i1 %consp-test3620, label %tag720, label %tag87

tag687:                                           ; preds = %tag568, %normal-dest2542, %tag55
  %x1119.0 = phi {}* [ %46, %tag55 ], [ %x1119.1, %normal-dest2542 ], [ %341, %tag568 ]
  %419 = ptrtoint {}* %x1119.0 to i64
  %tag-only36424504 = and i64 %419, 7
  %consp-test3643 = icmp eq i64 %tag-only36424504, 3
  br i1 %consp-test3643, label %tag547, label %tag517

tag691:                                           ; preds = %tag463, %normal-dest1493, %tag302
  %420 = phi {}* [ %970, %tag302 ], [ %630, %normal-dest1493 ], [ %970, %tag463 ]
  %x1494.0 = phi {}* [ %200, %tag302 ], [ %x1494.1, %normal-dest1493 ], [ %970, %tag463 ]
  %421 = ptrtoint {}* %x1494.0 to i64
  %tag-only36585034 = and i64 %421, 7
  %consp-test3659 = icmp eq i64 %tag-only36585034, 3
  br i1 %consp-test3659, label %tag22, label %tag625

tag692:                                           ; preds = %tag607
  %422 = add i64 %376, 5
  %423 = inttoptr i64 %422 to {}**
  %424 = load {}*, {}** %423, align 8
  %.val5426.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag41

tag694:                                           ; preds = %header-check-br3572, %normal-dest2836, %normal-dest2192
  %.val5453 = phi {}* [ %743, %normal-dest2192 ], [ %828, %normal-dest2836 ], [ %976, %header-check-br3572 ]
  %G162532.0 = phi {}* [ %G162532.1, %normal-dest2192 ], [ %G162532.2, %normal-dest2836 ], [ %"closure->LAMBDA", %header-check-br3572 ]
  %425 = ptrtoint {}* %farg1 to i64
  %tag-only36654974 = and i64 %425, 7
  %consp-test3666 = icmp eq i64 %tag-only36654974, 3
  %.val5408 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162931.0 = select i1 %consp-test3666, {}* %.val5408, {}* %.val5453
  %426 = icmp eq {}* %G162931.0, %.val5453
  br i1 %426, label %tag886, label %tag576

tag697:                                           ; preds = %tag615
  %427 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %428 = invoke {}* @cc_safe_fdefinition({}* %427)
          to label %normal-dest3668 unwind label %cleanup-lpad

tag700:                                           ; preds = %tag780, %normal-dest1555, %tag519
  %x1556.0 = phi {}* [ %315, %tag519 ], [ %x1556.1, %normal-dest1555 ], [ %474, %tag780 ]
  %429 = ptrtoint {}* %x1556.0 to i64
  %tag-only36884826 = and i64 %429, 7
  %consp-test3689 = icmp eq i64 %tag-only36884826, 3
  br i1 %consp-test3689, label %tag752, label %tag5

tag707:                                           ; preds = %tag194
  %430 = icmp eq i64 %tag-only2509, 6
  br i1 %430, label %tag141, label %tag541

tag711:                                           ; preds = %normal-dest1610
  %431 = add i64 %163, 5
  %432 = inttoptr i64 %431 to {}**
  %433 = load {}*, {}** %432, align 8
  br label %tag209

tag719:                                           ; preds = %switch.early.test5484, %switch.early.test5484, %header-check-br1221, %header-check-br2507, %header-check-br2507, %tag30
  %434 = ptrtoint {}* %.in5072 to i64
  %fixnum-tag-only37545012 = and i64 %434, 3
  %fixnump-test3755 = icmp eq i64 %fixnum-tag-only37545012, 0
  br i1 %fixnump-test3755, label %tag541, label %tag194

tag720:                                           ; preds = %tag679
  %435 = add i64 %418, 5
  %436 = inttoptr i64 %435 to {}**
  %437 = load {}*, {}** %436, align 8
  %.val5331.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag744

tag721:                                           ; preds = %normal-dest2520
  %438 = add i64 %890, 5
  %439 = inttoptr i64 %438 to {}**
  %440 = load {}*, {}** %439, align 8
  br label %tag884

tag723:                                           ; preds = %tag68, %normal-dest4224, %tag584
  %.in4936 = phi {}* [ %360, %tag584 ], [ %.in4935, %normal-dest4224 ], [ %.val5401, %tag68 ]
  %441 = bitcast {}* %.in4936 to i8*
  %442 = ptrtoint %"class.core::T_O"* %551 to i64
  %443 = add i64 %442, -3
  %444 = inttoptr i64 %443 to %"class.gctools::smart_ptr"*
  %445 = getelementptr inbounds %"class.gctools::smart_ptr", %"class.gctools::smart_ptr"* %444, i64 0, i32 0
  %446 = load %"class.core::T_O"*, %"class.core::T_O"** %445, align 8, !tbaa !31
  %447 = bitcast %"class.core::T_O"* %446 to {}*
  %ptrtoint3758 = ptrtoint %"class.core::T_O"* %446 to i64
  %tag-only3759 = and i64 %ptrtoint3758, 7
  %test3760 = icmp eq i64 %tag-only3759, 1
  br i1 %test3760, label %header-check-br3757, label %tag659

tag729:                                           ; preds = %tag573, %normal-dest1132, %tag747
  %.val5443 = phi {}* [ %477, %tag747 ], [ %580, %normal-dest1132 ], [ %477, %tag573 ]
  %x1133.0 = phi {}* [ %463, %tag747 ], [ %x1133.1, %normal-dest1132 ], [ %477, %tag573 ]
  %448 = ptrtoint {}* %x1133.0 to i64
  %tag-only37805036 = and i64 %448, 7
  %consp-test3781 = icmp eq i64 %tag-only37805036, 3
  %.val5440 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162557.0 = select i1 %consp-test3781, {}* %.val5440, {}* %.val5443
  %449 = icmp eq {}* %G162557.0, %.val5443
  br i1 %449, label %tag853, label %tag66

tag733:                                           ; preds = %tag380
  %450 = add i64 %239, 5
  %451 = inttoptr i64 %450 to {}**
  %452 = load {}*, {}** %451, align 8
  br label %tag536

tag739:                                           ; preds = %tag223
  %453 = add i64 %168, 5
  %454 = inttoptr i64 %453 to {}**
  %455 = load {}*, {}** %454, align 8
  %.val5419.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag52

tag740:                                           ; preds = %tag5, %normal-dest2940, %tag752
  %.val5401 = phi {}* [ %.val5371.pre, %tag752 ], [ %849, %normal-dest2940 ], [ %14, %tag5 ]
  %x2941.0 = phi {}* [ %467, %tag752 ], [ %x2941.1, %normal-dest2940 ], [ %14, %tag5 ]
  %456 = ptrtoint {}* %x2941.0 to i64
  %tag-only37844827 = and i64 %456, 7
  %consp-test3785 = icmp eq i64 %tag-only37844827, 3
  %.val5370 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163258.0 = select i1 %consp-test3785, {}* %.val5370, {}* %.val5401
  %457 = icmp eq {}* %G163258.0, %.val5401
  br i1 %457, label %tag68, label %tag584

tag743:                                           ; preds = %switch.early.test5487, %switch.early.test5487, %header-check-br3855, %header-check-br1741, %header-check-br1741, %tag662
  %458 = ptrtoint {}* %.in4616 to i64
  %fixnum-tag-only37874512 = and i64 %458, 3
  %fixnump-test3788 = icmp eq i64 %fixnum-tag-only37874512, 0
  br i1 %fixnump-test3788, label %tag630, label %tag555

tag744:                                           ; preds = %tag87, %normal-dest4260, %tag720
  %.val5352 = phi {}* [ %.val5331.pre, %tag720 ], [ %1015, %normal-dest4260 ], [ %72, %tag87 ]
  %x2014.0 = phi {}* [ %437, %tag720 ], [ %x2014.1, %normal-dest4260 ], [ %72, %tag87 ]
  %459 = ptrtoint {}* %x2014.0 to i64
  %tag-only37914528 = and i64 %459, 7
  %consp-test3792 = icmp eq i64 %tag-only37914528, 3
  %.val5330 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G164011.0 = select i1 %consp-test3792, {}* %.val5330, {}* %.val5352
  %460 = icmp eq {}* %G164011.0, %.val5352
  br i1 %460, label %tag414, label %tag673

tag747:                                           ; preds = %tag781
  %461 = add i64 %478, 5
  %462 = inttoptr i64 %461 to {}**
  %463 = load {}*, {}** %462, align 8
  br label %tag729

tag749:                                           ; preds = %tag886, %normal-dest1957, %tag576
  %464 = phi {}* [ %.val5453, %tag576 ], [ %715, %normal-dest1957 ], [ %.val5453, %tag886 ]
  %G162535.0 = phi {}* [ %352, %tag576 ], [ %G162535.1, %normal-dest1957 ], [ %.val5453, %tag886 ]
  br i1 %consp-test3666, label %tag460, label %tag84

tag752:                                           ; preds = %tag700
  %465 = add i64 %429, 5
  %466 = inttoptr i64 %465 to {}**
  %467 = load {}*, {}** %466, align 8
  %.val5371.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag740

tag759:                                           ; preds = %normal-dest3090, %normal-dest1528, %normal-dest1502
  %G162686.0 = phi {}* [ %633, %normal-dest1502 ], [ %636, %normal-dest1528 ], [ %G162686.1, %normal-dest3090 ]
  %ptrtoint3815 = ptrtoint {}* %733 to i64
  %entry-point-addr-uint3816 = add i64 %ptrtoint3815, 7
  %entry-point-addr3817 = inttoptr i64 %entry-point-addr-uint3816 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3818 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3817, align 8
  %468 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3818({}* %733, i64 1, {}* %G162686.0, {}* null, {}* null, {}* null)
          to label %normal-dest3821 unwind label %cleanup-lpad

tag773:                                           ; preds = %tag792
  %469 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %470 = invoke {}* @cc_safe_fdefinition({}* %469)
          to label %normal-dest3870 unwind label %cleanup-lpad

tag774:                                           ; preds = %normal-dest3314, %normal-dest1849, %normal-dest1305
  %G163102.0 = phi {}* [ %597, %normal-dest1305 ], [ %G163102.1, %normal-dest1849 ], [ %897, %normal-dest3314 ]
  %ptrtoint3883 = ptrtoint {}* %703 to i64
  %entry-point-addr-uint3884 = add i64 %ptrtoint3883, 7
  %entry-point-addr3885 = inttoptr i64 %entry-point-addr-uint3884 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3886 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3885, align 8
  %471 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3886({}* %703, i64 1, {}* %G163102.0, {}* null, {}* null, {}* null)
          to label %normal-dest3889 unwind label %cleanup-lpad

tag778:                                           ; preds = %tag84, %normal-dest2996, %tag460
  %.val5451 = phi {}* [ %464, %tag460 ], [ %857, %normal-dest2996 ], [ %464, %tag84 ]
  %x2780.0 = phi {}* [ %285, %tag460 ], [ %x2780.1, %normal-dest2996 ], [ %464, %tag84 ]
  %472 = ptrtoint {}* %x2780.0 to i64
  %tag-only39134976 = and i64 %472, 7
  %consp-test3914 = icmp eq i64 %tag-only39134976, 3
  %.val5412 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G162895.0 = select i1 %consp-test3914, {}* %.val5412, {}* %.val5451
  %473 = icmp eq {}* %G162895.0, %.val5451
  br i1 %473, label %tag492, label %tag440

tag780:                                           ; preds = %normal-dest3040
  %474 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %475 = icmp eq {}* %474, %farg1
  %.val5366 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163287.0 = select i1 %475, {}* %.val5366, {}* %474
  %476 = icmp eq {}* %G163287.0, %474
  br i1 %476, label %tag152, label %tag700

tag781:                                           ; preds = %tag625, %normal-dest2303, %tag22
  %477 = phi {}* [ %420, %tag22 ], [ %755, %normal-dest2303 ], [ %420, %tag625 ]
  %x1031.0 = phi {}* [ %29, %tag22 ], [ %x1031.1, %normal-dest2303 ], [ %420, %tag625 ]
  %478 = ptrtoint {}* %x1031.0 to i64
  %tag-only39215035 = and i64 %478, 7
  %consp-test3922 = icmp eq i64 %tag-only39215035, 3
  br i1 %consp-test3922, label %tag747, label %tag573

tag782:                                           ; preds = %tag249, %tag232, %normal-dest2919
  %x1896.0 = phi {}* [ %176, %tag232 ], [ %x1896.1, %normal-dest2919 ], [ %.val5350, %tag249 ]
  %479 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 184), align 16
  %480 = invoke {}* @cc_safe_fdefinition({}* %479)
          to label %normal-dest3924 unwind label %cleanup-lpad

tag787:                                           ; preds = %tag41
  %481 = add i64 %35, -3
  %482 = inttoptr i64 %481 to {}**
  %483 = load {}*, {}** %482, align 8
  br label %tag128

tag791:                                           ; preds = %normal-dest1333
  %484 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %485 = icmp eq {}* %484, %farg1
  %.val5333 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163943.0 = select i1 %485, {}* %.val5333, {}* %484
  %486 = icmp eq {}* %G163943.0, %484
  br i1 %486, label %tag415, label %tag318

tag792:                                           ; preds = %tag603
  %487 = icmp eq {}* %x1892.0, %.val5348
  %G163816.0 = select i1 %487, {}* %.val5345, {}* %.val5348
  %488 = icmp eq {}* %G163816.0, %.val5348
  br i1 %488, label %tag773, label %tag805

tag805:                                           ; preds = %tag792, %normal-dest3877, %tag192
  %G163806.0 = phi {}* [ %139, %tag192 ], [ %G163806.1, %normal-dest3877 ], [ %.val5348, %tag792 ]
  %ptrtoint3992 = ptrtoint {}* %G163798.0 to i64
  %entry-point-addr-uint3993 = add i64 %ptrtoint3992, 7
  %entry-point-addr3994 = inttoptr i64 %entry-point-addr-uint3993 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3995 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3994, align 8
  %489 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3995({}* %G163798.0, i64 8, {}* %354, {}* %farg0, {}* %G163801.0, {}* %G163802.0, {}* %G163803.1, {}* %G163804.0, {}* %G163805.0, {}* %G163806.0)
          to label %tag17 unwind label %cleanup-lpad

tag808:                                           ; preds = %normal-dest953
  %ptrtoint4009 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only4010 = and i64 %ptrtoint4009, 7
  %test4011 = icmp eq i64 %tag-only4010, 1
  br i1 %test4011, label %header-check-br4008, label %tag172

tag811:                                           ; preds = %normal-dest953
  %490 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 156), align 16
  %491 = invoke {}* @cc_safe_fdefinition({}* %490)
          to label %normal-dest4018 unwind label %cleanup-lpad

tag815:                                           ; preds = %tag262
  %trunc5372 = trunc i64 %185 to i3
  switch i3 %trunc5372, label %tag593 [
    i3 -2, label %tag931
    i3 1, label %header-check-br3733
  ]

tag816:                                           ; preds = %tag210
  %492 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %493 = invoke {}* @cc_safe_fdefinition({}* %492)
          to label %normal-dest4046 unwind label %cleanup-lpad

tag820:                                           ; preds = %switch.early.test5488, %switch.early.test5488, %header-check-br4343, %header-check-br1444, %header-check-br1444, %tag289
  %494 = ptrtoint {}* %.in4600 to i64
  %fixnum-tag-only40624538 = and i64 %494, 3
  %fixnump-test4063 = icmp eq i64 %fixnum-tag-only40624538, 0
  br i1 %fixnump-test4063, label %tag320, label %tag875

tag822:                                           ; preds = %normal-dest3896
  %495 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %496 = icmp eq {}* %495, %farg1
  %.val5380 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G163093.0 = select i1 %496, {}* %.val5380, {}* %495
  %497 = icmp eq {}* %G163093.0, %495
  br i1 %497, label %tag204, label %tag400

tag825:                                           ; preds = %tag334, %normal-dest4135, %tag43
  %498 = phi {}* [ %.val5405, %tag43 ], [ %995, %normal-dest4135 ], [ %.val5405, %tag334 ]
  %G162951.0 = phi {}* [ %39, %tag43 ], [ %G162951.1, %normal-dest4135 ], [ %.val5405, %tag334 ]
  br i1 %consp-test1861, label %tag457, label %tag587

tag841:                                           ; preds = %tag105
  %499 = add i64 %83, -3
  %500 = inttoptr i64 %499 to {}**
  %501 = load {}*, {}** %500, align 8
  br label %tag83

tag844:                                           ; preds = %tag197
  %502 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %503 = invoke {}* @cc_safe_fdefinition({}* %502)
          to label %normal-dest4114 unwind label %cleanup-lpad

tag846:                                           ; preds = %tag334
  %504 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %505 = invoke {}* @cc_safe_fdefinition({}* %504)
          to label %normal-dest4128 unwind label %cleanup-lpad

tag847:                                           ; preds = %tag479
  %506 = icmp eq i64 %tag-only3265, 6
  br i1 %506, label %tag89, label %tag211

tag853:                                           ; preds = %tag729
  %507 = icmp eq {}* %x1133.0, %.val5443
  %G162550.0 = select i1 %507, {}* %.val5440, {}* %.val5443
  %508 = icmp eq {}* %G162550.0, %.val5443
  br i1 %508, label %tag908, label %tag35

tag873:                                           ; preds = %tag666
  %509 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %510 = invoke {}* @cc_safe_fdefinition({}* %509)
          to label %normal-dest4173 unwind label %cleanup-lpad

tag875:                                           ; preds = %tag820
  %trunc5332 = trunc i64 %494 to i3
  switch i3 %trunc5332, label %tag320 [
    i3 -2, label %tag369
    i3 1, label %header-check-br3426
  ]

tag883:                                           ; preds = %tag68
  %511 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %512 = invoke {}* @cc_safe_fdefinition({}* %511)
          to label %normal-dest4217 unwind label %cleanup-lpad

tag884:                                           ; preds = %tag445, %normal-dest1759, %tag721
  %513 = phi {}* [ %787, %tag721 ], [ %678, %normal-dest1759 ], [ %787, %tag445 ]
  %x1095.0 = phi {}* [ %440, %tag721 ], [ %x1095.1, %normal-dest1759 ], [ %787, %tag445 ]
  %514 = ptrtoint {}* %x1095.0 to i64
  %tag-only42304560 = and i64 %514, 7
  %consp-test4231 = icmp eq i64 %tag-only42304560, 3
  br i1 %consp-test4231, label %tag73, label %tag458

tag886:                                           ; preds = %tag694
  %515 = icmp eq {}* %.val5453, %farg1
  %G162924.0 = select i1 %515, {}* %.val5408, {}* %.val5453
  %516 = icmp eq {}* %G162924.0, %.val5453
  br i1 %516, label %tag250, label %tag749

tag898:                                           ; preds = %tag87
  %517 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %518 = invoke {}* @cc_safe_fdefinition({}* %517)
          to label %normal-dest4253 unwind label %cleanup-lpad

tag903:                                           ; preds = %tag615, %normal-dest3675, %tag419
  %519 = phi {}* [ %.val5315, %tag419 ], [ %941, %normal-dest3675 ], [ %.val5315, %tag615 ]
  %G163801.0 = phi {}* [ %260, %tag419 ], [ %G163801.1, %normal-dest3675 ], [ %.val5315, %tag615 ]
  br i1 %consp-test3252, label %tag927, label %tag265

tag904:                                           ; preds = %tag198
  %520 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %521 = invoke {}* @cc_safe_fdefinition({}* %520)
          to label %normal-dest4279 unwind label %cleanup-lpad

tag907:                                           ; preds = %normal-dest3974
  %522 = icmp eq i64 %tag-only3265, 6
  %fixnum-tag-only43274855 = and i64 %ptrtoint3264, 3
  %fixnump-test4328 = icmp eq i64 %fixnum-tag-only43274855, 0
  %or.cond5308 = or i1 %522, %fixnump-test4328
  br i1 %or.cond5308, label %tag300, label %tag286

tag908:                                           ; preds = %tag853
  %523 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %524 = invoke {}* @cc_safe_fdefinition({}* %523)
          to label %normal-dest4296 unwind label %cleanup-lpad

tag914:                                           ; preds = %tag506
  %trunc5420 = trunc i64 %305 to i3
  switch i3 %trunc5420, label %tag70 [
    i3 -2, label %tag132
    i3 1, label %header-check-br3904
  ]

tag916:                                           ; preds = %tag165
  %525 = icmp eq i64 %tag-only1638, 6
  %fixnum-tag-only43504980 = and i64 %ptrtoint1637, 3
  %fixnump-test4351 = icmp eq i64 %fixnum-tag-only43504980, 0
  %or.cond5312 = or i1 %525, %fixnump-test4351
  br i1 %or.cond5312, label %tag506, label %tag230

tag923:                                           ; preds = %tag663
  %526 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %527 = invoke {}* @cc_safe_fdefinition({}* %526)
          to label %normal-dest4330 unwind label %cleanup-lpad

tag927:                                           ; preds = %tag903
  %528 = add i64 %890, 5
  %529 = inttoptr i64 %528 to {}**
  %530 = load {}*, {}** %529, align 8
  br label %tag398

tag928:                                           ; preds = %tag318
  %531 = add i64 %205, 5
  %532 = inttoptr i64 %531 to {}**
  %533 = load {}*, {}** %532, align 8
  %.val5338.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag595

tag931:                                           ; preds = %tag815
  %534 = icmp eq i64 %tag-only3759, 6
  br i1 %534, label %tag490, label %tag593

tag933:                                           ; preds = %tag99, %normal-dest2377, %tag62
  %x1140.0 = phi {}* [ %51, %tag62 ], [ %x1140.1, %normal-dest2377 ], [ %78, %tag99 ]
  %535 = ptrtoint {}* %x1140.0 to i64
  %tag-only43534849 = and i64 %535, 7
  %consp-test4354 = icmp eq i64 %tag-only43534849, 3
  br i1 %consp-test4354, label %tag531, label %tag205

tag935:                                           ; preds = %normal-dest2746
  %536 = add i64 %425, 5
  %537 = inttoptr i64 %536 to {}**
  %538 = load {}*, {}** %537, align 8
  br label %tag607

tag939:                                           ; preds = %normal-dest2144
  %539 = add i64 %890, 5
  %540 = inttoptr i64 %539 to {}**
  %541 = load {}*, {}** %540, align 8
  br label %tag679

tag946:                                           ; preds = %tag295
  %542 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %543 = invoke {}* @cc_safe_fdefinition({}* %542)
          to label %normal-dest4363 unwind label %cleanup-lpad

tag947:                                           ; preds = %tag106
  %544 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %545 = invoke {}* @cc_safe_fdefinition({}* %544)
          to label %normal-dest4377 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest4377, %tag947, %normal-dest4363, %tag946, %normal-dest4330, %tag923, %normal-dest4296, %tag908, %normal-dest4279, %tag904, %normal-dest2744, %normal-dest4253, %tag898, %normal-dest4217, %tag883, %normal-dest4173, %tag873, %normal-dest4128, %tag846, %normal-dest4114, %tag844, %normal-dest4046, %tag816, %normal-dest4018, %tag811, %tag805, %normal-dest3967, %tag337, %normal-dest1272, %normal-dest3924, %tag782, %normal-dest3889, %tag774, %normal-dest3870, %tag773, %normal-dest3821, %tag759, %normal-dest3691, %normal-dest1202, %normal-dest3668, %tag697, %normal-dest3606, %tag676, %normal-dest3592, %tag674, %normal-dest3531, %tag656, %normal-dest3496, %tag652, %normal-dest3441, %tag630, %normal-dest3359, %tag611, %normal-dest3314, %normal-dest3313, %tag598, %normal-dest3286, %tag593, %normal-dest3201, %tag578, %normal-dest3223, %tag572, %tag571, %normal-dest1395, %tag567, %tag556, %normal-dest3083, %tag541, %normal-dest3064, %tag529, %tag523, %normal-dest3019, %tag521, %normal-dest2989, %tag513, %normal-dest2933, %tag496, %normal-dest2912, %tag493, %normal-dest2896, %normal-dest2895, %tag490, %normal-dest2843, %tag478, %normal-dest2829, %maybe-more-tests, %normal-dest2808, %tag623, %normal-dest2767, %tag128, %normal-dest2130, %tag452, %normal-dest2728, %tag449, %normal-dest2698, %tag446, %normal-dest2650, %tag438, %tag431, %normal-dest2570, %tag415, %normal-dest2549, %maybe-more-tests1738, %normal-dest2535, %tag410, %normal-dest3931, %normal-dest2494, %tag403, %normal-dest2423, %normal-dest2422, %tag381, %normal-dest1863, %normal-dest2395, %tag373, %normal-dest2370, %tag367, %normal-dest2348, %tag360, %normal-dest2337, %normal-dest2336, %tag357, %normal-dest2296, %tag346, %normal-dest1909, %normal-dest2214, %tag327, %normal-dest2185, %tag321, %normal-dest2170, %tag320, %normal-dest3698, %normal-dest2122, %normal-dest3175, %normal-dest2119, %normal-dest2118, %tag307, %tag286, %normal-dest2038, %tag281, %normal-dest1949, %tag250, %normal-dest1924, %tag244, %normal-dest1902, %normal-dest1685, %tag230, %normal-dest1867, %normal-dest1865, %tag218, %tag213, %normal-dest1842, %tag211, %normal-dest1796, %tag204, %normal-dest1751, %tag195, %normal-dest1710, %tag180, %tag176, %normal-dest1666, %tag172, %tag166, %normal-dest1622, %tag164, %normal-dest1024, %normal-dest1894, %normal-dest1547, %tag152, %normal-dest1528, %normal-dest1527, %tag148, %normal-dest1502, %normal-dest1501, %tag141, %normal-dest1485, %tag140, %normal-dest1467, %normal-dest1466, %tag135, %normal-dest1423, %tag117, %normal-dest1420, %normal-dest1419, %tag116, %tag109, %normal-dest1356, %tag102, %normal-dest1326, %tag92, %normal-dest1305, %normal-dest1303, %tag89, %normal-dest1300, %normal-dest1298, %tag88, %normal-dest1265, %tag83, %normal-dest2055, %tag72, %normal-dest1174, %tag70, %normal-dest1124, %tag60, %normal-dest1097, %tag51, %normal-dest1057, %maybe-more-tests1706, %tag35, %normal-dest1015, %tag16, %normal-dest988, %tag12, %normal-dest
  %546 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %546

normal-dest:                                      ; preds = %11
  %547 = ptrtoint {}* %closure-ptr to i64
  %548 = and i64 %547, -8
  %549 = inttoptr i64 %548 to %1*
  %550 = getelementptr inbounds %1, %1* %549, i64 0, i32 4, i32 1, i64 0, i32 0
  %551 = load %"class.core::T_O"*, %"class.core::T_O"** %550, align 8, !tbaa !31
  %552 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 110), align 16
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %552, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.9", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.9^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2536, i64 68, i64 0, i64 0)
          to label %normal-dest953 unwind label %cleanup-lpad

normal-dest953:                                   ; preds = %normal-dest
  %553 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %554 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %555 = icmp eq {}* %553, %554
  br i1 %555, label %tag811, label %tag808

header-check-br:                                  ; preds = %header-check-br3757
  %.old5287 = and i64 %ptrtoint3758, 3
  %fixnump-test2948.old = icmp eq i64 %.old5287, 0
  br i1 %fixnump-test2948.old, label %tag262, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br
  switch i64 %948, label %tag452 [
    i64 1349, label %tag262
    i64 1309, label %tag262
  ]

header-check-br981:                               ; preds = %header-check-br4188
  %irc-bit-cast985 = bitcast {}* %y1033.1 to i8*
  %gep986 = getelementptr inbounds i8, i8* %irc-bit-cast985, i64 -9
  %irc-bit-cast987 = bitcast i8* %gep986 to i64*
  %556 = load i64, i64* %irc-bit-cast987, align 8
  %557 = icmp eq i64 %556, 1325
  br i1 %557, label %tag148, label %tag541

normal-dest988:                                   ; preds = %tag12
  %558 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %559 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %560 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %561 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint990 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint = add i64 %ptrtoint990, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %562 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %18, i64 5, {}* %558, {}* %559, {}* %x1504.0, {}* %560, {}* %561)
          to label %normal-dest993 unwind label %cleanup-lpad

normal-dest993:                                   ; preds = %normal-dest988
  %.elt4912 = extractvalue { {}*, i64 } %562, 0
  %.elt4914 = extractvalue { {}*, i64 } %562, 1
  %cond4460 = icmp eq i64 %.elt4914, 0
  %563 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x994.1 = select i1 %cond4460, {}* %563, {}* %.elt4912
  br label %tag667

normal-dest1015:                                  ; preds = %tag16
  %ptrtoint1018 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint1019 = add i64 %ptrtoint1018, 7
  %entry-point-addr1020 = inttoptr i64 %entry-point-addr-uint1019 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1021 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1020, align 8
  %564 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1021({}* %23, i64 2, {}* %x1603.0, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1024 unwind label %cleanup-lpad

normal-dest1024:                                  ; preds = %normal-dest1015
  %.elt4874 = extractvalue { {}*, i64 } %564, 0
  %.elt4876 = extractvalue { {}*, i64 } %564, 1
  %cond4453 = icmp eq i64 %.elt4876, 0
  %565 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163026.1 = select i1 %cond4453, {}* %565, {}* %.elt4874
  %ptrtoint1604 = ptrtoint {}* %964 to i64
  %entry-point-addr-uint1605 = add i64 %ptrtoint1604, 7
  %entry-point-addr1606 = inttoptr i64 %entry-point-addr-uint1605 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1607 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1606, align 8
  %566 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1607({}* %964, i64 1, {}* %G163026.1, {}* null, {}* null, {}* null)
          to label %normal-dest1610 unwind label %cleanup-lpad

normal-dest1057:                                  ; preds = %maybe-more-tests1706
  %ptrtoint1058 = ptrtoint {}* %662 to i64
  %entry-point-addr-uint1059 = add i64 %ptrtoint1058, 7
  %entry-point-addr1060 = inttoptr i64 %entry-point-addr-uint1059 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1061 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1060, align 8
  %567 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1061({}* %662, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest1064 unwind label %cleanup-lpad

normal-dest1064:                                  ; preds = %normal-dest1057
  %.elt4967 = extractvalue { {}*, i64 } %567, 0
  %.elt4969 = extractvalue { {}*, i64 } %567, 1
  %cond4471 = icmp eq i64 %.elt4969, 0
  %568 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162948.1 = select i1 %cond4471, {}* %568, {}* %.elt4967
  br label %tag212

normal-dest1097:                                  ; preds = %tag51
  %569 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %570 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %571 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %572 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1099 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint1100 = add i64 %ptrtoint1099, 7
  %entry-point-addr1101 = inttoptr i64 %entry-point-addr-uint1100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1101, align 8
  %573 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1102({}* %41, i64 5, {}* %569, {}* %570, {}* %farg1, {}* %571, {}* %572)
          to label %normal-dest1105 unwind label %cleanup-lpad

normal-dest1105:                                  ; preds = %normal-dest1097
  %.elt5068 = extractvalue { {}*, i64 } %573, 0
  %.elt5070 = extractvalue { {}*, i64 } %573, 1
  %cond4487 = icmp eq i64 %.elt5070, 0
  %574 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1106.1 = select i1 %cond4487, {}* %574, {}* %.elt5068
  br label %tag450

normal-dest1124:                                  ; preds = %tag60
  %575 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %576 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %577 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %578 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1126 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint1127 = add i64 %ptrtoint1126, 7
  %entry-point-addr1128 = inttoptr i64 %entry-point-addr-uint1127 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1129 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1128, align 8
  %579 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1129({}* %48, i64 5, {}* %575, {}* %576, {}* %x1031.0, {}* %577, {}* %578)
          to label %normal-dest1132 unwind label %cleanup-lpad

normal-dest1132:                                  ; preds = %normal-dest1124
  %.elt5046 = extractvalue { {}*, i64 } %579, 0
  %.elt5048 = extractvalue { {}*, i64 } %579, 1
  %cond4482 = icmp eq i64 %.elt5048, 0
  %580 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1133.1 = select i1 %cond4482, {}* %580, {}* %.elt5046
  br label %tag729

normal-dest1174:                                  ; preds = %tag70
  %ptrtoint1177 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint1178 = add i64 %ptrtoint1177, 7
  %entry-point-addr1179 = inttoptr i64 %entry-point-addr-uint1178 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1180 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1179, align 8
  %581 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1180({}* %60, i64 2, {}* %.in5088, {}* %116, {}* null, {}* null)
          to label %normal-dest1183 unwind label %cleanup-lpad

normal-dest1183:                                  ; preds = %normal-dest1174
  %.elt4988 = extractvalue { {}*, i64 } %581, 0
  %.elt4990 = extractvalue { {}*, i64 } %581, 1
  %cond4473 = icmp eq i64 %.elt4990, 0
  %582 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162804.1 = select i1 %cond4473, {}* %582, {}* %.elt4988
  br label %tag556

header-check-br1189:                              ; preds = %header-check-br3572
  %.off5455 = add i64 %922, -1001
  %583 = icmp ult i64 %.off5455, 5
  br i1 %583, label %maybe-more-tests, label %tag321

maybe-more-tests:                                 ; preds = %header-check-br1189
  %584 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %585 = invoke {}* @cc_safe_fdefinition({}* %584)
          to label %normal-dest2829 unwind label %cleanup-lpad

normal-dest1202:                                  ; preds = %tag72
  %586 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %587 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %588 = invoke {}* @cc_safe_fdefinition({}* %587)
          to label %normal-dest3691 unwind label %cleanup-lpad

header-check-br1221:                              ; preds = %header-check-br2507
  %.old5303 = and i64 %ptrtoint2508, 3
  %fixnump-test4245.old = icmp eq i64 %.old5303, 0
  br i1 %fixnump-test4245.old, label %tag719, label %switch.early.test5484

switch.early.test5484:                            ; preds = %header-check-br1221
  switch i64 %786, label %tag109 [
    i64 1349, label %tag719
    i64 1309, label %tag719
  ]

normal-dest1257:                                  ; preds = %normal-dest2055
  call void @unreachableError()
  unreachable

normal-dest1265:                                  ; preds = %tag83
  %ptrtoint1266 = ptrtoint {}* %69 to i64
  %entry-point-addr-uint1267 = add i64 %ptrtoint1266, 7
  %entry-point-addr1268 = inttoptr i64 %entry-point-addr-uint1267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1268, align 8
  %589 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1269({}* %69, i64 2, {}* %x1630.0, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest1272 unwind label %cleanup-lpad

normal-dest1272:                                  ; preds = %normal-dest1265
  %.elt5026 = extractvalue { {}*, i64 } %589, 0
  %.elt5028 = extractvalue { {}*, i64 } %589, 1
  %cond4479 = icmp eq i64 %.elt5028, 0
  %590 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162610.1 = select i1 %cond4479, {}* %590, {}* %.elt5026
  %ptrtoint3937 = ptrtoint {}* %951 to i64
  %entry-point-addr-uint3938 = add i64 %ptrtoint3937, 7
  %entry-point-addr3939 = inttoptr i64 %entry-point-addr-uint3938 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3940 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3939, align 8
  %591 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3940({}* %951, i64 1, {}* %G162610.1, {}* null, {}* null, {}* null)
          to label %normal-dest3943 unwind label %cleanup-lpad

normal-dest1298:                                  ; preds = %tag88
  %592 = invoke double @from_object_double({}* nonnull %136)
          to label %normal-dest1300 unwind label %cleanup-lpad

normal-dest1300:                                  ; preds = %normal-dest1298
  %593 = fdiv double %75, %592
  %594 = invoke {}* @to_object_double(double %593)
          to label %tag72 unwind label %cleanup-lpad

normal-dest1303:                                  ; preds = %tag89
  %595 = invoke float @from_object_float({}* %y1250.1)
          to label %normal-dest1305 unwind label %cleanup-lpad

normal-dest1305:                                  ; preds = %normal-dest1303
  %596 = fdiv float %76, %595
  %597 = invoke {}* @to_object_float(float %596)
          to label %tag774 unwind label %cleanup-lpad

normal-dest1326:                                  ; preds = %tag92
  %.elt4544 = extractvalue { {}*, i64 } %77, 0
  %.elt4546 = extractvalue { {}*, i64 } %77, 1
  %cond4397 = icmp eq i64 %.elt4546, 0
  %598 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163804.0 = select i1 %cond4397, {}* %598, {}* %.elt4544
  %599 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %600 = invoke {}* @cc_safe_fdefinition({}* %599)
          to label %normal-dest1333 unwind label %cleanup-lpad

normal-dest1333:                                  ; preds = %normal-dest1326
  br i1 %consp-test3252, label %tag354, label %tag791

normal-dest1356:                                  ; preds = %tag102
  %601 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %602 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %603 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %604 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1358 = ptrtoint {}* %82 to i64
  %entry-point-addr-uint1359 = add i64 %ptrtoint1358, 7
  %entry-point-addr1360 = inttoptr i64 %entry-point-addr-uint1359 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1361 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1360, align 8
  %605 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1361({}* %82, i64 5, {}* %601, {}* %602, {}* %x2403.0, {}* %603, {}* %604)
          to label %normal-dest1364 unwind label %cleanup-lpad

normal-dest1364:                                  ; preds = %normal-dest1356
  %.elt4890 = extractvalue { {}*, i64 } %605, 0
  %.elt4892 = extractvalue { {}*, i64 } %605, 1
  %cond4455 = icmp eq i64 %.elt4892, 0
  %606 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162956.1 = select i1 %cond4455, {}* %606, {}* %.elt4890
  br label %tag431

normal-dest1395:                                  ; preds = %tag109
  %607 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %608 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %609 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %610 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint3208 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint3209 = add i64 %ptrtoint3208, 7
  %entry-point-addr3210 = inttoptr i64 %entry-point-addr-uint3209 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3211 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3210, align 8
  %611 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3211({}* %89, i64 5, {}* %607, {}* %608, {}* %y1033.1, {}* %609, {}* %610)
          to label %normal-dest3214 unwind label %cleanup-lpad

normal-dest1419:                                  ; preds = %tag116
  %612 = invoke double @from_object_double({}* nonnull %116)
          to label %normal-dest1420 unwind label %cleanup-lpad

normal-dest1420:                                  ; preds = %normal-dest1419
  %613 = fdiv double %92, %612
  %614 = invoke {}* @to_object_double(double %613)
          to label %tag556 unwind label %cleanup-lpad

normal-dest1423:                                  ; preds = %tag117
  %615 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %616 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %617 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %618 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1424 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint1425 = add i64 %ptrtoint1424, 7
  %entry-point-addr1426 = inttoptr i64 %entry-point-addr-uint1425 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1427 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1426, align 8
  %619 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1427({}* %94, i64 5, {}* %615, {}* %616, {}* %farg1, {}* %617, {}* %618)
          to label %normal-dest1430 unwind label %cleanup-lpad

normal-dest1430:                                  ; preds = %normal-dest1423
  %.elt4902 = extractvalue { {}*, i64 } %619, 0
  %.elt4904 = extractvalue { {}*, i64 } %619, 1
  %cond4458 = icmp eq i64 %.elt4904, 0
  %620 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1431.1 = select i1 %cond4458, {}* %620, {}* %.elt4902
  br label %tag209

header-check-br1444:                              ; preds = %normal-dest2815
  %irc-bit-cast1448 = bitcast {}* %y1219.1 to i8*
  %gep1449 = getelementptr inbounds i8, i8* %irc-bit-cast1448, i64 -9
  %irc-bit-cast1450 = bitcast i8* %gep1449 to i64*
  %621 = load i64, i64* %irc-bit-cast1450, align 8
  switch i64 %621, label %header-check-br4343 [
    i64 1325, label %tag820
    i64 1341, label %tag820
  ]

normal-dest1466:                                  ; preds = %tag135
  %622 = invoke float @from_object_float({}* %136)
          to label %normal-dest1467 unwind label %cleanup-lpad

normal-dest1467:                                  ; preds = %normal-dest1466
  %623 = fdiv float %99, %622
  %624 = invoke {}* @to_object_float(float %623)
          to label %tag72 unwind label %cleanup-lpad

normal-dest1485:                                  ; preds = %tag140
  %625 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %626 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %627 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %628 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1487 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint1488 = add i64 %ptrtoint1487, 7
  %entry-point-addr1489 = inttoptr i64 %entry-point-addr-uint1488 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1490 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1489, align 8
  %629 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1490({}* %101, i64 5, {}* %625, {}* %626, {}* %farg1, {}* %627, {}* %628)
          to label %normal-dest1493 unwind label %cleanup-lpad

normal-dest1493:                                  ; preds = %normal-dest1485
  %.elt5054 = extractvalue { {}*, i64 } %629, 0
  %.elt5056 = extractvalue { {}*, i64 } %629, 1
  %cond4484 = icmp eq i64 %.elt5056, 0
  %630 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1494.1 = select i1 %cond4484, {}* %630, {}* %.elt5054
  br label %tag691

normal-dest1501:                                  ; preds = %tag141
  %631 = invoke float @from_object_float({}* %y1033.1)
          to label %normal-dest1502 unwind label %cleanup-lpad

normal-dest1502:                                  ; preds = %normal-dest1501
  %632 = fdiv float %102, %631
  %633 = invoke {}* @to_object_float(float %632)
          to label %tag759 unwind label %cleanup-lpad

normal-dest1527:                                  ; preds = %tag148
  %634 = invoke double @from_object_double({}* nonnull %y1033.1)
          to label %normal-dest1528 unwind label %cleanup-lpad

normal-dest1528:                                  ; preds = %normal-dest1527
  %635 = fdiv double %103, %634
  %636 = invoke {}* @to_object_double(double %635)
          to label %tag759 unwind label %cleanup-lpad

normal-dest1547:                                  ; preds = %tag152
  %637 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %638 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %639 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %640 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1549 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint1550 = add i64 %ptrtoint1549, 7
  %entry-point-addr1551 = inttoptr i64 %entry-point-addr-uint1550 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1552 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1551, align 8
  %641 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1552({}* %105, i64 5, {}* %637, {}* %638, {}* %farg1, {}* %639, {}* %640)
          to label %normal-dest1555 unwind label %cleanup-lpad

normal-dest1555:                                  ; preds = %normal-dest1547
  %.elt4951 = extractvalue { {}*, i64 } %641, 0
  %.elt4953 = extractvalue { {}*, i64 } %641, 1
  %cond4467 = icmp eq i64 %.elt4953, 0
  %642 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1556.1 = select i1 %cond4467, {}* %642, {}* %.elt4951
  br label %tag700

normal-dest1602:                                  ; preds = %normal-dest1894
  call void @unreachableError()
  unreachable

normal-dest1610:                                  ; preds = %normal-dest1024
  %.elt4878 = extractvalue { {}*, i64 } %566, 0
  %.elt4880 = extractvalue { {}*, i64 } %566, 1
  %cond4454 = icmp eq i64 %.elt4880, 0
  %643 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162955.0 = select i1 %cond4454, {}* %643, {}* %.elt4878
  br i1 %consp-test1861, label %tag711, label %tag65

normal-dest1622:                                  ; preds = %tag164
  %644 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %645 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %646 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %647 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1623 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint1624 = add i64 %ptrtoint1623, 7
  %entry-point-addr1625 = inttoptr i64 %entry-point-addr-uint1624 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1626 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1625, align 8
  %648 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1626({}* %109, i64 5, {}* %644, {}* %645, {}* %x1371.0, {}* %646, {}* %647)
          to label %normal-dest1629 unwind label %cleanup-lpad

normal-dest1629:                                  ; preds = %normal-dest1622
  %.elt5060 = extractvalue { {}*, i64 } %648, 0
  %.elt5062 = extractvalue { {}*, i64 } %648, 1
  %cond4485 = icmp eq i64 %.elt5062, 0
  %649 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in5057 = select i1 %cond4485, {}* %649, {}* %.elt5060
  br label %tag83

header-check-br1636:                              ; preds = %tag165
  %gep1641 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %115, i64 -9, i32 0
  %irc-bit-cast1642 = bitcast i8* %gep1641 to i64*
  %650 = load i64, i64* %irc-bit-cast1642, align 8
  switch i64 %650, label %header-check-br2007 [
    i64 1325, label %tag506
    i64 1341, label %tag506
  ]

normal-dest1644:                                  ; preds = %tag166
  br i1 %consp-test3666, label %tag365, label %tag553

normal-dest1666:                                  ; preds = %tag172
  %651 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %652 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %653 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %654 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 395), align 8
  %ptrtoint1667 = ptrtoint {}* %122 to i64
  %entry-point-addr-uint1668 = add i64 %ptrtoint1667, 7
  %entry-point-addr1669 = inttoptr i64 %entry-point-addr-uint1668 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1670 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1669, align 8
  %655 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1670({}* %122, i64 5, {}* %651, {}* %652, {}* %"closure->LAMBDA", {}* %653, {}* %654)
          to label %normal-dest1673 unwind label %cleanup-lpad

normal-dest1673:                                  ; preds = %normal-dest1666
  %.elt = extractvalue { {}*, i64 } %655, 0
  %.elt4499 = extractvalue { {}*, i64 } %655, 1
  %cond = icmp eq i64 %.elt4499, 0
  %656 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163798.1 = select i1 %cond, {}* %656, {}* %.elt
  br label %tag578

normal-dest1685:                                  ; preds = %tag176
  %657 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %658 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %659 = invoke {}* @cc_safe_fdefinition({}* %658)
          to label %normal-dest1902 unwind label %cleanup-lpad

header-check-br1698:                              ; preds = %header-check-br2711
  %.off5407 = add i64 %810, -1001
  %660 = icmp ult i64 %.off5407, 5
  br i1 %660, label %maybe-more-tests1706, label %tag674

maybe-more-tests1706:                             ; preds = %header-check-br1698
  %661 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %662 = invoke {}* @cc_safe_fdefinition({}* %661)
          to label %normal-dest1057 unwind label %cleanup-lpad

normal-dest1710:                                  ; preds = %tag180
  %663 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %664 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %665 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %666 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1711 = ptrtoint {}* %129 to i64
  %entry-point-addr-uint1712 = add i64 %ptrtoint1711, 7
  %entry-point-addr1713 = inttoptr i64 %entry-point-addr-uint1712 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1714 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1713, align 8
  %667 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1714({}* %129, i64 5, {}* %663, {}* %664, {}* %x1095.0, {}* %665, {}* %666)
          to label %normal-dest1717 unwind label %cleanup-lpad

normal-dest1717:                                  ; preds = %normal-dest1710
  %.elt4579 = extractvalue { {}*, i64 } %667, 0
  %.elt4581 = extractvalue { {}*, i64 } %667, 1
  %cond4402 = icmp eq i64 %.elt4581, 0
  %668 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1215.1 = select i1 %cond4402, {}* %668, {}* %.elt4579
  br label %tag202

header-check-br1730:                              ; preds = %header-check-br4008
  %.off5359 = add i64 %973, -1001
  %669 = icmp ult i64 %.off5359, 5
  br i1 %669, label %maybe-more-tests1738, label %tag172

maybe-more-tests1738:                             ; preds = %header-check-br1730
  %670 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %671 = invoke {}* @cc_safe_fdefinition({}* %670)
          to label %normal-dest2549 unwind label %cleanup-lpad

header-check-br1741:                              ; preds = %tag188
  %gep1746 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %135, i64 -9, i32 0
  %irc-bit-cast1747 = bitcast i8* %gep1746 to i64*
  %672 = load i64, i64* %irc-bit-cast1747, align 8
  switch i64 %672, label %header-check-br3855 [
    i64 1325, label %tag743
    i64 1341, label %tag743
  ]

normal-dest1751:                                  ; preds = %tag195
  %673 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %674 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %675 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %676 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1753 = ptrtoint {}* %141 to i64
  %entry-point-addr-uint1754 = add i64 %ptrtoint1753, 7
  %entry-point-addr1755 = inttoptr i64 %entry-point-addr-uint1754 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1756 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1755, align 8
  %677 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1756({}* %141, i64 5, {}* %673, {}* %674, {}* %farg1, {}* %675, {}* %676)
          to label %normal-dest1759 unwind label %cleanup-lpad

normal-dest1759:                                  ; preds = %normal-dest1751
  %.elt4583 = extractvalue { {}*, i64 } %677, 0
  %.elt4585 = extractvalue { {}*, i64 } %677, 1
  %cond4403 = icmp eq i64 %.elt4585, 0
  %678 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1095.1 = select i1 %cond4403, {}* %678, {}* %.elt4583
  br label %tag884

normal-dest1796:                                  ; preds = %tag204
  %679 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %680 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %681 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %682 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1798 = ptrtoint {}* %152 to i64
  %entry-point-addr-uint1799 = add i64 %ptrtoint1798, 7
  %entry-point-addr1800 = inttoptr i64 %entry-point-addr-uint1799 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1801 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1800, align 8
  %683 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1801({}* %152, i64 5, {}* %679, {}* %680, {}* %farg1, {}* %681, {}* %682)
          to label %normal-dest1804 unwind label %cleanup-lpad

normal-dest1804:                                  ; preds = %normal-dest1796
  %.elt4916 = extractvalue { {}*, i64 } %683, 0
  %.elt4918 = extractvalue { {}*, i64 } %683, 1
  %cond4461 = icmp eq i64 %.elt4918, 0
  %684 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1504.1 = select i1 %cond4461, {}* %684, {}* %.elt4916
  br label %tag400

normal-dest1842:                                  ; preds = %tag211
  %ptrtoint1843 = ptrtoint {}* %162 to i64
  %entry-point-addr-uint1844 = add i64 %ptrtoint1843, 7
  %entry-point-addr1845 = inttoptr i64 %entry-point-addr-uint1844 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1846 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1845, align 8
  %685 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1846({}* %162, i64 2, {}* %.in4920, {}* %y1250.1, {}* null, {}* null)
          to label %normal-dest1849 unwind label %cleanup-lpad

normal-dest1849:                                  ; preds = %normal-dest1842
  %.elt4862 = extractvalue { {}*, i64 } %685, 0
  %.elt4864 = extractvalue { {}*, i64 } %685, 1
  %cond4451 = icmp eq i64 %.elt4864, 0
  %686 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163102.1 = select i1 %cond4451, {}* %686, {}* %.elt4862
  br label %tag774

normal-dest1863:                                  ; preds = %tag213
  %687 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %688 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %689 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %690 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint2409 = ptrtoint {}* %166 to i64
  %entry-point-addr-uint2410 = add i64 %ptrtoint2409, 7
  %entry-point-addr2411 = inttoptr i64 %entry-point-addr-uint2410 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2412 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2411, align 8
  %691 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2412({}* %166, i64 5, {}* %687, {}* %688, {}* %136, {}* %689, {}* %690)
          to label %normal-dest2415 unwind label %cleanup-lpad

normal-dest1865:                                  ; preds = %tag218
  %692 = invoke double @from_object_double({}* nonnull %447)
          to label %normal-dest1867 unwind label %cleanup-lpad

normal-dest1867:                                  ; preds = %normal-dest1865
  %693 = fdiv double %167, %692
  %694 = invoke {}* @to_object_double(double %693)
          to label %tag176 unwind label %cleanup-lpad

normal-dest1894:                                  ; preds = %tag230
  %695 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %696 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %697 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %698 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint1596 = ptrtoint {}* %173 to i64
  %entry-point-addr-uint1597 = add i64 %ptrtoint1596, 7
  %entry-point-addr1598 = inttoptr i64 %entry-point-addr-uint1597 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1599 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1598, align 8
  %699 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1599({}* %173, i64 5, {}* %695, {}* %696, {}* %116, {}* %697, {}* %698)
          to label %normal-dest1602 unwind label %cleanup-lpad

normal-dest1902:                                  ; preds = %normal-dest1685
  %.elt4842 = extractvalue { {}*, i64 } %126, 1
  %cond4448 = icmp eq i64 %.elt4842, 0
  %.elt4840 = extractvalue { {}*, i64 } %126, 0
  %.in4934 = select i1 %cond4448, {}* %657, {}* %.elt4840
  %ptrtoint1903 = ptrtoint {}* %659 to i64
  %entry-point-addr-uint1904 = add i64 %ptrtoint1903, 7
  %entry-point-addr1905 = inttoptr i64 %entry-point-addr-uint1904 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1906 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1905, align 8
  %700 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1906({}* %659, i64 2, {}* %.in4934, {}* inttoptr (i64 400 to {}*), {}* null, {}* null)
          to label %normal-dest1909 unwind label %cleanup-lpad

normal-dest1909:                                  ; preds = %normal-dest1902
  %.elt4845 = extractvalue { {}*, i64 } %700, 0
  %.elt4847 = extractvalue { {}*, i64 } %700, 1
  %cond4449 = icmp eq i64 %.elt4847, 0
  %701 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162953.1 = select i1 %cond4449, {}* %701, {}* %.elt4845
  %702 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %703 = invoke {}* @cc_safe_fdefinition({}* %702)
          to label %normal-dest2232 unwind label %cleanup-lpad

normal-dest1924:                                  ; preds = %tag244
  %704 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %705 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %706 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %707 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1926 = ptrtoint {}* %180 to i64
  %entry-point-addr-uint1927 = add i64 %ptrtoint1926, 7
  %entry-point-addr1928 = inttoptr i64 %entry-point-addr-uint1927 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1929 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1928, align 8
  %708 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1929({}* %180, i64 5, {}* %704, {}* %705, {}* %farg1, {}* %706, {}* %707)
          to label %normal-dest1932 unwind label %cleanup-lpad

normal-dest1932:                                  ; preds = %normal-dest1924
  %.elt4639 = extractvalue { {}*, i64 } %708, 0
  %.elt4641 = extractvalue { {}*, i64 } %708, 1
  %cond4414 = icmp eq i64 %.elt4641, 0
  %709 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1933.1 = select i1 %cond4414, {}* %709, {}* %.elt4639
  br label %tag398

normal-dest1949:                                  ; preds = %tag250
  %710 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %711 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %712 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %713 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint1951 = ptrtoint {}* %184 to i64
  %entry-point-addr-uint1952 = add i64 %ptrtoint1951, 7
  %entry-point-addr1953 = inttoptr i64 %entry-point-addr-uint1952 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1954 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1953, align 8
  %714 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1954({}* %184, i64 5, {}* %710, {}* %711, {}* %farg1, {}* %712, {}* %713)
          to label %normal-dest1957 unwind label %cleanup-lpad

normal-dest1957:                                  ; preds = %normal-dest1949
  %.elt5115 = extractvalue { {}*, i64 } %714, 0
  %.elt5117 = extractvalue { {}*, i64 } %714, 1
  %cond4496 = icmp eq i64 %.elt5117, 0
  %715 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162535.1 = select i1 %cond4496, {}* %715, {}* %.elt5115
  br label %tag749

header-check-br2007:                              ; preds = %header-check-br1636
  %.old5311 = and i64 %ptrtoint1637, 3
  %fixnump-test4351.old = icmp eq i64 %.old5311, 0
  br i1 %fixnump-test4351.old, label %tag506, label %switch.early.test5485

switch.early.test5485:                            ; preds = %header-check-br2007
  switch i64 %650, label %tag230 [
    i64 1349, label %tag506
    i64 1309, label %tag506
  ]

normal-dest2038:                                  ; preds = %tag281
  %716 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %717 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %718 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %719 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2040 = ptrtoint {}* %191 to i64
  %entry-point-addr-uint2041 = add i64 %ptrtoint2040, 7
  %entry-point-addr2042 = inttoptr i64 %entry-point-addr-uint2041 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2043 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2042, align 8
  %720 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2043({}* %191, i64 5, {}* %716, {}* %717, {}* %farg1, {}* %718, {}* %719)
          to label %normal-dest2046 unwind label %cleanup-lpad

normal-dest2046:                                  ; preds = %normal-dest2038
  %.elt5083 = extractvalue { {}*, i64 } %720, 0
  %.elt5085 = extractvalue { {}*, i64 } %720, 1
  %cond4490 = icmp eq i64 %.elt5085, 0
  %721 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2047.1 = select i1 %cond4490, {}* %721, {}* %.elt5083
  br label %tag607

normal-dest2055:                                  ; preds = %tag286
  %722 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %723 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %724 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %725 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint1251 = ptrtoint {}* %193 to i64
  %entry-point-addr-uint1252 = add i64 %ptrtoint1251, 7
  %entry-point-addr1253 = inttoptr i64 %entry-point-addr-uint1252 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1254 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1253, align 8
  %726 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1254({}* %193, i64 5, {}* %722, {}* %723, {}* %y1250.1, {}* %724, {}* %725)
          to label %normal-dest1257 unwind label %cleanup-lpad

normal-dest2118:                                  ; preds = %tag307
  %727 = invoke float @from_object_float({}* %116)
          to label %normal-dest2119 unwind label %cleanup-lpad

normal-dest2119:                                  ; preds = %normal-dest2118
  %728 = fdiv float %201, %727
  %729 = invoke {}* @to_object_float(float %728)
          to label %tag556 unwind label %cleanup-lpad

normal-dest2122:                                  ; preds = %normal-dest3175
  %.elt4994 = extractvalue { {}*, i64 } %338, 1
  %cond4474 = icmp eq i64 %.elt4994, 0
  %.elt4992 = extractvalue { {}*, i64 } %338, 0
  %.in5086 = select i1 %cond4474, {}* %874, {}* %.elt4992
  %ptrtoint2124 = ptrtoint {}* %876 to i64
  %entry-point-addr-uint2125 = add i64 %ptrtoint2124, 7
  %entry-point-addr2126 = inttoptr i64 %entry-point-addr-uint2125 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2127 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2126, align 8
  %730 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2127({}* %876, i64 2, {}* %.in5086, {}* inttoptr (i64 400 to {}*), {}* null, {}* null)
          to label %normal-dest2130 unwind label %cleanup-lpad

normal-dest2130:                                  ; preds = %normal-dest2122
  %.elt4997 = extractvalue { {}*, i64 } %730, 0
  %.elt4999 = extractvalue { {}*, i64 } %730, 1
  %cond4475 = icmp eq i64 %.elt4999, 0
  %731 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162537.1 = select i1 %cond4475, {}* %731, {}* %.elt4997
  %732 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %733 = invoke {}* @cc_safe_fdefinition({}* %732)
          to label %normal-dest2746 unwind label %cleanup-lpad

normal-dest2144:                                  ; preds = %normal-dest3698
  br i1 %consp-test3252, label %tag939, label %tag210

header-check-br2150:                              ; preds = %header-check-br3862
  %gep2155 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %135, i64 -9, i32 0
  %irc-bit-cast2156 = bitcast i8* %gep2155 to i64*
  %734 = load i64, i64* %irc-bit-cast2156, align 8
  %735 = icmp eq i64 %734, 1325
  br i1 %735, label %tag88, label %tag630

normal-dest2170:                                  ; preds = %tag320
  %ptrtoint2172 = ptrtoint {}* %207 to i64
  %entry-point-addr-uint2173 = add i64 %ptrtoint2172, 7
  %entry-point-addr2174 = inttoptr i64 %entry-point-addr-uint2173 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2175 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2174, align 8
  %736 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2175({}* %207, i64 2, {}* %.in4600, {}* %y1219.1, {}* null, {}* null)
          to label %normal-dest2178 unwind label %cleanup-lpad

normal-dest2178:                                  ; preds = %normal-dest2170
  %.elt4540 = extractvalue { {}*, i64 } %736, 0
  %.elt4542 = extractvalue { {}*, i64 } %736, 1
  %cond4396 = icmp eq i64 %.elt4542, 0
  %737 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163952.1 = select i1 %cond4396, {}* %737, {}* %.elt4540
  br label %tag92

normal-dest2185:                                  ; preds = %tag321
  %738 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %739 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %740 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %741 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 392), align 16
  %ptrtoint2186 = ptrtoint {}* %209 to i64
  %entry-point-addr-uint2187 = add i64 %ptrtoint2186, 7
  %entry-point-addr2188 = inttoptr i64 %entry-point-addr-uint2187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2188, align 8
  %742 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2189({}* %209, i64 5, {}* %738, {}* %739, {}* %"closure->LAMBDA", {}* %740, {}* %741)
          to label %normal-dest2192 unwind label %cleanup-lpad

normal-dest2192:                                  ; preds = %normal-dest2185
  %.elt4971 = extractvalue { {}*, i64 } %742, 0
  %.elt4973 = extractvalue { {}*, i64 } %742, 1
  %cond4472 = icmp eq i64 %.elt4973, 0
  %743 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162532.1 = select i1 %cond4472, {}* %743, {}* %.elt4971
  br label %tag694

normal-dest2214:                                  ; preds = %tag327
  %744 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %745 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %746 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %747 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2216 = ptrtoint {}* %211 to i64
  %entry-point-addr-uint2217 = add i64 %ptrtoint2216, 7
  %entry-point-addr2218 = inttoptr i64 %entry-point-addr-uint2217 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2219 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2218, align 8
  %748 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2219({}* %211, i64 5, {}* %744, {}* %745, {}* %x2780.0, {}* %746, {}* %747)
          to label %normal-dest2222 unwind label %cleanup-lpad

normal-dest2222:                                  ; preds = %normal-dest2214
  %.elt5107 = extractvalue { {}*, i64 } %748, 0
  %.elt5109 = extractvalue { {}*, i64 } %748, 1
  %cond4494 = icmp eq i64 %.elt5109, 0
  %749 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162536.1 = select i1 %cond4494, {}* %749, {}* %.elt5107
  br label %tag166

normal-dest2232:                                  ; preds = %normal-dest1909
  br i1 %consp-test1861, label %tag62, label %tag99

normal-dest2296:                                  ; preds = %tag346
  %750 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %751 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %752 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %753 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2297 = ptrtoint {}* %218 to i64
  %entry-point-addr-uint2298 = add i64 %ptrtoint2297, 7
  %entry-point-addr2299 = inttoptr i64 %entry-point-addr-uint2298 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2300 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2299, align 8
  %754 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2300({}* %218, i64 5, {}* %750, {}* %751, {}* %x1494.0, {}* %752, {}* %753)
          to label %normal-dest2303 unwind label %cleanup-lpad

normal-dest2303:                                  ; preds = %normal-dest2296
  %.elt5050 = extractvalue { {}*, i64 } %754, 0
  %.elt5052 = extractvalue { {}*, i64 } %754, 1
  %cond4483 = icmp eq i64 %.elt5052, 0
  %755 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1031.1 = select i1 %cond4483, {}* %755, {}* %.elt5050
  br label %tag781

normal-dest2336:                                  ; preds = %tag357
  %756 = invoke float @from_object_float({}* %y1219.1)
          to label %normal-dest2337 unwind label %cleanup-lpad

normal-dest2337:                                  ; preds = %normal-dest2336
  %757 = fdiv float %222, %756
  %758 = invoke {}* @to_object_float(float %757)
          to label %tag92 unwind label %cleanup-lpad

normal-dest2348:                                  ; preds = %tag360
  %759 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %760 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %761 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %762 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2349 = ptrtoint {}* %224 to i64
  %entry-point-addr-uint2350 = add i64 %ptrtoint2349, 7
  %entry-point-addr2351 = inttoptr i64 %entry-point-addr-uint2350 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2352 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2351, align 8
  %763 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2352({}* %224, i64 5, {}* %759, {}* %760, {}* %x1965.0, {}* %761, {}* %762)
          to label %normal-dest2355 unwind label %cleanup-lpad

normal-dest2355:                                  ; preds = %normal-dest2348
  %.elt4923 = extractvalue { {}*, i64 } %763, 0
  %.elt4925 = extractvalue { {}*, i64 } %763, 1
  %cond4462 = icmp eq i64 %.elt4925, 0
  %764 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4919 = select i1 %cond4462, {}* %764, {}* %.elt4923
  br label %tag337

normal-dest2370:                                  ; preds = %tag367
  %765 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %766 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %767 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %768 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2371 = ptrtoint {}* %234 to i64
  %entry-point-addr-uint2372 = add i64 %ptrtoint2371, 7
  %entry-point-addr2373 = inttoptr i64 %entry-point-addr-uint2372 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2374 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2373, align 8
  %769 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2374({}* %234, i64 5, {}* %765, {}* %766, {}* %farg1, {}* %767, {}* %768)
          to label %normal-dest2377 unwind label %cleanup-lpad

normal-dest2377:                                  ; preds = %normal-dest2370
  %.elt4931 = extractvalue { {}*, i64 } %769, 0
  %.elt4933 = extractvalue { {}*, i64 } %769, 1
  %cond4464 = icmp eq i64 %.elt4933, 0
  %770 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1140.1 = select i1 %cond4464, {}* %770, {}* %.elt4931
  br label %tag933

normal-dest2395:                                  ; preds = %tag373
  %771 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %772 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %773 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %774 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2396 = ptrtoint {}* %237 to i64
  %entry-point-addr-uint2397 = add i64 %ptrtoint2396, 7
  %entry-point-addr2398 = inttoptr i64 %entry-point-addr-uint2397 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2399 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2398, align 8
  %775 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2399({}* %237, i64 5, {}* %771, {}* %772, {}* %x2419.0, {}* %773, {}* %774)
          to label %normal-dest2402 unwind label %cleanup-lpad

normal-dest2402:                                  ; preds = %normal-dest2395
  %.elt4894 = extractvalue { {}*, i64 } %775, 0
  %.elt4896 = extractvalue { {}*, i64 } %775, 1
  %cond4456 = icmp eq i64 %.elt4896, 0
  %776 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2403.1 = select i1 %cond4456, {}* %776, {}* %.elt4894
  br label %tag536

normal-dest2415:                                  ; preds = %normal-dest1863
  call void @unreachableError()
  unreachable

normal-dest2422:                                  ; preds = %tag381
  %777 = invoke double @from_object_double({}* nonnull %y1219.1)
          to label %normal-dest2423 unwind label %cleanup-lpad

normal-dest2423:                                  ; preds = %normal-dest2422
  %778 = fdiv double %240, %777
  %779 = invoke {}* @to_object_double(double %778)
          to label %tag92 unwind label %cleanup-lpad

normal-dest2494:                                  ; preds = %tag403
  %780 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %781 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %782 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %783 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2495 = ptrtoint {}* %248 to i64
  %entry-point-addr-uint2496 = add i64 %ptrtoint2495, 7
  %entry-point-addr2497 = inttoptr i64 %entry-point-addr-uint2496 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2498 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2497, align 8
  %784 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2498({}* %248, i64 5, {}* %780, {}* %781, {}* %x2047.0, {}* %782, {}* %783)
          to label %normal-dest2501 unwind label %cleanup-lpad

normal-dest2501:                                  ; preds = %normal-dest2494
  %.elt5079 = extractvalue { {}*, i64 } %784, 0
  %.elt5081 = extractvalue { {}*, i64 } %784, 1
  %cond4489 = icmp eq i64 %.elt5081, 0
  %785 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1070.1 = select i1 %cond4489, {}* %785, {}* %.elt5079
  br label %tag41

header-check-br2507:                              ; preds = %normal-dest2774
  %irc-bit-cast2511 = bitcast {}* %y1033.1 to i8*
  %gep2512 = getelementptr inbounds i8, i8* %irc-bit-cast2511, i64 -9
  %irc-bit-cast2513 = bitcast i8* %gep2512 to i64*
  %786 = load i64, i64* %irc-bit-cast2513, align 8
  switch i64 %786, label %header-check-br1221 [
    i64 1325, label %tag719
    i64 1341, label %tag719
  ]

normal-dest2520:                                  ; preds = %normal-dest3931
  %.elt4556 = extractvalue { {}*, i64 } %969, 0
  %.elt4558 = extractvalue { {}*, i64 } %969, 1
  %cond4399 = icmp eq i64 %.elt4558, 0
  %787 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163805.0 = select i1 %cond4399, {}* %787, {}* %.elt4556
  br i1 %consp-test3252, label %tag721, label %tag445

normal-dest2535:                                  ; preds = %tag410
  %788 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %789 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %790 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %791 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2536 = ptrtoint {}* %253 to i64
  %entry-point-addr-uint2537 = add i64 %ptrtoint2536, 7
  %entry-point-addr2538 = inttoptr i64 %entry-point-addr-uint2537 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2539 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2538, align 8
  %792 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2539({}* %253, i64 5, {}* %788, {}* %789, {}* %farg1, {}* %790, {}* %791)
          to label %normal-dest2542 unwind label %cleanup-lpad

normal-dest2542:                                  ; preds = %normal-dest2535
  %.elt4631 = extractvalue { {}*, i64 } %792, 0
  %.elt4633 = extractvalue { {}*, i64 } %792, 1
  %cond4412 = icmp eq i64 %.elt4633, 0
  %793 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1119.1 = select i1 %cond4412, {}* %793, {}* %.elt4631
  br label %tag687

normal-dest2549:                                  ; preds = %maybe-more-tests1738
  %ptrtoint2550 = ptrtoint {}* %671 to i64
  %entry-point-addr-uint2551 = add i64 %ptrtoint2550, 7
  %entry-point-addr2552 = inttoptr i64 %entry-point-addr-uint2551 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2553 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2552, align 8
  %794 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2553({}* %671, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest2556 unwind label %cleanup-lpad

normal-dest2556:                                  ; preds = %normal-dest2549
  %.elt4647 = extractvalue { {}*, i64 } %794, 0
  %.elt4649 = extractvalue { {}*, i64 } %794, 1
  %cond4416 = icmp eq i64 %.elt4649, 0
  %795 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163798.2 = select i1 %cond4416, {}* %795, {}* %.elt4647
  br label %tag578

normal-dest2570:                                  ; preds = %tag415
  %796 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %797 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %798 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %799 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2571 = ptrtoint {}* %257 to i64
  %entry-point-addr-uint2572 = add i64 %ptrtoint2571, 7
  %entry-point-addr2573 = inttoptr i64 %entry-point-addr-uint2572 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2574 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2573, align 8
  %800 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2574({}* %257, i64 5, {}* %796, {}* %797, {}* %farg1, {}* %798, {}* %799)
          to label %normal-dest2577 unwind label %cleanup-lpad

normal-dest2577:                                  ; preds = %normal-dest2570
  %.elt4596 = extractvalue { {}*, i64 } %800, 0
  %.elt4598 = extractvalue { {}*, i64 } %800, 1
  %cond4406 = icmp eq i64 %.elt4598, 0
  %801 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2164.1 = select i1 %cond4406, {}* %801, {}* %.elt4596
  br label %tag318

normal-dest2650:                                  ; preds = %tag438
  %802 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %803 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %804 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %805 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2651 = ptrtoint {}* %263 to i64
  %entry-point-addr-uint2652 = add i64 %ptrtoint2651, 7
  %entry-point-addr2653 = inttoptr i64 %entry-point-addr-uint2652 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2654 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2653, align 8
  %806 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2654({}* %263, i64 5, {}* %802, {}* %803, {}* %x1140.0, {}* %804, {}* %805)
          to label %normal-dest2657 unwind label %cleanup-lpad

normal-dest2657:                                  ; preds = %normal-dest2650
  %.elt4927 = extractvalue { {}*, i64 } %806, 0
  %.elt4929 = extractvalue { {}*, i64 } %806, 1
  %cond4463 = icmp eq i64 %.elt4929, 0
  %807 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1965.1 = select i1 %cond4463, {}* %807, {}* %.elt4927
  br label %tag277

normal-dest2698:                                  ; preds = %tag446
  %ptrtoint2699 = ptrtoint {}* %272 to i64
  %entry-point-addr-uint2700 = add i64 %ptrtoint2699, 7
  %entry-point-addr2701 = inttoptr i64 %entry-point-addr-uint2700 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2702 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2701, align 8
  %808 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2702({}* %272, i64 1, {}* %553, {}* null, {}* null, {}* null)
          to label %normal-dest2705 unwind label %cleanup-lpad

normal-dest2705:                                  ; preds = %normal-dest2698
  %.elt4815 = extractvalue { {}*, i64 } %808, 0
  %.elt4817 = extractvalue { {}*, i64 } %808, 1
  %cond4445 = icmp eq i64 %.elt4817, 0
  %809 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %OUT162046.0 = select i1 %cond4445, {}* %809, {}* %.elt4815
  %ptrtoint2712 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only2713 = and i64 %ptrtoint2712, 7
  %test2714 = icmp eq i64 %tag-only2713, 1
  br i1 %test2714, label %header-check-br2711, label %tag674

header-check-br2711:                              ; preds = %normal-dest2705
  %irc-bit-cast2715 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep2716 = getelementptr inbounds i8, i8* %irc-bit-cast2715, i64 -9
  %irc-bit-cast2717 = bitcast i8* %gep2716 to i64*
  %810 = load i64, i64* %irc-bit-cast2717, align 8
  %.off5406 = add i64 %810, -913
  %811 = icmp ult i64 %.off5406, 85
  br i1 %811, label %tag212, label %header-check-br1698

normal-dest2728:                                  ; preds = %tag449
  %812 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %813 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %814 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %815 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2729 = ptrtoint {}* %274 to i64
  %entry-point-addr-uint2730 = add i64 %ptrtoint2729, 7
  %entry-point-addr2731 = inttoptr i64 %entry-point-addr-uint2730 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2732 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2731, align 8
  %816 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2732({}* %274, i64 5, {}* %812, {}* %813, {}* %x2014.0, {}* %814, {}* %815)
          to label %normal-dest2735 unwind label %cleanup-lpad

normal-dest2735:                                  ; preds = %normal-dest2728
  %.elt4603 = extractvalue { {}*, i64 } %816, 0
  %.elt4605 = extractvalue { {}*, i64 } %816, 1
  %cond4407 = icmp eq i64 %.elt4605, 0
  %817 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4599 = select i1 %cond4407, {}* %817, {}* %.elt4603
  br label %tag623

normal-dest2744:                                  ; preds = %tag452
  %818 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %819 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %820 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %821 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint4266 = ptrtoint {}* %277 to i64
  %entry-point-addr-uint4267 = add i64 %ptrtoint4266, 7
  %entry-point-addr4268 = inttoptr i64 %entry-point-addr-uint4267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4268, align 8
  %822 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4269({}* %277, i64 5, {}* %818, {}* %819, {}* %447, {}* %820, {}* %821)
          to label %normal-dest4272 unwind label %cleanup-lpad

normal-dest2746:                                  ; preds = %normal-dest2130
  br i1 %consp-test3666, label %tag935, label %tag395

normal-dest2767:                                  ; preds = %tag128
  %ptrtoint2768 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint2769 = add i64 %ptrtoint2768, 7
  %entry-point-addr2770 = inttoptr i64 %entry-point-addr-uint2769 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2771 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2770, align 8
  %823 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2771({}* %97, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest2774 unwind label %cleanup-lpad

normal-dest2774:                                  ; preds = %normal-dest2767
  %.elt5004 = extractvalue { {}*, i64 } %823, 0
  %.elt5006 = extractvalue { {}*, i64 } %823, 1
  %cond4476 = icmp eq i64 %.elt5006, 0
  %824 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y1033.1 = select i1 %cond4476, {}* %824, {}* %.elt5004
  %ptrtoint2508 = ptrtoint {}* %y1033.1 to i64
  %tag-only2509 = and i64 %ptrtoint2508, 7
  %test2510 = icmp eq i64 %tag-only2509, 1
  br i1 %test2510, label %header-check-br2507, label %tag30

normal-dest2808:                                  ; preds = %tag623
  %ptrtoint2809 = ptrtoint {}* %383 to i64
  %entry-point-addr-uint2810 = add i64 %ptrtoint2809, 7
  %entry-point-addr2811 = inttoptr i64 %entry-point-addr-uint2810 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2812 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2811, align 8
  %825 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2812({}* %383, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest2815 unwind label %cleanup-lpad

normal-dest2815:                                  ; preds = %normal-dest2808
  %.elt4530 = extractvalue { {}*, i64 } %825, 0
  %.elt4532 = extractvalue { {}*, i64 } %825, 1
  %cond4395 = icmp eq i64 %.elt4532, 0
  %826 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y1219.1 = select i1 %cond4395, {}* %826, {}* %.elt4530
  %ptrtoint1445 = ptrtoint {}* %y1219.1 to i64
  %tag-only1446 = and i64 %ptrtoint1445, 7
  %test1447 = icmp eq i64 %tag-only1446, 1
  br i1 %test1447, label %header-check-br1444, label %tag289

normal-dest2829:                                  ; preds = %maybe-more-tests
  %ptrtoint2830 = ptrtoint {}* %585 to i64
  %entry-point-addr-uint2831 = add i64 %ptrtoint2830, 7
  %entry-point-addr2832 = inttoptr i64 %entry-point-addr-uint2831 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2833 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2832, align 8
  %827 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2833({}* %585, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest2836 unwind label %cleanup-lpad

normal-dest2836:                                  ; preds = %normal-dest2829
  %.elt5119 = extractvalue { {}*, i64 } %827, 0
  %.elt5121 = extractvalue { {}*, i64 } %827, 1
  %cond4497 = icmp eq i64 %.elt5121, 0
  %828 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162532.2 = select i1 %cond4497, {}* %828, {}* %.elt5119
  br label %tag694

normal-dest2843:                                  ; preds = %tag478
  %829 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %830 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %831 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %832 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2845 = ptrtoint {}* %294 to i64
  %entry-point-addr-uint2846 = add i64 %ptrtoint2845, 7
  %entry-point-addr2847 = inttoptr i64 %entry-point-addr-uint2846 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2848 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2847, align 8
  %833 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2848({}* %294, i64 5, {}* %829, {}* %830, {}* %x1119.0, {}* %831, {}* %832)
          to label %normal-dest2851 unwind label %cleanup-lpad

normal-dest2851:                                  ; preds = %normal-dest2843
  %.elt4627 = extractvalue { {}*, i64 } %833, 0
  %.elt4629 = extractvalue { {}*, i64 } %833, 1
  %cond4411 = icmp eq i64 %.elt4629, 0
  %834 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2346.1 = select i1 %cond4411, {}* %834, {}* %.elt4627
  br label %tag632

normal-dest2895:                                  ; preds = %tag490
  %835 = invoke float @from_object_float({}* %447)
          to label %normal-dest2896 unwind label %cleanup-lpad

normal-dest2896:                                  ; preds = %normal-dest2895
  %836 = fdiv float %295, %835
  %837 = invoke {}* @to_object_float(float %836)
          to label %tag176 unwind label %cleanup-lpad

normal-dest2912:                                  ; preds = %tag493
  %838 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %839 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %840 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %841 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2913 = ptrtoint {}* %299 to i64
  %entry-point-addr-uint2914 = add i64 %ptrtoint2913, 7
  %entry-point-addr2915 = inttoptr i64 %entry-point-addr-uint2914 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2916 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2915, align 8
  %842 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2916({}* %299, i64 5, {}* %838, {}* %839, {}* %x3277.0, {}* %840, {}* %841)
          to label %normal-dest2919 unwind label %cleanup-lpad

normal-dest2919:                                  ; preds = %normal-dest2912
  %.elt4588 = extractvalue { {}*, i64 } %842, 0
  %.elt4590 = extractvalue { {}*, i64 } %842, 1
  %cond4404 = icmp eq i64 %.elt4590, 0
  %843 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1896.1 = select i1 %cond4404, {}* %843, {}* %.elt4588
  br label %tag782

normal-dest2933:                                  ; preds = %tag496
  %844 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %845 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %846 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %847 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2934 = ptrtoint {}* %301 to i64
  %entry-point-addr-uint2935 = add i64 %ptrtoint2934, 7
  %entry-point-addr2936 = inttoptr i64 %entry-point-addr-uint2935 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2937 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2936, align 8
  %848 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2937({}* %301, i64 5, {}* %844, {}* %845, {}* %x1556.0, {}* %846, {}* %847)
          to label %normal-dest2940 unwind label %cleanup-lpad

normal-dest2940:                                  ; preds = %normal-dest2933
  %.elt4947 = extractvalue { {}*, i64 } %848, 0
  %.elt4949 = extractvalue { {}*, i64 } %848, 1
  %cond4466 = icmp eq i64 %.elt4949, 0
  %849 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2941.1 = select i1 %cond4466, {}* %849, {}* %.elt4947
  br label %tag740

header-check-br2981:                              ; preds = %header-check-br3904
  %gep2986 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %115, i64 -9, i32 0
  %irc-bit-cast2987 = bitcast i8* %gep2986 to i64*
  %850 = load i64, i64* %irc-bit-cast2987, align 8
  %851 = icmp eq i64 %850, 1325
  br i1 %851, label %tag116, label %tag70

normal-dest2989:                                  ; preds = %tag513
  %852 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %853 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %854 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %855 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint2990 = ptrtoint {}* %309 to i64
  %entry-point-addr-uint2991 = add i64 %ptrtoint2990, 7
  %entry-point-addr2992 = inttoptr i64 %entry-point-addr-uint2991 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2993 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2992, align 8
  %856 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2993({}* %309, i64 5, {}* %852, {}* %853, {}* %farg1, {}* %854, {}* %855)
          to label %normal-dest2996 unwind label %cleanup-lpad

normal-dest2996:                                  ; preds = %normal-dest2989
  %.elt5111 = extractvalue { {}*, i64 } %856, 0
  %.elt5113 = extractvalue { {}*, i64 } %856, 1
  %cond4495 = icmp eq i64 %.elt5113, 0
  %857 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2780.1 = select i1 %cond4495, {}* %857, {}* %.elt5111
  br label %tag778

header-check-br3002:                              ; preds = %header-check-br3193
  %irc-bit-cast3006 = bitcast {}* %y1250.1 to i8*
  %gep3007 = getelementptr inbounds i8, i8* %irc-bit-cast3006, i64 -9
  %irc-bit-cast3008 = bitcast i8* %gep3007 to i64*
  %858 = load i64, i64* %irc-bit-cast3008, align 8
  %859 = icmp eq i64 %858, 1325
  br i1 %859, label %tag598, label %tag211

normal-dest3019:                                  ; preds = %tag521
  %860 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %861 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %862 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %863 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3020 = ptrtoint {}* %317 to i64
  %entry-point-addr-uint3021 = add i64 %ptrtoint3020, 7
  %entry-point-addr3022 = inttoptr i64 %entry-point-addr-uint3021 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3023 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3022, align 8
  %864 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3023({}* %317, i64 5, {}* %860, {}* %861, {}* %x1933.0, {}* %862, {}* %863)
          to label %normal-dest3026 unwind label %cleanup-lpad

normal-dest3026:                                  ; preds = %normal-dest3019
  %.elt4635 = extractvalue { {}*, i64 } %864, 0
  %.elt4637 = extractvalue { {}*, i64 } %864, 1
  %cond4413 = icmp eq i64 %.elt4637, 0
  %865 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163802.1 = select i1 %cond4413, {}* %865, {}* %.elt4635
  br label %tag571

normal-dest3040:                                  ; preds = %tag523
  br i1 %consp-test1861, label %tag519, label %tag780

normal-dest3064:                                  ; preds = %tag529
  %866 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %867 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %868 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %869 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3065 = ptrtoint {}* %321 to i64
  %entry-point-addr-uint3066 = add i64 %ptrtoint3065, 7
  %entry-point-addr3067 = inttoptr i64 %entry-point-addr-uint3066 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3068 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3067, align 8
  %870 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3068({}* %321, i64 5, {}* %866, {}* %867, {}* %x1215.0, {}* %868, {}* %869)
          to label %normal-dest3071 unwind label %cleanup-lpad

normal-dest3071:                                  ; preds = %normal-dest3064
  %.elt4575 = extractvalue { {}*, i64 } %870, 0
  %.elt4577 = extractvalue { {}*, i64 } %870, 1
  %cond4401 = icmp eq i64 %.elt4577, 0
  %871 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1892.1 = select i1 %cond4401, {}* %871, {}* %.elt4575
  br label %tag603

normal-dest3083:                                  ; preds = %tag541
  %ptrtoint3084 = ptrtoint {}* %331 to i64
  %entry-point-addr-uint3085 = add i64 %ptrtoint3084, 7
  %entry-point-addr3086 = inttoptr i64 %entry-point-addr-uint3085 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3087 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3086, align 8
  %872 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3087({}* %331, i64 2, {}* %.in5072, {}* %y1033.1, {}* null, {}* null)
          to label %normal-dest3090 unwind label %cleanup-lpad

normal-dest3090:                                  ; preds = %normal-dest3083
  %.elt5014 = extractvalue { {}*, i64 } %872, 0
  %.elt5016 = extractvalue { {}*, i64 } %872, 1
  %cond4477 = icmp eq i64 %.elt5016, 0
  %873 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162686.1 = select i1 %cond4477, {}* %873, {}* %.elt5014
  br label %tag759

header-check-br3140:                              ; preds = %header-check-br3263
  %.old5307 = and i64 %ptrtoint3264, 3
  %fixnump-test4328.old = icmp eq i64 %.old5307, 0
  br i1 %fixnump-test4328.old, label %tag300, label %switch.early.test5486

switch.early.test5486:                            ; preds = %header-check-br3140
  switch i64 %892, label %tag286 [
    i64 1349, label %tag300
    i64 1309, label %tag300
  ]

normal-dest3175:                                  ; preds = %tag556
  %874 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %875 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 182), align 16
  %876 = invoke {}* @cc_safe_fdefinition({}* %875)
          to label %normal-dest2122 unwind label %cleanup-lpad

header-check-br3193:                              ; preds = %tag479
  %gep3198 = getelementptr inbounds i8, i8* %214, i64 -9
  %irc-bit-cast3199 = bitcast i8* %gep3198 to i64*
  %877 = load i64, i64* %irc-bit-cast3199, align 8
  %878 = icmp ne i64 %877, 1325
  %test3266.not = xor i1 %test3266, true
  %brmerge5298 = or i1 %878, %test3266.not
  br i1 %brmerge5298, label %tag211, label %header-check-br3002

normal-dest3201:                                  ; preds = %tag567
  %879 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %880 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %881 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %882 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 226), align 16
  %ptrtoint3256 = ptrtoint {}* %340 to i64
  %entry-point-addr-uint3257 = add i64 %ptrtoint3256, 7
  %entry-point-addr3258 = inttoptr i64 %entry-point-addr-uint3257 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3259 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3258, align 8
  %883 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3259({}* %340, i64 5, {}* %879, {}* %880, {}* %y1219.1, {}* %881, {}* %882)
          to label %normal-dest3262 unwind label %cleanup-lpad

normal-dest3214:                                  ; preds = %normal-dest1395
  call void @unreachableError()
  unreachable

normal-dest3216:                                  ; preds = %tag571
  br i1 %consp-test3252, label %tag55, label %tag568

normal-dest3223:                                  ; preds = %tag572
  %884 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %885 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %886 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %887 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3224 = ptrtoint {}* %347 to i64
  %entry-point-addr-uint3225 = add i64 %ptrtoint3224, 7
  %entry-point-addr3226 = inttoptr i64 %entry-point-addr-uint3225 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3227 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3226, align 8
  %888 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3227({}* %347, i64 5, {}* %884, {}* %885, {}* %farg1, {}* %886, {}* %887)
          to label %normal-dest3230 unwind label %cleanup-lpad

normal-dest3230:                                  ; preds = %normal-dest3223
  %.elt5103 = extractvalue { {}*, i64 } %888, 0
  %.elt5105 = extractvalue { {}*, i64 } %888, 1
  %cond4493 = icmp eq i64 %.elt5105, 0
  %889 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1876.1 = select i1 %cond4493, {}* %889, {}* %.elt5103
  br label %tag223

normal-dest3245:                                  ; preds = %tag578
  %890 = ptrtoint {}* %farg1 to i64
  %tag-only32514500 = and i64 %890, 7
  %consp-test3252 = icmp eq i64 %tag-only32514500, 3
  %.val = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %.val5315 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164197.0 = select i1 %consp-test3252, {}* %.val, {}* %.val5315
  %891 = icmp eq {}* %G164197.0, %.val5315
  br i1 %891, label %tag615, label %tag419

normal-dest3262:                                  ; preds = %normal-dest3201
  call void @unreachableError()
  unreachable

header-check-br3263:                              ; preds = %normal-dest3974
  %irc-bit-cast3267 = bitcast {}* %y1250.1 to i8*
  %gep3268 = getelementptr inbounds i8, i8* %irc-bit-cast3267, i64 -9
  %irc-bit-cast3269 = bitcast i8* %gep3268 to i64*
  %892 = load i64, i64* %irc-bit-cast3269, align 8
  switch i64 %892, label %header-check-br3140 [
    i64 1325, label %tag300
    i64 1341, label %tag300
  ]

normal-dest3286:                                  ; preds = %tag593
  %ptrtoint3287 = ptrtoint {}* %367 to i64
  %entry-point-addr-uint3288 = add i64 %ptrtoint3287, 7
  %entry-point-addr3289 = inttoptr i64 %entry-point-addr-uint3288 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3290 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3289, align 8
  %893 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3290({}* %367, i64 2, {}* %.in4936, {}* %447, {}* null, {}* null)
          to label %normal-dest3293 unwind label %cleanup-lpad

normal-dest3293:                                  ; preds = %normal-dest3286
  %.elt4836 = extractvalue { {}*, i64 } %893, 0
  %.elt4838 = extractvalue { {}*, i64 } %893, 1
  %cond4447 = icmp eq i64 %.elt4838, 0
  %894 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163220.1 = select i1 %cond4447, {}* %894, {}* %.elt4836
  br label %tag176

normal-dest3313:                                  ; preds = %tag598
  %895 = invoke double @from_object_double({}* nonnull %y1250.1)
          to label %normal-dest3314 unwind label %cleanup-lpad

normal-dest3314:                                  ; preds = %normal-dest3313
  %896 = fdiv double %370, %895
  %897 = invoke {}* @to_object_double(double %896)
          to label %tag774 unwind label %cleanup-lpad

normal-dest3359:                                  ; preds = %tag611
  %898 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %899 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %900 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %901 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3360 = ptrtoint {}* %378 to i64
  %entry-point-addr-uint3361 = add i64 %ptrtoint3360, 7
  %entry-point-addr3362 = inttoptr i64 %entry-point-addr-uint3361 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3363 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3362, align 8
  %902 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3363({}* %378, i64 5, {}* %898, {}* %899, {}* %x1070.0, {}* %900, {}* %901)
          to label %normal-dest3366 unwind label %cleanup-lpad

normal-dest3366:                                  ; preds = %normal-dest3359
  %.elt5075 = extractvalue { {}*, i64 } %902, 0
  %.elt5077 = extractvalue { {}*, i64 } %902, 1
  %cond4488 = icmp eq i64 %.elt5077, 0
  %903 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in5071 = select i1 %cond4488, {}* %903, {}* %.elt5075
  br label %tag128

header-check-br3426:                              ; preds = %tag875
  %gep3431 = getelementptr inbounds i8, i8* %381, i64 -9
  %irc-bit-cast3432 = bitcast i8* %gep3431 to i64*
  %904 = load i64, i64* %irc-bit-cast3432, align 8
  %905 = icmp ne i64 %904, 1325
  %test1447.not = xor i1 %test1447, true
  %brmerge5300 = or i1 %905, %test1447.not
  br i1 %brmerge5300, label %tag320, label %header-check-br3523

normal-dest3441:                                  ; preds = %tag630
  %ptrtoint3442 = ptrtoint {}* %387 to i64
  %entry-point-addr-uint3443 = add i64 %ptrtoint3442, 7
  %entry-point-addr3444 = inttoptr i64 %entry-point-addr-uint3443 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3445 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3444, align 8
  %906 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3445({}* %387, i64 2, {}* %.in4616, {}* %136, {}* null, {}* null)
          to label %normal-dest3448 unwind label %cleanup-lpad

normal-dest3448:                                  ; preds = %normal-dest3441
  %.elt4514 = extractvalue { {}*, i64 } %906, 0
  %.elt4516 = extractvalue { {}*, i64 } %906, 1
  %cond4392 = icmp eq i64 %.elt4516, 0
  %907 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164070.1 = select i1 %cond4392, {}* %907, {}* %.elt4514
  br label %tag72

normal-dest3496:                                  ; preds = %tag652
  %908 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %909 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %910 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %911 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3497 = ptrtoint {}* %393 to i64
  %entry-point-addr-uint3498 = add i64 %ptrtoint3497, 7
  %entry-point-addr3499 = inttoptr i64 %entry-point-addr-uint3498 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3500 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3499, align 8
  %912 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3500({}* %393, i64 5, {}* %908, {}* %909, {}* %farg1, {}* %910, {}* %911)
          to label %normal-dest3503 unwind label %cleanup-lpad

normal-dest3503:                                  ; preds = %normal-dest3496
  %.elt4959 = extractvalue { {}*, i64 } %912, 0
  %.elt4961 = extractvalue { {}*, i64 } %912, 1
  %cond4469 = icmp eq i64 %.elt4961, 0
  %913 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1526.1 = select i1 %cond4469, {}* %913, {}* %.elt4959
  br label %tag237

header-check-br3523:                              ; preds = %header-check-br3426
  %irc-bit-cast3527 = bitcast {}* %y1219.1 to i8*
  %gep3528 = getelementptr inbounds i8, i8* %irc-bit-cast3527, i64 -9
  %irc-bit-cast3529 = bitcast i8* %gep3528 to i64*
  %914 = load i64, i64* %irc-bit-cast3529, align 8
  %915 = icmp eq i64 %914, 1325
  br i1 %915, label %tag381, label %tag320

normal-dest3531:                                  ; preds = %tag656
  %916 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %917 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %918 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %919 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3532 = ptrtoint {}* %395 to i64
  %entry-point-addr-uint3533 = add i64 %ptrtoint3532, 7
  %entry-point-addr3534 = inttoptr i64 %entry-point-addr-uint3533 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3535 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3534, align 8
  %920 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3535({}* %395, i64 5, {}* %916, {}* %917, {}* %x1876.0, {}* %918, {}* %919)
          to label %normal-dest3538 unwind label %cleanup-lpad

normal-dest3538:                                  ; preds = %normal-dest3531
  %.elt5099 = extractvalue { {}*, i64 } %920, 0
  %.elt5101 = extractvalue { {}*, i64 } %920, 1
  %cond4492 = icmp eq i64 %.elt5101, 0
  %921 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1112.1 = select i1 %cond4492, {}* %921, {}* %.elt5099
  br label %tag52

header-check-br3572:                              ; preds = %tag668
  %irc-bit-cast3576 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep3577 = getelementptr inbounds i8, i8* %irc-bit-cast3576, i64 -9
  %irc-bit-cast3578 = bitcast i8* %gep3577 to i64*
  %922 = load i64, i64* %irc-bit-cast3578, align 8
  %.off5454 = add i64 %922, -913
  %923 = icmp ult i64 %.off5454, 85
  br i1 %923, label %tag694, label %header-check-br1189

normal-dest3592:                                  ; preds = %tag674
  %924 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %925 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %926 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %927 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 393), align 8
  %ptrtoint3593 = ptrtoint {}* %415 to i64
  %entry-point-addr-uint3594 = add i64 %ptrtoint3593, 7
  %entry-point-addr3595 = inttoptr i64 %entry-point-addr-uint3594 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3596 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3595, align 8
  %928 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3596({}* %415, i64 5, {}* %924, {}* %925, {}* %"closure->LAMBDA", {}* %926, {}* %927)
          to label %normal-dest3599 unwind label %cleanup-lpad

normal-dest3599:                                  ; preds = %normal-dest3592
  %.elt4819 = extractvalue { {}*, i64 } %928, 0
  %.elt4821 = extractvalue { {}*, i64 } %928, 1
  %cond4446 = icmp eq i64 %.elt4821, 0
  %929 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162948.2 = select i1 %cond4446, {}* %929, {}* %.elt4819
  br label %tag212

normal-dest3606:                                  ; preds = %tag676
  %930 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %931 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %932 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %933 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3607 = ptrtoint {}* %417 to i64
  %entry-point-addr-uint3608 = add i64 %ptrtoint3607, 7
  %entry-point-addr3609 = inttoptr i64 %entry-point-addr-uint3608 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3610 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3609, align 8
  %934 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3610({}* %417, i64 5, {}* %930, {}* %931, {}* %x1526.0, {}* %932, {}* %933)
          to label %normal-dest3613 unwind label %cleanup-lpad

normal-dest3613:                                  ; preds = %normal-dest3606
  %.elt4955 = extractvalue { {}*, i64 } %934, 0
  %.elt4957 = extractvalue { {}*, i64 } %934, 1
  %cond4468 = icmp eq i64 %.elt4957, 0
  %935 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162952.1 = select i1 %cond4468, {}* %935, {}* %.elt4955
  br label %tag523

normal-dest3668:                                  ; preds = %tag697
  %936 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %937 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %938 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %939 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3669 = ptrtoint {}* %428 to i64
  %entry-point-addr-uint3670 = add i64 %ptrtoint3669, 7
  %entry-point-addr3671 = inttoptr i64 %entry-point-addr-uint3670 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3672 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3671, align 8
  %940 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3672({}* %428, i64 5, {}* %936, {}* %937, {}* %farg1, {}* %938, {}* %939)
          to label %normal-dest3675 unwind label %cleanup-lpad

normal-dest3675:                                  ; preds = %normal-dest3668
  %.elt4643 = extractvalue { {}*, i64 } %940, 0
  %.elt4645 = extractvalue { {}*, i64 } %940, 1
  %cond4415 = icmp eq i64 %.elt4645, 0
  %941 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163801.1 = select i1 %cond4415, {}* %941, {}* %.elt4643
  br label %tag903

normal-dest3691:                                  ; preds = %normal-dest1202
  %.elt4520 = extractvalue { {}*, i64 } %61, 1
  %cond4393 = icmp eq i64 %.elt4520, 0
  %.elt4518 = extractvalue { {}*, i64 } %61, 0
  %.in4614 = select i1 %cond4393, {}* %586, {}* %.elt4518
  %ptrtoint3692 = ptrtoint {}* %588 to i64
  %entry-point-addr-uint3693 = add i64 %ptrtoint3692, 7
  %entry-point-addr3694 = inttoptr i64 %entry-point-addr-uint3693 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3695 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3694, align 8
  %942 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3695({}* %588, i64 2, {}* %.in4614, {}* inttoptr (i64 400 to {}*), {}* null, {}* null)
          to label %normal-dest3698 unwind label %cleanup-lpad

normal-dest3698:                                  ; preds = %normal-dest3691
  %.elt4523 = extractvalue { {}*, i64 } %942, 0
  %.elt4525 = extractvalue { {}*, i64 } %942, 1
  %cond4394 = icmp eq i64 %.elt4525, 0
  %943 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163803.1 = select i1 %cond4394, {}* %943, {}* %.elt4523
  %944 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %945 = invoke {}* @cc_safe_fdefinition({}* %944)
          to label %normal-dest2144 unwind label %cleanup-lpad

header-check-br3733:                              ; preds = %tag815
  %gep3738 = getelementptr inbounds i8, i8* %441, i64 -9
  %irc-bit-cast3739 = bitcast i8* %gep3738 to i64*
  %946 = load i64, i64* %irc-bit-cast3739, align 8
  %947 = icmp ne i64 %946, 1325
  %test3760.not = xor i1 %test3760, true
  %brmerge5302 = or i1 %947, %test3760.not
  br i1 %brmerge5302, label %tag593, label %header-check-br3834

header-check-br3757:                              ; preds = %tag723
  %gep3762 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %446, i64 -9, i32 0
  %irc-bit-cast3763 = bitcast i8* %gep3762 to i64*
  %948 = load i64, i64* %irc-bit-cast3763, align 8
  switch i64 %948, label %header-check-br [
    i64 1325, label %tag262
    i64 1341, label %tag262
  ]

normal-dest3821:                                  ; preds = %tag759
  %.elt5018 = extractvalue { {}*, i64 } %468, 0
  %.elt5020 = extractvalue { {}*, i64 } %468, 1
  %cond4478 = icmp eq i64 %.elt5020, 0
  %949 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162538.0 = select i1 %cond4478, {}* %949, {}* %.elt5018
  %950 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %951 = invoke {}* @cc_safe_fdefinition({}* %950)
          to label %normal-dest3828 unwind label %cleanup-lpad

normal-dest3828:                                  ; preds = %normal-dest3821
  br i1 %consp-test3666, label %tag405, label %tag658

header-check-br3834:                              ; preds = %header-check-br3733
  %gep3839 = getelementptr inbounds %"class.core::T_O", %"class.core::T_O"* %446, i64 -9, i32 0
  %irc-bit-cast3840 = bitcast i8* %gep3839 to i64*
  %952 = load i64, i64* %irc-bit-cast3840, align 8
  %953 = icmp eq i64 %952, 1325
  br i1 %953, label %tag218, label %tag593

header-check-br3855:                              ; preds = %header-check-br1741
  %.old = and i64 %ptrtoint1742, 3
  %fixnump-test2061.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test2061.old, label %tag743, label %switch.early.test5487

switch.early.test5487:                            ; preds = %header-check-br3855
  switch i64 %672, label %tag213 [
    i64 1349, label %tag743
    i64 1309, label %tag743
  ]

header-check-br3862:                              ; preds = %tag555
  %gep3867 = getelementptr inbounds i8, i8* %130, i64 -9
  %irc-bit-cast3868 = bitcast i8* %gep3867 to i64*
  %954 = load i64, i64* %irc-bit-cast3868, align 8
  %955 = icmp ne i64 %954, 1325
  %test1744.not = xor i1 %test1744, true
  %brmerge5286 = or i1 %955, %test1744.not
  br i1 %brmerge5286, label %tag630, label %header-check-br2150

normal-dest3870:                                  ; preds = %tag773
  %956 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %957 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %958 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %959 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint3871 = ptrtoint {}* %470 to i64
  %entry-point-addr-uint3872 = add i64 %ptrtoint3871, 7
  %entry-point-addr3873 = inttoptr i64 %entry-point-addr-uint3872 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3874 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3873, align 8
  %960 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3874({}* %470, i64 5, {}* %956, {}* %957, {}* %x1892.0, {}* %958, {}* %959)
          to label %normal-dest3877 unwind label %cleanup-lpad

normal-dest3877:                                  ; preds = %normal-dest3870
  %.elt4571 = extractvalue { {}*, i64 } %960, 0
  %.elt4573 = extractvalue { {}*, i64 } %960, 1
  %cond4400 = icmp eq i64 %.elt4573, 0
  %961 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163806.1 = select i1 %cond4400, {}* %961, {}* %.elt4571
  br label %tag805

normal-dest3889:                                  ; preds = %tag774
  %.elt4866 = extractvalue { {}*, i64 } %471, 0
  %.elt4868 = extractvalue { {}*, i64 } %471, 1
  %cond4452 = icmp eq i64 %.elt4868, 0
  %962 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162954.0 = select i1 %cond4452, {}* %962, {}* %.elt4866
  %963 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 180), align 16
  %964 = invoke {}* @cc_safe_fdefinition({}* %963)
          to label %normal-dest3896 unwind label %cleanup-lpad

normal-dest3896:                                  ; preds = %normal-dest3889
  br i1 %consp-test1861, label %tag585, label %tag822

header-check-br3904:                              ; preds = %tag914
  %gep3909 = getelementptr inbounds i8, i8* %110, i64 -9
  %irc-bit-cast3910 = bitcast i8* %gep3909 to i64*
  %965 = load i64, i64* %irc-bit-cast3910, align 8
  %966 = icmp ne i64 %965, 1325
  %test1639.not = xor i1 %test1639, true
  %brmerge5296 = or i1 %966, %test1639.not
  br i1 %brmerge5296, label %tag70, label %header-check-br2981

normal-dest3924:                                  ; preds = %tag782
  %ptrtoint3925 = ptrtoint {}* %480 to i64
  %entry-point-addr-uint3926 = add i64 %ptrtoint3925, 7
  %entry-point-addr3927 = inttoptr i64 %entry-point-addr-uint3926 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3928 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3927, align 8
  %967 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3928({}* %480, i64 2, {}* %x1896.0, {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest3931 unwind label %cleanup-lpad

normal-dest3931:                                  ; preds = %normal-dest3924
  %.elt4552 = extractvalue { {}*, i64 } %967, 0
  %.elt4554 = extractvalue { {}*, i64 } %967, 1
  %cond4398 = icmp eq i64 %.elt4554, 0
  %968 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163876.1 = select i1 %cond4398, {}* %968, {}* %.elt4552
  %ptrtoint2514 = ptrtoint {}* %600 to i64
  %entry-point-addr-uint2515 = add i64 %ptrtoint2514, 7
  %entry-point-addr2516 = inttoptr i64 %entry-point-addr-uint2515 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2517 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2516, align 8
  %969 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2517({}* %600, i64 1, {}* %G163876.1, {}* null, {}* null, {}* null)
          to label %normal-dest2520 unwind label %cleanup-lpad

normal-dest3943:                                  ; preds = %normal-dest1272
  %.elt5030 = extractvalue { {}*, i64 } %591, 0
  %.elt5032 = extractvalue { {}*, i64 } %591, 1
  %cond4480 = icmp eq i64 %.elt5032, 0
  %970 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162539.0 = select i1 %cond4480, {}* %970, {}* %.elt5030
  br i1 %consp-test3666, label %tag302, label %tag463

normal-dest3967:                                  ; preds = %tag337
  %ptrtoint3968 = ptrtoint {}* %216 to i64
  %entry-point-addr-uint3969 = add i64 %ptrtoint3968, 7
  %entry-point-addr3970 = inttoptr i64 %entry-point-addr-uint3969 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point3971 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr3970, align 8
  %971 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point3971({}* %216, i64 2, {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4000000000 to {}*), {}* null, {}* null)
          to label %normal-dest3974 unwind label %cleanup-lpad

normal-dest3974:                                  ; preds = %normal-dest3967
  %.elt4852 = extractvalue { {}*, i64 } %971, 0
  %.elt4854 = extractvalue { {}*, i64 } %971, 1
  %cond4450 = icmp eq i64 %.elt4854, 0
  %972 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %y1250.1 = select i1 %cond4450, {}* %972, {}* %.elt4852
  %ptrtoint3264 = ptrtoint {}* %y1250.1 to i64
  %tag-only3265 = and i64 %ptrtoint3264, 7
  %test3266 = icmp eq i64 %tag-only3265, 1
  br i1 %test3266, label %header-check-br3263, label %tag907

header-check-br4008:                              ; preds = %tag808
  %irc-bit-cast4012 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep4013 = getelementptr inbounds i8, i8* %irc-bit-cast4012, i64 -9
  %irc-bit-cast4014 = bitcast i8* %gep4013 to i64*
  %973 = load i64, i64* %irc-bit-cast4014, align 8
  %.off = add i64 %973, -913
  %974 = icmp ult i64 %.off, 85
  br i1 %974, label %tag578, label %header-check-br1730

normal-dest4018:                                  ; preds = %tag811
  %ptrtoint4019 = ptrtoint {}* %491 to i64
  %entry-point-addr-uint4020 = add i64 %ptrtoint4019, 7
  %entry-point-addr4021 = inttoptr i64 %entry-point-addr-uint4020 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4022 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4021, align 8
  %975 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4022({}* %491, i64 1, {}* %553, {}* null, {}* null, {}* null)
          to label %normal-dest4025 unwind label %cleanup-lpad

normal-dest4025:                                  ; preds = %normal-dest4018
  %.elt4811 = extractvalue { {}*, i64 } %975, 0
  %.elt4813 = extractvalue { {}*, i64 } %975, 1
  %cond4444 = icmp eq i64 %.elt4813, 0
  %976 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G163366.0 = select i1 %cond4444, {}* %976, {}* %.elt4811
  %977 = icmp eq {}* %G163366.0, %976
  br i1 %977, label %tag668, label %tag446

normal-dest4046:                                  ; preds = %tag816
  %978 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %979 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %980 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %981 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4047 = ptrtoint {}* %493 to i64
  %entry-point-addr-uint4048 = add i64 %ptrtoint4047, 7
  %entry-point-addr4049 = inttoptr i64 %entry-point-addr-uint4048 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4050 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4049, align 8
  %982 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4050({}* %493, i64 5, {}* %978, {}* %979, {}* %farg1, {}* %980, {}* %981)
          to label %normal-dest4053 unwind label %cleanup-lpad

normal-dest4053:                                  ; preds = %normal-dest4046
  %.elt4611 = extractvalue { {}*, i64 } %982, 0
  %.elt4613 = extractvalue { {}*, i64 } %982, 1
  %cond4409 = icmp eq i64 %.elt4613, 0
  %983 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2531.1 = select i1 %cond4409, {}* %983, {}* %.elt4611
  br label %tag679

normal-dest4114:                                  ; preds = %tag844
  %984 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %985 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %986 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %987 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4115 = ptrtoint {}* %503 to i64
  %entry-point-addr-uint4116 = add i64 %ptrtoint4115, 7
  %entry-point-addr4117 = inttoptr i64 %entry-point-addr-uint4116 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4118 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4117, align 8
  %988 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4118({}* %503, i64 5, {}* %984, {}* %985, {}* %x1112.0, {}* %986, {}* %987)
          to label %normal-dest4121 unwind label %cleanup-lpad

normal-dest4121:                                  ; preds = %normal-dest4114
  %.elt5095 = extractvalue { {}*, i64 } %988, 0
  %.elt5097 = extractvalue { {}*, i64 } %988, 1
  %cond4491 = icmp eq i64 %.elt5097, 0
  %989 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in5087 = select i1 %cond4491, {}* %989, {}* %.elt5095
  br label %tag165

normal-dest4128:                                  ; preds = %tag846
  %990 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %991 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %992 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %993 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4129 = ptrtoint {}* %505 to i64
  %entry-point-addr-uint4130 = add i64 %ptrtoint4129, 7
  %entry-point-addr4131 = inttoptr i64 %entry-point-addr-uint4130 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4132 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4131, align 8
  %994 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4132({}* %505, i64 5, {}* %990, {}* %991, {}* %farg1, {}* %992, {}* %993)
          to label %normal-dest4135 unwind label %cleanup-lpad

normal-dest4135:                                  ; preds = %normal-dest4128
  %.elt4963 = extractvalue { {}*, i64 } %994, 0
  %.elt4965 = extractvalue { {}*, i64 } %994, 1
  %cond4470 = icmp eq i64 %.elt4965, 0
  %995 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162951.1 = select i1 %cond4470, {}* %995, {}* %.elt4963
  br label %tag825

normal-dest4173:                                  ; preds = %tag873
  %996 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %997 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %998 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %999 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4174 = ptrtoint {}* %510 to i64
  %entry-point-addr-uint4175 = add i64 %ptrtoint4174, 7
  %entry-point-addr4176 = inttoptr i64 %entry-point-addr-uint4175 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4177 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4176, align 8
  %1000 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4177({}* %510, i64 5, {}* %996, {}* %997, {}* %x2346.0, {}* %998, {}* %999)
          to label %normal-dest4180 unwind label %cleanup-lpad

normal-dest4180:                                  ; preds = %normal-dest4173
  %.elt4623 = extractvalue { {}*, i64 } %1000, 0
  %.elt4625 = extractvalue { {}*, i64 } %1000, 1
  %cond4410 = icmp eq i64 %.elt4625, 0
  %1001 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4615 = select i1 %cond4410, {}* %1001, {}* %.elt4623
  br label %tag188

header-check-br4188:                              ; preds = %tag194
  %gep4193 = getelementptr inbounds i8, i8* %95, i64 -9
  %irc-bit-cast4194 = bitcast i8* %gep4193 to i64*
  %1002 = load i64, i64* %irc-bit-cast4194, align 8
  %1003 = icmp ne i64 %1002, 1325
  %test2510.not = xor i1 %test2510, true
  %brmerge = or i1 %1003, %test2510.not
  br i1 %brmerge, label %tag541, label %header-check-br981

normal-dest4217:                                  ; preds = %tag883
  %1004 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %1005 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %1006 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %1007 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4218 = ptrtoint {}* %512 to i64
  %entry-point-addr-uint4219 = add i64 %ptrtoint4218, 7
  %entry-point-addr4220 = inttoptr i64 %entry-point-addr-uint4219 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4221 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4220, align 8
  %1008 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4221({}* %512, i64 5, {}* %1004, {}* %1005, {}* %x2941.0, {}* %1006, {}* %1007)
          to label %normal-dest4224 unwind label %cleanup-lpad

normal-dest4224:                                  ; preds = %normal-dest4217
  %.elt4943 = extractvalue { {}*, i64 } %1008, 0
  %.elt4945 = extractvalue { {}*, i64 } %1008, 1
  %cond4465 = icmp eq i64 %.elt4945, 0
  %1009 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in4935 = select i1 %cond4465, {}* %1009, {}* %.elt4943
  br label %tag723

normal-dest4253:                                  ; preds = %tag898
  %1010 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %1011 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %1012 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %1013 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4254 = ptrtoint {}* %518 to i64
  %entry-point-addr-uint4255 = add i64 %ptrtoint4254, 7
  %entry-point-addr4256 = inttoptr i64 %entry-point-addr-uint4255 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4257 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4256, align 8
  %1014 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4257({}* %518, i64 5, {}* %1010, {}* %1011, {}* %x2531.0, {}* %1012, {}* %1013)
          to label %normal-dest4260 unwind label %cleanup-lpad

normal-dest4260:                                  ; preds = %normal-dest4253
  %.elt4607 = extractvalue { {}*, i64 } %1014, 0
  %.elt4609 = extractvalue { {}*, i64 } %1014, 1
  %cond4408 = icmp eq i64 %.elt4609, 0
  %1015 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2014.1 = select i1 %cond4408, {}* %1015, {}* %.elt4607
  br label %tag744

normal-dest4272:                                  ; preds = %normal-dest2744
  call void @unreachableError()
  unreachable

normal-dest4279:                                  ; preds = %tag904
  %1016 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %1017 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %1018 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %1019 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4280 = ptrtoint {}* %521 to i64
  %entry-point-addr-uint4281 = add i64 %ptrtoint4280, 7
  %entry-point-addr4282 = inttoptr i64 %entry-point-addr-uint4281 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4283 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4282, align 8
  %1020 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4283({}* %521, i64 5, {}* %1016, {}* %1017, {}* %x1431.0, {}* %1018, {}* %1019)
          to label %normal-dest4286 unwind label %cleanup-lpad

normal-dest4286:                                  ; preds = %normal-dest4279
  %.elt4898 = extractvalue { {}*, i64 } %1020, 0
  %.elt4900 = extractvalue { {}*, i64 } %1020, 1
  %cond4457 = icmp eq i64 %.elt4900, 0
  %1021 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x2419.1 = select i1 %cond4457, {}* %1021, {}* %.elt4898
  br label %tag380

normal-dest4296:                                  ; preds = %tag908
  %1022 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %1023 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %1024 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %1025 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4297 = ptrtoint {}* %524 to i64
  %entry-point-addr-uint4298 = add i64 %ptrtoint4297, 7
  %entry-point-addr4299 = inttoptr i64 %entry-point-addr-uint4298 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4300 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4299, align 8
  %1026 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4300({}* %524, i64 5, {}* %1022, {}* %1023, {}* %x1133.0, {}* %1024, {}* %1025)
          to label %normal-dest4303 unwind label %cleanup-lpad

normal-dest4303:                                  ; preds = %normal-dest4296
  %.elt5042 = extractvalue { {}*, i64 } %1026, 0
  %.elt5044 = extractvalue { {}*, i64 } %1026, 1
  %cond4481 = icmp eq i64 %.elt5044, 0
  %1027 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G162540.1 = select i1 %cond4481, {}* %1027, {}* %.elt5042
  br label %tag35

normal-dest4330:                                  ; preds = %tag923
  %1028 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %1029 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %1030 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %1031 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4331 = ptrtoint {}* %527 to i64
  %entry-point-addr-uint4332 = add i64 %ptrtoint4331, 7
  %entry-point-addr4333 = inttoptr i64 %entry-point-addr-uint4332 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4334 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4333, align 8
  %1032 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4334({}* %527, i64 5, {}* %1028, {}* %1029, {}* %x2164.0, {}* %1030, {}* %1031)
          to label %normal-dest4337 unwind label %cleanup-lpad

normal-dest4337:                                  ; preds = %normal-dest4330
  %.elt4592 = extractvalue { {}*, i64 } %1032, 0
  %.elt4594 = extractvalue { {}*, i64 } %1032, 1
  %cond4405 = icmp eq i64 %.elt4594, 0
  %1033 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x3277.1 = select i1 %cond4405, {}* %1033, {}* %.elt4592
  br label %tag595

header-check-br4343:                              ; preds = %header-check-br1444
  %.old5291 = and i64 %ptrtoint1445, 3
  %fixnump-test2964.old = icmp eq i64 %.old5291, 0
  br i1 %fixnump-test2964.old, label %tag820, label %switch.early.test5488

switch.early.test5488:                            ; preds = %header-check-br4343
  switch i64 %621, label %tag567 [
    i64 1349, label %tag820
    i64 1309, label %tag820
  ]

normal-dest4363:                                  ; preds = %tag946
  %1034 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %1035 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %1036 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %1037 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4364 = ptrtoint {}* %543 to i64
  %entry-point-addr-uint4365 = add i64 %ptrtoint4364, 7
  %entry-point-addr4366 = inttoptr i64 %entry-point-addr-uint4365 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4367 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4366, align 8
  %1038 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4367({}* %543, i64 5, {}* %1034, {}* %1035, {}* %x994.0, {}* %1036, {}* %1037)
          to label %normal-dest4370 unwind label %cleanup-lpad

normal-dest4370:                                  ; preds = %normal-dest4363
  %.elt4908 = extractvalue { {}*, i64 } %1038, 0
  %.elt4910 = extractvalue { {}*, i64 } %1038, 1
  %cond4459 = icmp eq i64 %.elt4910, 0
  %1039 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1603.1 = select i1 %cond4459, {}* %1039, {}* %.elt4908
  br label %tag16

normal-dest4377:                                  ; preds = %tag947
  %1040 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %1041 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %1042 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %1043 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint4378 = ptrtoint {}* %545 to i64
  %entry-point-addr-uint4379 = add i64 %ptrtoint4378, 7
  %entry-point-addr4380 = inttoptr i64 %entry-point-addr-uint4379 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point4381 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr4380, align 8
  %1044 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point4381({}* %545, i64 5, {}* %1040, {}* %1041, {}* %x1106.0, {}* %1042, {}* %1043)
          to label %normal-dest4384 unwind label %cleanup-lpad

normal-dest4384:                                  ; preds = %normal-dest4377
  %.elt5064 = extractvalue { {}*, i64 } %1044, 0
  %.elt5066 = extractvalue { {}*, i64 } %1044, 1
  %cond4486 = icmp eq i64 %.elt5066, 0
  %1045 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x1371.1 = select i1 %cond4486, {}* %1045, {}* %.elt5064
  br label %tag105
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.9"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !46 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest363, %tag7
  %9 = phi {}* [ %23, %tag7 ], [ %157, %normal-dest363 ]
  %format-arg-162053.0 = phi {}* [ %format-arg-162053.1554, %tag7 ], [ %format-arg-162053.2, %normal-dest363 ]
  %10 = icmp eq {}* %G162088.0, %9
  br i1 %10, label %tag5, label %tag3

tag1:                                             ; preds = %tag11
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest77 unwind label %cleanup-lpad

tag2:                                             ; preds = %process-rest-argument
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest84 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest321, %tag
  %format-arg-162054.0 = phi {}* [ %format-arg-162054.1, %tag ], [ %format-arg-162054.2, %normal-dest321 ]
  %15 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest98 unwind label %cleanup-lpad

tag4:                                             ; preds = %tag8
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest300 unwind label %cleanup-lpad

tag5:                                             ; preds = %tag
  %19 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest314 unwind label %cleanup-lpad

tag6:                                             ; preds = %tag10
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest328 unwind label %cleanup-lpad

tag7:                                             ; preds = %normal-dest307, %tag8
  %23 = phi {}* [ %25, %tag8 ], [ %125, %normal-dest307 ]
  %format-arg-162052.0 = phi {}* [ %format-arg-162052.1529532, %tag8 ], [ %format-arg-162052.2, %normal-dest307 ]
  %24 = icmp eq {}* %G162089.0552, %23
  br i1 %24, label %tag13, label %tag

tag8:                                             ; preds = %normal-dest80, %tag11
  %25 = phi {}* [ %31, %tag11 ], [ %50, %normal-dest80 ]
  %format-arg-162051.0 = phi {}* [ %format-arg-162051.1508511550, %tag11 ], [ %format-arg-162051.2, %normal-dest80 ]
  %26 = icmp eq {}* %G162090.0527534, %25
  br i1 %26, label %tag4, label %tag7

tag9:                                             ; preds = %normal-dest335, %tag10
  %27 = phi {}* [ %29, %tag10 ], [ %141, %normal-dest335 ]
  %format-arg-162049.0 = phi {}* [ %format-arg-162049.1478481504515546, %tag10 ], [ %format-arg-162049.2, %normal-dest335 ]
  %28 = icmp eq {}* %G162092.0489496523538, %27
  br i1 %28, label %tag12, label %tag11

tag10:                                            ; preds = %normal-dest91, %process-rest-argument
  %29 = phi {}* [ %41, %process-rest-argument ], [ %58, %normal-dest91 ]
  %format-arg-162048.0 = phi {}* [ %format-arg-162048.1469472487498521540, %process-rest-argument ], [ %format-arg-162048.2, %normal-dest91 ]
  %30 = icmp eq {}* %G162093.0476483502517544, %29
  br i1 %30, label %tag6, label %tag9

tag11:                                            ; preds = %normal-dest349, %tag9
  %31 = phi {}* [ %27, %tag9 ], [ %149, %normal-dest349 ]
  %format-arg-162050.0 = phi {}* [ %format-arg-162050.1491494525536, %tag9 ], [ %format-arg-162050.2, %normal-dest349 ]
  %32 = icmp eq {}* %G162091.0506513548, %31
  br i1 %32, label %tag1, label %tag8

tag12:                                            ; preds = %tag9
  %33 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest342 unwind label %cleanup-lpad

tag13:                                            ; preds = %tag7
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest356 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %normal-dest356, %tag13, %normal-dest342, %tag12, %normal-dest328, %tag6, %normal-dest314, %tag5, %normal-dest300, %tag4, %normal-dest285, %normal-dest279, %normal-dest272, %normal-dest262, %normal-dest255, %normal-dest249, %normal-dest242, %normal-dest231, %normal-dest224, %normal-dest218, %normal-dest211, %normal-dest200, %normal-dest193, %normal-dest187, %normal-dest180, %normal-dest174, %normal-dest167, %normal-dest161, %normal-dest154, %normal-dest148, %normal-dest141, %normal-dest135, %normal-dest128, %normal-dest118, %normal-dest111, %normal-dest105, %normal-dest98, %tag3, %normal-dest84, %tag2, %normal-dest77, %tag1, %error
  %37 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %37

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %38 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs18 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-119 = add i64 %rem-nargs18, -1
  store i64 %rem-nargs-119, i64* %"remaining-nargs*", align 8
  %vaarg20 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args25 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args25, label %opt-cont24, label %opt-cont.opt-cont24.thread_crit_edge

opt-cont.opt-cont24.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont24:                                       ; preds = %opt-cont
  %rem-nargs26 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-127 = add i64 %rem-nargs26, -1
  store i64 %rem-nargs-127, i64* %"remaining-nargs*", align 8
  %vaarg28 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args33 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args33, label %opt-cont24.opt-cont32.thread_crit_edge, label %opt-cont32

opt-cont24.opt-cont32.thread_crit_edge:           ; preds = %opt-cont24
  %.pre556 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont32:                                       ; preds = %opt-cont24
  %rem-nargs34 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-135 = add i64 %rem-nargs34, -1
  store i64 %rem-nargs-135, i64* %"remaining-nargs*", align 8
  %vaarg36 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args41 = icmp sgt i64 %nargs, 4
  br i1 %enough-given-args41, label %opt-cont40, label %opt-cont32.opt-cont40.thread_crit_edge

opt-cont32.opt-cont40.thread_crit_edge:           ; preds = %opt-cont32
  %.pre557 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont40:                                       ; preds = %opt-cont32
  %rem-nargs42 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-143 = add i64 %rem-nargs42, -1
  store i64 %rem-nargs-143, i64* %"remaining-nargs*", align 8
  %vaarg44 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args49 = icmp eq i64 %nargs, 5
  br i1 %enough-given-args49, label %opt-cont40.opt-cont48.thread_crit_edge, label %opt-cont48

opt-cont40.opt-cont48.thread_crit_edge:           ; preds = %opt-cont40
  %.pre558 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont48:                                       ; preds = %opt-cont40
  %rem-nargs50 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-151 = add i64 %rem-nargs50, -1
  store i64 %rem-nargs-151, i64* %"remaining-nargs*", align 8
  %vaarg52 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args57 = icmp sgt i64 %nargs, 6
  br i1 %enough-given-args57, label %opt-cont56, label %opt-cont48.opt-cont56.thread_crit_edge

opt-cont48.opt-cont56.thread_crit_edge:           ; preds = %opt-cont48
  %.pre559 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont56:                                       ; preds = %opt-cont48
  %rem-nargs58 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-159 = add i64 %rem-nargs58, -1
  store i64 %rem-nargs-159, i64* %"remaining-nargs*", align 8
  %vaarg60 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args65 = icmp eq i64 %nargs, 7
  br i1 %enough-given-args65, label %opt-cont56.opt-init63_crit_edge, label %opt-arg62

opt-cont56.opt-init63_crit_edge:                  ; preds = %opt-cont56
  %.pre560 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg62:                                        ; preds = %opt-cont56
  %rem-nargs66 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-167 = add i64 %rem-nargs66, -1
  store i64 %rem-nargs-167, i64* %"remaining-nargs*", align 8
  %vaarg68 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont56.opt-init63_crit_edge, %opt-cont40.opt-cont48.thread_crit_edge, %opt-cont24.opt-cont32.thread_crit_edge, %opt-cont.opt-cont24.thread_crit_edge, %opt-cont.thread, %opt-cont32.opt-cont40.thread_crit_edge, %opt-cont48.opt-cont56.thread_crit_edge, %opt-arg62
  %format-arg-162053.1554 = phi {}* [ %vaarg60, %opt-arg62 ], [ %vaarg60, %opt-cont56.opt-init63_crit_edge ], [ undef, %opt-cont40.opt-cont48.thread_crit_edge ], [ undef, %opt-cont24.opt-cont32.thread_crit_edge ], [ undef, %opt-cont.opt-cont24.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont32.opt-cont40.thread_crit_edge ], [ undef, %opt-cont48.opt-cont56.thread_crit_edge ]
  %G162089.0552 = phi {}* [ %38, %opt-arg62 ], [ %38, %opt-cont56.opt-init63_crit_edge ], [ %.pre558, %opt-cont40.opt-cont48.thread_crit_edge ], [ %.pre556, %opt-cont24.opt-cont32.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont24.thread_crit_edge ], [ %39, %opt-cont.thread ], [ %.pre557, %opt-cont32.opt-cont40.thread_crit_edge ], [ %.pre559, %opt-cont48.opt-cont56.thread_crit_edge ]
  %format-arg-162051.1508511550 = phi {}* [ %vaarg44, %opt-arg62 ], [ %vaarg44, %opt-cont56.opt-init63_crit_edge ], [ %vaarg44, %opt-cont40.opt-cont48.thread_crit_edge ], [ undef, %opt-cont24.opt-cont32.thread_crit_edge ], [ undef, %opt-cont.opt-cont24.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont32.opt-cont40.thread_crit_edge ], [ %vaarg44, %opt-cont48.opt-cont56.thread_crit_edge ]
  %G162091.0506513548 = phi {}* [ %38, %opt-arg62 ], [ %38, %opt-cont56.opt-init63_crit_edge ], [ %38, %opt-cont40.opt-cont48.thread_crit_edge ], [ %.pre556, %opt-cont24.opt-cont32.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont24.thread_crit_edge ], [ %39, %opt-cont.thread ], [ %.pre557, %opt-cont32.opt-cont40.thread_crit_edge ], [ %38, %opt-cont48.opt-cont56.thread_crit_edge ]
  %format-arg-162049.1478481504515546 = phi {}* [ %vaarg28, %opt-arg62 ], [ %vaarg28, %opt-cont56.opt-init63_crit_edge ], [ %vaarg28, %opt-cont40.opt-cont48.thread_crit_edge ], [ %vaarg28, %opt-cont24.opt-cont32.thread_crit_edge ], [ undef, %opt-cont.opt-cont24.thread_crit_edge ], [ undef, %opt-cont.thread ], [ %vaarg28, %opt-cont32.opt-cont40.thread_crit_edge ], [ %vaarg28, %opt-cont48.opt-cont56.thread_crit_edge ]
  %G162093.0476483502517544 = phi {}* [ %38, %opt-arg62 ], [ %38, %opt-cont56.opt-init63_crit_edge ], [ %38, %opt-cont40.opt-cont48.thread_crit_edge ], [ %38, %opt-cont24.opt-cont32.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont24.thread_crit_edge ], [ %39, %opt-cont.thread ], [ %38, %opt-cont32.opt-cont40.thread_crit_edge ], [ %38, %opt-cont48.opt-cont56.thread_crit_edge ]
  %G162094.0467474485500519542 = phi {}* [ %38, %opt-arg62 ], [ %38, %opt-cont56.opt-init63_crit_edge ], [ %38, %opt-cont40.opt-cont48.thread_crit_edge ], [ %38, %opt-cont24.opt-cont32.thread_crit_edge ], [ %38, %opt-cont.opt-cont24.thread_crit_edge ], [ %39, %opt-cont.thread ], [ %38, %opt-cont32.opt-cont40.thread_crit_edge ], [ %38, %opt-cont48.opt-cont56.thread_crit_edge ]
  %format-arg-162048.1469472487498521540 = phi {}* [ %vaarg20, %opt-arg62 ], [ %vaarg20, %opt-cont56.opt-init63_crit_edge ], [ %vaarg20, %opt-cont40.opt-cont48.thread_crit_edge ], [ %vaarg20, %opt-cont24.opt-cont32.thread_crit_edge ], [ %vaarg20, %opt-cont.opt-cont24.thread_crit_edge ], [ undef, %opt-cont.thread ], [ %vaarg20, %opt-cont32.opt-cont40.thread_crit_edge ], [ %vaarg20, %opt-cont48.opt-cont56.thread_crit_edge ]
  %G162092.0489496523538 = phi {}* [ %38, %opt-arg62 ], [ %38, %opt-cont56.opt-init63_crit_edge ], [ %38, %opt-cont40.opt-cont48.thread_crit_edge ], [ %.pre556, %opt-cont24.opt-cont32.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont24.thread_crit_edge ], [ %39, %opt-cont.thread ], [ %38, %opt-cont32.opt-cont40.thread_crit_edge ], [ %38, %opt-cont48.opt-cont56.thread_crit_edge ]
  %format-arg-162050.1491494525536 = phi {}* [ %vaarg36, %opt-arg62 ], [ %vaarg36, %opt-cont56.opt-init63_crit_edge ], [ %vaarg36, %opt-cont40.opt-cont48.thread_crit_edge ], [ undef, %opt-cont24.opt-cont32.thread_crit_edge ], [ undef, %opt-cont.opt-cont24.thread_crit_edge ], [ undef, %opt-cont.thread ], [ %vaarg36, %opt-cont32.opt-cont40.thread_crit_edge ], [ %vaarg36, %opt-cont48.opt-cont56.thread_crit_edge ]
  %G162090.0527534 = phi {}* [ %38, %opt-arg62 ], [ %38, %opt-cont56.opt-init63_crit_edge ], [ %.pre558, %opt-cont40.opt-cont48.thread_crit_edge ], [ %.pre556, %opt-cont24.opt-cont32.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont24.thread_crit_edge ], [ %39, %opt-cont.thread ], [ %.pre557, %opt-cont32.opt-cont40.thread_crit_edge ], [ %38, %opt-cont48.opt-cont56.thread_crit_edge ]
  %format-arg-162052.1529532 = phi {}* [ %vaarg52, %opt-arg62 ], [ %vaarg52, %opt-cont56.opt-init63_crit_edge ], [ undef, %opt-cont40.opt-cont48.thread_crit_edge ], [ undef, %opt-cont24.opt-cont32.thread_crit_edge ], [ undef, %opt-cont.opt-cont24.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont32.opt-cont40.thread_crit_edge ], [ %vaarg52, %opt-cont48.opt-cont56.thread_crit_edge ]
  %format-arg-162054.1 = phi {}* [ %vaarg68, %opt-arg62 ], [ undef, %opt-cont56.opt-init63_crit_edge ], [ undef, %opt-cont40.opt-cont48.thread_crit_edge ], [ undef, %opt-cont24.opt-cont32.thread_crit_edge ], [ undef, %opt-cont.opt-cont24.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont32.opt-cont40.thread_crit_edge ], [ undef, %opt-cont48.opt-cont56.thread_crit_edge ]
  %G162088.0 = phi {}* [ %38, %opt-arg62 ], [ %.pre560, %opt-cont56.opt-init63_crit_edge ], [ %.pre558, %opt-cont40.opt-cont48.thread_crit_edge ], [ %.pre556, %opt-cont24.opt-cont32.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont24.thread_crit_edge ], [ %39, %opt-cont.thread ], [ %.pre557, %opt-cont32.opt-cont40.thread_crit_edge ], [ %.pre559, %opt-cont48.opt-cont56.thread_crit_edge ]
  %40 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %41 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %42 = icmp eq {}* %G162094.0467474485500519542, %41
  br i1 %42, label %tag2, label %tag10

normal-dest77:                                    ; preds = %tag1
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %44 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %45 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %47 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 7, {}* %43, {}* %44, {}* %45, {}* %46, {}* %47, {}* %48, {}* inttoptr (i64 76 to {}*))
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest77
  %.elt445 = extractvalue { {}*, i64 } %49, 0
  %.elt447 = extractvalue { {}*, i64 } %49, 1
  %cond371 = icmp eq i64 %.elt447, 0
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-162051.2 = select i1 %cond371, {}* %50, {}* %.elt445
  br label %tag8

normal-dest84:                                    ; preds = %tag2
  %51 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %53 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %54 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %56 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint85 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint86 = add i64 %ptrtoint85, 7
  %entry-point-addr87 = inttoptr i64 %entry-point-addr-uint86 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point88 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr87, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point88({}* %14, i64 7, {}* %51, {}* %52, {}* %53, {}* %54, {}* %55, {}* %56, {}* inttoptr (i64 12 to {}*))
          to label %normal-dest91 unwind label %cleanup-lpad

normal-dest91:                                    ; preds = %normal-dest84
  %.elt457 = extractvalue { {}*, i64 } %57, 0
  %.elt459 = extractvalue { {}*, i64 } %57, 1
  %cond374 = icmp eq i64 %.elt459, 0
  %58 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-162048.2 = select i1 %cond374, {}* %58, {}* %.elt457
  br label %tag10

normal-dest98:                                    ; preds = %tag3
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint99 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint100 = add i64 %ptrtoint99, 7
  %entry-point-addr101 = inttoptr i64 %entry-point-addr-uint100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr101, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point102({}* %16, i64 8, {}* %vaarg, {}* %format-arg-162048.0, {}* %59, {}* %59, {}* inttoptr (i64 100 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest105 unwind label %cleanup-lpad

normal-dest105:                                   ; preds = %normal-dest98
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest111 unwind label %cleanup-lpad

normal-dest111:                                   ; preds = %normal-dest105
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 386), align 16
  %ptrtoint112 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint113 = add i64 %ptrtoint112, 7
  %entry-point-addr114 = inttoptr i64 %entry-point-addr-uint113 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point115 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr114, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point115({}* %62, i64 2, {}* %63, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest118 unwind label %cleanup-lpad

normal-dest118:                                   ; preds = %normal-dest111
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest128 unwind label %cleanup-lpad

normal-dest128:                                   ; preds = %normal-dest118
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %68 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint129 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint130 = add i64 %ptrtoint129, 7
  %entry-point-addr131 = inttoptr i64 %entry-point-addr-uint130 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point132 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr131, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point132({}* %66, i64 8, {}* %vaarg, {}* %format-arg-162049.0, {}* %67, {}* %68, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest135 unwind label %cleanup-lpad

normal-dest135:                                   ; preds = %normal-dest128
  %70 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %71 = invoke {}* @cc_safe_fdefinition({}* %70)
          to label %normal-dest141 unwind label %cleanup-lpad

normal-dest141:                                   ; preds = %normal-dest135
  %72 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 387), align 8
  %ptrtoint142 = ptrtoint {}* %71 to i64
  %entry-point-addr-uint143 = add i64 %ptrtoint142, 7
  %entry-point-addr144 = inttoptr i64 %entry-point-addr-uint143 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point145 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr144, align 8
  %73 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point145({}* %71, i64 2, {}* %72, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest148 unwind label %cleanup-lpad

normal-dest148:                                   ; preds = %normal-dest141
  %74 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 207), align 8
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest154 unwind label %cleanup-lpad

normal-dest154:                                   ; preds = %normal-dest148
  %76 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint155 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint156 = add i64 %ptrtoint155, 7
  %entry-point-addr157 = inttoptr i64 %entry-point-addr-uint156 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point158 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr157, align 8
  %77 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point158({}* %75, i64 9, {}* %vaarg, {}* %format-arg-162050.0, {}* %76, {}* %76, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 24 to {}*), {}* inttoptr (i64 258 to {}*), {}* inttoptr (i64 354 to {}*), {}* inttoptr (i64 12 to {}*))
          to label %normal-dest161 unwind label %cleanup-lpad

normal-dest161:                                   ; preds = %normal-dest154
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %79 = invoke {}* @cc_safe_fdefinition({}* %78)
          to label %normal-dest167 unwind label %cleanup-lpad

normal-dest167:                                   ; preds = %normal-dest161
  %80 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 388), align 16
  %ptrtoint168 = ptrtoint {}* %79 to i64
  %entry-point-addr-uint169 = add i64 %ptrtoint168, 7
  %entry-point-addr170 = inttoptr i64 %entry-point-addr-uint169 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point171 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr170, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point171({}* %79, i64 2, {}* %80, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest174 unwind label %cleanup-lpad

normal-dest174:                                   ; preds = %normal-dest167
  %82 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %83 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest180 unwind label %cleanup-lpad

normal-dest180:                                   ; preds = %normal-dest174
  %85 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint181 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint182 = add i64 %ptrtoint181, 7
  %entry-point-addr183 = inttoptr i64 %entry-point-addr-uint182 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point184 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr183, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point184({}* %84, i64 8, {}* %vaarg, {}* %format-arg-162051.0, {}* inttoptr (i64 32 to {}*), {}* inttoptr (i64 8 to {}*), {}* null, {}* %82, {}* inttoptr (i64 258 to {}*), {}* %85)
          to label %normal-dest187 unwind label %cleanup-lpad

normal-dest187:                                   ; preds = %normal-dest180
  %87 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest193 unwind label %cleanup-lpad

normal-dest193:                                   ; preds = %normal-dest187
  %89 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 389), align 8
  %ptrtoint194 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint195 = add i64 %ptrtoint194, 7
  %entry-point-addr196 = inttoptr i64 %entry-point-addr-uint195 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point197 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr196, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point197({}* %88, i64 2, {}* %89, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest200 unwind label %cleanup-lpad

normal-dest200:                                   ; preds = %normal-dest193
  %91 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %92 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %93 = invoke {}* @cc_safe_fdefinition({}* %92)
          to label %normal-dest211 unwind label %cleanup-lpad

normal-dest211:                                   ; preds = %normal-dest200
  %94 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint212 = ptrtoint {}* %93 to i64
  %entry-point-addr-uint213 = add i64 %ptrtoint212, 7
  %entry-point-addr214 = inttoptr i64 %entry-point-addr-uint213 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point215 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr214, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point215({}* %93, i64 8, {}* %vaarg, {}* %format-arg-162052.0, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 16 to {}*), {}* null, {}* %91, {}* inttoptr (i64 258 to {}*), {}* %94)
          to label %normal-dest218 unwind label %cleanup-lpad

normal-dest218:                                   ; preds = %normal-dest211
  %96 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest224 unwind label %cleanup-lpad

normal-dest224:                                   ; preds = %normal-dest218
  %98 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 390), align 16
  %ptrtoint225 = ptrtoint {}* %97 to i64
  %entry-point-addr-uint226 = add i64 %ptrtoint225, 7
  %entry-point-addr227 = inttoptr i64 %entry-point-addr-uint226 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point228 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr227, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point228({}* %97, i64 2, {}* %98, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest231 unwind label %cleanup-lpad

normal-dest231:                                   ; preds = %normal-dest224
  %100 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %101 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest242 unwind label %cleanup-lpad

normal-dest242:                                   ; preds = %normal-dest231
  %103 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint243 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint244 = add i64 %ptrtoint243, 7
  %entry-point-addr245 = inttoptr i64 %entry-point-addr-uint244 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point246 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr245, align 8
  %104 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point246({}* %102, i64 8, {}* %vaarg, {}* %format-arg-162053.0, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 16 to {}*), {}* null, {}* %100, {}* inttoptr (i64 258 to {}*), {}* %103)
          to label %normal-dest249 unwind label %cleanup-lpad

normal-dest249:                                   ; preds = %normal-dest242
  %105 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %106 = invoke {}* @cc_safe_fdefinition({}* %105)
          to label %normal-dest255 unwind label %cleanup-lpad

normal-dest255:                                   ; preds = %normal-dest249
  %107 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 391), align 8
  %ptrtoint256 = ptrtoint {}* %106 to i64
  %entry-point-addr-uint257 = add i64 %ptrtoint256, 7
  %entry-point-addr258 = inttoptr i64 %entry-point-addr-uint257 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point259 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr258, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point259({}* %106, i64 2, {}* %107, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest262 unwind label %cleanup-lpad

normal-dest262:                                   ; preds = %normal-dest255
  %109 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 207), align 8
  %110 = invoke {}* @cc_safe_fdefinition({}* %109)
          to label %normal-dest272 unwind label %cleanup-lpad

normal-dest272:                                   ; preds = %normal-dest262
  %111 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint273 = ptrtoint {}* %110 to i64
  %entry-point-addr-uint274 = add i64 %ptrtoint273, 7
  %entry-point-addr275 = inttoptr i64 %entry-point-addr-uint274 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point276 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr275, align 8
  %112 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point276({}* %110, i64 9, {}* %vaarg, {}* %format-arg-162054.0, {}* %111, {}* %111, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 60 to {}*), {}* inttoptr (i64 258 to {}*), {}* inttoptr (i64 354 to {}*), {}* inttoptr (i64 12 to {}*))
          to label %normal-dest279 unwind label %cleanup-lpad

normal-dest279:                                   ; preds = %normal-dest272
  %113 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %114 = invoke {}* @cc_safe_fdefinition({}* %113)
          to label %normal-dest285 unwind label %cleanup-lpad

normal-dest285:                                   ; preds = %normal-dest279
  %ptrtoint286 = ptrtoint {}* %114 to i64
  %entry-point-addr-uint287 = add i64 %ptrtoint286, 7
  %entry-point-addr288 = inttoptr i64 %entry-point-addr-uint287 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point289 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr288, align 8
  %115 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point289({}* %114, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest292 unwind label %cleanup-lpad

normal-dest292:                                   ; preds = %normal-dest285
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %116 = insertvalue { {}*, i64 } undef, {}* %40, 0
  %117 = insertvalue { {}*, i64 } %116, i64 1, 1
  ret { {}*, i64 } %117

normal-dest300:                                   ; preds = %tag4
  %118 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %119 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %120 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %121 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %122 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %123 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint301 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint302 = add i64 %ptrtoint301, 7
  %entry-point-addr303 = inttoptr i64 %entry-point-addr-uint302 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point304 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr303, align 8
  %124 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point304({}* %18, i64 7, {}* %118, {}* %119, {}* %120, {}* %121, {}* %122, {}* %123, {}* inttoptr (i64 108 to {}*))
          to label %normal-dest307 unwind label %cleanup-lpad

normal-dest307:                                   ; preds = %normal-dest300
  %.elt441 = extractvalue { {}*, i64 } %124, 0
  %.elt443 = extractvalue { {}*, i64 } %124, 1
  %cond370 = icmp eq i64 %.elt443, 0
  %125 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-162052.2 = select i1 %cond370, {}* %125, {}* %.elt441
  br label %tag7

normal-dest314:                                   ; preds = %tag5
  %126 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %127 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %128 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %129 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %130 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %131 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint315 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint316 = add i64 %ptrtoint315, 7
  %entry-point-addr317 = inttoptr i64 %entry-point-addr-uint316 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point318 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr317, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point318({}* %20, i64 7, {}* %126, {}* %127, {}* %128, {}* %129, {}* %130, {}* %131, {}* inttoptr (i64 156 to {}*))
          to label %normal-dest321 unwind label %cleanup-lpad

normal-dest321:                                   ; preds = %normal-dest314
  %.elt433 = extractvalue { {}*, i64 } %132, 0
  %.elt435 = extractvalue { {}*, i64 } %132, 1
  %cond = icmp eq i64 %.elt435, 0
  %133 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-162054.2 = select i1 %cond, {}* %133, {}* %.elt433
  br label %tag3

normal-dest328:                                   ; preds = %tag6
  %134 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %135 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %136 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %137 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %138 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %139 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint329 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint330 = add i64 %ptrtoint329, 7
  %entry-point-addr331 = inttoptr i64 %entry-point-addr-uint330 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point332 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr331, align 8
  %140 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point332({}* %22, i64 7, {}* %134, {}* %135, {}* %136, {}* %137, {}* %138, {}* %139, {}* inttoptr (i64 36 to {}*))
          to label %normal-dest335 unwind label %cleanup-lpad

normal-dest335:                                   ; preds = %normal-dest328
  %.elt453 = extractvalue { {}*, i64 } %140, 0
  %.elt455 = extractvalue { {}*, i64 } %140, 1
  %cond373 = icmp eq i64 %.elt455, 0
  %141 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-162049.2 = select i1 %cond373, {}* %141, {}* %.elt453
  br label %tag9

normal-dest342:                                   ; preds = %tag12
  %142 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %143 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %144 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %145 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %146 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %147 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint343 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint344 = add i64 %ptrtoint343, 7
  %entry-point-addr345 = inttoptr i64 %entry-point-addr-uint344 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point346 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr345, align 8
  %148 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point346({}* %34, i64 7, {}* %142, {}* %143, {}* %144, {}* %145, {}* %146, {}* %147, {}* inttoptr (i64 52 to {}*))
          to label %normal-dest349 unwind label %cleanup-lpad

normal-dest349:                                   ; preds = %normal-dest342
  %.elt449 = extractvalue { {}*, i64 } %148, 0
  %.elt451 = extractvalue { {}*, i64 } %148, 1
  %cond372 = icmp eq i64 %.elt451, 0
  %149 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-162050.2 = select i1 %cond372, {}* %149, {}* %.elt449
  br label %tag11

normal-dest356:                                   ; preds = %tag13
  %150 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %151 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %152 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %153 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %154 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %155 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint357 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint358 = add i64 %ptrtoint357, 7
  %entry-point-addr359 = inttoptr i64 %entry-point-addr-uint358 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point360 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr359, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point360({}* %36, i64 7, {}* %150, {}* %151, {}* %152, {}* %153, {}* %154, {}* %155, {}* inttoptr (i64 136 to {}*))
          to label %normal-dest363 unwind label %cleanup-lpad

normal-dest363:                                   ; preds = %normal-dest356
  %.elt437 = extractvalue { {}*, i64 } %156, 0
  %.elt439 = extractvalue { {}*, i64 } %156, 1
  %cond369 = icmp eq i64 %.elt439, 0
  %157 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-162053.2 = select i1 %cond369, {}* %157, {}* %.elt437
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.10"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !47 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag1:                                             ; preds = %tag12
  %9 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest63 unwind label %cleanup-lpad.loopexit

tag3:                                             ; preds = %normal-dest250, %tag19
  %11 = phi {}* [ %26, %tag19 ], [ %93, %normal-dest250 ]
  %format-arg-161952.0 = phi {}* [ %format-arg-161952.1, %tag19 ], [ %format-arg-161952.2, %normal-dest250 ]
  %12 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest70 unwind label %cleanup-lpad.loopexit.split-lp

tag5:                                             ; preds = %tag24
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit.split-lp

tag9:                                             ; preds = %tag26
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest167 unwind label %cleanup-lpad.loopexit

tag10:                                            ; preds = %tag33
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 145), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit

tag11:                                            ; preds = %process-rest-argument
  %20 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest194 unwind label %cleanup-lpad.loopexit.split-lp

tag12:                                            ; preds = %normal-dest174
  %22 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %37, i64 4)
  %result = extractvalue { i64, i1 } %22, 0
  %overflow = extractvalue { i64, i1 } %22, 1
  %23 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag1, label %tag33.backedge

tag33.backedge:                                   ; preds = %tag12, %normal-dest66, %normal-dest217
  %I.0.be = phi {}* [ %I.1, %normal-dest66 ], [ %I.2, %normal-dest217 ], [ %23, %tag12 ]
  br label %tag33

tag13:                                            ; preds = %normal-dest174
  %24 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest210 unwind label %cleanup-lpad.loopexit

tag19:                                            ; preds = %normal-dest151, %tag24
  %26 = phi {}* [ %29, %tag24 ], [ %72, %normal-dest151 ]
  %format-arg-161951.0 = phi {}* [ %format-arg-161951.1344, %tag24 ], [ %format-arg-161951.2, %normal-dest151 ]
  %27 = icmp eq {}* %G161972.0, %26
  br i1 %27, label %tag25, label %tag3

tag20:                                            ; preds = %tag34
  %28 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %.pre347 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag26

tag24:                                            ; preds = %normal-dest201, %process-rest-argument
  %29 = phi {}* [ %42, %process-rest-argument ], [ %83, %normal-dest201 ]
  %format-arg-161950.0 = phi {}* [ %format-arg-161950.1335338, %process-rest-argument ], [ %format-arg-161950.2, %normal-dest201 ]
  %30 = icmp eq {}* %G161973.0342, %29
  br i1 %30, label %tag5, label %tag19

tag25:                                            ; preds = %tag19
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest243 unwind label %cleanup-lpad.loopexit.split-lp

tag26:                                            ; preds = %normal-dest187, %tag20
  %33 = phi {}* [ %.pre347, %tag20 ], [ %75, %normal-dest187 ]
  %G165108.0 = phi {}* [ %28, %tag20 ], [ %G165108.1, %normal-dest187 ]
  %34 = icmp eq {}* %G165108.0, %33
  br i1 %34, label %tag31, label %tag9

tag31:                                            ; preds = %tag34, %tag26
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %35 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %36 = insertvalue { {}*, i64 } %35, i64 1, 1
  ret { {}*, i64 } %36

tag33:                                            ; preds = %tag33.backedge, %tag33.preheader
  %I.0 = phi {}* [ null, %tag33.preheader ], [ %I.0.be, %tag33.backedge ]
  %37 = ptrtoint {}* %I.0 to i64
  %fixnum-tag-only264294 = and i64 %37, 3
  %fixnump-test265 = icmp eq i64 %fixnum-tag-only264294, 0
  br i1 %fixnump-test265, label %tag34, label %tag10

tag34:                                            ; preds = %tag33
  %38 = icmp slt {}* %I.0, inttoptr (i64 8 to {}*)
  br i1 %38, label %tag20, label %tag31

cleanup-lpad.loopexit:                            ; preds = %tag1, %normal-dest63, %tag9, %normal-dest167, %tag10, %normal-dest180, %tag13, %normal-dest210
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %tag3, %normal-dest70, %normal-dest77, %normal-dest83, %normal-dest90, %normal-dest101, %normal-dest108, %normal-dest114, %normal-dest121, %normal-dest127, %tag5, %normal-dest144, %tag11, %normal-dest194, %tag25, %normal-dest243
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs40 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-141 = add i64 %rem-nargs40, -1
  store i64 %rem-nargs-141, i64* %"remaining-nargs*", align 8
  %vaarg42 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args47 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args47, label %opt-cont46, label %opt-cont.opt-cont46.thread_crit_edge

opt-cont.opt-cont46.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont46:                                       ; preds = %opt-cont
  %rem-nargs48 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-149 = add i64 %rem-nargs48, -1
  store i64 %rem-nargs-149, i64* %"remaining-nargs*", align 8
  %vaarg50 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args55 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args55, label %opt-cont46.opt-init53_crit_edge, label %opt-arg52

opt-cont46.opt-init53_crit_edge:                  ; preds = %opt-cont46
  %.pre346 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg52:                                        ; preds = %opt-cont46
  %rem-nargs56 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-157 = add i64 %rem-nargs56, -1
  store i64 %rem-nargs-157, i64* %"remaining-nargs*", align 8
  %vaarg58 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont46.opt-init53_crit_edge, %opt-cont.opt-cont46.thread_crit_edge, %opt-cont.thread, %opt-arg52
  %format-arg-161951.1344 = phi {}* [ %vaarg50, %opt-arg52 ], [ %vaarg50, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G161973.0342 = phi {}* [ %39, %opt-arg52 ], [ %39, %opt-cont46.opt-init53_crit_edge ], [ %.pre, %opt-cont.opt-cont46.thread_crit_edge ], [ %40, %opt-cont.thread ]
  %G161974.0333340 = phi {}* [ %39, %opt-arg52 ], [ %39, %opt-cont46.opt-init53_crit_edge ], [ %39, %opt-cont.opt-cont46.thread_crit_edge ], [ %40, %opt-cont.thread ]
  %format-arg-161950.1335338 = phi {}* [ %vaarg42, %opt-arg52 ], [ %vaarg42, %opt-cont46.opt-init53_crit_edge ], [ %vaarg42, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G161972.0 = phi {}* [ %39, %opt-arg52 ], [ %.pre346, %opt-cont46.opt-init53_crit_edge ], [ %.pre, %opt-cont.opt-cont46.thread_crit_edge ], [ %40, %opt-cont.thread ]
  %format-arg-161952.1 = phi {}* [ %vaarg58, %opt-arg52 ], [ undef, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %41 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %42 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %43 = icmp eq {}* %G161974.0333340, %42
  br i1 %43, label %tag11, label %tag24

normal-dest63:                                    ; preds = %tag1
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 1, {}* %23, {}* null, {}* null, {}* null)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit

normal-dest66:                                    ; preds = %normal-dest63
  %.elt309 = extractvalue { {}*, i64 } %44, 0
  %.elt311 = extractvalue { {}*, i64 } %44, 1
  %cond272 = icmp eq i64 %.elt311, 0
  %45 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.1 = select i1 %cond272, {}* %45, {}* %.elt309
  br label %tag33.backedge

normal-dest70:                                    ; preds = %tag3
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint71 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint72 = add i64 %ptrtoint71, 7
  %entry-point-addr73 = inttoptr i64 %entry-point-addr-uint72 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point74 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr73, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point74({}* %13, i64 8, {}* %vaarg, {}* %format-arg-161950.0, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 16 to {}*), {}* null, {}* %11, {}* inttoptr (i64 258 to {}*), {}* %46)
          to label %normal-dest77 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest77:                                    ; preds = %normal-dest70
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest83 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest83:                                    ; preds = %normal-dest77
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 359), align 8
  %ptrtoint84 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %49, i64 2, {}* %50, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest90 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest90:                                    ; preds = %normal-dest83
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %53 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 175), align 8
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest101 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest101:                                   ; preds = %normal-dest90
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint102 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint103 = add i64 %ptrtoint102, 7
  %entry-point-addr104 = inttoptr i64 %entry-point-addr-uint103 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point105 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr104, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point105({}* %54, i64 8, {}* %vaarg, {}* %format-arg-161951.0, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 16 to {}*), {}* null, {}* %52, {}* inttoptr (i64 258 to {}*), {}* %55)
          to label %normal-dest108 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest108:                                   ; preds = %normal-dest101
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest114:                                   ; preds = %normal-dest108
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 360), align 16
  %ptrtoint115 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint116 = add i64 %ptrtoint115, 7
  %entry-point-addr117 = inttoptr i64 %entry-point-addr-uint116 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point118 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr117, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point118({}* %58, i64 2, {}* %59, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest121 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest121:                                   ; preds = %normal-dest114
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 207), align 8
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest127 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest127:                                   ; preds = %normal-dest121
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint128 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint129 = add i64 %ptrtoint128, 7
  %entry-point-addr130 = inttoptr i64 %entry-point-addr-uint129 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point131 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr130, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point131({}* %62, i64 9, {}* %vaarg, {}* %format-arg-161952.0, {}* %63, {}* %63, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 258 to {}*), {}* inttoptr (i64 354 to {}*), {}* inttoptr (i64 12 to {}*))
          to label %tag33.preheader unwind label %cleanup-lpad.loopexit.split-lp

tag33.preheader:                                  ; preds = %normal-dest127
  br label %tag33

normal-dest144:                                   ; preds = %tag5
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %66 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %68 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %69 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 358), align 16
  %70 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint145 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint146 = add i64 %ptrtoint145, 7
  %entry-point-addr147 = inttoptr i64 %entry-point-addr-uint146 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point148 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr147, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point148({}* %15, i64 7, {}* %65, {}* %66, {}* %67, {}* %68, {}* %69, {}* %70, {}* inttoptr (i64 48 to {}*))
          to label %normal-dest151 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest151:                                   ; preds = %normal-dest144
  %.elt320 = extractvalue { {}*, i64 } %71, 0
  %.elt322 = extractvalue { {}*, i64 } %71, 1
  %cond274 = icmp eq i64 %.elt322, 0
  %72 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161951.2 = select i1 %cond274, {}* %72, {}* %.elt320
  br label %tag19

normal-dest167:                                   ; preds = %tag9
  %ptrtoint168 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint169 = add i64 %ptrtoint168, 7
  %entry-point-addr170 = inttoptr i64 %entry-point-addr-uint169 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point171 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr170, align 8
  %73 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point171({}* %17, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest174 unwind label %cleanup-lpad.loopexit

normal-dest174:                                   ; preds = %normal-dest167
  br i1 %fixnump-test265, label %tag12, label %tag13

normal-dest180:                                   ; preds = %tag10
  %ptrtoint181 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint182 = add i64 %ptrtoint181, 7
  %entry-point-addr183 = inttoptr i64 %entry-point-addr-uint182 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point184 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr183, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point184({}* %19, i64 2, {}* %I.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest187 unwind label %cleanup-lpad.loopexit

normal-dest187:                                   ; preds = %normal-dest180
  %.elt296 = extractvalue { {}*, i64 } %74, 0
  %.elt298 = extractvalue { {}*, i64 } %74, 1
  %cond = icmp eq i64 %.elt298, 0
  %75 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165108.1 = select i1 %cond, {}* %75, {}* %.elt296
  br label %tag26

normal-dest194:                                   ; preds = %tag11
  %76 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %77 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %79 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %80 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 358), align 16
  %81 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint195 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint196 = add i64 %ptrtoint195, 7
  %entry-point-addr197 = inttoptr i64 %entry-point-addr-uint196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr197, align 8
  %82 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point198({}* %21, i64 7, {}* %76, {}* %77, {}* %78, {}* %79, {}* %80, {}* %81, {}* inttoptr (i64 20 to {}*))
          to label %normal-dest201 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest201:                                   ; preds = %normal-dest194
  %.elt324 = extractvalue { {}*, i64 } %82, 0
  %.elt326 = extractvalue { {}*, i64 } %82, 1
  %cond275 = icmp eq i64 %.elt326, 0
  %83 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161950.2 = select i1 %cond275, {}* %83, {}* %.elt324
  br label %tag24

normal-dest210:                                   ; preds = %tag13
  %ptrtoint211 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint212 = add i64 %ptrtoint211, 7
  %entry-point-addr213 = inttoptr i64 %entry-point-addr-uint212 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point214 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr213, align 8
  %84 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point214({}* %25, i64 2, {}* %I.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest217 unwind label %cleanup-lpad.loopexit

normal-dest217:                                   ; preds = %normal-dest210
  %.elt305 = extractvalue { {}*, i64 } %84, 0
  %.elt307 = extractvalue { {}*, i64 } %84, 1
  %cond271 = icmp eq i64 %.elt307, 0
  %85 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.2 = select i1 %cond271, {}* %85, {}* %.elt305
  br label %tag33.backedge

normal-dest243:                                   ; preds = %tag25
  %86 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %87 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %88 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %89 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 358), align 16
  %91 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint244 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint245 = add i64 %ptrtoint244, 7
  %entry-point-addr246 = inttoptr i64 %entry-point-addr-uint245 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point247 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr246, align 8
  %92 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point247({}* %32, i64 7, {}* %86, {}* %87, {}* %88, {}* %89, {}* %90, {}* %91, {}* inttoptr (i64 68 to {}*))
          to label %normal-dest250 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest250:                                   ; preds = %normal-dest243
  %.elt316 = extractvalue { {}*, i64 } %92, 0
  %.elt318 = extractvalue { {}*, i64 } %92, 1
  %cond273 = icmp eq i64 %.elt318, 0
  %93 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161952.2 = select i1 %cond273, {}* %93, {}* %.elt316
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.11"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !48 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag1:                                             ; preds = %tag5
  %9 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %10 = invoke {}* @cc_safe_fdefinition({}* %9)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit.split-lp

tag2:                                             ; preds = %normal-dest137, %tag22
  %11 = phi {}* [ %37, %tag22 ], [ %82, %normal-dest137 ]
  %format-arg-161993.0 = phi {}* [ %format-arg-161993.1699, %tag22 ], [ %format-arg-161993.2, %normal-dest137 ]
  %12 = icmp eq {}* %G162028.0, %11
  br i1 %12, label %tag21, label %tag16

tag3:                                             ; preds = %tag9
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit.split-lp

tag4:                                             ; preds = %tag22
  %15 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest130 unwind label %cleanup-lpad.loopexit.split-lp

tag5:                                             ; preds = %normal-dest487, %tag11
  %17 = phi {}* [ %25, %tag11 ], [ %177, %normal-dest487 ]
  %format-arg-161989.0 = phi {}* [ %format-arg-161989.1623626649660691, %tag11 ], [ %format-arg-161989.2, %normal-dest487 ]
  %18 = icmp eq {}* %G162032.0634641668683, %17
  br i1 %18, label %tag1, label %tag30

tag6:                                             ; preds = %tag33
  %19 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 145), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %tag40
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest158 unwind label %cleanup-lpad.loopexit

tag9:                                             ; preds = %normal-dest428, %tag30
  %23 = phi {}* [ %47, %tag30 ], [ %167, %normal-dest428 ]
  %format-arg-161991.0 = phi {}* [ %format-arg-161991.1653656695, %tag30 ], [ %format-arg-161991.2, %normal-dest428 ]
  %24 = icmp eq {}* %G162030.0672679, %23
  br i1 %24, label %tag3, label %tag22

tag11:                                            ; preds = %normal-dest187, %process-rest-argument
  %25 = phi {}* [ %57, %process-rest-argument ], [ %94, %normal-dest187 ]
  %format-arg-161988.0 = phi {}* [ %format-arg-161988.1614617632643666685, %process-rest-argument ], [ %format-arg-161988.2, %normal-dest187 ]
  %26 = icmp eq {}* %G162033.0621628647662689, %25
  br i1 %26, label %tag42, label %tag5

tag13:                                            ; preds = %process-rest-argument
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit.split-lp

tag14:                                            ; preds = %tag33
  %29 = icmp slt {}* %I.0, inttoptr (i64 8 to {}*)
  br i1 %29, label %tag20, label %tag29

tag16:                                            ; preds = %normal-dest398, %tag2
  %format-arg-161994.0 = phi {}* [ %format-arg-161994.1, %tag2 ], [ %format-arg-161994.2, %normal-dest398 ]
  %30 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest194 unwind label %cleanup-lpad.loopexit.split-lp

tag19:                                            ; preds = %normal-dest412
  %32 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest464 unwind label %cleanup-lpad.loopexit

tag20:                                            ; preds = %tag14
  %34 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %.pre706 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag24

tag21:                                            ; preds = %tag2
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest391 unwind label %cleanup-lpad.loopexit.split-lp

tag22:                                            ; preds = %normal-dest123, %tag9
  %37 = phi {}* [ %23, %tag9 ], [ %74, %normal-dest123 ]
  %format-arg-161992.0 = phi {}* [ %format-arg-161992.1674677, %tag9 ], [ %format-arg-161992.2, %normal-dest123 ]
  %38 = icmp eq {}* %G162029.0697, %37
  br i1 %38, label %tag4, label %tag2

tag23:                                            ; preds = %tag24
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest405 unwind label %cleanup-lpad.loopexit

tag24:                                            ; preds = %normal-dest151, %tag20
  %41 = phi {}* [ %.pre706, %tag20 ], [ %84, %normal-dest151 ]
  %G164512.0 = phi {}* [ %34, %tag20 ], [ %G164512.1, %normal-dest151 ]
  %42 = icmp eq {}* %G164512.0, %41
  br i1 %42, label %tag29, label %tag23

tag28:                                            ; preds = %tag30
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest421 unwind label %cleanup-lpad.loopexit.split-lp

tag29:                                            ; preds = %tag14, %tag24
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %45 = insertvalue { {}*, i64 } undef, {}* %56, 0
  %46 = insertvalue { {}*, i64 } %45, i64 1, 1
  ret { {}*, i64 } %46

tag30:                                            ; preds = %normal-dest112, %tag5
  %47 = phi {}* [ %17, %tag5 ], [ %66, %normal-dest112 ]
  %format-arg-161990.0 = phi {}* [ %format-arg-161990.1636639670681, %tag5 ], [ %format-arg-161990.2, %normal-dest112 ]
  %48 = icmp eq {}* %G162031.0651658693, %47
  br i1 %48, label %tag28, label %tag9

tag33:                                            ; preds = %tag33.backedge, %tag33.preheader
  %I.0 = phi {}* [ null, %tag33.preheader ], [ %I.0.be, %tag33.backedge ]
  %49 = ptrtoint {}* %I.0 to i64
  %fixnum-tag-only445553 = and i64 %49, 3
  %fixnump-test446 = icmp eq i64 %fixnum-tag-only445553, 0
  br i1 %fixnump-test446, label %tag14, label %tag6

tag40:                                            ; preds = %normal-dest412
  %50 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %49, i64 4)
  %result = extractvalue { i64, i1 } %50, 0
  %overflow = extractvalue { i64, i1 } %50, 1
  %51 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag8, label %tag33.backedge

tag33.backedge:                                   ; preds = %tag40, %normal-dest165, %normal-dest471
  %I.0.be = phi {}* [ %I.1, %normal-dest165 ], [ %I.2, %normal-dest471 ], [ %51, %tag40 ]
  br label %tag33

tag42:                                            ; preds = %tag11
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest480 unwind label %cleanup-lpad.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag6, %normal-dest144, %tag8, %normal-dest158, %tag23, %normal-dest405, %tag19, %normal-dest464
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %tag1, %normal-dest109, %tag3, %normal-dest116, %tag4, %normal-dest130, %tag13, %normal-dest180, %tag16, %normal-dest194, %normal-dest201, %normal-dest207, %normal-dest214, %normal-dest224, %normal-dest231, %normal-dest237, %normal-dest244, %normal-dest254, %normal-dest261, %normal-dest267, %normal-dest274, %normal-dest284, %normal-dest291, %normal-dest297, %normal-dest304, %normal-dest314, %normal-dest321, %normal-dest327, %normal-dest334, %normal-dest344, %normal-dest351, %normal-dest357, %normal-dest364, %normal-dest374, %tag21, %normal-dest391, %tag28, %normal-dest421, %tag42, %normal-dest480
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %54 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %55 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs48 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-149 = add i64 %rem-nargs48, -1
  store i64 %rem-nargs-149, i64* %"remaining-nargs*", align 8
  %vaarg50 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args55 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args55, label %opt-cont54, label %opt-cont.opt-cont54.thread_crit_edge

opt-cont.opt-cont54.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont54:                                       ; preds = %opt-cont
  %rem-nargs56 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-157 = add i64 %rem-nargs56, -1
  store i64 %rem-nargs-157, i64* %"remaining-nargs*", align 8
  %vaarg58 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args63 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args63, label %opt-cont54.opt-cont62.thread_crit_edge, label %opt-cont62

opt-cont54.opt-cont62.thread_crit_edge:           ; preds = %opt-cont54
  %.pre701 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont62:                                       ; preds = %opt-cont54
  %rem-nargs64 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-165 = add i64 %rem-nargs64, -1
  store i64 %rem-nargs-165, i64* %"remaining-nargs*", align 8
  %vaarg66 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args71 = icmp sgt i64 %nargs, 4
  br i1 %enough-given-args71, label %opt-cont70, label %opt-cont62.opt-cont70.thread_crit_edge

opt-cont62.opt-cont70.thread_crit_edge:           ; preds = %opt-cont62
  %.pre702 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont70:                                       ; preds = %opt-cont62
  %rem-nargs72 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-173 = add i64 %rem-nargs72, -1
  store i64 %rem-nargs-173, i64* %"remaining-nargs*", align 8
  %vaarg74 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args79 = icmp eq i64 %nargs, 5
  br i1 %enough-given-args79, label %opt-cont70.opt-cont78.thread_crit_edge, label %opt-cont78

opt-cont70.opt-cont78.thread_crit_edge:           ; preds = %opt-cont70
  %.pre703 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont78:                                       ; preds = %opt-cont70
  %rem-nargs80 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-181 = add i64 %rem-nargs80, -1
  store i64 %rem-nargs-181, i64* %"remaining-nargs*", align 8
  %vaarg82 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args87 = icmp sgt i64 %nargs, 6
  br i1 %enough-given-args87, label %opt-cont86, label %opt-cont78.opt-cont86.thread_crit_edge

opt-cont78.opt-cont86.thread_crit_edge:           ; preds = %opt-cont78
  %.pre704 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont86:                                       ; preds = %opt-cont78
  %rem-nargs88 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-189 = add i64 %rem-nargs88, -1
  store i64 %rem-nargs-189, i64* %"remaining-nargs*", align 8
  %vaarg90 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args95 = icmp eq i64 %nargs, 7
  br i1 %enough-given-args95, label %opt-cont86.opt-init93_crit_edge, label %opt-arg92

opt-cont86.opt-init93_crit_edge:                  ; preds = %opt-cont86
  %.pre705 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg92:                                        ; preds = %opt-cont86
  %rem-nargs96 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-197 = add i64 %rem-nargs96, -1
  store i64 %rem-nargs-197, i64* %"remaining-nargs*", align 8
  %vaarg98 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont86.opt-init93_crit_edge, %opt-cont70.opt-cont78.thread_crit_edge, %opt-cont54.opt-cont62.thread_crit_edge, %opt-cont.opt-cont54.thread_crit_edge, %opt-cont.thread, %opt-cont62.opt-cont70.thread_crit_edge, %opt-cont78.opt-cont86.thread_crit_edge, %opt-arg92
  %format-arg-161993.1699 = phi {}* [ %vaarg90, %opt-arg92 ], [ %vaarg90, %opt-cont86.opt-init93_crit_edge ], [ undef, %opt-cont70.opt-cont78.thread_crit_edge ], [ undef, %opt-cont54.opt-cont62.thread_crit_edge ], [ undef, %opt-cont.opt-cont54.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont62.opt-cont70.thread_crit_edge ], [ undef, %opt-cont78.opt-cont86.thread_crit_edge ]
  %G162029.0697 = phi {}* [ %54, %opt-arg92 ], [ %54, %opt-cont86.opt-init93_crit_edge ], [ %.pre703, %opt-cont70.opt-cont78.thread_crit_edge ], [ %.pre701, %opt-cont54.opt-cont62.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont54.thread_crit_edge ], [ %55, %opt-cont.thread ], [ %.pre702, %opt-cont62.opt-cont70.thread_crit_edge ], [ %.pre704, %opt-cont78.opt-cont86.thread_crit_edge ]
  %format-arg-161991.1653656695 = phi {}* [ %vaarg74, %opt-arg92 ], [ %vaarg74, %opt-cont86.opt-init93_crit_edge ], [ %vaarg74, %opt-cont70.opt-cont78.thread_crit_edge ], [ undef, %opt-cont54.opt-cont62.thread_crit_edge ], [ undef, %opt-cont.opt-cont54.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont62.opt-cont70.thread_crit_edge ], [ %vaarg74, %opt-cont78.opt-cont86.thread_crit_edge ]
  %G162031.0651658693 = phi {}* [ %54, %opt-arg92 ], [ %54, %opt-cont86.opt-init93_crit_edge ], [ %54, %opt-cont70.opt-cont78.thread_crit_edge ], [ %.pre701, %opt-cont54.opt-cont62.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont54.thread_crit_edge ], [ %55, %opt-cont.thread ], [ %.pre702, %opt-cont62.opt-cont70.thread_crit_edge ], [ %54, %opt-cont78.opt-cont86.thread_crit_edge ]
  %format-arg-161989.1623626649660691 = phi {}* [ %vaarg58, %opt-arg92 ], [ %vaarg58, %opt-cont86.opt-init93_crit_edge ], [ %vaarg58, %opt-cont70.opt-cont78.thread_crit_edge ], [ %vaarg58, %opt-cont54.opt-cont62.thread_crit_edge ], [ undef, %opt-cont.opt-cont54.thread_crit_edge ], [ undef, %opt-cont.thread ], [ %vaarg58, %opt-cont62.opt-cont70.thread_crit_edge ], [ %vaarg58, %opt-cont78.opt-cont86.thread_crit_edge ]
  %G162033.0621628647662689 = phi {}* [ %54, %opt-arg92 ], [ %54, %opt-cont86.opt-init93_crit_edge ], [ %54, %opt-cont70.opt-cont78.thread_crit_edge ], [ %54, %opt-cont54.opt-cont62.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont54.thread_crit_edge ], [ %55, %opt-cont.thread ], [ %54, %opt-cont62.opt-cont70.thread_crit_edge ], [ %54, %opt-cont78.opt-cont86.thread_crit_edge ]
  %G162034.0612619630645664687 = phi {}* [ %54, %opt-arg92 ], [ %54, %opt-cont86.opt-init93_crit_edge ], [ %54, %opt-cont70.opt-cont78.thread_crit_edge ], [ %54, %opt-cont54.opt-cont62.thread_crit_edge ], [ %54, %opt-cont.opt-cont54.thread_crit_edge ], [ %55, %opt-cont.thread ], [ %54, %opt-cont62.opt-cont70.thread_crit_edge ], [ %54, %opt-cont78.opt-cont86.thread_crit_edge ]
  %format-arg-161988.1614617632643666685 = phi {}* [ %vaarg50, %opt-arg92 ], [ %vaarg50, %opt-cont86.opt-init93_crit_edge ], [ %vaarg50, %opt-cont70.opt-cont78.thread_crit_edge ], [ %vaarg50, %opt-cont54.opt-cont62.thread_crit_edge ], [ %vaarg50, %opt-cont.opt-cont54.thread_crit_edge ], [ undef, %opt-cont.thread ], [ %vaarg50, %opt-cont62.opt-cont70.thread_crit_edge ], [ %vaarg50, %opt-cont78.opt-cont86.thread_crit_edge ]
  %G162032.0634641668683 = phi {}* [ %54, %opt-arg92 ], [ %54, %opt-cont86.opt-init93_crit_edge ], [ %54, %opt-cont70.opt-cont78.thread_crit_edge ], [ %.pre701, %opt-cont54.opt-cont62.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont54.thread_crit_edge ], [ %55, %opt-cont.thread ], [ %54, %opt-cont62.opt-cont70.thread_crit_edge ], [ %54, %opt-cont78.opt-cont86.thread_crit_edge ]
  %format-arg-161990.1636639670681 = phi {}* [ %vaarg66, %opt-arg92 ], [ %vaarg66, %opt-cont86.opt-init93_crit_edge ], [ %vaarg66, %opt-cont70.opt-cont78.thread_crit_edge ], [ undef, %opt-cont54.opt-cont62.thread_crit_edge ], [ undef, %opt-cont.opt-cont54.thread_crit_edge ], [ undef, %opt-cont.thread ], [ %vaarg66, %opt-cont62.opt-cont70.thread_crit_edge ], [ %vaarg66, %opt-cont78.opt-cont86.thread_crit_edge ]
  %G162030.0672679 = phi {}* [ %54, %opt-arg92 ], [ %54, %opt-cont86.opt-init93_crit_edge ], [ %.pre703, %opt-cont70.opt-cont78.thread_crit_edge ], [ %.pre701, %opt-cont54.opt-cont62.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont54.thread_crit_edge ], [ %55, %opt-cont.thread ], [ %.pre702, %opt-cont62.opt-cont70.thread_crit_edge ], [ %54, %opt-cont78.opt-cont86.thread_crit_edge ]
  %format-arg-161992.1674677 = phi {}* [ %vaarg82, %opt-arg92 ], [ %vaarg82, %opt-cont86.opt-init93_crit_edge ], [ undef, %opt-cont70.opt-cont78.thread_crit_edge ], [ undef, %opt-cont54.opt-cont62.thread_crit_edge ], [ undef, %opt-cont.opt-cont54.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont62.opt-cont70.thread_crit_edge ], [ %vaarg82, %opt-cont78.opt-cont86.thread_crit_edge ]
  %G162028.0 = phi {}* [ %54, %opt-arg92 ], [ %.pre705, %opt-cont86.opt-init93_crit_edge ], [ %.pre703, %opt-cont70.opt-cont78.thread_crit_edge ], [ %.pre701, %opt-cont54.opt-cont62.thread_crit_edge ], [ %.pre, %opt-cont.opt-cont54.thread_crit_edge ], [ %55, %opt-cont.thread ], [ %.pre702, %opt-cont62.opt-cont70.thread_crit_edge ], [ %.pre704, %opt-cont78.opt-cont86.thread_crit_edge ]
  %format-arg-161994.1 = phi {}* [ %vaarg98, %opt-arg92 ], [ undef, %opt-cont86.opt-init93_crit_edge ], [ undef, %opt-cont70.opt-cont78.thread_crit_edge ], [ undef, %opt-cont54.opt-cont62.thread_crit_edge ], [ undef, %opt-cont.opt-cont54.thread_crit_edge ], [ undef, %opt-cont.thread ], [ undef, %opt-cont62.opt-cont70.thread_crit_edge ], [ undef, %opt-cont78.opt-cont86.thread_crit_edge ]
  %56 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %57 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %58 = icmp eq {}* %G162034.0612619630645664687, %57
  br i1 %58, label %tag13, label %tag11

normal-dest109:                                   ; preds = %tag1
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %60 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %62 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %64 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint = ptrtoint {}* %10 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %65 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %10, i64 7, {}* %59, {}* %60, {}* %61, {}* %62, {}* %63, {}* %64, {}* inttoptr (i64 56 to {}*))
          to label %normal-dest112 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest112:                                   ; preds = %normal-dest109
  %.elt591 = extractvalue { {}*, i64 } %65, 0
  %.elt593 = extractvalue { {}*, i64 } %65, 1
  %cond500 = icmp eq i64 %.elt593, 0
  %66 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161990.2 = select i1 %cond500, {}* %66, {}* %.elt591
  br label %tag30

normal-dest116:                                   ; preds = %tag3
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %68 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %69 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %70 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %71 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %72 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint117 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint118 = add i64 %ptrtoint117, 7
  %entry-point-addr119 = inttoptr i64 %entry-point-addr-uint118 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point120 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr119, align 8
  %73 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point120({}* %14, i64 7, {}* %67, {}* %68, {}* %69, {}* %70, {}* %71, {}* %72, {}* inttoptr (i64 100 to {}*))
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest123:                                   ; preds = %normal-dest116
  %.elt583 = extractvalue { {}*, i64 } %73, 0
  %.elt585 = extractvalue { {}*, i64 } %73, 1
  %cond498 = icmp eq i64 %.elt585, 0
  %74 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161992.2 = select i1 %cond498, {}* %74, {}* %.elt583
  br label %tag22

normal-dest130:                                   ; preds = %tag4
  %75 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %76 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %77 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %79 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %80 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint131 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint132 = add i64 %ptrtoint131, 7
  %entry-point-addr133 = inttoptr i64 %entry-point-addr-uint132 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point134 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr133, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point134({}* %16, i64 7, {}* %75, {}* %76, {}* %77, {}* %78, {}* %79, {}* %80, {}* inttoptr (i64 124 to {}*))
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest137:                                   ; preds = %normal-dest130
  %.elt579 = extractvalue { {}*, i64 } %81, 0
  %.elt581 = extractvalue { {}*, i64 } %81, 1
  %cond497 = icmp eq i64 %.elt581, 0
  %82 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161993.2 = select i1 %cond497, {}* %82, {}* %.elt579
  br label %tag2

normal-dest144:                                   ; preds = %tag6
  %ptrtoint145 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint146 = add i64 %ptrtoint145, 7
  %entry-point-addr147 = inttoptr i64 %entry-point-addr-uint146 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point148 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr147, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point148({}* %20, i64 2, {}* %I.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest151 unwind label %cleanup-lpad.loopexit

normal-dest151:                                   ; preds = %normal-dest144
  %.elt555 = extractvalue { {}*, i64 } %83, 0
  %.elt557 = extractvalue { {}*, i64 } %83, 1
  %cond = icmp eq i64 %.elt557, 0
  %84 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G164512.1 = select i1 %cond, {}* %84, {}* %.elt555
  br label %tag24

normal-dest158:                                   ; preds = %tag8
  %ptrtoint159 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint160 = add i64 %ptrtoint159, 7
  %entry-point-addr161 = inttoptr i64 %entry-point-addr-uint160 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point162 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr161, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point162({}* %22, i64 1, {}* %51, {}* null, {}* null, {}* null)
          to label %normal-dest165 unwind label %cleanup-lpad.loopexit

normal-dest165:                                   ; preds = %normal-dest158
  %.elt568 = extractvalue { {}*, i64 } %85, 0
  %.elt570 = extractvalue { {}*, i64 } %85, 1
  %cond495 = icmp eq i64 %.elt570, 0
  %86 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.1 = select i1 %cond495, {}* %86, {}* %.elt568
  br label %tag33.backedge

normal-dest180:                                   ; preds = %tag13
  %87 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %88 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %89 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %91 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %92 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint181 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint182 = add i64 %ptrtoint181, 7
  %entry-point-addr183 = inttoptr i64 %entry-point-addr-uint182 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point184 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr183, align 8
  %93 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point184({}* %28, i64 7, {}* %87, {}* %88, {}* %89, {}* %90, {}* %91, {}* %92, {}* inttoptr (i64 12 to {}*))
          to label %normal-dest187 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest187:                                   ; preds = %normal-dest180
  %.elt599 = extractvalue { {}*, i64 } %93, 0
  %.elt601 = extractvalue { {}*, i64 } %93, 1
  %cond502 = icmp eq i64 %.elt601, 0
  %94 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161988.2 = select i1 %cond502, {}* %94, {}* %.elt599
  br label %tag11

normal-dest194:                                   ; preds = %tag16
  %95 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %ptrtoint195 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint196 = add i64 %ptrtoint195, 7
  %entry-point-addr197 = inttoptr i64 %entry-point-addr-uint196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr197, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point198({}* %31, i64 8, {}* %vaarg, {}* %format-arg-161988.0, {}* %95, {}* %95, {}* inttoptr (i64 100 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest201 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest201:                                   ; preds = %normal-dest194
  %97 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %98 = invoke {}* @cc_safe_fdefinition({}* %97)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest207:                                   ; preds = %normal-dest201
  %99 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 366), align 16
  %ptrtoint208 = ptrtoint {}* %98 to i64
  %entry-point-addr-uint209 = add i64 %ptrtoint208, 7
  %entry-point-addr210 = inttoptr i64 %entry-point-addr-uint209 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point211 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr210, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point211({}* %98, i64 2, {}* %99, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest214 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest214:                                   ; preds = %normal-dest207
  %101 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %102 = invoke {}* @cc_safe_fdefinition({}* %101)
          to label %normal-dest224 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest224:                                   ; preds = %normal-dest214
  %103 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %104 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint225 = ptrtoint {}* %102 to i64
  %entry-point-addr-uint226 = add i64 %ptrtoint225, 7
  %entry-point-addr227 = inttoptr i64 %entry-point-addr-uint226 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point228 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr227, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point228({}* %102, i64 8, {}* %vaarg, {}* %format-arg-161989.0, {}* %103, {}* %104, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest231 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest231:                                   ; preds = %normal-dest224
  %106 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest237 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest237:                                   ; preds = %normal-dest231
  %108 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 367), align 8
  %ptrtoint238 = ptrtoint {}* %107 to i64
  %entry-point-addr-uint239 = add i64 %ptrtoint238, 7
  %entry-point-addr240 = inttoptr i64 %entry-point-addr-uint239 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point241 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr240, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point241({}* %107, i64 2, {}* %108, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest244 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest244:                                   ; preds = %normal-dest237
  %110 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %111 = invoke {}* @cc_safe_fdefinition({}* %110)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest254:                                   ; preds = %normal-dest244
  %112 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %113 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint255 = ptrtoint {}* %111 to i64
  %entry-point-addr-uint256 = add i64 %ptrtoint255, 7
  %entry-point-addr257 = inttoptr i64 %entry-point-addr-uint256 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point258 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr257, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point258({}* %111, i64 8, {}* %vaarg, {}* %format-arg-161990.0, {}* %112, {}* %113, {}* inttoptr (i64 24 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest261 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest261:                                   ; preds = %normal-dest254
  %115 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %116 = invoke {}* @cc_safe_fdefinition({}* %115)
          to label %normal-dest267 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest267:                                   ; preds = %normal-dest261
  %117 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 368), align 16
  %ptrtoint268 = ptrtoint {}* %116 to i64
  %entry-point-addr-uint269 = add i64 %ptrtoint268, 7
  %entry-point-addr270 = inttoptr i64 %entry-point-addr-uint269 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point271 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr270, align 8
  %118 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point271({}* %116, i64 2, {}* %117, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest274 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest274:                                   ; preds = %normal-dest267
  %119 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %120 = invoke {}* @cc_safe_fdefinition({}* %119)
          to label %normal-dest284 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest284:                                   ; preds = %normal-dest274
  %121 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %122 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint285 = ptrtoint {}* %120 to i64
  %entry-point-addr-uint286 = add i64 %ptrtoint285, 7
  %entry-point-addr287 = inttoptr i64 %entry-point-addr-uint286 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point288 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr287, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point288({}* %120, i64 8, {}* %vaarg, {}* %format-arg-161991.0, {}* %121, {}* %122, {}* inttoptr (i64 36 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest291 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest291:                                   ; preds = %normal-dest284
  %124 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %125 = invoke {}* @cc_safe_fdefinition({}* %124)
          to label %normal-dest297 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest297:                                   ; preds = %normal-dest291
  %126 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 369), align 8
  %ptrtoint298 = ptrtoint {}* %125 to i64
  %entry-point-addr-uint299 = add i64 %ptrtoint298, 7
  %entry-point-addr300 = inttoptr i64 %entry-point-addr-uint299 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point301 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr300, align 8
  %127 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point301({}* %125, i64 2, {}* %126, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest304 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest304:                                   ; preds = %normal-dest297
  %128 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %129 = invoke {}* @cc_safe_fdefinition({}* %128)
          to label %normal-dest314 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest314:                                   ; preds = %normal-dest304
  %130 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %131 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint315 = ptrtoint {}* %129 to i64
  %entry-point-addr-uint316 = add i64 %ptrtoint315, 7
  %entry-point-addr317 = inttoptr i64 %entry-point-addr-uint316 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point318 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr317, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point318({}* %129, i64 8, {}* %vaarg, {}* %format-arg-161992.0, {}* %130, {}* %131, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest321 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest321:                                   ; preds = %normal-dest314
  %133 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %134 = invoke {}* @cc_safe_fdefinition({}* %133)
          to label %normal-dest327 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest327:                                   ; preds = %normal-dest321
  %135 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 370), align 16
  %ptrtoint328 = ptrtoint {}* %134 to i64
  %entry-point-addr-uint329 = add i64 %ptrtoint328, 7
  %entry-point-addr330 = inttoptr i64 %entry-point-addr-uint329 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point331 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr330, align 8
  %136 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point331({}* %134, i64 2, {}* %135, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest334 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest334:                                   ; preds = %normal-dest327
  %137 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %138 = invoke {}* @cc_safe_fdefinition({}* %137)
          to label %normal-dest344 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest344:                                   ; preds = %normal-dest334
  %139 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %140 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint345 = ptrtoint {}* %138 to i64
  %entry-point-addr-uint346 = add i64 %ptrtoint345, 7
  %entry-point-addr347 = inttoptr i64 %entry-point-addr-uint346 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point348 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr347, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point348({}* %138, i64 8, {}* %vaarg, {}* %format-arg-161993.0, {}* %139, {}* %140, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest351 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest351:                                   ; preds = %normal-dest344
  %142 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %143 = invoke {}* @cc_safe_fdefinition({}* %142)
          to label %normal-dest357 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest357:                                   ; preds = %normal-dest351
  %144 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 371), align 8
  %ptrtoint358 = ptrtoint {}* %143 to i64
  %entry-point-addr-uint359 = add i64 %ptrtoint358, 7
  %entry-point-addr360 = inttoptr i64 %entry-point-addr-uint359 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point361 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr360, align 8
  %145 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point361({}* %143, i64 2, {}* %144, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest364 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest364:                                   ; preds = %normal-dest357
  %146 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %147 = invoke {}* @cc_safe_fdefinition({}* %146)
          to label %normal-dest374 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest374:                                   ; preds = %normal-dest364
  %148 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %149 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint375 = ptrtoint {}* %147 to i64
  %entry-point-addr-uint376 = add i64 %ptrtoint375, 7
  %entry-point-addr377 = inttoptr i64 %entry-point-addr-uint376 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point378 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr377, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point378({}* %147, i64 8, {}* %vaarg, {}* %format-arg-161994.0, {}* %148, {}* %149, {}* inttoptr (i64 60 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %tag33.preheader unwind label %cleanup-lpad.loopexit.split-lp

tag33.preheader:                                  ; preds = %normal-dest374
  br label %tag33

normal-dest391:                                   ; preds = %tag21
  %151 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %152 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %153 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %154 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %155 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %156 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint392 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint393 = add i64 %ptrtoint392, 7
  %entry-point-addr394 = inttoptr i64 %entry-point-addr-uint393 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point395 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr394, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point395({}* %36, i64 7, {}* %151, {}* %152, {}* %153, {}* %154, {}* %155, {}* %156, {}* inttoptr (i64 148 to {}*))
          to label %normal-dest398 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest398:                                   ; preds = %normal-dest391
  %.elt575 = extractvalue { {}*, i64 } %157, 0
  %.elt577 = extractvalue { {}*, i64 } %157, 1
  %cond496 = icmp eq i64 %.elt577, 0
  %158 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161994.2 = select i1 %cond496, {}* %158, {}* %.elt575
  br label %tag16

normal-dest405:                                   ; preds = %tag23
  %ptrtoint406 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint407 = add i64 %ptrtoint406, 7
  %entry-point-addr408 = inttoptr i64 %entry-point-addr-uint407 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point409 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr408, align 8
  %159 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point409({}* %40, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest412 unwind label %cleanup-lpad.loopexit

normal-dest412:                                   ; preds = %normal-dest405
  br i1 %fixnump-test446, label %tag40, label %tag19

normal-dest421:                                   ; preds = %tag28
  %160 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %161 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %162 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %163 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %164 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %165 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint422 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint423 = add i64 %ptrtoint422, 7
  %entry-point-addr424 = inttoptr i64 %entry-point-addr-uint423 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point425 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr424, align 8
  %166 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point425({}* %44, i64 7, {}* %160, {}* %161, {}* %162, {}* %163, {}* %164, {}* %165, {}* inttoptr (i64 76 to {}*))
          to label %normal-dest428 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest428:                                   ; preds = %normal-dest421
  %.elt587 = extractvalue { {}*, i64 } %166, 0
  %.elt589 = extractvalue { {}*, i64 } %166, 1
  %cond499 = icmp eq i64 %.elt589, 0
  %167 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161991.2 = select i1 %cond499, {}* %167, {}* %.elt587
  br label %tag9

normal-dest464:                                   ; preds = %tag19
  %ptrtoint465 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint466 = add i64 %ptrtoint465, 7
  %entry-point-addr467 = inttoptr i64 %entry-point-addr-uint466 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point468 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr467, align 8
  %168 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point468({}* %33, i64 2, {}* %I.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest471 unwind label %cleanup-lpad.loopexit

normal-dest471:                                   ; preds = %normal-dest464
  %.elt564 = extractvalue { {}*, i64 } %168, 0
  %.elt566 = extractvalue { {}*, i64 } %168, 1
  %cond494 = icmp eq i64 %.elt566, 0
  %169 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.2 = select i1 %cond494, {}* %169, {}* %.elt564
  br label %tag33.backedge

normal-dest480:                                   ; preds = %tag42
  %170 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %171 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %172 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %173 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %174 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %175 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint481 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint482 = add i64 %ptrtoint481, 7
  %entry-point-addr483 = inttoptr i64 %entry-point-addr-uint482 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point484 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr483, align 8
  %176 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point484({}* %53, i64 7, {}* %170, {}* %171, {}* %172, {}* %173, {}* %174, {}* %175, {}* inttoptr (i64 36 to {}*))
          to label %normal-dest487 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest487:                                   ; preds = %normal-dest480
  %.elt595 = extractvalue { {}*, i64 } %176, 0
  %.elt597 = extractvalue { {}*, i64 } %176, 1
  %cond501 = icmp eq i64 %.elt597, 0
  %177 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161989.2 = select i1 %cond501, {}* %177, {}* %.elt595
  br label %tag5
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.12"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !49 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.12^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.12^DESC" to %0*)) #7
          to label %.noexc65 unwind label %cleanup-lpad

.noexc65:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %tag9
  %14 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only = and i64 %14, 7
  %15 = icmp eq i64 %single-float-tag-only, 6
  br i1 %15, label %tag8, label %tag2

tag2:                                             ; preds = %tag9, %tag5, %header-check-br23, %tag3, %header-check-br, %tag
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest18 unwind label %cleanup-lpad

tag3:                                             ; preds = %header-check-br
  %ptrtoint24 = ptrtoint {}* %farg1 to i64
  %tag-only25 = and i64 %ptrtoint24, 7
  %test26 = icmp eq i64 %tag-only25, 1
  br i1 %test26, label %header-check-br23, label %tag2

tag4:                                             ; preds = %normal-dest50, %normal-dest44, %tag11, %normal-dest42, %normal-dest22
  %return-value.sroa.6.0 = phi i64 [ %.elt64, %normal-dest42 ], [ %.elt56, %normal-dest22 ], [ 1, %tag11 ], [ 1, %normal-dest44 ], [ 1, %normal-dest50 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt62, %normal-dest42 ], [ %.elt, %normal-dest22 ], [ %26, %tag11 ], [ %37, %normal-dest44 ], [ %40, %normal-dest50 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %18 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %19 = insertvalue { {}*, i64 } %18, i64 %return-value.sroa.6.0, 1
  ret { {}*, i64 } %19

tag5:                                             ; preds = %normal-dest
  %20 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only3060 = and i64 %20, 3
  %fixnump-test31 = icmp eq i64 %fixnum-tag-only3060, 0
  br i1 %fixnump-test31, label %tag11, label %tag2

tag7:                                             ; preds = %tag11
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest35 unwind label %cleanup-lpad

tag8:                                             ; preds = %tag
  %23 = invoke float @from_object_float({}* %farg0)
          to label %normal-dest43 unwind label %cleanup-lpad

tag9:                                             ; preds = %normal-dest
  %trunc = trunc i64 %28 to i3
  switch i3 %trunc, label %tag2 [
    i3 -2, label %tag
    i3 1, label %header-check-br
  ]

tag10:                                            ; preds = %header-check-br23
  %24 = invoke double @from_object_double({}* nonnull %farg0)
          to label %normal-dest49 unwind label %cleanup-lpad

tag11:                                            ; preds = %tag5
  %25 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %28, i64 %20)
  %result = extractvalue { i64, i1 } %25, 0
  %overflow = extractvalue { i64, i1 } %25, 1
  %26 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag7, label %tag4

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest50, %normal-dest49, %tag10, %normal-dest44, %normal-dest43, %tag8, %normal-dest35, %tag7, %normal-dest18, %tag2
  %27 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %27

normal-dest:                                      ; preds = %11
  %28 = ptrtoint {}* %farg0 to i64
  %fixnum-tag-only54 = and i64 %28, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only54, 0
  br i1 %fixnump-test, label %tag5, label %tag9

header-check-br:                                  ; preds = %tag9
  %irc-bit-cast16 = bitcast {}* %farg0 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast16, i64 -9
  %irc-bit-cast17 = bitcast i8* %gep to i64*
  %29 = load i64, i64* %irc-bit-cast17, align 8
  %30 = icmp eq i64 %29, 1325
  br i1 %30, label %tag3, label %tag2

normal-dest18:                                    ; preds = %tag2
  %ptrtoint19 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint19, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %normal-dest18
  %.elt = extractvalue { {}*, i64 } %31, 0
  %.elt56 = extractvalue { {}*, i64 } %31, 1
  br label %tag4

header-check-br23:                                ; preds = %tag3
  %irc-bit-cast27 = bitcast {}* %farg1 to i8*
  %gep28 = getelementptr inbounds i8, i8* %irc-bit-cast27, i64 -9
  %irc-bit-cast29 = bitcast i8* %gep28 to i64*
  %32 = load i64, i64* %irc-bit-cast29, align 8
  %33 = icmp eq i64 %32, 1325
  br i1 %33, label %tag10, label %tag2

normal-dest35:                                    ; preds = %tag7
  %ptrtoint36 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint37 = add i64 %ptrtoint36, 7
  %entry-point-addr38 = inttoptr i64 %entry-point-addr-uint37 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point39 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr38, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point39({}* %22, i64 1, {}* %26, {}* null, {}* null, {}* null)
          to label %normal-dest42 unwind label %cleanup-lpad

normal-dest42:                                    ; preds = %normal-dest35
  %.elt62 = extractvalue { {}*, i64 } %34, 0
  %.elt64 = extractvalue { {}*, i64 } %34, 1
  br label %tag4

normal-dest43:                                    ; preds = %tag8
  %35 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest44 unwind label %cleanup-lpad

normal-dest44:                                    ; preds = %normal-dest43
  %36 = fadd float %23, %35
  %37 = invoke {}* @to_object_float(float %36)
          to label %tag4 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag10
  %38 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest49
  %39 = fadd double %24, %38
  %40 = invoke {}* @to_object_double(double %39)
          to label %tag4 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.13"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !50 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %enough-args = icmp slt i64 %nargs, 1
  br i1 %enough-args, label %error, label %continue

tag:                                              ; preds = %normal-dest72, %process-rest-argument
  %9 = phi {}* [ %39, %process-rest-argument ], [ %48, %normal-dest72 ]
  %format-arg-161914.0 = phi {}* [ %format-arg-161914.1355358, %process-rest-argument ], [ %format-arg-161914.2, %normal-dest72 ]
  %10 = icmp eq {}* %G161935.0362, %9
  br i1 %10, label %tag30, label %tag35

tag7:                                             ; preds = %process-rest-argument
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest69 unwind label %cleanup-lpad.loopexit.split-lp

tag10:                                            ; preds = %normal-dest185
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest274 unwind label %cleanup-lpad.loopexit

tag11:                                            ; preds = %tag33, %tag19
  %15 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest77 unwind label %cleanup-lpad.loopexit.split-lp

tag12:                                            ; preds = %tag33
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %.pre367 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag19

tag16:                                            ; preds = %tag19
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest178 unwind label %cleanup-lpad.loopexit

tag17:                                            ; preds = %tag17.backedge, %tag20
  %I.0 = phi {}* [ null, %tag20 ], [ %I.0.be, %tag17.backedge ]
  %20 = ptrtoint {}* %I.0 to i64
  %fixnum-tag-only192292 = and i64 %20, 3
  %fixnump-test193 = icmp eq i64 %fixnum-tag-only192292, 0
  br i1 %fixnump-test193, label %tag33, label %tag21

tag19:                                            ; preds = %normal-dest209, %tag12
  %21 = phi {}* [ %.pre367, %tag12 ], [ %77, %normal-dest209 ]
  %G165370.0 = phi {}* [ %17, %tag12 ], [ %G165370.1, %normal-dest209 ]
  %22 = icmp eq {}* %G165370.0, %21
  br i1 %22, label %tag11, label %tag16

tag20:                                            ; preds = %normal-dest264, %tag35
  %format-arg-161916.0 = phi {}* [ %format-arg-161916.1, %tag35 ], [ %format-arg-161916.2, %normal-dest264 ]
  br label %tag17

tag21:                                            ; preds = %tag17
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 145), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest202 unwind label %cleanup-lpad.loopexit

tag22:                                            ; preds = %normal-dest185
  %25 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %20, i64 4)
  %result = extractvalue { i64, i1 } %25, 0
  %overflow = extractvalue { i64, i1 } %25, 1
  %26 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag24, label %tag17.backedge

tag17.backedge:                                   ; preds = %tag22, %normal-dest225, %normal-dest281
  %I.0.be = phi {}* [ %I.1, %normal-dest225 ], [ %I.2, %normal-dest281 ], [ %26, %tag22 ]
  br label %tag17

tag24:                                            ; preds = %tag22
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest218 unwind label %cleanup-lpad.loopexit

tag30:                                            ; preds = %tag
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest243 unwind label %cleanup-lpad.loopexit.split-lp

tag31:                                            ; preds = %tag35
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest257 unwind label %cleanup-lpad.loopexit.split-lp

tag33:                                            ; preds = %tag17
  %33 = icmp slt {}* %I.0, inttoptr (i64 8 to {}*)
  br i1 %33, label %tag12, label %tag11

tag35:                                            ; preds = %normal-dest250, %tag
  %34 = phi {}* [ %9, %tag ], [ %87, %normal-dest250 ]
  %format-arg-161915.0 = phi {}* [ %format-arg-161915.1364, %tag ], [ %format-arg-161915.2, %normal-dest250 ]
  %35 = icmp eq {}* %G161934.0, %34
  br i1 %35, label %tag31, label %tag20

cleanup-lpad.loopexit:                            ; preds = %tag16, %normal-dest178, %tag21, %normal-dest202, %tag24, %normal-dest218, %tag10, %normal-dest274
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %error, %tag7, %normal-dest69, %tag11, %normal-dest77, %normal-dest84, %normal-dest90, %normal-dest97, %normal-dest107, %normal-dest114, %normal-dest120, %normal-dest127, %normal-dest137, %normal-dest144, %normal-dest150, %tag30, %normal-dest243, %tag31, %normal-dest257
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

error:                                            ; preds = %entry
  invoke void @va_notEnoughArgumentsException(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @":::global-str-LAMBDA^COMMON-LISP^FN^^", i64 0, i64 0), i64 %nargs, i64 1)
          to label %normal-dest unwind label %cleanup-lpad.loopexit.split-lp

continue:                                         ; preds = %entry
  %rem-nargs = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-1 = add i64 %rem-nargs, -1
  store i64 %rem-nargs-1, i64* %"remaining-nargs*", align 8
  %vaarg = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %enough-given-args = icmp eq i64 %nargs, 1
  br i1 %enough-given-args, label %opt-cont.thread, label %opt-cont

normal-dest:                                      ; preds = %error
  call void @unreachableError()
  unreachable

opt-cont.thread:                                  ; preds = %continue
  %37 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont:                                         ; preds = %continue
  %rem-nargs40 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-141 = add i64 %rem-nargs40, -1
  store i64 %rem-nargs-141, i64* %"remaining-nargs*", align 8
  %vaarg42 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args47 = icmp sgt i64 %nargs, 2
  br i1 %enough-given-args47, label %opt-cont46, label %opt-cont.opt-cont46.thread_crit_edge

opt-cont.opt-cont46.thread_crit_edge:             ; preds = %opt-cont
  %.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-cont46:                                       ; preds = %opt-cont
  %rem-nargs48 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-149 = add i64 %rem-nargs48, -1
  store i64 %rem-nargs-149, i64* %"remaining-nargs*", align 8
  %vaarg50 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  %enough-given-args55 = icmp eq i64 %nargs, 3
  br i1 %enough-given-args55, label %opt-cont46.opt-init53_crit_edge, label %opt-arg52

opt-cont46.opt-init53_crit_edge:                  ; preds = %opt-cont46
  %.pre366 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %process-rest-argument

opt-arg52:                                        ; preds = %opt-cont46
  %rem-nargs56 = load i64, i64* %"remaining-nargs*", align 8
  %rem-nargs-157 = add i64 %rem-nargs56, -1
  store i64 %rem-nargs-157, i64* %"remaining-nargs*", align 8
  %vaarg58 = va_arg { i32, i32, i8*, i8* }* %"va-list*", {}*
  br label %process-rest-argument

process-rest-argument:                            ; preds = %opt-cont46.opt-init53_crit_edge, %opt-cont.opt-cont46.thread_crit_edge, %opt-cont.thread, %opt-arg52
  %format-arg-161915.1364 = phi {}* [ %vaarg50, %opt-arg52 ], [ %vaarg50, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G161935.0362 = phi {}* [ %36, %opt-arg52 ], [ %36, %opt-cont46.opt-init53_crit_edge ], [ %.pre, %opt-cont.opt-cont46.thread_crit_edge ], [ %37, %opt-cont.thread ]
  %G161936.0353360 = phi {}* [ %36, %opt-arg52 ], [ %36, %opt-cont46.opt-init53_crit_edge ], [ %36, %opt-cont.opt-cont46.thread_crit_edge ], [ %37, %opt-cont.thread ]
  %format-arg-161914.1355358 = phi {}* [ %vaarg42, %opt-arg52 ], [ %vaarg42, %opt-cont46.opt-init53_crit_edge ], [ %vaarg42, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %G161934.0 = phi {}* [ %36, %opt-arg52 ], [ %.pre366, %opt-cont46.opt-init53_crit_edge ], [ %.pre, %opt-cont.opt-cont46.thread_crit_edge ], [ %37, %opt-cont.thread ]
  %format-arg-161916.1 = phi {}* [ %vaarg58, %opt-arg52 ], [ undef, %opt-cont46.opt-init53_crit_edge ], [ undef, %opt-cont.opt-cont46.thread_crit_edge ], [ undef, %opt-cont.thread ]
  %38 = call {}* @cc_gatherRestArguments({ i32, i32, i8*, i8* }* nonnull %"va-list*", i64* nonnull %"remaining-nargs*")
  %39 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %40 = icmp eq {}* %G161936.0353360, %39
  br i1 %40, label %tag7, label %tag

normal-dest69:                                    ; preds = %tag7
  %41 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %42 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %43 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %44 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %45 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 348), align 16
  %46 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 7, {}* %41, {}* %42, {}* %43, {}* %44, {}* %45, {}* %46, {}* inttoptr (i64 28 to {}*))
          to label %normal-dest72 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest72:                                    ; preds = %normal-dest69
  %.elt344 = extractvalue { {}*, i64 } %47, 0
  %.elt346 = extractvalue { {}*, i64 } %47, 1
  %cond291 = icmp eq i64 %.elt346, 0
  %48 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161914.2 = select i1 %cond291, {}* %48, {}* %.elt344
  br label %tag

normal-dest77:                                    ; preds = %tag11
  %49 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %50 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint78 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint79 = add i64 %ptrtoint78, 7
  %entry-point-addr80 = inttoptr i64 %entry-point-addr-uint79 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point81 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr80, align 8
  %51 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point81({}* %16, i64 8, {}* %vaarg, {}* %format-arg-161914.0, {}* %49, {}* %50, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest84 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest84:                                    ; preds = %normal-dest77
  %52 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest90 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest90:                                    ; preds = %normal-dest84
  %54 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 349), align 8
  %ptrtoint91 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint92 = add i64 %ptrtoint91, 7
  %entry-point-addr93 = inttoptr i64 %entry-point-addr-uint92 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point94 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr93, align 8
  %55 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point94({}* %53, i64 2, {}* %54, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest97 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest97:                                    ; preds = %normal-dest90
  %56 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %57 = invoke {}* @cc_safe_fdefinition({}* %56)
          to label %normal-dest107 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest107:                                   ; preds = %normal-dest97
  %58 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %59 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint108 = ptrtoint {}* %57 to i64
  %entry-point-addr-uint109 = add i64 %ptrtoint108, 7
  %entry-point-addr110 = inttoptr i64 %entry-point-addr-uint109 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point111 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr110, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point111({}* %57, i64 8, {}* %vaarg, {}* %format-arg-161915.0, {}* %58, {}* %59, {}* inttoptr (i64 40 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest114:                                   ; preds = %normal-dest107
  %61 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 147), align 8
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest120 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest120:                                   ; preds = %normal-dest114
  %63 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 350), align 16
  %ptrtoint121 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint122 = add i64 %ptrtoint121, 7
  %entry-point-addr123 = inttoptr i64 %entry-point-addr-uint122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr123, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point124({}* %62, i64 2, {}* %63, {}* %vaarg, {}* null, {}* null)
          to label %normal-dest127 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest127:                                   ; preds = %normal-dest120
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 150), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest137:                                   ; preds = %normal-dest127
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %68 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %ptrtoint138 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint139 = add i64 %ptrtoint138, 7
  %entry-point-addr140 = inttoptr i64 %entry-point-addr-uint139 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point141 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr140, align 8
  %69 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point141({}* %66, i64 8, {}* %vaarg, {}* %format-arg-161916.0, {}* %67, {}* %68, {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 4 to {}*), {}* null, {}* inttoptr (i64 258 to {}*))
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest144:                                   ; preds = %normal-dest137
  %70 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 143), align 8
  %71 = invoke {}* @cc_safe_fdefinition({}* %70)
          to label %normal-dest150 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest150:                                   ; preds = %normal-dest144
  %ptrtoint151 = ptrtoint {}* %71 to i64
  %entry-point-addr-uint152 = add i64 %ptrtoint151, 7
  %entry-point-addr153 = inttoptr i64 %entry-point-addr-uint152 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point154 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr153, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point154({}* %71, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest157 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest157:                                   ; preds = %normal-dest150
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %73 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %74 = insertvalue { {}*, i64 } %73, i64 1, 1
  ret { {}*, i64 } %74

normal-dest178:                                   ; preds = %tag16
  %ptrtoint179 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint180 = add i64 %ptrtoint179, 7
  %entry-point-addr181 = inttoptr i64 %entry-point-addr-uint180 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point182 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr181, align 8
  %75 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point182({}* %19, i64 1, {}* %vaarg, {}* null, {}* null, {}* null)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit

normal-dest185:                                   ; preds = %normal-dest178
  br i1 %fixnump-test193, label %tag22, label %tag10

normal-dest202:                                   ; preds = %tag21
  %ptrtoint203 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint204 = add i64 %ptrtoint203, 7
  %entry-point-addr205 = inttoptr i64 %entry-point-addr-uint204 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point206 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr205, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point206({}* %24, i64 2, {}* %I.0, {}* inttoptr (i64 8 to {}*), {}* null, {}* null)
          to label %normal-dest209 unwind label %cleanup-lpad.loopexit

normal-dest209:                                   ; preds = %normal-dest202
  %.elt = extractvalue { {}*, i64 } %76, 0
  %.elt294 = extractvalue { {}*, i64 } %76, 1
  %cond = icmp eq i64 %.elt294, 0
  %77 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165370.1 = select i1 %cond, {}* %77, {}* %.elt
  br label %tag19

normal-dest218:                                   ; preds = %tag24
  %ptrtoint219 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint220 = add i64 %ptrtoint219, 7
  %entry-point-addr221 = inttoptr i64 %entry-point-addr-uint220 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point222 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr221, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point222({}* %28, i64 1, {}* %26, {}* null, {}* null, {}* null)
          to label %normal-dest225 unwind label %cleanup-lpad.loopexit

normal-dest225:                                   ; preds = %normal-dest218
  %.elt305 = extractvalue { {}*, i64 } %78, 0
  %.elt307 = extractvalue { {}*, i64 } %78, 1
  %cond288 = icmp eq i64 %.elt307, 0
  %79 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.1 = select i1 %cond288, {}* %79, {}* %.elt305
  br label %tag17.backedge

normal-dest243:                                   ; preds = %tag30
  %80 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %81 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %82 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %83 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %84 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 348), align 16
  %85 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint244 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint245 = add i64 %ptrtoint244, 7
  %entry-point-addr246 = inttoptr i64 %entry-point-addr-uint245 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point247 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr246, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point247({}* %30, i64 7, {}* %80, {}* %81, {}* %82, {}* %83, {}* %84, {}* %85, {}* inttoptr (i64 52 to {}*))
          to label %normal-dest250 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest250:                                   ; preds = %normal-dest243
  %.elt340 = extractvalue { {}*, i64 } %86, 0
  %.elt342 = extractvalue { {}*, i64 } %86, 1
  %cond290 = icmp eq i64 %.elt342, 0
  %87 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161915.2 = select i1 %cond290, {}* %87, {}* %.elt340
  br label %tag35

normal-dest257:                                   ; preds = %tag31
  %88 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  %89 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %91 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %92 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 348), align 16
  %93 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  %ptrtoint258 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint259 = add i64 %ptrtoint258, 7
  %entry-point-addr260 = inttoptr i64 %entry-point-addr-uint259 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point261 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr260, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point261({}* %32, i64 7, {}* %88, {}* %89, {}* %90, {}* %91, {}* %92, {}* %93, {}* inttoptr (i64 76 to {}*))
          to label %normal-dest264 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest264:                                   ; preds = %normal-dest257
  %.elt336 = extractvalue { {}*, i64 } %94, 0
  %.elt338 = extractvalue { {}*, i64 } %94, 1
  %cond289 = icmp eq i64 %.elt338, 0
  %95 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %format-arg-161916.2 = select i1 %cond289, {}* %95, {}* %.elt336
  br label %tag20

normal-dest274:                                   ; preds = %tag10
  %ptrtoint275 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint276 = add i64 %ptrtoint275, 7
  %entry-point-addr277 = inttoptr i64 %entry-point-addr-uint276 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point278 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr277, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point278({}* %14, i64 2, {}* %I.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest281 unwind label %cleanup-lpad.loopexit

normal-dest281:                                   ; preds = %normal-dest274
  %.elt301 = extractvalue { {}*, i64 } %96, 0
  %.elt303 = extractvalue { {}*, i64 } %96, 1
  %cond287 = icmp eq i64 %.elt303, 0
  %97 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %I.2 = select i1 %cond287, {}* %97, {}* %.elt301
  br label %tag17.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.14"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !51 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.14^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.14^DESC" to %0*)) #7
          to label %.noexc65 unwind label %cleanup-lpad

.noexc65:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %tag8
  %14 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only = and i64 %14, 7
  %15 = icmp eq i64 %single-float-tag-only, 6
  br i1 %15, label %tag5, label %tag4

tag2:                                             ; preds = %normal-dest33, %normal-dest26, %tag10, %normal-dest46, %normal-dest24
  %return-value.sroa.6.0 = phi i64 [ %.elt64, %normal-dest46 ], [ %.elt56, %normal-dest24 ], [ 1, %tag10 ], [ 1, %normal-dest26 ], [ 1, %normal-dest33 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt62, %normal-dest46 ], [ %.elt, %normal-dest24 ], [ %26, %tag10 ], [ %34, %normal-dest26 ], [ %37, %normal-dest33 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %16 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %17 = insertvalue { {}*, i64 } %16, i64 %return-value.sroa.6.0, 1
  ret { {}*, i64 } %17

tag4:                                             ; preds = %tag8, %header-check-br47, %tag11, %tag6, %header-check-br, %tag
  %18 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest20 unwind label %cleanup-lpad

tag5:                                             ; preds = %tag
  %20 = invoke float @from_object_float({}* %farg0)
          to label %normal-dest25 unwind label %cleanup-lpad

tag6:                                             ; preds = %normal-dest
  %21 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only3060 = and i64 %21, 3
  %fixnump-test31 = icmp eq i64 %fixnum-tag-only3060, 0
  br i1 %fixnump-test31, label %tag10, label %tag4

tag7:                                             ; preds = %header-check-br47
  %22 = invoke double @from_object_double({}* nonnull %farg0)
          to label %normal-dest32 unwind label %cleanup-lpad

tag8:                                             ; preds = %normal-dest
  %trunc = trunc i64 %28 to i3
  switch i3 %trunc, label %tag4 [
    i3 -2, label %tag
    i3 1, label %header-check-br
  ]

tag9:                                             ; preds = %tag10
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest39 unwind label %cleanup-lpad

tag10:                                            ; preds = %tag6
  %25 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %28, i64 %21)
  %result = extractvalue { i64, i1 } %25, 0
  %overflow = extractvalue { i64, i1 } %25, 1
  %26 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag9, label %tag2

tag11:                                            ; preds = %header-check-br
  %ptrtoint48 = ptrtoint {}* %farg1 to i64
  %tag-only49 = and i64 %ptrtoint48, 7
  %test50 = icmp eq i64 %tag-only49, 1
  br i1 %test50, label %header-check-br47, label %tag4

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest39, %tag9, %normal-dest33, %normal-dest32, %tag7, %normal-dest26, %normal-dest25, %tag5, %normal-dest20, %tag4
  %27 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %27

normal-dest:                                      ; preds = %11
  %28 = ptrtoint {}* %farg0 to i64
  %fixnum-tag-only54 = and i64 %28, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only54, 0
  br i1 %fixnump-test, label %tag6, label %tag8

header-check-br:                                  ; preds = %tag8
  %irc-bit-cast18 = bitcast {}* %farg0 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast18, i64 -9
  %irc-bit-cast19 = bitcast i8* %gep to i64*
  %29 = load i64, i64* %irc-bit-cast19, align 8
  %30 = icmp eq i64 %29, 1325
  br i1 %30, label %tag11, label %tag4

normal-dest20:                                    ; preds = %tag4
  %ptrtoint21 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint21, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest20
  %.elt = extractvalue { {}*, i64 } %31, 0
  %.elt56 = extractvalue { {}*, i64 } %31, 1
  br label %tag2

normal-dest25:                                    ; preds = %tag5
  %32 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest25
  %33 = fadd float %20, %32
  %34 = invoke {}* @to_object_float(float %33)
          to label %tag2 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %tag7
  %35 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest33 unwind label %cleanup-lpad

normal-dest33:                                    ; preds = %normal-dest32
  %36 = fadd double %22, %35
  %37 = invoke {}* @to_object_double(double %36)
          to label %tag2 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %tag9
  %ptrtoint40 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint41 = add i64 %ptrtoint40, 7
  %entry-point-addr42 = inttoptr i64 %entry-point-addr-uint41 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point43 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr42, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point43({}* %24, i64 1, {}* %26, {}* null, {}* null, {}* null)
          to label %normal-dest46 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %normal-dest39
  %.elt62 = extractvalue { {}*, i64 } %38, 0
  %.elt64 = extractvalue { {}*, i64 } %38, 1
  br label %tag2

header-check-br47:                                ; preds = %tag11
  %irc-bit-cast51 = bitcast {}* %farg1 to i8*
  %gep52 = getelementptr inbounds i8, i8* %irc-bit-cast51, i64 -9
  %irc-bit-cast53 = bitcast i8* %gep52 to i64*
  %39 = load i64, i64* %irc-bit-cast53, align 8
  %40 = icmp eq i64 %39, 1325
  br i1 %40, label %tag7, label %tag4
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitmessung.lisp^200^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !52 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitmessung.lisp^200^TOP-COMPILE-FILE^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G165865.0 = phi {}* [ %18, %header-check-br ], [ %G165865.1, %normal-dest17 ], [ %G165865.2, %normal-dest67 ]
  %13 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 534), align 16
  %ptrtoint20 = ptrtoint {}* %G165865.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G165865.0, i64 2, {}* %"closure->PRO-MERKE", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 534), align 16
  %"closure->PRO-MERKE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"PRO-MERKE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERKE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 9744, i64 200, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 24), align 16
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %22 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %23 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %24 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 533), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165865.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %27 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 45), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 536), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->PRO-MERKE", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 47), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 543), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->PRO-MERKE", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 52), align 16
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 800 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 534), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165865.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag2

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 30), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"PRO-MERKE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !53 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERKE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"PRO-MERKE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #7
          to label %.noexc749 unwind label %cleanup-lpad

.noexc749:                                        ; preds = %13
  unreachable

tag1:                                             ; preds = %tag74
  %14 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest141 unwind label %cleanup-lpad

tag3:                                             ; preds = %tag4
  %16 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %17 = icmp eq {}* %G165835.0, %16
  %.val771 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G166037.0 = select i1 %17, {}* %.val771, {}* %16
  %18 = icmp eq {}* %G166037.0, %16
  br i1 %18, label %tag12, label %tag26

tag4:                                             ; preds = %normal-dest492, %normal-dest416, %normal-dest340, %normal-dest246, %tag56
  %G165840.0 = phi {}* [ %64, %tag56 ], [ %G165840.1, %normal-dest246 ], [ %G165840.2, %normal-dest340 ], [ %205, %normal-dest416 ], [ %217, %normal-dest492 ]
  br i1 %consp-test401, label %tag126, label %tag3

tag12:                                            ; preds = %tag3
  %19 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest185 unwind label %cleanup-lpad

tag14:                                            ; preds = %tag87, %normal-dest214, %tag105
  %.in690 = phi {}* [ %104, %tag105 ], [ %.in, %normal-dest214 ], [ %.val785, %tag87 ]
  %21 = bitcast {}* %.in690 to i8*
  %22 = ptrtoint {}* %.in690 to i64
  %fixnum-tag-only667 = and i64 %22, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only667, 0
  br i1 %fixnump-test, label %tag116, label %tag65

tag16:                                            ; preds = %normal-dest583, %tag80, %normal-dest477
  %return-value.sroa.40.0 = phi i64 [ %.elt744, %normal-dest477 ], [ 1, %tag80 ], [ 1, %normal-dest583 ]
  %return-value.sroa.0.0 = phi {}* [ %.elt742, %normal-dest477 ], [ %G165843.0, %tag80 ], [ %G165843.0, %normal-dest583 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %23 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0, 0
  %24 = insertvalue { {}*, i64 } %23, i64 %return-value.sroa.40.0, 1
  ret { {}*, i64 } %24

tag19:                                            ; preds = %tag119
  %25 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only203714 = and i64 %25, 3
  %fixnump-test204 = icmp eq i64 %fixnum-tag-only203714, 0
  br i1 %fixnump-test204, label %tag56, label %tag30

tag20:                                            ; preds = %tag87
  %26 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest206 unwind label %cleanup-lpad

tag24:                                            ; preds = %header-check-br
  %28 = invoke double @from_object_double({}* nonnull %.in690)
          to label %normal-dest220 unwind label %cleanup-lpad

tag25:                                            ; preds = %header-check-br566
  %ptrtoint223 = ptrtoint {}* %farg2 to i64
  %tag-only224 = and i64 %ptrtoint223, 7
  %test = icmp eq i64 %tag-only224, 1
  br i1 %test, label %header-check-br, label %tag49

tag26:                                            ; preds = %tag3, %normal-dest192, %tag126
  %p.0 = phi {}* [ %136, %tag126 ], [ %p.1, %normal-dest192 ], [ %16, %tag3 ]
  %29 = ptrtoint {}* %p.0 to i64
  %tag-only227659 = and i64 %29, 7
  %consp-test228 = icmp eq i64 %tag-only227659, 3
  br i1 %consp-test228, label %tag31, label %tag54

tag28:                                            ; preds = %tag32
  %30 = icmp eq {}* %x166.0, %.val787
  %G166079.0 = select i1 %30, {}* %.val769, {}* %.val787
  %31 = icmp eq {}* %G166079.0, %.val787
  br i1 %31, label %tag124, label %tag119

tag30:                                            ; preds = %tag62, %header-check-br402, %tag48, %header-check-br280, %tag47, %tag19
  %32 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest238 unwind label %cleanup-lpad

tag31:                                            ; preds = %tag26
  %34 = add i64 %29, -3
  %memset2-dest = inttoptr i64 %34 to {}**
  store {}* %G165840.0, {}** %memset2-dest, align 8
  br label %tag77

tag32:                                            ; preds = %tag106, %normal-dest356, %tag117
  %.val787 = phi {}* [ %.val770.pre, %tag117 ], [ %188, %normal-dest356 ], [ %105, %tag106 ]
  %x166.0 = phi {}* [ %122, %tag117 ], [ %x166.1, %normal-dest356 ], [ %105, %tag106 ]
  %35 = ptrtoint {}* %x166.0 to i64
  %tag-only254652 = and i64 %35, 7
  %consp-test255 = icmp eq i64 %tag-only254652, 3
  %.val769 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G166086.0 = select i1 %consp-test255, {}* %.val769, {}* %.val787
  %36 = icmp eq {}* %G166086.0, %.val787
  br i1 %36, label %tag28, label %tag55

tag34:                                            ; preds = %tag97
  %37 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %38 = icmp eq {}* %x.0, %37
  %.val775 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165994.0 = select i1 %38, {}* %.val775, {}* %37
  %39 = icmp eq {}* %G165994.0, %37
  br i1 %39, label %tag67, label %tag78

tag38:                                            ; preds = %tag69
  %40 = add i64 %76, -3
  %41 = inttoptr i64 %40 to {}**
  %42 = load {}*, {}** %41, align 8
  br label %tag64

tag39:                                            ; preds = %tag97
  %43 = add i64 %97, 5
  %44 = inttoptr i64 %43 to {}**
  %45 = load {}*, {}** %44, align 8
  %.val778.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag78

tag41:                                            ; preds = %tag65
  %46 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only = and i64 %46, 7
  %47 = icmp eq i64 %single-float-tag-only, 6
  br i1 %47, label %tag96, label %tag49

tag42:                                            ; preds = %tag77
  %48 = add i64 %76, 5
  %49 = inttoptr i64 %48 to {}**
  %50 = load {}*, {}** %49, align 8
  br label %tag97

tag44:                                            ; preds = %tag110, %normal-dest554, %tag82
  %x263.0 = phi {}* [ %89, %tag82 ], [ %x263.1, %normal-dest554 ], [ %112, %tag110 ]
  %51 = ptrtoint {}* %x263.0 to i64
  %tag-only274673 = and i64 %51, 7
  %consp-test275 = icmp eq i64 %tag-only274673, 3
  br i1 %consp-test275, label %tag114, label %tag122

tag45:                                            ; preds = %normal-dest507, %normal-dest177, %tag53
  %G165837.0 = phi {}* [ %57, %tag53 ], [ %G165837.1, %normal-dest177 ], [ %G165837.2, %normal-dest507 ]
  br i1 %consp-test401, label %tag117, label %tag102

tag47:                                            ; preds = %header-check-br402
  %ptrtoint281 = ptrtoint {}* %farg1 to i64
  %tag-only282 = and i64 %ptrtoint281, 7
  %test283 = icmp eq i64 %tag-only282, 1
  br i1 %test283, label %header-check-br280, label %tag30

tag48:                                            ; preds = %tag62
  %52 = ptrtoint {}* %farg1 to i64
  %single-float-tag-only287 = and i64 %52, 7
  %53 = icmp eq i64 %single-float-tag-only287, 6
  br i1 %53, label %tag75, label %tag30

tag49:                                            ; preds = %tag65, %tag116, %header-check-br566, %tag41, %header-check-br, %tag25
  %54 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest289 unwind label %cleanup-lpad

tag52:                                            ; preds = %normal-dest495, %normal-dest436, %normal-dest296, %normal-dest221, %tag120
  %G165843.0 = phi {}* [ %128, %tag120 ], [ %167, %normal-dest221 ], [ %G165843.1, %normal-dest296 ], [ %G165843.2, %normal-dest436 ], [ %220, %normal-dest495 ]
  br i1 %consp-test401, label %tag82, label %tag110

tag53:                                            ; preds = %tag64
  %56 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %71, i64 4)
  %result = extractvalue { i64, i1 } %56, 0
  %overflow = extractvalue { i64, i1 } %56, 1
  %57 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag98, label %tag45

tag54:                                            ; preds = %tag26
  %58 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %59 = invoke {}* @cc_safe_fdefinition({}* %58)
          to label %normal-dest317 unwind label %cleanup-lpad

tag55:                                            ; preds = %tag32
  %60 = add i64 %35, -3
  %61 = inttoptr i64 %60 to {}**
  %62 = load {}*, {}** %61, align 8
  br label %tag119

tag56:                                            ; preds = %tag19
  %63 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %126, i64 %25)
  %result330 = extractvalue { i64, i1 } %63, 0
  %overflow331 = extractvalue { i64, i1 } %63, 1
  %64 = inttoptr i64 %result330 to {}*
  br i1 %overflow331, label %tag58, label %tag4

tag58:                                            ; preds = %tag56
  %65 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest333 unwind label %cleanup-lpad

tag60:                                            ; preds = %tag64
  %67 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 131), align 8
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest168 unwind label %cleanup-lpad

tag62:                                            ; preds = %tag119
  %trunc = trunc i64 %126 to i3
  switch i3 %trunc, label %tag30 [
    i3 -2, label %tag48
    i3 1, label %header-check-br402
  ]

tag63:                                            ; preds = %tag106
  %69 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest349 unwind label %cleanup-lpad

tag64:                                            ; preds = %normal-dest540, %tag38
  %x183.0 = phi {}* [ %42, %tag38 ], [ %x183.1, %normal-dest540 ]
  %71 = ptrtoint {}* %x183.0 to i64
  %fixnum-tag-only363641 = and i64 %71, 3
  %fixnump-test364 = icmp eq i64 %fixnum-tag-only363641, 0
  br i1 %fixnump-test364, label %tag53, label %tag60

tag65:                                            ; preds = %tag14
  %trunc779 = trunc i64 %22 to i3
  switch i3 %trunc779, label %tag49 [
    i3 -2, label %tag41
    i3 1, label %header-check-br566
  ]

tag66:                                            ; preds = %tag122
  %72 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %73 = invoke {}* @cc_safe_fdefinition({}* %72)
          to label %normal-dest367 unwind label %cleanup-lpad

tag67:                                            ; preds = %tag34
  %74 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest382 unwind label %cleanup-lpad

tag69:                                            ; preds = %normal-dest137
  %76 = ptrtoint {}* %G165835.0 to i64
  %tag-only400640 = and i64 %76, 7
  %consp-test401 = icmp eq i64 %tag-only400640, 3
  %.val = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G166159.0 = select i1 %consp-test401, {}* %.val, {}* %143
  %77 = icmp eq {}* %G166159.0, %143
  br i1 %77, label %tag107, label %tag38

tag74:                                            ; preds = %tag77
  %78 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %79 = icmp eq {}* %G165835.0, %78
  %.val773 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G166010.0 = select i1 %79, {}* %.val773, {}* %78
  %80 = icmp eq {}* %G166010.0, %78
  br i1 %80, label %tag1, label %tag97

tag75:                                            ; preds = %tag48
  %81 = invoke float @from_object_float({}* %.in713)
          to label %normal-dest415 unwind label %cleanup-lpad

tag77:                                            ; preds = %normal-dest317, %tag31
  br i1 %consp-test401, label %tag42, label %tag74

tag78:                                            ; preds = %tag34, %normal-dest389, %tag39
  %.val785 = phi {}* [ %.val778.pre, %tag39 ], [ %200, %normal-dest389 ], [ %37, %tag34 ]
  %x269.0 = phi {}* [ %45, %tag39 ], [ %x269.1, %normal-dest389 ], [ %37, %tag34 ]
  %82 = ptrtoint {}* %x269.0 to i64
  %tag-only425666 = and i64 %82, 7
  %consp-test426 = icmp eq i64 %tag-only425666, 3
  %.val777 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165981.0 = select i1 %consp-test426, {}* %.val777, {}* %.val785
  %83 = icmp eq {}* %G165981.0, %.val785
  br i1 %83, label %tag87, label %tag105

tag79:                                            ; preds = %tag120
  %84 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest428 unwind label %cleanup-lpad

tag80:                                            ; preds = %tag93
  %86 = add i64 %94, -3
  %memset2-dest444 = inttoptr i64 %86 to {}**
  store {}* %G165843.0, {}** %memset2-dest444, align 8
  br label %tag16

tag82:                                            ; preds = %tag52
  %87 = add i64 %76, 5
  %88 = inttoptr i64 %87 to {}**
  %89 = load {}*, {}** %88, align 8
  br label %tag44

tag83:                                            ; preds = %normal-dest137
  %90 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %91 = invoke {}* @cc_safe_symbol_value({}* %90)
          to label %normal-dest454 unwind label %cleanup-lpad

tag87:                                            ; preds = %tag78
  %92 = icmp eq {}* %x269.0, %.val785
  %G165974.0 = select i1 %92, {}* %.val777, {}* %.val785
  %93 = icmp eq {}* %G165974.0, %.val785
  br i1 %93, label %tag20, label %tag14

tag93:                                            ; preds = %tag122, %normal-dest374, %tag114
  %p375.0 = phi {}* [ %117, %tag114 ], [ %p375.1, %normal-dest374 ], [ %129, %tag122 ]
  %94 = ptrtoint {}* %p375.0 to i64
  %tag-only488674 = and i64 %94, 7
  %consp-test489 = icmp eq i64 %tag-only488674, 3
  br i1 %consp-test489, label %tag80, label %tag118

tag95:                                            ; preds = %header-check-br280
  %95 = invoke double @from_object_double({}* nonnull %.in713)
          to label %normal-dest491 unwind label %cleanup-lpad

tag96:                                            ; preds = %tag41
  %96 = invoke float @from_object_float({}* %.in690)
          to label %normal-dest494 unwind label %cleanup-lpad

tag97:                                            ; preds = %tag74, %normal-dest148, %tag42
  %x.0 = phi {}* [ %50, %tag42 ], [ %x.1, %normal-dest148 ], [ %78, %tag74 ]
  %97 = ptrtoint {}* %x.0 to i64
  %tag-only497665 = and i64 %97, 7
  %consp-test498 = icmp eq i64 %tag-only497665, 3
  br i1 %consp-test498, label %tag39, label %tag34

tag98:                                            ; preds = %tag53
  %98 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 129), align 8
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest500 unwind label %cleanup-lpad

tag102:                                           ; preds = %tag45
  %100 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest514 unwind label %cleanup-lpad

tag105:                                           ; preds = %tag78
  %102 = add i64 %82, -3
  %103 = inttoptr i64 %102 to {}**
  %104 = load {}*, {}** %103, align 8
  br label %tag14

tag106:                                           ; preds = %normal-dest514
  %105 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %106 = icmp eq {}* %G165835.0, %105
  %.val767 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G166099.0 = select i1 %106, {}* %.val767, {}* %105
  %107 = icmp eq {}* %G166099.0, %105
  br i1 %107, label %tag63, label %tag32

tag107:                                           ; preds = %tag69
  %108 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest533 unwind label %cleanup-lpad

tag109:                                           ; preds = %tag110
  %110 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %111 = invoke {}* @cc_safe_fdefinition({}* %110)
          to label %normal-dest547 unwind label %cleanup-lpad

tag110:                                           ; preds = %tag52
  %112 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %113 = icmp eq {}* %G165835.0, %112
  %.val780 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165932.0 = select i1 %113, {}* %.val780, {}* %112
  %114 = icmp eq {}* %G165932.0, %112
  br i1 %114, label %tag109, label %tag44

tag114:                                           ; preds = %tag44
  %115 = add i64 %51, 5
  %116 = inttoptr i64 %115 to {}**
  %117 = load {}*, {}** %116, align 8
  br label %tag93

tag116:                                           ; preds = %tag14
  %118 = ptrtoint {}* %farg2 to i64
  %fixnum-tag-only580691 = and i64 %118, 3
  %fixnump-test581 = icmp eq i64 %fixnum-tag-only580691, 0
  br i1 %fixnump-test581, label %tag120, label %tag49

tag117:                                           ; preds = %tag45
  %119 = add i64 %76, -3
  %memset2-dest266 = inttoptr i64 %119 to {}**
  store {}* %G165837.0, {}** %memset2-dest266, align 8
  %120 = add i64 %76, 5
  %121 = inttoptr i64 %120 to {}**
  %122 = load {}*, {}** %121, align 8
  %.val770.pre = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  br label %tag32

tag118:                                           ; preds = %tag93
  %123 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %124 = invoke {}* @cc_safe_fdefinition({}* %123)
          to label %normal-dest583 unwind label %cleanup-lpad

tag119:                                           ; preds = %tag28, %normal-dest616, %tag55
  %.in713 = phi {}* [ %62, %tag55 ], [ %.in712, %normal-dest616 ], [ %.val787, %tag28 ]
  %125 = bitcast {}* %.in713 to i8*
  %126 = ptrtoint {}* %.in713 to i64
  %fixnum-tag-only596653 = and i64 %126, 3
  %fixnump-test597 = icmp eq i64 %fixnum-tag-only596653, 0
  br i1 %fixnump-test597, label %tag19, label %tag62

tag120:                                           ; preds = %tag116
  %127 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %22, i64 %118)
  %result598 = extractvalue { i64, i1 } %127, 0
  %overflow599 = extractvalue { i64, i1 } %127, 1
  %128 = inttoptr i64 %result598 to {}*
  br i1 %overflow599, label %tag79, label %tag52

tag122:                                           ; preds = %tag44
  %129 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %130 = icmp eq {}* %x263.0, %129
  %.val782 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 13), align 8
  %G165916.0 = select i1 %130, {}* %.val782, {}* %129
  %131 = icmp eq {}* %G165916.0, %129
  br i1 %131, label %tag66, label %tag93

tag124:                                           ; preds = %tag28
  %132 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %133 = invoke {}* @cc_safe_fdefinition({}* %132)
          to label %normal-dest609 unwind label %cleanup-lpad

tag126:                                           ; preds = %tag4
  %134 = add i64 %76, 5
  %135 = inttoptr i64 %134 to {}**
  %136 = load {}*, {}** %135, align 8
  br label %tag26

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest609, %tag124, %normal-dest583, %tag118, %normal-dest547, %tag109, %normal-dest533, %tag107, %normal-dest514, %tag102, %normal-dest500, %tag98, %normal-dest495, %normal-dest494, %tag96, %normal-dest492, %normal-dest491, %tag95, %normal-dest470, %normal-dest463, %normal-dest456, %normal-dest454, %tag83, %normal-dest428, %tag79, %normal-dest416, %normal-dest415, %tag75, %normal-dest382, %tag67, %normal-dest367, %tag66, %normal-dest349, %tag63, %normal-dest333, %tag58, %normal-dest317, %tag54, %normal-dest289, %tag49, %normal-dest238, %tag30, %normal-dest221, %normal-dest220, %tag24, %normal-dest206, %tag20, %normal-dest185, %tag12, %normal-dest168, %tag60, %normal-dest141, %tag1, %normal-dest134, %normal-dest133, %normal-dest
  %137 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %137

normal-dest:                                      ; preds = %11
  %138 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 402), align 16
  %139 = invoke {}* @cc_safe_fdefinition({}* %138)
          to label %normal-dest133 unwind label %cleanup-lpad

normal-dest133:                                   ; preds = %normal-dest
  %140 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 4), align 16
  %141 = invoke {}* @cc_safe_symbol_value({}* %140)
          to label %normal-dest134 unwind label %cleanup-lpad

normal-dest134:                                   ; preds = %normal-dest133
  %ptrtoint = ptrtoint {}* %139 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %142 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %139, i64 2, {}* %farg0, {}* %141, {}* null, {}* null)
          to label %normal-dest137 unwind label %cleanup-lpad

normal-dest137:                                   ; preds = %normal-dest134
  %.elt = extractvalue { {}*, i64 } %142, 0
  %.elt639 = extractvalue { {}*, i64 } %142, 1
  %cond = icmp eq i64 %.elt639, 0
  %143 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165835.0 = select i1 %cond, {}* %143, {}* %.elt
  %144 = icmp eq {}* %G165835.0, %143
  br i1 %144, label %tag83, label %tag69

normal-dest141:                                   ; preds = %tag1
  %145 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %146 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %147 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %148 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint142 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint143 = add i64 %ptrtoint142, 7
  %entry-point-addr144 = inttoptr i64 %entry-point-addr-uint143 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point145 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr144, align 8
  %149 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point145({}* %15, i64 5, {}* %145, {}* %146, {}* %G165835.0, {}* %147, {}* %148)
          to label %normal-dest148 unwind label %cleanup-lpad

normal-dest148:                                   ; preds = %normal-dest141
  %.elt705 = extractvalue { {}*, i64 } %149, 0
  %.elt707 = extractvalue { {}*, i64 } %149, 1
  %cond630 = icmp eq i64 %.elt707, 0
  %150 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x.1 = select i1 %cond630, {}* %150, {}* %.elt705
  br label %tag97

normal-dest168:                                   ; preds = %tag60
  %ptrtoint171 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint172 = add i64 %ptrtoint171, 7
  %entry-point-addr173 = inttoptr i64 %entry-point-addr-uint172 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point174 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr173, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point174({}* %68, i64 2, {}* %x183.0, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest177 unwind label %cleanup-lpad

normal-dest177:                                   ; preds = %normal-dest168
  %.elt643 = extractvalue { {}*, i64 } %151, 0
  %.elt645 = extractvalue { {}*, i64 } %151, 1
  %cond622 = icmp eq i64 %.elt645, 0
  %152 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165837.1 = select i1 %cond622, {}* %152, {}* %.elt643
  br label %tag45

normal-dest185:                                   ; preds = %tag12
  %153 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %154 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %155 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %156 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint186 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint187 = add i64 %ptrtoint186, 7
  %entry-point-addr188 = inttoptr i64 %entry-point-addr-uint187 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point189 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr188, align 8
  %157 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point189({}* %20, i64 5, {}* %153, {}* %154, {}* %G165835.0, {}* %155, {}* %156)
          to label %normal-dest192 unwind label %cleanup-lpad

normal-dest192:                                   ; preds = %normal-dest185
  %.elt709 = extractvalue { {}*, i64 } %157, 0
  %.elt711 = extractvalue { {}*, i64 } %157, 1
  %cond631 = icmp eq i64 %.elt711, 0
  %158 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %p.1 = select i1 %cond631, {}* %158, {}* %.elt709
  br label %tag26

normal-dest206:                                   ; preds = %tag20
  %159 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %160 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %161 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %162 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint208 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint209 = add i64 %ptrtoint208, 7
  %entry-point-addr210 = inttoptr i64 %entry-point-addr-uint209 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point211 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr210, align 8
  %163 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point211({}* %27, i64 5, {}* %159, {}* %160, {}* %x269.0, {}* %161, {}* %162)
          to label %normal-dest214 unwind label %cleanup-lpad

normal-dest214:                                   ; preds = %normal-dest206
  %.elt697 = extractvalue { {}*, i64 } %163, 0
  %.elt699 = extractvalue { {}*, i64 } %163, 1
  %cond628 = icmp eq i64 %.elt699, 0
  %164 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in = select i1 %cond628, {}* %164, {}* %.elt697
  br label %tag14

normal-dest220:                                   ; preds = %tag24
  %165 = invoke double @from_object_double({}* nonnull %farg2)
          to label %normal-dest221 unwind label %cleanup-lpad

normal-dest221:                                   ; preds = %normal-dest220
  %166 = fadd double %28, %165
  %167 = invoke {}* @to_object_double(double %166)
          to label %tag52 unwind label %cleanup-lpad

header-check-br:                                  ; preds = %tag25
  %irc-bit-cast225 = bitcast {}* %farg2 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast225, i64 -9
  %irc-bit-cast226 = bitcast i8* %gep to i64*
  %168 = load i64, i64* %irc-bit-cast226, align 8
  %169 = icmp eq i64 %168, 1325
  br i1 %169, label %tag24, label %tag49

normal-dest238:                                   ; preds = %tag30
  %ptrtoint240 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint241 = add i64 %ptrtoint240, 7
  %entry-point-addr242 = inttoptr i64 %entry-point-addr-uint241 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point243 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr242, align 8
  %170 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point243({}* %33, i64 2, {}* %.in713, {}* %farg1, {}* null, {}* null)
          to label %normal-dest246 unwind label %cleanup-lpad

normal-dest246:                                   ; preds = %normal-dest238
  %.elt655 = extractvalue { {}*, i64 } %170, 0
  %.elt657 = extractvalue { {}*, i64 } %170, 1
  %cond623 = icmp eq i64 %.elt657, 0
  %171 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165840.1 = select i1 %cond623, {}* %171, {}* %.elt655
  br label %tag4

header-check-br280:                               ; preds = %tag47
  %irc-bit-cast284 = bitcast {}* %farg1 to i8*
  %gep285 = getelementptr inbounds i8, i8* %irc-bit-cast284, i64 -9
  %irc-bit-cast286 = bitcast i8* %gep285 to i64*
  %172 = load i64, i64* %irc-bit-cast286, align 8
  %173 = icmp eq i64 %172, 1325
  br i1 %173, label %tag95, label %tag30

normal-dest289:                                   ; preds = %tag49
  %ptrtoint290 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint291 = add i64 %ptrtoint290, 7
  %entry-point-addr292 = inttoptr i64 %entry-point-addr-uint291 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point293 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr292, align 8
  %174 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point293({}* %55, i64 2, {}* %.in690, {}* %farg2, {}* null, {}* null)
          to label %normal-dest296 unwind label %cleanup-lpad

normal-dest296:                                   ; preds = %normal-dest289
  %.elt669 = extractvalue { {}*, i64 } %174, 0
  %.elt671 = extractvalue { {}*, i64 } %174, 1
  %cond624 = icmp eq i64 %.elt671, 0
  %175 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165843.1 = select i1 %cond624, {}* %175, {}* %.elt669
  br label %tag52

normal-dest317:                                   ; preds = %tag54
  %176 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %177 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %178 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %179 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %ptrtoint318 = ptrtoint {}* %59 to i64
  %entry-point-addr-uint319 = add i64 %ptrtoint318, 7
  %entry-point-addr320 = inttoptr i64 %entry-point-addr-uint319 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point321 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr320, align 8
  %180 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point321({}* %59, i64 5, {}* %176, {}* %177, {}* %p.0, {}* %178, {}* %179)
          to label %tag77 unwind label %cleanup-lpad

normal-dest333:                                   ; preds = %tag58
  %ptrtoint334 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint335 = add i64 %ptrtoint334, 7
  %entry-point-addr336 = inttoptr i64 %entry-point-addr-uint335 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point337 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr336, align 8
  %181 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point337({}* %66, i64 1, {}* %64, {}* null, {}* null, {}* null)
          to label %normal-dest340 unwind label %cleanup-lpad

normal-dest340:                                   ; preds = %normal-dest333
  %.elt716 = extractvalue { {}*, i64 } %181, 0
  %.elt718 = extractvalue { {}*, i64 } %181, 1
  %cond632 = icmp eq i64 %.elt718, 0
  %182 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165840.2 = select i1 %cond632, {}* %182, {}* %.elt716
  br label %tag4

normal-dest349:                                   ; preds = %tag63
  %183 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %184 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %185 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %186 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint350 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint351 = add i64 %ptrtoint350, 7
  %entry-point-addr352 = inttoptr i64 %entry-point-addr-uint351 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point353 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr352, align 8
  %187 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point353({}* %70, i64 5, {}* %183, {}* %184, {}* %G165835.0, {}* %185, {}* %186)
          to label %normal-dest356 unwind label %cleanup-lpad

normal-dest356:                                   ; preds = %normal-dest349
  %.elt724 = extractvalue { {}*, i64 } %187, 0
  %.elt726 = extractvalue { {}*, i64 } %187, 1
  %cond634 = icmp eq i64 %.elt726, 0
  %188 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x166.1 = select i1 %cond634, {}* %188, {}* %.elt724
  br label %tag32

normal-dest367:                                   ; preds = %tag66
  %189 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %190 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %191 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %192 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint368 = ptrtoint {}* %73 to i64
  %entry-point-addr-uint369 = add i64 %ptrtoint368, 7
  %entry-point-addr370 = inttoptr i64 %entry-point-addr-uint369 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point371 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr370, align 8
  %193 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point371({}* %73, i64 5, {}* %189, {}* %190, {}* %x263.0, {}* %191, {}* %192)
          to label %normal-dest374 unwind label %cleanup-lpad

normal-dest374:                                   ; preds = %normal-dest367
  %.elt683 = extractvalue { {}*, i64 } %193, 0
  %.elt685 = extractvalue { {}*, i64 } %193, 1
  %cond625 = icmp eq i64 %.elt685, 0
  %194 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %p375.1 = select i1 %cond625, {}* %194, {}* %.elt683
  br label %tag93

normal-dest382:                                   ; preds = %tag67
  %195 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %196 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %197 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %198 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint383 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint384 = add i64 %ptrtoint383, 7
  %entry-point-addr385 = inttoptr i64 %entry-point-addr-uint384 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point386 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr385, align 8
  %199 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point386({}* %75, i64 5, {}* %195, {}* %196, {}* %x.0, {}* %197, {}* %198)
          to label %normal-dest389 unwind label %cleanup-lpad

normal-dest389:                                   ; preds = %normal-dest382
  %.elt701 = extractvalue { {}*, i64 } %199, 0
  %.elt703 = extractvalue { {}*, i64 } %199, 1
  %cond629 = icmp eq i64 %.elt703, 0
  %200 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x269.1 = select i1 %cond629, {}* %200, {}* %.elt701
  br label %tag78

header-check-br402:                               ; preds = %tag62
  %gep407 = getelementptr inbounds i8, i8* %125, i64 -9
  %irc-bit-cast408 = bitcast i8* %gep407 to i64*
  %201 = load i64, i64* %irc-bit-cast408, align 8
  %202 = icmp eq i64 %201, 1325
  br i1 %202, label %tag47, label %tag30

normal-dest415:                                   ; preds = %tag75
  %203 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest416 unwind label %cleanup-lpad

normal-dest416:                                   ; preds = %normal-dest415
  %204 = fadd float %81, %203
  %205 = invoke {}* @to_object_float(float %204)
          to label %tag4 unwind label %cleanup-lpad

normal-dest428:                                   ; preds = %tag79
  %ptrtoint430 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint431 = add i64 %ptrtoint430, 7
  %entry-point-addr432 = inttoptr i64 %entry-point-addr-uint431 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point433 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr432, align 8
  %206 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point433({}* %85, i64 1, {}* %128, {}* null, {}* null, {}* null)
          to label %normal-dest436 unwind label %cleanup-lpad

normal-dest436:                                   ; preds = %normal-dest428
  %.elt693 = extractvalue { {}*, i64 } %206, 0
  %.elt695 = extractvalue { {}*, i64 } %206, 1
  %cond627 = icmp eq i64 %.elt695, 0
  %207 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165843.2 = select i1 %cond627, {}* %207, {}* %.elt693
  br label %tag52

normal-dest454:                                   ; preds = %tag83
  %208 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %209 = invoke {}* @cc_safe_fdefinition({}* %208)
          to label %normal-dest456 unwind label %cleanup-lpad

normal-dest456:                                   ; preds = %normal-dest454
  %ptrtoint457 = ptrtoint {}* %209 to i64
  %entry-point-addr-uint458 = add i64 %ptrtoint457, 7
  %entry-point-addr459 = inttoptr i64 %entry-point-addr-uint458 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point460 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr459, align 8
  %210 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point460({}* %209, i64 3, {}* inttoptr (i64 4 to {}*), {}* %farg1, {}* %farg2, {}* null)
          to label %normal-dest463 unwind label %cleanup-lpad

normal-dest463:                                   ; preds = %normal-dest456
  %211 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %212 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 64), align 16
  %213 = invoke {}* @cc_safe_fdefinition({}* %212)
          to label %normal-dest470 unwind label %cleanup-lpad

normal-dest470:                                   ; preds = %normal-dest463
  %.elt740 = extractvalue { {}*, i64 } %210, 1
  %cond637 = icmp eq i64 %.elt740, 0
  %.elt738 = extractvalue { {}*, i64 } %210, 0
  %G165847165848.0 = select i1 %cond637, {}* %211, {}* %.elt738
  %ptrtoint471 = ptrtoint {}* %213 to i64
  %entry-point-addr-uint472 = add i64 %ptrtoint471, 7
  %entry-point-addr473 = inttoptr i64 %entry-point-addr-uint472 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point474 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr473, align 8
  %214 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point474({}* %213, i64 3, {}* %91, {}* %farg0, {}* %G165847165848.0, {}* null)
          to label %normal-dest477 unwind label %cleanup-lpad

normal-dest477:                                   ; preds = %normal-dest470
  %.elt742 = extractvalue { {}*, i64 } %214, 0
  %.elt744 = extractvalue { {}*, i64 } %214, 1
  br label %tag16

normal-dest491:                                   ; preds = %tag95
  %215 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest492 unwind label %cleanup-lpad

normal-dest492:                                   ; preds = %normal-dest491
  %216 = fadd double %95, %215
  %217 = invoke {}* @to_object_double(double %216)
          to label %tag4 unwind label %cleanup-lpad

normal-dest494:                                   ; preds = %tag96
  %218 = invoke float @from_object_float({}* %farg2)
          to label %normal-dest495 unwind label %cleanup-lpad

normal-dest495:                                   ; preds = %normal-dest494
  %219 = fadd float %96, %218
  %220 = invoke {}* @to_object_float(float %219)
          to label %tag52 unwind label %cleanup-lpad

normal-dest500:                                   ; preds = %tag98
  %ptrtoint501 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint502 = add i64 %ptrtoint501, 7
  %entry-point-addr503 = inttoptr i64 %entry-point-addr-uint502 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point504 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr503, align 8
  %221 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point504({}* %99, i64 1, {}* %57, {}* null, {}* null, {}* null)
          to label %normal-dest507 unwind label %cleanup-lpad

normal-dest507:                                   ; preds = %normal-dest500
  %.elt730 = extractvalue { {}*, i64 } %221, 0
  %.elt732 = extractvalue { {}*, i64 } %221, 1
  %cond635 = icmp eq i64 %.elt732, 0
  %222 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %G165837.2 = select i1 %cond635, {}* %222, {}* %.elt730
  br label %tag45

normal-dest514:                                   ; preds = %tag102
  %223 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %224 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %225 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %226 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %ptrtoint515 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint516 = add i64 %ptrtoint515, 7
  %entry-point-addr517 = inttoptr i64 %entry-point-addr-uint516 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point518 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr517, align 8
  %227 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point518({}* %101, i64 5, {}* %223, {}* %224, {}* %G165835.0, {}* %225, {}* %226)
          to label %tag106 unwind label %cleanup-lpad

normal-dest533:                                   ; preds = %tag107
  %228 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %229 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %230 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %231 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint534 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint535 = add i64 %ptrtoint534, 7
  %entry-point-addr536 = inttoptr i64 %entry-point-addr-uint535 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point537 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr536, align 8
  %232 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point537({}* %109, i64 5, {}* %228, {}* %229, {}* %G165835.0, {}* %230, {}* %231)
          to label %normal-dest540 unwind label %cleanup-lpad

normal-dest540:                                   ; preds = %normal-dest533
  %.elt734 = extractvalue { {}*, i64 } %232, 0
  %.elt736 = extractvalue { {}*, i64 } %232, 1
  %cond636 = icmp eq i64 %.elt736, 0
  %233 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x183.1 = select i1 %cond636, {}* %233, {}* %.elt734
  br label %tag64

normal-dest547:                                   ; preds = %tag109
  %234 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %235 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %236 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %237 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint548 = ptrtoint {}* %111 to i64
  %entry-point-addr-uint549 = add i64 %ptrtoint548, 7
  %entry-point-addr550 = inttoptr i64 %entry-point-addr-uint549 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point551 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr550, align 8
  %238 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point551({}* %111, i64 5, {}* %234, {}* %235, {}* %G165835.0, {}* %236, {}* %237)
          to label %normal-dest554 unwind label %cleanup-lpad

normal-dest554:                                   ; preds = %normal-dest547
  %.elt687 = extractvalue { {}*, i64 } %238, 0
  %.elt689 = extractvalue { {}*, i64 } %238, 1
  %cond626 = icmp eq i64 %.elt689, 0
  %239 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %x263.1 = select i1 %cond626, {}* %239, {}* %.elt687
  br label %tag44

header-check-br566:                               ; preds = %tag65
  %gep571 = getelementptr inbounds i8, i8* %21, i64 -9
  %irc-bit-cast572 = bitcast i8* %gep571 to i64*
  %240 = load i64, i64* %irc-bit-cast572, align 8
  %241 = icmp eq i64 %240, 1325
  br i1 %241, label %tag25, label %tag49

normal-dest583:                                   ; preds = %tag118
  %242 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %243 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %244 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %245 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 60), align 16
  %ptrtoint584 = ptrtoint {}* %124 to i64
  %entry-point-addr-uint585 = add i64 %ptrtoint584, 7
  %entry-point-addr586 = inttoptr i64 %entry-point-addr-uint585 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point587 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr586, align 8
  %246 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point587({}* %124, i64 5, {}* %242, {}* %243, {}* %p375.0, {}* %244, {}* %245)
          to label %tag16 unwind label %cleanup-lpad

normal-dest609:                                   ; preds = %tag124
  %247 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 34), align 16
  %248 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 36), align 16
  %249 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 38), align 16
  %250 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 62), align 16
  %ptrtoint610 = ptrtoint {}* %133 to i64
  %entry-point-addr-uint611 = add i64 %ptrtoint610, 7
  %entry-point-addr612 = inttoptr i64 %entry-point-addr-uint611 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point613 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr612, align 8
  %251 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point613({}* %133, i64 5, {}* %247, {}* %248, {}* %x166.0, {}* %249, {}* %250)
          to label %normal-dest616 unwind label %cleanup-lpad

normal-dest616:                                   ; preds = %normal-dest609
  %.elt720 = extractvalue { {}*, i64 } %251, 0
  %.elt722 = extractvalue { {}*, i64 } %251, 1
  %cond633 = icmp eq i64 %.elt722, 0
  %252 = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  %.in712 = select i1 %cond633, {}* %252, {}* %.elt720
  br label %tag119
}

; Function Attrs: uwtable
define internal void @RUN-ALL.15() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !54 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-*MAKE-SPECIAL", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CORE, i64 0, i64 0))
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 3), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 2, {}* %"CONTAB[3]*")
  %"CONTAB[1]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 1), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 0, {}* %"CONTAB[1]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-PRO_MERKHASHTABELLE, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-COMMON-LISP-USER, i64 0, i64 0))
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 7), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 6, {}* %"CONTAB[7]*")
  %"CONTAB[5]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 5), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 4, {}* %"CONTAB[5]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-BOUNDP, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-COMMON-LISP, i64 0, i64 0))
  %"CONTAB[11]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 11), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 10, {}* %"CONTAB[11]*")
  %"CONTAB[9]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 9), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 8, {}* %"CONTAB[9]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_nil({ i8*, i8*, i64 }* nonnull @constants-table, i64 12)
  tail call void @ltvc_make_t({ i8*, i8*, i64 }* nonnull @constants-table, i64 13)
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TOP-LEVEL, i64 0, i64 0))
  %"CONTAB[15]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 15), align 8
  %"CONTAB[2]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 14, {}* %"CONTAB[15]*", {}* %"CONTAB[2]*1")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitmessung.lisp^1^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-zeitmessung.lisp^1^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-MAKE-HASH-TABLE, i64 0, i64 0))
  %"CONTAB[17]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 17), align 8
  %"CONTAB[10]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 16, {}* %"CONTAB[17]*", {}* %"CONTAB[10]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-TEST, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KEYWORD, i64 0, i64 0))
  %"CONTAB[21]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 21), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 20, {}* %"CONTAB[21]*")
  %"CONTAB[19]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 19), align 8
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 20), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 18, {}* %"CONTAB[19]*", {}* %"CONTAB[20]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-EQ, i64 0, i64 0))
  %"CONTAB[23]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 23), align 8
  %"CONTAB[10]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 22, {}* %"CONTAB[23]*", {}* %"CONTAB[10]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-FDEFINITION, i64 0, i64 0))
  %"CONTAB[25]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 25), align 8
  %"CONTAB[10]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 24, {}* %"CONTAB[25]*", {}* %"CONTAB[10]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-FUNCTION, i64 0, i64 0))
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 27), align 8
  %"CONTAB[10]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 26, {}* %"CONTAB[27]*", {}* %"CONTAB[10]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SYMBOL, i64 0, i64 0))
  %"CONTAB[29]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 29), align 8
  %"CONTAB[10]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 28, {}* %"CONTAB[29]*", {}* %"CONTAB[10]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 31, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SYMBOL-FUNCTION, i64 0, i64 0))
  %"CONTAB[31]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 31), align 8
  %"CONTAB[10]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 30, {}* %"CONTAB[31]*", {}* %"CONTAB[10]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ERROR, i64 0, i64 0))
  %"CONTAB[33]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 33), align 8
  %"CONTAB[10]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 32, {}* %"CONTAB[33]*", {}* %"CONTAB[10]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-TYPE-ERROR, i64 0, i64 0))
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 35), align 8
  %"CONTAB[10]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 34, {}* %"CONTAB[35]*", {}* %"CONTAB[10]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-DATUM, i64 0, i64 0))
  %"CONTAB[37]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 37), align 8
  %"CONTAB[20]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 20), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 36, {}* %"CONTAB[37]*", {}* %"CONTAB[20]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-EXPECTED-TYPE, i64 0, i64 0))
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 39), align 8
  %"CONTAB[20]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 20), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 38, {}* %"CONTAB[39]*", {}* %"CONTAB[20]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-OR, i64 0, i64 0))
  %"CONTAB[42]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 42), align 16
  %"CONTAB[10]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 41, {}* %"CONTAB[42]*", {}* %"CONTAB[10]*12")
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 40, i64 3, {}* %"CONTAB[41]*", {}* %"CONTAB[28]*", {}* %"CONTAB[26]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 44, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str-PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN, i64 0, i64 0))
  %"CONTAB[44]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 44), align 16
  %"CONTAB[6]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 43, {}* %"CONTAB[44]*", {}* %"CONTAB[6]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 46, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SETF-LAMBDA-LIST, i64 0, i64 0))
  %"CONTAB[46]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 46), align 16
  %"CONTAB[2]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 45, {}* %"CONTAB[46]*", {}* %"CONTAB[2]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SET-SOURCE-INFO, i64 0, i64 0))
  %"CONTAB[48]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 48), align 16
  %"CONTAB[2]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 47, {}* %"CONTAB[48]*", {}* %"CONTAB[2]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 51, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-CURRENT-SOURCE-FILE, i64 0, i64 0))
  %"CONTAB[51]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 51), align 8
  %"CONTAB[2]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 50, {}* %"CONTAB[51]*", {}* %"CONTAB[2]*16")
  %"CONTAB[50]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 50), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 49, i64 4, {}* %"CONTAB[50]*", {}* inttoptr (i64 148 to {}*), {}* inttoptr (i64 12 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 53, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-*CURRENT-FORM-LINENO*", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-COMPILER, i64 0, i64 0))
  %"CONTAB[55]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 55), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 54, {}* %"CONTAB[55]*")
  %"CONTAB[53]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 53), align 8
  %"CONTAB[54]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 54), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 52, {}* %"CONTAB[53]*", {}* %"CONTAB[54]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitmessung.lisp^3^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-zeitmessung.lisp^3^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 57, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-HASH-TABLE-P, i64 0, i64 0))
  %"CONTAB[57]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 57), align 8
  %"CONTAB[10]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 56, {}* %"CONTAB[57]*", {}* %"CONTAB[10]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-CLRHASH, i64 0, i64 0))
  %"CONTAB[59]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 59), align 8
  %"CONTAB[10]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 58, {}* %"CONTAB[59]*", {}* %"CONTAB[10]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CONS, i64 0, i64 0))
  %"CONTAB[61]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 61), align 8
  %"CONTAB[10]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 60, {}* %"CONTAB[61]*", {}* %"CONTAB[10]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-LIST, i64 0, i64 0))
  %"CONTAB[63]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 63), align 8
  %"CONTAB[10]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 62, {}* %"CONTAB[63]*", {}* %"CONTAB[10]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 65, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str-HASH-TABLE-SETF-GETHASH, i64 0, i64 0))
  %"CONTAB[65]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 65), align 8
  %"CONTAB[2]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 64, {}* %"CONTAB[65]*", {}* %"CONTAB[2]*21")
  %"CONTAB[41]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 66, i64 3, {}* %"CONTAB[41]*22", {}* %"CONTAB[28]*23", {}* %"CONTAB[26]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 68, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-PRO-MERK-HASH-TABELLE-RUECKSETZEN, i64 0, i64 0))
  %"CONTAB[68]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 68), align 16
  %"CONTAB[6]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 67, {}* %"CONTAB[68]*", {}* %"CONTAB[6]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"str-&REST", i64 0, i64 0))
  %"CONTAB[71]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 71), align 8
  %"CONTAB[10]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 70, {}* %"CONTAB[71]*", {}* %"CONTAB[10]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 73, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-ALLE-SCHLUESSEL, i64 0, i64 0))
  %"CONTAB[73]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 73), align 8
  %"CONTAB[6]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 72, {}* %"CONTAB[73]*", {}* %"CONTAB[6]*27")
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[72]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 72), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 69, i64 2, {}* %"CONTAB[70]*", {}* %"CONTAB[72]*")
  %"CONTAB[50]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 50), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 74, i64 4, {}* %"CONTAB[50]*28", {}* inttoptr (i64 620 to {}*), {}* inttoptr (i64 28 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[70]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[72]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 72), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 75, i64 2, {}* %"CONTAB[70]*29", {}* %"CONTAB[72]*30")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitmessung.lisp^7^TOP-COMPILE-FILE", i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-zeitmessung.lisp^7^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 77, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str-PRO-MERK-HASH-TABELLE-AUSGEBEN_0, i64 0, i64 0))
  %"CONTAB[77]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 77), align 8
  %"CONTAB[6]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 76, {}* %"CONTAB[77]*", {}* %"CONTAB[6]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 80, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str-NACHFOLGER_GENERIEREN, i64 0, i64 0))
  %"CONTAB[80]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 80), align 16
  %"CONTAB[6]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 79, {}* %"CONTAB[80]*", {}* %"CONTAB[6]*32")
  %"CONTAB[79]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 79), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 78, i64 1, {}* %"CONTAB[79]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 83, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-PRO=STOERENFRIEDE", i64 0, i64 0))
  %"CONTAB[83]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 83), align 8
  %"CONTAB[6]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 82, {}* %"CONTAB[83]*", {}* %"CONTAB[6]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 85, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str-ZUSTAND-WIEDERHERSTELLEN1, i64 0, i64 0))
  %"CONTAB[85]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 85), align 8
  %"CONTAB[6]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 84, {}* %"CONTAB[85]*", {}* %"CONTAB[6]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 87, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-REMOVE_PRO=SUCHVORSCHLAG", i64 0, i64 0))
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 87), align 8
  %"CONTAB[6]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 86, {}* %"CONTAB[87]*", {}* %"CONTAB[6]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 89, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-ZYKLUSTEST, i64 0, i64 0))
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 89), align 8
  %"CONTAB[6]*36" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 88, {}* %"CONTAB[89]*", {}* %"CONTAB[6]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 91, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-WERT_SETZEN, i64 0, i64 0))
  %"CONTAB[91]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 91), align 8
  %"CONTAB[6]*37" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 90, {}* %"CONTAB[91]*", {}* %"CONTAB[6]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 93, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-WERT_ZURUECKZIEHEN, i64 0, i64 0))
  %"CONTAB[93]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 93), align 8
  %"CONTAB[6]*38" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 92, {}* %"CONTAB[93]*", {}* %"CONTAB[6]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-PUSH, i64 0, i64 0))
  %"CONTAB[95]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 95), align 8
  %"CONTAB[10]*39" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 94, {}* %"CONTAB[95]*", {}* %"CONTAB[10]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 97, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-KORREKTURSUCHEN, i64 0, i64 0))
  %"CONTAB[97]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 97), align 8
  %"CONTAB[6]*40" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 96, {}* %"CONTAB[97]*", {}* %"CONTAB[6]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 99, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str-ZUSTAND-WIEDERHERSTELLEN2, i64 0, i64 0))
  %"CONTAB[99]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 99), align 8
  %"CONTAB[6]*41" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 98, {}* %"CONTAB[99]*", {}* %"CONTAB[6]*41")
  %"CONTAB[82]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 82), align 16
  %"CONTAB[84]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 84), align 16
  %"CONTAB[86]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 86), align 16
  %"CONTAB[88]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 88), align 16
  %"CONTAB[90]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 90), align 16
  %"CONTAB[92]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 92), align 16
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 94), align 16
  %"CONTAB[96]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 96), align 16
  %"CONTAB[98]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 98), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 81, i64 9, {}* %"CONTAB[82]*", {}* %"CONTAB[84]*", {}* %"CONTAB[86]*", {}* %"CONTAB[88]*", {}* %"CONTAB[90]*", {}* %"CONTAB[92]*", {}* %"CONTAB[94]*", {}* %"CONTAB[96]*", {}* %"CONTAB[98]*")
  %"CONTAB[41]*42" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*43" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*44" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 100, i64 3, {}* %"CONTAB[41]*42", {}* %"CONTAB[28]*43", {}* %"CONTAB[26]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 102, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str-PRO-MERK-HASH-TABELLE-AUSGEBEN, i64 0, i64 0))
  %"CONTAB[102]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 102), align 16
  %"CONTAB[6]*45" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 101, {}* %"CONTAB[102]*", {}* %"CONTAB[6]*45")
  %"CONTAB[50]*46" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 50), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 103, i64 4, {}* %"CONTAB[50]*46", {}* inttoptr (i64 1852 to {}*), {}* inttoptr (i64 60 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitmessung.lisp^15^TOP-COMPILE-FILE", i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"str-zeitmessung.lisp^15^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 105, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-MAPHASH, i64 0, i64 0))
  %"CONTAB[105]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 105), align 8
  %"CONTAB[10]*47" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 104, {}* %"CONTAB[105]*", {}* %"CONTAB[10]*47")
  %"CONTAB[41]*48" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*49" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*50" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 106, i64 3, {}* %"CONTAB[41]*48", {}* %"CONTAB[28]*49", {}* %"CONTAB[26]*50")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 108, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-PRO-ALLES-SCHLUESSEL, i64 0, i64 0))
  %"CONTAB[108]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 108), align 16
  %"CONTAB[6]*51" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 107, {}* %"CONTAB[108]*", {}* %"CONTAB[6]*51")
  %"CONTAB[50]*52" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 50), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 109, i64 4, {}* %"CONTAB[50]*52", {}* inttoptr (i64 3352 to {}*), {}* inttoptr (i64 124 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 111, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LAMBDA, i64 0, i64 0))
  %"CONTAB[111]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 111), align 8
  %"CONTAB[10]*53" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 110, {}* %"CONTAB[111]*", {}* %"CONTAB[10]*53")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 114, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-KEY, i64 0, i64 0))
  %"CONTAB[114]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 114), align 16
  %"CONTAB[6]*54" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 113, {}* %"CONTAB[114]*", {}* %"CONTAB[6]*54")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 116, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-LISTE, i64 0, i64 0))
  %"CONTAB[116]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 116), align 16
  %"CONTAB[6]*55" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 115, {}* %"CONTAB[116]*", {}* %"CONTAB[6]*55")
  %"CONTAB[113]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 113), align 8
  %"CONTAB[115]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 115), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 112, i64 2, {}* %"CONTAB[113]*", {}* %"CONTAB[115]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitmessung.lisp^31^TOP-COMPILE-FILE", i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"str-zeitmessung.lisp^31^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 118, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-EQ-INCOMPARABLE, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 120, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-CLASP-CLEAVIR, i64 0, i64 0))
  %"CONTAB[120]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 120), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 119, {}* %"CONTAB[120]*")
  %"CONTAB[118]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 118), align 16
  %"CONTAB[119]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 119), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 117, {}* %"CONTAB[118]*", {}* %"CONTAB[119]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 122, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-EQL-UNDERLYING, i64 0, i64 0))
  %"CONTAB[122]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 122), align 16
  %"CONTAB[2]*56" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 121, {}* %"CONTAB[122]*", {}* %"CONTAB[2]*56")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 124, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FIXNUM, i64 0, i64 0))
  %"CONTAB[124]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 124), align 16
  %"CONTAB[10]*57" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 123, {}* %"CONTAB[124]*", {}* %"CONTAB[10]*57")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 126, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SINGLE-FLOAT, i64 0, i64 0))
  %"CONTAB[126]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 126), align 16
  %"CONTAB[10]*58" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 125, {}* %"CONTAB[126]*", {}* %"CONTAB[10]*58")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 128, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-DOUBLE-FLOAT, i64 0, i64 0))
  %"CONTAB[128]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 128), align 16
  %"CONTAB[10]*59" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 127, {}* %"CONTAB[128]*", {}* %"CONTAB[10]*59")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 130, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM, i64 0, i64 0))
  %"CONTAB[130]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 130), align 16
  %"CONTAB[2]*60" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 129, {}* %"CONTAB[130]*", {}* %"CONTAB[2]*60")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 132, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-+", i64 0, i64 0))
  %"CONTAB[132]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 132), align 16
  %"CONTAB[2]*61" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 131, {}* %"CONTAB[132]*", {}* %"CONTAB[2]*61")
  ret void
}

; Function Attrs: nounwind
declare void @ltvc_make_base_string({ i8*, i8*, i64 }*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_package({ i8*, i8*, i64 }*, i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_symbol({ i8*, i8*, i64 }*, i64, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_nil({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_t({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

declare void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @ltvc_make_list({ i8*, i8*, i64 }*, i64, i64, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.16() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !55 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 134, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-FORMAT-ERROR, i64 0, i64 0))
  %"CONTAB[134]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 134), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 133, {}* %"CONTAB[134]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 136, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-COMPLAINT, i64 0, i64 0))
  %"CONTAB[136]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 136), align 16
  %"CONTAB[20]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 20), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 135, {}* %"CONTAB[136]*", {}* %"CONTAB[20]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 137, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-Required argument missing", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 139, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-CONTROL-STRING, i64 0, i64 0))
  %"CONTAB[139]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 139), align 8
  %"CONTAB[20]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 20), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 138, {}* %"CONTAB[139]*", {}* %"CONTAB[20]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 140, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @"str-~2%Gesamt   :Minuten~7a Sekunden ~7a  Bytes ~A~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 142, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-OFFSET, i64 0, i64 0))
  %"CONTAB[142]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 142), align 16
  %"CONTAB[20]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 20), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 141, {}* %"CONTAB[142]*", {}* %"CONTAB[20]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 144, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-TERPRI, i64 0, i64 0))
  %"CONTAB[144]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 144), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 143, {}* %"CONTAB[144]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 146, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-<", i64 0, i64 0))
  %"CONTAB[146]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 146), align 16
  %"CONTAB[2]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 145, {}* %"CONTAB[146]*", {}* %"CONTAB[2]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 148, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-WRITE-STRING, i64 0, i64 0))
  %"CONTAB[148]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 148), align 16
  %"CONTAB[10]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 147, {}* %"CONTAB[148]*", {}* %"CONTAB[10]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 149, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-Gesamt   :Minuten", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 151, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-FORMAT-PRINC, i64 0, i64 0))
  %"CONTAB[151]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 151), align 8
  %"CONTAB[2]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 150, {}* %"CONTAB[151]*", {}* %"CONTAB[2]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 152, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"str- Sekunden ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 153, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-  Bytes ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 155, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PRINC, i64 0, i64 0))
  %"CONTAB[155]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 155), align 8
  %"CONTAB[10]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 154, {}* %"CONTAB[155]*", {}* %"CONTAB[10]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 157, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-STRINGP, i64 0, i64 0))
  %"CONTAB[157]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 157), align 8
  %"CONTAB[10]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 156, {}* %"CONTAB[157]*", {}* %"CONTAB[10]*7")
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 158, i64 3, {}* %"CONTAB[41]*", {}* %"CONTAB[28]*", {}* %"CONTAB[26]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 159, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 160, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 161, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 163, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str-MAKE-STRING-OUTPUT-STREAM-FROM-STRING, i64 0, i64 0))
  %"CONTAB[163]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 163), align 8
  %"CONTAB[2]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 162, {}* %"CONTAB[163]*", {}* %"CONTAB[2]*8")
  %"CONTAB[41]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 164, i64 3, {}* %"CONTAB[41]*9", {}* %"CONTAB[28]*10", {}* %"CONTAB[26]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 166, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str-MAKE-STRING-OUTPUT-STREAM, i64 0, i64 0))
  %"CONTAB[166]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 166), align 16
  %"CONTAB[10]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 165, {}* %"CONTAB[166]*", {}* %"CONTAB[10]*12")
  %"CONTAB[41]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 167, i64 3, {}* %"CONTAB[41]*13", {}* %"CONTAB[28]*14", {}* %"CONTAB[26]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 169, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-GET-OUTPUT-STREAM-STRING, i64 0, i64 0))
  %"CONTAB[169]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 169), align 8
  %"CONTAB[10]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 168, {}* %"CONTAB[169]*", {}* %"CONTAB[10]*16")
  %"CONTAB[41]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 170, i64 3, {}* %"CONTAB[41]*17", {}* %"CONTAB[28]*18", {}* %"CONTAB[26]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 172, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-*STANDARD-OUTPUT*", i64 0, i64 0))
  %"CONTAB[172]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 172), align 16
  %"CONTAB[10]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 171, {}* %"CONTAB[172]*", {}* %"CONTAB[10]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 173, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-      ~10,4f       ~10,4f         ~14A~2%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 174, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"str-      ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 176, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-FORMAT-FIXED, i64 0, i64 0))
  %"CONTAB[176]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 176), align 16
  %"CONTAB[2]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 175, {}* %"CONTAB[176]*", {}* %"CONTAB[2]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 177, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"str-       ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 178, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-         ", i64 0, i64 0))
  %"CONTAB[41]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 179, i64 3, {}* %"CONTAB[41]*22", {}* %"CONTAB[28]*23", {}* %"CONTAB[26]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 181, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-FLOAT, i64 0, i64 0))
  %"CONTAB[181]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 181), align 8
  %"CONTAB[10]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 180, {}* %"CONTAB[181]*", {}* %"CONTAB[10]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 183, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-*", i64 0, i64 0))
  %"CONTAB[183]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 183), align 8
  %"CONTAB[2]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 182, {}* %"CONTAB[183]*", {}* %"CONTAB[2]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 185, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-/", i64 0, i64 0))
  %"CONTAB[185]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 185), align 8
  %"CONTAB[2]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 184, {}* %"CONTAB[185]*", {}* %"CONTAB[2]*27")
  %"CONTAB[41]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 186, i64 3, {}* %"CONTAB[41]*28", {}* %"CONTAB[28]*29", {}* %"CONTAB[26]*30")
  %"CONTAB[41]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 187, i64 3, {}* %"CONTAB[41]*31", {}* %"CONTAB[28]*32", {}* %"CONTAB[26]*33")
  %"CONTAB[41]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*36" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 188, i64 3, {}* %"CONTAB[41]*34", {}* %"CONTAB[28]*35", {}* %"CONTAB[26]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 189, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-~40A ~6@a ~8@a ~14@a ~14@a ~15@A~2%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 191, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 192, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 194, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[41]*37" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*38" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*39" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 195, i64 3, {}* %"CONTAB[41]*37", {}* %"CONTAB[28]*38", {}* %"CONTAB[26]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 196, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-Operation, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 197, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-number, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 198, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-Percent, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 199, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-Duration (m)", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 200, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-Duration (s)", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 201, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-Storage, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.17() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !56 {
entry:
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 202, i64 3, {}* %"CONTAB[41]*", {}* %"CONTAB[28]*", {}* %"CONTAB[26]*")
  %"CONTAB[41]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 203, i64 3, {}* %"CONTAB[41]*1", {}* %"CONTAB[28]*2", {}* %"CONTAB[26]*3")
  %"CONTAB[41]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 204, i64 3, {}* %"CONTAB[41]*4", {}* %"CONTAB[28]*5", {}* %"CONTAB[26]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 205, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-~40a ~6d ~8,2f ~14,4f ~14,4f ~15d~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 206, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 208, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-FORMAT-PRINT-INTEGER, i64 0, i64 0))
  %"CONTAB[208]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 208), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 207, {}* %"CONTAB[208]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 210, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[41]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 213, i64 3, {}* %"CONTAB[41]*7", {}* %"CONTAB[28]*8", {}* %"CONTAB[26]*9")
  %"CONTAB[41]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 214, i64 3, {}* %"CONTAB[41]*10", {}* %"CONTAB[28]*11", {}* %"CONTAB[26]*12")
  %"CONTAB[41]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 215, i64 3, {}* %"CONTAB[41]*13", {}* %"CONTAB[28]*14", {}* %"CONTAB[26]*15")
  %"CONTAB[41]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 216, i64 3, {}* %"CONTAB[41]*16", {}* %"CONTAB[28]*17", {}* %"CONTAB[26]*18")
  %"CONTAB[41]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 217, i64 3, {}* %"CONTAB[41]*19", {}* %"CONTAB[28]*20", {}* %"CONTAB[26]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 220, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-&OPTIONAL", i64 0, i64 0))
  %"CONTAB[220]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 220), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 219, {}* %"CONTAB[220]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 223, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SCHLUESSELLISTE, i64 0, i64 0))
  %"CONTAB[223]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 223), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 222, {}* %"CONTAB[223]*", {}* %"CONTAB[6]*")
  %"CONTAB[107]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 107), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 224, i64 1, {}* %"CONTAB[107]*")
  %"CONTAB[222]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 222), align 16
  %"CONTAB[224]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 224), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 221, i64 2, {}* %"CONTAB[222]*", {}* %"CONTAB[224]*")
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[221]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 221), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 218, i64 2, {}* %"CONTAB[219]*", {}* %"CONTAB[221]*")
  %"CONTAB[50]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 50), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 225, i64 4, {}* %"CONTAB[50]*", {}* inttoptr (i64 4200 to {}*), {}* inttoptr (i64 156 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 227, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-NUMBER, i64 0, i64 0))
  %"CONTAB[227]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 227), align 8
  %"CONTAB[10]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 226, {}* %"CONTAB[227]*", {}* %"CONTAB[10]*22")
  %"CONTAB[107]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 107), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 230, i64 1, {}* %"CONTAB[107]*23")
  %"CONTAB[222]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 222), align 16
  %"CONTAB[230]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 230), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 229, i64 2, {}* %"CONTAB[222]*24", {}* %"CONTAB[230]*")
  %"CONTAB[219]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[229]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 229), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 228, i64 2, {}* %"CONTAB[219]*25", {}* %"CONTAB[229]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 233, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-STREAM, i64 0, i64 0))
  %"CONTAB[233]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 233), align 8
  %"CONTAB[10]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 232, {}* %"CONTAB[233]*", {}* %"CONTAB[10]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 236, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158829, i64 0, i64 0))
  %"CONTAB[236]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 236), align 16
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 235, {}* %"CONTAB[236]*", {}* %"CONTAB[12]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 240, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-QUOTE, i64 0, i64 0))
  %"CONTAB[240]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 240), align 16
  %"CONTAB[10]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 239, {}* %"CONTAB[240]*", {}* %"CONTAB[10]*27")
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 238, i64 2, {}* %"CONTAB[239]*", {}* %"CONTAB[133]*")
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[238]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 238), align 16
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 237, i64 8, {}* %"CONTAB[32]*", {}* %"CONTAB[238]*", {}* %"CONTAB[135]*", {}* %"CONTAB[137]*", {}* %"CONTAB[138]*", {}* %"CONTAB[189]*", {}* %"CONTAB[141]*", {}* inttoptr (i64 12 to {}*))
  %"CONTAB[235]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 235), align 8
  %"CONTAB[237]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 237), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 234, i64 2, {}* %"CONTAB[235]*", {}* %"CONTAB[237]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 243, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158830, i64 0, i64 0))
  %"CONTAB[243]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 243), align 8
  %"CONTAB[12]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 242, {}* %"CONTAB[243]*", {}* %"CONTAB[12]*28")
  %"CONTAB[239]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 245, i64 2, {}* %"CONTAB[239]*29", {}* %"CONTAB[133]*30")
  %"CONTAB[32]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[245]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 245), align 8
  %"CONTAB[135]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[189]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %"CONTAB[141]*36" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 244, i64 8, {}* %"CONTAB[32]*31", {}* %"CONTAB[245]*", {}* %"CONTAB[135]*32", {}* %"CONTAB[137]*33", {}* %"CONTAB[138]*34", {}* %"CONTAB[189]*35", {}* %"CONTAB[141]*36", {}* inttoptr (i64 32 to {}*))
  %"CONTAB[242]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 242), align 16
  %"CONTAB[244]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 244), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 241, i64 2, {}* %"CONTAB[242]*", {}* %"CONTAB[244]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 248, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158831, i64 0, i64 0))
  %"CONTAB[248]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 248), align 16
  %"CONTAB[12]*37" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 247, {}* %"CONTAB[248]*", {}* %"CONTAB[12]*37")
  %"CONTAB[239]*38" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*39" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 250, i64 2, {}* %"CONTAB[239]*38", {}* %"CONTAB[133]*39")
  %"CONTAB[32]*40" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[250]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 250), align 16
  %"CONTAB[135]*41" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*42" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*43" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[189]*44" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %"CONTAB[141]*45" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 249, i64 8, {}* %"CONTAB[32]*40", {}* %"CONTAB[250]*", {}* %"CONTAB[135]*41", {}* %"CONTAB[137]*42", {}* %"CONTAB[138]*43", {}* %"CONTAB[189]*44", {}* %"CONTAB[141]*45", {}* inttoptr (i64 52 to {}*))
  %"CONTAB[247]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 247), align 8
  %"CONTAB[249]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 249), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 246, i64 2, {}* %"CONTAB[247]*", {}* %"CONTAB[249]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 253, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158832, i64 0, i64 0))
  %"CONTAB[253]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 253), align 8
  %"CONTAB[12]*46" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 252, {}* %"CONTAB[253]*", {}* %"CONTAB[12]*46")
  %"CONTAB[239]*47" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*48" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 255, i64 2, {}* %"CONTAB[239]*47", {}* %"CONTAB[133]*48")
  %"CONTAB[32]*49" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[255]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 255), align 8
  %"CONTAB[135]*50" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*51" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*52" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[189]*53" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %"CONTAB[141]*54" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 254, i64 8, {}* %"CONTAB[32]*49", {}* %"CONTAB[255]*", {}* %"CONTAB[135]*50", {}* %"CONTAB[137]*51", {}* %"CONTAB[138]*52", {}* %"CONTAB[189]*53", {}* %"CONTAB[141]*54", {}* inttoptr (i64 76 to {}*))
  %"CONTAB[252]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 252), align 16
  %"CONTAB[254]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 254), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 251, i64 2, {}* %"CONTAB[252]*", {}* %"CONTAB[254]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 258, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158833, i64 0, i64 0))
  %"CONTAB[258]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 258), align 16
  %"CONTAB[12]*55" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 257, {}* %"CONTAB[258]*", {}* %"CONTAB[12]*55")
  %"CONTAB[239]*56" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*57" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 260, i64 2, {}* %"CONTAB[239]*56", {}* %"CONTAB[133]*57")
  %"CONTAB[32]*58" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[260]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 260), align 16
  %"CONTAB[135]*59" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*60" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*61" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[189]*62" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %"CONTAB[141]*63" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 259, i64 8, {}* %"CONTAB[32]*58", {}* %"CONTAB[260]*", {}* %"CONTAB[135]*59", {}* %"CONTAB[137]*60", {}* %"CONTAB[138]*61", {}* %"CONTAB[189]*62", {}* %"CONTAB[141]*63", {}* inttoptr (i64 100 to {}*))
  %"CONTAB[257]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 257), align 8
  %"CONTAB[259]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 259), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 256, i64 2, {}* %"CONTAB[257]*", {}* %"CONTAB[259]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 263, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158834, i64 0, i64 0))
  %"CONTAB[263]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 263), align 8
  %"CONTAB[12]*64" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 262, {}* %"CONTAB[263]*", {}* %"CONTAB[12]*64")
  %"CONTAB[239]*65" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*66" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 265, i64 2, {}* %"CONTAB[239]*65", {}* %"CONTAB[133]*66")
  %"CONTAB[32]*67" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[265]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 265), align 8
  %"CONTAB[135]*68" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*69" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*70" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[189]*71" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 189), align 8
  %"CONTAB[141]*72" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 264, i64 8, {}* %"CONTAB[32]*67", {}* %"CONTAB[265]*", {}* %"CONTAB[135]*68", {}* %"CONTAB[137]*69", {}* %"CONTAB[138]*70", {}* %"CONTAB[189]*71", {}* %"CONTAB[141]*72", {}* inttoptr (i64 124 to {}*))
  %"CONTAB[262]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 262), align 16
  %"CONTAB[264]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 264), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 261, i64 2, {}* %"CONTAB[262]*", {}* %"CONTAB[264]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 267, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ARGS, i64 0, i64 0))
  %"CONTAB[267]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 267), align 8
  %"CONTAB[2]*73" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 266, {}* %"CONTAB[267]*", {}* %"CONTAB[2]*73")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 232), align 16
  %"CONTAB[219]*74" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[234]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 234), align 16
  %"CONTAB[241]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 241), align 8
  %"CONTAB[246]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 246), align 16
  %"CONTAB[251]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 251), align 8
  %"CONTAB[256]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 256), align 16
  %"CONTAB[261]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 261), align 8
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[266]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 266), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 231, i64 10, {}* %"CONTAB[232]*", {}* %"CONTAB[219]*74", {}* %"CONTAB[234]*", {}* %"CONTAB[241]*", {}* %"CONTAB[246]*", {}* %"CONTAB[251]*", {}* %"CONTAB[256]*", {}* %"CONTAB[261]*", {}* %"CONTAB[70]*", {}* %"CONTAB[266]*")
  %"CONTAB[113]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 113), align 8
  %"CONTAB[115]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 115), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 268, i64 2, {}* %"CONTAB[113]*", {}* %"CONTAB[115]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 272, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158890, i64 0, i64 0))
  %"CONTAB[272]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 272), align 16
  %"CONTAB[12]*75" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 271, {}* %"CONTAB[272]*", {}* %"CONTAB[12]*75")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.18() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !57 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.16)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.17)
  ret void
}

declare void @cc_invoke_sub_run_all_function(void ()*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.19() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !58 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.15)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.18)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.20() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !59 {
entry:
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 274, i64 2, {}* %"CONTAB[239]*", {}* %"CONTAB[133]*")
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[274]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 274), align 16
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[205]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 273, i64 8, {}* %"CONTAB[32]*", {}* %"CONTAB[274]*", {}* %"CONTAB[135]*", {}* %"CONTAB[137]*", {}* %"CONTAB[138]*", {}* %"CONTAB[205]*", {}* %"CONTAB[141]*", {}* inttoptr (i64 12 to {}*))
  %"CONTAB[271]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 271), align 8
  %"CONTAB[273]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 273), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 270, i64 2, {}* %"CONTAB[271]*", {}* %"CONTAB[273]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 277, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158891, i64 0, i64 0))
  %"CONTAB[277]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 277), align 8
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 276, {}* %"CONTAB[277]*", {}* %"CONTAB[12]*")
  %"CONTAB[239]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 279, i64 2, {}* %"CONTAB[239]*1", {}* %"CONTAB[133]*2")
  %"CONTAB[32]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[279]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 279), align 8
  %"CONTAB[135]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[205]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %"CONTAB[141]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 278, i64 8, {}* %"CONTAB[32]*3", {}* %"CONTAB[279]*", {}* %"CONTAB[135]*4", {}* %"CONTAB[137]*5", {}* %"CONTAB[138]*6", {}* %"CONTAB[205]*7", {}* %"CONTAB[141]*8", {}* inttoptr (i64 28 to {}*))
  %"CONTAB[276]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 276), align 16
  %"CONTAB[278]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 278), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 275, i64 2, {}* %"CONTAB[276]*", {}* %"CONTAB[278]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158892, i64 0, i64 0))
  %"CONTAB[282]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 282), align 16
  %"CONTAB[12]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 281, {}* %"CONTAB[282]*", {}* %"CONTAB[12]*9")
  %"CONTAB[239]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 284, i64 2, {}* %"CONTAB[239]*10", {}* %"CONTAB[133]*11")
  %"CONTAB[32]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[284]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 284), align 16
  %"CONTAB[135]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[205]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %"CONTAB[141]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 283, i64 8, {}* %"CONTAB[32]*12", {}* %"CONTAB[284]*", {}* %"CONTAB[135]*13", {}* %"CONTAB[137]*14", {}* %"CONTAB[138]*15", {}* %"CONTAB[205]*16", {}* %"CONTAB[141]*17", {}* inttoptr (i64 52 to {}*))
  %"CONTAB[281]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 281), align 8
  %"CONTAB[283]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 283), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 280, i64 2, {}* %"CONTAB[281]*", {}* %"CONTAB[283]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 287, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158893, i64 0, i64 0))
  %"CONTAB[287]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 287), align 8
  %"CONTAB[12]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 286, {}* %"CONTAB[287]*", {}* %"CONTAB[12]*18")
  %"CONTAB[239]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 289, i64 2, {}* %"CONTAB[239]*19", {}* %"CONTAB[133]*20")
  %"CONTAB[32]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[289]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 289), align 8
  %"CONTAB[135]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[205]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %"CONTAB[141]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 288, i64 8, {}* %"CONTAB[32]*21", {}* %"CONTAB[289]*", {}* %"CONTAB[135]*22", {}* %"CONTAB[137]*23", {}* %"CONTAB[138]*24", {}* %"CONTAB[205]*25", {}* %"CONTAB[141]*26", {}* inttoptr (i64 80 to {}*))
  %"CONTAB[286]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 286), align 16
  %"CONTAB[288]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 288), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 285, i64 2, {}* %"CONTAB[286]*", {}* %"CONTAB[288]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 292, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158894, i64 0, i64 0))
  %"CONTAB[292]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 292), align 16
  %"CONTAB[12]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 291, {}* %"CONTAB[292]*", {}* %"CONTAB[12]*27")
  %"CONTAB[239]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 294, i64 2, {}* %"CONTAB[239]*28", {}* %"CONTAB[133]*29")
  %"CONTAB[32]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 294), align 16
  %"CONTAB[135]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[205]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %"CONTAB[141]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 293, i64 8, {}* %"CONTAB[32]*30", {}* %"CONTAB[294]*", {}* %"CONTAB[135]*31", {}* %"CONTAB[137]*32", {}* %"CONTAB[138]*33", {}* %"CONTAB[205]*34", {}* %"CONTAB[141]*35", {}* inttoptr (i64 108 to {}*))
  %"CONTAB[291]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 291), align 8
  %"CONTAB[293]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 293), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 290, i64 2, {}* %"CONTAB[291]*", {}* %"CONTAB[293]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 297, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158895, i64 0, i64 0))
  %"CONTAB[297]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 297), align 8
  %"CONTAB[12]*36" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 296, {}* %"CONTAB[297]*", {}* %"CONTAB[12]*36")
  %"CONTAB[239]*37" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*38" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 299, i64 2, {}* %"CONTAB[239]*37", {}* %"CONTAB[133]*38")
  %"CONTAB[32]*39" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[299]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 299), align 8
  %"CONTAB[135]*40" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*41" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*42" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[205]*43" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 205), align 8
  %"CONTAB[141]*44" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 298, i64 8, {}* %"CONTAB[32]*39", {}* %"CONTAB[299]*", {}* %"CONTAB[135]*40", {}* %"CONTAB[137]*41", {}* %"CONTAB[138]*42", {}* %"CONTAB[205]*43", {}* %"CONTAB[141]*44", {}* inttoptr (i64 128 to {}*))
  %"CONTAB[296]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 296), align 16
  %"CONTAB[298]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 298), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 295, i64 2, {}* %"CONTAB[296]*", {}* %"CONTAB[298]*")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 232), align 16
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[270]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 270), align 16
  %"CONTAB[275]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 275), align 8
  %"CONTAB[280]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 280), align 16
  %"CONTAB[285]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 285), align 8
  %"CONTAB[290]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 290), align 16
  %"CONTAB[295]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 295), align 8
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[266]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 266), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 269, i64 10, {}* %"CONTAB[232]*", {}* %"CONTAB[219]*", {}* %"CONTAB[270]*", {}* %"CONTAB[275]*", {}* %"CONTAB[280]*", {}* %"CONTAB[285]*", {}* %"CONTAB[290]*", {}* %"CONTAB[295]*", {}* %"CONTAB[70]*", {}* %"CONTAB[266]*")
  %"CONTAB[113]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 113), align 8
  %"CONTAB[115]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 115), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 300, i64 2, {}* %"CONTAB[113]*", {}* %"CONTAB[115]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 304, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158759, i64 0, i64 0))
  %"CONTAB[304]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 304), align 16
  %"CONTAB[12]*45" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 303, {}* %"CONTAB[304]*", {}* %"CONTAB[12]*45")
  %"CONTAB[239]*46" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*47" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 306, i64 2, {}* %"CONTAB[239]*46", {}* %"CONTAB[133]*47")
  %"CONTAB[32]*48" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[306]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 306), align 16
  %"CONTAB[135]*49" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*50" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*51" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[140]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 140), align 16
  %"CONTAB[141]*52" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 305, i64 8, {}* %"CONTAB[32]*48", {}* %"CONTAB[306]*", {}* %"CONTAB[135]*49", {}* %"CONTAB[137]*50", {}* %"CONTAB[138]*51", {}* %"CONTAB[140]*", {}* %"CONTAB[141]*52", {}* inttoptr (i64 88 to {}*))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.21() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !60 {
entry:
  %"CONTAB[303]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 303), align 8
  %"CONTAB[305]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 305), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 302, i64 2, {}* %"CONTAB[303]*", {}* %"CONTAB[305]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 309, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158760, i64 0, i64 0))
  %"CONTAB[309]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 309), align 8
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 308, {}* %"CONTAB[309]*", {}* %"CONTAB[12]*")
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 311, i64 2, {}* %"CONTAB[239]*", {}* %"CONTAB[133]*")
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[311]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 311), align 8
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[140]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 140), align 16
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 310, i64 8, {}* %"CONTAB[32]*", {}* %"CONTAB[311]*", {}* %"CONTAB[135]*", {}* %"CONTAB[137]*", {}* %"CONTAB[138]*", {}* %"CONTAB[140]*", {}* %"CONTAB[141]*", {}* inttoptr (i64 140 to {}*))
  %"CONTAB[308]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 308), align 16
  %"CONTAB[310]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 310), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 307, i64 2, {}* %"CONTAB[308]*", {}* %"CONTAB[310]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 314, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158761, i64 0, i64 0))
  %"CONTAB[314]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 314), align 16
  %"CONTAB[12]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 313, {}* %"CONTAB[314]*", {}* %"CONTAB[12]*1")
  %"CONTAB[239]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 316, i64 2, {}* %"CONTAB[239]*2", {}* %"CONTAB[133]*3")
  %"CONTAB[32]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[316]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 316), align 16
  %"CONTAB[135]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[140]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 140), align 16
  %"CONTAB[141]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 315, i64 8, {}* %"CONTAB[32]*4", {}* %"CONTAB[316]*", {}* %"CONTAB[135]*5", {}* %"CONTAB[137]*6", {}* %"CONTAB[138]*7", {}* %"CONTAB[140]*8", {}* %"CONTAB[141]*9", {}* inttoptr (i64 180 to {}*))
  %"CONTAB[313]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 313), align 8
  %"CONTAB[315]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 315), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 312, i64 2, {}* %"CONTAB[313]*", {}* %"CONTAB[315]*")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 232), align 16
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[302]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 302), align 16
  %"CONTAB[307]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 307), align 8
  %"CONTAB[312]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 312), align 16
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[266]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 266), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 301, i64 7, {}* %"CONTAB[232]*", {}* %"CONTAB[219]*", {}* %"CONTAB[302]*", {}* %"CONTAB[307]*", {}* %"CONTAB[312]*", {}* %"CONTAB[70]*", {}* %"CONTAB[266]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 320, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158791, i64 0, i64 0))
  %"CONTAB[320]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 320), align 16
  %"CONTAB[12]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 319, {}* %"CONTAB[320]*", {}* %"CONTAB[12]*10")
  %"CONTAB[239]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 322, i64 2, {}* %"CONTAB[239]*11", {}* %"CONTAB[133]*12")
  %"CONTAB[32]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[322]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 322), align 16
  %"CONTAB[135]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[173]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 173), align 8
  %"CONTAB[141]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 321, i64 8, {}* %"CONTAB[32]*13", {}* %"CONTAB[322]*", {}* %"CONTAB[135]*14", {}* %"CONTAB[137]*15", {}* %"CONTAB[138]*16", {}* %"CONTAB[173]*", {}* %"CONTAB[141]*17", {}* inttoptr (i64 44 to {}*))
  %"CONTAB[319]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 319), align 8
  %"CONTAB[321]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 321), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 318, i64 2, {}* %"CONTAB[319]*", {}* %"CONTAB[321]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 325, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158792, i64 0, i64 0))
  %"CONTAB[325]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 325), align 8
  %"CONTAB[12]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 324, {}* %"CONTAB[325]*", {}* %"CONTAB[12]*18")
  %"CONTAB[239]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 327, i64 2, {}* %"CONTAB[239]*19", {}* %"CONTAB[133]*20")
  %"CONTAB[32]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[327]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 327), align 8
  %"CONTAB[135]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[173]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 173), align 8
  %"CONTAB[141]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 326, i64 8, {}* %"CONTAB[32]*21", {}* %"CONTAB[327]*", {}* %"CONTAB[135]*22", {}* %"CONTAB[137]*23", {}* %"CONTAB[138]*24", {}* %"CONTAB[173]*25", {}* %"CONTAB[141]*26", {}* inttoptr (i64 96 to {}*))
  %"CONTAB[324]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 324), align 16
  %"CONTAB[326]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 326), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 323, i64 2, {}* %"CONTAB[324]*", {}* %"CONTAB[326]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 330, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-158793, i64 0, i64 0))
  %"CONTAB[330]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 330), align 16
  %"CONTAB[12]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 329, {}* %"CONTAB[330]*", {}* %"CONTAB[12]*27")
  %"CONTAB[239]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 332, i64 2, {}* %"CONTAB[239]*28", {}* %"CONTAB[133]*29")
  %"CONTAB[32]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[332]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 332), align 16
  %"CONTAB[135]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[173]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 173), align 8
  %"CONTAB[141]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 331, i64 8, {}* %"CONTAB[32]*30", {}* %"CONTAB[332]*", {}* %"CONTAB[135]*31", {}* %"CONTAB[137]*32", {}* %"CONTAB[138]*33", {}* %"CONTAB[173]*34", {}* %"CONTAB[141]*35", {}* inttoptr (i64 148 to {}*))
  %"CONTAB[329]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 329), align 8
  %"CONTAB[331]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 331), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 328, i64 2, {}* %"CONTAB[329]*", {}* %"CONTAB[331]*")
  %"CONTAB[232]*36" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 232), align 16
  %"CONTAB[219]*37" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[318]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 318), align 16
  %"CONTAB[323]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 323), align 8
  %"CONTAB[328]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 328), align 16
  %"CONTAB[70]*38" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[266]*39" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 266), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 317, i64 7, {}* %"CONTAB[232]*36", {}* %"CONTAB[219]*37", {}* %"CONTAB[318]*", {}* %"CONTAB[323]*", {}* %"CONTAB[328]*", {}* %"CONTAB[70]*38", {}* %"CONTAB[266]*39")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitmessung.lisp^39^TOP-COMPILE-FILE", i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"str-zeitmessung.lisp^39^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 335, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str-VOR_MINIMUM_AUS_AGENDA_LESEN_FUNKTION, i64 0, i64 0))
  %"CONTAB[335]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 335), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 334, {}* %"CONTAB[335]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 337, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str-WICHTIGSTES_ELEMENT_LESEN, i64 0, i64 0))
  %"CONTAB[337]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 337), align 8
  %"CONTAB[6]*40" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 336, {}* %"CONTAB[337]*", {}* %"CONTAB[6]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 339, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-VOR_VORSCHLAGSBERECHNUNG, i64 0, i64 0))
  %"CONTAB[339]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 339), align 8
  %"CONTAB[6]*41" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 338, {}* %"CONTAB[339]*", {}* %"CONTAB[6]*41")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.22() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !61 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.20)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.21)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.23() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !62 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 341, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-BESTER_VORSCHLAG, i64 0, i64 0))
  %"CONTAB[341]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 341), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 340, {}* %"CONTAB[341]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 343, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-KORRIGIEREN, i64 0, i64 0))
  %"CONTAB[343]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 343), align 8
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 342, {}* %"CONTAB[343]*", {}* %"CONTAB[6]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 345, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-NACHOPTIMIERUNG, i64 0, i64 0))
  %"CONTAB[345]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 345), align 8
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 344, {}* %"CONTAB[345]*", {}* %"CONTAB[6]*2")
  %"CONTAB[334]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 334), align 16
  %"CONTAB[336]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 336), align 16
  %"CONTAB[338]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 338), align 16
  %"CONTAB[340]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 340), align 16
  %"CONTAB[342]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 342), align 16
  %"CONTAB[344]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 344), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 333, i64 6, {}* %"CONTAB[334]*", {}* %"CONTAB[336]*", {}* %"CONTAB[338]*", {}* %"CONTAB[340]*", {}* %"CONTAB[342]*", {}* %"CONTAB[344]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 347, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ZEROP, i64 0, i64 0))
  %"CONTAB[347]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 347), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 346, {}* %"CONTAB[347]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 348, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-~2%~10@a ~10@a ~14@a~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 349, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 350, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 351, i64 3, {}* %"CONTAB[41]*", {}* %"CONTAB[28]*", {}* %"CONTAB[26]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 352, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-Total (m)", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 353, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-Total (s)", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 354, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-Bytes, i64 0, i64 0))
  %"CONTAB[41]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 355, i64 3, {}* %"CONTAB[41]*3", {}* %"CONTAB[28]*4", {}* %"CONTAB[26]*5")
  %"CONTAB[41]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 356, i64 3, {}* %"CONTAB[41]*6", {}* %"CONTAB[28]*7", {}* %"CONTAB[26]*8")
  %"CONTAB[41]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 357, i64 3, {}* %"CONTAB[41]*9", {}* %"CONTAB[28]*10", {}* %"CONTAB[26]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 358, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-~10,4f ~10,4f ~14d~2%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 359, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 360, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[41]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 361, i64 3, {}* %"CONTAB[41]*12", {}* %"CONTAB[28]*13", {}* %"CONTAB[26]*14")
  %"CONTAB[41]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 362, i64 3, {}* %"CONTAB[41]*15", {}* %"CONTAB[28]*16", {}* %"CONTAB[26]*17")
  %"CONTAB[41]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 363, i64 3, {}* %"CONTAB[41]*18", {}* %"CONTAB[28]*19", {}* %"CONTAB[26]*20")
  %"CONTAB[41]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 364, i64 3, {}* %"CONTAB[41]*21", {}* %"CONTAB[28]*22", {}* %"CONTAB[26]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 365, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-~25A ~10@a ~6@a ~9@a ~14@a ~14@a ~15@A~2%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 366, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 367, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 368, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 369, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 370, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 371, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[41]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 372, i64 3, {}* %"CONTAB[41]*24", {}* %"CONTAB[28]*25", {}* %"CONTAB[26]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 373, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 374, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-method, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 375, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-number, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 376, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-percent, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 377, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-duration (m)", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 378, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-duration (s)", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 379, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-storage need", i64 0, i64 0))
  %"CONTAB[41]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 380, i64 3, {}* %"CONTAB[41]*27", {}* %"CONTAB[28]*28", {}* %"CONTAB[26]*29")
  %"CONTAB[41]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 381, i64 3, {}* %"CONTAB[41]*30", {}* %"CONTAB[28]*31", {}* %"CONTAB[26]*32")
  %"CONTAB[41]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 382, i64 3, {}* %"CONTAB[41]*33", {}* %"CONTAB[28]*34", {}* %"CONTAB[26]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 384, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-MAPCAR, i64 0, i64 0))
  %"CONTAB[384]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 384), align 16
  %"CONTAB[10]*36" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 383, {}* %"CONTAB[384]*", {}* %"CONTAB[10]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 385, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-~25a ~10@a ~6d ~8,2f% ~14,4f ~14,4f ~15d~%", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 386, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 387, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 388, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 389, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"str-% ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 390, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 391, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"str- ", i64 0, i64 0))
  %"CONTAB[41]*37" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*38" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*39" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 392, i64 3, {}* %"CONTAB[41]*37", {}* %"CONTAB[28]*38", {}* %"CONTAB[26]*39")
  %"CONTAB[41]*40" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*41" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*42" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 393, i64 3, {}* %"CONTAB[41]*40", {}* %"CONTAB[28]*41", {}* %"CONTAB[26]*42")
  %"CONTAB[41]*43" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*44" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*45" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 394, i64 3, {}* %"CONTAB[41]*43", {}* %"CONTAB[28]*44", {}* %"CONTAB[26]*45")
  %"CONTAB[41]*46" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*47" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*48" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 395, i64 3, {}* %"CONTAB[41]*46", {}* %"CONTAB[28]*47", {}* %"CONTAB[26]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 396, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-Presort, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 397, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-Selection, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 398, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-Propose, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 399, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-Exchange local", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 400, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"str-Exchange global", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 401, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 403, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-GETHASH, i64 0, i64 0))
  %"CONTAB[403]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 403), align 8
  %"CONTAB[10]*49" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 402, {}* %"CONTAB[403]*", {}* %"CONTAB[10]*49")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 405, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-VORSORTIEREN, i64 0, i64 0))
  %"CONTAB[405]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 405), align 8
  %"CONTAB[6]*50" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 404, {}* %"CONTAB[405]*", {}* %"CONTAB[6]*50")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 407, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-MAX, i64 0, i64 0))
  %"CONTAB[407]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 407), align 8
  %"CONTAB[10]*51" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 406, {}* %"CONTAB[407]*", {}* %"CONTAB[10]*51")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.24() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !63 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.22)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.23)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.25() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !64 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 408, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 409, i64 3, {}* %"CONTAB[41]*", {}* %"CONTAB[28]*", {}* %"CONTAB[26]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 411, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str-PRO-MERK-HASH-TABELLE-AUSGEBEN_2, i64 0, i64 0))
  %"CONTAB[411]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 411), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 410, {}* %"CONTAB[411]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 414, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-METHODE, i64 0, i64 0))
  %"CONTAB[414]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 414), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 413, {}* %"CONTAB[414]*", {}* %"CONTAB[6]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 416, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-KORREKTURTICKS, i64 0, i64 0))
  %"CONTAB[416]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 416), align 16
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 415, {}* %"CONTAB[416]*", {}* %"CONTAB[6]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 418, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-EXCHANGEFAKTOR, i64 0, i64 0))
  %"CONTAB[418]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 418), align 16
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 417, {}* %"CONTAB[418]*", {}* %"CONTAB[6]*3")
  %"CONTAB[413]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 413), align 8
  %"CONTAB[415]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 415), align 8
  %"CONTAB[417]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 417), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 412, i64 3, {}* %"CONTAB[413]*", {}* %"CONTAB[415]*", {}* %"CONTAB[417]*")
  %"CONTAB[50]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 50), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 419, i64 4, {}* %"CONTAB[50]*", {}* inttoptr (i64 24492 to {}*), {}* inttoptr (i64 540 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[413]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 413), align 8
  %"CONTAB[415]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 415), align 8
  %"CONTAB[417]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 417), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 420, i64 3, {}* %"CONTAB[413]*4", {}* %"CONTAB[415]*5", {}* %"CONTAB[417]*6")
  %"CONTAB[113]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 113), align 8
  %"CONTAB[115]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 115), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 421, i64 2, {}* %"CONTAB[113]*", {}* %"CONTAB[115]*")
  %"CONTAB[113]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 113), align 8
  %"CONTAB[115]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 115), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 422, i64 2, {}* %"CONTAB[113]*7", {}* %"CONTAB[115]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 426, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-162048, i64 0, i64 0))
  %"CONTAB[426]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 426), align 16
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 425, {}* %"CONTAB[426]*", {}* %"CONTAB[12]*")
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 428, i64 2, {}* %"CONTAB[239]*", {}* %"CONTAB[133]*")
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[428]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 428), align 16
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[385]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 427, i64 8, {}* %"CONTAB[32]*", {}* %"CONTAB[428]*", {}* %"CONTAB[135]*", {}* %"CONTAB[137]*", {}* %"CONTAB[138]*", {}* %"CONTAB[385]*", {}* %"CONTAB[141]*", {}* inttoptr (i64 12 to {}*))
  %"CONTAB[425]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 425), align 8
  %"CONTAB[427]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 427), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 424, i64 2, {}* %"CONTAB[425]*", {}* %"CONTAB[427]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 431, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-162049, i64 0, i64 0))
  %"CONTAB[431]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 431), align 8
  %"CONTAB[12]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 430, {}* %"CONTAB[431]*", {}* %"CONTAB[12]*9")
  %"CONTAB[239]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 433, i64 2, {}* %"CONTAB[239]*10", {}* %"CONTAB[133]*11")
  %"CONTAB[32]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[433]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 433), align 8
  %"CONTAB[135]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[385]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %"CONTAB[141]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 432, i64 8, {}* %"CONTAB[32]*12", {}* %"CONTAB[433]*", {}* %"CONTAB[135]*13", {}* %"CONTAB[137]*14", {}* %"CONTAB[138]*15", {}* %"CONTAB[385]*16", {}* %"CONTAB[141]*17", {}* inttoptr (i64 36 to {}*))
  %"CONTAB[430]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 430), align 16
  %"CONTAB[432]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 432), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 429, i64 2, {}* %"CONTAB[430]*", {}* %"CONTAB[432]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 436, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-162050, i64 0, i64 0))
  %"CONTAB[436]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 436), align 16
  %"CONTAB[12]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 435, {}* %"CONTAB[436]*", {}* %"CONTAB[12]*18")
  %"CONTAB[239]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 438, i64 2, {}* %"CONTAB[239]*19", {}* %"CONTAB[133]*20")
  %"CONTAB[32]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[438]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 438), align 16
  %"CONTAB[135]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[385]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %"CONTAB[141]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 437, i64 8, {}* %"CONTAB[32]*21", {}* %"CONTAB[438]*", {}* %"CONTAB[135]*22", {}* %"CONTAB[137]*23", {}* %"CONTAB[138]*24", {}* %"CONTAB[385]*25", {}* %"CONTAB[141]*26", {}* inttoptr (i64 52 to {}*))
  %"CONTAB[435]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 435), align 8
  %"CONTAB[437]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 437), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 434, i64 2, {}* %"CONTAB[435]*", {}* %"CONTAB[437]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 441, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-162051, i64 0, i64 0))
  %"CONTAB[441]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 441), align 8
  %"CONTAB[12]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 440, {}* %"CONTAB[441]*", {}* %"CONTAB[12]*27")
  %"CONTAB[239]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 443, i64 2, {}* %"CONTAB[239]*28", {}* %"CONTAB[133]*29")
  %"CONTAB[32]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[443]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 443), align 8
  %"CONTAB[135]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[385]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %"CONTAB[141]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 442, i64 8, {}* %"CONTAB[32]*30", {}* %"CONTAB[443]*", {}* %"CONTAB[135]*31", {}* %"CONTAB[137]*32", {}* %"CONTAB[138]*33", {}* %"CONTAB[385]*34", {}* %"CONTAB[141]*35", {}* inttoptr (i64 76 to {}*))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.26() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !65 {
entry:
  %"CONTAB[440]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 440), align 16
  %"CONTAB[442]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 442), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 439, i64 2, {}* %"CONTAB[440]*", {}* %"CONTAB[442]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 446, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-162052, i64 0, i64 0))
  %"CONTAB[446]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 446), align 16
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 445, {}* %"CONTAB[446]*", {}* %"CONTAB[12]*")
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 448, i64 2, {}* %"CONTAB[239]*", {}* %"CONTAB[133]*")
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[448]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 448), align 16
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[385]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 447, i64 8, {}* %"CONTAB[32]*", {}* %"CONTAB[448]*", {}* %"CONTAB[135]*", {}* %"CONTAB[137]*", {}* %"CONTAB[138]*", {}* %"CONTAB[385]*", {}* %"CONTAB[141]*", {}* inttoptr (i64 108 to {}*))
  %"CONTAB[445]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 445), align 8
  %"CONTAB[447]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 447), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 444, i64 2, {}* %"CONTAB[445]*", {}* %"CONTAB[447]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 451, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-162053, i64 0, i64 0))
  %"CONTAB[451]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 451), align 8
  %"CONTAB[12]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 450, {}* %"CONTAB[451]*", {}* %"CONTAB[12]*1")
  %"CONTAB[239]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 453, i64 2, {}* %"CONTAB[239]*2", {}* %"CONTAB[133]*3")
  %"CONTAB[32]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[453]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 453), align 8
  %"CONTAB[135]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[385]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %"CONTAB[141]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 452, i64 8, {}* %"CONTAB[32]*4", {}* %"CONTAB[453]*", {}* %"CONTAB[135]*5", {}* %"CONTAB[137]*6", {}* %"CONTAB[138]*7", {}* %"CONTAB[385]*8", {}* %"CONTAB[141]*9", {}* inttoptr (i64 136 to {}*))
  %"CONTAB[450]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 450), align 16
  %"CONTAB[452]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 452), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 449, i64 2, {}* %"CONTAB[450]*", {}* %"CONTAB[452]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 456, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-162054, i64 0, i64 0))
  %"CONTAB[456]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 456), align 16
  %"CONTAB[12]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 455, {}* %"CONTAB[456]*", {}* %"CONTAB[12]*10")
  %"CONTAB[239]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 458, i64 2, {}* %"CONTAB[239]*11", {}* %"CONTAB[133]*12")
  %"CONTAB[32]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[458]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 458), align 16
  %"CONTAB[135]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[385]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 385), align 8
  %"CONTAB[141]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 457, i64 8, {}* %"CONTAB[32]*13", {}* %"CONTAB[458]*", {}* %"CONTAB[135]*14", {}* %"CONTAB[137]*15", {}* %"CONTAB[138]*16", {}* %"CONTAB[385]*17", {}* %"CONTAB[141]*18", {}* inttoptr (i64 156 to {}*))
  %"CONTAB[455]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 455), align 8
  %"CONTAB[457]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 457), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 454, i64 2, {}* %"CONTAB[455]*", {}* %"CONTAB[457]*")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 232), align 16
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[424]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 424), align 16
  %"CONTAB[429]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 429), align 8
  %"CONTAB[434]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 434), align 16
  %"CONTAB[439]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 439), align 8
  %"CONTAB[444]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 444), align 16
  %"CONTAB[449]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 449), align 8
  %"CONTAB[454]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 454), align 16
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[266]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 266), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 423, i64 11, {}* %"CONTAB[232]*", {}* %"CONTAB[219]*", {}* %"CONTAB[424]*", {}* %"CONTAB[429]*", {}* %"CONTAB[434]*", {}* %"CONTAB[439]*", {}* %"CONTAB[444]*", {}* %"CONTAB[449]*", {}* %"CONTAB[454]*", {}* %"CONTAB[70]*", {}* %"CONTAB[266]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 462, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161950, i64 0, i64 0))
  %"CONTAB[462]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 462), align 16
  %"CONTAB[12]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 461, {}* %"CONTAB[462]*", {}* %"CONTAB[12]*19")
  %"CONTAB[239]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 464, i64 2, {}* %"CONTAB[239]*20", {}* %"CONTAB[133]*21")
  %"CONTAB[32]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[464]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 464), align 16
  %"CONTAB[135]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[358]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 358), align 16
  %"CONTAB[141]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 463, i64 8, {}* %"CONTAB[32]*22", {}* %"CONTAB[464]*", {}* %"CONTAB[135]*23", {}* %"CONTAB[137]*24", {}* %"CONTAB[138]*25", {}* %"CONTAB[358]*", {}* %"CONTAB[141]*26", {}* inttoptr (i64 20 to {}*))
  %"CONTAB[461]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 461), align 8
  %"CONTAB[463]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 463), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 460, i64 2, {}* %"CONTAB[461]*", {}* %"CONTAB[463]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 467, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161951, i64 0, i64 0))
  %"CONTAB[467]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 467), align 8
  %"CONTAB[12]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 466, {}* %"CONTAB[467]*", {}* %"CONTAB[12]*27")
  %"CONTAB[239]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 469, i64 2, {}* %"CONTAB[239]*28", {}* %"CONTAB[133]*29")
  %"CONTAB[32]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[469]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 469), align 8
  %"CONTAB[135]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[358]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 358), align 16
  %"CONTAB[141]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 468, i64 8, {}* %"CONTAB[32]*30", {}* %"CONTAB[469]*", {}* %"CONTAB[135]*31", {}* %"CONTAB[137]*32", {}* %"CONTAB[138]*33", {}* %"CONTAB[358]*34", {}* %"CONTAB[141]*35", {}* inttoptr (i64 48 to {}*))
  %"CONTAB[466]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 466), align 16
  %"CONTAB[468]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 468), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 465, i64 2, {}* %"CONTAB[466]*", {}* %"CONTAB[468]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 472, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161952, i64 0, i64 0))
  %"CONTAB[472]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 472), align 16
  %"CONTAB[12]*36" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 471, {}* %"CONTAB[472]*", {}* %"CONTAB[12]*36")
  %"CONTAB[239]*37" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*38" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 474, i64 2, {}* %"CONTAB[239]*37", {}* %"CONTAB[133]*38")
  %"CONTAB[32]*39" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[474]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 474), align 16
  %"CONTAB[135]*40" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*41" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*42" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[358]*43" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 358), align 16
  %"CONTAB[141]*44" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 473, i64 8, {}* %"CONTAB[32]*39", {}* %"CONTAB[474]*", {}* %"CONTAB[135]*40", {}* %"CONTAB[137]*41", {}* %"CONTAB[138]*42", {}* %"CONTAB[358]*43", {}* %"CONTAB[141]*44", {}* inttoptr (i64 68 to {}*))
  %"CONTAB[471]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 471), align 8
  %"CONTAB[473]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 473), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 470, i64 2, {}* %"CONTAB[471]*", {}* %"CONTAB[473]*")
  %"CONTAB[232]*45" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 232), align 16
  %"CONTAB[219]*46" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[460]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 460), align 16
  %"CONTAB[465]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 465), align 8
  %"CONTAB[470]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 470), align 16
  %"CONTAB[70]*47" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[266]*48" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 266), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 459, i64 7, {}* %"CONTAB[232]*45", {}* %"CONTAB[219]*46", {}* %"CONTAB[460]*", {}* %"CONTAB[465]*", {}* %"CONTAB[470]*", {}* %"CONTAB[70]*47", {}* %"CONTAB[266]*48")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 478, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161988, i64 0, i64 0))
  %"CONTAB[478]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 478), align 16
  %"CONTAB[12]*49" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 477, {}* %"CONTAB[478]*", {}* %"CONTAB[12]*49")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.27() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !66 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.25)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.26)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @RUN-ALL.28() #5 personality i32 (...)* @__gxx_personality_v0 !dbg !67 {
entry:
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 480, i64 2, {}* %"CONTAB[239]*", {}* %"CONTAB[133]*")
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[480]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 480), align 16
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[365]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 479, i64 8, {}* %"CONTAB[32]*", {}* %"CONTAB[480]*", {}* %"CONTAB[135]*", {}* %"CONTAB[137]*", {}* %"CONTAB[138]*", {}* %"CONTAB[365]*", {}* %"CONTAB[141]*", {}* inttoptr (i64 12 to {}*))
  %"CONTAB[477]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 477), align 8
  %"CONTAB[479]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 479), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 476, i64 2, {}* %"CONTAB[477]*", {}* %"CONTAB[479]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 483, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161989, i64 0, i64 0))
  %"CONTAB[483]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 483), align 8
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 482, {}* %"CONTAB[483]*", {}* %"CONTAB[12]*")
  %"CONTAB[239]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 485, i64 2, {}* %"CONTAB[239]*1", {}* %"CONTAB[133]*2")
  %"CONTAB[32]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[485]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 485), align 8
  %"CONTAB[135]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[365]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %"CONTAB[141]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 484, i64 8, {}* %"CONTAB[32]*3", {}* %"CONTAB[485]*", {}* %"CONTAB[135]*4", {}* %"CONTAB[137]*5", {}* %"CONTAB[138]*6", {}* %"CONTAB[365]*7", {}* %"CONTAB[141]*8", {}* inttoptr (i64 36 to {}*))
  %"CONTAB[482]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 482), align 16
  %"CONTAB[484]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 484), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 481, i64 2, {}* %"CONTAB[482]*", {}* %"CONTAB[484]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 488, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161990, i64 0, i64 0))
  %"CONTAB[488]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 488), align 16
  %"CONTAB[12]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 487, {}* %"CONTAB[488]*", {}* %"CONTAB[12]*9")
  %"CONTAB[239]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 490, i64 2, {}* %"CONTAB[239]*10", {}* %"CONTAB[133]*11")
  %"CONTAB[32]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[490]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 490), align 16
  %"CONTAB[135]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[365]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %"CONTAB[141]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 489, i64 8, {}* %"CONTAB[32]*12", {}* %"CONTAB[490]*", {}* %"CONTAB[135]*13", {}* %"CONTAB[137]*14", {}* %"CONTAB[138]*15", {}* %"CONTAB[365]*16", {}* %"CONTAB[141]*17", {}* inttoptr (i64 56 to {}*))
  %"CONTAB[487]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 487), align 8
  %"CONTAB[489]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 489), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 486, i64 2, {}* %"CONTAB[487]*", {}* %"CONTAB[489]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 493, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161991, i64 0, i64 0))
  %"CONTAB[493]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 493), align 8
  %"CONTAB[12]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 492, {}* %"CONTAB[493]*", {}* %"CONTAB[12]*18")
  %"CONTAB[239]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 495, i64 2, {}* %"CONTAB[239]*19", {}* %"CONTAB[133]*20")
  %"CONTAB[32]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[495]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 495), align 8
  %"CONTAB[135]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[365]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %"CONTAB[141]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 494, i64 8, {}* %"CONTAB[32]*21", {}* %"CONTAB[495]*", {}* %"CONTAB[135]*22", {}* %"CONTAB[137]*23", {}* %"CONTAB[138]*24", {}* %"CONTAB[365]*25", {}* %"CONTAB[141]*26", {}* inttoptr (i64 76 to {}*))
  %"CONTAB[492]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 492), align 16
  %"CONTAB[494]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 494), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 491, i64 2, {}* %"CONTAB[492]*", {}* %"CONTAB[494]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 498, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161992, i64 0, i64 0))
  %"CONTAB[498]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 498), align 16
  %"CONTAB[12]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 497, {}* %"CONTAB[498]*", {}* %"CONTAB[12]*27")
  %"CONTAB[239]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*29" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 500, i64 2, {}* %"CONTAB[239]*28", {}* %"CONTAB[133]*29")
  %"CONTAB[32]*30" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[500]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 500), align 16
  %"CONTAB[135]*31" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*32" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*33" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[365]*34" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %"CONTAB[141]*35" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 499, i64 8, {}* %"CONTAB[32]*30", {}* %"CONTAB[500]*", {}* %"CONTAB[135]*31", {}* %"CONTAB[137]*32", {}* %"CONTAB[138]*33", {}* %"CONTAB[365]*34", {}* %"CONTAB[141]*35", {}* inttoptr (i64 100 to {}*))
  %"CONTAB[497]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 497), align 8
  %"CONTAB[499]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 499), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 496, i64 2, {}* %"CONTAB[497]*", {}* %"CONTAB[499]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 503, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161993, i64 0, i64 0))
  %"CONTAB[503]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 503), align 8
  %"CONTAB[12]*36" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 502, {}* %"CONTAB[503]*", {}* %"CONTAB[12]*36")
  %"CONTAB[239]*37" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*38" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 505, i64 2, {}* %"CONTAB[239]*37", {}* %"CONTAB[133]*38")
  %"CONTAB[32]*39" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[505]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 505), align 8
  %"CONTAB[135]*40" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*41" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*42" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[365]*43" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %"CONTAB[141]*44" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 504, i64 8, {}* %"CONTAB[32]*39", {}* %"CONTAB[505]*", {}* %"CONTAB[135]*40", {}* %"CONTAB[137]*41", {}* %"CONTAB[138]*42", {}* %"CONTAB[365]*43", {}* %"CONTAB[141]*44", {}* inttoptr (i64 124 to {}*))
  %"CONTAB[502]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 502), align 16
  %"CONTAB[504]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 504), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 501, i64 2, {}* %"CONTAB[502]*", {}* %"CONTAB[504]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 508, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161994, i64 0, i64 0))
  %"CONTAB[508]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 508), align 16
  %"CONTAB[12]*45" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 507, {}* %"CONTAB[508]*", {}* %"CONTAB[12]*45")
  %"CONTAB[239]*46" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*47" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 510, i64 2, {}* %"CONTAB[239]*46", {}* %"CONTAB[133]*47")
  %"CONTAB[32]*48" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[510]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 510), align 16
  %"CONTAB[135]*49" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*50" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*51" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[365]*52" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 365), align 8
  %"CONTAB[141]*53" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 509, i64 8, {}* %"CONTAB[32]*48", {}* %"CONTAB[510]*", {}* %"CONTAB[135]*49", {}* %"CONTAB[137]*50", {}* %"CONTAB[138]*51", {}* %"CONTAB[365]*52", {}* %"CONTAB[141]*53", {}* inttoptr (i64 148 to {}*))
  %"CONTAB[507]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 507), align 8
  %"CONTAB[509]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 509), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 506, i64 2, {}* %"CONTAB[507]*", {}* %"CONTAB[509]*")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 232), align 16
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[476]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 476), align 16
  %"CONTAB[481]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 481), align 8
  %"CONTAB[486]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 486), align 16
  %"CONTAB[491]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 491), align 8
  %"CONTAB[496]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 496), align 16
  %"CONTAB[501]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 501), align 8
  %"CONTAB[506]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 506), align 16
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[266]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 266), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 475, i64 11, {}* %"CONTAB[232]*", {}* %"CONTAB[219]*", {}* %"CONTAB[476]*", {}* %"CONTAB[481]*", {}* %"CONTAB[486]*", {}* %"CONTAB[491]*", {}* %"CONTAB[496]*", {}* %"CONTAB[501]*", {}* %"CONTAB[506]*", {}* %"CONTAB[70]*", {}* %"CONTAB[266]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 513, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-A, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.29() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !68 {
entry:
  %"CONTAB[513]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 513), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 512, {}* %"CONTAB[513]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 515, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-B, i64 0, i64 0))
  %"CONTAB[515]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 515), align 8
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 514, {}* %"CONTAB[515]*", {}* %"CONTAB[6]*1")
  %"CONTAB[512]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 512), align 16
  %"CONTAB[514]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 514), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 511, i64 2, {}* %"CONTAB[512]*", {}* %"CONTAB[514]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 519, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161914, i64 0, i64 0))
  %"CONTAB[519]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 519), align 8
  %"CONTAB[12]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 518, {}* %"CONTAB[519]*", {}* %"CONTAB[12]*")
  %"CONTAB[239]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 521, i64 2, {}* %"CONTAB[239]*", {}* %"CONTAB[133]*")
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[521]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 521), align 8
  %"CONTAB[135]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[348]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 348), align 16
  %"CONTAB[141]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 520, i64 8, {}* %"CONTAB[32]*", {}* %"CONTAB[521]*", {}* %"CONTAB[135]*", {}* %"CONTAB[137]*", {}* %"CONTAB[138]*", {}* %"CONTAB[348]*", {}* %"CONTAB[141]*", {}* inttoptr (i64 28 to {}*))
  %"CONTAB[518]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 518), align 16
  %"CONTAB[520]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 520), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 517, i64 2, {}* %"CONTAB[518]*", {}* %"CONTAB[520]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 524, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161915, i64 0, i64 0))
  %"CONTAB[524]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 524), align 16
  %"CONTAB[12]*2" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 523, {}* %"CONTAB[524]*", {}* %"CONTAB[12]*2")
  %"CONTAB[239]*3" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*4" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 526, i64 2, {}* %"CONTAB[239]*3", {}* %"CONTAB[133]*4")
  %"CONTAB[32]*5" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[526]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 526), align 16
  %"CONTAB[135]*6" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*7" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*8" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[348]*9" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 348), align 16
  %"CONTAB[141]*10" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 525, i64 8, {}* %"CONTAB[32]*5", {}* %"CONTAB[526]*", {}* %"CONTAB[135]*6", {}* %"CONTAB[137]*7", {}* %"CONTAB[138]*8", {}* %"CONTAB[348]*9", {}* %"CONTAB[141]*10", {}* inttoptr (i64 52 to {}*))
  %"CONTAB[523]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 523), align 8
  %"CONTAB[525]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 525), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 522, i64 2, {}* %"CONTAB[523]*", {}* %"CONTAB[525]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 529, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-FORMAT-ARG-161916, i64 0, i64 0))
  %"CONTAB[529]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 529), align 8
  %"CONTAB[12]*11" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 12), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 528, {}* %"CONTAB[529]*", {}* %"CONTAB[12]*11")
  %"CONTAB[239]*12" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 239), align 8
  %"CONTAB[133]*13" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 133), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 531, i64 2, {}* %"CONTAB[239]*12", {}* %"CONTAB[133]*13")
  %"CONTAB[32]*14" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 32), align 16
  %"CONTAB[531]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 531), align 8
  %"CONTAB[135]*15" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 135), align 8
  %"CONTAB[137]*16" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 137), align 8
  %"CONTAB[138]*17" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 138), align 16
  %"CONTAB[348]*18" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 348), align 16
  %"CONTAB[141]*19" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 141), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 530, i64 8, {}* %"CONTAB[32]*14", {}* %"CONTAB[531]*", {}* %"CONTAB[135]*15", {}* %"CONTAB[137]*16", {}* %"CONTAB[138]*17", {}* %"CONTAB[348]*18", {}* %"CONTAB[141]*19", {}* inttoptr (i64 76 to {}*))
  %"CONTAB[528]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 528), align 16
  %"CONTAB[530]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 530), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 527, i64 2, {}* %"CONTAB[528]*", {}* %"CONTAB[530]*")
  %"CONTAB[232]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 232), align 16
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 219), align 8
  %"CONTAB[517]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 517), align 8
  %"CONTAB[522]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 522), align 16
  %"CONTAB[527]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 527), align 8
  %"CONTAB[70]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 70), align 16
  %"CONTAB[266]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 266), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 516, i64 7, {}* %"CONTAB[232]*", {}* %"CONTAB[219]*", {}* %"CONTAB[517]*", {}* %"CONTAB[522]*", {}* %"CONTAB[527]*", {}* %"CONTAB[70]*", {}* %"CONTAB[266]*")
  %"CONTAB[512]*20" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 512), align 16
  %"CONTAB[514]*21" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 514), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 532, i64 2, {}* %"CONTAB[512]*20", {}* %"CONTAB[514]*21")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitmessung.lisp^68^TOP-COMPILE-FILE", i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"str-zeitmessung.lisp^68^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 41), align 8
  %"CONTAB[28]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 28), align 16
  %"CONTAB[26]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 26), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 533, i64 3, {}* %"CONTAB[41]*", {}* %"CONTAB[28]*", {}* %"CONTAB[26]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 535, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-PRO-MERKE, i64 0, i64 0))
  %"CONTAB[535]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 535), align 8
  %"CONTAB[6]*22" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 534, {}* %"CONTAB[535]*", {}* %"CONTAB[6]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 538, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-EINTRAG, i64 0, i64 0))
  %"CONTAB[538]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 538), align 16
  %"CONTAB[6]*23" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 537, {}* %"CONTAB[538]*", {}* %"CONTAB[6]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 540, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ZEIT, i64 0, i64 0))
  %"CONTAB[540]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 540), align 16
  %"CONTAB[6]*24" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 539, {}* %"CONTAB[540]*", {}* %"CONTAB[6]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 542, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-BYTES, i64 0, i64 0))
  %"CONTAB[542]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 542), align 16
  %"CONTAB[6]*25" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 541, {}* %"CONTAB[542]*", {}* %"CONTAB[6]*25")
  %"CONTAB[537]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 537), align 8
  %"CONTAB[539]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 539), align 8
  %"CONTAB[541]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 541), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 536, i64 3, {}* %"CONTAB[537]*", {}* %"CONTAB[539]*", {}* %"CONTAB[541]*")
  %"CONTAB[50]*" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 50), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 543, i64 4, {}* %"CONTAB[50]*", {}* inttoptr (i64 38980 to {}*), {}* inttoptr (i64 800 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[537]*26" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 537), align 8
  %"CONTAB[539]*27" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 539), align 8
  %"CONTAB[541]*28" = load {}*, {}** getelementptr inbounds ([545 x {}*], [545 x {}*]* @CONTAB4422, i64 0, i64 541), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 544, i64 3, {}* %"CONTAB[537]*26", {}* %"CONTAB[539]*27", {}* %"CONTAB[541]*28")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitmessung.lisp^200^TOP-COMPILE-FILE", i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-zeitmessung.lisp^200^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.30() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !69 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.28)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.29)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.31() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !70 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.27)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.30)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.32() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !71 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.24)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.31)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.33() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !72 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.19)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.32)
  ret void
}

; Function Attrs: nounwind
declare void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }*, {}**, i64, {}*) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @CLASP-CTOR() #0 personality i32 (...)* @__gxx_personality_v0 {
entry:
  tail call void @cc_register_startup_function(void ()* nonnull @RUN-ALL)
  ret void
}

declare void @cc_register_startup_function(void ()*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @cc_error_too_few_arguments(i64, i64, %0*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @cc_error_too_many_arguments(i64, i64, %0*) local_unnamed_addr #6

attributes #0 = { uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #1 = { nounwind "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #2 = { ssp uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #3 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #4 = { nounwind readnone speculatable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #5 = { nounwind uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn }

!llvm.ident = !{!0, !1}
!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5, !6, !7, !8}

!0 = !{!"Clasp"}
!1 = !{!"clang version 5.0.1 (tags/RELEASE_501/final)"}
!2 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !3, producer: "clasp Common Lisp compiler", isOptimized: false, flags: "-v", runtimeVersion: 1, splitDebugFilename: "the-split-name.log", emissionKind: LineTablesOnly, enums: !4)
!3 = !DIFile(filename: "zeitmessung.lisp", directory: "/Users/karstenpoeck/lisp/coke/program")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"PIC Level", i32 2}
!9 = distinct !DISubprogram(name: "RUN-ALL", linkageName: "RUN-ALL", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed_fixed)
!13 = distinct !DISubprogram(name: "zeitmessung.lisp^1^TOP-COMPILE-FILE", linkageName: "zeitmessung.lisp^1^TOP-COMPILE-FILE", scope: !3, file: !3, line: 1, type: !10, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !2, variables: !4)
!14 = !{!15, !19, i64 16}
!15 = !{!"_ZTS13__va_list_tag", !16, i64 0, !16, i64 4, !19, i64 8, !19, i64 16}
!16 = !{!"int", !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C++ TBAA"}
!19 = !{!"any pointer", !17, i64 0}
!20 = !{!15, !16, i64 0}
!21 = !{!22, !22, i64 0}
!22 = !{!"long", !17, i64 0}
!23 = distinct !DISubprogram(name: "zeitmessung.lisp^3^TOP-COMPILE-FILE", linkageName: "zeitmessung.lisp^3^TOP-COMPILE-FILE", scope: !3, file: !3, line: 3, type: !10, isLocal: false, isDefinition: true, scopeLine: 3, isOptimized: false, unit: !2, variables: !4)
!24 = distinct !DISubprogram(name: "PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN^COMMON-LISP-USER^FN^^", linkageName: "PRO-ERZEUGE-HASH-TABELLE-ZUM-MERKEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 3, type: !10, isLocal: false, isDefinition: true, scopeLine: 3, isOptimized: false, unit: !2, variables: !4)
!25 = distinct !DISubprogram(name: "zeitmessung.lisp^7^TOP-COMPILE-FILE", linkageName: "zeitmessung.lisp^7^TOP-COMPILE-FILE", scope: !3, file: !3, line: 7, type: !10, isLocal: false, isDefinition: true, scopeLine: 7, isOptimized: false, unit: !2, variables: !4)
!26 = distinct !DISubprogram(name: "PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^", linkageName: "PRO-MERK-HASH-TABELLE-RUECKSETZEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 7, type: !10, isLocal: false, isDefinition: true, scopeLine: 7, isOptimized: false, unit: !2, variables: !4)
!27 = distinct !DISubprogram(name: "zeitmessung.lisp^15^TOP-COMPILE-FILE", linkageName: "zeitmessung.lisp^15^TOP-COMPILE-FILE", scope: !3, file: !3, line: 15, type: !10, isLocal: false, isDefinition: true, scopeLine: 15, isOptimized: false, unit: !2, variables: !4)
!28 = distinct !DISubprogram(name: "PRO-MERK-HASH-TABELLE-AUSGEBEN^COMMON-LISP-USER^FN^^", linkageName: "PRO-MERK-HASH-TABELLE-AUSGEBEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 15, type: !10, isLocal: false, isDefinition: true, scopeLine: 15, isOptimized: false, unit: !2, variables: !4)
!29 = distinct !DISubprogram(name: "zeitmessung.lisp^31^TOP-COMPILE-FILE", linkageName: "zeitmessung.lisp^31^TOP-COMPILE-FILE", scope: !3, file: !3, line: 31, type: !10, isLocal: false, isDefinition: true, scopeLine: 31, isOptimized: false, unit: !2, variables: !4)
!30 = distinct !DISubprogram(name: "PRO-ALLES-SCHLUESSEL^COMMON-LISP-USER^FN^^", linkageName: "PRO-ALLES-SCHLUESSEL^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 31, type: !10, isLocal: false, isDefinition: true, scopeLine: 31, isOptimized: false, unit: !2, variables: !4)
!31 = !{!32, !19, i64 0}
!32 = !{!"_ZTSN7gctools9smart_ptrIN4core3T_OEEE", !19, i64 0}
!33 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 31, type: !10, isLocal: false, isDefinition: true, scopeLine: 31, isOptimized: false, unit: !2, variables: !4)
!34 = distinct !DISubprogram(name: "zeitmessung.lisp^39^TOP-COMPILE-FILE", linkageName: "zeitmessung.lisp^39^TOP-COMPILE-FILE", scope: !3, file: !3, line: 39, type: !10, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !2, variables: !4)
!35 = distinct !DISubprogram(name: "PRO-MERK-HASH-TABELLE-AUSGEBEN_0^COMMON-LISP-USER^FN^^", linkageName: "PRO-MERK-HASH-TABELLE-AUSGEBEN_0^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 39, type: !10, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !2, variables: !4)
!36 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 39, type: !10, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !2, variables: !4)
!37 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 39, type: !10, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !2, variables: !4)
!38 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 39, type: !10, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !2, variables: !4)
!39 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 39, type: !10, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !2, variables: !4)
!40 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 39, type: !10, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !2, variables: !4)
!41 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 39, type: !10, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !2, variables: !4)
!42 = distinct !DISubprogram(name: "zeitmessung.lisp^68^TOP-COMPILE-FILE", linkageName: "zeitmessung.lisp^68^TOP-COMPILE-FILE", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!43 = distinct !DISubprogram(name: "PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", linkageName: "PRO-MERK-HASH-TABELLE-AUSGEBEN_2^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!44 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!45 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!46 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!47 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!48 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!49 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!50 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!51 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 68, type: !10, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !2, variables: !4)
!52 = distinct !DISubprogram(name: "zeitmessung.lisp^200^TOP-COMPILE-FILE", linkageName: "zeitmessung.lisp^200^TOP-COMPILE-FILE", scope: !3, file: !3, line: 200, type: !10, isLocal: false, isDefinition: true, scopeLine: 200, isOptimized: false, unit: !2, variables: !4)
!53 = distinct !DISubprogram(name: "PRO-MERKE^COMMON-LISP-USER^FN^^", linkageName: "PRO-MERKE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 200, type: !10, isLocal: false, isDefinition: true, scopeLine: 200, isOptimized: false, unit: !2, variables: !4)
!54 = distinct !DISubprogram(name: "RUN-ALL.15", linkageName: "RUN-ALL.15", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!55 = distinct !DISubprogram(name: "RUN-ALL.16", linkageName: "RUN-ALL.16", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!56 = distinct !DISubprogram(name: "RUN-ALL.17", linkageName: "RUN-ALL.17", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!57 = distinct !DISubprogram(name: "RUN-ALL.18", linkageName: "RUN-ALL.18", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!58 = distinct !DISubprogram(name: "RUN-ALL.19", linkageName: "RUN-ALL.19", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!59 = distinct !DISubprogram(name: "RUN-ALL.20", linkageName: "RUN-ALL.20", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!60 = distinct !DISubprogram(name: "RUN-ALL.21", linkageName: "RUN-ALL.21", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!61 = distinct !DISubprogram(name: "RUN-ALL.22", linkageName: "RUN-ALL.22", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!62 = distinct !DISubprogram(name: "RUN-ALL.23", linkageName: "RUN-ALL.23", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!63 = distinct !DISubprogram(name: "RUN-ALL.24", linkageName: "RUN-ALL.24", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!64 = distinct !DISubprogram(name: "RUN-ALL.25", linkageName: "RUN-ALL.25", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!65 = distinct !DISubprogram(name: "RUN-ALL.26", linkageName: "RUN-ALL.26", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!66 = distinct !DISubprogram(name: "RUN-ALL.27", linkageName: "RUN-ALL.27", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!67 = distinct !DISubprogram(name: "RUN-ALL.28", linkageName: "RUN-ALL.28", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!68 = distinct !DISubprogram(name: "RUN-ALL.29", linkageName: "RUN-ALL.29", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!69 = distinct !DISubprogram(name: "RUN-ALL.30", linkageName: "RUN-ALL.30", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!70 = distinct !DISubprogram(name: "RUN-ALL.31", linkageName: "RUN-ALL.31", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!71 = distinct !DISubprogram(name: "RUN-ALL.32", linkageName: "RUN-ALL.32", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!72 = distinct !DISubprogram(name: "RUN-ALL.33", linkageName: "RUN-ALL.33", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
