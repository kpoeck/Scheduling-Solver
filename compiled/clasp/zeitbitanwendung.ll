; ModuleID = '/Users/karstenpoeck/lisp/coke/helpers/schule/zeitbitanwendung.lisp'
source_filename = "/Users/karstenpoeck/lisp/coke/helpers/schule/zeitbitanwendung.lisp"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

%0 = type { i8*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }
%1 = type { %2, %0*, %"class.gctools::smart_ptr", i32, %"class.gctools::GCArray_moveable.7" }
%2 = type { %"class.core::Closure_O", %"class.gctools::smart_ptr", %3, i64, i64, i64, i64 }
%3 = type { %4* }
%4 = type { %"class.core::General_O", %"class.gctools::smart_ptr.1", %5, %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", %"class.gctools::smart_ptr", i64, i8, i8, %"class.gctools::smart_ptr" }
%5 = type { %"class.core::T_O" }
%"class.core::Closure_O" = type { %"class.core::NamedFunction_O" }
%"class.core::NamedFunction_O" = type { %"class.core::Function_O", %"class.gctools::smart_ptr" }
%"class.core::Function_O" = type { %"class.core::General_O", %"struct.std::__1::atomic" }
%"class.core::General_O" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { { %"class.core::T_O"*, i64 } (%"class.core::T_O"*, i64, %"class.core::T_O"*, %"class.core::T_O"*, %"class.core::T_O"*, %"class.core::T_O"*, ...)* }
%"class.core::T_O" = type { i8 }
%"class.gctools::smart_ptr.1" = type { %"class.core::SimpleString_O"* }
%"class.core::SimpleString_O" = type { %"class.core::AbstractSimpleVector_O" }
%"class.core::AbstractSimpleVector_O" = type { %"class.core::Array_O" }
%"class.core::Array_O" = type { %"class.core::General_O", [0 x i64] }
%"class.gctools::smart_ptr" = type { %"class.core::T_O"* }
%"class.gctools::GCArray_moveable.7" = type { i64, [0 x %"class.gctools::smart_ptr"] }

@":::global-str-/Users/karstenpoeck/lisp/coke/helpers/schule/zeitbitanwendung.lisp" = private unnamed_addr constant [67 x i8] c"/Users/karstenpoeck/lisp/coke/helpers/schule/zeitbitanwendung.lisp\00"
@source-file-info-handle = internal global i32 -1
@constants-table = internal global { i8*, i8*, i64 } undef
@"zeitbitanwendung.lisp^2^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^2^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^2^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"zeitbitanwendung.lisp^2^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^5^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^5^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^5^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"zeitbitanwendung.lisp^5^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^7^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^7^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^7^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"zeitbitanwendung.lisp^7^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^9^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^9^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^9^TOP-COMPILE-FILE" = private unnamed_addr constant [41 x i8] c"zeitbitanwendung.lisp^9^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^11^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^11^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^11^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^11^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^14^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^14^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"V2^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"V2^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 96, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^14^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^14^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^25^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^25^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"V21^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"V21^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 115, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^25^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^25^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^35^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^35^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=ERZEUGE_LEEREN_ZEITADT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=ERZEUGE_LEEREN_ZEITADT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 124, i64 133, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^35^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^35^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^45^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^45^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"V3^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"V3^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 148, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^45^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^45^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^60^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^60^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"V31^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"V31^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 154, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^60^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^60^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^71^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^71^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"KONSISTENZ_TEST_BLOCKUNG^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KONSISTENZ_TEST_BLOCKUNG^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 162, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^71^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^71^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^78^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^78^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"KONSISTENZ_TEST_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KONSISTENZ_TEST_OBJEKTE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 167, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^78^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^78^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^89^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^89^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^89^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^89^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^91^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^91^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^91^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^91^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^92^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^92^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^92^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^92^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^94^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^94^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 181, i64 187, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^94^TOP-COMPILE-FILE" = private unnamed_addr constant [42 x i8] c"zeitbitanwendung.lisp^94^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^104^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^104^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 193, i64 199, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^104^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^104^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^109^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^109^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 205, i64 209, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^109^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^109^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^115^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^115^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 215, i64 221, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^115^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^115^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^120^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^120^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=BE_PRIOS^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=BE_PRIOS^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 227, i64 233, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^120^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^120^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^125^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^125^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 239, i64 243, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^125^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^125^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^131^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^131^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=BEREITE_ALLES_VOR_2^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=BEREITE_ALLES_VOR_2^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 249, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^131^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^131^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^136^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^136^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 257, i64 263, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^136^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^136^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^141^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^141^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 267, i64 274, i64 273, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^141^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^141^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^146^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^146^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 278, i64 283, i64 282, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^146^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^146^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^150^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^150^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 304, i64 310, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 311, i64 313, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^150^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^150^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^161^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^161^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 330, i64 336, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.1^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.1", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 311, i64 337, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^161^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^161^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^172^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^172^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 341, i64 345, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.2^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.2", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 311, i64 346, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^172^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^172^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^178^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^178^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 350, i64 354, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^178^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^178^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^184^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^184^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 411, i64 421, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^184^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^184^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^311^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^311^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 402, i64 425, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^311^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^311^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^315^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^315^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 427, i64 431, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^315^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^315^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^319^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^319^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 454, i64 460, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^319^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^319^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^394^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^394^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 396, i64 470, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^394^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^394^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^412^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^412^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 449, i64 478, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^412^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^412^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^433^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^433^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 394, i64 482, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^433^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^433^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^438^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^438^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 461, i64 486, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^438^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^438^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^452^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^452^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 447, i64 490, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^452^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^452^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^457^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^457^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 471, i64 494, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^457^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^457^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^473^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^473^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"KONSISTENZ_TEST_OBJEKTE_2^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"KONSISTENZ_TEST_OBJEKTE_2^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 497, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^473^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^473^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^487^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^487^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 501, i64 507, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.3^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.3", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 311, i64 508, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^487^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^487^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^493^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^493^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=ALLE_LEHRER_TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=ALLE_LEHRER_TAGE_TEST^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 516, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^493^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^493^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^499^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^499^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 513, i64 534, i64 533, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^499^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^499^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^509^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^509^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=TAGE_TEST^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 511, i64 542, i64 541, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^509^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^509^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^520^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^520^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 465, i64 553, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^520^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^520^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^526^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^526^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 545, i64 557, i64 12, i64 0, i64 1, i64 0 }
@"LAMBDA^COMMON-LISP^FN^^.4^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"LAMBDA^COMMON-LISP^FN^^.4", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 311, i64 558, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^526^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^526^TOP-COMPILE-FILE\00"
@"zeitbitanwendung.lisp^532^TOP-COMPILE-FILE^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"zeitbitanwendung.lisp^532^TOP-COMPILE-FILE", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 14, i64 12, i64 12, i64 0, i64 1, i64 0 }
@"SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^^DESC" = internal constant { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 } { { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* @"SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^", { i8*, i8*, i64 }* @constants-table, i32* @source-file-info-handle, i64 543, i64 562, i64 12, i64 0, i64 1, i64 0 }
@"str-zeitbitanwendung.lisp^532^TOP-COMPILE-FILE" = private unnamed_addr constant [43 x i8] c"zeitbitanwendung.lisp^532^TOP-COMPILE-FILE\00"
@"str-*MAKE-SPECIAL" = private unnamed_addr constant [14 x i8] c"*MAKE-SPECIAL\00"
@str-CORE = private unnamed_addr constant [5 x i8] c"CORE\00"
@str-SCH_ZEITADT_TESTEN = private unnamed_addr constant [19 x i8] c"SCH_ZEITADT_TESTEN\00"
@str-COMMON-LISP-USER = private unnamed_addr constant [17 x i8] c"COMMON-LISP-USER\00"
@str-BOUNDP = private unnamed_addr constant [7 x i8] c"BOUNDP\00"
@str-COMMON-LISP = private unnamed_addr constant [12 x i8] c"COMMON-LISP\00"
@str-TOP-LEVEL = private unnamed_addr constant [10 x i8] c"TOP-LEVEL\00"
@"str-YAS=HAT_OBJEKT_SLOT_P" = private unnamed_addr constant [22 x i8] c"YAS=HAT_OBJEKT_SLOT_P\00"
@str-KLASSE = private unnamed_addr constant [7 x i8] c"KLASSE\00"
@str-BELEGTE_ZEITEN_ADT = private unnamed_addr constant [19 x i8] c"BELEGTE_ZEITEN_ADT\00"
@"str-YAS=NEUER_SLOT" = private unnamed_addr constant [15 x i8] c"YAS=NEUER_SLOT\00"
@str-INFORMANT = private unnamed_addr constant [10 x i8] c"INFORMANT\00"
@str-KEYWORD = private unnamed_addr constant [8 x i8] c"KEYWORD\00"
@str-EINGABE = private unnamed_addr constant [8 x i8] c"EINGABE\00"
@str-LEHRER = private unnamed_addr constant [7 x i8] c"LEHRER\00"
@str-RAUM = private unnamed_addr constant [5 x i8] c"RAUM\00"
@str-BLOCKUNG = private unnamed_addr constant [9 x i8] c"BLOCKUNG\00"
@str-STATISCH_AUSGESCHLOSSENE_ZEITEN_ZEITADT = private unnamed_addr constant [40 x i8] c"STATISCH_AUSGESCHLOSSENE_ZEITEN_ZEITADT\00"
@"str-YAS=ALLE" = private unnamed_addr constant [9 x i8] c"YAS=ALLE\00"
@str-ZEIT = private unnamed_addr constant [5 x i8] c"ZEIT\00"
@str-CONS = private unnamed_addr constant [5 x i8] c"CONS\00"
@str-VECTOR = private unnamed_addr constant [7 x i8] c"VECTOR\00"
@str-NULL = private unnamed_addr constant [5 x i8] c"NULL\00"
@str-ETYPECASE-ERROR = private unnamed_addr constant [16 x i8] c"ETYPECASE-ERROR\00"
@str-ERROR = private unnamed_addr constant [6 x i8] c"ERROR\00"
@str-TYPE-ERROR = private unnamed_addr constant [11 x i8] c"TYPE-ERROR\00"
@str-DATUM = private unnamed_addr constant [6 x i8] c"DATUM\00"
@str-EXPECTED-TYPE = private unnamed_addr constant [14 x i8] c"EXPECTED-TYPE\00"
@str-LIST = private unnamed_addr constant [5 x i8] c"LIST\00"
@str-FIXNUM = private unnamed_addr constant [7 x i8] c"FIXNUM\00"
@str-SINGLE-FLOAT = private unnamed_addr constant [13 x i8] c"SINGLE-FLOAT\00"
@str-DOUBLE-FLOAT = private unnamed_addr constant [13 x i8] c"DOUBLE-FLOAT\00"
@str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM = private unnamed_addr constant [34 x i8] c"CONVERT-OVERFLOW-RESULT-TO-BIGNUM\00"
@"str-TWO-ARG-+" = private unnamed_addr constant [10 x i8] c"TWO-ARG-+\00"
@"str-YAS=SCHREIBE_WERT" = private unnamed_addr constant [18 x i8] c"YAS=SCHREIBE_WERT\00"
@"str-SCH=MERKE_ZEITEN" = private unnamed_addr constant [17 x i8] c"SCH=MERKE_ZEITEN\00"
@"str-SCH=ERZEUGE_LEEREN_ZEITEN_ADT" = private unnamed_addr constant [30 x i8] c"SCH=ERZEUGE_LEEREN_ZEITEN_ADT\00"
@"str-YAS=LESE_WERT" = private unnamed_addr constant [14 x i8] c"YAS=LESE_WERT\00"
@str-BELEGTE_ZEITEN = private unnamed_addr constant [15 x i8] c"BELEGTE_ZEITEN\00"
@str-VORSCHLAG = private unnamed_addr constant [10 x i8] c"VORSCHLAG\00"
@str-FDEFINITION = private unnamed_addr constant [12 x i8] c"FDEFINITION\00"
@str-FUNCTION = private unnamed_addr constant [9 x i8] c"FUNCTION\00"
@str-SYMBOL = private unnamed_addr constant [7 x i8] c"SYMBOL\00"
@str-SYMBOL-FUNCTION = private unnamed_addr constant [16 x i8] c"SYMBOL-FUNCTION\00"
@str-OR = private unnamed_addr constant [3 x i8] c"OR\00"
@str-V2 = private unnamed_addr constant [3 x i8] c"V2\00"
@str-SETF-LAMBDA-LIST = private unnamed_addr constant [17 x i8] c"SETF-LAMBDA-LIST\00"
@str-SET-SOURCE-INFO = private unnamed_addr constant [16 x i8] c"SET-SOURCE-INFO\00"
@str-CURRENT-SOURCE-FILE = private unnamed_addr constant [20 x i8] c"CURRENT-SOURCE-FILE\00"
@"str-*CURRENT-FORM-LINENO*" = private unnamed_addr constant [22 x i8] c"*CURRENT-FORM-LINENO*\00"
@str-COMPILER = private unnamed_addr constant [9 x i8] c"COMPILER\00"
@str-ARRAY-RANK = private unnamed_addr constant [11 x i8] c"ARRAY-RANK\00"
@"str-SCH=KORREKTE_ZEITLISTE_1" = private unnamed_addr constant [25 x i8] c"SCH=KORREKTE_ZEITLISTE_1\00"
@str-V21 = private unnamed_addr constant [4 x i8] c"V21\00"
@str-ARRAY = private unnamed_addr constant [6 x i8] c"ARRAY\00"
@"str-SCH=ERZEUGE_LEEREN_ZEITADT" = private unnamed_addr constant [27 x i8] c"SCH=ERZEUGE_LEEREN_ZEITADT\00"
@"str-&OPTIONAL" = private unnamed_addr constant [10 x i8] c"&OPTIONAL\00"
@str-TESTEN = private unnamed_addr constant [7 x i8] c"TESTEN\00"
@"str-SCH=BERECHNE_STATISCH_AUSGESCHLOSSENE_ZEITEN_2" = private unnamed_addr constant [47 x i8] c"SCH=BERECHNE_STATISCH_AUSGESCHLOSSENE_ZEITEN_2\00"
@str-BETEILIGTE_OBJEKTE = private unnamed_addr constant [19 x i8] c"BETEILIGTE_OBJEKTE\00"
@str-APPEND = private unnamed_addr constant [7 x i8] c"APPEND\00"
@str-SCH-KLASSEN_EINER_BLOCKUNG_DYNAMISCH = private unnamed_addr constant [37 x i8] c"SCH-KLASSEN_EINER_BLOCKUNG_DYNAMISCH\00"
@str-SCH-LEHRER_EINER_BLOCKUNG_DYNAMISCH = private unnamed_addr constant [36 x i8] c"SCH-LEHRER_EINER_BLOCKUNG_DYNAMISCH\00"
@str-SCH-RAEUME_EINER_BLOCKUNG_DYNAMISCH = private unnamed_addr constant [36 x i8] c"SCH-RAEUME_EINER_BLOCKUNG_DYNAMISCH\00"
@str-V3 = private unnamed_addr constant [3 x i8] c"V3\00"
@str-STATISCH_AUSGESCHLOSSENE_ZEITEN = private unnamed_addr constant [32 x i8] c"STATISCH_AUSGESCHLOSSENE_ZEITEN\00"
@str-V31 = private unnamed_addr constant [4 x i8] c"V31\00"
@"str-B=MENGEN-GLEICH-P" = private unnamed_addr constant [18 x i8] c"B=MENGEN-GLEICH-P\00"
@str-PRINT = private unnamed_addr constant [6 x i8] c"PRINT\00"
@str-KONSISTENZ_TEST_BLOCKUNG = private unnamed_addr constant [25 x i8] c"KONSISTENZ_TEST_BLOCKUNG\00"
@str-KONSISTENZ_TEST_OBJEKTE = private unnamed_addr constant [24 x i8] c"KONSISTENZ_TEST_OBJEKTE\00"
@str-SCH_GESESETZE_MERKEN = private unnamed_addr constant [21 x i8] c"SCH_GESESETZE_MERKEN\00"
@str-SCH_ZEITLISTEN-BENUTZEN = private unnamed_addr constant [24 x i8] c"SCH_ZEITLISTEN-BENUTZEN\00"
@str-SCH_ZEITADTS-BENUTZEN = private unnamed_addr constant [22 x i8] c"SCH_ZEITADTS-BENUTZEN\00"
@"str-SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN_ALT" = private unnamed_addr constant [38 x i8] c"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN_ALT\00"
@"str-SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN_NEU" = private unnamed_addr constant [38 x i8] c"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN_NEU\00"
@"str-SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN" = private unnamed_addr constant [34 x i8] c"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN\00"
@str-BLOCKUNG_EINHEIT = private unnamed_addr constant [17 x i8] c"BLOCKUNG_EINHEIT\00"
@"str-SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER_ALT" = private unnamed_addr constant [57 x i8] c"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER_ALT\00"
@"str-SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER_NEU" = private unnamed_addr constant [57 x i8] c"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER_NEU\00"
@"str-SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER" = private unnamed_addr constant [53 x i8] c"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER\00"
@str-AUSNAHMEBLOCKUNGEINHEIT = private unnamed_addr constant [24 x i8] c"AUSNAHMEBLOCKUNGEINHEIT\00"
@"str-SCH=BERECHNE_TAGE" = private unnamed_addr constant [18 x i8] c"SCH=BERECHNE_TAGE\00"
@"str-SCH=BERECHNE_TAGE_2" = private unnamed_addr constant [20 x i8] c"SCH=BERECHNE_TAGE_2\00"
@"str-SCH=BERECHNE_BELEGTE_TAGE" = private unnamed_addr constant [26 x i8] c"SCH=BERECHNE_BELEGTE_TAGE\00"
@"str-SCH=BE_STATISCHER_SCHLUESSEL_ALT" = private unnamed_addr constant [33 x i8] c"SCH=BE_STATISCHER_SCHLUESSEL_ALT\00"
@"str-SCH=BE_STATISCHER_SCHLUESSEL_NEU" = private unnamed_addr constant [33 x i8] c"SCH=BE_STATISCHER_SCHLUESSEL_NEU\00"
@"str-SCH=BE_STATISCHER_SCHLUESSEL" = private unnamed_addr constant [29 x i8] c"SCH=BE_STATISCHER_SCHLUESSEL\00"
@str-BE = private unnamed_addr constant [3 x i8] c"BE\00"
@"str-SCH=BE_PRIOS_ALT" = private unnamed_addr constant [17 x i8] c"SCH=BE_PRIOS_ALT\00"
@"str-SCH=BE_PRIOS_NEU" = private unnamed_addr constant [17 x i8] c"SCH=BE_PRIOS_NEU\00"
@"str-SCH=BE_PRIOS" = private unnamed_addr constant [13 x i8] c"SCH=BE_PRIOS\00"
@str-PAAR = private unnamed_addr constant [5 x i8] c"PAAR\00"
@"str-SCH=DRINGLICHKEIT" = private unnamed_addr constant [18 x i8] c"SCH=DRINGLICHKEIT\00"
@"str-SCH=DRINGLICHKEIT_2" = private unnamed_addr constant [20 x i8] c"SCH=DRINGLICHKEIT_2\00"
@"str-SCH=DRINGLICHKEIT_PRIORITAETEN" = private unnamed_addr constant [31 x i8] c"SCH=DRINGLICHKEIT_PRIORITAETEN\00"
@"str-SCH=BEREITE_ALLES_VOR_2_ALT" = private unnamed_addr constant [28 x i8] c"SCH=BEREITE_ALLES_VOR_2_ALT\00"
@"str-SCH=BEREITE_ALLES_VOR_2_NEU" = private unnamed_addr constant [28 x i8] c"SCH=BEREITE_ALLES_VOR_2_NEU\00"
@"str-SCH=BEREITE_ALLES_VOR_2" = private unnamed_addr constant [24 x i8] c"SCH=BEREITE_ALLES_VOR_2\00"
@"str-SCH=VOR_JEDEM_VORSCHLAG_ALT" = private unnamed_addr constant [28 x i8] c"SCH=VOR_JEDEM_VORSCHLAG_ALT\00"
@"str-SCH=VOR_JEDEM_VORSCHLAG_NEU" = private unnamed_addr constant [28 x i8] c"SCH=VOR_JEDEM_VORSCHLAG_NEU\00"
@"str-SCH=VOR_JEDEM_VORSCHLAG" = private unnamed_addr constant [24 x i8] c"SCH=VOR_JEDEM_VORSCHLAG\00"
@str-ATTRIBUT = private unnamed_addr constant [9 x i8] c"ATTRIBUT\00"
@str-NAECHSTE_ZEIT = private unnamed_addr constant [14 x i8] c"NAECHSTE_ZEIT\00"
@"str-SCH=NAECHSTE_ZEIT" = private unnamed_addr constant [18 x i8] c"SCH=NAECHSTE_ZEIT\00"
@str-SET-DOCUMENTATION = private unnamed_addr constant [18 x i8] c"SET-DOCUMENTATION\00"
@"str-eingabe Tag-_X ausgabe Tag-_X+1 falls vorhanden" = private unnamed_addr constant [48 x i8] c"eingabe Tag-_X ausgabe Tag-_X+1 falls vorhanden\00"
@str-VORHERIGE_ZEIT = private unnamed_addr constant [15 x i8] c"VORHERIGE_ZEIT\00"
@"str-SCH=VORHERIGE_ZEIT" = private unnamed_addr constant [19 x i8] c"SCH=VORHERIGE_ZEIT\00"
@"str-eingabe Tag-_X ausgabe Tag-_X-1 falls vorhanden" = private unnamed_addr constant [48 x i8] c"eingabe Tag-_X ausgabe Tag-_X-1 falls vorhanden\00"
@str-BLOCKUNG_EINHEITEN = private unnamed_addr constant [19 x i8] c"BLOCKUNG_EINHEITEN\00"
@str-MAKE-SEQ-ITERATOR = private unnamed_addr constant [18 x i8] c"MAKE-SEQ-ITERATOR\00"
@str-SEQ-ITERATOR-REF = private unnamed_addr constant [17 x i8] c"SEQ-ITERATOR-REF\00"
@str-SEQ-ITERATOR-NEXT = private unnamed_addr constant [18 x i8] c"SEQ-ITERATOR-NEXT\00"
@str-SEQ-ITERATOR-ENDP = private unnamed_addr constant [18 x i8] c"SEQ-ITERATOR-ENDP\00"
@"str-SCH=ALLE_LUECKEN_DES_LEHRERS" = private unnamed_addr constant [29 x i8] c"SCH=ALLE_LUECKEN_DES_LEHRERS\00"
@"str-CWR=MELDE_CONSTRAINT" = private unnamed_addr constant [21 x i8] c"CWR=MELDE_CONSTRAINT\00"
@str-C_KLASSE_MAX_HOHLSTUNDEN = private unnamed_addr constant [25 x i8] c"C_KLASSE_MAX_HOHLSTUNDEN\00"
@"str-SCH=KLASSEN_LUECKEN_TEST" = private unnamed_addr constant [25 x i8] c"SCH=KLASSEN_LUECKEN_TEST\00"
@str-SELBST = private unnamed_addr constant [7 x i8] c"SELBST\00"
@str-LAMBDA = private unnamed_addr constant [7 x i8] c"LAMBDA\00"
@str-MAX_ANZAHL_HOHLSTUNDEN = private unnamed_addr constant [23 x i8] c"MAX_ANZAHL_HOHLSTUNDEN\00"
@str-UNTERRICHT_EINHEITEN = private unnamed_addr constant [21 x i8] c"UNTERRICHT_EINHEITEN\00"
@"str-TWO-ARG->" = private unnamed_addr constant [10 x i8] c"TWO-ARG->\00"
@str-C_LEHRER_MAX_HOHLSTUNDEN_LEHRER = private unnamed_addr constant [32 x i8] c"C_LEHRER_MAX_HOHLSTUNDEN_LEHRER\00"
@str-TWO-ARG-- = private unnamed_addr constant [10 x i8] c"TWO-ARG--\00"
@"str-SCH=LEHRER_LUECKEN_TEST" = private unnamed_addr constant [24 x i8] c"SCH=LEHRER_LUECKEN_TEST\00"
@str-NUMBER = private unnamed_addr constant [7 x i8] c"NUMBER\00"
@str-REMOVE-IF-NOT = private unnamed_addr constant [14 x i8] c"REMOVE-IF-NOT\00"
@"str-SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE" = private unnamed_addr constant [35 x i8] c"SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE\00"
@str-SET-DIFFERENCE = private unnamed_addr constant [15 x i8] c"SET-DIFFERENCE\00"
@"str-SCH=FREIE_BLOCKUNGEN_DER_KLASSE" = private unnamed_addr constant [32 x i8] c"SCH=FREIE_BLOCKUNGEN_DER_KLASSE\00"
@str-EQ-INCOMPARABLE = private unnamed_addr constant [16 x i8] c"EQ-INCOMPARABLE\00"
@str-CLASP-CLEAVIR = private unnamed_addr constant [14 x i8] c"CLASP-CLEAVIR\00"
@str-EQL-UNDERLYING = private unnamed_addr constant [15 x i8] c"EQL-UNDERLYING\00"
@str-CERROR = private unnamed_addr constant [7 x i8] c"CERROR\00"
@str- = private unnamed_addr constant [1 x i8] zeroinitializer
@"str-slot ~A kann nicht behandelt werden" = private unnamed_addr constant [36 x i8] c"slot ~A kann nicht behandelt werden\00"
@str-INSTANZ_VON = private unnamed_addr constant [12 x i8] c"INSTANZ_VON\00"
@str-UNTERRICHT_EINHEIT = private unnamed_addr constant [19 x i8] c"UNTERRICHT_EINHEIT\00"
@"str-Objekt ~A kann nicht behandelt werden" = private unnamed_addr constant [38 x i8] c"Objekt ~A kann nicht behandelt werden\00"
@"str-YAS=TUE_METHODE" = private unnamed_addr constant [16 x i8] c"YAS=TUE_METHODE\00"
@str-WERT_SETZEN = private unnamed_addr constant [12 x i8] c"WERT_SETZEN\00"
@str-PROPAGIERT = private unnamed_addr constant [11 x i8] c"PROPAGIERT\00"
@"str-SCH=BLOCKUNG_MEHRFACH_P" = private unnamed_addr constant [24 x i8] c"SCH=BLOCKUNG_MEHRFACH_P\00"
@"str-SCH=ALLE_ZEITEN_EINER_BLOCKUNG_EINHEIT" = private unnamed_addr constant [39 x i8] c"SCH=ALLE_ZEITEN_EINER_BLOCKUNG_EINHEIT\00"
@str-MEHRSTUENDIG = private unnamed_addr constant [13 x i8] c"MEHRSTUENDIG\00"
@str-SCH-SETZE-RAUM = private unnamed_addr constant [15 x i8] c"SCH-SETZE-RAUM\00"
@str-WERT_SETZEN_OHNE_SPEICHERN = private unnamed_addr constant [27 x i8] c"WERT_SETZEN_OHNE_SPEICHERN\00"
@str-VERGEBENE_UNTERRICHT_EINHEITEN = private unnamed_addr constant [31 x i8] c"VERGEBENE_UNTERRICHT_EINHEITEN\00"
@"str-SCH=EINZEL_BEHANDLUNG_MERKEN" = private unnamed_addr constant [29 x i8] c"SCH=EINZEL_BEHANDLUNG_MERKEN\00"
@"str-SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN" = private unnamed_addr constant [53 x i8] c"SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN\00"
@str-TAG = private unnamed_addr constant [4 x i8] c"TAG\00"
@str-BELEGTE_TAGE = private unnamed_addr constant [13 x i8] c"BELEGTE_TAGE\00"
@str-SCH-NEUEN-TAG-MERKEN = private unnamed_addr constant [21 x i8] c"SCH-NEUEN-TAG-MERKEN\00"
@str-GESETZTE_BLOCKUNG_EINHEITEN = private unnamed_addr constant [28 x i8] c"GESETZTE_BLOCKUNG_EINHEITEN\00"
@"str- ich ~a brauche ~A ~A von ~A nicht" = private unnamed_addr constant [35 x i8] c" ich ~a brauche ~A ~A von ~A nicht\00"
@str-GESETZTE_UNTERRICHT_EINHEITEN = private unnamed_addr constant [30 x i8] c"GESETZTE_UNTERRICHT_EINHEITEN\00"
@str-SCHULE_PARAMETER_BEKANNT = private unnamed_addr constant [25 x i8] c"SCHULE_PARAMETER_BEKANNT\00"
@str-ICH = private unnamed_addr constant [4 x i8] c"ICH\00"
@str-VON_WEM = private unnamed_addr constant [8 x i8] c"VON_WEM\00"
@str-WERT = private unnamed_addr constant [5 x i8] c"WERT\00"
@str-SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN = private unnamed_addr constant [38 x i8] c"SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN\00"
@str-WERT_ZURUECKZIEHEN = private unnamed_addr constant [19 x i8] c"WERT_ZURUECKZIEHEN\00"
@str-SCH-LOESCHE-RAUM = private unnamed_addr constant [17 x i8] c"SCH-LOESCHE-RAUM\00"
@str-DELETE = private unnamed_addr constant [7 x i8] c"DELETE\00"
@"str-SCH=EINZEL_BEHANDLUNG_VERGESSEN" = private unnamed_addr constant [32 x i8] c"SCH=EINZEL_BEHANDLUNG_VERGESSEN\00"
@"str-SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN" = private unnamed_addr constant [56 x i8] c"SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN\00"
@str-SCHULE_PARAMETER_UNBEKANNT = private unnamed_addr constant [27 x i8] c"SCHULE_PARAMETER_UNBEKANNT\00"
@str-WAS = private unnamed_addr constant [4 x i8] c"WAS\00"
@"str-SCH=EINZEL_BEHANDLUNG_MERKEN_0" = private unnamed_addr constant [31 x i8] c"SCH=EINZEL_BEHANDLUNG_MERKEN_0\00"
@"str-SCH=MERKE_ZEIT" = private unnamed_addr constant [15 x i8] c"SCH=MERKE_ZEIT\00"
@"str-SCH=KONSISTENZTEST" = private unnamed_addr constant [19 x i8] c"SCH=KONSISTENZTEST\00"
@"str-SCH=EINZEL_BEHANDLUNG_VERGESSEN_0" = private unnamed_addr constant [34 x i8] c"SCH=EINZEL_BEHANDLUNG_VERGESSEN_0\00"
@"str-SCH=LOESCHE_ZEIT" = private unnamed_addr constant [17 x i8] c"SCH=LOESCHE_ZEIT\00"
@str-KONSISTENZ_TEST_OBJEKTE_2 = private unnamed_addr constant [26 x i8] c"KONSISTENZ_TEST_OBJEKTE_2\00"
@"str-SCH=HARDCOREBERECHNE" = private unnamed_addr constant [21 x i8] c"SCH=HARDCOREBERECHNE\00"
@str-L = private unnamed_addr constant [2 x i8] c"L\00"
@"str-SCH=TAGE_TEST" = private unnamed_addr constant [14 x i8] c"SCH=TAGE_TEST\00"
@"str-SCH=ANZAHL_TAGE_TEST" = private unnamed_addr constant [21 x i8] c"SCH=ANZAHL_TAGE_TEST\00"
@"str-SCH=ALLE_LEHRER_TAGE_TEST" = private unnamed_addr constant [26 x i8] c"SCH=ALLE_LEHRER_TAGE_TEST\00"
@"str-SCH=BERECHNE_ANZAHL_TAGE_AUS_ZEITADT" = private unnamed_addr constant [37 x i8] c"SCH=BERECHNE_ANZAHL_TAGE_AUS_ZEITADT\00"
@"str-TWO-ARG-=" = private unnamed_addr constant [10 x i8] c"TWO-ARG-=\00"
@str-BREAK = private unnamed_addr constant [6 x i8] c"BREAK\00"
@"str-Bei Lherer ~A" = private unnamed_addr constant [14 x i8] c"Bei Lherer ~A\00"
@str-ANZAHL_TAGE = private unnamed_addr constant [12 x i8] c"ANZAHL_TAGE\00"
@"str-test anzahl_freie_tage  aus adt = rechnung aus zeiten" = private unnamed_addr constant [54 x i8] c"test anzahl_freie_tage  aus adt = rechnung aus zeiten\00"
@str-SET-EXCLUSIVE-OR = private unnamed_addr constant [17 x i8] c"SET-EXCLUSIVE-OR\00"
@"str-Bei Lehrer ~a" = private unnamed_addr constant [14 x i8] c"Bei Lehrer ~a\00"
@"str-test belegte_tage = tage=aus=adt = tage aus belegte_zeiten" = private unnamed_addr constant [59 x i8] c"test belegte_tage = tage=aus=adt = tage aus belegte_zeiten\00"
@"str-SCH=BELGETE_AUS_ADT" = private unnamed_addr constant [20 x i8] c"SCH=BELGETE_AUS_ADT\00"
@"str-SCH=BELGETE_AUS_ZEITEN" = private unnamed_addr constant [23 x i8] c"SCH=BELGETE_AUS_ZEITEN\00"
@"str-Inkonsistenz bei ~A" = private unnamed_addr constant [20 x i8] c"Inkonsistenz bei ~A\00"
@str-OBJEKT = private unnamed_addr constant [7 x i8] c"OBJEKT\00"
@CONTAB5442 = internal global [563 x {}*] undef
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 11, void ()* @CLASP-CTOR, i8* null }]

; Function Attrs: uwtable
define internal void @RUN-ALL() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !9 {
entry:
  tail call void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }* nonnull @constants-table, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 0), i64 563, {}* null)
  tail call void @ltvc_assign_source_file_info_handle(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/helpers/schule/zeitbitanwendung.lisp", i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @":::global-str-/Users/karstenpoeck/lisp/coke/helpers/schule/zeitbitanwendung.lisp", i64 0, i64 0), i64 0, i32 1, i32* nonnull @source-file-info-handle)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.17)
  ret void
}

; Function Attrs: nounwind
declare i32 @__gxx_personality_v0(...) #1

; Function Attrs: nounwind
declare void @ltvc_assign_source_file_info_handle(i8*, i8*, i64, i32, i32*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^2^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !13 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^2^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest23, %tag3
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 4), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag3:                                             ; preds = %normal-dest23
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 4), align 16
  call void @cc_setSymbolValue({}* %14, {}* %24)
  br label %tag

cleanup-lpad:                                     ; preds = %10, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 0), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 4), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 8), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 4), align 16
  %ptrtoint17 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %21, i64 1, {}* %22, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt33 = extractvalue { {}*, i64 } %23, 0
  %.elt35 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt35, 0
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %24, {}* %.elt33
  %25 = icmp eq {}* %object.0, %24
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338157.0 = select i1 %25, {}* %.val, {}* %24
  %26 = icmp eq {}* %G338157.0, %24
  br i1 %26, label %tag, label %tag3
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #1

; Function Attrs: nounwind
declare void @cc_pop_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @cc_push_InvocationHistoryFrame({}*, <{ i8*, { i32, i32, i8*, i8* }, i64 }>*, { i32, i32, i8*, i8* }*, i64) local_unnamed_addr #1

declare {}* @cc_safe_fdefinition({}*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_setSymbolValue({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^5^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !23 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^5^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest13, %normal-dest26
  %return-value.sroa.5.0 = phi i64 [ %.elt32, %normal-dest26 ], [ 1, %normal-dest13 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt30, %normal-dest26 ], [ %21, %normal-dest13 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %11 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %12 = insertvalue { {}*, i64 } %11, i64 %return-value.sroa.5.0, 1
  ret { {}*, i64 } %12

tag3:                                             ; preds = %normal-dest13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 22), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest19 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest19, %tag3, %normal-dest10, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 16), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 2, {}* %18, {}* %19, {}* null, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt28 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt28, 0
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = icmp eq {}* %object.0, %21
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338177.0 = select i1 %22, {}* %.val, {}* %21
  %23 = icmp eq {}* %G338177.0, %21
  br i1 %23, label %tag1, label %tag3

normal-dest19:                                    ; preds = %tag3
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 28), align 16
  %ptrtoint20 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %14, i64 5, {}* %24, {}* %25, {}* %26, {}* %27, {}* %28)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %.elt30 = extractvalue { {}*, i64 } %29, 0
  %.elt32 = extractvalue { {}*, i64 } %29, 1
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^7^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !24 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^7^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest13, %normal-dest26
  %return-value.sroa.5.0 = phi i64 [ %.elt32, %normal-dest26 ], [ 1, %normal-dest13 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt30, %normal-dest26 ], [ %21, %normal-dest13 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %11 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %12 = insertvalue { {}*, i64 } %11, i64 %return-value.sroa.5.0, 1
  ret { {}*, i64 } %12

tag5:                                             ; preds = %normal-dest13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 22), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest19 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest19, %tag5, %normal-dest10, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 16), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 2, {}* %18, {}* %19, {}* null, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt28 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt28, 0
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = icmp eq {}* %object.0, %21
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338195.0 = select i1 %22, {}* %.val, {}* %21
  %23 = icmp eq {}* %G338195.0, %21
  br i1 %23, label %tag, label %tag5

normal-dest19:                                    ; preds = %tag5
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 28), align 16
  %ptrtoint20 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %14, i64 5, {}* %24, {}* %25, {}* %26, {}* %27, {}* %28)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %.elt30 = extractvalue { {}*, i64 } %29, 0
  %.elt32 = extractvalue { {}*, i64 } %29, 1
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^9^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !25 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^9^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest13
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 22), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest19 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest13, %normal-dest26
  %return-value.sroa.5.0 = phi i64 [ %.elt32, %normal-dest26 ], [ 1, %normal-dest13 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt30, %normal-dest26 ], [ %21, %normal-dest13 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %14 = insertvalue { {}*, i64 } %13, i64 %return-value.sroa.5.0, 1
  ret { {}*, i64 } %14

cleanup-lpad:                                     ; preds = %10, %normal-dest19, %tag2, %normal-dest10, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 16), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 2, {}* %18, {}* %19, {}* null, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt28 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt28, 0
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = icmp eq {}* %object.0, %21
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338213.0 = select i1 %22, {}* %.val, {}* %21
  %23 = icmp eq {}* %G338213.0, %21
  br i1 %23, label %tag5, label %tag2

normal-dest19:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 28), align 16
  %ptrtoint20 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %12, i64 5, {}* %24, {}* %25, {}* %26, {}* %27, {}* %28)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %.elt30 = extractvalue { {}*, i64 } %29, 0
  %.elt32 = extractvalue { {}*, i64 } %29, 1
  br label %tag5
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^11^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !26 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^11^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag4:                                             ; preds = %normal-dest13, %normal-dest26
  %return-value.sroa.5.0 = phi i64 [ %.elt32, %normal-dest26 ], [ 1, %normal-dest13 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt30, %normal-dest26 ], [ %21, %normal-dest13 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %11 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %12 = insertvalue { {}*, i64 } %11, i64 %return-value.sroa.5.0, 1
  ret { {}*, i64 } %12

tag5:                                             ; preds = %normal-dest13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 22), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest19 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest19, %tag5, %normal-dest10, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 16), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 34), align 16
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 36), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 2, {}* %18, {}* %19, {}* null, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt28 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt28, 0
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = icmp eq {}* %object.0, %21
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338231.0 = select i1 %22, {}* %.val, {}* %21
  %23 = icmp eq {}* %G338231.0, %21
  br i1 %23, label %tag4, label %tag5

normal-dest19:                                    ; preds = %tag5
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 34), align 16
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 36), align 16
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 28), align 16
  %ptrtoint20 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %14, i64 5, {}* %24, {}* %25, {}* %26, {}* %27, {}* %28)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %.elt30 = extractvalue { {}*, i64 } %29, 0
  %.elt32 = extractvalue { {}*, i64 } %29, 1
  br label %tag4
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^14^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !27 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^14^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G338262.0 = phi {}* [ %18, %header-check-br ], [ %G338262.1, %normal-dest26 ], [ %G338262.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 96), align 16
  %ptrtoint43 = ptrtoint {}* %G338262.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G338262.0, i64 2, {}* %"closure->V2", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 96), align 16
  %"closure->V2" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"V2^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"V2^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 631, i64 14, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338262.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag4

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 93), align 8
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338262.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->V2", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 102), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->V2", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 56 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 96), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"V2^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !28 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"V2^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %tag6
  %11 = icmp eq {}* %G2095854.0, %.val517
  %G338397.0 = select i1 %11, {}* %.val514, {}* %.val517
  %12 = icmp eq {}* %G338397.0, %.val517
  br i1 %12, label %tag39, label %tag73

tag6:                                             ; preds = %tag32, %normal-dest351, %tag16
  %.val517 = phi {}* [ %.val515.pre, %tag16 ], [ %151, %normal-dest351 ], [ %28, %tag32 ]
  %G2095854.0 = phi {}* [ %15, %tag16 ], [ %G2095854.1, %normal-dest351 ], [ %28, %tag32 ]
  %13 = ptrtoint {}* %G2095854.0 to i64
  %tag-only100424 = and i64 %13, 7
  %consp-test101 = icmp eq i64 %tag-only100424, 3
  %.val514 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338426.0 = select i1 %consp-test101, {}* %.val514, {}* %.val517
  %14 = icmp eq {}* %G338426.0, %.val517
  br i1 %14, label %tag3, label %tag84

tag12:                                            ; preds = %tag31, %tag21.backedge, %normal-dest169
  %.val525 = phi {}* [ %100, %normal-dest169 ], [ %54, %tag21.backedge ], [ %25, %tag31 ]
  br i1 %consp-test342, label %tag34, label %tag78

tag16:                                            ; preds = %tag86
  %15 = load {}*, {}** %50, align 8
  %.val515.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag6

tag25:                                            ; preds = %tag68
  %16 = add i64 %68, -3
  %17 = inttoptr i64 %16 to {}**
  %18 = load {}*, {}** %17, align 8
  br label %tag33

tag26:                                            ; preds = %tag64
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest118 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag27:                                            ; preds = %tag42
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest132 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag29:                                            ; preds = %normal-dest391, %header-check-br248
  %G338389.0.pre = phi {}* [ %.val, %header-check-br248 ], [ %G338389.0.pre.pre, %normal-dest391 ]
  %23 = phi {}* [ %90, %header-check-br248 ], [ %159, %normal-dest391 ]
  %24 = icmp eq {}* %G338389.0.pre, %23
  br i1 %24, label %tag42, label %tag61

tag31:                                            ; preds = %normal-dest328
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %26 = icmp eq {}* %"%DOLIST-VAR115.0541", %25
  %.val522 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338312.0 = select i1 %26, {}* %.val522, {}* %25
  %27 = icmp eq {}* %G338312.0, %25
  br i1 %27, label %tag63, label %tag12

tag32:                                            ; preds = %tag86
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %29 = icmp eq {}* %SEQUENCE.0.ph, %28
  %.val512 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338438.0 = select i1 %29, {}* %.val512, {}* %28
  %30 = icmp eq {}* %G338438.0, %28
  br i1 %30, label %tag75, label %tag6

tag33:                                            ; preds = %normal-dest183, %tag25
  %K.0 = phi {}* [ %18, %tag25 ], [ %K.1, %normal-dest183 ]
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest162 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag34:                                            ; preds = %tag12
  %33 = add i64 %68, 5
  %34 = inttoptr i64 %33 to {}**
  %35 = load {}*, {}** %34, align 8
  br label %tag46.backedge

tag46.backedge:                                   ; preds = %tag34, %normal-dest210
  %36 = phi {}* [ %.val525, %tag34 ], [ %115, %normal-dest210 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %35, %tag34 ], [ %"%DOLIST-VAR.1", %normal-dest210 ]
  %37 = icmp eq {}* %"%DOLIST-VAR.0.be", %36
  br i1 %37, label %tag83, label %tag68

tag38:                                            ; preds = %tag68
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest176 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag39:                                            ; preds = %tag3
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest190 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag41:                                            ; preds = %tag78
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest203 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag42:                                            ; preds = %normal-dest391, %tag55, %header-check-br234, %tag29
  %.val526 = phi {}* [ %G338389.0.pre, %tag29 ], [ %.val, %tag55 ], [ %.val, %header-check-br234 ], [ %G338389.0.pre.pre, %normal-dest391 ]
  %.val527551 = phi {}* [ %G338389.0.pre, %tag29 ], [ %90, %tag55 ], [ %90, %header-check-br234 ], [ %159, %normal-dest391 ]
  %44 = icmp eq {}* %.in, %.val527551
  %G338385.0 = select i1 %44, {}* %.val526, {}* %.val527551
  %45 = icmp eq {}* %G338385.0, %.val527551
  br i1 %45, label %tag27, label %tag73

tag49:                                            ; preds = %tag84
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 70), align 16
  %47 = invoke {}* @cc_safe_fdefinition({}* %46)
          to label %normal-dest221 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag86.outer:                                      ; preds = %tag86.outer.backedge, %tag86.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag86.outer.preheader ], [ %LENGTH.0.ph.be, %tag86.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in, %tag86.outer.preheader ], [ %G2095854.0, %tag86.outer.backedge ]
  %48 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only405423 = and i64 %48, 7
  %consp-test406 = icmp eq i64 %tag-only405423, 3
  %49 = add i64 %48, 5
  %50 = inttoptr i64 %49 to {}**
  br label %tag86

tag55:                                            ; preds = %normal-dest97
  %test251 = icmp eq i64 %tag-only422, 1
  br i1 %test251, label %header-check-br248, label %tag42

tag56:                                            ; preds = %normal-dest328
  %51 = add i64 %56, 5
  %52 = inttoptr i64 %51 to {}**
  %53 = load {}*, {}** %52, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag21.backedge

tag21.backedge:                                   ; preds = %tag56, %normal-dest272
  %54 = phi {}* [ %.pre, %tag56 ], [ %128, %normal-dest272 ]
  %"%DOLIST-VAR115.0.be" = phi {}* [ %53, %tag56 ], [ %"%DOLIST-VAR115.2", %normal-dest272 ]
  %55 = icmp eq {}* %"%DOLIST-VAR115.0.be", %54
  br i1 %55, label %tag12, label %tag60

tag60:                                            ; preds = %tag60.preheader, %tag21.backedge
  %.val521 = phi {}* [ %54, %tag21.backedge ], [ %100, %tag60.preheader ]
  %"%DOLIST-VAR115.0541" = phi {}* [ %"%DOLIST-VAR115.0.be", %tag21.backedge ], [ %"%DOLIST-VAR115.1", %tag60.preheader ]
  %56 = ptrtoint {}* %"%DOLIST-VAR115.0541" to i64
  %tag-only262439 = and i64 %56, 7
  %consp-test263 = icmp eq i64 %tag-only262439, 3
  %.val520 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338353.0 = select i1 %consp-test263, {}* %.val520, {}* %.val521
  %57 = icmp eq {}* %G338353.0, %.val521
  br i1 %57, label %tag77, label %tag82

tag61:                                            ; preds = %tag29
  %58 = add i64 %92, 7
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %"tag fixnum" = shl nuw i64 %60, 2
  %61 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag73

tag63:                                            ; preds = %tag31
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit

tag64:                                            ; preds = %tag84
  %64 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %85, i64 4)
  %result = extractvalue { i64, i1 } %64, 0
  %overflow = extractvalue { i64, i1 } %64, 1
  %65 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag26, label %tag86.outer.backedge

tag86.outer.backedge:                             ; preds = %tag64, %normal-dest125, %normal-dest228
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest228 ], [ %LENGTH.1, %normal-dest125 ], [ %65, %tag64 ]
  br label %tag86.outer

tag65:                                            ; preds = %normal-dest371, %tag82
  %O.0 = phi {}* [ %81, %tag82 ], [ %O.1, %normal-dest371 ]
  %66 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 73), align 8
  %67 = invoke {}* @cc_safe_fdefinition({}* %66)
          to label %normal-dest279 unwind label %cleanup-lpad.loopexit

tag68:                                            ; preds = %tag68.preheader, %tag46.backedge
  %.val519 = phi {}* [ %36, %tag46.backedge ], [ %70, %tag68.preheader ]
  %"%DOLIST-VAR.0542" = phi {}* [ %"%DOLIST-VAR.0.be", %tag46.backedge ], [ %71, %tag68.preheader ]
  %68 = ptrtoint {}* %"%DOLIST-VAR.0542" to i64
  %tag-only341434 = and i64 %68, 7
  %consp-test342 = icmp eq i64 %tag-only341434, 3
  %.val518 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338376.0 = select i1 %consp-test342, {}* %.val518, {}* %.val519
  %69 = icmp eq {}* %G338376.0, %.val519
  br i1 %69, label %tag38, label %tag25

tag73:                                            ; preds = %tag3, %normal-dest139, %tag42, %tag61
  %70 = phi {}* [ %23, %tag61 ], [ %.val527551, %tag42 ], [ %98, %normal-dest139 ], [ %.val517, %tag3 ]
  %G338242.0 = phi {}* [ %61, %tag61 ], [ null, %tag42 ], [ %G338242.1, %normal-dest139 ], [ %LENGTH.0.ph, %tag3 ]
  %71 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 72), align 16
  %72 = icmp eq {}* %71, %70
  br i1 %72, label %tag83, label %tag68.preheader

tag68.preheader:                                  ; preds = %tag73
  br label %tag68

tag75:                                            ; preds = %tag32
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %74 = invoke {}* @cc_safe_fdefinition({}* %73)
          to label %normal-dest344 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag77:                                            ; preds = %tag60
  %75 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest364 unwind label %cleanup-lpad.loopexit

tag78:                                            ; preds = %tag12
  %77 = icmp eq {}* %"%DOLIST-VAR.0542", %.val525
  %.val524 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338293.0 = select i1 %77, {}* %.val524, {}* %.val525
  %78 = icmp eq {}* %G338293.0, %.val525
  br i1 %78, label %tag41, label %tag83

tag82:                                            ; preds = %tag60
  %79 = add i64 %56, -3
  %80 = inttoptr i64 %79 to {}**
  %81 = load {}*, {}** %80, align 8
  br label %tag65

tag83:                                            ; preds = %tag78, %tag46.backedge, %tag73
  %82 = phi {}* [ %70, %tag73 ], [ %.val525, %tag78 ], [ %36, %tag46.backedge ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %83 = insertvalue { {}*, i64 } undef, {}* %82, 0
  %84 = insertvalue { {}*, i64 } %83, i64 1, 1
  ret { {}*, i64 } %84

tag84:                                            ; preds = %tag6
  %85 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only402425 = and i64 %85, 3
  %fixnump-test403 = icmp eq i64 %fixnum-tag-only402425, 0
  br i1 %fixnump-test403, label %tag64, label %tag49

tag86:                                            ; preds = %normal-dest190, %tag86.outer
  br i1 %consp-test406, label %tag16, label %tag32

cleanup-lpad.loopexit:                            ; preds = %tag63, %normal-dest265, %tag65, %normal-dest279, %normal-dest281, %normal-dest283, %normal-dest290, %normal-dest297, %normal-dest304, %normal-dest316, %tag77, %normal-dest364
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest203, %tag41, %normal-dest176, %tag38, %normal-dest162, %tag33
  %lpad.loopexit529 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit: ; preds = %normal-dest344, %tag75, %normal-dest190, %tag39
  %lpad.loopexit534 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %normal-dest221, %tag49, %normal-dest118, %tag26
  %lpad.loopexit.split-lp535 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %normal-dest, %normal-dest94, %tag27, %normal-dest132, %maybe-more-tests, %normal-dest384, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit529, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit534, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp535, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %86 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest94 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest94:                                    ; preds = %normal-dest
  %88 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %ptrtoint = ptrtoint {}* %87 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %87, i64 1, {}* %88, {}* null, {}* null, {}* null)
          to label %normal-dest97 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest97:                                    ; preds = %normal-dest94
  %.elt = extractvalue { {}*, i64 } %89, 0
  %.elt421 = extractvalue { {}*, i64 } %89, 1
  %cond = icmp eq i64 %.elt421, 0
  %90 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in = select i1 %cond, {}* %90, {}* %.elt
  %91 = bitcast {}* %.in to i8*
  %92 = ptrtoint {}* %.in to i64
  %tag-only422 = and i64 %92, 7
  %consp-test = icmp eq i64 %tag-only422, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338445.0 = select i1 %consp-test, {}* %.val, {}* %90
  %93 = icmp eq {}* %G338445.0, %90
  br i1 %93, label %tag55, label %tag86.outer.preheader

tag86.outer.preheader:                            ; preds = %normal-dest97
  br label %tag86.outer

normal-dest118:                                   ; preds = %tag26
  %ptrtoint119 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint120 = add i64 %ptrtoint119, 7
  %entry-point-addr121 = inttoptr i64 %entry-point-addr-uint120 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point122 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr121, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point122({}* %20, i64 1, {}* %65, {}* null, {}* null, {}* null)
          to label %normal-dest125 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest125:                                   ; preds = %normal-dest118
  %.elt431 = extractvalue { {}*, i64 } %94, 0
  %.elt433 = extractvalue { {}*, i64 } %94, 1
  %cond408 = icmp eq i64 %.elt433, 0
  %95 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.1 = select i1 %cond408, {}* %95, {}* %.elt431
  br label %tag86.outer.backedge

normal-dest132:                                   ; preds = %tag27
  %96 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 50), align 16
  %ptrtoint133 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint134 = add i64 %ptrtoint133, 7
  %entry-point-addr135 = inttoptr i64 %entry-point-addr-uint134 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point136 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr135, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point136({}* %22, i64 2, {}* %.in, {}* %96, {}* null, {}* null)
          to label %normal-dest139 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest139:                                   ; preds = %normal-dest132
  %.elt486 = extractvalue { {}*, i64 } %97, 0
  %.elt488 = extractvalue { {}*, i64 } %97, 1
  %cond418 = icmp eq i64 %.elt488, 0
  %98 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338242.1 = select i1 %cond418, {}* %98, {}* %.elt486
  br label %tag73

normal-dest162:                                   ; preds = %tag33
  %ptrtoint163 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint164 = add i64 %ptrtoint163, 7
  %entry-point-addr165 = inttoptr i64 %entry-point-addr-uint164 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point166 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr165, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point166({}* %32, i64 1, {}* %K.0, {}* null, {}* null, {}* null)
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest169:                                   ; preds = %normal-dest162
  %.elt436 = extractvalue { {}*, i64 } %99, 0
  %.elt438 = extractvalue { {}*, i64 } %99, 1
  %cond409 = icmp eq i64 %.elt438, 0
  %100 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR115.1" = select i1 %cond409, {}* %100, {}* %.elt436
  %101 = icmp eq {}* %"%DOLIST-VAR115.1", %100
  br i1 %101, label %tag12, label %tag60.preheader

tag60.preheader:                                  ; preds = %normal-dest169
  br label %tag60

normal-dest176:                                   ; preds = %tag38
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %103 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %104 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %105 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint177 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint178 = add i64 %ptrtoint177, 7
  %entry-point-addr179 = inttoptr i64 %entry-point-addr-uint178 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point180 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr179, align 8
  %106 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point180({}* %39, i64 5, {}* %102, {}* %103, {}* %"%DOLIST-VAR.0542", {}* %104, {}* %105)
          to label %normal-dest183 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest183:                                   ; preds = %normal-dest176
  %.elt471 = extractvalue { {}*, i64 } %106, 0
  %.elt473 = extractvalue { {}*, i64 } %106, 1
  %cond416 = icmp eq i64 %.elt473, 0
  %107 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %K.1 = select i1 %cond416, {}* %107, {}* %.elt471
  br label %tag33

normal-dest190:                                   ; preds = %tag39
  %108 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 61), align 8
  %ptrtoint191 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint192 = add i64 %ptrtoint191, 7
  %entry-point-addr193 = inttoptr i64 %entry-point-addr-uint192 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point194 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr193, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point194({}* %41, i64 2, {}* %G2095854.0, {}* %108, {}* null, {}* null)
          to label %tag86 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest203:                                   ; preds = %tag41
  %110 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %111 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %112 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %113 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint204 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint205 = add i64 %ptrtoint204, 7
  %entry-point-addr206 = inttoptr i64 %entry-point-addr-uint205 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point207 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr206, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point207({}* %43, i64 5, {}* %110, {}* %111, {}* %"%DOLIST-VAR.0542", {}* %112, {}* %113)
          to label %normal-dest210 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest210:                                   ; preds = %normal-dest203
  %.elt467 = extractvalue { {}*, i64 } %114, 0
  %.elt469 = extractvalue { {}*, i64 } %114, 1
  %cond415 = icmp eq i64 %.elt469, 0
  %115 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond415, {}* %115, {}* %.elt467
  br label %tag46.backedge

normal-dest221:                                   ; preds = %tag49
  %ptrtoint222 = ptrtoint {}* %47 to i64
  %entry-point-addr-uint223 = add i64 %ptrtoint222, 7
  %entry-point-addr224 = inttoptr i64 %entry-point-addr-uint223 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point225 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr224, align 8
  %116 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point225({}* %47, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest228 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest228:                                   ; preds = %normal-dest221
  %.elt427 = extractvalue { {}*, i64 } %116, 0
  %.elt429 = extractvalue { {}*, i64 } %116, 1
  %cond407 = icmp eq i64 %.elt429, 0
  %117 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.2 = select i1 %cond407, {}* %117, {}* %.elt427
  br label %tag86.outer.backedge

header-check-br234:                               ; preds = %header-check-br248
  %.off528 = add i64 %121, -1153
  %118 = icmp ult i64 %.off528, 149
  br i1 %118, label %maybe-more-tests, label %tag42

maybe-more-tests:                                 ; preds = %header-check-br234
  %119 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 109), align 8
  %120 = invoke {}* @cc_safe_fdefinition({}* %119)
          to label %normal-dest384 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br248:                               ; preds = %tag55
  %gep253 = getelementptr inbounds i8, i8* %91, i64 -9
  %irc-bit-cast254 = bitcast i8* %gep253 to i64*
  %121 = load i64, i64* %irc-bit-cast254, align 8
  %.off = add i64 %121, -1081
  %122 = icmp ult i64 %.off, 69
  br i1 %122, label %tag29, label %header-check-br234

normal-dest265:                                   ; preds = %tag63
  %123 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %124 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %125 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %126 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint266 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint267 = add i64 %ptrtoint266, 7
  %entry-point-addr268 = inttoptr i64 %entry-point-addr-uint267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr268, align 8
  %127 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point269({}* %63, i64 5, {}* %123, {}* %124, {}* %"%DOLIST-VAR115.0541", {}* %125, {}* %126)
          to label %normal-dest272 unwind label %cleanup-lpad.loopexit

normal-dest272:                                   ; preds = %normal-dest265
  %.elt458 = extractvalue { {}*, i64 } %127, 0
  %.elt460 = extractvalue { {}*, i64 } %127, 1
  %cond413 = icmp eq i64 %.elt460, 0
  %128 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR115.2" = select i1 %cond413, {}* %128, {}* %.elt458
  br label %tag21.backedge

normal-dest279:                                   ; preds = %tag65
  %129 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %130 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 75), align 8
  %131 = invoke {}* @cc_safe_fdefinition({}* %130)
          to label %normal-dest281 unwind label %cleanup-lpad.loopexit

normal-dest281:                                   ; preds = %normal-dest279
  %132 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 77), align 8
  %133 = invoke {}* @cc_safe_fdefinition({}* %132)
          to label %normal-dest283 unwind label %cleanup-lpad.loopexit

normal-dest283:                                   ; preds = %normal-dest281
  %ptrtoint284 = ptrtoint {}* %133 to i64
  %entry-point-addr-uint285 = add i64 %ptrtoint284, 7
  %entry-point-addr286 = inttoptr i64 %entry-point-addr-uint285 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point287 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr286, align 8
  %134 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point287({}* %133, i64 1, {}* %G338242.0, {}* null, {}* null, {}* null)
          to label %normal-dest290 unwind label %cleanup-lpad.loopexit

normal-dest290:                                   ; preds = %normal-dest283
  %.elt441 = extractvalue { {}*, i64 } %134, 0
  %.elt443 = extractvalue { {}*, i64 } %134, 1
  %cond410 = icmp eq i64 %.elt443, 0
  %135 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338326.0 = select i1 %cond410, {}* %135, {}* %.elt441
  %136 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %137 = invoke {}* @cc_safe_fdefinition({}* %136)
          to label %normal-dest297 unwind label %cleanup-lpad.loopexit

normal-dest297:                                   ; preds = %normal-dest290
  %138 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %ptrtoint298 = ptrtoint {}* %137 to i64
  %entry-point-addr-uint299 = add i64 %ptrtoint298, 7
  %entry-point-addr300 = inttoptr i64 %entry-point-addr-uint299 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point301 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr300, align 8
  %139 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point301({}* %137, i64 2, {}* %O.0, {}* %138, {}* null, {}* null)
          to label %normal-dest304 unwind label %cleanup-lpad.loopexit

normal-dest304:                                   ; preds = %normal-dest297
  %.elt445 = extractvalue { {}*, i64 } %139, 0
  %.elt447 = extractvalue { {}*, i64 } %139, 1
  %cond411 = icmp eq i64 %.elt447, 0
  %140 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338327.0 = select i1 %cond411, {}* %140, {}* %.elt445
  %ptrtoint310 = ptrtoint {}* %131 to i64
  %entry-point-addr-uint311 = add i64 %ptrtoint310, 7
  %entry-point-addr312 = inttoptr i64 %entry-point-addr-uint311 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point313 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr312, align 8
  %141 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point313({}* %131, i64 2, {}* %G338326.0, {}* %G338327.0, {}* null, {}* null)
          to label %normal-dest316 unwind label %cleanup-lpad.loopexit

normal-dest316:                                   ; preds = %normal-dest304
  %.elt449 = extractvalue { {}*, i64 } %141, 0
  %.elt451 = extractvalue { {}*, i64 } %141, 1
  %cond412 = icmp eq i64 %.elt451, 0
  %142 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338322.0 = select i1 %cond412, {}* %142, {}* %.elt449
  %143 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %144 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 83), align 8
  %ptrtoint322 = ptrtoint {}* %67 to i64
  %entry-point-addr-uint323 = add i64 %ptrtoint322, 7
  %entry-point-addr324 = inttoptr i64 %entry-point-addr-uint323 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point325 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr324, align 8
  %145 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point325({}* %67, i64 5, {}* %O.0, {}* %129, {}* %G338322.0, {}* %143, {}* %144)
          to label %normal-dest328 unwind label %cleanup-lpad.loopexit

normal-dest328:                                   ; preds = %normal-dest316
  br i1 %consp-test263, label %tag56, label %tag31

normal-dest344:                                   ; preds = %tag75
  %146 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %147 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %148 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %149 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint345 = ptrtoint {}* %74 to i64
  %entry-point-addr-uint346 = add i64 %ptrtoint345, 7
  %entry-point-addr347 = inttoptr i64 %entry-point-addr-uint346 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point348 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr347, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point348({}* %74, i64 5, {}* %146, {}* %147, {}* %SEQUENCE.0.ph, {}* %148, {}* %149)
          to label %normal-dest351 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest351:                                   ; preds = %normal-dest344
  %.elt482 = extractvalue { {}*, i64 } %150, 0
  %.elt484 = extractvalue { {}*, i64 } %150, 1
  %cond417 = icmp eq i64 %.elt484, 0
  %151 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G2095854.1 = select i1 %cond417, {}* %151, {}* %.elt482
  br label %tag6

normal-dest364:                                   ; preds = %tag77
  %152 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %153 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %154 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %155 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint365 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint366 = add i64 %ptrtoint365, 7
  %entry-point-addr367 = inttoptr i64 %entry-point-addr-uint366 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point368 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr367, align 8
  %156 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point368({}* %76, i64 5, {}* %152, {}* %153, {}* %"%DOLIST-VAR115.0541", {}* %154, {}* %155)
          to label %normal-dest371 unwind label %cleanup-lpad.loopexit

normal-dest371:                                   ; preds = %normal-dest364
  %.elt462 = extractvalue { {}*, i64 } %156, 0
  %.elt464 = extractvalue { {}*, i64 } %156, 1
  %cond414 = icmp eq i64 %.elt464, 0
  %157 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %O.1 = select i1 %cond414, {}* %157, {}* %.elt462
  br label %tag65

normal-dest384:                                   ; preds = %maybe-more-tests
  %ptrtoint385 = ptrtoint {}* %120 to i64
  %entry-point-addr-uint386 = add i64 %ptrtoint385, 7
  %entry-point-addr387 = inttoptr i64 %entry-point-addr-uint386 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point388 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr387, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point388({}* %120, i64 1, {}* nonnull %.in, {}* null, {}* null, {}* null)
          to label %normal-dest391 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest391:                                   ; preds = %normal-dest384
  %.elt490 = extractvalue { {}*, i64 } %158, 0
  %.elt492 = extractvalue { {}*, i64 } %158, 1
  %cond419 = icmp eq i64 %.elt492, 0
  %159 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338452.0 = select i1 %cond419, {}* %159, {}* %.elt490
  %160 = icmp eq {}* %G338452.0, inttoptr (i64 4 to {}*)
  %G338389.0.pre.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br i1 %160, label %tag29, label %tag42
}

declare double @from_object_double({}*) local_unnamed_addr #3

declare {}* @to_object_double(double) local_unnamed_addr #3

declare float @from_object_float({}*) local_unnamed_addr #3

declare {}* @to_object_float(float) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

declare {}* @cc_enclose({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) local_unnamed_addr #3

declare {}* @cc_safe_setfdefinition({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^25^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !29 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^25^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G338480.0 = phi {}* [ %18, %header-check-br ], [ %G338480.1, %normal-dest54 ], [ %G338480.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 115), align 8
  %ptrtoint13 = ptrtoint {}* %G338480.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G338480.0, i64 2, {}* %"closure->V21", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 115), align 8
  %"closure->V21" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"V21^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"V21^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1108, i64 25, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->V21", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 117), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->V21", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 100 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 115), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 114), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338480.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338480.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"V21^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !30 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"V21^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag39.backedge:                                   ; preds = %tag32, %normal-dest131
  %11 = phi {}* [ %.val251, %tag32 ], [ %80, %normal-dest131 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %42, %tag32 ], [ %"%DOLIST-VAR.1", %normal-dest131 ]
  %12 = icmp eq {}* %"%DOLIST-VAR.0.be", %11
  br i1 %12, label %tag31, label %tag36

tag5:                                             ; preds = %tag8
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest46 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %tag8.preheader, %tag24.backedge
  %.val247 = phi {}* [ %70, %tag24.backedge ], [ %73, %tag8.preheader ]
  %"%DOLIST-VAR52.0256" = phi {}* [ %"%DOLIST-VAR52.0.be", %tag24.backedge ], [ %"%DOLIST-VAR52.2", %tag8.preheader ]
  %15 = ptrtoint {}* %"%DOLIST-VAR52.0256" to i64
  %tag-only203 = and i64 %15, 7
  %consp-test = icmp eq i64 %tag-only203, 3
  %.val246 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338567.0 = select i1 %consp-test, {}* %.val246, {}* %.val247
  %16 = icmp eq {}* %G338567.0, %.val247
  br i1 %16, label %tag5, label %tag26

tag9:                                             ; preds = %tag36
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest58 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag10:                                            ; preds = %normal-dest180
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %20 = icmp eq {}* %"%DOLIST-VAR52.0256", %19
  %.val248 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338530.0 = select i1 %20, {}* %.val248, {}* %19
  %21 = icmp eq {}* %G338530.0, %19
  br i1 %21, label %tag14, label %tag17

tag11:                                            ; preds = %tag17
  %22 = icmp eq {}* %"%DOLIST-VAR.0257", %.val251
  %.val250 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338511.0 = select i1 %22, {}* %.val250, {}* %.val251
  %23 = icmp eq {}* %G338511.0, %.val251
  br i1 %23, label %tag34, label %tag31

tag14:                                            ; preds = %tag10
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest85 unwind label %cleanup-lpad.loopexit

tag17:                                            ; preds = %tag10, %tag24.backedge, %normal-dest109
  %.val251 = phi {}* [ %73, %normal-dest109 ], [ %70, %tag24.backedge ], [ %19, %tag10 ]
  br i1 %consp-test143, label %tag32, label %tag11

tag18:                                            ; preds = %normal-dest180
  %26 = add i64 %15, 5
  %27 = inttoptr i64 %26 to {}**
  %28 = load {}*, {}** %27, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag24.backedge

tag19:                                            ; preds = %normal-dest66, %tag23
  %K.0 = phi {}* [ %33, %tag23 ], [ %K.1, %normal-dest66 ]
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest102 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag23:                                            ; preds = %tag36
  %31 = add i64 %45, -3
  %32 = inttoptr i64 %31 to {}**
  %33 = load {}*, {}** %32, align 8
  br label %tag19

tag26:                                            ; preds = %tag8
  %34 = add i64 %15, -3
  %35 = inttoptr i64 %34 to {}**
  %36 = load {}*, {}** %35, align 8
  br label %tag37

tag31:                                            ; preds = %tag11, %tag39.backedge, %normal-dest
  %37 = phi {}* [ %49, %normal-dest ], [ %.val251, %tag11 ], [ %11, %tag39.backedge ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %38 = insertvalue { {}*, i64 } undef, {}* %37, 0
  %39 = insertvalue { {}*, i64 } %38, i64 1, 1
  ret { {}*, i64 } %39

tag32:                                            ; preds = %tag17
  %40 = add i64 %45, 5
  %41 = inttoptr i64 %40 to {}**
  %42 = load {}*, {}** %41, align 8
  br label %tag39.backedge

tag34:                                            ; preds = %tag11
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest124 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag36:                                            ; preds = %tag36.preheader, %tag39.backedge
  %.val245 = phi {}* [ %11, %tag39.backedge ], [ %50, %tag36.preheader ]
  %"%DOLIST-VAR.0257" = phi {}* [ %"%DOLIST-VAR.0.be", %tag39.backedge ], [ %49, %tag36.preheader ]
  %45 = ptrtoint {}* %"%DOLIST-VAR.0257" to i64
  %tag-only142200 = and i64 %45, 7
  %consp-test143 = icmp eq i64 %tag-only142200, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338590.0 = select i1 %consp-test143, {}* %.val, {}* %.val245
  %46 = icmp eq {}* %G338590.0, %.val245
  br i1 %46, label %tag9, label %tag23

tag37:                                            ; preds = %normal-dest49, %tag26
  %O.0 = phi {}* [ %36, %tag26 ], [ %O.1, %normal-dest49 ]
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 73), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag5, %normal-dest46, %tag14, %normal-dest85, %tag37, %normal-dest145, %normal-dest147, %normal-dest149, %normal-dest156, %normal-dest168
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest124, %tag34, %normal-dest102, %tag19, %normal-dest58, %tag9
  %lpad.loopexit252 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10
  %lpad.loopexit.split-lp253 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit252, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp253, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 111), align 8
  %50 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %51 = icmp eq {}* %49, %50
  br i1 %51, label %tag31, label %tag36.preheader

tag36.preheader:                                  ; preds = %normal-dest
  br label %tag36

normal-dest46:                                    ; preds = %tag5
  %52 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %53 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %55 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint = ptrtoint {}* %14 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %14, i64 5, {}* %52, {}* %53, {}* %"%DOLIST-VAR52.0256", {}* %54, {}* %55)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit

normal-dest49:                                    ; preds = %normal-dest46
  %.elt222 = extractvalue { {}*, i64 } %56, 0
  %.elt224 = extractvalue { {}*, i64 } %56, 1
  %cond197 = icmp eq i64 %.elt224, 0
  %57 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %O.1 = select i1 %cond197, {}* %57, {}* %.elt222
  br label %tag37

normal-dest58:                                    ; preds = %tag9
  %58 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %60 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %61 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint60 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint61 = add i64 %ptrtoint60, 7
  %entry-point-addr62 = inttoptr i64 %entry-point-addr-uint61 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point63 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr62, align 8
  %62 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point63({}* %18, i64 5, {}* %58, {}* %59, {}* %"%DOLIST-VAR.0257", {}* %60, {}* %61)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest66:                                    ; preds = %normal-dest58
  %.elt231 = extractvalue { {}*, i64 } %62, 0
  %.elt233 = extractvalue { {}*, i64 } %62, 1
  %cond199 = icmp eq i64 %.elt233, 0
  %63 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %K.1 = select i1 %cond199, {}* %63, {}* %.elt231
  br label %tag19

normal-dest85:                                    ; preds = %tag14
  %64 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %65 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %66 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %67 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint86 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint87 = add i64 %ptrtoint86, 7
  %entry-point-addr88 = inttoptr i64 %entry-point-addr-uint87 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point89 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr88, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point89({}* %25, i64 5, {}* %64, {}* %65, {}* %"%DOLIST-VAR52.0256", {}* %66, {}* %67)
          to label %normal-dest92 unwind label %cleanup-lpad.loopexit

normal-dest92:                                    ; preds = %normal-dest85
  %.elt218 = extractvalue { {}*, i64 } %68, 0
  %.elt220 = extractvalue { {}*, i64 } %68, 1
  %cond196 = icmp eq i64 %.elt220, 0
  %69 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR52.1" = select i1 %cond196, {}* %69, {}* %.elt218
  br label %tag24.backedge

tag24.backedge:                                   ; preds = %normal-dest92, %tag18
  %70 = phi {}* [ %.pre, %tag18 ], [ %69, %normal-dest92 ]
  %"%DOLIST-VAR52.0.be" = phi {}* [ %28, %tag18 ], [ %"%DOLIST-VAR52.1", %normal-dest92 ]
  %71 = icmp eq {}* %"%DOLIST-VAR52.0.be", %70
  br i1 %71, label %tag17, label %tag8

normal-dest102:                                   ; preds = %tag19
  %ptrtoint103 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint104 = add i64 %ptrtoint103, 7
  %entry-point-addr105 = inttoptr i64 %entry-point-addr-uint104 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point106 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr105, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point106({}* %30, i64 1, {}* %K.0, {}* null, {}* null, {}* null)
          to label %normal-dest109 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest109:                                   ; preds = %normal-dest102
  %.elt = extractvalue { {}*, i64 } %72, 0
  %.elt202 = extractvalue { {}*, i64 } %72, 1
  %cond = icmp eq i64 %.elt202, 0
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR52.2" = select i1 %cond, {}* %73, {}* %.elt
  %74 = icmp eq {}* %"%DOLIST-VAR52.2", %73
  br i1 %74, label %tag17, label %tag8.preheader

tag8.preheader:                                   ; preds = %normal-dest109
  br label %tag8

normal-dest124:                                   ; preds = %tag34
  %75 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %76 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %77 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %78 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint125 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint126 = add i64 %ptrtoint125, 7
  %entry-point-addr127 = inttoptr i64 %entry-point-addr-uint126 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point128 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr127, align 8
  %79 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point128({}* %44, i64 5, {}* %75, {}* %76, {}* %"%DOLIST-VAR.0257", {}* %77, {}* %78)
          to label %normal-dest131 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest131:                                   ; preds = %normal-dest124
  %.elt227 = extractvalue { {}*, i64 } %79, 0
  %.elt229 = extractvalue { {}*, i64 } %79, 1
  %cond198 = icmp eq i64 %.elt229, 0
  %80 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond198, {}* %80, {}* %.elt227
  br label %tag39.backedge

normal-dest145:                                   ; preds = %tag37
  %81 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %82 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 112), align 16
  %83 = invoke {}* @cc_safe_fdefinition({}* %82)
          to label %normal-dest147 unwind label %cleanup-lpad.loopexit

normal-dest147:                                   ; preds = %normal-dest145
  %84 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest149 unwind label %cleanup-lpad.loopexit

normal-dest149:                                   ; preds = %normal-dest147
  %86 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint150 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint151 = add i64 %ptrtoint150, 7
  %entry-point-addr152 = inttoptr i64 %entry-point-addr-uint151 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point153 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr152, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point153({}* %85, i64 2, {}* %O.0, {}* %86, {}* null, {}* null)
          to label %normal-dest156 unwind label %cleanup-lpad.loopexit

normal-dest156:                                   ; preds = %normal-dest149
  %.elt205 = extractvalue { {}*, i64 } %87, 0
  %.elt207 = extractvalue { {}*, i64 } %87, 1
  %cond194 = icmp eq i64 %.elt207, 0
  %88 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338544.0 = select i1 %cond194, {}* %88, {}* %.elt205
  %ptrtoint162 = ptrtoint {}* %83 to i64
  %entry-point-addr-uint163 = add i64 %ptrtoint162, 7
  %entry-point-addr164 = inttoptr i64 %entry-point-addr-uint163 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point165 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr164, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point165({}* %83, i64 1, {}* %G338544.0, {}* null, {}* null, {}* null)
          to label %normal-dest168 unwind label %cleanup-lpad.loopexit

normal-dest168:                                   ; preds = %normal-dest156
  %.elt209 = extractvalue { {}*, i64 } %89, 0
  %.elt211 = extractvalue { {}*, i64 } %89, 1
  %cond195 = icmp eq i64 %.elt211, 0
  %90 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338540.0 = select i1 %cond195, {}* %90, {}* %.elt209
  %91 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %92 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 83), align 8
  %ptrtoint174 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint175 = add i64 %ptrtoint174, 7
  %entry-point-addr176 = inttoptr i64 %entry-point-addr-uint175 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point177 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr176, align 8
  %93 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point177({}* %48, i64 5, {}* %O.0, {}* %81, {}* %G338540.0, {}* %91, {}* %92)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit

normal-dest180:                                   ; preds = %normal-dest168
  br i1 %consp-test, label %tag18, label %tag10
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^35^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !31 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^35^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G338617.0 = phi {}* [ %18, %header-check-br ], [ %G338617.1, %normal-dest63 ], [ %G338617.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 124), align 16
  %ptrtoint22 = ptrtoint {}* %G338617.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G338617.0, i64 2, {}* %"closure->SCH=ERZEUGE_LEEREN_ZEITADT", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest56, %tag3, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 124), align 16
  %"closure->SCH=ERZEUGE_LEEREN_ZEITADT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=ERZEUGE_LEEREN_ZEITADT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=ERZEUGE_LEEREN_ZEITADT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1488, i64 35, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 126), align 16
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->SCH=ERZEUGE_LEEREN_ZEITADT", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 132), align 16
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->SCH=ERZEUGE_LEEREN_ZEITADT", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 140 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 124), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 123), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338617.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag2

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338617.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=ERZEUGE_LEEREN_ZEITADT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !32 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  switch i64 %nargs, label %95 [
    i64 1, label %case-opt1-bb
    i64 0, label %entry.req-bb_crit_edge
  ]

entry.req-bb_crit_edge:                           ; preds = %entry
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %req-bb

tag:                                              ; preds = %tag82
  %10 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %11 = invoke {}* @cc_safe_fdefinition({}* %10)
          to label %normal-dest107 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

tag4:                                             ; preds = %tag91
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag5:                                             ; preds = %tag37, %tag36.backedge, %normal-dest368
  %.val545 = phi {}* [ %152, %normal-dest368 ], [ %64, %tag36.backedge ], [ %35, %tag37 ]
  br i1 %consp-test394, label %tag45, label %tag48

tag8:                                             ; preds = %tag91
  %14 = add i64 %84, -3
  %15 = inttoptr i64 %14 to {}**
  %16 = load {}*, {}** %15, align 8
  br label %tag78

tag12:                                            ; preds = %normal-dest295, %tag12.outer
  br i1 %consp-test135, label %tag95, label %tag59

tag14:                                            ; preds = %normal-dest144, %tag67, %header-check-br310, %tag63
  %.val546 = phi {}* [ %.val547, %tag63 ], [ %.val, %tag67 ], [ %.val, %header-check-br310 ], [ %G338748.0.pre.pre, %normal-dest144 ]
  %.val547573 = phi {}* [ %.val547, %tag63 ], [ %147, %tag67 ], [ %147, %header-check-br310 ], [ %106, %normal-dest144 ]
  %17 = icmp eq {}* %.in502, %.val547573
  %G338744.0 = select i1 %17, {}* %.val546, {}* %.val547573
  %18 = icmp eq {}* %G338744.0, %.val547573
  br i1 %18, label %tag34, label %tag49

tag19:                                            ; preds = %tag59
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest157 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag21:                                            ; preds = %tag42
  %21 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only442 = and i64 %21, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only442, 0
  br i1 %fixnump-test, label %tag82, label %tag99

tag22:                                            ; preds = %tag48, %tag53.backedge, %tag49
  %22 = phi {}* [ %52, %tag49 ], [ %.val545, %tag48 ], [ %45, %tag53.backedge ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %23 = insertvalue { {}*, i64 } undef, {}* %22, 0
  %24 = insertvalue { {}*, i64 } %23, i64 1, 1
  ret { {}*, i64 } %24

tag24:                                            ; preds = %normal-dest279, %tag47
  %25 = phi {}* [ %.val538, %tag47 ], [ %137, %normal-dest279 ]
  %O.0 = phi {}* [ %49, %tag47 ], [ %O.1, %normal-dest279 ]
  %26 = icmp eq {}* %testen.0, %25
  br i1 %26, label %tag90, label %tag30

tag25:                                            ; preds = %tag90
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 73), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest176 unwind label %cleanup-lpad.loopexit

tag29:                                            ; preds = %tag29.preheader, %tag36.backedge
  %.val538 = phi {}* [ %64, %tag36.backedge ], [ %152, %tag29.preheader ]
  %"%DOLIST-VAR215.0562" = phi {}* [ %"%DOLIST-VAR215.0.be", %tag36.backedge ], [ %"%DOLIST-VAR215.1", %tag29.preheader ]
  %29 = ptrtoint {}* %"%DOLIST-VAR215.0562" to i64
  %tag-only221456 = and i64 %29, 7
  %consp-test222 = icmp eq i64 %tag-only221456, 3
  %.val537 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338712.0 = select i1 %consp-test222, {}* %.val537, {}* %.val538
  %30 = icmp eq {}* %G338712.0, %.val538
  br i1 %30, label %tag43, label %tag47

tag30:                                            ; preds = %tag24
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest224 unwind label %cleanup-lpad.loopexit

tag34:                                            ; preds = %tag14
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest247 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag37:                                            ; preds = %tag55
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %36 = icmp eq {}* %"%DOLIST-VAR215.0562", %35
  %.val541 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338667.0 = select i1 %36, {}* %.val541, {}* %35
  %37 = icmp eq {}* %G338667.0, %35
  br i1 %37, label %tag87, label %tag5

tag42:                                            ; preds = %tag59, %normal-dest164, %tag95
  %.val534 = phi {}* [ %.val532.pre, %tag95 ], [ %113, %normal-dest164 ], [ %66, %tag59 ]
  %G2095854.0 = phi {}* [ %86, %tag95 ], [ %G2095854.1, %normal-dest164 ], [ %66, %tag59 ]
  %38 = ptrtoint {}* %G2095854.0 to i64
  %tag-only269441 = and i64 %38, 7
  %consp-test270 = icmp eq i64 %tag-only269441, 3
  %.val531 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338785.0 = select i1 %consp-test270, {}* %.val531, {}* %.val534
  %39 = icmp eq {}* %G338785.0, %.val534
  br i1 %39, label %tag73, label %tag21

tag43:                                            ; preds = %tag29
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest272 unwind label %cleanup-lpad.loopexit

tag45:                                            ; preds = %tag5
  %42 = add i64 %84, 5
  %43 = inttoptr i64 %42 to {}**
  %44 = load {}*, {}** %43, align 8
  br label %tag53.backedge

tag53.backedge:                                   ; preds = %tag45, %normal-dest403
  %45 = phi {}* [ %.val545, %tag45 ], [ %165, %normal-dest403 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %44, %tag45 ], [ %"%DOLIST-VAR.1", %normal-dest403 ]
  %46 = icmp eq {}* %"%DOLIST-VAR.0.be", %45
  br i1 %46, label %tag22, label %tag91

tag47:                                            ; preds = %tag29
  %47 = add i64 %29, -3
  %48 = inttoptr i64 %47 to {}**
  %49 = load {}*, {}** %48, align 8
  br label %tag24

tag48:                                            ; preds = %tag5
  %50 = icmp eq {}* %"%DOLIST-VAR.0563", %.val545
  %.val544 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338648.0 = select i1 %50, {}* %.val544, {}* %.val545
  %51 = icmp eq {}* %G338648.0, %.val545
  br i1 %51, label %tag96, label %tag22

tag49:                                            ; preds = %tag73, %normal-dest254, %tag14, %tag54
  %52 = phi {}* [ %.val547, %tag54 ], [ %.val547573, %tag14 ], [ %131, %normal-dest254 ], [ %.val534, %tag73 ]
  %G338596.0 = phi {}* [ %60, %tag54 ], [ null, %tag14 ], [ %G338596.1, %normal-dest254 ], [ %LENGTH.0.ph, %tag73 ]
  %53 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 120), align 16
  %54 = icmp eq {}* %53, %52
  br i1 %54, label %tag22, label %tag91.preheader

tag91.preheader:                                  ; preds = %tag49
  br label %tag91

tag50:                                            ; preds = %tag73
  %55 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest295 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

tag54:                                            ; preds = %tag63
  %57 = add i64 %149, 7
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 8
  %"tag fixnum" = shl nuw i64 %59, 2
  %60 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag49

tag55:                                            ; preds = %normal-dest185, %tag90
  br i1 %consp-test222, label %tag57, label %tag37

tag57:                                            ; preds = %tag55
  %61 = add i64 %29, 5
  %62 = inttoptr i64 %61 to {}**
  %63 = load {}*, {}** %62, align 8
  %.pre570 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag36.backedge

tag36.backedge:                                   ; preds = %tag57, %normal-dest382
  %64 = phi {}* [ %.pre570, %tag57 ], [ %159, %normal-dest382 ]
  %"%DOLIST-VAR215.0.be" = phi {}* [ %63, %tag57 ], [ %"%DOLIST-VAR215.2", %normal-dest382 ]
  %65 = icmp eq {}* %"%DOLIST-VAR215.0.be", %64
  br i1 %65, label %tag5, label %tag29

tag59:                                            ; preds = %tag12
  %66 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %67 = icmp eq {}* %SEQUENCE.0.ph, %66
  %.val529 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338797.0 = select i1 %67, {}* %.val529, {}* %66
  %68 = icmp eq {}* %G338797.0, %66
  br i1 %68, label %tag19, label %tag42

tag63:                                            ; preds = %normal-dest144, %header-check-br325
  %.val547 = phi {}* [ %147, %header-check-br325 ], [ %106, %normal-dest144 ]
  %G338748.0 = phi {}* [ %.val, %header-check-br325 ], [ %G338748.0.pre.pre, %normal-dest144 ]
  %69 = icmp eq {}* %G338748.0, %.val547
  br i1 %69, label %tag14, label %tag54

tag67:                                            ; preds = %normal-dest342
  %test328 = icmp eq i64 %tag-only348439, 1
  br i1 %test328, label %header-check-br325, label %tag14

tag73:                                            ; preds = %tag42
  %70 = icmp eq {}* %G2095854.0, %.val534
  %G338756.0 = select i1 %70, {}* %.val531, {}* %.val534
  %71 = icmp eq {}* %G338756.0, %.val534
  br i1 %71, label %tag50, label %tag49

tag12.outer:                                      ; preds = %tag12.outer.backedge, %tag12.outer.preheader
  %SEQUENCE.0.ph = phi {}* [ %.in502, %tag12.outer.preheader ], [ %G2095854.0, %tag12.outer.backedge ]
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag12.outer.preheader ], [ %LENGTH.0.ph.be, %tag12.outer.backedge ]
  %72 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only134440 = and i64 %72, 7
  %consp-test135 = icmp eq i64 %tag-only134440, 3
  %73 = add i64 %72, 5
  %74 = inttoptr i64 %73 to {}**
  br label %tag12

tag78:                                            ; preds = %normal-dest121, %tag8
  %K.0 = phi {}* [ %16, %tag8 ], [ %K.1, %normal-dest121 ]
  %75 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest361 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag82:                                            ; preds = %tag21
  %77 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %21, i64 4)
  %result = extractvalue { i64, i1 } %77, 0
  %overflow = extractvalue { i64, i1 } %77, 1
  %78 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag, label %tag12.outer.backedge

tag12.outer.backedge:                             ; preds = %tag82, %normal-dest110, %normal-dest418
  %LENGTH.0.ph.be = phi {}* [ %78, %tag82 ], [ %LENGTH.1, %normal-dest110 ], [ %LENGTH.2, %normal-dest418 ]
  br label %tag12.outer

tag87:                                            ; preds = %tag37
  %79 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest375 unwind label %cleanup-lpad.loopexit

tag90:                                            ; preds = %normal-dest231, %header-check-br208, %header-check-br237, %tag24
  %81 = phi {}* [ %testen.0, %tag24 ], [ %125, %header-check-br237 ], [ %125, %header-check-br208 ], [ %125, %normal-dest231 ]
  %object.0.in = phi {}** [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), %tag24 ], [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), %header-check-br237 ], [ %.515, %header-check-br208 ], [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), %normal-dest231 ]
  %object.0 = load {}*, {}** %object.0.in, align 8
  %82 = icmp eq {}* %object.0, %81
  %.val539 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338684.0 = select i1 %82, {}* %.val539, {}* %81
  %83 = icmp eq {}* %G338684.0, %81
  br i1 %83, label %tag55, label %tag25

tag91:                                            ; preds = %tag91.preheader, %tag53.backedge
  %.val536 = phi {}* [ %45, %tag53.backedge ], [ %52, %tag91.preheader ]
  %"%DOLIST-VAR.0563" = phi {}* [ %"%DOLIST-VAR.0.be", %tag53.backedge ], [ %53, %tag91.preheader ]
  %84 = ptrtoint {}* %"%DOLIST-VAR.0563" to i64
  %tag-only393451 = and i64 %84, 7
  %consp-test394 = icmp eq i64 %tag-only393451, 3
  %.val535 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338735.0 = select i1 %consp-test394, {}* %.val535, {}* %.val536
  %85 = icmp eq {}* %G338735.0, %.val536
  br i1 %85, label %tag4, label %tag8

tag95:                                            ; preds = %tag12
  %86 = load {}*, {}** %74, align 8
  %.val532.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag42

tag96:                                            ; preds = %tag48
  %87 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest396 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag99:                                            ; preds = %tag21
  %89 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 70), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest411 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

cleanup-lpad.loopexit:                            ; preds = %tag25, %normal-dest176, %normal-dest178, %normal-dest185, %tag30, %normal-dest224, %tag43, %normal-dest272, %tag87, %normal-dest375
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest396, %tag96, %normal-dest361, %tag78, %normal-dest114, %tag4
  %lpad.loopexit550 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit: ; preds = %normal-dest295, %tag50, %normal-dest157, %tag19
  %lpad.loopexit555 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %normal-dest411, %tag99, %normal-dest107, %tag
  %lpad.loopexit.split-lp556 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %maybe-more-tests318, %normal-dest137, %tag34, %normal-dest247, %req-bb, %normal-dest335, %95
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit550, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit555, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp556, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

req-bb:                                           ; preds = %entry.req-bb_crit_edge, %case-opt1-bb
  %91 = phi {}* [ %96, %case-opt1-bb ], [ %.pre, %entry.req-bb_crit_edge ]
  %G338601.0 = phi {}* [ %96, %case-opt1-bb ], [ %9, %entry.req-bb_crit_edge ]
  %92 = icmp eq {}* %G338601.0, %9
  %testen.0 = select i1 %92, {}* %91, {}* %farg0
  %93 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest335 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:95:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=ERZEUGE_LEEREN_ZEITADT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %95
  unreachable

case-opt1-bb:                                     ; preds = %entry
  %96 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %req-bb

normal-dest107:                                   ; preds = %tag
  %ptrtoint = ptrtoint {}* %11 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %11, i64 1, {}* %78, {}* null, {}* null, {}* null)
          to label %normal-dest110 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest110:                                   ; preds = %normal-dest107
  %.elt448 = extractvalue { {}*, i64 } %97, 0
  %.elt450 = extractvalue { {}*, i64 } %97, 1
  %cond426 = icmp eq i64 %.elt450, 0
  %98 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.1 = select i1 %cond426, {}* %98, {}* %.elt448
  br label %tag12.outer.backedge

normal-dest114:                                   ; preds = %tag4
  %99 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %100 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %101 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint115 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint116 = add i64 %ptrtoint115, 7
  %entry-point-addr117 = inttoptr i64 %entry-point-addr-uint116 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point118 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr117, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point118({}* %13, i64 5, {}* %99, {}* %100, {}* %"%DOLIST-VAR.0563", {}* %101, {}* %102)
          to label %normal-dest121 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest121:                                   ; preds = %normal-dest114
  %.elt484 = extractvalue { {}*, i64 } %103, 0
  %.elt486 = extractvalue { {}*, i64 } %103, 1
  %cond433 = icmp eq i64 %.elt486, 0
  %104 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %K.1 = select i1 %cond433, {}* %104, {}* %.elt484
  br label %tag78

normal-dest137:                                   ; preds = %maybe-more-tests318
  %ptrtoint138 = ptrtoint {}* %142 to i64
  %entry-point-addr-uint139 = add i64 %ptrtoint138, 7
  %entry-point-addr140 = inttoptr i64 %entry-point-addr-uint139 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point141 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr140, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point141({}* %142, i64 1, {}* nonnull %.in502, {}* null, {}* null, {}* null)
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest144:                                   ; preds = %normal-dest137
  %.elt504 = extractvalue { {}*, i64 } %105, 0
  %.elt506 = extractvalue { {}*, i64 } %105, 1
  %cond436 = icmp eq i64 %.elt506, 0
  %106 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338813.0 = select i1 %cond436, {}* %106, {}* %.elt504
  %107 = icmp eq {}* %G338813.0, inttoptr (i64 4 to {}*)
  %G338748.0.pre.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br i1 %107, label %tag63, label %tag14

normal-dest157:                                   ; preds = %tag19
  %108 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %109 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %110 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %111 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint158 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint159 = add i64 %ptrtoint158, 7
  %entry-point-addr160 = inttoptr i64 %entry-point-addr-uint159 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point161 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr160, align 8
  %112 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point161({}* %20, i64 5, {}* %108, {}* %109, {}* %SEQUENCE.0.ph, {}* %110, {}* %111)
          to label %normal-dest164 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

normal-dest164:                                   ; preds = %normal-dest157
  %.elt495 = extractvalue { {}*, i64 } %112, 0
  %.elt497 = extractvalue { {}*, i64 } %112, 1
  %cond434 = icmp eq i64 %.elt497, 0
  %113 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G2095854.1 = select i1 %cond434, {}* %113, {}* %.elt495
  br label %tag42

normal-dest176:                                   ; preds = %tag25
  %114 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %115 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 77), align 8
  %116 = invoke {}* @cc_safe_fdefinition({}* %115)
          to label %normal-dest178 unwind label %cleanup-lpad.loopexit

normal-dest178:                                   ; preds = %normal-dest176
  %ptrtoint179 = ptrtoint {}* %116 to i64
  %entry-point-addr-uint180 = add i64 %ptrtoint179, 7
  %entry-point-addr181 = inttoptr i64 %entry-point-addr-uint180 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point182 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr181, align 8
  %117 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point182({}* %116, i64 1, {}* %G338596.0, {}* null, {}* null, {}* null)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit

normal-dest185:                                   ; preds = %normal-dest178
  %.elt462 = extractvalue { {}*, i64 } %117, 0
  %.elt464 = extractvalue { {}*, i64 } %117, 1
  %cond429 = icmp eq i64 %.elt464, 0
  %118 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338677.0 = select i1 %cond429, {}* %118, {}* %.elt462
  %119 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %120 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 28), align 16
  %ptrtoint191 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint192 = add i64 %ptrtoint191, 7
  %entry-point-addr193 = inttoptr i64 %entry-point-addr-uint192 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point194 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr193, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point194({}* %28, i64 5, {}* %O.0, {}* %114, {}* %G338677.0, {}* %119, {}* %120)
          to label %tag55 unwind label %cleanup-lpad.loopexit

header-check-br208:                               ; preds = %header-check-br237
  %.off543 = add i64 %127, -1153
  %122 = icmp ult i64 %.off543, 149
  %.515 = select i1 %122, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12)
  br label %tag90

normal-dest224:                                   ; preds = %tag30
  %123 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint225 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint226 = add i64 %ptrtoint225, 7
  %entry-point-addr227 = inttoptr i64 %entry-point-addr-uint226 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point228 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr227, align 8
  %124 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point228({}* %32, i64 2, {}* %O.0, {}* %123, {}* null, {}* null)
          to label %normal-dest231 unwind label %cleanup-lpad.loopexit

normal-dest231:                                   ; preds = %normal-dest224
  %.elt458 = extractvalue { {}*, i64 } %124, 0
  %.elt460 = extractvalue { {}*, i64 } %124, 1
  %cond428 = icmp eq i64 %.elt460, 0
  %125 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in = select i1 %cond428, {}* %125, {}* %.elt458
  %ptrtoint238 = ptrtoint {}* %.in to i64
  %tag-only239 = and i64 %ptrtoint238, 7
  %test240 = icmp eq i64 %tag-only239, 1
  br i1 %test240, label %header-check-br237, label %tag90

header-check-br237:                               ; preds = %normal-dest231
  %126 = bitcast {}* %.in to i8*
  %gep242 = getelementptr inbounds i8, i8* %126, i64 -9
  %irc-bit-cast243 = bitcast i8* %gep242 to i64*
  %127 = load i64, i64* %irc-bit-cast243, align 8
  %.off = add i64 %127, -1081
  %128 = icmp ult i64 %.off, 69
  br i1 %128, label %tag90, label %header-check-br208

normal-dest247:                                   ; preds = %tag34
  %129 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 118), align 16
  %ptrtoint248 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint249 = add i64 %ptrtoint248, 7
  %entry-point-addr250 = inttoptr i64 %entry-point-addr-uint249 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point251 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr250, align 8
  %130 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point251({}* %34, i64 2, {}* %.in502, {}* %129, {}* null, {}* null)
          to label %normal-dest254 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest254:                                   ; preds = %normal-dest247
  %.elt499 = extractvalue { {}*, i64 } %130, 0
  %.elt501 = extractvalue { {}*, i64 } %130, 1
  %cond435 = icmp eq i64 %.elt501, 0
  %131 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338596.1 = select i1 %cond435, {}* %131, {}* %.elt499
  br label %tag49

normal-dest272:                                   ; preds = %tag43
  %132 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %133 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %134 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %135 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint273 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint274 = add i64 %ptrtoint273, 7
  %entry-point-addr275 = inttoptr i64 %entry-point-addr-uint274 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point276 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr275, align 8
  %136 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point276({}* %41, i64 5, {}* %132, {}* %133, {}* %"%DOLIST-VAR215.0562", {}* %134, {}* %135)
          to label %normal-dest279 unwind label %cleanup-lpad.loopexit

normal-dest279:                                   ; preds = %normal-dest272
  %.elt475 = extractvalue { {}*, i64 } %136, 0
  %.elt477 = extractvalue { {}*, i64 } %136, 1
  %cond431 = icmp eq i64 %.elt477, 0
  %137 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %O.1 = select i1 %cond431, {}* %137, {}* %.elt475
  br label %tag24

normal-dest295:                                   ; preds = %tag50
  %138 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 119), align 8
  %ptrtoint296 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint297 = add i64 %ptrtoint296, 7
  %entry-point-addr298 = inttoptr i64 %entry-point-addr-uint297 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point299 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr298, align 8
  %139 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point299({}* %56, i64 2, {}* %G2095854.0, {}* %138, {}* null, {}* null)
          to label %tag12 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit

header-check-br310:                               ; preds = %header-check-br325
  %.off549 = add i64 %143, -1153
  %140 = icmp ult i64 %.off549, 149
  br i1 %140, label %maybe-more-tests318, label %tag14

maybe-more-tests318:                              ; preds = %header-check-br310
  %141 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 109), align 8
  %142 = invoke {}* @cc_safe_fdefinition({}* %141)
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br325:                               ; preds = %tag67
  %gep330 = getelementptr inbounds i8, i8* %148, i64 -9
  %irc-bit-cast331 = bitcast i8* %gep330 to i64*
  %143 = load i64, i64* %irc-bit-cast331, align 8
  %.off548 = add i64 %143, -1081
  %144 = icmp ult i64 %.off548, 69
  br i1 %144, label %tag63, label %header-check-br310

normal-dest335:                                   ; preds = %req-bb
  %145 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %ptrtoint336 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint337 = add i64 %ptrtoint336, 7
  %entry-point-addr338 = inttoptr i64 %entry-point-addr-uint337 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point339 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr338, align 8
  %146 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point339({}* %94, i64 1, {}* %145, {}* null, {}* null, {}* null)
          to label %normal-dest342 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest342:                                   ; preds = %normal-dest335
  %.elt = extractvalue { {}*, i64 } %146, 0
  %.elt438 = extractvalue { {}*, i64 } %146, 1
  %cond424 = icmp eq i64 %.elt438, 0
  %147 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in502 = select i1 %cond424, {}* %147, {}* %.elt
  %148 = bitcast {}* %.in502 to i8*
  %149 = ptrtoint {}* %.in502 to i64
  %tag-only348439 = and i64 %149, 7
  %consp-test349 = icmp eq i64 %tag-only348439, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338804.0 = select i1 %consp-test349, {}* %.val, {}* %147
  %150 = icmp eq {}* %G338804.0, %147
  br i1 %150, label %tag67, label %tag12.outer.preheader

tag12.outer.preheader:                            ; preds = %normal-dest342
  br label %tag12.outer

normal-dest361:                                   ; preds = %tag78
  %ptrtoint362 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint363 = add i64 %ptrtoint362, 7
  %entry-point-addr364 = inttoptr i64 %entry-point-addr-uint363 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point365 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr364, align 8
  %151 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point365({}* %76, i64 1, {}* %K.0, {}* null, {}* null, {}* null)
          to label %normal-dest368 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest368:                                   ; preds = %normal-dest361
  %.elt453 = extractvalue { {}*, i64 } %151, 0
  %.elt455 = extractvalue { {}*, i64 } %151, 1
  %cond427 = icmp eq i64 %.elt455, 0
  %152 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR215.1" = select i1 %cond427, {}* %152, {}* %.elt453
  %153 = icmp eq {}* %"%DOLIST-VAR215.1", %152
  br i1 %153, label %tag5, label %tag29.preheader

tag29.preheader:                                  ; preds = %normal-dest368
  br label %tag29

normal-dest375:                                   ; preds = %tag87
  %154 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %155 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %156 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %157 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint376 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint377 = add i64 %ptrtoint376, 7
  %entry-point-addr378 = inttoptr i64 %entry-point-addr-uint377 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point379 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr378, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point379({}* %80, i64 5, {}* %154, {}* %155, {}* %"%DOLIST-VAR215.0562", {}* %156, {}* %157)
          to label %normal-dest382 unwind label %cleanup-lpad.loopexit

normal-dest382:                                   ; preds = %normal-dest375
  %.elt471 = extractvalue { {}*, i64 } %158, 0
  %.elt473 = extractvalue { {}*, i64 } %158, 1
  %cond430 = icmp eq i64 %.elt473, 0
  %159 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR215.2" = select i1 %cond430, {}* %159, {}* %.elt471
  br label %tag36.backedge

normal-dest396:                                   ; preds = %tag96
  %160 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %161 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %162 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %163 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint397 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint398 = add i64 %ptrtoint397, 7
  %entry-point-addr399 = inttoptr i64 %entry-point-addr-uint398 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point400 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr399, align 8
  %164 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point400({}* %88, i64 5, {}* %160, {}* %161, {}* %"%DOLIST-VAR.0563", {}* %162, {}* %163)
          to label %normal-dest403 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest403:                                   ; preds = %normal-dest396
  %.elt480 = extractvalue { {}*, i64 } %164, 0
  %.elt482 = extractvalue { {}*, i64 } %164, 1
  %cond432 = icmp eq i64 %.elt482, 0
  %165 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond432, {}* %165, {}* %.elt480
  br label %tag53.backedge

normal-dest411:                                   ; preds = %tag99
  %ptrtoint412 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint413 = add i64 %ptrtoint412, 7
  %entry-point-addr414 = inttoptr i64 %entry-point-addr-uint413 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point415 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr414, align 8
  %166 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point415({}* %90, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest418 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest418:                                   ; preds = %normal-dest411
  %.elt444 = extractvalue { {}*, i64 } %166, 0
  %.elt446 = extractvalue { {}*, i64 } %166, 1
  %cond425 = icmp eq i64 %.elt446, 0
  %167 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.2 = select i1 %cond425, {}* %167, {}* %.elt444
  br label %tag12.outer.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^45^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !33 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^45^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G338839.0 = phi {}* [ %18, %header-check-br ], [ %G338839.1, %normal-dest54 ], [ %G338839.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 148), align 16
  %ptrtoint13 = ptrtoint {}* %G338839.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G338839.0, i64 2, {}* %"closure->V3", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 148), align 16
  %"closure->V3" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"V3^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"V3^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 1975, i64 45, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->V3", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 150), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->V3", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 180 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 148), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 147), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338839.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338839.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"V3^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !34 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"V3^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %tag1.preheader, %tag12.backedge
  %.val232 = phi {}* [ %16, %tag12.backedge ], [ %37, %tag1.preheader ]
  %"%DOLIST-VAR.0235" = phi {}* [ %"%DOLIST-VAR.0.be", %tag12.backedge ], [ %"%DOLIST-VAR.1", %tag1.preheader ]
  %11 = ptrtoint {}* %"%DOLIST-VAR.0235" to i64
  %tag-only184 = and i64 %11, 7
  %consp-test = icmp eq i64 %tag-only184, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338924.0 = select i1 %consp-test, {}* %.val, {}* %.val232
  %12 = icmp eq {}* %G338924.0, %.val232
  br i1 %12, label %tag4, label %tag14

tag3:                                             ; preds = %normal-dest159
  %13 = add i64 %11, 5
  %14 = inttoptr i64 %13 to {}**
  %15 = load {}*, {}** %14, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag12.backedge

tag12.backedge:                                   ; preds = %tag3, %normal-dest58
  %16 = phi {}* [ %.pre, %tag3 ], [ %50, %normal-dest58 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %15, %tag3 ], [ %"%DOLIST-VAR.2", %normal-dest58 ]
  %17 = icmp eq {}* %"%DOLIST-VAR.0.be", %16
  br i1 %17, label %tag13, label %tag1

tag4:                                             ; preds = %tag1
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest37 unwind label %cleanup-lpad.loopexit

tag5:                                             ; preds = %tag6
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest51 unwind label %cleanup-lpad.loopexit

tag6:                                             ; preds = %normal-dest159
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %23 = icmp eq {}* %"%DOLIST-VAR.0235", %22
  %.val233 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338870.0 = select i1 %23, {}* %.val233, {}* %22
  %24 = icmp eq {}* %G338870.0, %22
  br i1 %24, label %tag5, label %tag13

tag9:                                             ; preds = %normal-dest44, %tag14
  %BLOCKUNG.0 = phi {}* [ %32, %tag14 ], [ %BLOCKUNG.1, %normal-dest44 ]
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 73), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest69 unwind label %cleanup-lpad.loopexit

tag13:                                            ; preds = %tag12.backedge, %tag6, %normal-dest28
  %27 = phi {}* [ %37, %normal-dest28 ], [ %16, %tag12.backedge ], [ %22, %tag6 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %28 = insertvalue { {}*, i64 } undef, {}* %27, 0
  %29 = insertvalue { {}*, i64 } %28, i64 1, 1
  ret { {}*, i64 } %29

tag14:                                            ; preds = %tag1
  %30 = add i64 %11, -3
  %31 = inttoptr i64 %30 to {}**
  %32 = load {}*, {}** %31, align 8
  br label %tag9

cleanup-lpad.loopexit:                            ; preds = %tag4, %normal-dest37, %tag5, %normal-dest51, %tag9, %normal-dest69, %normal-dest71, %normal-dest78, %normal-dest90, %normal-dest96, %normal-dest98, %normal-dest100, %normal-dest107, %normal-dest114, %normal-dest121, %normal-dest128, %normal-dest135, %normal-dest147
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest25, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 34), align 16
  %ptrtoint = ptrtoint {}* %34 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %34, i64 1, {}* %35, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest28:                                    ; preds = %normal-dest25
  %.elt = extractvalue { {}*, i64 } %36, 0
  %.elt183 = extractvalue { {}*, i64 } %36, 1
  %cond = icmp eq i64 %.elt183, 0
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %37, {}* %.elt
  %38 = icmp eq {}* %"%DOLIST-VAR.1", %37
  br i1 %38, label %tag13, label %tag1.preheader

tag1.preheader:                                   ; preds = %normal-dest28
  br label %tag1

normal-dest37:                                    ; preds = %tag4
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint38 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint39 = add i64 %ptrtoint38, 7
  %entry-point-addr40 = inttoptr i64 %entry-point-addr-uint39 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point41 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr40, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point41({}* %19, i64 5, {}* %39, {}* %40, {}* %"%DOLIST-VAR.0235", {}* %41, {}* %42)
          to label %normal-dest44 unwind label %cleanup-lpad.loopexit

normal-dest44:                                    ; preds = %normal-dest37
  %.elt219 = extractvalue { {}*, i64 } %43, 0
  %.elt221 = extractvalue { {}*, i64 } %43, 1
  %cond181 = icmp eq i64 %.elt221, 0
  %44 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %BLOCKUNG.1 = select i1 %cond181, {}* %44, {}* %.elt219
  br label %tag9

normal-dest51:                                    ; preds = %tag5
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint52 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint53 = add i64 %ptrtoint52, 7
  %entry-point-addr54 = inttoptr i64 %entry-point-addr-uint53 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point55 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr54, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point55({}* %21, i64 5, {}* %45, {}* %46, {}* %"%DOLIST-VAR.0235", {}* %47, {}* %48)
          to label %normal-dest58 unwind label %cleanup-lpad.loopexit

normal-dest58:                                    ; preds = %normal-dest51
  %.elt215 = extractvalue { {}*, i64 } %49, 0
  %.elt217 = extractvalue { {}*, i64 } %49, 1
  %cond180 = icmp eq i64 %.elt217, 0
  %50 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond180, {}* %50, {}* %.elt215
  br label %tag12.backedge

normal-dest69:                                    ; preds = %tag9
  %51 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 36), align 16
  %52 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 135), align 8
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest71 unwind label %cleanup-lpad.loopexit

normal-dest71:                                    ; preds = %normal-dest69
  %ptrtoint72 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint73 = add i64 %ptrtoint72, 7
  %entry-point-addr74 = inttoptr i64 %entry-point-addr-uint73 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point75 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr74, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point75({}* %53, i64 1, {}* %BLOCKUNG.0, {}* null, {}* null, {}* null)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit

normal-dest78:                                    ; preds = %normal-dest71
  %.elt186 = extractvalue { {}*, i64 } %54, 0
  %.elt188 = extractvalue { {}*, i64 } %54, 1
  %cond175 = icmp eq i64 %.elt188, 0
  %55 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338901.0 = select i1 %cond175, {}* %55, {}* %.elt186
  %56 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %57 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 83), align 8
  %ptrtoint84 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %26, i64 5, {}* %BLOCKUNG.0, {}* %51, {}* %G338901.0, {}* %56, {}* %57)
          to label %normal-dest90 unwind label %cleanup-lpad.loopexit

normal-dest90:                                    ; preds = %normal-dest78
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 73), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest96 unwind label %cleanup-lpad.loopexit

normal-dest96:                                    ; preds = %normal-dest90
  %61 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 137), align 8
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 139), align 8
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit

normal-dest98:                                    ; preds = %normal-dest96
  %64 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 141), align 8
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest100 unwind label %cleanup-lpad.loopexit

normal-dest100:                                   ; preds = %normal-dest98
  %ptrtoint101 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint102 = add i64 %ptrtoint101, 7
  %entry-point-addr103 = inttoptr i64 %entry-point-addr-uint102 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point104 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr103, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point104({}* %65, i64 1, {}* %BLOCKUNG.0, {}* null, {}* null, {}* null)
          to label %normal-dest107 unwind label %cleanup-lpad.loopexit

normal-dest107:                                   ; preds = %normal-dest100
  %.elt194 = extractvalue { {}*, i64 } %66, 0
  %.elt196 = extractvalue { {}*, i64 } %66, 1
  %cond176 = icmp eq i64 %.elt196, 0
  %67 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338884.0 = select i1 %cond176, {}* %67, {}* %.elt194
  %68 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 143), align 8
  %69 = invoke {}* @cc_safe_fdefinition({}* %68)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit

normal-dest114:                                   ; preds = %normal-dest107
  %ptrtoint115 = ptrtoint {}* %69 to i64
  %entry-point-addr-uint116 = add i64 %ptrtoint115, 7
  %entry-point-addr117 = inttoptr i64 %entry-point-addr-uint116 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point118 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr117, align 8
  %70 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point118({}* %69, i64 1, {}* %BLOCKUNG.0, {}* null, {}* null, {}* null)
          to label %normal-dest121 unwind label %cleanup-lpad.loopexit

normal-dest121:                                   ; preds = %normal-dest114
  %.elt198 = extractvalue { {}*, i64 } %70, 0
  %.elt200 = extractvalue { {}*, i64 } %70, 1
  %cond177 = icmp eq i64 %.elt200, 0
  %71 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338885.0 = select i1 %cond177, {}* %71, {}* %.elt198
  %72 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 145), align 8
  %73 = invoke {}* @cc_safe_fdefinition({}* %72)
          to label %normal-dest128 unwind label %cleanup-lpad.loopexit

normal-dest128:                                   ; preds = %normal-dest121
  %ptrtoint129 = ptrtoint {}* %73 to i64
  %entry-point-addr-uint130 = add i64 %ptrtoint129, 7
  %entry-point-addr131 = inttoptr i64 %entry-point-addr-uint130 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point132 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr131, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point132({}* %73, i64 1, {}* %BLOCKUNG.0, {}* null, {}* null, {}* null)
          to label %normal-dest135 unwind label %cleanup-lpad.loopexit

normal-dest135:                                   ; preds = %normal-dest128
  %.elt202 = extractvalue { {}*, i64 } %74, 0
  %.elt204 = extractvalue { {}*, i64 } %74, 1
  %cond178 = icmp eq i64 %.elt204, 0
  %75 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338886.0 = select i1 %cond178, {}* %75, {}* %.elt202
  %ptrtoint141 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint142 = add i64 %ptrtoint141, 7
  %entry-point-addr143 = inttoptr i64 %entry-point-addr-uint142 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point144 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr143, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point144({}* %63, i64 3, {}* %G338884.0, {}* %G338885.0, {}* %G338886.0, {}* null)
          to label %normal-dest147 unwind label %cleanup-lpad.loopexit

normal-dest147:                                   ; preds = %normal-dest135
  %.elt206 = extractvalue { {}*, i64 } %76, 0
  %.elt208 = extractvalue { {}*, i64 } %76, 1
  %cond179 = icmp eq i64 %.elt208, 0
  %77 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338880.0 = select i1 %cond179, {}* %77, {}* %.elt206
  %78 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %79 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 83), align 8
  %ptrtoint153 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint154 = add i64 %ptrtoint153, 7
  %entry-point-addr155 = inttoptr i64 %entry-point-addr-uint154 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point156 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr155, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point156({}* %60, i64 5, {}* %BLOCKUNG.0, {}* %61, {}* %G338880.0, {}* %78, {}* %79)
          to label %normal-dest159 unwind label %cleanup-lpad.loopexit

normal-dest159:                                   ; preds = %normal-dest147
  br i1 %consp-test, label %tag3, label %tag6
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^60^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !35 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^60^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G338950.0 = phi {}* [ %18, %header-check-br ], [ %G338950.1, %normal-dest54 ], [ %G338950.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 154), align 16
  %ptrtoint13 = ptrtoint {}* %G338950.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G338950.0, i64 2, {}* %"closure->V31", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest47, %maybe-more-tests67, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 154), align 16
  %"closure->V31" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"V31^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"V31^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 2698, i64 60, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->V31", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 156), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->V31", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 240 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 154), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests67
  %ptrtoint48 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338950.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 153), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338950.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"V31^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !36 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"V31^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %tag10
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest32 unwind label %cleanup-lpad.loopexit

tag2:                                             ; preds = %tag11
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest46 unwind label %cleanup-lpad.loopexit

tag3:                                             ; preds = %tag10
  %15 = add i64 %21, -3
  %16 = inttoptr i64 %15 to {}**
  %17 = load {}*, {}** %16, align 8
  br label %tag12

tag9:                                             ; preds = %normal-dest110
  %18 = add i64 %21, 5
  %19 = inttoptr i64 %18 to {}**
  %20 = load {}*, {}** %19, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag7.backedge

tag10:                                            ; preds = %tag10.preheader, %tag7.backedge
  %.val156 = phi {}* [ %49, %tag7.backedge ], [ %35, %tag10.preheader ]
  %"%DOLIST-VAR.0159" = phi {}* [ %"%DOLIST-VAR.0.be", %tag7.backedge ], [ %"%DOLIST-VAR.1", %tag10.preheader ]
  %21 = ptrtoint {}* %"%DOLIST-VAR.0159" to i64
  %tag-only126 = and i64 %21, 7
  %consp-test = icmp eq i64 %tag-only126, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339018.0 = select i1 %consp-test, {}* %.val, {}* %.val156
  %22 = icmp eq {}* %G339018.0, %.val156
  br i1 %22, label %tag1, label %tag3

tag11:                                            ; preds = %normal-dest110
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %24 = icmp eq {}* %"%DOLIST-VAR.0159", %23
  %.val157 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G338981.0 = select i1 %24, {}* %.val157, {}* %23
  %25 = icmp eq {}* %G338981.0, %23
  br i1 %25, label %tag2, label %tag14

tag12:                                            ; preds = %normal-dest39, %tag3
  %BLOCKUNG.0 = phi {}* [ %17, %tag3 ], [ %BLOCKUNG.1, %normal-dest39 ]
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 73), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit

tag14:                                            ; preds = %tag11, %tag7.backedge, %normal-dest28
  %28 = phi {}* [ %35, %normal-dest28 ], [ %49, %tag7.backedge ], [ %23, %tag11 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %29 = insertvalue { {}*, i64 } undef, {}* %28, 0
  %30 = insertvalue { {}*, i64 } %29, i64 1, 1
  ret { {}*, i64 } %30

cleanup-lpad.loopexit:                            ; preds = %tag1, %normal-dest32, %tag2, %normal-dest46, %tag12, %normal-dest75, %normal-dest77, %normal-dest79, %normal-dest86, %normal-dest98
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest25, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest25 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest25:                                    ; preds = %normal-dest
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 34), align 16
  %ptrtoint = ptrtoint {}* %32 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %32, i64 1, {}* %33, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest28:                                    ; preds = %normal-dest25
  %.elt = extractvalue { {}*, i64 } %34, 0
  %.elt125 = extractvalue { {}*, i64 } %34, 1
  %cond = icmp eq i64 %.elt125, 0
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %35, {}* %.elt
  %36 = icmp eq {}* %"%DOLIST-VAR.1", %35
  br i1 %36, label %tag14, label %tag10.preheader

tag10.preheader:                                  ; preds = %normal-dest28
  br label %tag10

normal-dest32:                                    ; preds = %tag1
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint33 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %12, i64 5, {}* %37, {}* %38, {}* %"%DOLIST-VAR.0159", {}* %39, {}* %40)
          to label %normal-dest39 unwind label %cleanup-lpad.loopexit

normal-dest39:                                    ; preds = %normal-dest32
  %.elt145 = extractvalue { {}*, i64 } %41, 0
  %.elt147 = extractvalue { {}*, i64 } %41, 1
  %cond123 = icmp eq i64 %.elt147, 0
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %BLOCKUNG.1 = select i1 %cond123, {}* %42, {}* %.elt145
  br label %tag12

normal-dest46:                                    ; preds = %tag2
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %44 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %43, {}* %44, {}* %"%DOLIST-VAR.0159", {}* %45, {}* %46)
          to label %normal-dest54 unwind label %cleanup-lpad.loopexit

normal-dest54:                                    ; preds = %normal-dest46
  %.elt141 = extractvalue { {}*, i64 } %47, 0
  %.elt143 = extractvalue { {}*, i64 } %47, 1
  %cond122 = icmp eq i64 %.elt143, 0
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond122, {}* %48, {}* %.elt141
  br label %tag7.backedge

tag7.backedge:                                    ; preds = %normal-dest54, %tag9
  %49 = phi {}* [ %.pre, %tag9 ], [ %48, %normal-dest54 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %20, %tag9 ], [ %"%DOLIST-VAR.2", %normal-dest54 ]
  %50 = icmp eq {}* %"%DOLIST-VAR.0.be", %49
  br i1 %50, label %tag14, label %tag10

normal-dest75:                                    ; preds = %tag12
  %51 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 151), align 8
  %52 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 112), align 16
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest77 unwind label %cleanup-lpad.loopexit

normal-dest77:                                    ; preds = %normal-dest75
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest79 unwind label %cleanup-lpad.loopexit

normal-dest79:                                    ; preds = %normal-dest77
  %56 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 36), align 16
  %ptrtoint80 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint81 = add i64 %ptrtoint80, 7
  %entry-point-addr82 = inttoptr i64 %entry-point-addr-uint81 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point83 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr82, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point83({}* %55, i64 2, {}* %BLOCKUNG.0, {}* %56, {}* null, {}* null)
          to label %normal-dest86 unwind label %cleanup-lpad.loopexit

normal-dest86:                                    ; preds = %normal-dest79
  %.elt128 = extractvalue { {}*, i64 } %57, 0
  %.elt130 = extractvalue { {}*, i64 } %57, 1
  %cond120 = icmp eq i64 %.elt130, 0
  %58 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338995.0 = select i1 %cond120, {}* %58, {}* %.elt128
  %ptrtoint92 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %53, i64 1, {}* %G338995.0, {}* null, {}* null, {}* null)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit

normal-dest98:                                    ; preds = %normal-dest86
  %.elt132 = extractvalue { {}*, i64 } %59, 0
  %.elt134 = extractvalue { {}*, i64 } %59, 1
  %cond121 = icmp eq i64 %.elt134, 0
  %60 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G338991.0 = select i1 %cond121, {}* %60, {}* %.elt132
  %61 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 83), align 8
  %ptrtoint104 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint105 = add i64 %ptrtoint104, 7
  %entry-point-addr106 = inttoptr i64 %entry-point-addr-uint105 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point107 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr106, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point107({}* %27, i64 5, {}* %BLOCKUNG.0, {}* %51, {}* %G338991.0, {}* %61, {}* %62)
          to label %normal-dest110 unwind label %cleanup-lpad.loopexit

normal-dest110:                                   ; preds = %normal-dest98
  br i1 %consp-test, label %tag9, label %tag11
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^71^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !37 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^71^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest21 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G339044.0 = phi {}* [ %18, %header-check-br ], [ %G339044.1, %normal-dest17 ], [ %G339044.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 162), align 16
  %ptrtoint43 = ptrtoint {}* %G339044.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G339044.0, i64 2, {}* %"closure->KONSISTENZ_TEST_BLOCKUNG", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %tag2, %normal-dest13, %maybe-more-tests42, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 162), align 16
  %"closure->KONSISTENZ_TEST_BLOCKUNG" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KONSISTENZ_TEST_BLOCKUNG^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KONSISTENZ_TEST_BLOCKUNG^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 3097, i64 71, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %maybe-more-tests42
  %ptrtoint14 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339044.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

normal-dest21:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 161), align 8
  %ptrtoint22 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %12, i64 5, {}* %23, {}* %24, {}* %18, {}* %25, {}* %26)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt = extractvalue { {}*, i64 } %27, 0
  %.elt84 = extractvalue { {}*, i64 } %27, 1
  %cond = icmp eq i64 %.elt84, 0
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339044.2 = select i1 %cond, {}* %28, {}* %.elt
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag2

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->KONSISTENZ_TEST_BLOCKUNG", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 164), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->KONSISTENZ_TEST_BLOCKUNG", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 284 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 162), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KONSISTENZ_TEST_BLOCKUNG^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !38 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KONSISTENZ_TEST_BLOCKUNG^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %tag23
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest37 unwind label %cleanup-lpad.loopexit

tag6:                                             ; preds = %tag9
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest51 unwind label %cleanup-lpad.loopexit

tag7:                                             ; preds = %tag23
  %15 = add i64 %29, -3
  %16 = inttoptr i64 %15 to {}**
  %17 = load {}*, {}** %16, align 8
  br label %tag24

tag9:                                             ; preds = %tag14
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %19 = icmp eq {}* %"%DOLIST-VAR.0205", %18
  %.val203 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339075.0 = select i1 %19, {}* %.val203, {}* %18
  %20 = icmp eq {}* %G339075.0, %18
  br i1 %20, label %tag6, label %tag15

tag12:                                            ; preds = %normal-dest147
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 159), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest69 unwind label %cleanup-lpad.loopexit

tag13:                                            ; preds = %tag14
  %23 = add i64 %29, 5
  %24 = inttoptr i64 %23 to {}**
  %25 = load {}*, {}** %24, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag10.backedge

tag14:                                            ; preds = %normal-dest69, %normal-dest147
  br i1 %consp-test96, label %tag13, label %tag9

tag15:                                            ; preds = %tag9, %tag10.backedge, %normal-dest33
  %26 = phi {}* [ %37, %normal-dest33 ], [ %51, %tag10.backedge ], [ %18, %tag9 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %27 = insertvalue { {}*, i64 } undef, {}* %26, 0
  %28 = insertvalue { {}*, i64 } %27, i64 1, 1
  ret { {}*, i64 } %28

tag23:                                            ; preds = %tag23.preheader, %tag10.backedge
  %.val200 = phi {}* [ %51, %tag10.backedge ], [ %37, %tag23.preheader ]
  %"%DOLIST-VAR.0205" = phi {}* [ %"%DOLIST-VAR.0.be", %tag10.backedge ], [ %"%DOLIST-VAR.1", %tag23.preheader ]
  %29 = ptrtoint {}* %"%DOLIST-VAR.0205" to i64
  %tag-only95161 = and i64 %29, 7
  %consp-test96 = icmp eq i64 %tag-only95161, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339121.0 = select i1 %consp-test96, {}* %.val, {}* %.val200
  %30 = icmp eq {}* %G339121.0, %.val200
  br i1 %30, label %tag1, label %tag7

tag24:                                            ; preds = %normal-dest44, %tag7
  %B.0 = phi {}* [ %17, %tag7 ], [ %B.1, %normal-dest44 ]
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 157), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest98 unwind label %cleanup-lpad.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag1, %normal-dest37, %tag6, %normal-dest51, %tag12, %normal-dest69, %tag24, %normal-dest98, %normal-dest100, %normal-dest107, %normal-dest114, %normal-dest116, %normal-dest123, %normal-dest135
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest30, %10
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest30 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest30:                                    ; preds = %normal-dest
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 34), align 16
  %ptrtoint = ptrtoint {}* %34 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %34, i64 1, {}* %35, {}* null, {}* null, {}* null)
          to label %normal-dest33 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest33:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %36, 0
  %.elt160 = extractvalue { {}*, i64 } %36, 1
  %cond = icmp eq i64 %.elt160, 0
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond, {}* %37, {}* %.elt
  %38 = icmp eq {}* %"%DOLIST-VAR.1", %37
  br i1 %38, label %tag15, label %tag23.preheader

tag23.preheader:                                  ; preds = %normal-dest33
  br label %tag23

normal-dest37:                                    ; preds = %tag1
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint38 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint39 = add i64 %ptrtoint38, 7
  %entry-point-addr40 = inttoptr i64 %entry-point-addr-uint39 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point41 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr40, align 8
  %43 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point41({}* %12, i64 5, {}* %39, {}* %40, {}* %"%DOLIST-VAR.0205", {}* %41, {}* %42)
          to label %normal-dest44 unwind label %cleanup-lpad.loopexit

normal-dest44:                                    ; preds = %normal-dest37
  %.elt188 = extractvalue { {}*, i64 } %43, 0
  %.elt190 = extractvalue { {}*, i64 } %43, 1
  %cond158 = icmp eq i64 %.elt190, 0
  %44 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %B.1 = select i1 %cond158, {}* %44, {}* %.elt188
  br label %tag24

normal-dest51:                                    ; preds = %tag6
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint53 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint54 = add i64 %ptrtoint53, 7
  %entry-point-addr55 = inttoptr i64 %entry-point-addr-uint54 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point56 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr55, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point56({}* %14, i64 5, {}* %45, {}* %46, {}* %"%DOLIST-VAR.0205", {}* %47, {}* %48)
          to label %normal-dest59 unwind label %cleanup-lpad.loopexit

normal-dest59:                                    ; preds = %normal-dest51
  %.elt184 = extractvalue { {}*, i64 } %49, 0
  %.elt186 = extractvalue { {}*, i64 } %49, 1
  %cond157 = icmp eq i64 %.elt186, 0
  %50 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond157, {}* %50, {}* %.elt184
  br label %tag10.backedge

tag10.backedge:                                   ; preds = %normal-dest59, %tag13
  %51 = phi {}* [ %.pre, %tag13 ], [ %50, %normal-dest59 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %25, %tag13 ], [ %"%DOLIST-VAR.2", %normal-dest59 ]
  %52 = icmp eq {}* %"%DOLIST-VAR.0.be", %51
  br i1 %52, label %tag15, label %tag23

normal-dest69:                                    ; preds = %tag12
  %ptrtoint70 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %53 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %22, i64 1, {}* %B.0, {}* null, {}* null, {}* null)
          to label %tag14 unwind label %cleanup-lpad.loopexit

normal-dest98:                                    ; preds = %tag24
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest100 unwind label %cleanup-lpad.loopexit

normal-dest100:                                   ; preds = %normal-dest98
  %56 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 151), align 8
  %ptrtoint101 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint102 = add i64 %ptrtoint101, 7
  %entry-point-addr103 = inttoptr i64 %entry-point-addr-uint102 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point104 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr103, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point104({}* %55, i64 2, {}* %B.0, {}* %56, {}* null, {}* null)
          to label %normal-dest107 unwind label %cleanup-lpad.loopexit

normal-dest107:                                   ; preds = %normal-dest100
  %.elt163 = extractvalue { {}*, i64 } %57, 0
  %.elt165 = extractvalue { {}*, i64 } %57, 1
  %cond153 = icmp eq i64 %.elt165, 0
  %58 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339091.0 = select i1 %cond153, {}* %58, {}* %.elt163
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 112), align 16
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit

normal-dest114:                                   ; preds = %normal-dest107
  %61 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit

normal-dest116:                                   ; preds = %normal-dest114
  %63 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 36), align 16
  %ptrtoint117 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint118 = add i64 %ptrtoint117, 7
  %entry-point-addr119 = inttoptr i64 %entry-point-addr-uint118 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point120 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr119, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point120({}* %62, i64 2, {}* %B.0, {}* %63, {}* null, {}* null)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit

normal-dest123:                                   ; preds = %normal-dest116
  %.elt167 = extractvalue { {}*, i64 } %64, 0
  %.elt169 = extractvalue { {}*, i64 } %64, 1
  %cond154 = icmp eq i64 %.elt169, 0
  %65 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339094.0 = select i1 %cond154, {}* %65, {}* %.elt167
  %ptrtoint129 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint130 = add i64 %ptrtoint129, 7
  %entry-point-addr131 = inttoptr i64 %entry-point-addr-uint130 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point132 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr131, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point132({}* %60, i64 1, {}* %G339094.0, {}* null, {}* null, {}* null)
          to label %normal-dest135 unwind label %cleanup-lpad.loopexit

normal-dest135:                                   ; preds = %normal-dest123
  %.elt171 = extractvalue { {}*, i64 } %66, 0
  %.elt173 = extractvalue { {}*, i64 } %66, 1
  %cond155 = icmp eq i64 %.elt173, 0
  %67 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339092.0 = select i1 %cond155, {}* %67, {}* %.elt171
  %ptrtoint141 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint142 = add i64 %ptrtoint141, 7
  %entry-point-addr143 = inttoptr i64 %entry-point-addr-uint142 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point144 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr143, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point144({}* %32, i64 2, {}* %G339091.0, {}* %G339092.0, {}* null, {}* null)
          to label %normal-dest147 unwind label %cleanup-lpad.loopexit

normal-dest147:                                   ; preds = %normal-dest135
  %.elt175 = extractvalue { {}*, i64 } %68, 0
  %.elt177 = extractvalue { {}*, i64 } %68, 1
  %cond156 = icmp eq i64 %.elt177, 0
  %69 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond156, {}* %69, {}* %.elt175
  %70 = icmp eq {}* %object.0, %69
  %.val201 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339085.0 = select i1 %70, {}* %.val201, {}* %69
  %71 = icmp eq {}* %G339085.0, %69
  br i1 %71, label %tag14, label %tag12
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^78^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !39 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^78^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G339149.0 = phi {}* [ %18, %header-check-br ], [ %G339149.1, %normal-dest63 ], [ %G339149.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 167), align 8
  %ptrtoint22 = ptrtoint {}* %G339149.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G339149.0, i64 2, {}* %"closure->KONSISTENZ_TEST_OBJEKTE", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag3, %normal-dest56, %maybe-more-tests21, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 167), align 8
  %"closure->KONSISTENZ_TEST_OBJEKTE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KONSISTENZ_TEST_OBJEKTE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KONSISTENZ_TEST_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 3375, i64 78, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->KONSISTENZ_TEST_OBJEKTE", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 169), align 8
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->KONSISTENZ_TEST_OBJEKTE", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 312 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 167), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %maybe-more-tests21
  %ptrtoint57 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339149.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag1

normal-dest69:                                    ; preds = %tag3
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 166), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339149.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KONSISTENZ_TEST_OBJEKTE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !40 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KONSISTENZ_TEST_OBJEKTE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %tag27
  %11 = add i64 %31, -3
  %12 = inttoptr i64 %11 to {}**
  %13 = load {}*, {}** %12, align 8
  br label %tag35

tag7:                                             ; preds = %normal-dest147, %normal-dest209
  br i1 %consp-test114, label %tag39, label %tag30

tag5.backedge:                                    ; preds = %tag11, %normal-dest73
  %14 = phi {}* [ %.val297, %tag11 ], [ %67, %normal-dest73 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %18, %tag11 ], [ %"%DOLIST-VAR.1", %normal-dest73 ]
  %15 = icmp eq {}* %"%DOLIST-VAR.0.be", %14
  br i1 %15, label %tag22, label %tag27

tag11:                                            ; preds = %tag37
  %16 = add i64 %31, 5
  %17 = inttoptr i64 %16 to {}**
  %18 = load {}*, {}** %17, align 8
  br label %tag5.backedge

tag14:                                            ; preds = %tag31
  %19 = add i64 %38, -3
  %20 = inttoptr i64 %19 to {}**
  %21 = load {}*, {}** %20, align 8
  br label %tag41

tag19:                                            ; preds = %tag27
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest59 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag20:                                            ; preds = %tag45
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest66 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag43.backedge:                                   ; preds = %normal-dest96, %tag39
  %26 = phi {}* [ %.pre, %tag39 ], [ %73, %normal-dest96 ]
  %"%DOLIST-VAR55.0.be" = phi {}* [ %46, %tag39 ], [ %"%DOLIST-VAR55.1", %normal-dest96 ]
  %27 = icmp eq {}* %"%DOLIST-VAR55.0.be", %26
  br i1 %27, label %tag37, label %tag31

tag22:                                            ; preds = %tag45, %tag5.backedge, %normal-dest
  %28 = phi {}* [ %53, %normal-dest ], [ %.val297, %tag45 ], [ %14, %tag5.backedge ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %29 = insertvalue { {}*, i64 } undef, {}* %28, 0
  %30 = insertvalue { {}*, i64 } %29, i64 1, 1
  ret { {}*, i64 } %30

tag27:                                            ; preds = %tag27.preheader, %tag5.backedge
  %.val289 = phi {}* [ %14, %tag5.backedge ], [ %54, %tag27.preheader ]
  %"%DOLIST-VAR.0303" = phi {}* [ %"%DOLIST-VAR.0.be", %tag5.backedge ], [ %53, %tag27.preheader ]
  %31 = ptrtoint {}* %"%DOLIST-VAR.0303" to i64
  %tag-only86235 = and i64 %31, 7
  %consp-test87 = icmp eq i64 %tag-only86235, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339268.0 = select i1 %consp-test87, {}* %.val, {}* %.val289
  %32 = icmp eq {}* %G339268.0, %.val289
  br i1 %32, label %tag19, label %tag2

tag29:                                            ; preds = %tag30
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest89 unwind label %cleanup-lpad.loopexit

tag30:                                            ; preds = %tag7
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %36 = icmp eq {}* %"%DOLIST-VAR55.0302", %35
  %.val294 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339199.0 = select i1 %36, {}* %.val294, {}* %35
  %37 = icmp eq {}* %G339199.0, %35
  br i1 %37, label %tag29, label %tag37

tag31:                                            ; preds = %tag31.preheader, %tag43.backedge
  %.val291 = phi {}* [ %26, %tag43.backedge ], [ %81, %tag31.preheader ]
  %"%DOLIST-VAR55.0302" = phi {}* [ %"%DOLIST-VAR55.0.be", %tag43.backedge ], [ %"%DOLIST-VAR55.2", %tag31.preheader ]
  %38 = ptrtoint {}* %"%DOLIST-VAR55.0302" to i64
  %tag-only113238 = and i64 %38, 7
  %consp-test114 = icmp eq i64 %tag-only113238, 3
  %.val290 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339245.0 = select i1 %consp-test114, {}* %.val290, {}* %.val291
  %39 = icmp eq {}* %G339245.0, %.val291
  br i1 %39, label %tag32, label %tag14

tag32:                                            ; preds = %tag31
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest116 unwind label %cleanup-lpad.loopexit

tag35:                                            ; preds = %normal-dest62, %tag2
  %K.0 = phi {}* [ %13, %tag2 ], [ %K.1, %normal-dest62 ]
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest130 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag37:                                            ; preds = %tag43.backedge, %tag30, %normal-dest137
  %.val297 = phi {}* [ %81, %normal-dest137 ], [ %26, %tag43.backedge ], [ %35, %tag30 ]
  br i1 %consp-test87, label %tag11, label %tag45

tag39:                                            ; preds = %tag7
  %44 = add i64 %38, 5
  %45 = inttoptr i64 %44 to {}**
  %46 = load {}*, {}** %45, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag43.backedge

tag40:                                            ; preds = %normal-dest209
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 159), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest147 unwind label %cleanup-lpad.loopexit

tag41:                                            ; preds = %normal-dest123, %tag14
  %B.0 = phi {}* [ %21, %tag14 ], [ %B.1, %normal-dest123 ]
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 157), align 8
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest160 unwind label %cleanup-lpad.loopexit

tag45:                                            ; preds = %tag37
  %51 = icmp eq {}* %"%DOLIST-VAR.0303", %.val297
  %.val296 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339180.0 = select i1 %51, {}* %.val296, {}* %.val297
  %52 = icmp eq {}* %G339180.0, %.val297
  br i1 %52, label %tag20, label %tag22

cleanup-lpad.loopexit:                            ; preds = %tag29, %normal-dest89, %tag32, %normal-dest116, %tag40, %normal-dest147, %tag41, %normal-dest160, %normal-dest162, %normal-dest169, %normal-dest176, %normal-dest178, %normal-dest185, %normal-dest197
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest130, %tag35, %normal-dest66, %tag20, %normal-dest59, %tag19
  %lpad.loopexit298 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10
  %lpad.loopexit.split-lp299 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit298, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp299, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %53 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 165), align 8
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %55 = icmp eq {}* %53, %54
  br i1 %55, label %tag22, label %tag27.preheader

tag27.preheader:                                  ; preds = %normal-dest
  br label %tag27

normal-dest59:                                    ; preds = %tag19
  %56 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %57 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %58 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %60 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 5, {}* %56, {}* %57, {}* %"%DOLIST-VAR.0303", {}* %58, {}* %59)
          to label %normal-dest62 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest62:                                    ; preds = %normal-dest59
  %.elt274 = extractvalue { {}*, i64 } %60, 0
  %.elt276 = extractvalue { {}*, i64 } %60, 1
  %cond234 = icmp eq i64 %.elt276, 0
  %61 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %K.1 = select i1 %cond234, {}* %61, {}* %.elt274
  br label %tag35

normal-dest66:                                    ; preds = %tag20
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %63 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %64 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %65 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint67 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint68 = add i64 %ptrtoint67, 7
  %entry-point-addr69 = inttoptr i64 %entry-point-addr-uint68 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point70 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr69, align 8
  %66 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point70({}* %25, i64 5, {}* %62, {}* %63, {}* %"%DOLIST-VAR.0303", {}* %64, {}* %65)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest73:                                    ; preds = %normal-dest66
  %.elt270 = extractvalue { {}*, i64 } %66, 0
  %.elt272 = extractvalue { {}*, i64 } %66, 1
  %cond233 = icmp eq i64 %.elt272, 0
  %67 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond233, {}* %67, {}* %.elt270
  br label %tag5.backedge

normal-dest89:                                    ; preds = %tag29
  %68 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %69 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %70 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %71 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint90 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint91 = add i64 %ptrtoint90, 7
  %entry-point-addr92 = inttoptr i64 %entry-point-addr-uint91 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point93 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr92, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point93({}* %34, i64 5, {}* %68, {}* %69, {}* %"%DOLIST-VAR55.0302", {}* %70, {}* %71)
          to label %normal-dest96 unwind label %cleanup-lpad.loopexit

normal-dest96:                                    ; preds = %normal-dest89
  %.elt261 = extractvalue { {}*, i64 } %72, 0
  %.elt263 = extractvalue { {}*, i64 } %72, 1
  %cond231 = icmp eq i64 %.elt263, 0
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR55.1" = select i1 %cond231, {}* %73, {}* %.elt261
  br label %tag43.backedge

normal-dest116:                                   ; preds = %tag32
  %74 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %75 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %76 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %77 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint117 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint118 = add i64 %ptrtoint117, 7
  %entry-point-addr119 = inttoptr i64 %entry-point-addr-uint118 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point120 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr119, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point120({}* %41, i64 5, {}* %74, {}* %75, {}* %"%DOLIST-VAR55.0302", {}* %76, {}* %77)
          to label %normal-dest123 unwind label %cleanup-lpad.loopexit

normal-dest123:                                   ; preds = %normal-dest116
  %.elt265 = extractvalue { {}*, i64 } %78, 0
  %.elt267 = extractvalue { {}*, i64 } %78, 1
  %cond232 = icmp eq i64 %.elt267, 0
  %79 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %B.1 = select i1 %cond232, {}* %79, {}* %.elt265
  br label %tag41

normal-dest130:                                   ; preds = %tag35
  %ptrtoint131 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint132 = add i64 %ptrtoint131, 7
  %entry-point-addr133 = inttoptr i64 %entry-point-addr-uint132 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point134 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr133, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point134({}* %43, i64 1, {}* %K.0, {}* null, {}* null, {}* null)
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest137:                                   ; preds = %normal-dest130
  %.elt = extractvalue { {}*, i64 } %80, 0
  %.elt237 = extractvalue { {}*, i64 } %80, 1
  %cond = icmp eq i64 %.elt237, 0
  %81 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR55.2" = select i1 %cond, {}* %81, {}* %.elt
  %82 = icmp eq {}* %"%DOLIST-VAR55.2", %81
  br i1 %82, label %tag37, label %tag31.preheader

tag31.preheader:                                  ; preds = %normal-dest137
  br label %tag31

normal-dest147:                                   ; preds = %tag40
  %ptrtoint148 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint149 = add i64 %ptrtoint148, 7
  %entry-point-addr150 = inttoptr i64 %entry-point-addr-uint149 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point151 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr150, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point151({}* %48, i64 1, {}* %B.0, {}* null, {}* null, {}* null)
          to label %tag7 unwind label %cleanup-lpad.loopexit

normal-dest160:                                   ; preds = %tag41
  %84 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest162 unwind label %cleanup-lpad.loopexit

normal-dest162:                                   ; preds = %normal-dest160
  %86 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %ptrtoint163 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint164 = add i64 %ptrtoint163, 7
  %entry-point-addr165 = inttoptr i64 %entry-point-addr-uint164 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point166 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr165, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point166({}* %85, i64 2, {}* %B.0, {}* %86, {}* null, {}* null)
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit

normal-dest169:                                   ; preds = %normal-dest162
  %.elt240 = extractvalue { {}*, i64 } %87, 0
  %.elt242 = extractvalue { {}*, i64 } %87, 1
  %cond227 = icmp eq i64 %.elt242, 0
  %88 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339215.0 = select i1 %cond227, {}* %88, {}* %.elt240
  %89 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 112), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest176 unwind label %cleanup-lpad.loopexit

normal-dest176:                                   ; preds = %normal-dest169
  %91 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %92 = invoke {}* @cc_safe_fdefinition({}* %91)
          to label %normal-dest178 unwind label %cleanup-lpad.loopexit

normal-dest178:                                   ; preds = %normal-dest176
  %93 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint179 = ptrtoint {}* %92 to i64
  %entry-point-addr-uint180 = add i64 %ptrtoint179, 7
  %entry-point-addr181 = inttoptr i64 %entry-point-addr-uint180 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point182 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr181, align 8
  %94 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point182({}* %92, i64 2, {}* %B.0, {}* %93, {}* null, {}* null)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit

normal-dest185:                                   ; preds = %normal-dest178
  %.elt244 = extractvalue { {}*, i64 } %94, 0
  %.elt246 = extractvalue { {}*, i64 } %94, 1
  %cond228 = icmp eq i64 %.elt246, 0
  %95 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339218.0 = select i1 %cond228, {}* %95, {}* %.elt244
  %ptrtoint191 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint192 = add i64 %ptrtoint191, 7
  %entry-point-addr193 = inttoptr i64 %entry-point-addr-uint192 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point194 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr193, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point194({}* %90, i64 1, {}* %G339218.0, {}* null, {}* null, {}* null)
          to label %normal-dest197 unwind label %cleanup-lpad.loopexit

normal-dest197:                                   ; preds = %normal-dest185
  %.elt248 = extractvalue { {}*, i64 } %96, 0
  %.elt250 = extractvalue { {}*, i64 } %96, 1
  %cond229 = icmp eq i64 %.elt250, 0
  %97 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339216.0 = select i1 %cond229, {}* %97, {}* %.elt248
  %ptrtoint203 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint204 = add i64 %ptrtoint203, 7
  %entry-point-addr205 = inttoptr i64 %entry-point-addr-uint204 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point206 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr205, align 8
  %98 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point206({}* %50, i64 2, {}* %G339215.0, {}* %G339216.0, {}* null, {}* null)
          to label %normal-dest209 unwind label %cleanup-lpad.loopexit

normal-dest209:                                   ; preds = %normal-dest197
  %.elt252 = extractvalue { {}*, i64 } %98, 0
  %.elt254 = extractvalue { {}*, i64 } %98, 1
  %cond230 = icmp eq i64 %.elt254, 0
  %99 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond230, {}* %99, {}* %.elt252
  %100 = icmp eq {}* %object.0, %99
  %.val292 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339209.0 = select i1 %100, {}* %.val292, {}* %99
  %101 = icmp eq {}* %G339209.0, %99
  br i1 %101, label %tag7, label %tag40
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^89^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !41 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^89^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest23
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 170), align 16
  call void @cc_setSymbolValue({}* %11, {}* %24)
  br label %tag4

tag4:                                             ; preds = %tag3, %normal-dest23
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 170), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14

cleanup-lpad:                                     ; preds = %10, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 0), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 170), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 8), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 170), align 16
  %ptrtoint17 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %21, i64 1, {}* %22, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt33 = extractvalue { {}*, i64 } %23, 0
  %.elt35 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt35, 0
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %24, {}* %.elt33
  %25 = icmp eq {}* %object.0, %24
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339277.0 = select i1 %25, {}* %.val, {}* %24
  %26 = icmp eq {}* %G339277.0, %24
  br i1 %26, label %tag4, label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^91^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !42 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^91^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %tag3, %normal-dest23
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 172), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %11, 0
  %13 = insertvalue { {}*, i64 } %12, i64 1, 1
  ret { {}*, i64 } %13

tag3:                                             ; preds = %normal-dest23
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 172), align 16
  call void @cc_setSymbolValue({}* %14, {}* %24)
  br label %tag1

cleanup-lpad:                                     ; preds = %10, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 0), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 172), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 8), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 172), align 16
  %ptrtoint17 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %21, i64 1, {}* %22, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt33 = extractvalue { {}*, i64 } %23, 0
  %.elt35 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt35, 0
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %24, {}* %.elt33
  %25 = icmp eq {}* %object.0, %24
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339293.0 = select i1 %25, {}* %.val, {}* %24
  %26 = icmp eq {}* %G339293.0, %24
  br i1 %26, label %tag1, label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^92^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !43 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^92^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest23
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  call void @cc_setSymbolValue({}* %11, {}* %.val)
  br label %tag4

tag4:                                             ; preds = %tag2, %normal-dest23
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14

cleanup-lpad:                                     ; preds = %10, %normal-dest16, %normal-dest12, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 0), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest9
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 8), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest12
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %ptrtoint17 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint18 = add i64 %ptrtoint17, 7
  %entry-point-addr19 = inttoptr i64 %entry-point-addr-uint18 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point20 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr19, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point20({}* %21, i64 1, {}* %22, {}* null, {}* null, {}* null)
          to label %normal-dest23 unwind label %cleanup-lpad

normal-dest23:                                    ; preds = %normal-dest16
  %.elt33 = extractvalue { {}*, i64 } %23, 0
  %.elt35 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt35, 0
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.0 = select i1 %cond, {}* %24, {}* %.elt33
  %25 = icmp eq {}* %object.0, %24
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339309.0 = select i1 %25, {}* %.val, {}* %24
  %26 = icmp eq {}* %G339309.0, %24
  br i1 %26, label %tag4, label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^94^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !44 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^94^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G339337.0 = phi {}* [ %18, %header-check-br ], [ %G339337.1, %normal-dest54 ], [ %G339337.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 181), align 8
  %ptrtoint13 = ptrtoint {}* %G339337.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G339337.0, i64 2, {}* %"closure->SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag2, %normal-dest47, %maybe-more-tests81, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 181), align 8
  %"closure->SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 3829, i64 94, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 183), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 186), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 392 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 181), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests81
  %ptrtoint48 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339337.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag

normal-dest60:                                    ; preds = %tag2
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 180), align 16
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339337.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest47 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !45 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc31 unwind label %cleanup-lpad

.noexc31:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest7
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 176), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest8 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest8, %normal-dest13
  %.sink30 = phi { {}*, i64 } [ %21, %normal-dest13 ], [ %20, %normal-dest8 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink30

tag2:                                             ; preds = %normal-dest7
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 178), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest13 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest13, %tag2, %normal-dest8, %tag, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %17 = invoke {}* @cc_safe_symbol_value({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %19 = icmp eq {}* %17, %18
  br i1 %19, label %tag, label %tag2

normal-dest8:                                     ; preds = %tag
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %tag2
  %ptrtoint14 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %14, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad
}

declare {}* @cc_safe_symbol_value({}*) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^104^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !46 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^104^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G339381.0 = phi {}* [ %18, %header-check-br ], [ %G339381.1, %normal-dest26 ], [ %G339381.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 193), align 8
  %ptrtoint29 = ptrtoint {}* %G339381.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G339381.0, i64 2, {}* %"closure->SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag3, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 193), align 8
  %"closure->SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4232, i64 104, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339381.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 195), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 198), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 416 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 193), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag3
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 192), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339381.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !47 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc31 unwind label %cleanup-lpad

.noexc31:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest7
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 188), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest8 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest7
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 190), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest8, %normal-dest13
  %.sink30 = phi { {}*, i64 } [ %24, %normal-dest13 ], [ %23, %normal-dest8 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink30

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest13, %tag1, %normal-dest8, %tag, %normal-dest
  %18 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %18

normal-dest:                                      ; preds = %11
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %20 = invoke {}* @cc_safe_symbol_value({}* %19)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %22 = icmp eq {}* %20, %21
  br i1 %22, label %tag, label %tag1

normal-dest8:                                     ; preds = %tag
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %tag1
  %ptrtoint14 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %17, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^109^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !48 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^109^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G339427.0 = phi {}* [ %18, %header-check-br ], [ %G339427.1, %normal-dest54 ], [ %G339427.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 205), align 8
  %ptrtoint13 = ptrtoint {}* %G339427.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G339427.0, i64 2, {}* %"closure->SCH=BERECHNE_BELEGTE_TAGE", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest47, %maybe-more-tests67, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 205), align 8
  %"closure->SCH=BERECHNE_BELEGTE_TAGE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4555, i64 109, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 207), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->SCH=BERECHNE_BELEGTE_TAGE", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 208), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->SCH=BERECHNE_BELEGTE_TAGE", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 436 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 205), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests67
  %ptrtoint48 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339427.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 204), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339427.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !49 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc65 unwind label %cleanup-lpad

.noexc65:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest7
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 202), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest8 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest13, %normal-dest33
  %.sink64 = phi { {}*, i64 } [ %31, %normal-dest33 ], [ %25, %normal-dest13 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink64

tag2:                                             ; preds = %normal-dest7
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 200), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest24 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest33, %normal-dest26, %normal-dest24, %tag2, %normal-dest13, %normal-dest10, %normal-dest8, %tag, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %17 = invoke {}* @cc_safe_symbol_value({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %19 = icmp eq {}* %17, %18
  br i1 %19, label %tag2, label %tag

normal-dest8:                                     ; preds = %tag
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest8
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint = ptrtoint {}* %21 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %21, i64 2, {}* %farg0, {}* %22, {}* null, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt = extractvalue { {}*, i64 } %23, 0
  %.elt48 = extractvalue { {}*, i64 } %23, 1
  %cond = icmp eq i64 %.elt48, 0
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339453.0 = select i1 %cond, {}* %24, {}* %.elt
  %ptrtoint16 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint17 = add i64 %ptrtoint16, 7
  %entry-point-addr18 = inttoptr i64 %entry-point-addr-uint17 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point19 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr18, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point19({}* %12, i64 1, {}* %G339453.0, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest24
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %ptrtoint27 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint28 = add i64 %ptrtoint27, 7
  %entry-point-addr29 = inttoptr i64 %entry-point-addr-uint28 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point30 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr29, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point30({}* %27, i64 2, {}* %farg0, {}* %28, {}* null, {}* null)
          to label %normal-dest33 unwind label %cleanup-lpad

normal-dest33:                                    ; preds = %normal-dest26
  %.elt57 = extractvalue { {}*, i64 } %29, 0
  %.elt59 = extractvalue { {}*, i64 } %29, 1
  %cond46 = icmp eq i64 %.elt59, 0
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339446.0 = select i1 %cond46, {}* %30, {}* %.elt57
  %ptrtoint39 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint40 = add i64 %ptrtoint39, 7
  %entry-point-addr41 = inttoptr i64 %entry-point-addr-uint40 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point42 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr41, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point42({}* %14, i64 1, {}* %G339446.0, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^115^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !50 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^115^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G339479.0 = phi {}* [ %18, %header-check-br ], [ %G339479.1, %normal-dest17 ], [ %G339479.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 215), align 8
  %ptrtoint43 = ptrtoint {}* %G339479.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G339479.0, i64 2, {}* %"closure->SCH=BE_STATISCHER_SCHLUESSEL", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 215), align 8
  %"closure->SCH=BE_STATISCHER_SCHLUESSEL" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4748, i64 115, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 214), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339479.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339479.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 217), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=BE_STATISCHER_SCHLUESSEL", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 220), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=BE_STATISCHER_SCHLUESSEL", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 460 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 215), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !51 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc31 unwind label %cleanup-lpad

.noexc31:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest7
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 210), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest8 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest7
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 212), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest8, %normal-dest13
  %.sink30 = phi { {}*, i64 } [ %21, %normal-dest13 ], [ %20, %normal-dest8 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink30

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest13, %tag1, %normal-dest8, %tag, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %17 = invoke {}* @cc_safe_symbol_value({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %19 = icmp eq {}* %17, %18
  br i1 %19, label %tag, label %tag1

normal-dest8:                                     ; preds = %tag
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %tag1
  %ptrtoint14 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %14, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^120^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !52 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^120^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G339523.0 = phi {}* [ %18, %header-check-br ], [ %G339523.1, %normal-dest17 ], [ %G339523.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 227), align 8
  %ptrtoint43 = ptrtoint {}* %G339523.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G339523.0, i64 2, {}* %"closure->SCH=BE_PRIOS", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag2, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 227), align 8
  %"closure->SCH=BE_PRIOS" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=BE_PRIOS^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BE_PRIOS^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 4909, i64 120, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339523.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag2

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 226), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339523.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 229), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=BE_PRIOS", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 232), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=BE_PRIOS", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 480 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 227), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=BE_PRIOS^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !53 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BE_PRIOS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BE_PRIOS^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc31 unwind label %cleanup-lpad

.noexc31:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest7
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 222), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest8 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest8, %normal-dest13
  %.sink30 = phi { {}*, i64 } [ %21, %normal-dest13 ], [ %20, %normal-dest8 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink30

tag2:                                             ; preds = %normal-dest7
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 224), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest13 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest13, %tag2, %normal-dest8, %tag, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %17 = invoke {}* @cc_safe_symbol_value({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %19 = icmp eq {}* %17, %18
  br i1 %19, label %tag, label %tag2

normal-dest8:                                     ; preds = %tag
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %tag2
  %ptrtoint14 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %14, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag1 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^125^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !54 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^125^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G339567.0 = phi {}* [ %18, %header-check-br ], [ %G339567.1, %normal-dest63 ], [ %G339567.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 239), align 8
  %ptrtoint22 = ptrtoint {}* %G339567.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G339567.0, i64 2, {}* %"closure->SCH=DRINGLICHKEIT_PRIORITAETEN", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest56, %maybe-more-tests21, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 239), align 8
  %"closure->SCH=DRINGLICHKEIT_PRIORITAETEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5028, i64 125, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest56 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 241), align 8
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->SCH=DRINGLICHKEIT_PRIORITAETEN", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 242), align 16
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->SCH=DRINGLICHKEIT_PRIORITAETEN", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 500 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 239), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %maybe-more-tests21
  %ptrtoint57 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt101 = extractvalue { {}*, i64 } %36, 0
  %.elt103 = extractvalue { {}*, i64 } %36, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339567.1 = select i1 %cond82, {}* %37, {}* %.elt101
  br label %tag2

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 238), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339567.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !55 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc111 unwind label %cleanup-lpad

.noexc111:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag19, %normal-dest84, %tag7
  %G339586.0 = phi {}* [ %16, %tag7 ], [ %G339586.1, %normal-dest84 ], [ %.val117, %tag19 ]
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %11 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 1, {}* %G339586.0, {}* null, {}* null, {}* null)
          to label %tag13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest29
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 234), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest33 unwind label %cleanup-lpad

tag7:                                             ; preds = %normal-dest33
  %14 = add i64 %36, -3
  %15 = inttoptr i64 %14 to {}**
  %16 = load {}*, {}** %15, align 8
  br label %tag

tag11:                                            ; preds = %tag16
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %18 = invoke {}* @cc_safe_fdefinition({}* %17)
          to label %normal-dest39 unwind label %cleanup-lpad

tag13:                                            ; preds = %tag, %tag18
  %.sink110 = phi { {}*, i64 } [ %23, %tag18 ], [ %11, %tag ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink110

tag14:                                            ; preds = %normal-dest29
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 236), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest51 unwind label %cleanup-lpad

tag16:                                            ; preds = %normal-dest51
  %21 = icmp eq {}* %.val113, %farg0
  %G339619.0 = select i1 %21, {}* %.val, {}* %.val113
  %22 = icmp eq {}* %G339619.0, %.val113
  br i1 %22, label %tag11, label %tag18

tag18:                                            ; preds = %tag16, %normal-dest47, %tag23
  %G339609.0 = phi {}* [ %30, %tag23 ], [ %G339609.1, %normal-dest47 ], [ %.val113, %tag16 ]
  %ptrtoint63 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint64 = add i64 %ptrtoint63, 7
  %entry-point-addr65 = inttoptr i64 %entry-point-addr-uint64 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point66 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr65, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point66({}* %20, i64 1, {}* %G339609.0, {}* null, {}* null, {}* null)
          to label %tag13 unwind label %cleanup-lpad

tag19:                                            ; preds = %normal-dest33
  %24 = icmp eq {}* %.val117, %farg0
  %G339596.0 = select i1 %24, {}* %.val116, {}* %.val117
  %25 = icmp eq {}* %G339596.0, %.val117
  br i1 %25, label %tag20, label %tag

tag20:                                            ; preds = %tag19
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest77 unwind label %cleanup-lpad

tag23:                                            ; preds = %normal-dest51
  %28 = add i64 %44, -3
  %29 = inttoptr i64 %28 to {}**
  %30 = load {}*, {}** %29, align 8
  br label %tag18

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest77, %tag20, %tag18, %tag14, %normal-dest39, %tag11, %tag1, %tag, %normal-dest
  %31 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %31

normal-dest:                                      ; preds = %entry
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %33 = invoke {}* @cc_safe_symbol_value({}* %32)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %35 = icmp eq {}* %33, %34
  br i1 %35, label %tag1, label %tag14

normal-dest33:                                    ; preds = %tag1
  %36 = ptrtoint {}* %farg0 to i64
  %tag-only101 = and i64 %36, 7
  %consp-test = icmp eq i64 %tag-only101, 3
  %.val116 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %.val117 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339603.0 = select i1 %consp-test, {}* %.val116, {}* %.val117
  %37 = icmp eq {}* %G339603.0, %.val117
  br i1 %37, label %tag19, label %tag7

normal-dest39:                                    ; preds = %tag11
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint41 = ptrtoint {}* %18 to i64
  %entry-point-addr-uint42 = add i64 %ptrtoint41, 7
  %entry-point-addr43 = inttoptr i64 %entry-point-addr-uint42 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point44 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr43, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point44({}* %18, i64 5, {}* %38, {}* %39, {}* %farg0, {}* %40, {}* %41)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest47:                                    ; preds = %normal-dest39
  %.elt98 = extractvalue { {}*, i64 } %42, 0
  %.elt100 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt100, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339609.1 = select i1 %cond, {}* %43, {}* %.elt98
  br label %tag18

normal-dest51:                                    ; preds = %tag14
  %44 = ptrtoint {}* %farg0 to i64
  %tag-only5791 = and i64 %44, 7
  %consp-test58 = icmp eq i64 %tag-only5791, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %.val113 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339626.0 = select i1 %consp-test58, {}* %.val, {}* %.val113
  %45 = icmp eq {}* %G339626.0, %.val113
  br i1 %45, label %tag16, label %tag23

normal-dest77:                                    ; preds = %tag20
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint78 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint79 = add i64 %ptrtoint78, 7
  %entry-point-addr80 = inttoptr i64 %entry-point-addr-uint79 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point81 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr80, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point81({}* %27, i64 5, {}* %46, {}* %47, {}* %farg0, {}* %48, {}* %49)
          to label %normal-dest84 unwind label %cleanup-lpad

normal-dest84:                                    ; preds = %normal-dest77
  %.elt107 = extractvalue { {}*, i64 } %50, 0
  %.elt109 = extractvalue { {}*, i64 } %50, 1
  %cond90 = icmp eq i64 %.elt109, 0
  %51 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339586.1 = select i1 %cond90, {}* %51, {}* %.elt107
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^131^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !56 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^131^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br34
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest17, %header-check-br
  %G339651.0 = phi {}* [ %18, %header-check-br ], [ %G339651.1, %normal-dest17 ], [ %G339651.2, %normal-dest28 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 249), align 8
  %ptrtoint43 = ptrtoint {}* %G339651.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G339651.0, i64 2, {}* %"closure->SCH=BEREITE_ALLES_VOR_2", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest21, %maybe-more-tests42, %normal-dest13, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 249), align 8
  %"closure->SCH=BEREITE_ALLES_VOR_2" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=BEREITE_ALLES_VOR_2^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BEREITE_ALLES_VOR_2^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5187, i64 131, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br34

normal-dest13:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 248), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339651.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

normal-dest21:                                    ; preds = %maybe-more-tests42
  %ptrtoint22 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %31, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt101 = extractvalue { {}*, i64 } %27, 0
  %.elt103 = extractvalue { {}*, i64 } %27, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339651.2 = select i1 %cond82, {}* %28, {}* %.elt101
  br label %tag4

header-check-br34:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %29 = icmp ult i64 %.off106, 5
  br i1 %29, label %maybe-more-tests42, label %tag1

maybe-more-tests42:                               ; preds = %header-check-br34
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=BEREITE_ALLES_VOR_2", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 251), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=BEREITE_ALLES_VOR_2", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 524 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 249), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=BEREITE_ALLES_VOR_2^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !57 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BEREITE_ALLES_VOR_2^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest7
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 246), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest8 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest7
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 244), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest8, %normal-dest13
  %.sink30 = phi { {}*, i64 } [ %21, %normal-dest13 ], [ %20, %normal-dest8 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink30

cleanup-lpad:                                     ; preds = %10, %normal-dest13, %tag1, %normal-dest8, %tag, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %17 = invoke {}* @cc_safe_symbol_value({}* %16)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %19 = icmp eq {}* %17, %18
  br i1 %19, label %tag1, label %tag

normal-dest8:                                     ; preds = %tag
  %ptrtoint = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %tag1
  %ptrtoint14 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %14, i64 0, {}* null, {}* null, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^136^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !58 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^136^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G339693.0 = phi {}* [ %18, %header-check-br ], [ %G339693.1, %normal-dest54 ], [ %G339693.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 257), align 8
  %ptrtoint13 = ptrtoint {}* %G339693.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G339693.0, i64 2, {}* %"closure->SCH=VOR_JEDEM_VORSCHLAG", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag2, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 257), align 8
  %"closure->SCH=VOR_JEDEM_VORSCHLAG" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5325, i64 136, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 259), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->SCH=VOR_JEDEM_VORSCHLAG", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 262), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->SCH=VOR_JEDEM_VORSCHLAG", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 544 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 257), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag2
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 256), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339693.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag1

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag2

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339693.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !59 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc31 unwind label %cleanup-lpad

.noexc31:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest7
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 254), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest8 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest7
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 252), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest13 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest8, %normal-dest13
  %.sink30 = phi { {}*, i64 } [ %24, %normal-dest13 ], [ %23, %normal-dest8 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink30

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest13, %tag1, %normal-dest8, %tag, %normal-dest
  %18 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %18

normal-dest:                                      ; preds = %11
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %20 = invoke {}* @cc_safe_symbol_value({}* %19)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %22 = icmp eq {}* %20, %21
  br i1 %22, label %tag1, label %tag

normal-dest8:                                     ; preds = %tag
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %tag1
  %ptrtoint14 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %17, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %tag2 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^141^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !60 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^141^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest89, %normal-dest17, %header-check-br
  %G339744.0 = phi {}* [ %18, %header-check-br ], [ %G339744.1, %normal-dest17 ], [ %G339744.2, %normal-dest89 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 267), align 8
  %ptrtoint29 = ptrtoint {}* %G339744.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G339744.0, i64 2, {}* %"closure->SCH=NAECHSTE_ZEIT", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br20
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest82 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest82, %tag4, %normal-dest67, %normal-dest61, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 267), align 8
  %"closure->SCH=NAECHSTE_ZEIT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5499, i64 141, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt118 = extractvalue { {}*, i64 } %21, 0
  %.elt120 = extractvalue { {}*, i64 } %21, 1
  %cond95 = icmp eq i64 %.elt120, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339744.1 = select i1 %cond95, {}* %22, {}* %.elt118
  br label %tag3

header-check-br20:                                ; preds = %header-check-br
  %.off123 = add i64 %19, -1001
  %23 = icmp ult i64 %.off123, 5
  br i1 %23, label %maybe-more-tests28, label %tag4

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 269), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->SCH=NAECHSTE_ZEIT", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 270), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->SCH=NAECHSTE_ZEIT", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 271), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest61
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 267), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 273), align 8
  %ptrtoint68 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint69 = add i64 %ptrtoint68, 7
  %entry-point-addr70 = inttoptr i64 %entry-point-addr-uint69 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point71 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr70, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point71({}* %35, i64 3, {}* %36, {}* %37, {}* %38, {}* null)
          to label %normal-dest74 unwind label %cleanup-lpad

normal-dest74:                                    ; preds = %normal-dest67
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 568 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 267), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43

normal-dest82:                                    ; preds = %tag4
  %44 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 266), align 16
  %ptrtoint83 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %48 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %14, i64 5, {}* %44, {}* %45, {}* %18, {}* %46, {}* %47)
          to label %normal-dest89 unwind label %cleanup-lpad

normal-dest89:                                    ; preds = %normal-dest82
  %.elt = extractvalue { {}*, i64 } %48, 0
  %.elt97 = extractvalue { {}*, i64 } %48, 1
  %cond = icmp eq i64 %.elt97, 0
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339744.2 = select i1 %cond, {}* %49, {}* %.elt
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !61 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 264), align 16
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %14, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^146^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !62 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^146^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest80, %normal-dest17, %header-check-br
  %G339788.0 = phi {}* [ %18, %header-check-br ], [ %G339788.1, %normal-dest17 ], [ %G339788.2, %normal-dest80 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 278), align 16
  %ptrtoint20 = ptrtoint {}* %G339788.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G339788.0, i64 2, {}* %"closure->SCH=VORHERIGE_ZEIT", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br86
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest73 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest73, %tag2, %normal-dest58, %normal-dest52, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %maybe-more-tests94, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 278), align 16
  %"closure->SCH=VORHERIGE_ZEIT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5668, i64 146, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br86

normal-dest13:                                    ; preds = %maybe-more-tests94
  %ptrtoint14 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %49, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt118 = extractvalue { {}*, i64 } %21, 0
  %.elt120 = extractvalue { {}*, i64 } %21, 1
  %cond95 = icmp eq i64 %.elt120, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339788.1 = select i1 %cond95, {}* %22, {}* %.elt118
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 280), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->SCH=VORHERIGE_ZEIT", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 281), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->SCH=VORHERIGE_ZEIT", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 271), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest58 unwind label %cleanup-lpad

normal-dest58:                                    ; preds = %normal-dest52
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 278), align 16
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 282), align 16
  %ptrtoint59 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %32, i64 3, {}* %33, {}* %34, {}* %35, {}* null)
          to label %normal-dest65 unwind label %cleanup-lpad

normal-dest65:                                    ; preds = %normal-dest58
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %37, {}* inttoptr (i64 584 to {}*))
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 278), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %38, 0
  %40 = insertvalue { {}*, i64 } %39, i64 1, 1
  ret { {}*, i64 } %40

normal-dest73:                                    ; preds = %tag2
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %44 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 277), align 8
  %ptrtoint74 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %14, i64 5, {}* %41, {}* %42, {}* %18, {}* %43, {}* %44)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest73
  %.elt = extractvalue { {}*, i64 } %45, 0
  %.elt97 = extractvalue { {}*, i64 } %45, 1
  %cond = icmp eq i64 %.elt97, 0
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339788.2 = select i1 %cond, {}* %46, {}* %.elt
  br label %tag1

header-check-br86:                                ; preds = %header-check-br
  %.off123 = add i64 %19, -1001
  %47 = icmp ult i64 %.off123, 5
  br i1 %47, label %maybe-more-tests94, label %tag2

maybe-more-tests94:                               ; preds = %header-check-br86
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !63 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 275), align 8
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %14, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^150^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !64 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^150^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G339928.0 = phi {}* [ %18, %header-check-br ], [ %G339928.1, %normal-dest26 ], [ %G339928.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 304), align 16
  %ptrtoint43 = ptrtoint {}* %G339928.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G339928.0, i64 2, {}* %"closure->SCH=KLASSEN_LUECKEN_TEST", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %maybe-more-tests21, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 304), align 16
  %"closure->SCH=KLASSEN_LUECKEN_TEST" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5787, i64 150, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 303), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339928.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag4

normal-dest30:                                    ; preds = %maybe-more-tests21
  %ptrtoint31 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt101 = extractvalue { {}*, i64 } %30, 0
  %.elt103 = extractvalue { {}*, i64 } %30, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339928.2 = select i1 %cond82, {}* %31, {}* %.elt101
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 306), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=KLASSEN_LUECKEN_TEST", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 309), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=KLASSEN_LUECKEN_TEST", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 608 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 304), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !65 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc443 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc443:                                        ; preds = %10
  unreachable

tag:                                              ; preds = %tag64, %normal-dest223, %tag17, %tag44
  %G339952.0 = phi {}* [ %37, %tag44 ], [ null, %tag17 ], [ %G339952.1, %normal-dest223 ], [ %LENGTH.0.ph, %tag64 ]
  %ptrtoint95 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint96 = add i64 %ptrtoint95, 7
  %entry-point-addr97 = inttoptr i64 %entry-point-addr-uint96 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point98 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr97, align 8
  %11 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point98({}* %49, i64 4, {}* %farg0, {}* %113, {}* %114, {}* %G339952.0)
          to label %normal-dest101 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag1:                                             ; preds = %normal-dest278, %normal-dest187, %tag18, %normal-dest101
  %return-value.sroa.32.0 = phi i64 [ %.elt409, %normal-dest101 ], [ 1, %tag18 ], [ 1, %normal-dest187 ], [ 1, %normal-dest278 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt407, %normal-dest101 ], [ %118, %tag18 ], [ %84, %normal-dest187 ], [ %104, %normal-dest278 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %12 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %13 = insertvalue { {}*, i64 } %12, i64 %return-value.sroa.32.0, 1
  ret { {}*, i64 } %13

tag7:                                             ; preds = %header-check-br128, %normal-dest143, %tag29
  %.val469 = phi {}* [ %.pre, %tag29 ], [ %72, %normal-dest143 ], [ %.val461, %header-check-br128 ]
  %G339962.0.in = phi {}** [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), %tag29 ], [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), %normal-dest143 ], [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), %header-check-br128 ]
  %G339962.0 = load {}*, {}** %G339962.0.in, align 8
  %14 = icmp eq {}* %G339962.0, %.val469
  br i1 %14, label %tag17, label %tag44

tag10:                                            ; preds = %tag28
  %15 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %16 = icmp eq {}* %SEQUENCE.0.ph, %15
  %.val462 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340011.0 = select i1 %16, {}* %.val462, {}* %15
  %17 = icmp eq {}* %G340011.0, %15
  br i1 %17, label %tag25, label %tag14

tag13:                                            ; preds = %normal-dest278
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 291), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest114 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag14:                                            ; preds = %tag10, %normal-dest173, %tag54
  %.val467 = phi {}* [ %.val465.pre, %tag54 ], [ %82, %normal-dest173 ], [ %15, %tag10 ]
  %G2095854.0 = phi {}* [ %44, %tag54 ], [ %G2095854.1, %normal-dest173 ], [ %15, %tag10 ]
  %20 = ptrtoint {}* %G2095854.0 to i64
  %tag-only127396 = and i64 %20, 7
  %consp-test = icmp eq i64 %tag-only127396, 3
  %.val464 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339999.0 = select i1 %consp-test, {}* %.val464, {}* %.val467
  %21 = icmp eq {}* %G339999.0, %.val467
  br i1 %21, label %tag64, label %tag42

tag15:                                            ; preds = %normal-dest322
  %test131 = icmp eq i64 %tag-only323394, 1
  br i1 %test131, label %header-check-br128, label %tag29

tag17:                                            ; preds = %tag7
  %22 = icmp eq {}* %.in, %.val469
  %.val468 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G339958.0 = select i1 %22, {}* %.val468, {}* %.val469
  %23 = icmp eq {}* %G339958.0, %.val469
  br i1 %23, label %tag35, label %tag

tag18:                                            ; preds = %normal-dest333
  %24 = icmp eq {}* %.val, %118
  br i1 %24, label %tag1, label %tag26

tag25:                                            ; preds = %tag10
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest166 unwind label %cleanup-lpad.loopexit.loopexit

tag26:                                            ; preds = %tag18
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 295), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest180 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag28:                                            ; preds = %normal-dest286, %tag28.outer
  br i1 %consp-test195, label %tag54, label %tag10

tag29:                                            ; preds = %tag15, %header-check-br149, %normal-dest143
  %.pre = phi {}* [ %.val461, %tag15 ], [ %.val461, %header-check-br149 ], [ %72, %normal-dest143 ]
  br label %tag7

tag35:                                            ; preds = %tag17
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest216 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag39:                                            ; preds = %tag56, %header-check-br249
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest232 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag42:                                            ; preds = %tag14
  %33 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only247397 = and i64 %33, 3
  %fixnump-test248 = icmp eq i64 %fixnum-tag-only247397, 0
  br i1 %fixnump-test248, label %tag68, label %tag53

tag44:                                            ; preds = %tag7
  %34 = add i64 %115, 7
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %"tag fixnum" = shl nuw i64 %36, 2
  %37 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag

tag49:                                            ; preds = %header-check-br312, %normal-dest239, %normal-dest204
  %G340050.0 = phi {}* [ %G340050.1, %normal-dest204 ], [ %G340050.2, %normal-dest239 ], [ %"closure->LAMBDA", %header-check-br312 ]
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 289), align 8
  %39 = invoke {}* @cc_safe_fdefinition({}* %38)
          to label %normal-dest259 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag52:                                            ; preds = %tag64
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest286 unwind label %cleanup-lpad.loopexit.loopexit

tag53:                                            ; preds = %tag42
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 70), align 16
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest299 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag54:                                            ; preds = %tag28
  %44 = load {}*, {}** %47, align 8
  %.val465.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag14

tag56:                                            ; preds = %normal-dest333
  br i1 %test315, label %header-check-br312, label %tag39

tag28.outer:                                      ; preds = %tag28.outer.backedge, %tag28.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag28.outer.preheader ], [ %LENGTH.0.ph.be, %tag28.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in, %tag28.outer.preheader ], [ %G2095854.0, %tag28.outer.backedge ]
  %45 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only194395 = and i64 %45, 7
  %consp-test195 = icmp eq i64 %tag-only194395, 3
  %46 = add i64 %45, 5
  %47 = inttoptr i64 %46 to {}**
  br label %tag28

tag62:                                            ; preds = %normal-dest187
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 297), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest322 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag64:                                            ; preds = %tag14
  %50 = icmp eq {}* %G2095854.0, %.val467
  %G339970.0 = select i1 %50, {}* %.val464, {}* %.val467
  %51 = icmp eq {}* %G339970.0, %.val467
  br i1 %51, label %tag52, label %tag

tag66:                                            ; preds = %normal-dest114, %normal-dest89
  %.sink456 = phi { {}*, i64 } [ %67, %normal-dest89 ], [ %68, %normal-dest114 ]
  %.elt430 = extractvalue { {}*, i64 } %.sink456, 0
  %.elt432 = extractvalue { {}*, i64 } %.sink456, 1
  %cond366 = icmp eq i64 %.elt432, 0
  %52 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339911.0 = select i1 %cond366, {}* %52, {}* %.elt430
  %53 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 293), align 8
  %54 = invoke {}* @cc_safe_fdefinition({}* %53)
          to label %normal-dest326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag67:                                            ; preds = %tag68
  %55 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest342 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag68:                                            ; preds = %tag42
  %57 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %33, i64 4)
  %result = extractvalue { i64, i1 } %57, 0
  %overflow = extractvalue { i64, i1 } %57, 1
  %58 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag67, label %tag28.outer.backedge

tag28.outer.backedge:                             ; preds = %tag68, %normal-dest349, %normal-dest306
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.1, %normal-dest306 ], [ %LENGTH.2, %normal-dest349 ], [ %58, %tag68 ]
  br label %tag28.outer

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest286, %tag52, %normal-dest166, %tag25
  %lpad.loopexit473 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest342, %tag67, %normal-dest299, %tag53
  %lpad.loopexit.split-lp474 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest326, %tag66, %normal-dest266, %normal-dest259, %tag49, %normal-dest232, %tag39, %normal-dest197, %maybe-more-tests257, %normal-dest114, %tag13
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %9, %tag62, %normal-dest216, %tag35, %normal-dest180, %tag26, %normal-dest136, %maybe-more-tests157, %tag, %normal-dest82, %normal-dest78, %normal-dest75, %normal-dest74, %normal-dest
  %lpad.loopexit.split-lp476 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit473, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp474, %cleanup-lpad.loopexit.loopexit.split-lp ], [ %lpad.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp476, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 311), align 8
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %59, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 5787, i64 150, i64 0, i64 0)
          to label %normal-dest74 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest74:                                    ; preds = %normal-dest
  %60 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest75 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest75:                                    ; preds = %normal-dest74
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 284), align 16
  %ptrtoint = ptrtoint {}* %61 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %61, i64 2, {}* %farg0, {}* %62, {}* null, {}* null)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest78:                                    ; preds = %normal-dest75
  %.elt = extractvalue { {}*, i64 } %63, 0
  %.elt369 = extractvalue { {}*, i64 } %63, 1
  %cond = icmp eq i64 %.elt369, 0
  %64 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339817.0 = select i1 %cond, {}* %64, {}* %.elt
  %65 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 286), align 16
  %66 = invoke {}* @cc_safe_fdefinition({}* %65)
          to label %normal-dest82 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest82:                                    ; preds = %normal-dest78
  %ptrtoint83 = ptrtoint {}* %66 to i64
  %entry-point-addr-uint84 = add i64 %ptrtoint83, 7
  %entry-point-addr85 = inttoptr i64 %entry-point-addr-uint84 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point86 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr85, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point86({}* %66, i64 1, {}* %G339817.0, {}* null, {}* null, {}* null)
          to label %normal-dest89 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest89:                                    ; preds = %normal-dest82
  %ptrtoint313 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only314 = and i64 %ptrtoint313, 7
  %test315 = icmp eq i64 %tag-only314, 1
  %irc-bit-cast316 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep317 = getelementptr inbounds i8, i8* %irc-bit-cast316, i64 -9
  %irc-bit-cast318 = bitcast i8* %gep317 to i64*
  br label %tag66

normal-dest101:                                   ; preds = %tag
  %.elt407 = extractvalue { {}*, i64 } %11, 0
  %.elt409 = extractvalue { {}*, i64 } %11, 1
  br label %tag1

normal-dest114:                                   ; preds = %tag13
  %ptrtoint115 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint116 = add i64 %ptrtoint115, 7
  %entry-point-addr117 = inttoptr i64 %entry-point-addr-uint116 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point118 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr117, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point118({}* %19, i64 2, {}* %G339817.0, {}* %G339911.0, {}* null, {}* null)
          to label %tag66 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

header-check-br128:                               ; preds = %tag15
  %gep133 = getelementptr inbounds i8, i8* %85, i64 -9
  %irc-bit-cast134 = bitcast i8* %gep133 to i64*
  %69 = load i64, i64* %irc-bit-cast134, align 8
  %.off = add i64 %69, -1081
  %70 = icmp ult i64 %.off, 69
  br i1 %70, label %tag7, label %header-check-br149

normal-dest136:                                   ; preds = %maybe-more-tests157
  %ptrtoint137 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint138 = add i64 %ptrtoint137, 7
  %entry-point-addr139 = inttoptr i64 %entry-point-addr-uint138 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point140 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr139, align 8
  %71 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point140({}* %76, i64 1, {}* nonnull %.in, {}* null, {}* null, {}* null)
          to label %normal-dest143 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest143:                                   ; preds = %normal-dest136
  %.elt426 = extractvalue { {}*, i64 } %71, 0
  %.elt428 = extractvalue { {}*, i64 } %71, 1
  %cond365 = icmp eq i64 %.elt428, 0
  %72 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340081.0 = select i1 %cond365, {}* %72, {}* %.elt426
  %73 = icmp eq {}* %G340081.0, inttoptr (i64 4 to {}*)
  br i1 %73, label %tag7, label %tag29

header-check-br149:                               ; preds = %header-check-br128
  %.off470 = add i64 %69, -1153
  %74 = icmp ult i64 %.off470, 149
  br i1 %74, label %maybe-more-tests157, label %tag29

maybe-more-tests157:                              ; preds = %header-check-br149
  %75 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 109), align 8
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest136 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest166:                                   ; preds = %tag25
  %77 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %78 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %79 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %80 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint167 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint168 = add i64 %ptrtoint167, 7
  %entry-point-addr169 = inttoptr i64 %entry-point-addr-uint168 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point170 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr169, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point170({}* %26, i64 5, {}* %77, {}* %78, {}* %SEQUENCE.0.ph, {}* %79, {}* %80)
          to label %normal-dest173 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest173:                                   ; preds = %normal-dest166
  %.elt418 = extractvalue { {}*, i64 } %81, 0
  %.elt420 = extractvalue { {}*, i64 } %81, 1
  %cond363 = icmp eq i64 %.elt420, 0
  %82 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G2095854.1 = select i1 %cond363, {}* %82, {}* %.elt418
  br label %tag14

normal-dest180:                                   ; preds = %tag26
  %ptrtoint181 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint182 = add i64 %ptrtoint181, 7
  %entry-point-addr183 = inttoptr i64 %entry-point-addr-uint182 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point184 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr183, align 8
  %83 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point184({}* %28, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest187 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest187:                                   ; preds = %normal-dest180
  %.elt391 = extractvalue { {}*, i64 } %83, 0
  %.elt393 = extractvalue { {}*, i64 } %83, 1
  %cond360 = icmp eq i64 %.elt393, 0
  %84 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in = select i1 %cond360, {}* %84, {}* %.elt391
  %85 = bitcast {}* %.in to i8*
  %86 = icmp eq {}* %.in, %84
  br i1 %86, label %tag1, label %tag62

normal-dest197:                                   ; preds = %maybe-more-tests257
  %ptrtoint198 = ptrtoint {}* %100 to i64
  %entry-point-addr-uint199 = add i64 %ptrtoint198, 7
  %entry-point-addr200 = inttoptr i64 %entry-point-addr-uint199 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point201 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr200, align 8
  %87 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point201({}* %100, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest204 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest204:                                   ; preds = %normal-dest197
  %.elt434 = extractvalue { {}*, i64 } %87, 0
  %.elt436 = extractvalue { {}*, i64 } %87, 1
  %cond367 = icmp eq i64 %.elt436, 0
  %88 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340050.1 = select i1 %cond367, {}* %88, {}* %.elt434
  br label %tag49

normal-dest216:                                   ; preds = %tag35
  %89 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 301), align 8
  %ptrtoint217 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint218 = add i64 %ptrtoint217, 7
  %entry-point-addr219 = inttoptr i64 %entry-point-addr-uint218 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point220 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr219, align 8
  %90 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point220({}* %30, i64 2, {}* %.in, {}* %89, {}* null, {}* null)
          to label %normal-dest223 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest223:                                   ; preds = %normal-dest216
  %.elt422 = extractvalue { {}*, i64 } %90, 0
  %.elt424 = extractvalue { {}*, i64 } %90, 1
  %cond364 = icmp eq i64 %.elt424, 0
  %91 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339952.1 = select i1 %cond364, {}* %91, {}* %.elt422
  br label %tag

normal-dest232:                                   ; preds = %tag39
  %92 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %93 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %94 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %95 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 288), align 16
  %ptrtoint233 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint234 = add i64 %ptrtoint233, 7
  %entry-point-addr235 = inttoptr i64 %entry-point-addr-uint234 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point236 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr235, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point236({}* %32, i64 5, {}* %92, {}* %93, {}* %"closure->LAMBDA", {}* %94, {}* %95)
          to label %normal-dest239 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest239:                                   ; preds = %normal-dest232
  %.elt379 = extractvalue { {}*, i64 } %96, 0
  %.elt381 = extractvalue { {}*, i64 } %96, 1
  %cond357 = icmp eq i64 %.elt381, 0
  %97 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340050.2 = select i1 %cond357, {}* %97, {}* %.elt379
  br label %tag49

header-check-br249:                               ; preds = %header-check-br312
  %.off472 = add i64 %111, -1001
  %98 = icmp ult i64 %.off472, 5
  br i1 %98, label %maybe-more-tests257, label %tag39

maybe-more-tests257:                              ; preds = %header-check-br249
  %99 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %100 = invoke {}* @cc_safe_fdefinition({}* %99)
          to label %normal-dest197 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest259:                                   ; preds = %tag49
  %ptrtoint260 = ptrtoint {}* %39 to i64
  %entry-point-addr-uint261 = add i64 %ptrtoint260, 7
  %entry-point-addr262 = inttoptr i64 %entry-point-addr-uint261 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point263 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr262, align 8
  %101 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point263({}* %39, i64 2, {}* %G339817.0, {}* %G339911.0, {}* null, {}* null)
          to label %normal-dest266 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest266:                                   ; preds = %normal-dest259
  %.elt383 = extractvalue { {}*, i64 } %101, 0
  %.elt385 = extractvalue { {}*, i64 } %101, 1
  %cond358 = icmp eq i64 %.elt385, 0
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340051.0 = select i1 %cond358, {}* %102, {}* %.elt383
  %ptrtoint272 = ptrtoint {}* %G340050.0 to i64
  %entry-point-addr-uint273 = add i64 %ptrtoint272, 7
  %entry-point-addr274 = inttoptr i64 %entry-point-addr-uint273 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point275 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr274, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point275({}* %G340050.0, i64 1, {}* %G340051.0, {}* null, {}* null, {}* null)
          to label %normal-dest278 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest278:                                   ; preds = %normal-dest266
  %.elt387 = extractvalue { {}*, i64 } %103, 0
  %.elt389 = extractvalue { {}*, i64 } %103, 1
  %cond359 = icmp eq i64 %.elt389, 0
  %104 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G339908.0 = select i1 %cond359, {}* %104, {}* %.elt387
  %105 = icmp eq {}* %G339908.0, %104
  %.val458 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340045.0 = select i1 %105, {}* %.val458, {}* %104
  %106 = icmp eq {}* %G340045.0, %104
  br i1 %106, label %tag13, label %tag1

normal-dest286:                                   ; preds = %tag52
  %107 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 302), align 16
  %ptrtoint287 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint288 = add i64 %ptrtoint287, 7
  %entry-point-addr289 = inttoptr i64 %entry-point-addr-uint288 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point290 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr289, align 8
  %108 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point290({}* %41, i64 2, {}* %G2095854.0, {}* %107, {}* null, {}* null)
          to label %tag28 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest299:                                   ; preds = %tag53
  %ptrtoint300 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint301 = add i64 %ptrtoint300, 7
  %entry-point-addr302 = inttoptr i64 %entry-point-addr-uint301 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point303 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr302, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point303({}* %43, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest306 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest306:                                   ; preds = %normal-dest299
  %.elt399 = extractvalue { {}*, i64 } %109, 0
  %.elt401 = extractvalue { {}*, i64 } %109, 1
  %cond361 = icmp eq i64 %.elt401, 0
  %110 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.1 = select i1 %cond361, {}* %110, {}* %.elt399
  br label %tag28.outer.backedge

header-check-br312:                               ; preds = %tag56
  %111 = load i64, i64* %irc-bit-cast318, align 8
  %.off471 = add i64 %111, -913
  %112 = icmp ult i64 %.off471, 85
  br i1 %112, label %tag49, label %header-check-br249

normal-dest322:                                   ; preds = %tag62
  %113 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %114 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 299), align 8
  %115 = ptrtoint {}* %.in to i64
  %tag-only323394 = and i64 %115, 7
  %consp-test324 = icmp eq i64 %tag-only323394, 3
  %.val460 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %.val461 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340018.0 = select i1 %consp-test324, {}* %.val460, {}* %.val461
  %116 = icmp eq {}* %G340018.0, %.val461
  br i1 %116, label %tag15, label %tag28.outer.preheader

tag28.outer.preheader:                            ; preds = %normal-dest322
  br label %tag28.outer

normal-dest326:                                   ; preds = %tag66
  %ptrtoint327 = ptrtoint {}* %54 to i64
  %entry-point-addr-uint328 = add i64 %ptrtoint327, 7
  %entry-point-addr329 = inttoptr i64 %entry-point-addr-uint328 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point330 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr329, align 8
  %117 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point330({}* %54, i64 2, {}* %G339817.0, {}* %G339911.0, {}* null, {}* null)
          to label %normal-dest333 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest333:                                   ; preds = %normal-dest326
  %.elt375 = extractvalue { {}*, i64 } %117, 0
  %.elt377 = extractvalue { {}*, i64 } %117, 1
  %cond356 = icmp eq i64 %.elt377, 0
  %118 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object334.0 = select i1 %cond356, {}* %118, {}* %.elt375
  %119 = icmp eq {}* %object334.0, %118
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340032.0 = select i1 %119, {}* %.val, {}* %118
  %120 = icmp eq {}* %G340032.0, %118
  br i1 %120, label %tag18, label %tag56

normal-dest342:                                   ; preds = %tag67
  %ptrtoint343 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint344 = add i64 %ptrtoint343, 7
  %entry-point-addr345 = inttoptr i64 %entry-point-addr-uint344 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point346 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr345, align 8
  %121 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point346({}* %56, i64 1, {}* %58, {}* null, {}* null, {}* null)
          to label %normal-dest349 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest349:                                   ; preds = %normal-dest342
  %.elt403 = extractvalue { {}*, i64 } %121, 0
  %.elt405 = extractvalue { {}*, i64 } %121, 1
  %cond362 = icmp eq i64 %.elt405, 0
  %122 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.2 = select i1 %cond362, {}* %122, {}* %.elt403
  br label %tag28.outer.backedge
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !66 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %14, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^161^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !67 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^161^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G340206.0 = phi {}* [ %18, %header-check-br ], [ %G340206.1, %normal-dest63 ], [ %G340206.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 330), align 16
  %ptrtoint13 = ptrtoint {}* %G340206.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G340206.0, i64 2, {}* %"closure->SCH=LEHRER_LUECKEN_TEST", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag3, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 330), align 16
  %"closure->SCH=LEHRER_LUECKEN_TEST" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6212, i64 161, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 332), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->SCH=LEHRER_LUECKEN_TEST", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 333), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->SCH=LEHRER_LUECKEN_TEST", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 644 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 330), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag3

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 329), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340206.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340206.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !68 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc952 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc952:                                        ; preds = %10
  unreachable

tag1:                                             ; preds = %switch.early.test, %tag5
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest170 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag5:                                             ; preds = %normal-dest761
  %13 = icmp eq i64 %tag-only769, 6
  %fixnum-tag-only219879 = and i64 %ptrtoint768, 3
  %fixnump-test220 = icmp eq i64 %fixnum-tag-only219879, 0
  %or.cond976 = or i1 %13, %fixnump-test220
  br i1 %or.cond976, label %tag115, label %tag1

tag6:                                             ; preds = %tag114
  %14 = invoke float @from_object_float({}* %x382.0)
          to label %normal-dest174 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag8:                                             ; preds = %normal-dest455
  br i1 %test179, label %header-check-br176, label %tag31

tag10:                                            ; preds = %tag140, %normal-dest243, %tag139, %tag127, %tag63, %tag48
  %G340330.0 = phi {}* [ %47, %tag48 ], [ %107, %tag139 ], [ %54, %tag63 ], [ %102, %tag127 ], [ %G340330.1, %normal-dest243 ], [ %.979, %tag140 ]
  %15 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %16 = icmp eq {}* %G340330.0, %15
  br i1 %16, label %tag148, label %tag111

tag12:                                            ; preds = %tag15
  %17 = invoke float @from_object_float({}* %x445.0)
          to label %normal-dest195 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag15:                                            ; preds = %tag122
  %18 = icmp eq i64 %tag-only769, 6
  br i1 %18, label %tag12, label %tag117

tag19:                                            ; preds = %tag158
  %19 = load {}*, {}** %73, align 8
  %.val993.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag20

tag20:                                            ; preds = %tag93, %normal-dest417, %tag19
  %.val995 = phi {}* [ %.val993.pre, %tag19 ], [ %181, %normal-dest417 ], [ %77, %tag93 ]
  %G2095854208.0 = phi {}* [ %19, %tag19 ], [ %G2095854208.1, %normal-dest417 ], [ %77, %tag93 ]
  %20 = ptrtoint {}* %G2095854208.0 to i64
  %tag-only209865 = and i64 %20, 7
  %consp-test = icmp eq i64 %tag-only209865, 3
  %.val992 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340307.0 = select i1 %consp-test, {}* %.val992, {}* %.val995
  %21 = icmp eq {}* %G340307.0, %.val995
  br i1 %21, label %tag109, label %tag88

tag24:                                            ; preds = %normal-dest455
  %22 = icmp eq {}* %.val, %188
  br i1 %22, label %tag148, label %tag100

tag26:                                            ; preds = %tag84, %header-check-br550, %normal-dest699, %tag65
  %.val9981037 = phi {}* [ %55, %tag65 ], [ %G340326.0, %tag84 ], [ %G340326.0, %header-check-br550 ], [ %238, %normal-dest699 ]
  %23 = icmp eq {}* %.in913, %.val9981037
  %.val997 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340266.0 = select i1 %23, {}* %.val997, {}* %.val9981037
  %24 = icmp eq {}* %G340266.0, %.val9981037
  br i1 %24, label %tag112, label %tag150

tag27:                                            ; preds = %tag98
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %26 = icmp eq {}* %SEQUENCE.0.ph, %25
  %.val984 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340415.0 = select i1 %26, {}* %.val984, {}* %25
  %27 = icmp eq {}* %G340415.0, %25
  br i1 %27, label %tag80, label %tag68

tag31:                                            ; preds = %tag8, %header-check-br644
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest222 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag33:                                            ; preds = %tag70, %header-check-br683, %tag138, %tag135, %tag114, %header-check-br
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 321), align 8
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest236 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag34:                                            ; preds = %tag157
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest250 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag36:                                            ; preds = %normal-dest567, %normal-dest229, %header-check-br176
  %G340451.0 = phi {}* [ %"closure->LAMBDA", %header-check-br176 ], [ %G340451.1, %normal-dest229 ], [ %G340451.2, %normal-dest567 ]
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 289), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag38:                                            ; preds = %tag88
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 70), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest293 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag40:                                            ; preds = %tag68
  %38 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only316845 = and i64 %38, 3
  %fixnump-test317 = icmp eq i64 %fixnum-tag-only316845, 0
  br i1 %fixnump-test317, label %tag92, label %tag42

tag41:                                            ; preds = %tag58, %normal-dest471, %header-check-br674, %tag55
  %.val10011036 = phi {}* [ %50, %tag55 ], [ %203, %tag58 ], [ %192, %normal-dest471 ], [ %203, %header-check-br674 ]
  %39 = icmp eq {}* %.in913, %.val10011036
  %.val1000 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340362.0 = select i1 %39, {}* %.val1000, {}* %.val10011036
  %40 = icmp eq {}* %G340362.0, %.val10011036
  br i1 %40, label %tag144, label %tag67

tag42:                                            ; preds = %tag40
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 70), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest320 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag44:                                            ; preds = %tag52
  %43 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %96, i64 %ptrtoint768)
  %result = extractvalue { i64, i1 } %43, 0
  %overflow = extractvalue { i64, i1 } %43, 1
  %44 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag130, label %tag54

tag45:                                            ; preds = %tag109
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest334 unwind label %cleanup-lpad.loopexit.loopexit

tag48:                                            ; preds = %normal-dest175
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag10

tag49:                                            ; preds = %normal-dest166
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 311), align 8
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %48, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.1", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.1^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6212, i64 161, i64 0, i64 0)
          to label %normal-dest353 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag52:                                            ; preds = %tag115
  %fixnum-tag-only383896 = and i64 %ptrtoint768, 3
  %fixnump-test384 = icmp eq i64 %fixnum-tag-only383896, 0
  br i1 %fixnump-test384, label %tag44, label %tag117

tag54:                                            ; preds = %normal-dest669, %normal-dest661, %normal-dest625, %normal-dest197, %tag44
  %G340230.0 = phi {}* [ %44, %tag44 ], [ %141, %normal-dest197 ], [ %G340230.1, %normal-dest625 ], [ %G340230.2, %normal-dest661 ], [ %231, %normal-dest669 ]
  %ptrtoint385 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint386 = add i64 %ptrtoint385, 7
  %entry-point-addr387 = inttoptr i64 %entry-point-addr-uint386 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point388 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr387, align 8
  %49 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point388({}* %91, i64 4, {}* %farg0, {}* %213, {}* %214, {}* %G340230.0)
          to label %normal-dest391 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag55:                                            ; preds = %normal-dest471, %header-check-br393
  %50 = phi {}* [ %203, %header-check-br393 ], [ %192, %normal-dest471 ]
  %G340366.0.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %51 = icmp eq {}* %G340366.0.pre, %50
  br i1 %51, label %tag41, label %tag95

tag58:                                            ; preds = %normal-dest541
  %test396 = icmp eq i64 %tag-only547842, 1
  br i1 %test396, label %header-check-br393, label %tag41

tag61:                                            ; preds = %tag93
  %52 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %53 = invoke {}* @cc_safe_fdefinition({}* %52)
          to label %normal-dest410 unwind label %cleanup-lpad.loopexit.loopexit

tag63:                                            ; preds = %normal-dest640
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag10

tag65:                                            ; preds = %normal-dest699, %header-check-br500
  %55 = phi {}* [ %G340326.0, %header-check-br500 ], [ %238, %normal-dest699 ]
  %G340270.0.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %56 = icmp eq {}* %G340270.0.pre, %55
  br i1 %56, label %tag26, label %tag69

tag67:                                            ; preds = %tag118, %normal-dest713, %tag41, %tag95
  %x382.0 = phi {}* [ %83, %tag95 ], [ null, %tag41 ], [ %x382.1, %normal-dest713 ], [ %LENGTH.0.ph, %tag118 ]
  %57 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest424 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag68:                                            ; preds = %tag27, %normal-dest487, %tag73
  %.val989 = phi {}* [ %.val987.pre, %tag73 ], [ %199, %normal-dest487 ], [ %25, %tag27 ]
  %G2095854.0 = phi {}* [ %65, %tag73 ], [ %G2095854.1, %normal-dest487 ], [ %25, %tag27 ]
  %59 = ptrtoint {}* %G2095854.0 to i64
  %tag-only442844 = and i64 %59, 7
  %consp-test443 = icmp eq i64 %tag-only442844, 3
  %.val986 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340403.0 = select i1 %consp-test443, {}* %.val986, {}* %.val989
  %60 = icmp eq {}* %G340403.0, %.val989
  br i1 %60, label %tag118, label %tag40

tag69:                                            ; preds = %tag65
  %61 = add i64 %205, 7
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 8
  %"tag fixnum" = shl nuw i64 %63, 2
  %64 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag150

tag70:                                            ; preds = %normal-dest431
  %trunc = trunc i64 %186 to i3
  switch i3 %trunc, label %tag33 [
    i3 -2, label %tag114
    i3 1, label %header-check-br
  ]

tag73:                                            ; preds = %tag98
  %65 = load {}*, {}** %247, align 8
  %.val987.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag68

tag75:                                            ; preds = %normal-dest581, %normal-dest376
  %.sink980 = phi { {}*, i64 } [ %173, %normal-dest376 ], [ %212, %normal-dest581 ]
  %.elt937 = extractvalue { {}*, i64 } %.sink980, 0
  %.elt939 = extractvalue { {}*, i64 } %.sink980, 1
  %cond810 = icmp eq i64 %.elt939, 0
  %66 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340189.0 = select i1 %cond810, {}* %66, {}* %.elt937
  %67 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 293), align 8
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest448 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag80:                                            ; preds = %tag27
  %69 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest480 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag84:                                            ; preds = %normal-dest595
  %test503 = icmp eq i64 %tag-only547842, 1
  br i1 %test503, label %header-check-br500, label %tag26

tag158.outer:                                     ; preds = %tag158.outer.backedge, %tag158.outer.preheader
  %LENGTH192.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag158.outer.preheader ], [ %LENGTH192.0.ph.be, %tag158.outer.backedge ]
  %SEQUENCE444.0.ph = phi {}* [ %.in913, %tag158.outer.preheader ], [ %G2095854208.0, %tag158.outer.backedge ]
  %71 = ptrtoint {}* %SEQUENCE444.0.ph to i64
  %tag-only786864 = and i64 %71, 7
  %consp-test787 = icmp eq i64 %tag-only786864, 3
  %72 = add i64 %71, 5
  %73 = inttoptr i64 %72 to {}**
  br label %tag158

tag88:                                            ; preds = %tag20
  %74 = ptrtoint {}* %LENGTH192.0.ph to i64
  %fixnum-tag-only511866 = and i64 %74, 3
  %fixnump-test512 = icmp eq i64 %fixnum-tag-only511866, 0
  br i1 %fixnump-test512, label %tag157, label %tag38

tag92:                                            ; preds = %tag40
  %75 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %38, i64 4)
  %result513 = extractvalue { i64, i1 } %75, 0
  %overflow514 = extractvalue { i64, i1 } %75, 1
  %76 = inttoptr i64 %result513 to {}*
  br i1 %overflow514, label %tag145, label %tag98.outer.backedge

tag98.outer.backedge:                             ; preds = %tag92, %normal-dest727, %normal-dest327
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.1, %normal-dest327 ], [ %LENGTH.2, %normal-dest727 ], [ %76, %tag92 ]
  br label %tag98.outer

tag93:                                            ; preds = %tag158
  %77 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %78 = icmp eq {}* %SEQUENCE444.0.ph, %77
  %.val990 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340319.0 = select i1 %78, {}* %.val990, {}* %77
  %79 = icmp eq {}* %G340319.0, %77
  br i1 %79, label %tag61, label %tag20

tag95:                                            ; preds = %tag55
  %80 = add i64 %205, 7
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %"tag fixnum522" = shl nuw i64 %82, 2
  %83 = inttoptr i64 %"tag fixnum522" to {}*
  br label %tag67

tag98:                                            ; preds = %normal-dest741, %tag98.outer
  br i1 %consp-test525, label %tag73, label %tag27

tag100:                                           ; preds = %tag24
  %84 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 295), align 8
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest534 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag107:                                           ; preds = %normal-dest284
  %86 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 291), align 8
  %87 = invoke {}* @cc_safe_fdefinition({}* %86)
          to label %normal-dest581 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag109:                                           ; preds = %tag20
  %88 = icmp eq {}* %G2095854208.0, %.val995
  %G340278.0 = select i1 %88, {}* %.val992, {}* %.val995
  %89 = icmp eq {}* %G340278.0, %.val995
  br i1 %89, label %tag45, label %tag150

tag111:                                           ; preds = %tag10
  %90 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 297), align 8
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest595 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag112:                                           ; preds = %tag26
  %92 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %93 = invoke {}* @cc_safe_fdefinition({}* %92)
          to label %normal-dest601 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag114:                                           ; preds = %tag70
  %94 = ptrtoint {}* %.in918 to i64
  %single-float-tag-only614 = and i64 %94, 7
  %95 = icmp eq i64 %single-float-tag-only614, 6
  br i1 %95, label %tag6, label %tag33

tag115:                                           ; preds = %switch.early.test, %switch.early.test, %header-check-br573, %header-check-br767, %header-check-br767, %tag5
  %96 = ptrtoint {}* %x445.0 to i64
  %fixnum-tag-only615884 = and i64 %96, 3
  %fixnump-test616 = icmp eq i64 %fixnum-tag-only615884, 0
  br i1 %fixnump-test616, label %tag52, label %tag122

tag117:                                           ; preds = %tag122, %header-check-br774, %tag52, %header-check-br306, %tag15
  %97 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 327), align 8
  %98 = invoke {}* @cc_safe_fdefinition({}* %97)
          to label %normal-dest618 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag118:                                           ; preds = %tag68
  %99 = icmp eq {}* %G2095854.0, %.val989
  %G340374.0 = select i1 %99, {}* %.val986, {}* %.val989
  %100 = icmp eq {}* %G340374.0, %.val989
  br i1 %100, label %tag147, label %tag67

tag122:                                           ; preds = %tag115
  %trunc996 = trunc i64 %96 to i3
  switch i3 %trunc996, label %tag117 [
    i3 -2, label %tag15
    i3 1, label %header-check-br774
  ]

tag125:                                           ; preds = %header-check-br683
  %101 = invoke double @from_object_double({}* nonnull %x382.0)
          to label %normal-dest639 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag127:                                           ; preds = %normal-dest640
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag10

tag130:                                           ; preds = %tag44
  %103 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest654 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag134:                                           ; preds = %header-check-br306
  %105 = invoke double @from_object_double({}* nonnull %x445.0)
          to label %normal-dest668 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag135:                                           ; preds = %normal-dest431
  %106 = ptrtoint {}* %.in918 to i64
  %fixnum-tag-only671919 = and i64 %106, 3
  %fixnump-test672 = icmp eq i64 %fixnum-tag-only671919, 0
  br i1 %fixnump-test672, label %tag140, label %tag33

tag138:                                           ; preds = %header-check-br
  %ptrtoint684 = ptrtoint {}* %.in918 to i64
  %tag-only685 = and i64 %ptrtoint684, 7
  %test686 = icmp eq i64 %tag-only685, 1
  br i1 %test686, label %header-check-br683, label %tag33

tag139:                                           ; preds = %normal-dest175
  %107 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag10

tag140:                                           ; preds = %tag135
  %108 = icmp slt {}* %.in918, %x382.0
  %109 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %.979 = select i1 %108, {}* %109, {}* %184
  br label %tag10

tag144:                                           ; preds = %tag41
  %110 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %111 = invoke {}* @cc_safe_fdefinition({}* %110)
          to label %normal-dest706 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag145:                                           ; preds = %tag92
  %112 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %113 = invoke {}* @cc_safe_fdefinition({}* %112)
          to label %normal-dest720 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag147:                                           ; preds = %tag118
  %114 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %115 = invoke {}* @cc_safe_fdefinition({}* %114)
          to label %normal-dest741 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag148:                                           ; preds = %normal-dest284, %normal-dest166, %tag24, %tag10, %normal-dest391
  %return-value.sroa.56.0 = phi i64 [ %.elt892, %normal-dest391 ], [ 1, %tag10 ], [ 1, %tag24 ], [ 1, %normal-dest166 ], [ 1, %normal-dest284 ]
  %return-value.sroa.0.1.in = phi {}* [ %.elt890, %normal-dest391 ], [ %G340330.0, %tag10 ], [ %188, %tag24 ], [ %126, %normal-dest166 ], [ %155, %normal-dest284 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %116 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.1.in, 0
  %117 = insertvalue { {}*, i64 } %116, i64 %return-value.sroa.56.0, 1
  ret { {}*, i64 } %117

tag150:                                           ; preds = %tag109, %normal-dest608, %tag26, %tag69
  %x445.0 = phi {}* [ %64, %tag69 ], [ null, %tag26 ], [ %x445.1, %normal-dest608 ], [ %LENGTH192.0.ph, %tag109 ]
  %118 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %119 = invoke {}* @cc_safe_fdefinition({}* %118)
          to label %normal-dest754 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag157:                                           ; preds = %tag88
  %120 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %74, i64 4)
  %result477 = extractvalue { i64, i1 } %120, 0
  %overflow478 = extractvalue { i64, i1 } %120, 1
  %121 = inttoptr i64 %result477 to {}*
  br i1 %overflow478, label %tag34, label %tag158.outer.backedge

tag158.outer.backedge:                            ; preds = %tag157, %normal-dest258, %normal-dest300
  %LENGTH192.0.ph.be = phi {}* [ %LENGTH192.2, %normal-dest300 ], [ %LENGTH192.1, %normal-dest258 ], [ %121, %tag157 ]
  br label %tag158.outer

tag158:                                           ; preds = %normal-dest334, %tag158.outer
  br i1 %consp-test787, label %tag19, label %tag93

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest410, %tag61, %normal-dest334, %tag45
  %lpad.loopexit1006 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest293, %tag38, %normal-dest250, %tag34
  %lpad.loopexit.split-lp1007 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag80, %normal-dest480, %tag147, %normal-dest741
  %lpad.loopexit1011 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag42, %normal-dest320, %tag145, %normal-dest720
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %tag31, %normal-dest222, %tag36, %normal-dest265, %normal-dest272, %tag75, %normal-dest448, %maybe-more-tests652, %normal-dest560, %tag107, %normal-dest581
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %normal-dest, %normal-dest163, %tag1, %tag6, %normal-dest174, %tag12, %normal-dest195, %normal-dest197, %tag33, %normal-dest236, %tag49, %normal-dest353, %normal-dest355, %normal-dest362, %normal-dest369, %tag54, %tag67, %normal-dest424, %maybe-more-tests682, %normal-dest464, %tag100, %normal-dest534, %tag111, %tag112, %normal-dest601, %tag117, %normal-dest618, %normal-dest170, %tag125, %normal-dest639, %tag130, %normal-dest654, %tag134, %normal-dest668, %normal-dest669, %maybe-more-tests558, %normal-dest692, %tag144, %normal-dest706, %tag150, %normal-dest754, %9, %10
  %lpad.loopexit.split-lp1013 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit1006, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp1007, %cleanup-lpad.loopexit.loopexit.split-lp ], [ %lpad.loopexit1011, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ], [ %lpad.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp1013, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %122 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %123 = invoke {}* @cc_safe_fdefinition({}* %122)
          to label %normal-dest163 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest163:                                   ; preds = %normal-dest
  %124 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 314), align 16
  %ptrtoint = ptrtoint {}* %123 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %125 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %123, i64 2, {}* %farg0, {}* %124, {}* null, {}* null)
          to label %normal-dest166 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest166:                                   ; preds = %normal-dest163
  %.elt = extractvalue { {}*, i64 } %125, 0
  %.elt813 = extractvalue { {}*, i64 } %125, 1
  %cond = icmp eq i64 %.elt813, 0
  %126 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340481.0 = select i1 %cond, {}* %126, {}* %.elt
  %127 = icmp eq {}* %G340481.0, %126
  br i1 %127, label %tag148, label %tag49

normal-dest170:                                   ; preds = %tag1
  %128 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %129 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %130 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %131 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 334), align 16
  %ptrtoint631 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint632 = add i64 %ptrtoint631, 7
  %entry-point-addr633 = inttoptr i64 %entry-point-addr-uint632 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point634 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr633, align 8
  %132 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point634({}* %12, i64 5, {}* %128, {}* %129, {}* %.in, {}* %130, {}* %131)
          to label %normal-dest637 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br:                                  ; preds = %tag70
  %irc-bit-cast172 = bitcast {}* %x382.0 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast172, i64 -9
  %irc-bit-cast173 = bitcast i8* %gep to i64*
  %133 = load i64, i64* %irc-bit-cast173, align 8
  %134 = icmp eq i64 %133, 1325
  br i1 %134, label %tag138, label %tag33

normal-dest174:                                   ; preds = %tag6
  %135 = invoke float @from_object_float({}* %.in918)
          to label %normal-dest175 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest175:                                   ; preds = %normal-dest174
  %136 = fcmp olt float %135, %14
  br i1 %136, label %tag48, label %tag139

header-check-br176:                               ; preds = %tag8
  %137 = load i64, i64* %irc-bit-cast182, align 8
  %.off1004 = add i64 %137, -913
  %138 = icmp ult i64 %.off1004, 85
  br i1 %138, label %tag36, label %header-check-br644

normal-dest195:                                   ; preds = %tag12
  %139 = invoke float @from_object_float({}* %.in)
          to label %normal-dest197 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest197:                                   ; preds = %normal-dest195
  %140 = fsub float %17, %139
  %141 = invoke {}* @to_object_float(float %140)
          to label %tag54 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest222:                                   ; preds = %tag31
  %142 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %143 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %144 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %145 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 318), align 16
  %ptrtoint223 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint224 = add i64 %ptrtoint223, 7
  %entry-point-addr225 = inttoptr i64 %entry-point-addr-uint224 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point226 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr225, align 8
  %146 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point226({}* %29, i64 5, {}* %142, {}* %143, {}* %"closure->LAMBDA", {}* %144, {}* %145)
          to label %normal-dest229 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest229:                                   ; preds = %normal-dest222
  %.elt827 = extractvalue { {}*, i64 } %146, 0
  %.elt829 = extractvalue { {}*, i64 } %146, 1
  %cond791 = icmp eq i64 %.elt829, 0
  %147 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340451.1 = select i1 %cond791, {}* %147, {}* %.elt827
  br label %tag36

normal-dest236:                                   ; preds = %tag33
  %ptrtoint237 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint238 = add i64 %ptrtoint237, 7
  %entry-point-addr239 = inttoptr i64 %entry-point-addr-uint238 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point240 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr239, align 8
  %148 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point240({}* %31, i64 2, {}* %x382.0, {}* %.in918, {}* null, {}* null)
          to label %normal-dest243 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest243:                                   ; preds = %normal-dest236
  %.elt860 = extractvalue { {}*, i64 } %148, 0
  %.elt862 = extractvalue { {}*, i64 } %148, 1
  %cond798 = icmp eq i64 %.elt862, 0
  %149 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340330.1 = select i1 %cond798, {}* %149, {}* %.elt860
  br label %tag10

normal-dest250:                                   ; preds = %tag34
  %ptrtoint252 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint253 = add i64 %ptrtoint252, 7
  %entry-point-addr254 = inttoptr i64 %entry-point-addr-uint253 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point255 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr254, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point255({}* %33, i64 1, {}* %121, {}* null, {}* null, {}* null)
          to label %normal-dest258 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest258:                                   ; preds = %normal-dest250
  %.elt872 = extractvalue { {}*, i64 } %150, 0
  %.elt874 = extractvalue { {}*, i64 } %150, 1
  %cond800 = icmp eq i64 %.elt874, 0
  %151 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH192.1 = select i1 %cond800, {}* %151, {}* %.elt872
  br label %tag158.outer.backedge

normal-dest265:                                   ; preds = %tag36
  %ptrtoint266 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint267 = add i64 %ptrtoint266, 7
  %entry-point-addr268 = inttoptr i64 %entry-point-addr-uint267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr268, align 8
  %152 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point269({}* %35, i64 2, {}* %G340095.0, {}* %G340189.0, {}* null, {}* null)
          to label %normal-dest272 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest272:                                   ; preds = %normal-dest265
  %.elt831 = extractvalue { {}*, i64 } %152, 0
  %.elt833 = extractvalue { {}*, i64 } %152, 1
  %cond792 = icmp eq i64 %.elt833, 0
  %153 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340452.0 = select i1 %cond792, {}* %153, {}* %.elt831
  %ptrtoint278 = ptrtoint {}* %G340451.0 to i64
  %entry-point-addr-uint279 = add i64 %ptrtoint278, 7
  %entry-point-addr280 = inttoptr i64 %entry-point-addr-uint279 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point281 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr280, align 8
  %154 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point281({}* %G340451.0, i64 1, {}* %G340452.0, {}* null, {}* null, {}* null)
          to label %normal-dest284 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest284:                                   ; preds = %normal-dest272
  %.elt835 = extractvalue { {}*, i64 } %154, 0
  %.elt837 = extractvalue { {}*, i64 } %154, 1
  %cond793 = icmp eq i64 %.elt837, 0
  %155 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340186.0 = select i1 %cond793, {}* %155, {}* %.elt835
  %156 = icmp eq {}* %G340186.0, %155
  %.val982 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340446.0 = select i1 %156, {}* %.val982, {}* %155
  %157 = icmp eq {}* %G340446.0, %155
  br i1 %157, label %tag107, label %tag148

normal-dest293:                                   ; preds = %tag38
  %ptrtoint294 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint295 = add i64 %ptrtoint294, 7
  %entry-point-addr296 = inttoptr i64 %entry-point-addr-uint295 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point297 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr296, align 8
  %158 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point297({}* %37, i64 2, {}* %LENGTH192.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest300 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest300:                                   ; preds = %normal-dest293
  %.elt868 = extractvalue { {}*, i64 } %158, 0
  %.elt870 = extractvalue { {}*, i64 } %158, 1
  %cond799 = icmp eq i64 %.elt870, 0
  %159 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH192.2 = select i1 %cond799, {}* %159, {}* %.elt868
  br label %tag158.outer.backedge

header-check-br306:                               ; preds = %header-check-br774
  %gep311 = getelementptr inbounds i8, i8* %253, i64 -9
  %irc-bit-cast312 = bitcast i8* %gep311 to i64*
  %160 = load i64, i64* %irc-bit-cast312, align 8
  %161 = icmp eq i64 %160, 1325
  br i1 %161, label %tag134, label %tag117

normal-dest320:                                   ; preds = %tag42
  %ptrtoint321 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint322 = add i64 %ptrtoint321, 7
  %entry-point-addr323 = inttoptr i64 %entry-point-addr-uint322 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point324 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr323, align 8
  %162 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point324({}* %42, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest327 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest327:                                   ; preds = %normal-dest320
  %.elt847 = extractvalue { {}*, i64 } %162, 0
  %.elt849 = extractvalue { {}*, i64 } %162, 1
  %cond795 = icmp eq i64 %.elt849, 0
  %163 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.1 = select i1 %cond795, {}* %163, {}* %.elt847
  br label %tag98.outer.backedge

normal-dest334:                                   ; preds = %tag45
  %164 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 326), align 16
  %ptrtoint335 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint336 = add i64 %ptrtoint335, 7
  %entry-point-addr337 = inttoptr i64 %entry-point-addr-uint336 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point338 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr337, align 8
  %165 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point338({}* %46, i64 2, {}* %G2095854208.0, {}* %164, {}* null, {}* null)
          to label %tag158 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest353:                                   ; preds = %tag49
  %166 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %167 = invoke {}* @cc_safe_fdefinition({}* %166)
          to label %normal-dest355 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest355:                                   ; preds = %normal-dest353
  %168 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 316), align 16
  %ptrtoint356 = ptrtoint {}* %167 to i64
  %entry-point-addr-uint357 = add i64 %ptrtoint356, 7
  %entry-point-addr358 = inttoptr i64 %entry-point-addr-uint357 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point359 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr358, align 8
  %169 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point359({}* %167, i64 2, {}* %farg0, {}* %168, {}* null, {}* null)
          to label %normal-dest362 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest362:                                   ; preds = %normal-dest355
  %.elt815 = extractvalue { {}*, i64 } %169, 0
  %.elt817 = extractvalue { {}*, i64 } %169, 1
  %cond788 = icmp eq i64 %.elt817, 0
  %170 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340095.0 = select i1 %cond788, {}* %170, {}* %.elt815
  %171 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 286), align 16
  %172 = invoke {}* @cc_safe_fdefinition({}* %171)
          to label %normal-dest369 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest369:                                   ; preds = %normal-dest362
  %ptrtoint370 = ptrtoint {}* %172 to i64
  %entry-point-addr-uint371 = add i64 %ptrtoint370, 7
  %entry-point-addr372 = inttoptr i64 %entry-point-addr-uint371 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point373 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr372, align 8
  %173 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point373({}* %172, i64 1, {}* %G340095.0, {}* null, {}* null, {}* null)
          to label %normal-dest376 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest376:                                   ; preds = %normal-dest369
  %ptrtoint177 = ptrtoint {}* %"closure->LAMBDA" to i64
  %tag-only178 = and i64 %ptrtoint177, 7
  %test179 = icmp eq i64 %tag-only178, 1
  %irc-bit-cast180 = bitcast {}* %"closure->LAMBDA" to i8*
  %gep181 = getelementptr inbounds i8, i8* %irc-bit-cast180, i64 -9
  %irc-bit-cast182 = bitcast i8* %gep181 to i64*
  br label %tag75

normal-dest391:                                   ; preds = %tag54
  %.elt890 = extractvalue { {}*, i64 } %49, 0
  %.elt892 = extractvalue { {}*, i64 } %49, 1
  br label %tag148

header-check-br393:                               ; preds = %tag58
  %gep398 = getelementptr inbounds i8, i8* %204, i64 -9
  %irc-bit-cast399 = bitcast i8* %gep398 to i64*
  %174 = load i64, i64* %irc-bit-cast399, align 8
  %.off1002 = add i64 %174, -1081
  %175 = icmp ult i64 %.off1002, 69
  br i1 %175, label %tag55, label %header-check-br674

normal-dest410:                                   ; preds = %tag61
  %176 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %177 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %178 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %179 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint411 = ptrtoint {}* %53 to i64
  %entry-point-addr-uint412 = add i64 %ptrtoint411, 7
  %entry-point-addr413 = inttoptr i64 %entry-point-addr-uint412 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point414 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr413, align 8
  %180 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point414({}* %53, i64 5, {}* %176, {}* %177, {}* %SEQUENCE444.0.ph, {}* %178, {}* %179)
          to label %normal-dest417 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest417:                                   ; preds = %normal-dest410
  %.elt906 = extractvalue { {}*, i64 } %180, 0
  %.elt908 = extractvalue { {}*, i64 } %180, 1
  %cond804 = icmp eq i64 %.elt908, 0
  %181 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G2095854208.1 = select i1 %cond804, {}* %181, {}* %.elt906
  br label %tag20

normal-dest424:                                   ; preds = %tag67
  %182 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 314), align 16
  %ptrtoint425 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint426 = add i64 %ptrtoint425, 7
  %entry-point-addr427 = inttoptr i64 %entry-point-addr-uint426 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point428 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr427, align 8
  %183 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point428({}* %58, i64 2, {}* %farg0, {}* %182, {}* null, {}* null)
          to label %normal-dest431 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest431:                                   ; preds = %normal-dest424
  %.elt855 = extractvalue { {}*, i64 } %183, 0
  %.elt857 = extractvalue { {}*, i64 } %183, 1
  %cond797 = icmp eq i64 %.elt857, 0
  %184 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in918 = select i1 %cond797, {}* %184, {}* %.elt855
  %185 = bitcast {}* %.in918 to i8*
  %186 = ptrtoint {}* %x382.0 to i64
  %fixnum-tag-only438858 = and i64 %186, 3
  %fixnump-test439 = icmp eq i64 %fixnum-tag-only438858, 0
  br i1 %fixnump-test439, label %tag135, label %tag70

normal-dest448:                                   ; preds = %tag75
  %ptrtoint449 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint450 = add i64 %ptrtoint449, 7
  %entry-point-addr451 = inttoptr i64 %entry-point-addr-uint450 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point452 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr451, align 8
  %187 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point452({}* %68, i64 2, {}* %G340095.0, {}* %G340189.0, {}* null, {}* null)
          to label %normal-dest455 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest455:                                   ; preds = %normal-dest448
  %.elt823 = extractvalue { {}*, i64 } %187, 0
  %.elt825 = extractvalue { {}*, i64 } %187, 1
  %cond790 = icmp eq i64 %.elt825, 0
  %188 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object456.0 = select i1 %cond790, {}* %188, {}* %.elt823
  %189 = icmp eq {}* %object456.0, %188
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340433.0 = select i1 %189, {}* %.val, {}* %188
  %190 = icmp eq {}* %G340433.0, %188
  br i1 %190, label %tag24, label %tag8

normal-dest464:                                   ; preds = %maybe-more-tests682
  %ptrtoint465 = ptrtoint {}* %234 to i64
  %entry-point-addr-uint466 = add i64 %ptrtoint465, 7
  %entry-point-addr467 = inttoptr i64 %entry-point-addr-uint466 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point468 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr467, align 8
  %191 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point468({}* %234, i64 1, {}* nonnull %.in913, {}* null, {}* null, {}* null)
          to label %normal-dest471 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest471:                                   ; preds = %normal-dest464
  %.elt933 = extractvalue { {}*, i64 } %191, 0
  %.elt935 = extractvalue { {}*, i64 } %191, 1
  %cond809 = icmp eq i64 %.elt935, 0
  %192 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340494.0 = select i1 %cond809, {}* %192, {}* %.elt933
  %193 = icmp eq {}* %G340494.0, inttoptr (i64 4 to {}*)
  br i1 %193, label %tag55, label %tag41

normal-dest480:                                   ; preds = %tag80
  %194 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %195 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %196 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %197 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint481 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint482 = add i64 %ptrtoint481, 7
  %entry-point-addr483 = inttoptr i64 %entry-point-addr-uint482 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point484 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr483, align 8
  %198 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point484({}* %70, i64 5, {}* %194, {}* %195, {}* %SEQUENCE.0.ph, {}* %196, {}* %197)
          to label %normal-dest487 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest487:                                   ; preds = %normal-dest480
  %.elt925 = extractvalue { {}*, i64 } %198, 0
  %.elt927 = extractvalue { {}*, i64 } %198, 1
  %cond807 = icmp eq i64 %.elt927, 0
  %199 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G2095854.1 = select i1 %cond807, {}* %199, {}* %.elt925
  br label %tag68

header-check-br500:                               ; preds = %tag84
  %gep505 = getelementptr inbounds i8, i8* %204, i64 -9
  %irc-bit-cast506 = bitcast i8* %gep505 to i64*
  %200 = load i64, i64* %irc-bit-cast506, align 8
  %.off = add i64 %200, -1081
  %201 = icmp ult i64 %.off, 69
  br i1 %201, label %tag65, label %header-check-br550

normal-dest534:                                   ; preds = %tag100
  %ptrtoint535 = ptrtoint {}* %85 to i64
  %entry-point-addr-uint536 = add i64 %ptrtoint535, 7
  %entry-point-addr537 = inttoptr i64 %entry-point-addr-uint536 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point538 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr537, align 8
  %202 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point538({}* %85, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest541 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest541:                                   ; preds = %normal-dest534
  %.elt839 = extractvalue { {}*, i64 } %202, 0
  %.elt841 = extractvalue { {}*, i64 } %202, 1
  %cond794 = icmp eq i64 %.elt841, 0
  %203 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in913 = select i1 %cond794, {}* %203, {}* %.elt839
  %204 = bitcast {}* %.in913 to i8*
  %205 = ptrtoint {}* %.in913 to i64
  %tag-only547842 = and i64 %205, 7
  %consp-test548 = icmp eq i64 %tag-only547842, 3
  %G340422.0.in = select i1 %consp-test548, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12)
  %G340422.0 = load {}*, {}** %G340422.0.in, align 8
  %206 = icmp eq {}* %G340422.0, %203
  br i1 %206, label %tag58, label %tag98.outer.preheader

tag98.outer.preheader:                            ; preds = %normal-dest541
  br label %tag98.outer

header-check-br550:                               ; preds = %header-check-br500
  %.off999 = add i64 %200, -1153
  %207 = icmp ult i64 %.off999, 149
  br i1 %207, label %maybe-more-tests558, label %tag26

maybe-more-tests558:                              ; preds = %header-check-br550
  %208 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 109), align 8
  %209 = invoke {}* @cc_safe_fdefinition({}* %208)
          to label %normal-dest692 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest560:                                   ; preds = %maybe-more-tests652
  %ptrtoint561 = ptrtoint {}* %226 to i64
  %entry-point-addr-uint562 = add i64 %ptrtoint561, 7
  %entry-point-addr563 = inttoptr i64 %entry-point-addr-uint562 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point564 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr563, align 8
  %210 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point564({}* %226, i64 1, {}* nonnull %"closure->LAMBDA", {}* null, {}* null, {}* null)
          to label %normal-dest567 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest567:                                   ; preds = %normal-dest560
  %.elt941 = extractvalue { {}*, i64 } %210, 0
  %.elt943 = extractvalue { {}*, i64 } %210, 1
  %cond811 = icmp eq i64 %.elt943, 0
  %211 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340451.2 = select i1 %cond811, {}* %211, {}* %.elt941
  br label %tag36

header-check-br573:                               ; preds = %header-check-br767
  %.old = and i64 %ptrtoint768, 3
  %fixnump-test220.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test220.old, label %tag115, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br573
  switch i64 %254, label %tag1 [
    i64 1349, label %tag115
    i64 1309, label %tag115
  ]

normal-dest581:                                   ; preds = %tag107
  %ptrtoint582 = ptrtoint {}* %87 to i64
  %entry-point-addr-uint583 = add i64 %ptrtoint582, 7
  %entry-point-addr584 = inttoptr i64 %entry-point-addr-uint583 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point585 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr584, align 8
  %212 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point585({}* %87, i64 2, {}* %G340095.0, {}* %G340189.0, {}* null, {}* null)
          to label %tag75 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest595:                                   ; preds = %tag111
  %213 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %214 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 323), align 8
  %G340326.0 = load {}*, {}** %G340422.0.in, align 8
  %215 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %216 = icmp eq {}* %G340326.0, %215
  br i1 %216, label %tag84, label %tag158.outer.preheader

tag158.outer.preheader:                           ; preds = %normal-dest595
  br label %tag158.outer

normal-dest601:                                   ; preds = %tag112
  %217 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 325), align 8
  %ptrtoint602 = ptrtoint {}* %93 to i64
  %entry-point-addr-uint603 = add i64 %ptrtoint602, 7
  %entry-point-addr604 = inttoptr i64 %entry-point-addr-uint603 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point605 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr604, align 8
  %218 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point605({}* %93, i64 2, {}* %.in913, {}* %217, {}* null, {}* null)
          to label %normal-dest608 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest608:                                   ; preds = %normal-dest601
  %.elt910 = extractvalue { {}*, i64 } %218, 0
  %.elt912 = extractvalue { {}*, i64 } %218, 1
  %cond805 = icmp eq i64 %.elt912, 0
  %219 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %x445.1 = select i1 %cond805, {}* %219, {}* %.elt910
  br label %tag150

normal-dest618:                                   ; preds = %tag117
  %ptrtoint619 = ptrtoint {}* %98 to i64
  %entry-point-addr-uint620 = add i64 %ptrtoint619, 7
  %entry-point-addr621 = inttoptr i64 %entry-point-addr-uint620 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point622 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr621, align 8
  %220 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point622({}* %98, i64 2, {}* %x445.0, {}* %.in, {}* null, {}* null)
          to label %normal-dest625 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest625:                                   ; preds = %normal-dest618
  %.elt886 = extractvalue { {}*, i64 } %220, 0
  %.elt888 = extractvalue { {}*, i64 } %220, 1
  %cond802 = icmp eq i64 %.elt888, 0
  %221 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340230.1 = select i1 %cond802, {}* %221, {}* %.elt886
  br label %tag54

normal-dest637:                                   ; preds = %normal-dest170
  call void @unreachableError()
  unreachable

normal-dest639:                                   ; preds = %tag125
  %222 = invoke double @from_object_double({}* nonnull %.in918)
          to label %normal-dest640 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest640:                                   ; preds = %normal-dest639
  %223 = fcmp olt double %222, %101
  br i1 %223, label %tag63, label %tag127

header-check-br644:                               ; preds = %header-check-br176
  %.off1005 = add i64 %137, -1001
  %224 = icmp ult i64 %.off1005, 5
  br i1 %224, label %maybe-more-tests652, label %tag31

maybe-more-tests652:                              ; preds = %header-check-br644
  %225 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %226 = invoke {}* @cc_safe_fdefinition({}* %225)
          to label %normal-dest560 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest654:                                   ; preds = %tag130
  %ptrtoint655 = ptrtoint {}* %104 to i64
  %entry-point-addr-uint656 = add i64 %ptrtoint655, 7
  %entry-point-addr657 = inttoptr i64 %entry-point-addr-uint656 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point658 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr657, align 8
  %227 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point658({}* %104, i64 1, {}* %44, {}* null, {}* null, {}* null)
          to label %normal-dest661 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest661:                                   ; preds = %normal-dest654
  %.elt898 = extractvalue { {}*, i64 } %227, 0
  %.elt900 = extractvalue { {}*, i64 } %227, 1
  %cond803 = icmp eq i64 %.elt900, 0
  %228 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340230.2 = select i1 %cond803, {}* %228, {}* %.elt898
  br label %tag54

normal-dest668:                                   ; preds = %tag134
  %229 = invoke double @from_object_double({}* nonnull %.in)
          to label %normal-dest669 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest669:                                   ; preds = %normal-dest668
  %230 = fsub double %105, %229
  %231 = invoke {}* @to_object_double(double %230)
          to label %tag54 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br674:                               ; preds = %header-check-br393
  %.off1003 = add i64 %174, -1153
  %232 = icmp ult i64 %.off1003, 149
  br i1 %232, label %maybe-more-tests682, label %tag41

maybe-more-tests682:                              ; preds = %header-check-br674
  %233 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 109), align 8
  %234 = invoke {}* @cc_safe_fdefinition({}* %233)
          to label %normal-dest464 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br683:                               ; preds = %tag138
  %gep688 = getelementptr inbounds i8, i8* %185, i64 -9
  %irc-bit-cast689 = bitcast i8* %gep688 to i64*
  %235 = load i64, i64* %irc-bit-cast689, align 8
  %236 = icmp eq i64 %235, 1325
  br i1 %236, label %tag125, label %tag33

normal-dest692:                                   ; preds = %maybe-more-tests558
  %ptrtoint693 = ptrtoint {}* %209 to i64
  %entry-point-addr-uint694 = add i64 %ptrtoint693, 7
  %entry-point-addr695 = inttoptr i64 %entry-point-addr-uint694 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point696 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr695, align 8
  %237 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point696({}* %209, i64 1, {}* nonnull %.in913, {}* null, {}* null, {}* null)
          to label %normal-dest699 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest699:                                   ; preds = %normal-dest692
  %.elt915 = extractvalue { {}*, i64 } %237, 0
  %.elt917 = extractvalue { {}*, i64 } %237, 1
  %cond806 = icmp eq i64 %.elt917, 0
  %238 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340490.0 = select i1 %cond806, {}* %238, {}* %.elt915
  %239 = icmp eq {}* %G340490.0, inttoptr (i64 4 to {}*)
  br i1 %239, label %tag65, label %tag26

normal-dest706:                                   ; preds = %tag144
  %240 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 319), align 8
  %ptrtoint707 = ptrtoint {}* %111 to i64
  %entry-point-addr-uint708 = add i64 %ptrtoint707, 7
  %entry-point-addr709 = inttoptr i64 %entry-point-addr-uint708 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point710 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr709, align 8
  %241 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point710({}* %111, i64 2, {}* %.in913, {}* %240, {}* null, {}* null)
          to label %normal-dest713 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest713:                                   ; preds = %normal-dest706
  %.elt929 = extractvalue { {}*, i64 } %241, 0
  %.elt931 = extractvalue { {}*, i64 } %241, 1
  %cond808 = icmp eq i64 %.elt931, 0
  %242 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %x382.1 = select i1 %cond808, {}* %242, {}* %.elt929
  br label %tag67

normal-dest720:                                   ; preds = %tag145
  %ptrtoint721 = ptrtoint {}* %113 to i64
  %entry-point-addr-uint722 = add i64 %ptrtoint721, 7
  %entry-point-addr723 = inttoptr i64 %entry-point-addr-uint722 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point724 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr723, align 8
  %243 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point724({}* %113, i64 1, {}* %76, {}* null, {}* null, {}* null)
          to label %normal-dest727 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest727:                                   ; preds = %normal-dest720
  %.elt851 = extractvalue { {}*, i64 } %243, 0
  %.elt853 = extractvalue { {}*, i64 } %243, 1
  %cond796 = icmp eq i64 %.elt853, 0
  %244 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.2 = select i1 %cond796, {}* %244, {}* %.elt851
  br label %tag98.outer.backedge

tag98.outer:                                      ; preds = %tag98.outer.backedge, %tag98.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag98.outer.preheader ], [ %LENGTH.0.ph.be, %tag98.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in913, %tag98.outer.preheader ], [ %G2095854.0, %tag98.outer.backedge ]
  %245 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only524843 = and i64 %245, 7
  %consp-test525 = icmp eq i64 %tag-only524843, 3
  %246 = add i64 %245, 5
  %247 = inttoptr i64 %246 to {}**
  br label %tag98

normal-dest741:                                   ; preds = %tag147
  %248 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 320), align 16
  %ptrtoint742 = ptrtoint {}* %115 to i64
  %entry-point-addr-uint743 = add i64 %ptrtoint742, 7
  %entry-point-addr744 = inttoptr i64 %entry-point-addr-uint743 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point745 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr744, align 8
  %249 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point745({}* %115, i64 2, {}* %G2095854.0, {}* %248, {}* null, {}* null)
          to label %tag98 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest754:                                   ; preds = %tag150
  %250 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 314), align 16
  %ptrtoint755 = ptrtoint {}* %119 to i64
  %entry-point-addr-uint756 = add i64 %ptrtoint755, 7
  %entry-point-addr757 = inttoptr i64 %entry-point-addr-uint756 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point758 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr757, align 8
  %251 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point758({}* %119, i64 2, {}* %farg0, {}* %250, {}* null, {}* null)
          to label %normal-dest761 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest761:                                   ; preds = %normal-dest754
  %.elt876 = extractvalue { {}*, i64 } %251, 0
  %.elt878 = extractvalue { {}*, i64 } %251, 1
  %cond801 = icmp eq i64 %.elt878, 0
  %252 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in = select i1 %cond801, {}* %252, {}* %.elt876
  %253 = bitcast {}* %.in to i8*
  %ptrtoint768 = ptrtoint {}* %.in to i64
  %tag-only769 = and i64 %ptrtoint768, 7
  %test770 = icmp eq i64 %tag-only769, 1
  br i1 %test770, label %header-check-br767, label %tag5

header-check-br767:                               ; preds = %normal-dest761
  %gep772 = getelementptr inbounds i8, i8* %253, i64 -9
  %irc-bit-cast773 = bitcast i8* %gep772 to i64*
  %254 = load i64, i64* %irc-bit-cast773, align 8
  switch i64 %254, label %header-check-br573 [
    i64 1325, label %tag115
    i64 1341, label %tag115
  ]

header-check-br774:                               ; preds = %tag122
  %irc-bit-cast778 = bitcast {}* %x445.0 to i8*
  %gep779 = getelementptr inbounds i8, i8* %irc-bit-cast778, i64 -9
  %irc-bit-cast780 = bitcast i8* %gep779 to i64*
  %255 = load i64, i64* %irc-bit-cast780, align 8
  %256 = icmp ne i64 %255, 1325
  %test770.not = xor i1 %test770, true
  %brmerge = or i1 %256, %test770.not
  br i1 %brmerge, label %tag117, label %header-check-br306
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.1"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !69 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.1^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.1^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %14, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: nounwind
declare void @unreachableError() local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^172^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !70 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^172^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag3:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G340526.0 = phi {}* [ %18, %header-check-br ], [ %G340526.1, %normal-dest17 ], [ %G340526.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 341), align 8
  %ptrtoint43 = ptrtoint {}* %G340526.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G340526.0, i64 2, {}* %"closure->SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %tag3, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 341), align 8
  %"closure->SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6745, i64 172, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340526.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag3

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag3
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 340), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340526.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 343), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 344), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 688 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 341), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !71 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc30 unwind label %cleanup-lpad

.noexc30:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest11, %normal-dest8, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 338), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 311), align 8
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %14, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.2", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6745, i64 172, i64 0, i64 0)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %15 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest6
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 284), align 16
  %ptrtoint = ptrtoint {}* %16 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %18 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %16, i64 2, {}* %farg0, {}* %17, {}* null, {}* null)
          to label %normal-dest11 unwind label %cleanup-lpad

normal-dest11:                                    ; preds = %normal-dest8
  %.elt = extractvalue { {}*, i64 } %18, 0
  %.elt22 = extractvalue { {}*, i64 } %18, 1
  %cond = icmp eq i64 %.elt22, 0
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340546.0 = select i1 %cond, {}* %19, {}* %.elt
  %ptrtoint14 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint15 = add i64 %ptrtoint14, 7
  %entry-point-addr16 = inttoptr i64 %entry-point-addr-uint15 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point17 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr16, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point17({}* %13, i64 2, {}* %"closure->LAMBDA", {}* %G340546.0, {}* null, {}* null)
          to label %normal-dest20 unwind label %cleanup-lpad

normal-dest20:                                    ; preds = %normal-dest11
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %20
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.2"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !72 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.2^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %ptrtoint = ptrtoint {}* %13 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %15 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %13, i64 2, {}* %farg0, {}* %14, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %15
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^178^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !73 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^178^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G340574.0 = phi {}* [ %18, %header-check-br ], [ %G340574.1, %normal-dest63 ], [ %G340574.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 350), align 16
  %ptrtoint22 = ptrtoint {}* %G340574.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint22, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G340574.0, i64 2, {}* %"closure->SCH=FREIE_BLOCKUNGEN_DER_KLASSE", {}* %11, {}* null, {}* null)
          to label %normal-dest25 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest56, %tag3, %normal-dest41, %normal-dest35, %normal-dest28, %normal-dest25, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 350), align 16
  %"closure->SCH=FREIE_BLOCKUNGEN_DER_KLASSE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 6940, i64 178, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag3

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest25:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest25
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 352), align 16
  %ptrtoint29 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %27 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %25, i64 2, {}* %"closure->SCH=FREIE_BLOCKUNGEN_DER_KLASSE", {}* %26, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

normal-dest35:                                    ; preds = %normal-dest28
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 353), align 8
  %ptrtoint42 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %29, i64 2, {}* %"closure->SCH=FREIE_BLOCKUNGEN_DER_KLASSE", {}* %30, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %32, {}* inttoptr (i64 712 to {}*))
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 350), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %34 = insertvalue { {}*, i64 } undef, {}* %33, 0
  %35 = insertvalue { {}*, i64 } %34, i64 1, 1
  ret { {}*, i64 } %35

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 349), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340574.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag2

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340574.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !74 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc48 unwind label %cleanup-lpad

.noexc48:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest21, %normal-dest14, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 347), align 8
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 284), align 16
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %farg0, {}* %16, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %17, 0
  %.elt36 = extractvalue { {}*, i64 } %17, 1
  %cond = icmp eq i64 %.elt36, 0
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340593.0 = select i1 %cond, {}* %18, {}* %.elt
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 341), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest10
  %ptrtoint15 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint16 = add i64 %ptrtoint15, 7
  %entry-point-addr17 = inttoptr i64 %entry-point-addr-uint16 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point18 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr17, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point18({}* %20, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest21:                                    ; preds = %normal-dest14
  %.elt38 = extractvalue { {}*, i64 } %21, 0
  %.elt40 = extractvalue { {}*, i64 } %21, 1
  %cond34 = icmp eq i64 %.elt40, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340594.0 = select i1 %cond34, {}* %22, {}* %.elt38
  %ptrtoint27 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint28 = add i64 %ptrtoint27, 7
  %entry-point-addr29 = inttoptr i64 %entry-point-addr-uint28 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point30 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr29, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point30({}* %13, i64 2, {}* %G340593.0, {}* %G340594.0, {}* null, {}* null)
          to label %normal-dest33 unwind label %cleanup-lpad

normal-dest33:                                    ; preds = %normal-dest21
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %23
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^184^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !75 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^184^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G340646.0 = phi {}* [ %18, %header-check-br ], [ %G340646.1, %normal-dest63 ], [ %G340646.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 411), align 8
  %ptrtoint13 = ptrtoint {}* %G340646.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G340646.0, i64 2, {}* %"closure->SCHULE_PARAMETER_BEKANNT", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag3, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 411), align 8
  %"closure->SCHULE_PARAMETER_BEKANNT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 7125, i64 184, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 413), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->SCHULE_PARAMETER_BEKANNT", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 420), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->SCHULE_PARAMETER_BEKANNT", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 852 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 411), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag3

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 410), align 16
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340646.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340646.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !76 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 4
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 4
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc2494 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.noexc2494:                                       ; preds = %13
  unreachable

tag2:                                             ; preds = %normal-dest917
  %14 = icmp eq {}* %x918.0, %354
  %.val2592 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341050.0 = select i1 %14, {}* %.val2592, {}* %354
  %15 = icmp eq {}* %G341050.0, %354
  br i1 %15, label %tag187, label %tag415

tag11:                                            ; preds = %header-check-br1479, %header-check-br1479, %header-check-br1479, %header-check-br1479
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest463 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag12:                                            ; preds = %tag409
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest473 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag20:                                            ; preds = %tag235, %normal-dest1683
  %.val2585 = phi {}* [ %504, %normal-dest1683 ], [ %.val25772634, %tag235 ]
  %G340803.0 = phi {}* [ %G340803.1, %normal-dest1683 ], [ %.val2576, %tag235 ]
  %20 = icmp eq {}* %G340803.0, %.val2585
  br i1 %20, label %tag20.tag258_crit_edge, label %tag323

tag20.tag258_crit_edge:                           ; preds = %tag20
  %.val2584.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag258

tag21:                                            ; preds = %normal-dest1617
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 394), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest495 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag22:                                            ; preds = %normal-dest1249, %tag354
  %23 = phi {}* [ %354, %tag354 ], [ %427, %normal-dest1249 ]
  %"%DOLIST-VAR.0" = phi {}* [ %211, %tag354 ], [ %"%DOLIST-VAR.3", %normal-dest1249 ]
  %24 = icmp eq {}* %"%DOLIST-VAR.0", %23
  br i1 %24, label %tag415, label %tag409.preheader

tag409.preheader:                                 ; preds = %tag22
  br label %tag409

tag23:                                            ; preds = %tag406, %normal-dest822, %tag215
  %.val2591 = phi {}* [ %234, %tag215 ], [ %341, %normal-dest822 ], [ %G341132.0, %tag406 ]
  %25 = phi {}* [ %G341132.0, %tag215 ], [ %.val2590.pre, %normal-dest822 ], [ %G341132.0, %tag406 ]
  %.in2444 = phi {}* [ %134, %tag215 ], [ %.in2443, %normal-dest822 ], [ %G341132.0, %tag406 ]
  %26 = bitcast {}* %.in2444 to i8*
  %27 = icmp eq {}* %.in2440, %.in2444
  %G341112.0 = select i1 %27, {}* %25, {}* %.val2591
  %28 = icmp eq {}* %G341112.0, %.val2591
  br i1 %28, label %tag395, label %tag336

tag24:                                            ; preds = %tag238
  br i1 %brmerge2620, label %tag58, label %header-check-br573

tag30:                                            ; preds = %tag420
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest536 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag32:                                            ; preds = %tag129, %normal-dest2048, %normal-dest1971, %normal-dest1821, %normal-dest1731, %normal-dest1451, %normal-dest1418, %normal-dest1389, %normal-dest1376, %normal-dest971, %normal-dest502
  %return-value.sroa.94.0 = phi i64 [ %.elt2375, %normal-dest1971 ], [ %.elt2338, %normal-dest1376 ], [ %.elt2334, %normal-dest1451 ], [ %.elt2306, %normal-dest2048 ], [ %.elt2264, %normal-dest1731 ], [ %.elt2260, %normal-dest1821 ], [ %.elt2252, %normal-dest502 ], [ %.elt2248, %normal-dest1418 ], [ %.elt2216, %normal-dest1389 ], [ %.elt2209, %normal-dest971 ], [ 1, %tag129 ]
  %return-value.sroa.0.0 = phi i64 [ %570, %normal-dest1971 ], [ %443, %normal-dest1376 ], [ %461, %normal-dest1451 ], [ %586, %normal-dest2048 ], [ %507, %normal-dest1731 ], [ %535, %normal-dest1821 ], [ %270, %normal-dest502 ], [ %449, %normal-dest1418 ], [ %447, %normal-dest1389 ], [ %370, %normal-dest971 ], [ %50, %tag129 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = inttoptr i64 %return-value.sroa.0.0 to {}*
  %32 = insertvalue { {}*, i64 } undef, {}* %31, 0
  %33 = insertvalue { {}*, i64 } %32, i64 %return-value.sroa.94.0, 1
  ret { {}*, i64 } %33

tag38:                                            ; preds = %header-check-br557, %header-check-br557, %header-check-br557, %header-check-br557
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest581 unwind label %cleanup-lpad.loopexit

tag49:                                            ; preds = %tag274
  %36 = ptrtoint {}* %.in2341 to i64
  %single-float-tag-only627 = and i64 %36, 7
  %fixnum-tag-only8982356 = and i64 %36, 3
  %fixnump-test899 = icmp ne i64 %fixnum-tag-only8982356, 0
  %test1137 = icmp eq i64 %single-float-tag-only627, 1
  %or.cond2549 = and i1 %fixnump-test899, %test1137
  br i1 %or.cond2549, label %header-check-br1134, label %tag235

tag52:                                            ; preds = %normal-dest1043
  %37 = add i64 %237, 5
  %38 = inttoptr i64 %37 to {}**
  %39 = load {}*, {}** %38, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag422.backedge

tag422.backedge:                                  ; preds = %tag52, %normal-dest740
  %40 = phi {}* [ %.pre, %tag52 ], [ %308, %normal-dest740 ]
  %"%DOLIST-VAR.1.be" = phi {}* [ %39, %tag52 ], [ %"%DOLIST-VAR.2", %normal-dest740 ]
  %41 = icmp eq {}* %"%DOLIST-VAR.1.be", %40
  br i1 %41, label %tag415, label %tag409

tag58:                                            ; preds = %tag68.tag58_crit_edge, %header-check-br573, %header-check-br557, %tag24, %tag378, %tag410
  %.val2578 = phi {}* [ %.val2578.pre, %tag68.tag58_crit_edge ], [ %147, %tag410 ], [ %147, %tag378 ], [ %147, %tag24 ], [ %147, %header-check-br557 ], [ %147, %header-check-br573 ]
  %42 = phi {}* [ %51, %tag68.tag58_crit_edge ], [ %.val2583, %tag410 ], [ %.val2583, %tag378 ], [ %.val2583, %tag24 ], [ %.val2583, %header-check-br557 ], [ %.val2583, %header-check-br573 ]
  %43 = phi i64 [ %50, %tag68.tag58_crit_edge ], [ %146, %tag410 ], [ %146, %tag378 ], [ %146, %tag24 ], [ %146, %header-check-br557 ], [ %146, %header-check-br573 ]
  %44 = add i64 %156, 5
  %45 = inttoptr i64 %44 to {}**
  %46 = load {}*, {}** %45, align 8
  %47 = icmp eq {}* %46, %42
  %object.0 = select i1 %47, {}* %.val2578, {}* %42
  %48 = icmp eq {}* %object.0, %42
  %G340703.0 = select i1 %48, {}* %.val2578, {}* %42
  %49 = icmp eq {}* %G340703.0, %42
  br i1 %49, label %tag387, label %tag240

tag68:                                            ; preds = %tag238, %normal-dest589
  %50 = phi i64 [ %290, %normal-dest589 ], [ %146, %tag238 ]
  %51 = phi {}* [ %289, %normal-dest589 ], [ %.val2583, %tag238 ]
  %G340728.0 = phi {}* [ %G340728.1, %normal-dest589 ], [ %147, %tag238 ]
  %52 = icmp eq {}* %G340728.0, %51
  br i1 %52, label %tag68.tag58_crit_edge, label %tag129

tag68.tag58_crit_edge:                            ; preds = %tag68
  %.val2578.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag58

tag80:                                            ; preds = %normal-dest543, %normal-dest1128
  %53 = phi {}* [ %400, %normal-dest1128 ], [ %273, %normal-dest543 ]
  %G340936.0 = phi {}* [ %G340936.1, %normal-dest1128 ], [ %.val2568, %normal-dest543 ]
  %54 = icmp eq {}* %G340936.0, %53
  br i1 %54, label %tag234, label %tag125

tag87:                                            ; preds = %header-check-br1502, %header-check-br1502, %header-check-br1502, %header-check-br1502
  %55 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %56 = invoke {}* @cc_safe_fdefinition({}* %55)
          to label %normal-dest719 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag88:                                            ; preds = %tag148
  %57 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest733 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag89:                                            ; preds = %header-check-br694, %header-check-br694, %header-check-br694, %header-check-br694
  %59 = ptrtoint {}* %245 to i64
  %single-float-tag-only747 = and i64 %59, 7
  %fixnum-tag-only6822386 = and i64 %59, 3
  %fixnump-test683 = icmp ne i64 %fixnum-tag-only6822386, 0
  %test1605 = icmp eq i64 %single-float-tag-only747, 1
  %or.cond2559 = and i1 %fixnump-test683, %test1605
  br i1 %or.cond2559, label %header-check-br1602, label %tag253

tag98:                                            ; preds = %tag380
  %60 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest764 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag99:                                            ; preds = %tag405
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %63 = invoke {}* @cc_safe_fdefinition({}* %62)
          to label %normal-dest784 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag104:                                           ; preds = %tag406
  %64 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest814 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag105:                                           ; preds = %tag208, %tag193, %tag384
  %66 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %67 = invoke {}* @cc_safe_fdefinition({}* %66)
          to label %normal-dest829 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag110:                                           ; preds = %header-check-br1145, %header-check-br1145, %header-check-br1145, %header-check-br1145
  %68 = ptrtoint {}* %313 to i64
  %single-float-tag-only855 = and i64 %68, 7
  %69 = icmp eq i64 %single-float-tag-only855, 6
  br i1 %69, label %tag274, label %tag254

tag114:                                           ; preds = %tag207
  %70 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 378), align 16
  %71 = invoke {}* @cc_safe_fdefinition({}* %70)
          to label %normal-dest867 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag115:                                           ; preds = %tag217
  %fixnum-tag-only8802217 = and i64 %135, 3
  %fixnump-test881 = icmp ne i64 %fixnum-tag-only8802217, 0
  %test490 = icmp eq i64 %single-float-tag-only1341, 1
  %or.cond2530 = and i1 %fixnump-test881, %test490
  br i1 %or.cond2530, label %header-check-br487, label %tag234

tag123:                                           ; preds = %normal-dest1074
  %72 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 380), align 16
  %73 = invoke {}* @cc_safe_fdefinition({}* %72)
          to label %normal-dest910 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag125:                                           ; preds = %tag80
  %74 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest936 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag126:                                           ; preds = %header-check-br806, %header-check-br806, %header-check-br806, %header-check-br806
  %76 = ptrtoint {}* %577 to i64
  %single-float-tag-only973 = and i64 %76, 7
  %fixnum-tag-only10512455 = and i64 %76, 3
  %fixnump-test1052 = icmp ne i64 %fixnum-tag-only10512455, 0
  %test1742 = icmp eq i64 %single-float-tag-only973, 1
  %or.cond2560 = and i1 %fixnump-test1052, %test1742
  br i1 %or.cond2560, label %header-check-br1739, label %tag193

tag129:                                           ; preds = %tag68
  %77 = icmp eq {}* %"%SUBLIST340625.02612", %51
  br i1 %77, label %tag387, label %tag32

tag131:                                           ; preds = %normal-dest771
  %78 = ptrtoint {}* %.in2341 to i64
  %single-float-tag-only983 = and i64 %78, 7
  %79 = icmp eq i64 %single-float-tag-only983, 6
  br i1 %79, label %tag274, label %tag231

tag148:                                           ; preds = %normal-dest1043
  %80 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %81 = icmp eq {}* %"%DOLIST-VAR.12614", %80
  %.val2596 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341004.0 = select i1 %81, {}* %.val2596, {}* %80
  %82 = icmp eq {}* %G341004.0, %80
  br i1 %82, label %tag88, label %tag415

tag150:                                           ; preds = %normal-dest481, %tag164
  %ZEIT.0 = phi {}* [ %97, %tag164 ], [ %ZEIT.1, %normal-dest481 ]
  %83 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %84 = invoke {}* @cc_safe_fdefinition({}* %83)
          to label %normal-dest1036 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag152:                                           ; preds = %tag384
  %85 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest1054 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag153:                                           ; preds = %header-check-br799, %header-check-br799, %header-check-br799, %header-check-br799
  %87 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest1081 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag154:                                           ; preds = %header-check-br1602, %header-check-br1602, %header-check-br1602, %header-check-br1602
  %89 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest1097 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag155:                                           ; preds = %tag235
  %91 = ptrtoint {}* %.in2341 to i64
  %single-float-tag-only1112 = and i64 %91, 7
  %92 = icmp eq i64 %single-float-tag-only1112, 6
  br i1 %92, label %tag258, label %tag357

tag161:                                           ; preds = %header-check-br1806, %header-check-br1806, %header-check-br1806, %header-check-br1806
  %93 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %94 = invoke {}* @cc_safe_fdefinition({}* %93)
          to label %normal-dest1121 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag164:                                           ; preds = %tag409
  %95 = add i64 %237, -3
  %96 = inttoptr i64 %95 to {}**
  %97 = load {}*, {}** %96, align 8
  br label %tag150

tag173:                                           ; preds = %tag352
  %98 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %99 = invoke {}* @cc_safe_fdefinition({}* %98)
          to label %normal-dest1170 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag176:                                           ; preds = %normal-dest2146
  %100 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 396), align 16
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest1190 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag180:                                           ; preds = %header-check-br1134, %header-check-br1134, %header-check-br1134, %header-check-br1134
  %102 = ptrtoint {}* %173 to i64
  %single-float-tag-only1217 = and i64 %102, 7
  %fixnum-tag-only2358 = and i64 %102, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only2358, 0
  %test1425 = icmp eq i64 %single-float-tag-only1217, 1
  %or.cond2555 = and i1 %fixnump-test, %test1425
  br i1 %or.cond2555, label %header-check-br1422, label %tag235

tag187:                                           ; preds = %tag2
  %103 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %104 = invoke {}* @cc_safe_fdefinition({}* %103)
          to label %normal-dest1242 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag188:                                           ; preds = %tag249
  br i1 %154, label %tag345, label %tag238

tag190:                                           ; preds = %header-check-br1015, %header-check-br1015, %header-check-br1015, %header-check-br1015
  %105 = ptrtoint {}* %253 to i64
  %single-float-tag-only1262 = and i64 %105, 7
  %fixnum-tag-only7012475 = and i64 %105, 3
  %fixnump-test702 = icmp ne i64 %fixnum-tag-only7012475, 0
  %test1505 = icmp eq i64 %single-float-tag-only1262, 1
  %or.cond2558 = and i1 %fixnump-test702, %test1505
  br i1 %or.cond2558, label %header-check-br1502, label %tag191

tag191:                                           ; preds = %tag269.tag191_crit_edge, %header-check-br1015, %header-check-br1502, %tag190, %tag245, %tag392
  %.val2598 = phi {}* [ %.val2598.pre, %tag269.tag191_crit_edge ], [ %.val, %tag392 ], [ %.val, %tag245 ], [ %.val, %tag190 ], [ %.val, %header-check-br1502 ], [ %.val, %header-check-br1015 ]
  %.val25992635 = phi {}* [ %.val2599, %tag269.tag191_crit_edge ], [ %.val2563, %tag392 ], [ %.val2563, %tag245 ], [ %.val2563, %tag190 ], [ %.val2563, %header-check-br1502 ], [ %.val2563, %header-check-br1015 ]
  %106 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %107 = icmp eq {}* %106, %farg2
  %G340982.0 = select i1 %107, {}* %.val2598, {}* %.val25992635
  %108 = icmp eq {}* %G340982.0, %.val25992635
  br i1 %108, label %tag412, label %tag252

tag192:                                           ; preds = %normal-dest771, %normal-dest469
  %.val2575 = phi {}* [ %257, %normal-dest469 ], [ %311, %normal-dest771 ]
  %G340879.0 = phi {}* [ %G340879.1, %normal-dest469 ], [ %.val2572, %normal-dest771 ]
  %109 = icmp eq {}* %G340879.0, %.val2575
  br i1 %109, label %tag192.tag274_crit_edge, label %tag263

tag192.tag274_crit_edge:                          ; preds = %tag192
  %.val2574.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag274

tag193:                                           ; preds = %tag352.tag193_crit_edge, %header-check-br806, %header-check-br1739, %tag206, %tag268, %tag126
  %.val25862615 = phi {}* [ %.val25862615.pre, %tag352.tag193_crit_edge ], [ %.val2564, %tag126 ], [ %.val2564, %tag268 ], [ %.val2564, %tag206 ], [ %.val2564, %header-check-br1739 ], [ %.val2564, %header-check-br806 ]
  %110 = phi {}* [ %206, %tag352.tag193_crit_edge ], [ %575, %tag126 ], [ %575, %tag268 ], [ %575, %tag206 ], [ %575, %header-check-br1739 ], [ %575, %header-check-br806 ]
  %111 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 369), align 8
  %112 = icmp eq {}* %111, %110
  %object1278.02616 = select i1 %112, {}* %.val25862615, {}* %110
  %113 = icmp eq {}* %object1278.02616, %110
  %G341078.02617 = select i1 %113, {}* %.val25862615, {}* %110
  %114 = icmp eq {}* %G341078.02617, %110
  br i1 %114, label %tag105, label %tag405.lr.ph

tag405.lr.ph:                                     ; preds = %tag193
  %115 = ptrtoint {}* %.in2440 to i64
  %single-float-tag-only2058 = and i64 %115, 7
  %fixnum-tag-only8642438 = and i64 %115, 3
  %fixnump-test865 = icmp eq i64 %fixnum-tag-only8642438, 0
  %test631 = icmp ne i64 %single-float-tag-only2058, 1
  %gep633 = getelementptr inbounds i8, i8* %576, i64 -9
  %irc-bit-cast634 = bitcast i8* %gep633 to i64*
  %brmerge = or i1 %test631, %fixnump-test865
  br label %tag405

tag201:                                           ; preds = %header-check-br1429, %header-check-br1429, %header-check-br1429, %header-check-br1429
  %116 = ptrtoint {}* %162 to i64
  %single-float-tag-only1287 = and i64 %116, 7
  %fixnum-tag-only7162378 = and i64 %116, 3
  %fixnump-test717 = icmp ne i64 %fixnum-tag-only7162378, 0
  %test802 = icmp eq i64 %single-float-tag-only1287, 1
  %or.cond2542 = and i1 %fixnump-test717, %test802
  br i1 %or.cond2542, label %header-check-br799, label %tag374

tag203:                                           ; preds = %header-check-br1739, %header-check-br1739, %header-check-br1739, %header-check-br1739
  %117 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %118 = invoke {}* @cc_safe_fdefinition({}* %117)
          to label %normal-dest1289 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag206:                                           ; preds = %normal-dest2010
  %119 = ptrtoint {}* %.in2440 to i64
  %single-float-tag-only1317 = and i64 %119, 7
  %120 = icmp eq i64 %single-float-tag-only1317, 6
  br i1 %120, label %tag193, label %tag268

tag207:                                           ; preds = %tag274, %normal-dest1638
  %.val2577 = phi {}* [ %502, %normal-dest1638 ], [ %.val25752633, %tag274 ]
  %G340831.0 = phi {}* [ %G340831.1, %normal-dest1638 ], [ %.val2574, %tag274 ]
  %121 = icmp eq {}* %G340831.0, %.val2577
  br i1 %121, label %tag207.tag235_crit_edge, label %tag114

tag207.tag235_crit_edge:                          ; preds = %tag207
  %.val2576.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag235

tag208:                                           ; preds = %tag336.tag208_crit_edge, %header-check-br628, %header-check-br1334, %tag321, %tag395
  %.val2586 = phi {}* [ %.val2586.pre, %tag336.tag208_crit_edge ], [ %25, %tag395 ], [ %25, %tag321 ], [ %25, %header-check-br1334 ], [ %25, %header-check-br628 ]
  %122 = phi {}* [ %200, %tag336.tag208_crit_edge ], [ %.val2591, %tag395 ], [ %.val2591, %tag321 ], [ %.val2591, %header-check-br1334 ], [ %.val2591, %header-check-br628 ]
  %123 = add i64 %236, 5
  %124 = inttoptr i64 %123 to {}**
  %125 = load {}*, {}** %124, align 8
  %126 = icmp eq {}* %125, %122
  %object1278.0 = select i1 %126, {}* %.val2586, {}* %122
  %127 = icmp eq {}* %object1278.0, %122
  %G341078.0 = select i1 %127, {}* %.val2586, {}* %122
  %128 = icmp eq {}* %G341078.0, %122
  br i1 %128, label %tag105, label %tag405

tag213:                                           ; preds = %tag249
  %129 = add i64 %156, -3
  %130 = inttoptr i64 %129 to {}**
  %131 = load {}*, {}** %130, align 8
  br label %tag238

tag215:                                           ; preds = %tag224
  %132 = add i64 %236, -3
  %133 = inttoptr i64 %132 to {}**
  %134 = load {}*, {}** %133, align 8
  br label %tag23

tag217:                                           ; preds = %normal-dest543
  %135 = ptrtoint {}* %.in to i64
  %single-float-tag-only1341 = and i64 %135, 7
  %136 = icmp eq i64 %single-float-tag-only1341, 6
  br i1 %136, label %tag234, label %tag115

tag218:                                           ; preds = %tag424
  %fixnum-tag-only13422384 = and i64 %251, 3
  %fixnump-test1343 = icmp ne i64 %fixnum-tag-only13422384, 0
  %test697 = icmp eq i64 %single-float-tag-only2152, 1
  %or.cond2538 = and i1 %fixnump-test1343, %test697
  br i1 %or.cond2538, label %header-check-br694, label %tag253

tag224:                                           ; preds = %tag405
  %137 = icmp eq {}* %G341132.0, %234
  br i1 %137, label %tag406, label %tag215

tag227:                                           ; preds = %tag290
  %fixnum-tag-only13652339 = and i64 %182, 3
  %fixnump-test1366 = icmp ne i64 %fixnum-tag-only13652339, 0
  %test1005 = icmp eq i64 %single-float-tag-only1658, 1
  %or.cond2546 = and i1 %fixnump-test1366, %test1005
  br i1 %or.cond2546, label %header-check-br1002, label %tag230

tag229:                                           ; preds = %tag253
  %138 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only1367 = and i64 %138, 7
  %fixnum-tag-only5642376 = and i64 %138, 3
  %fixnump-test565 = icmp ne i64 %fixnum-tag-only5642376, 0
  %test1432 = icmp eq i64 %single-float-tag-only1367, 1
  %or.cond2556 = and i1 %fixnump-test565, %test1432
  br i1 %or.cond2556, label %header-check-br1429, label %tag374

tag230:                                           ; preds = %header-check-br1002, %header-check-br1182, %tag227, %tag290, %tag266, %tag371, %tag401
  %139 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %140 = invoke {}* @cc_safe_fdefinition({}* %139)
          to label %normal-dest1369 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag231:                                           ; preds = %tag131
  %fixnum-tag-only13772364 = and i64 %78, 3
  %fixnump-test1378 = icmp ne i64 %fixnum-tag-only13772364, 0
  %test1148 = icmp eq i64 %single-float-tag-only983, 1
  %or.cond2551 = and i1 %fixnump-test1378, %test1148
  br i1 %or.cond2551, label %header-check-br1145, label %tag274

tag234:                                           ; preds = %header-check-br487, %header-check-br1806, %tag353, %tag115, %tag217, %tag80
  %141 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %142 = invoke {}* @cc_safe_fdefinition({}* %141)
          to label %normal-dest1382 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag235:                                           ; preds = %tag207.tag235_crit_edge, %header-check-br1422, %header-check-br1134, %tag180, %tag49
  %.val2576 = phi {}* [ %.val2576.pre, %tag207.tag235_crit_edge ], [ %.val2574, %tag49 ], [ %.val2574, %tag180 ], [ %.val2574, %header-check-br1134 ], [ %.val2574, %header-check-br1422 ]
  %.val25772634 = phi {}* [ %.val2577, %tag207.tag235_crit_edge ], [ %.val25752633, %tag49 ], [ %.val25752633, %tag180 ], [ %.val25752633, %header-check-br1134 ], [ %.val25752633, %header-check-br1422 ]
  %143 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %144 = icmp eq {}* %.in2341, %143
  %G340812.0 = select i1 %144, {}* %.val2576, {}* %.val25772634
  %145 = icmp eq {}* %G340812.0, %.val25772634
  br i1 %145, label %tag155, label %tag20

tag238:                                           ; preds = %tag188, %normal-dest1858, %tag213
  %146 = phi i64 [ %153, %tag213 ], [ %547, %normal-dest1858 ], [ %153, %tag188 ]
  %.val2583 = phi {}* [ %155, %tag213 ], [ %546, %normal-dest1858 ], [ %G340757.0, %tag188 ]
  %147 = phi {}* [ %G340757.0, %tag213 ], [ %.val2582.pre, %normal-dest1858 ], [ %G340757.0, %tag188 ]
  %.in2318 = phi {}* [ %131, %tag213 ], [ %.in2317, %normal-dest1858 ], [ %G340757.0, %tag188 ]
  %148 = bitcast {}* %.in2318 to i8*
  %149 = icmp eq {}* %.in2314, %.in2318
  %G340737.0 = select i1 %149, {}* %147, {}* %.val2583
  %150 = icmp eq {}* %G340737.0, %.val2583
  br i1 %150, label %tag24, label %tag68

tag239:                                           ; preds = %normal-dest1617
  %151 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 396), align 16
  %152 = invoke {}* @cc_safe_fdefinition({}* %151)
          to label %normal-dest1411 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag240:                                           ; preds = %tag240.lr.ph, %tag58
  %153 = phi i64 [ %562, %tag240.lr.ph ], [ %43, %tag58 ]
  %G340757.0 = phi {}* [ %.val25782609, %tag240.lr.ph ], [ %.val2578, %tag58 ]
  %154 = phi i1 [ %560, %tag240.lr.ph ], [ %48, %tag58 ]
  %155 = phi {}* [ %558, %tag240.lr.ph ], [ %42, %tag58 ]
  %"%SUBLIST340625.02612" = phi {}* [ %"%SUBLIST340625.2", %tag240.lr.ph ], [ %46, %tag58 ]
  %156 = ptrtoint {}* %"%SUBLIST340625.02612" to i64
  %tag-only14202293 = and i64 %156, 7
  %consp-test1421 = icmp eq i64 %tag-only14202293, 3
  br i1 %consp-test1421, label %tag249, label %tag276

tag244:                                           ; preds = %tag401
  %157 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 388), align 16
  %158 = invoke {}* @cc_safe_fdefinition({}* %157)
          to label %normal-dest1444 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag245:                                           ; preds = %tag392
  %fixnum-tag-only14522473 = and i64 %229, 3
  %fixnump-test1453 = icmp ne i64 %fixnum-tag-only14522473, 0
  %test1018 = icmp eq i64 %single-float-tag-only2057, 1
  %or.cond2547 = and i1 %fixnump-test1453, %test1018
  br i1 %or.cond2547, label %header-check-br1015, label %tag191

tag249:                                           ; preds = %tag240
  %159 = icmp eq {}* %G340757.0, %155
  br i1 %159, label %tag188, label %tag213

tag252:                                           ; preds = %tag191, %normal-dest2107
  %160 = phi {}* [ %588, %normal-dest2107 ], [ %.val25992635, %tag191 ]
  %G340973.0 = phi {}* [ %G340973.1, %normal-dest2107 ], [ %.val2598, %tag191 ]
  %161 = icmp eq {}* %G340973.0, %160
  br i1 %161, label %tag369, label %tag415

tag253:                                           ; preds = %tag420.tag253_crit_edge, %header-check-br1602, %header-check-br694, %tag89, %tag218, %tag424
  %.val2570 = phi {}* [ %.val2570.pre, %tag420.tag253_crit_edge ], [ %.val2566, %tag424 ], [ %.val2566, %tag218 ], [ %.val2566, %tag89 ], [ %.val2566, %header-check-br694 ], [ %.val2566, %header-check-br1602 ]
  %.val25712637 = phi {}* [ %.val2571, %tag420.tag253_crit_edge ], [ %.val2567, %tag424 ], [ %.val2567, %tag218 ], [ %.val2567, %tag89 ], [ %.val2567, %header-check-br694 ], [ %.val2567, %header-check-br1602 ]
  %162 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %163 = icmp eq {}* %162, %farg2
  %G340906.0 = select i1 %163, {}* %.val2570, {}* %.val25712637
  %164 = icmp eq {}* %G340906.0, %.val25712637
  br i1 %164, label %tag229, label %tag380

tag254:                                           ; preds = %tag110
  %fixnum-tag-only14922366 = and i64 %68, 3
  %fixnump-test1493 = icmp ne i64 %fixnum-tag-only14922366, 0
  %test1482 = icmp eq i64 %single-float-tag-only855, 1
  %or.cond2557 = and i1 %fixnump-test1493, %test1482
  br i1 %or.cond2557, label %header-check-br1479, label %tag274

tag258:                                           ; preds = %tag20.tag258_crit_edge, %header-check-br1839, %header-check-br856, %tag318, %tag155, %tag357
  %.val2584 = phi {}* [ %.val2584.pre, %tag20.tag258_crit_edge ], [ %.val2576, %tag357 ], [ %.val2576, %tag155 ], [ %.val2576, %tag318 ], [ %.val2576, %header-check-br856 ], [ %.val2576, %header-check-br1839 ]
  %.val25852631 = phi {}* [ %.val2585, %tag20.tag258_crit_edge ], [ %.val25772634, %tag357 ], [ %.val25772634, %tag155 ], [ %.val25772634, %tag318 ], [ %.val25772634, %header-check-br856 ], [ %.val25772634, %header-check-br1839 ]
  %165 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 367), align 8
  %166 = icmp eq {}* %.in2341, %165
  %G340686.0 = select i1 %166, {}* %.val2584, {}* %.val25852631
  %167 = icmp eq {}* %G340686.0, %.val25852631
  br i1 %167, label %tag290, label %tag401

tag260:                                           ; preds = %normal-dest1559
  %168 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %169 = invoke {}* @cc_safe_fdefinition({}* %168)
          to label %normal-dest1510 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag263:                                           ; preds = %tag192
  %170 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 170), align 16
  %171 = invoke {}* @cc_safe_symbol_value({}* %170)
          to label %normal-dest1559 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag266:                                           ; preds = %tag371
  %fixnum-tag-only15622342 = and i64 %216, 3
  %fixnump-test1563 = icmp ne i64 %fixnum-tag-only15622342, 0
  %test1185 = icmp eq i64 %single-float-tag-only1955, 1
  %or.cond2552 = and i1 %fixnump-test1563, %test1185
  br i1 %or.cond2552, label %header-check-br1182, label %tag230

tag268:                                           ; preds = %tag206
  %fixnum-tag-only15642453 = and i64 %119, 3
  %fixnump-test1565 = icmp ne i64 %fixnum-tag-only15642453, 0
  %test809 = icmp eq i64 %single-float-tag-only1317, 1
  %or.cond2543 = and i1 %fixnump-test1565, %test809
  br i1 %or.cond2543, label %header-check-br806, label %tag193

tag269:                                           ; preds = %normal-dest, %normal-dest726
  %.val2599 = phi {}* [ %302, %normal-dest726 ], [ %.val2563, %normal-dest ]
  %G341163.0 = phi {}* [ %G341163.1, %normal-dest726 ], [ %.val, %normal-dest ]
  %172 = icmp eq {}* %G341163.0, %.val2599
  br i1 %172, label %tag269.tag191_crit_edge, label %tag382

tag269.tag191_crit_edge:                          ; preds = %tag269
  %.val2598.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag191

tag274:                                           ; preds = %tag192.tag274_crit_edge, %header-check-br1145, %header-check-br1479, %tag110, %tag254, %tag131, %tag231
  %.val2574 = phi {}* [ %.val2574.pre, %tag192.tag274_crit_edge ], [ %.val2572, %tag231 ], [ %.val2572, %tag131 ], [ %.val2572, %tag254 ], [ %.val2572, %tag110 ], [ %.val2572, %header-check-br1479 ], [ %.val2572, %header-check-br1145 ]
  %.val25752633 = phi {}* [ %.val2575, %tag192.tag274_crit_edge ], [ %311, %tag231 ], [ %311, %tag131 ], [ %311, %tag254 ], [ %311, %tag110 ], [ %311, %header-check-br1479 ], [ %311, %header-check-br1145 ]
  %173 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %174 = icmp eq {}* %.in2341, %173
  %G340840.0 = select i1 %174, {}* %.val2574, {}* %.val25752633
  %175 = icmp eq {}* %G340840.0, %.val25752633
  br i1 %175, label %tag49, label %tag207

tag276:                                           ; preds = %tag240
  %176 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %177 = invoke {}* @cc_safe_fdefinition({}* %176)
          to label %normal-dest1594 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag280:                                           ; preds = %normal-dest1533, %normal-dest1559
  %178 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 378), align 16
  %179 = invoke {}* @cc_safe_fdefinition({}* %178)
          to label %normal-dest1610 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag282:                                           ; preds = %header-check-br1422, %header-check-br1422, %header-check-br1422, %header-check-br1422
  %180 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %181 = invoke {}* @cc_safe_fdefinition({}* %180)
          to label %normal-dest1631 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag290:                                           ; preds = %tag258
  %182 = ptrtoint {}* %.in2341 to i64
  %single-float-tag-only1658 = and i64 %182, 7
  %183 = icmp eq i64 %single-float-tag-only1658, 6
  br i1 %183, label %tag230, label %tag227

tag297:                                           ; preds = %header-check-br1839, %header-check-br1839, %header-check-br1839, %header-check-br1839
  %184 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %185 = invoke {}* @cc_safe_fdefinition({}* %184)
          to label %normal-dest1676 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag309:                                           ; preds = %normal-dest2146
  %186 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 394), align 16
  %187 = invoke {}* @cc_safe_fdefinition({}* %186)
          to label %normal-dest1709 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag312:                                           ; preds = %normal-dest874
  %188 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 394), align 16
  %189 = invoke {}* @cc_safe_fdefinition({}* %188)
          to label %normal-dest1724 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag318:                                           ; preds = %header-check-br856, %header-check-br856, %header-check-br856, %header-check-br856
  %190 = ptrtoint {}* %143 to i64
  %single-float-tag-only1746 = and i64 %190, 7
  %fixnum-tag-only5952350 = and i64 %190, 3
  %fixnump-test596 = icmp ne i64 %fixnum-tag-only5952350, 0
  %test1842 = icmp eq i64 %single-float-tag-only1746, 1
  %or.cond2562 = and i1 %fixnump-test596, %test1842
  br i1 %or.cond2562, label %header-check-br1839, label %tag258

tag321:                                           ; preds = %header-check-br628, %header-check-br628, %header-check-br628, %header-check-br628
  %191 = ptrtoint {}* %.in2444 to i64
  %single-float-tag-only1754 = and i64 %191, 7
  %fixnum-tag-only6852441 = and i64 %191, 3
  %fixnump-test686 = icmp ne i64 %fixnum-tag-only6852441, 0
  %test1337 = icmp eq i64 %single-float-tag-only1754, 1
  %or.cond2553 = and i1 %fixnump-test686, %test1337
  br i1 %or.cond2553, label %header-check-br1334, label %tag208

tag323:                                           ; preds = %tag20
  %192 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 170), align 16
  %193 = invoke {}* @cc_safe_symbol_value({}* %192)
          to label %normal-dest1763 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag324:                                           ; preds = %header-check-br792, %header-check-br792, %header-check-br792, %header-check-br792
  %194 = ptrtoint {}* %106 to i64
  %single-float-tag-only1764 = and i64 %194, 7
  %195 = icmp eq i64 %single-float-tag-only1764, 6
  br i1 %195, label %tag369, label %tag360

tag328:                                           ; preds = %normal-dest1763
  %196 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %197 = invoke {}* @cc_safe_fdefinition({}* %196)
          to label %normal-dest1766 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag330:                                           ; preds = %normal-dest874
  %198 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 396), align 16
  %199 = invoke {}* @cc_safe_fdefinition({}* %198)
          to label %normal-dest1814 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag336:                                           ; preds = %tag23, %normal-dest1872
  %200 = phi {}* [ %549, %normal-dest1872 ], [ %.val2591, %tag23 ]
  %G341103.0 = phi {}* [ %G341103.1, %normal-dest1872 ], [ %25, %tag23 ]
  %201 = icmp eq {}* %G341103.0, %200
  br i1 %201, label %tag336.tag208_crit_edge, label %tag384

tag336.tag208_crit_edge:                          ; preds = %tag336
  %.val2586.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag208

tag345:                                           ; preds = %tag188
  %202 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %203 = invoke {}* @cc_safe_fdefinition({}* %202)
          to label %normal-dest1851 unwind label %cleanup-lpad.loopexit

tag346:                                           ; preds = %header-check-br1334, %header-check-br1334, %header-check-br1334, %header-check-br1334
  %204 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %205 = invoke {}* @cc_safe_fdefinition({}* %204)
          to label %normal-dest1865 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

tag352:                                           ; preds = %normal-dest2010, %normal-dest1297
  %206 = phi {}* [ %429, %normal-dest1297 ], [ %575, %normal-dest2010 ]
  %G341145.0 = phi {}* [ %G341145.1, %normal-dest1297 ], [ %.val2564, %normal-dest2010 ]
  %207 = icmp eq {}* %G341145.0, %206
  br i1 %207, label %tag352.tag193_crit_edge, label %tag173

tag352.tag193_crit_edge:                          ; preds = %tag352
  %.val25862615.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag193

tag353:                                           ; preds = %header-check-br487, %header-check-br487, %header-check-br487, %header-check-br487
  %208 = ptrtoint {}* %275 to i64
  %single-float-tag-only1893 = and i64 %208, 7
  %fixnum-tag-only11432219 = and i64 %208, 3
  %fixnump-test1144 = icmp ne i64 %fixnum-tag-only11432219, 0
  %test1809 = icmp eq i64 %single-float-tag-only1893, 1
  %or.cond2561 = and i1 %fixnump-test1144, %test1809
  br i1 %or.cond2561, label %header-check-br1806, label %tag234

tag354:                                           ; preds = %normal-dest917
  %209 = add i64 %355, 5
  %210 = inttoptr i64 %209 to {}**
  %211 = load {}*, {}** %210, align 8
  br label %tag22

tag357:                                           ; preds = %tag155
  %fixnum-tag-only18942348 = and i64 %91, 3
  %fixnump-test1895 = icmp ne i64 %fixnum-tag-only18942348, 0
  %test859 = icmp eq i64 %single-float-tag-only1112, 1
  %or.cond2544 = and i1 %fixnump-test1895, %test859
  br i1 %or.cond2544, label %header-check-br856, label %tag258

tag359:                                           ; preds = %normal-dest1190, %normal-dest1709
  %212 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %213 = invoke {}* @cc_safe_fdefinition({}* %212)
          to label %normal-dest1904 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag360:                                           ; preds = %tag324
  %fixnum-tag-only19312467 = and i64 %194, 3
  %fixnump-test1932 = icmp ne i64 %fixnum-tag-only19312467, 0
  %test1347 = icmp eq i64 %single-float-tag-only1764, 1
  %or.cond2554 = and i1 %fixnump-test1932, %test1347
  br i1 %or.cond2554, label %header-check-br1344, label %tag369

tag369:                                           ; preds = %header-check-br1344, %header-check-br792, %tag324, %tag360, %tag398, %tag412, %tag252
  %214 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %215 = invoke {}* @cc_safe_fdefinition({}* %214)
          to label %normal-dest1943 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag371:                                           ; preds = %header-check-br1002, %header-check-br1002, %header-check-br1002, %header-check-br1002
  %216 = ptrtoint {}* %165 to i64
  %single-float-tag-only1955 = and i64 %216, 7
  %217 = icmp eq i64 %single-float-tag-only1955, 6
  br i1 %217, label %tag230, label %tag266

tag374:                                           ; preds = %header-check-br1429, %header-check-br799, %tag201, %tag229, %tag380
  %218 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %219 = invoke {}* @cc_safe_fdefinition({}* %218)
          to label %normal-dest1964 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag376:                                           ; preds = %header-check-br1182, %header-check-br1182, %header-check-br1182, %header-check-br1182
  %220 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %221 = invoke {}* @cc_safe_fdefinition({}* %220)
          to label %normal-dest1980 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag378:                                           ; preds = %tag410
  %fixnum-tag-only19932315 = and i64 %239, 3
  %fixnump-test1994 = icmp ne i64 %fixnum-tag-only19932315, 0
  %test560 = icmp eq i64 %single-float-tag-only2098, 1
  %or.cond2531 = and i1 %fixnump-test1994, %test560
  br i1 %or.cond2531, label %header-check-br557, label %tag58

tag380:                                           ; preds = %tag253, %normal-dest1090
  %222 = phi {}* [ %396, %normal-dest1090 ], [ %.val25712637, %tag253 ]
  %G340897.0 = phi {}* [ %G340897.1, %normal-dest1090 ], [ %.val2570, %tag253 ]
  %223 = icmp eq {}* %G340897.0, %222
  br i1 %223, label %tag374, label %tag98

tag382:                                           ; preds = %tag269
  %224 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %225 = invoke {}* @cc_safe_fdefinition({}* %224)
          to label %normal-dest2003 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag384:                                           ; preds = %tag336
  %226 = icmp eq {}* %235, %200
  br i1 %226, label %tag105, label %tag152

tag387:                                           ; preds = %tag58, %normal-dest1925, %tag129
  %227 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 402), align 16
  %228 = invoke {}* @cc_safe_fdefinition({}* %227)
          to label %normal-dest2027 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag392:                                           ; preds = %normal-dest
  %229 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only2057 = and i64 %229, 7
  %230 = icmp eq i64 %single-float-tag-only2057, 6
  br i1 %230, label %tag191, label %tag245

tag395:                                           ; preds = %tag23
  br i1 %brmerge, label %tag208, label %header-check-br628

tag398:                                           ; preds = %tag412
  %fixnum-tag-only20662465 = and i64 %243, 3
  %fixnump-test2067 = icmp ne i64 %fixnum-tag-only20662465, 0
  %test795 = icmp eq i64 %single-float-tag-only2113, 1
  %or.cond2541 = and i1 %fixnump-test2067, %test795
  br i1 %or.cond2541, label %header-check-br792, label %tag369

tag401:                                           ; preds = %tag258, %normal-dest1987
  %231 = phi {}* [ %572, %normal-dest1987 ], [ %.val25852631, %tag258 ]
  %G340677.0 = phi {}* [ %G340677.1, %normal-dest1987 ], [ %.val2584, %tag258 ]
  %232 = icmp eq {}* %G340677.0, %231
  br i1 %232, label %tag230, label %tag244

tag405:                                           ; preds = %tag405.lr.ph, %tag208
  %G341132.0 = phi {}* [ %.val25862615, %tag405.lr.ph ], [ %.val2586, %tag208 ]
  %233 = phi i1 [ %113, %tag405.lr.ph ], [ %127, %tag208 ]
  %234 = phi {}* [ %110, %tag405.lr.ph ], [ %122, %tag208 ]
  %235 = phi {}* [ %111, %tag405.lr.ph ], [ %125, %tag208 ]
  %236 = ptrtoint {}* %235 to i64
  %tag-only20832392 = and i64 %236, 7
  %consp-test2084 = icmp eq i64 %tag-only20832392, 3
  br i1 %consp-test2084, label %tag224, label %tag99

tag406:                                           ; preds = %tag224
  br i1 %233, label %tag104, label %tag23

tag409:                                           ; preds = %tag409.preheader, %tag422.backedge
  %.val2595 = phi {}* [ %40, %tag422.backedge ], [ %23, %tag409.preheader ]
  %"%DOLIST-VAR.12614" = phi {}* [ %"%DOLIST-VAR.1.be", %tag422.backedge ], [ %"%DOLIST-VAR.0", %tag409.preheader ]
  %237 = ptrtoint {}* %"%DOLIST-VAR.12614" to i64
  %tag-only20962411 = and i64 %237, 7
  %consp-test2097 = icmp eq i64 %tag-only20962411, 3
  %.val2594 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341036.0 = select i1 %consp-test2097, {}* %.val2594, {}* %.val2595
  %238 = icmp eq {}* %G341036.0, %.val2595
  br i1 %238, label %tag12, label %tag164

tag410:                                           ; preds = %header-check-br573, %header-check-br573, %header-check-br573, %header-check-br573
  %239 = ptrtoint {}* %.in2318 to i64
  %single-float-tag-only2098 = and i64 %239, 7
  %240 = icmp eq i64 %single-float-tag-only2098, 6
  br i1 %240, label %tag58, label %tag378

tag411:                                           ; preds = %header-check-br1344, %header-check-br1344, %header-check-br1344, %header-check-br1344
  %241 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %242 = invoke {}* @cc_safe_fdefinition({}* %241)
          to label %normal-dest2100 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag412:                                           ; preds = %tag191
  %243 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only2113 = and i64 %243, 7
  %244 = icmp eq i64 %single-float-tag-only2113, 6
  br i1 %244, label %tag369, label %tag398

tag415:                                           ; preds = %tag422.backedge, %tag148, %tag2, %tag22, %normal-dest1943, %normal-dest1170, %normal-dest829, %tag252, %normal-dest1074
  %245 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %246 = icmp eq {}* %245, %farg2
  %.val2566 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %.val2567 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340963.0 = select i1 %246, {}* %.val2566, {}* %.val2567
  %247 = icmp eq {}* %G340963.0, %.val2567
  br i1 %247, label %tag424, label %tag420

tag420:                                           ; preds = %tag415, %normal-dest1105
  %.val2571 = phi {}* [ %398, %normal-dest1105 ], [ %.val2567, %tag415 ]
  %G340954.0 = phi {}* [ %G340954.1, %normal-dest1105 ], [ %.val2566, %tag415 ]
  %248 = icmp eq {}* %G340954.0, %.val2571
  br i1 %248, label %tag420.tag253_crit_edge, label %tag30

tag420.tag253_crit_edge:                          ; preds = %tag420
  %.val2570.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag253

tag423:                                           ; preds = %normal-dest1789, %normal-dest1763
  %249 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 378), align 16
  %250 = invoke {}* @cc_safe_fdefinition({}* %249)
          to label %normal-dest2139 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

tag424:                                           ; preds = %tag415
  %251 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only2152 = and i64 %251, 7
  %252 = icmp eq i64 %single-float-tag-only2152, 6
  br i1 %252, label %tag253, label %tag218

cleanup-lpad.loopexit:                            ; preds = %tag38, %normal-dest581, %tag345, %normal-dest1851
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest1036, %tag150, %normal-dest733, %tag88, %normal-dest473, %tag12
  %lpad.loopexit2600 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %tag104, %normal-dest814, %tag346, %normal-dest1865
  %lpad.loopexit2603 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %tag11, %normal-dest463, %tag21, %normal-dest495, %tag30, %normal-dest536, %tag87, %normal-dest719, %tag98, %normal-dest764, %tag99, %tag105, %normal-dest829, %tag114, %normal-dest867, %tag123, %normal-dest910, %tag125, %normal-dest936, %normal-dest938, %normal-dest940, %normal-dest947, %normal-dest959, %tag152, %normal-dest1054, %normal-dest1061, %normal-dest1067, %tag153, %normal-dest1081, %tag154, %normal-dest1097, %tag161, %normal-dest1121, %tag173, %normal-dest1170, %tag176, %normal-dest1190, %tag187, %normal-dest1242, %tag203, %normal-dest1289, %tag230, %normal-dest1369, %tag234, %normal-dest1382, %tag239, %normal-dest1411, %tag244, %normal-dest1444, %tag260, %normal-dest1510, %normal-dest1512, %normal-dest1514, %normal-dest1521, %normal-dest1533, %tag263, %normal-dest784, %tag276, %tag280, %normal-dest1610, %normal-dest1594, %tag282, %normal-dest1631, %tag297, %normal-dest1676, %tag309, %normal-dest1709, %tag312, %normal-dest1724, %tag323, %tag328, %normal-dest1766, %normal-dest1768, %normal-dest1770, %normal-dest1777, %normal-dest1789, %tag330, %normal-dest1814, %tag359, %normal-dest1904, %normal-dest1911, %normal-dest1918, %tag369, %normal-dest1943, %tag374, %normal-dest1964, %tag376, %normal-dest1980, %tag382, %normal-dest2003, %tag387, %normal-dest2027, %normal-dest2029, %normal-dest2036, %tag411, %normal-dest2100, %tag423, %normal-dest2139, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit2600, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit2603, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %253 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %254 = icmp eq {}* %253, %farg2
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %.val2563 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341172.0 = select i1 %254, {}* %.val, {}* %.val2563
  %255 = icmp eq {}* %G341172.0, %.val2563
  br i1 %255, label %tag392, label %tag269

normal-dest463:                                   ; preds = %tag11
  %ptrtoint466 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint466, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %256 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 2, {}* nonnull %.in2341, {}* nonnull %313, {}* null, {}* null)
          to label %normal-dest469 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest469:                                   ; preds = %normal-dest463
  %.elt2369 = extractvalue { {}*, i64 } %256, 0
  %.elt2371 = extractvalue { {}*, i64 } %256, 1
  %cond2174 = icmp eq i64 %.elt2371, 0
  %257 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340879.1 = select i1 %cond2174, {}* %257, {}* %.elt2369
  br label %tag192

normal-dest473:                                   ; preds = %tag12
  %258 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %259 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %260 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %261 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint475 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint476 = add i64 %ptrtoint475, 7
  %entry-point-addr477 = inttoptr i64 %entry-point-addr-uint476 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point478 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr477, align 8
  %262 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point478({}* %19, i64 5, {}* %258, {}* %259, {}* %"%DOLIST-VAR.12614", {}* %260, {}* %261)
          to label %normal-dest481 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest481:                                   ; preds = %normal-dest473
  %.elt2422 = extractvalue { {}*, i64 } %262, 0
  %.elt2424 = extractvalue { {}*, i64 } %262, 1
  %cond2180 = icmp eq i64 %.elt2424, 0
  %263 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ZEIT.1 = select i1 %cond2180, {}* %263, {}* %.elt2422
  br label %tag150

header-check-br487:                               ; preds = %tag115
  %gep492 = getelementptr inbounds i8, i8* %274, i64 -9
  %irc-bit-cast493 = bitcast i8* %gep492 to i64*
  %264 = load i64, i64* %irc-bit-cast493, align 8
  %265 = add i64 %264, -1309
  %266 = lshr i64 %265, 3
  %267 = shl i64 %265, 61
  %268 = or i64 %266, %267
  switch i64 %268, label %tag234 [
    i64 2, label %tag353
    i64 4, label %tag353
    i64 5, label %tag353
    i64 0, label %tag353
  ]

normal-dest495:                                   ; preds = %tag21
  %ptrtoint496 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint497 = add i64 %ptrtoint496, 7
  %entry-point-addr498 = inttoptr i64 %entry-point-addr-uint497 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point499 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr498, align 8
  %269 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point499({}* %22, i64 2, {}* %farg0, {}* %farg3, {}* null, {}* null)
          to label %normal-dest502 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest502:                                   ; preds = %normal-dest495
  %.elt2250 = extractvalue { {}*, i64 } %269, 0
  %270 = ptrtoint {}* %.elt2250 to i64
  %.elt2252 = extractvalue { {}*, i64 } %269, 1
  br label %tag32

normal-dest536:                                   ; preds = %tag30
  %271 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 365), align 8
  %ptrtoint537 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint538 = add i64 %ptrtoint537, 7
  %entry-point-addr539 = inttoptr i64 %entry-point-addr-uint538 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point540 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr539, align 8
  %272 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point540({}* %30, i64 2, {}* %farg0, {}* %271, {}* null, {}* null)
          to label %normal-dest543 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest543:                                   ; preds = %normal-dest536
  %.elt2195 = extractvalue { {}*, i64 } %272, 0
  %.elt2197 = extractvalue { {}*, i64 } %272, 1
  %cond2153 = icmp eq i64 %.elt2197, 0
  %273 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in = select i1 %cond2153, {}* %273, {}* %.elt2195
  %274 = bitcast {}* %.in to i8*
  %275 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %276 = icmp eq {}* %.in, %275
  %.val2568 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340945.0 = select i1 %276, {}* %.val2568, {}* %273
  %277 = icmp eq {}* %G340945.0, %273
  br i1 %277, label %tag217, label %tag80

header-check-br557:                               ; preds = %tag378
  %gep562 = getelementptr inbounds i8, i8* %148, i64 -9
  %irc-bit-cast563 = bitcast i8* %gep562 to i64*
  %278 = load i64, i64* %irc-bit-cast563, align 8
  %279 = add i64 %278, -1309
  %280 = lshr i64 %279, 3
  %281 = shl i64 %279, 61
  %282 = or i64 %280, %281
  switch i64 %282, label %tag58 [
    i64 2, label %tag38
    i64 4, label %tag38
    i64 5, label %tag38
    i64 0, label %tag38
  ]

header-check-br573:                               ; preds = %tag24
  %283 = load i64, i64* %irc-bit-cast579, align 8
  %284 = add i64 %283, -1309
  %285 = lshr i64 %284, 3
  %286 = shl i64 %284, 61
  %287 = or i64 %285, %286
  switch i64 %287, label %tag58 [
    i64 2, label %tag410
    i64 4, label %tag410
    i64 5, label %tag410
    i64 0, label %tag410
  ]

normal-dest581:                                   ; preds = %tag38
  %ptrtoint583 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint584 = add i64 %ptrtoint583, 7
  %entry-point-addr585 = inttoptr i64 %entry-point-addr-uint584 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point586 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr585, align 8
  %288 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point586({}* %35, i64 2, {}* nonnull %.in2314, {}* nonnull %.in2318, {}* null, {}* null)
          to label %normal-dest589 unwind label %cleanup-lpad.loopexit

normal-dest589:                                   ; preds = %normal-dest581
  %.elt2320 = extractvalue { {}*, i64 } %288, 0
  %.elt2322 = extractvalue { {}*, i64 } %288, 1
  %cond2169 = icmp eq i64 %.elt2322, 0
  %289 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340728.1 = select i1 %cond2169, {}* %289, {}* %.elt2320
  %290 = ptrtoint {}* %289 to i64
  br label %tag68

header-check-br628:                               ; preds = %tag395
  %291 = load i64, i64* %irc-bit-cast634, align 8
  %292 = add i64 %291, -1309
  %293 = lshr i64 %292, 3
  %294 = shl i64 %292, 61
  %295 = or i64 %293, %294
  switch i64 %295, label %tag208 [
    i64 2, label %tag321
    i64 4, label %tag321
    i64 5, label %tag321
    i64 0, label %tag321
  ]

header-check-br694:                               ; preds = %tag218
  %irc-bit-cast698 = bitcast {}* %farg2 to i8*
  %gep699 = getelementptr inbounds i8, i8* %irc-bit-cast698, i64 -9
  %irc-bit-cast700 = bitcast i8* %gep699 to i64*
  %296 = load i64, i64* %irc-bit-cast700, align 8
  %297 = add i64 %296, -1309
  %298 = lshr i64 %297, 3
  %299 = shl i64 %297, 61
  %300 = or i64 %298, %299
  switch i64 %300, label %tag253 [
    i64 2, label %tag89
    i64 4, label %tag89
    i64 5, label %tag89
    i64 0, label %tag89
  ]

normal-dest719:                                   ; preds = %tag87
  %ptrtoint720 = ptrtoint {}* %56 to i64
  %entry-point-addr-uint721 = add i64 %ptrtoint720, 7
  %entry-point-addr722 = inttoptr i64 %entry-point-addr-uint721 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point723 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr722, align 8
  %301 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point723({}* %56, i64 2, {}* nonnull %farg2, {}* nonnull %253, {}* null, {}* null)
          to label %normal-dest726 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest726:                                   ; preds = %normal-dest719
  %.elt2478 = extractvalue { {}*, i64 } %301, 0
  %.elt2480 = extractvalue { {}*, i64 } %301, 1
  %cond2187 = icmp eq i64 %.elt2480, 0
  %302 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341163.1 = select i1 %cond2187, {}* %302, {}* %.elt2478
  br label %tag269

normal-dest733:                                   ; preds = %tag88
  %303 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %304 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %305 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %306 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint734 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint735 = add i64 %ptrtoint734, 7
  %entry-point-addr736 = inttoptr i64 %entry-point-addr-uint735 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point737 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr736, align 8
  %307 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point737({}* %58, i64 5, {}* %303, {}* %304, {}* %"%DOLIST-VAR.12614", {}* %305, {}* %306)
          to label %normal-dest740 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest740:                                   ; preds = %normal-dest733
  %.elt2418 = extractvalue { {}*, i64 } %307, 0
  %.elt2420 = extractvalue { {}*, i64 } %307, 1
  %cond2179 = icmp eq i64 %.elt2420, 0
  %308 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond2179, {}* %308, {}* %.elt2418
  br label %tag422.backedge

normal-dest764:                                   ; preds = %tag98
  %309 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 365), align 8
  %ptrtoint765 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint766 = add i64 %ptrtoint765, 7
  %entry-point-addr767 = inttoptr i64 %entry-point-addr-uint766 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point768 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr767, align 8
  %310 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point768({}* %61, i64 2, {}* %farg0, {}* %309, {}* null, {}* null)
          to label %normal-dest771 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest771:                                   ; preds = %normal-dest764
  %.elt2226 = extractvalue { {}*, i64 } %310, 0
  %.elt2228 = extractvalue { {}*, i64 } %310, 1
  %cond2157 = icmp eq i64 %.elt2228, 0
  %311 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in2341 = select i1 %cond2157, {}* %311, {}* %.elt2226
  %312 = bitcast {}* %.in2341 to i8*
  %313 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %314 = icmp eq {}* %.in2341, %313
  %.val2572 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G340888.0 = select i1 %314, {}* %.val2572, {}* %311
  %315 = icmp eq {}* %G340888.0, %311
  br i1 %315, label %tag131, label %tag192

normal-dest784:                                   ; preds = %tag99
  %316 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %317 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %318 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %319 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %ptrtoint1566 = ptrtoint {}* %63 to i64
  %entry-point-addr-uint1567 = add i64 %ptrtoint1566, 7
  %entry-point-addr1568 = inttoptr i64 %entry-point-addr-uint1567 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1569 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1568, align 8
  %320 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1569({}* %63, i64 5, {}* %316, {}* %317, {}* %235, {}* %318, {}* %319)
          to label %normal-dest1572 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br792:                               ; preds = %tag398
  %irc-bit-cast796 = bitcast {}* %farg2 to i8*
  %gep797 = getelementptr inbounds i8, i8* %irc-bit-cast796, i64 -9
  %irc-bit-cast798 = bitcast i8* %gep797 to i64*
  %321 = load i64, i64* %irc-bit-cast798, align 8
  %322 = add i64 %321, -1309
  %323 = lshr i64 %322, 3
  %324 = shl i64 %322, 61
  %325 = or i64 %323, %324
  switch i64 %325, label %tag369 [
    i64 2, label %tag324
    i64 4, label %tag324
    i64 5, label %tag324
    i64 0, label %tag324
  ]

header-check-br799:                               ; preds = %tag201
  %irc-bit-cast803 = bitcast {}* %162 to i8*
  %gep804 = getelementptr inbounds i8, i8* %irc-bit-cast803, i64 -9
  %irc-bit-cast805 = bitcast i8* %gep804 to i64*
  %326 = load i64, i64* %irc-bit-cast805, align 8
  %327 = add i64 %326, -1309
  %328 = lshr i64 %327, 3
  %329 = shl i64 %327, 61
  %330 = or i64 %328, %329
  switch i64 %330, label %tag374 [
    i64 2, label %tag153
    i64 4, label %tag153
    i64 5, label %tag153
    i64 0, label %tag153
  ]

header-check-br806:                               ; preds = %tag268
  %gep811 = getelementptr inbounds i8, i8* %576, i64 -9
  %irc-bit-cast812 = bitcast i8* %gep811 to i64*
  %331 = load i64, i64* %irc-bit-cast812, align 8
  %332 = add i64 %331, -1309
  %333 = lshr i64 %332, 3
  %334 = shl i64 %332, 61
  %335 = or i64 %333, %334
  switch i64 %335, label %tag193 [
    i64 2, label %tag126
    i64 4, label %tag126
    i64 5, label %tag126
    i64 0, label %tag126
  ]

normal-dest814:                                   ; preds = %tag104
  %336 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %337 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %338 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %339 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint816 = ptrtoint {}* %65 to i64
  %entry-point-addr-uint817 = add i64 %ptrtoint816, 7
  %entry-point-addr818 = inttoptr i64 %entry-point-addr-uint817 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point819 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr818, align 8
  %340 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point819({}* %65, i64 5, {}* %336, {}* %337, {}* %235, {}* %338, {}* %339)
          to label %normal-dest822 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest822:                                   ; preds = %normal-dest814
  %.elt2450 = extractvalue { {}*, i64 } %340, 0
  %.elt2452 = extractvalue { {}*, i64 } %340, 1
  %cond2184 = icmp eq i64 %.elt2452, 0
  %341 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in2443 = select i1 %cond2184, {}* %341, {}* %.elt2450
  %.val2590.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag23

normal-dest829:                                   ; preds = %tag105
  %342 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 370), align 16
  %343 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 371), align 8
  %ptrtoint830 = ptrtoint {}* %67 to i64
  %entry-point-addr-uint831 = add i64 %ptrtoint830, 7
  %entry-point-addr832 = inttoptr i64 %entry-point-addr-uint831 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point833 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr832, align 8
  %344 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point833({}* %67, i64 3, {}* %342, {}* %343, {}* %farg0, {}* null)
          to label %tag415 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br856:                               ; preds = %tag357
  %gep861 = getelementptr inbounds i8, i8* %312, i64 -9
  %irc-bit-cast862 = bitcast i8* %gep861 to i64*
  %345 = load i64, i64* %irc-bit-cast862, align 8
  %346 = add i64 %345, -1309
  %347 = lshr i64 %346, 3
  %348 = shl i64 %346, 61
  %349 = or i64 %347, %348
  switch i64 %349, label %tag258 [
    i64 2, label %tag318
    i64 4, label %tag318
    i64 5, label %tag318
    i64 0, label %tag318
  ]

normal-dest867:                                   ; preds = %tag114
  %ptrtoint868 = ptrtoint {}* %71 to i64
  %entry-point-addr-uint869 = add i64 %ptrtoint868, 7
  %entry-point-addr870 = inttoptr i64 %entry-point-addr-uint869 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point871 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr870, align 8
  %350 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point871({}* %71, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest874 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest874:                                   ; preds = %normal-dest867
  %.elt2254 = extractvalue { {}*, i64 } %350, 0
  %.elt2256 = extractvalue { {}*, i64 } %350, 1
  %cond2161 = icmp eq i64 %.elt2256, 0
  %351 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340826.0 = select i1 %cond2161, {}* %351, {}* %.elt2254
  %352 = icmp eq {}* %G340826.0, %351
  br i1 %352, label %tag312, label %tag330

normal-dest910:                                   ; preds = %tag123
  %ptrtoint911 = ptrtoint {}* %73 to i64
  %entry-point-addr-uint912 = add i64 %ptrtoint911, 7
  %entry-point-addr913 = inttoptr i64 %entry-point-addr-uint912 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point914 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr913, align 8
  %353 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point914({}* %73, i64 2, {}* %farg1, {}* %farg3, {}* null, {}* null)
          to label %normal-dest917 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest917:                                   ; preds = %normal-dest910
  %.elt2407 = extractvalue { {}*, i64 } %353, 0
  %.elt2409 = extractvalue { {}*, i64 } %353, 1
  %cond2178 = icmp eq i64 %.elt2409, 0
  %354 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %x918.0 = select i1 %cond2178, {}* %354, {}* %.elt2407
  %355 = ptrtoint {}* %x918.0 to i64
  %tag-only9262410 = and i64 %355, 7
  %consp-test927 = icmp eq i64 %tag-only9262410, 3
  br i1 %consp-test927, label %tag354, label %tag2

normal-dest936:                                   ; preds = %tag125
  %356 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %357 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 408), align 16
  %358 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %359 = invoke {}* @cc_safe_fdefinition({}* %358)
          to label %normal-dest938 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest938:                                   ; preds = %normal-dest936
  %360 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %361 = invoke {}* @cc_safe_fdefinition({}* %360)
          to label %normal-dest940 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest940:                                   ; preds = %normal-dest938
  %362 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 408), align 16
  %ptrtoint941 = ptrtoint {}* %361 to i64
  %entry-point-addr-uint942 = add i64 %ptrtoint941, 7
  %entry-point-addr943 = inttoptr i64 %entry-point-addr-uint942 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point944 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr943, align 8
  %363 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point944({}* %361, i64 2, {}* %farg0, {}* %362, {}* null, {}* null)
          to label %normal-dest947 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest947:                                   ; preds = %normal-dest940
  %.elt2199 = extractvalue { {}*, i64 } %363, 0
  %.elt2201 = extractvalue { {}*, i64 } %363, 1
  %cond2154 = icmp eq i64 %.elt2201, 0
  %364 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340929.0 = select i1 %cond2154, {}* %364, {}* %.elt2199
  %ptrtoint953 = ptrtoint {}* %359 to i64
  %entry-point-addr-uint954 = add i64 %ptrtoint953, 7
  %entry-point-addr955 = inttoptr i64 %entry-point-addr-uint954 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point956 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr955, align 8
  %365 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point956({}* %359, i64 2, {}* %farg1, {}* %G340929.0, {}* null, {}* null)
          to label %normal-dest959 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest959:                                   ; preds = %normal-dest947
  %.elt2203 = extractvalue { {}*, i64 } %365, 0
  %.elt2205 = extractvalue { {}*, i64 } %365, 1
  %cond2155 = icmp eq i64 %.elt2205, 0
  %366 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340924.0 = select i1 %cond2155, {}* %366, {}* %.elt2203
  %367 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %368 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint965 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint966 = add i64 %ptrtoint965, 7
  %entry-point-addr967 = inttoptr i64 %entry-point-addr-uint966 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point968 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr967, align 8
  %369 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point968({}* %75, i64 7, {}* %farg0, {}* %356, {}* %farg0, {}* %357, {}* %G340924.0, {}* %367, {}* %368)
          to label %normal-dest971 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest971:                                   ; preds = %normal-dest959
  %.elt2207 = extractvalue { {}*, i64 } %369, 0
  %370 = ptrtoint {}* %.elt2207 to i64
  %.elt2209 = extractvalue { {}*, i64 } %369, 1
  br label %tag32

header-check-br1002:                              ; preds = %tag227
  %gep1007 = getelementptr inbounds i8, i8* %312, i64 -9
  %irc-bit-cast1008 = bitcast i8* %gep1007 to i64*
  %371 = load i64, i64* %irc-bit-cast1008, align 8
  %372 = add i64 %371, -1309
  %373 = lshr i64 %372, 3
  %374 = shl i64 %372, 61
  %375 = or i64 %373, %374
  switch i64 %375, label %tag230 [
    i64 2, label %tag371
    i64 4, label %tag371
    i64 5, label %tag371
    i64 0, label %tag371
  ]

header-check-br1015:                              ; preds = %tag245
  %irc-bit-cast1019 = bitcast {}* %farg2 to i8*
  %gep1020 = getelementptr inbounds i8, i8* %irc-bit-cast1019, i64 -9
  %irc-bit-cast1021 = bitcast i8* %gep1020 to i64*
  %376 = load i64, i64* %irc-bit-cast1021, align 8
  %377 = add i64 %376, -1309
  %378 = lshr i64 %377, 3
  %379 = shl i64 %377, 61
  %380 = or i64 %378, %379
  switch i64 %380, label %tag191 [
    i64 2, label %tag190
    i64 4, label %tag190
    i64 5, label %tag190
    i64 0, label %tag190
  ]

normal-dest1036:                                  ; preds = %tag150
  %381 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 374), align 16
  %382 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 382), align 16
  %383 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %384 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint1037 = ptrtoint {}* %84 to i64
  %entry-point-addr-uint1038 = add i64 %ptrtoint1037, 7
  %entry-point-addr1039 = inttoptr i64 %entry-point-addr-uint1038 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1040 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1039, align 8
  %385 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1040({}* %84, i64 7, {}* %farg0, {}* %381, {}* %farg0, {}* %ZEIT.0, {}* %382, {}* %383, {}* %384)
          to label %normal-dest1043 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1043:                                  ; preds = %normal-dest1036
  br i1 %consp-test2097, label %tag52, label %tag148

normal-dest1054:                                  ; preds = %tag152
  %386 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 374), align 16
  %387 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %388 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint1055 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint1056 = add i64 %ptrtoint1055, 7
  %entry-point-addr1057 = inttoptr i64 %entry-point-addr-uint1056 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1058 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1057, align 8
  %389 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1058({}* %86, i64 7, {}* %farg0, {}* %386, {}* %farg0, {}* %farg3, {}* %farg1, {}* %387, {}* %388)
          to label %normal-dest1061 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1061:                                  ; preds = %normal-dest1054
  %390 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 378), align 16
  %391 = invoke {}* @cc_safe_fdefinition({}* %390)
          to label %normal-dest1067 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1067:                                  ; preds = %normal-dest1061
  %ptrtoint1068 = ptrtoint {}* %391 to i64
  %entry-point-addr-uint1069 = add i64 %ptrtoint1068, 7
  %entry-point-addr1070 = inttoptr i64 %entry-point-addr-uint1069 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1071 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1070, align 8
  %392 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1071({}* %391, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest1074 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1074:                                  ; preds = %normal-dest1067
  %.elt2403 = extractvalue { {}*, i64 } %392, 0
  %.elt2405 = extractvalue { {}*, i64 } %392, 1
  %cond2177 = icmp eq i64 %.elt2405, 0
  %393 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341061.0 = select i1 %cond2177, {}* %393, {}* %.elt2403
  %394 = icmp eq {}* %G341061.0, %393
  br i1 %394, label %tag415, label %tag123

normal-dest1081:                                  ; preds = %tag153
  %ptrtoint1084 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint1085 = add i64 %ptrtoint1084, 7
  %entry-point-addr1086 = inttoptr i64 %entry-point-addr-uint1085 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1087 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1086, align 8
  %395 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1087({}* %88, i64 2, {}* nonnull %farg2, {}* nonnull %162, {}* null, {}* null)
          to label %normal-dest1090 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1090:                                  ; preds = %normal-dest1081
  %.elt2381 = extractvalue { {}*, i64 } %395, 0
  %.elt2383 = extractvalue { {}*, i64 } %395, 1
  %cond2175 = icmp eq i64 %.elt2383, 0
  %396 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340897.1 = select i1 %cond2175, {}* %396, {}* %.elt2381
  br label %tag380

normal-dest1097:                                  ; preds = %tag154
  %ptrtoint1099 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint1100 = add i64 %ptrtoint1099, 7
  %entry-point-addr1101 = inttoptr i64 %entry-point-addr-uint1100 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1102 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1101, align 8
  %397 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1102({}* %90, i64 2, {}* nonnull %farg2, {}* nonnull %245, {}* null, {}* null)
          to label %normal-dest1105 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1105:                                  ; preds = %normal-dest1097
  %.elt2389 = extractvalue { {}*, i64 } %397, 0
  %.elt2391 = extractvalue { {}*, i64 } %397, 1
  %cond2176 = icmp eq i64 %.elt2391, 0
  %398 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340954.1 = select i1 %cond2176, {}* %398, {}* %.elt2389
  br label %tag420

normal-dest1121:                                  ; preds = %tag161
  %ptrtoint1122 = ptrtoint {}* %94 to i64
  %entry-point-addr-uint1123 = add i64 %ptrtoint1122, 7
  %entry-point-addr1124 = inttoptr i64 %entry-point-addr-uint1123 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1125 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1124, align 8
  %399 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1125({}* %94, i64 2, {}* nonnull %.in, {}* nonnull %275, {}* null, {}* null)
          to label %normal-dest1128 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1128:                                  ; preds = %normal-dest1121
  %.elt2222 = extractvalue { {}*, i64 } %399, 0
  %.elt2224 = extractvalue { {}*, i64 } %399, 1
  %cond2156 = icmp eq i64 %.elt2224, 0
  %400 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340936.1 = select i1 %cond2156, {}* %400, {}* %.elt2222
  br label %tag80

header-check-br1134:                              ; preds = %tag49
  %gep1139 = getelementptr inbounds i8, i8* %312, i64 -9
  %irc-bit-cast1140 = bitcast i8* %gep1139 to i64*
  %401 = load i64, i64* %irc-bit-cast1140, align 8
  %402 = add i64 %401, -1309
  %403 = lshr i64 %402, 3
  %404 = shl i64 %402, 61
  %405 = or i64 %403, %404
  switch i64 %405, label %tag235 [
    i64 2, label %tag180
    i64 4, label %tag180
    i64 5, label %tag180
    i64 0, label %tag180
  ]

header-check-br1145:                              ; preds = %tag231
  %gep1150 = getelementptr inbounds i8, i8* %312, i64 -9
  %irc-bit-cast1151 = bitcast i8* %gep1150 to i64*
  %406 = load i64, i64* %irc-bit-cast1151, align 8
  %407 = add i64 %406, -1309
  %408 = lshr i64 %407, 3
  %409 = shl i64 %407, 61
  %410 = or i64 %408, %409
  switch i64 %410, label %tag274 [
    i64 2, label %tag110
    i64 4, label %tag110
    i64 5, label %tag110
    i64 0, label %tag110
  ]

normal-dest1170:                                  ; preds = %tag173
  %411 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 374), align 16
  %412 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %413 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %414 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint1171 = ptrtoint {}* %99 to i64
  %entry-point-addr-uint1172 = add i64 %ptrtoint1171, 7
  %entry-point-addr1173 = inttoptr i64 %entry-point-addr-uint1172 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1174 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1173, align 8
  %415 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1174({}* %99, i64 7, {}* %farg0, {}* %411, {}* %farg0, {}* %412, {}* %farg3, {}* %413, {}* %414)
          to label %tag415 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br1182:                              ; preds = %tag266
  %irc-bit-cast1186 = bitcast {}* %165 to i8*
  %gep1187 = getelementptr inbounds i8, i8* %irc-bit-cast1186, i64 -9
  %irc-bit-cast1188 = bitcast i8* %gep1187 to i64*
  %416 = load i64, i64* %irc-bit-cast1188, align 8
  %417 = add i64 %416, -1309
  %418 = lshr i64 %417, 3
  %419 = shl i64 %417, 61
  %420 = or i64 %418, %419
  switch i64 %420, label %tag230 [
    i64 2, label %tag376
    i64 4, label %tag376
    i64 5, label %tag376
    i64 0, label %tag376
  ]

normal-dest1190:                                  ; preds = %tag176
  %ptrtoint1191 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint1192 = add i64 %ptrtoint1191, 7
  %entry-point-addr1193 = inttoptr i64 %entry-point-addr-uint1192 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1194 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1193, align 8
  %421 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1194({}* %101, i64 3, {}* %farg0, {}* %farg3, {}* %farg1, {}* null)
          to label %tag359 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1242:                                  ; preds = %tag187
  %422 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %423 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %424 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %425 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint1243 = ptrtoint {}* %104 to i64
  %entry-point-addr-uint1244 = add i64 %ptrtoint1243, 7
  %entry-point-addr1245 = inttoptr i64 %entry-point-addr-uint1244 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1246 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1245, align 8
  %426 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1246({}* %104, i64 5, {}* %422, {}* %423, {}* %x918.0, {}* %424, {}* %425)
          to label %normal-dest1249 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1249:                                  ; preds = %normal-dest1242
  %.elt2426 = extractvalue { {}*, i64 } %426, 0
  %.elt2428 = extractvalue { {}*, i64 } %426, 1
  %cond2181 = icmp eq i64 %.elt2428, 0
  %427 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.3" = select i1 %cond2181, {}* %427, {}* %.elt2426
  br label %tag22

normal-dest1289:                                  ; preds = %tag203
  %ptrtoint1291 = ptrtoint {}* %118 to i64
  %entry-point-addr-uint1292 = add i64 %ptrtoint1291, 7
  %entry-point-addr1293 = inttoptr i64 %entry-point-addr-uint1292 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1294 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1293, align 8
  %428 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1294({}* %118, i64 2, {}* nonnull %.in2440, {}* nonnull %577, {}* null, {}* null)
          to label %normal-dest1297 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1297:                                  ; preds = %normal-dest1289
  %.elt2458 = extractvalue { {}*, i64 } %428, 0
  %.elt2460 = extractvalue { {}*, i64 } %428, 1
  %cond2185 = icmp eq i64 %.elt2460, 0
  %429 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341145.1 = select i1 %cond2185, {}* %429, {}* %.elt2458
  br label %tag352

header-check-br1334:                              ; preds = %tag321
  %gep1339 = getelementptr inbounds i8, i8* %26, i64 -9
  %irc-bit-cast1340 = bitcast i8* %gep1339 to i64*
  %430 = load i64, i64* %irc-bit-cast1340, align 8
  %431 = add i64 %430, -1309
  %432 = lshr i64 %431, 3
  %433 = shl i64 %431, 61
  %434 = or i64 %432, %433
  switch i64 %434, label %tag208 [
    i64 2, label %tag346
    i64 4, label %tag346
    i64 5, label %tag346
    i64 0, label %tag346
  ]

header-check-br1344:                              ; preds = %tag360
  %irc-bit-cast1348 = bitcast {}* %106 to i8*
  %gep1349 = getelementptr inbounds i8, i8* %irc-bit-cast1348, i64 -9
  %irc-bit-cast1350 = bitcast i8* %gep1349 to i64*
  %435 = load i64, i64* %irc-bit-cast1350, align 8
  %436 = add i64 %435, -1309
  %437 = lshr i64 %436, 3
  %438 = shl i64 %436, 61
  %439 = or i64 %437, %438
  switch i64 %439, label %tag369 [
    i64 2, label %tag411
    i64 4, label %tag411
    i64 5, label %tag411
    i64 0, label %tag411
  ]

normal-dest1369:                                  ; preds = %tag230
  %440 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 386), align 16
  %441 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 387), align 8
  %ptrtoint1370 = ptrtoint {}* %140 to i64
  %entry-point-addr-uint1371 = add i64 %ptrtoint1370, 7
  %entry-point-addr1372 = inttoptr i64 %entry-point-addr-uint1371 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1373 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1372, align 8
  %442 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1373({}* %140, i64 3, {}* %440, {}* %441, {}* %farg0, {}* null)
          to label %normal-dest1376 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1376:                                  ; preds = %normal-dest1369
  %.elt2336 = extractvalue { {}*, i64 } %442, 0
  %443 = ptrtoint {}* %.elt2336 to i64
  %.elt2338 = extractvalue { {}*, i64 } %442, 1
  br label %tag32

normal-dest1382:                                  ; preds = %tag234
  %444 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 406), align 16
  %445 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 407), align 8
  %ptrtoint1383 = ptrtoint {}* %142 to i64
  %entry-point-addr-uint1384 = add i64 %ptrtoint1383, 7
  %entry-point-addr1385 = inttoptr i64 %entry-point-addr-uint1384 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1386 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1385, align 8
  %446 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1386({}* %142, i64 6, {}* %444, {}* %445, {}* %farg0, {}* %farg2, {}* %farg3, {}* %farg1)
          to label %normal-dest1389 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1389:                                  ; preds = %normal-dest1382
  %.elt2214 = extractvalue { {}*, i64 } %446, 0
  %447 = ptrtoint {}* %.elt2214 to i64
  %.elt2216 = extractvalue { {}*, i64 } %446, 1
  br label %tag32

normal-dest1411:                                  ; preds = %tag239
  %ptrtoint1412 = ptrtoint {}* %152 to i64
  %entry-point-addr-uint1413 = add i64 %ptrtoint1412, 7
  %entry-point-addr1414 = inttoptr i64 %entry-point-addr-uint1413 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1415 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1414, align 8
  %448 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1415({}* %152, i64 3, {}* %farg0, {}* %farg3, {}* %farg1, {}* null)
          to label %normal-dest1418 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1418:                                  ; preds = %normal-dest1411
  %.elt2246 = extractvalue { {}*, i64 } %448, 0
  %449 = ptrtoint {}* %.elt2246 to i64
  %.elt2248 = extractvalue { {}*, i64 } %448, 1
  br label %tag32

header-check-br1422:                              ; preds = %tag180
  %irc-bit-cast1426 = bitcast {}* %173 to i8*
  %gep1427 = getelementptr inbounds i8, i8* %irc-bit-cast1426, i64 -9
  %irc-bit-cast1428 = bitcast i8* %gep1427 to i64*
  %450 = load i64, i64* %irc-bit-cast1428, align 8
  %451 = add i64 %450, -1309
  %452 = lshr i64 %451, 3
  %453 = shl i64 %451, 61
  %454 = or i64 %452, %453
  switch i64 %454, label %tag235 [
    i64 2, label %tag282
    i64 4, label %tag282
    i64 5, label %tag282
    i64 0, label %tag282
  ]

header-check-br1429:                              ; preds = %tag229
  %irc-bit-cast1433 = bitcast {}* %farg2 to i8*
  %gep1434 = getelementptr inbounds i8, i8* %irc-bit-cast1433, i64 -9
  %irc-bit-cast1435 = bitcast i8* %gep1434 to i64*
  %455 = load i64, i64* %irc-bit-cast1435, align 8
  %456 = add i64 %455, -1309
  %457 = lshr i64 %456, 3
  %458 = shl i64 %456, 61
  %459 = or i64 %457, %458
  switch i64 %459, label %tag374 [
    i64 2, label %tag201
    i64 4, label %tag201
    i64 5, label %tag201
    i64 0, label %tag201
  ]

normal-dest1444:                                  ; preds = %tag244
  %ptrtoint1445 = ptrtoint {}* %158 to i64
  %entry-point-addr-uint1446 = add i64 %ptrtoint1445, 7
  %entry-point-addr1447 = inttoptr i64 %entry-point-addr-uint1446 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1448 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1447, align 8
  %460 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1448({}* %158, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest1451 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1451:                                  ; preds = %normal-dest1444
  %.elt2332 = extractvalue { {}*, i64 } %460, 0
  %461 = ptrtoint {}* %.elt2332 to i64
  %.elt2334 = extractvalue { {}*, i64 } %460, 1
  br label %tag32

header-check-br1479:                              ; preds = %tag254
  %irc-bit-cast1483 = bitcast {}* %313 to i8*
  %gep1484 = getelementptr inbounds i8, i8* %irc-bit-cast1483, i64 -9
  %irc-bit-cast1485 = bitcast i8* %gep1484 to i64*
  %462 = load i64, i64* %irc-bit-cast1485, align 8
  %463 = add i64 %462, -1309
  %464 = lshr i64 %463, 3
  %465 = shl i64 %463, 61
  %466 = or i64 %464, %465
  switch i64 %466, label %tag274 [
    i64 2, label %tag11
    i64 4, label %tag11
    i64 5, label %tag11
    i64 0, label %tag11
  ]

header-check-br1502:                              ; preds = %tag190
  %irc-bit-cast1506 = bitcast {}* %253 to i8*
  %gep1507 = getelementptr inbounds i8, i8* %irc-bit-cast1506, i64 -9
  %irc-bit-cast1508 = bitcast i8* %gep1507 to i64*
  %467 = load i64, i64* %irc-bit-cast1508, align 8
  %468 = add i64 %467, -1309
  %469 = lshr i64 %468, 3
  %470 = shl i64 %468, 61
  %471 = or i64 %469, %470
  switch i64 %471, label %tag191 [
    i64 2, label %tag87
    i64 4, label %tag87
    i64 5, label %tag87
    i64 0, label %tag87
  ]

normal-dest1510:                                  ; preds = %tag260
  %472 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %473 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 404), align 16
  %474 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %475 = invoke {}* @cc_safe_fdefinition({}* %474)
          to label %normal-dest1512 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1512:                                  ; preds = %normal-dest1510
  %476 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %477 = invoke {}* @cc_safe_fdefinition({}* %476)
          to label %normal-dest1514 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1514:                                  ; preds = %normal-dest1512
  %478 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 404), align 16
  %ptrtoint1515 = ptrtoint {}* %477 to i64
  %entry-point-addr-uint1516 = add i64 %ptrtoint1515, 7
  %entry-point-addr1517 = inttoptr i64 %entry-point-addr-uint1516 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1518 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1517, align 8
  %479 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1518({}* %477, i64 2, {}* %farg0, {}* %478, {}* null, {}* null)
          to label %normal-dest1521 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1521:                                  ; preds = %normal-dest1514
  %.elt2230 = extractvalue { {}*, i64 } %479, 0
  %.elt2232 = extractvalue { {}*, i64 } %479, 1
  %cond2158 = icmp eq i64 %.elt2232, 0
  %480 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340869.0 = select i1 %cond2158, {}* %480, {}* %.elt2230
  %ptrtoint1527 = ptrtoint {}* %475 to i64
  %entry-point-addr-uint1528 = add i64 %ptrtoint1527, 7
  %entry-point-addr1529 = inttoptr i64 %entry-point-addr-uint1528 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1530 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1529, align 8
  %481 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1530({}* %475, i64 2, {}* %farg1, {}* %G340869.0, {}* null, {}* null)
          to label %normal-dest1533 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1533:                                  ; preds = %normal-dest1521
  %.elt2234 = extractvalue { {}*, i64 } %481, 0
  %.elt2236 = extractvalue { {}*, i64 } %481, 1
  %cond2159 = icmp eq i64 %.elt2236, 0
  %482 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340864.0 = select i1 %cond2159, {}* %482, {}* %.elt2234
  %483 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %484 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint1539 = ptrtoint {}* %169 to i64
  %entry-point-addr-uint1540 = add i64 %ptrtoint1539, 7
  %entry-point-addr1541 = inttoptr i64 %entry-point-addr-uint1540 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1542 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1541, align 8
  %485 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1542({}* %169, i64 7, {}* %farg0, {}* %472, {}* %farg0, {}* %473, {}* %G340864.0, {}* %483, {}* %484)
          to label %tag280 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1559:                                  ; preds = %tag263
  %486 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %487 = icmp eq {}* %171, %486
  br i1 %487, label %tag280, label %tag260

normal-dest1572:                                  ; preds = %normal-dest784
  call void @unreachableError()
  unreachable

normal-dest1594:                                  ; preds = %tag276
  %488 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %489 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %490 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %491 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %ptrtoint1623 = ptrtoint {}* %177 to i64
  %entry-point-addr-uint1624 = add i64 %ptrtoint1623, 7
  %entry-point-addr1625 = inttoptr i64 %entry-point-addr-uint1624 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1626 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1625, align 8
  %492 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1626({}* %177, i64 5, {}* %488, {}* %489, {}* %"%SUBLIST340625.02612", {}* %490, {}* %491)
          to label %normal-dest1629 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br1602:                              ; preds = %tag89
  %irc-bit-cast1606 = bitcast {}* %245 to i8*
  %gep1607 = getelementptr inbounds i8, i8* %irc-bit-cast1606, i64 -9
  %irc-bit-cast1608 = bitcast i8* %gep1607 to i64*
  %493 = load i64, i64* %irc-bit-cast1608, align 8
  %494 = add i64 %493, -1309
  %495 = lshr i64 %494, 3
  %496 = shl i64 %494, 61
  %497 = or i64 %495, %496
  switch i64 %497, label %tag253 [
    i64 2, label %tag154
    i64 4, label %tag154
    i64 5, label %tag154
    i64 0, label %tag154
  ]

normal-dest1610:                                  ; preds = %tag280
  %ptrtoint1611 = ptrtoint {}* %179 to i64
  %entry-point-addr-uint1612 = add i64 %ptrtoint1611, 7
  %entry-point-addr1613 = inttoptr i64 %entry-point-addr-uint1612 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1614 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1613, align 8
  %498 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1614({}* %179, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest1617 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1617:                                  ; preds = %normal-dest1610
  %.elt2242 = extractvalue { {}*, i64 } %498, 0
  %.elt2244 = extractvalue { {}*, i64 } %498, 1
  %cond2160 = icmp eq i64 %.elt2244, 0
  %499 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340854.0 = select i1 %cond2160, {}* %499, {}* %.elt2242
  %500 = icmp eq {}* %G340854.0, %499
  br i1 %500, label %tag21, label %tag239

normal-dest1629:                                  ; preds = %normal-dest1594
  call void @unreachableError()
  unreachable

normal-dest1631:                                  ; preds = %tag282
  %ptrtoint1632 = ptrtoint {}* %181 to i64
  %entry-point-addr-uint1633 = add i64 %ptrtoint1632, 7
  %entry-point-addr1634 = inttoptr i64 %entry-point-addr-uint1633 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1635 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1634, align 8
  %501 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1635({}* %181, i64 2, {}* nonnull %.in2341, {}* nonnull %173, {}* null, {}* null)
          to label %normal-dest1638 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1638:                                  ; preds = %normal-dest1631
  %.elt2361 = extractvalue { {}*, i64 } %501, 0
  %.elt2363 = extractvalue { {}*, i64 } %501, 1
  %cond2173 = icmp eq i64 %.elt2363, 0
  %502 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340831.1 = select i1 %cond2173, {}* %502, {}* %.elt2361
  br label %tag207

normal-dest1676:                                  ; preds = %tag297
  %ptrtoint1677 = ptrtoint {}* %185 to i64
  %entry-point-addr-uint1678 = add i64 %ptrtoint1677, 7
  %entry-point-addr1679 = inttoptr i64 %entry-point-addr-uint1678 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1680 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1679, align 8
  %503 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1680({}* %185, i64 2, {}* nonnull %.in2341, {}* nonnull %143, {}* null, {}* null)
          to label %normal-dest1683 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1683:                                  ; preds = %normal-dest1676
  %.elt2353 = extractvalue { {}*, i64 } %503, 0
  %.elt2355 = extractvalue { {}*, i64 } %503, 1
  %cond2172 = icmp eq i64 %.elt2355, 0
  %504 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340803.1 = select i1 %cond2172, {}* %504, {}* %.elt2353
  br label %tag20

normal-dest1709:                                  ; preds = %tag309
  %ptrtoint1710 = ptrtoint {}* %187 to i64
  %entry-point-addr-uint1711 = add i64 %ptrtoint1710, 7
  %entry-point-addr1712 = inttoptr i64 %entry-point-addr-uint1711 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1713 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1712, align 8
  %505 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1713({}* %187, i64 2, {}* %farg0, {}* %farg3, {}* null, {}* null)
          to label %tag359 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1724:                                  ; preds = %tag312
  %ptrtoint1725 = ptrtoint {}* %189 to i64
  %entry-point-addr-uint1726 = add i64 %ptrtoint1725, 7
  %entry-point-addr1727 = inttoptr i64 %entry-point-addr-uint1726 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1728 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1727, align 8
  %506 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1728({}* %189, i64 2, {}* %farg0, {}* %farg3, {}* null, {}* null)
          to label %normal-dest1731 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1731:                                  ; preds = %normal-dest1724
  %.elt2262 = extractvalue { {}*, i64 } %506, 0
  %507 = ptrtoint {}* %.elt2262 to i64
  %.elt2264 = extractvalue { {}*, i64 } %506, 1
  br label %tag32

header-check-br1739:                              ; preds = %tag126
  %irc-bit-cast1743 = bitcast {}* %577 to i8*
  %gep1744 = getelementptr inbounds i8, i8* %irc-bit-cast1743, i64 -9
  %irc-bit-cast1745 = bitcast i8* %gep1744 to i64*
  %508 = load i64, i64* %irc-bit-cast1745, align 8
  %509 = add i64 %508, -1309
  %510 = lshr i64 %509, 3
  %511 = shl i64 %509, 61
  %512 = or i64 %510, %511
  switch i64 %512, label %tag193 [
    i64 2, label %tag203
    i64 4, label %tag203
    i64 5, label %tag203
    i64 0, label %tag203
  ]

normal-dest1763:                                  ; preds = %tag323
  %513 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %514 = icmp eq {}* %193, %513
  br i1 %514, label %tag423, label %tag328

normal-dest1766:                                  ; preds = %tag328
  %515 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %516 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 392), align 16
  %517 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %518 = invoke {}* @cc_safe_fdefinition({}* %517)
          to label %normal-dest1768 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1768:                                  ; preds = %normal-dest1766
  %519 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %520 = invoke {}* @cc_safe_fdefinition({}* %519)
          to label %normal-dest1770 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1770:                                  ; preds = %normal-dest1768
  %521 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 392), align 16
  %ptrtoint1771 = ptrtoint {}* %520 to i64
  %entry-point-addr-uint1772 = add i64 %ptrtoint1771, 7
  %entry-point-addr1773 = inttoptr i64 %entry-point-addr-uint1772 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1774 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1773, align 8
  %522 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1774({}* %520, i64 2, {}* %farg0, {}* %521, {}* null, {}* null)
          to label %normal-dest1777 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1777:                                  ; preds = %normal-dest1770
  %.elt2266 = extractvalue { {}*, i64 } %522, 0
  %.elt2268 = extractvalue { {}*, i64 } %522, 1
  %cond2162 = icmp eq i64 %.elt2268, 0
  %523 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340793.0 = select i1 %cond2162, {}* %523, {}* %.elt2266
  %ptrtoint1783 = ptrtoint {}* %518 to i64
  %entry-point-addr-uint1784 = add i64 %ptrtoint1783, 7
  %entry-point-addr1785 = inttoptr i64 %entry-point-addr-uint1784 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1786 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1785, align 8
  %524 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1786({}* %518, i64 2, {}* %farg1, {}* %G340793.0, {}* null, {}* null)
          to label %normal-dest1789 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1789:                                  ; preds = %normal-dest1777
  %.elt2270 = extractvalue { {}*, i64 } %524, 0
  %.elt2272 = extractvalue { {}*, i64 } %524, 1
  %cond2163 = icmp eq i64 %.elt2272, 0
  %525 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340788.0 = select i1 %cond2163, {}* %525, {}* %.elt2270
  %526 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %527 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint1795 = ptrtoint {}* %197 to i64
  %entry-point-addr-uint1796 = add i64 %ptrtoint1795, 7
  %entry-point-addr1797 = inttoptr i64 %entry-point-addr-uint1796 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1798 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1797, align 8
  %528 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1798({}* %197, i64 7, {}* %farg0, {}* %515, {}* %farg0, {}* %516, {}* %G340788.0, {}* %526, {}* %527)
          to label %tag423 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

header-check-br1806:                              ; preds = %tag353
  %irc-bit-cast1810 = bitcast {}* %275 to i8*
  %gep1811 = getelementptr inbounds i8, i8* %irc-bit-cast1810, i64 -9
  %irc-bit-cast1812 = bitcast i8* %gep1811 to i64*
  %529 = load i64, i64* %irc-bit-cast1812, align 8
  %530 = add i64 %529, -1309
  %531 = lshr i64 %530, 3
  %532 = shl i64 %530, 61
  %533 = or i64 %531, %532
  switch i64 %533, label %tag234 [
    i64 2, label %tag161
    i64 4, label %tag161
    i64 5, label %tag161
    i64 0, label %tag161
  ]

normal-dest1814:                                  ; preds = %tag330
  %ptrtoint1815 = ptrtoint {}* %199 to i64
  %entry-point-addr-uint1816 = add i64 %ptrtoint1815, 7
  %entry-point-addr1817 = inttoptr i64 %entry-point-addr-uint1816 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1818 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1817, align 8
  %534 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1818({}* %199, i64 3, {}* %farg0, {}* %farg3, {}* %farg1, {}* null)
          to label %normal-dest1821 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1821:                                  ; preds = %normal-dest1814
  %.elt2258 = extractvalue { {}*, i64 } %534, 0
  %535 = ptrtoint {}* %.elt2258 to i64
  %.elt2260 = extractvalue { {}*, i64 } %534, 1
  br label %tag32

header-check-br1839:                              ; preds = %tag318
  %irc-bit-cast1843 = bitcast {}* %143 to i8*
  %gep1844 = getelementptr inbounds i8, i8* %irc-bit-cast1843, i64 -9
  %irc-bit-cast1845 = bitcast i8* %gep1844 to i64*
  %536 = load i64, i64* %irc-bit-cast1845, align 8
  %537 = add i64 %536, -1309
  %538 = lshr i64 %537, 3
  %539 = shl i64 %537, 61
  %540 = or i64 %538, %539
  switch i64 %540, label %tag258 [
    i64 2, label %tag297
    i64 4, label %tag297
    i64 5, label %tag297
    i64 0, label %tag297
  ]

normal-dest1851:                                  ; preds = %tag345
  %541 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %542 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %543 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %544 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint1852 = ptrtoint {}* %203 to i64
  %entry-point-addr-uint1853 = add i64 %ptrtoint1852, 7
  %entry-point-addr1854 = inttoptr i64 %entry-point-addr-uint1853 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1855 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1854, align 8
  %545 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1855({}* %203, i64 5, {}* %541, {}* %542, {}* %"%SUBLIST340625.02612", {}* %543, {}* %544)
          to label %normal-dest1858 unwind label %cleanup-lpad.loopexit

normal-dest1858:                                  ; preds = %normal-dest1851
  %.elt2324 = extractvalue { {}*, i64 } %545, 0
  %.elt2326 = extractvalue { {}*, i64 } %545, 1
  %cond2170 = icmp eq i64 %.elt2326, 0
  %546 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in2317 = select i1 %cond2170, {}* %546, {}* %.elt2324
  %.val2582.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %547 = ptrtoint {}* %546 to i64
  br label %tag238

normal-dest1865:                                  ; preds = %tag346
  %ptrtoint1866 = ptrtoint {}* %205 to i64
  %entry-point-addr-uint1867 = add i64 %ptrtoint1866, 7
  %entry-point-addr1868 = inttoptr i64 %entry-point-addr-uint1867 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1869 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1868, align 8
  %548 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1869({}* %205, i64 2, {}* nonnull %.in2440, {}* nonnull %.in2444, {}* null, {}* null)
          to label %normal-dest1872 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit

normal-dest1872:                                  ; preds = %normal-dest1865
  %.elt2446 = extractvalue { {}*, i64 } %548, 0
  %.elt2448 = extractvalue { {}*, i64 } %548, 1
  %cond2183 = icmp eq i64 %.elt2448, 0
  %549 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341103.1 = select i1 %cond2183, {}* %549, {}* %.elt2446
  br label %tag336

normal-dest1904:                                  ; preds = %tag359
  %550 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 398), align 16
  %ptrtoint1905 = ptrtoint {}* %213 to i64
  %entry-point-addr-uint1906 = add i64 %ptrtoint1905, 7
  %entry-point-addr1907 = inttoptr i64 %entry-point-addr-uint1906 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1908 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1907, align 8
  %551 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1908({}* %213, i64 2, {}* %farg3, {}* %550, {}* null, {}* null)
          to label %normal-dest1911 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1911:                                  ; preds = %normal-dest1904
  %.elt2286 = extractvalue { {}*, i64 } %551, 0
  %.elt2288 = extractvalue { {}*, i64 } %551, 1
  %cond2165 = icmp eq i64 %.elt2288, 0
  %552 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in2314 = select i1 %cond2165, {}* %552, {}* %.elt2286
  %553 = bitcast {}* %.in2314 to i8*
  %554 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %555 = invoke {}* @cc_safe_fdefinition({}* %554)
          to label %normal-dest1918 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1918:                                  ; preds = %normal-dest1911
  %556 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 400), align 16
  %ptrtoint1919 = ptrtoint {}* %555 to i64
  %entry-point-addr-uint1920 = add i64 %ptrtoint1919, 7
  %entry-point-addr1921 = inttoptr i64 %entry-point-addr-uint1920 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1922 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1921, align 8
  %557 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1922({}* %555, i64 2, {}* %farg0, {}* %556, {}* null, {}* null)
          to label %normal-dest1925 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1925:                                  ; preds = %normal-dest1918
  %.elt2290 = extractvalue { {}*, i64 } %557, 0
  %.elt2292 = extractvalue { {}*, i64 } %557, 1
  %cond2166 = icmp eq i64 %.elt2292, 0
  %558 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%SUBLIST340625.2" = select i1 %cond2166, {}* %558, {}* %.elt2290
  %559 = icmp eq {}* %"%SUBLIST340625.2", %558
  %.val25782609 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %object.02610 = select i1 %559, {}* %.val25782609, {}* %558
  %560 = icmp eq {}* %object.02610, %558
  %G340703.02611 = select i1 %560, {}* %.val25782609, {}* %558
  %561 = icmp eq {}* %G340703.02611, %558
  br i1 %561, label %tag387, label %tag240.lr.ph

tag240.lr.ph:                                     ; preds = %normal-dest1925
  %562 = ptrtoint {}* %558 to i64
  %563 = ptrtoint {}* %.in2314 to i64
  %single-float-tag-only512 = and i64 %563, 7
  %fixnum-tag-only12852312 = and i64 %563, 3
  %fixnump-test1286 = icmp eq i64 %fixnum-tag-only12852312, 0
  %test576 = icmp ne i64 %single-float-tag-only512, 1
  %gep578 = getelementptr inbounds i8, i8* %553, i64 -9
  %irc-bit-cast579 = bitcast i8* %gep578 to i64*
  %brmerge2620 = or i1 %test576, %fixnump-test1286
  br label %tag240

normal-dest1943:                                  ; preds = %tag369
  %564 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 363), align 8
  %565 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 364), align 16
  %ptrtoint1944 = ptrtoint {}* %215 to i64
  %entry-point-addr-uint1945 = add i64 %ptrtoint1944, 7
  %entry-point-addr1946 = inttoptr i64 %entry-point-addr-uint1945 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1947 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1946, align 8
  %566 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1947({}* %215, i64 3, {}* %564, {}* %565, {}* %farg2, {}* null)
          to label %tag415 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1964:                                  ; preds = %tag374
  %567 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 384), align 16
  %568 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 385), align 8
  %ptrtoint1965 = ptrtoint {}* %219 to i64
  %entry-point-addr-uint1966 = add i64 %ptrtoint1965, 7
  %entry-point-addr1967 = inttoptr i64 %entry-point-addr-uint1966 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1968 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1967, align 8
  %569 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1968({}* %219, i64 3, {}* %567, {}* %568, {}* %farg2, {}* null)
          to label %normal-dest1971 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1971:                                  ; preds = %normal-dest1964
  %.elt2373 = extractvalue { {}*, i64 } %569, 0
  %570 = ptrtoint {}* %.elt2373 to i64
  %.elt2375 = extractvalue { {}*, i64 } %569, 1
  br label %tag32

normal-dest1980:                                  ; preds = %tag376
  %ptrtoint1981 = ptrtoint {}* %221 to i64
  %entry-point-addr-uint1982 = add i64 %ptrtoint1981, 7
  %entry-point-addr1983 = inttoptr i64 %entry-point-addr-uint1982 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1984 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1983, align 8
  %571 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1984({}* %221, i64 2, {}* nonnull %.in2341, {}* nonnull %165, {}* null, {}* null)
          to label %normal-dest1987 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest1987:                                  ; preds = %normal-dest1980
  %.elt2345 = extractvalue { {}*, i64 } %571, 0
  %.elt2347 = extractvalue { {}*, i64 } %571, 1
  %cond2171 = icmp eq i64 %.elt2347, 0
  %572 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340677.1 = select i1 %cond2171, {}* %572, {}* %.elt2345
  br label %tag401

normal-dest2003:                                  ; preds = %tag382
  %573 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 365), align 8
  %ptrtoint2004 = ptrtoint {}* %225 to i64
  %entry-point-addr-uint2005 = add i64 %ptrtoint2004, 7
  %entry-point-addr2006 = inttoptr i64 %entry-point-addr-uint2005 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2007 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2006, align 8
  %574 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2007({}* %225, i64 2, {}* %farg0, {}* %573, {}* null, {}* null)
          to label %normal-dest2010 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2010:                                  ; preds = %normal-dest2003
  %.elt = extractvalue { {}*, i64 } %574, 0
  %.elt2189 = extractvalue { {}*, i64 } %574, 1
  %cond = icmp eq i64 %.elt2189, 0
  %575 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in2440 = select i1 %cond, {}* %575, {}* %.elt
  %576 = bitcast {}* %.in2440 to i8*
  %577 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 367), align 8
  %578 = icmp eq {}* %.in2440, %577
  %.val2564 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341154.0 = select i1 %578, {}* %.val2564, {}* %575
  %579 = icmp eq {}* %G341154.0, %575
  br i1 %579, label %tag206, label %tag352

normal-dest2027:                                  ; preds = %tag387
  %580 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %581 = invoke {}* @cc_safe_fdefinition({}* %580)
          to label %normal-dest2029 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2029:                                  ; preds = %normal-dest2027
  %582 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 398), align 16
  %ptrtoint2030 = ptrtoint {}* %581 to i64
  %entry-point-addr-uint2031 = add i64 %ptrtoint2030, 7
  %entry-point-addr2032 = inttoptr i64 %entry-point-addr-uint2031 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2033 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2032, align 8
  %583 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2033({}* %581, i64 2, {}* %farg3, {}* %582, {}* null, {}* null)
          to label %normal-dest2036 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2036:                                  ; preds = %normal-dest2029
  %.elt2300 = extractvalue { {}*, i64 } %583, 0
  %.elt2302 = extractvalue { {}*, i64 } %583, 1
  %cond2167 = icmp eq i64 %.elt2302, 0
  %584 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340693.0 = select i1 %cond2167, {}* %584, {}* %.elt2300
  %ptrtoint2042 = ptrtoint {}* %228 to i64
  %entry-point-addr-uint2043 = add i64 %ptrtoint2042, 7
  %entry-point-addr2044 = inttoptr i64 %entry-point-addr-uint2043 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2045 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2044, align 8
  %585 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2045({}* %228, i64 2, {}* %farg0, {}* %G340693.0, {}* null, {}* null)
          to label %normal-dest2048 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2048:                                  ; preds = %normal-dest2036
  %.elt2304 = extractvalue { {}*, i64 } %585, 0
  %586 = ptrtoint {}* %.elt2304 to i64
  %.elt2306 = extractvalue { {}*, i64 } %585, 1
  br label %tag32

normal-dest2100:                                  ; preds = %tag411
  %ptrtoint2101 = ptrtoint {}* %242 to i64
  %entry-point-addr-uint2102 = add i64 %ptrtoint2101, 7
  %entry-point-addr2103 = inttoptr i64 %entry-point-addr-uint2102 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2104 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2103, align 8
  %587 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2104({}* %242, i64 2, {}* nonnull %farg2, {}* nonnull %106, {}* null, {}* null)
          to label %normal-dest2107 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2107:                                  ; preds = %normal-dest2100
  %.elt2470 = extractvalue { {}*, i64 } %587, 0
  %.elt2472 = extractvalue { {}*, i64 } %587, 1
  %cond2186 = icmp eq i64 %.elt2472, 0
  %588 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340973.1 = select i1 %cond2186, {}* %588, {}* %.elt2470
  br label %tag252

normal-dest2139:                                  ; preds = %tag423
  %ptrtoint2140 = ptrtoint {}* %250 to i64
  %entry-point-addr-uint2141 = add i64 %ptrtoint2140, 7
  %entry-point-addr2142 = inttoptr i64 %entry-point-addr-uint2141 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point2143 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr2142, align 8
  %589 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point2143({}* %250, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest2146 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

normal-dest2146:                                  ; preds = %normal-dest2139
  %.elt2278 = extractvalue { {}*, i64 } %589, 0
  %.elt2280 = extractvalue { {}*, i64 } %589, 1
  %cond2164 = icmp eq i64 %.elt2280, 0
  %590 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G340778.0 = select i1 %cond2164, {}* %590, {}* %.elt2278
  %591 = icmp eq {}* %G340778.0, %590
  br i1 %591, label %tag309, label %tag176
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^311^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !77 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^311^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G341206.0 = phi {}* [ %18, %header-check-br ], [ %G341206.1, %normal-dest54 ], [ %G341206.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 402), align 16
  %ptrtoint13 = ptrtoint {}* %G341206.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G341206.0, i64 2, {}* %"closure->SCH-NEUEN-TAG-MERKEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 402), align 16
  %"closure->SCH-NEUEN-TAG-MERKEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 11854, i64 311, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br59

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 423), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->SCH-NEUEN-TAG-MERKEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 424), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->SCH-NEUEN-TAG-MERKEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1244 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 402), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 422), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341206.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag1

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341206.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !78 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc9 unwind label %cleanup-lpad

.noexc9:                                          ; preds = %13
  unreachable

cleanup-lpad:                                     ; preds = %13, %10
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %14

normal-dest:                                      ; preds = %11
  %15 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %16 = insertvalue { {}*, i64 } undef, {}* %15, 0
  %17 = insertvalue { {}*, i64 } %16, i64 1, 1
  ret { {}*, i64 } %17
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^315^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !79 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^315^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G341242.0 = phi {}* [ %18, %header-check-br ], [ %G341242.1, %normal-dest17 ], [ %G341242.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 427), align 8
  %ptrtoint20 = ptrtoint {}* %G341242.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G341242.0, i64 2, {}* %"closure->SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag2, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 427), align 8
  %"closure->SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 11930, i64 315, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341242.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 429), align 8
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 430), align 16
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 1260 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 427), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

normal-dest60:                                    ; preds = %tag2
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 426), align 16
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341242.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag2

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !80 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc9 unwind label %cleanup-lpad

.noexc9:                                          ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %13 = insertvalue { {}*, i64 } undef, {}* %12, 0
  %14 = insertvalue { {}*, i64 } %13, i64 1, 1
  ret { {}*, i64 } %14
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^319^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !81 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^319^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br73
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G341297.0 = phi {}* [ %18, %header-check-br ], [ %G341297.1, %normal-dest17 ], [ %G341297.2, %normal-dest67 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 454), align 16
  %ptrtoint20 = ptrtoint {}* %G341297.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G341297.0, i64 2, {}* %"closure->SCHULE_PARAMETER_UNBEKANNT", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 454), align 16
  %"closure->SCHULE_PARAMETER_UNBEKANNT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 12015, i64 319, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br73

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 453), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341297.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 456), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->SCHULE_PARAMETER_UNBEKANNT", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 459), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->SCHULE_PARAMETER_UNBEKANNT", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1276 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 454), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341297.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag1

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !82 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 4
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 4
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 4, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc2183 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc2183:                                       ; preds = %13
  unreachable

tag2:                                             ; preds = %normal-dest1288
  %14 = ptrtoint {}* %.in to i64
  %single-float-tag-only = and i64 %14, 7
  %fixnum-tag-only4331946 = and i64 %14, 3
  %fixnump-test434 = icmp ne i64 %fixnum-tag-only4331946, 0
  %test561 = icmp eq i64 %single-float-tag-only, 1
  %or.cond2216 = and i1 %fixnump-test434, %test561
  br i1 %or.cond2216, label %header-check-br558, label %tag40

tag5:                                             ; preds = %tag310
  %15 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only373 = and i64 %15, 7
  %16 = icmp eq i64 %single-float-tag-only373, 6
  br i1 %16, label %tag153, label %tag334

tag7:                                             ; preds = %normal-dest1175, %normal-dest1104
  %17 = phi {}* [ %343, %normal-dest1104 ], [ %359, %normal-dest1175 ]
  %G341715.0 = phi {}* [ %G341715.1, %normal-dest1104 ], [ %.val2245, %normal-dest1175 ]
  %18 = icmp eq {}* %G341715.0, %17
  br i1 %18, label %tag7.tag97_crit_edge, label %tag163

tag7.tag97_crit_edge:                             ; preds = %tag7
  %.val22612282.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag97

tag8:                                             ; preds = %tag349
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest376 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag16:                                            ; preds = %tag237
  %21 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only432 = and i64 %21, 7
  %22 = icmp eq i64 %single-float-tag-only432, 6
  br i1 %22, label %tag250, label %tag143

tag22:                                            ; preds = %tag113, %normal-dest1127
  %.val2258 = phi {}* [ %350, %normal-dest1127 ], [ %.val22562295, %tag113 ]
  %G341407.0 = phi {}* [ %G341407.1, %normal-dest1127 ], [ %.val2255, %tag113 ]
  %23 = icmp eq {}* %G341407.0, %.val2258
  br i1 %23, label %tag22.tag277_crit_edge, label %tag162

tag22.tag277_crit_edge:                           ; preds = %tag22
  %.val2257.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag277

tag23:                                            ; preds = %normal-dest1644
  %24 = add i64 %446, 5
  %25 = inttoptr i64 %24 to {}**
  %26 = load {}*, {}** %25, align 8
  br label %tag357

tag31:                                            ; preds = %tag53
  %27 = add i64 %39, -3
  %28 = inttoptr i64 %27 to {}**
  %29 = load {}*, {}** %28, align 8
  br label %tag294

tag34:                                            ; preds = %tag119
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest485 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag36:                                            ; preds = %normal-dest1725
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %33 = icmp eq {}* %"%DOLIST-VAR.02280", %32
  %.val2271 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341580.0 = select i1 %33, {}* %.val2271, {}* %32
  %34 = icmp eq {}* %G341580.0, %32
  br i1 %34, label %tag198, label %tag151

tag40:                                            ; preds = %header-check-br558, %header-check-br1597, %tag287, %tag328, %tag2, %tag349
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest542 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag43:                                            ; preds = %tag91, %normal-dest903
  %37 = phi {}* [ %310, %normal-dest903 ], [ %.val22602294, %tag91 ]
  %G341328.0 = phi {}* [ %G341328.1, %normal-dest903 ], [ %.val2259, %tag91 ]
  %38 = icmp eq {}* %G341328.0, %37
  br i1 %38, label %tag332, label %tag229

tag53:                                            ; preds = %tag53.preheader, %tag148.backedge
  %.val2270 = phi {}* [ %393, %tag148.backedge ], [ %206, %tag53.preheader ]
  %"%DOLIST-VAR.02280" = phi {}* [ %"%DOLIST-VAR.0.be", %tag148.backedge ], [ %"%DOLIST-VAR.1", %tag53.preheader ]
  %39 = ptrtoint {}* %"%DOLIST-VAR.02280" to i64
  %tag-only5722102 = and i64 %39, 7
  %consp-test573 = icmp eq i64 %tag-only5722102, 3
  %.val2269 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341610.0 = select i1 %consp-test573, {}* %.val2269, {}* %.val2270
  %40 = icmp eq {}* %G341610.0, %.val2270
  br i1 %40, label %tag297, label %tag31

tag57:                                            ; preds = %normal-dest791
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest584 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag58:                                            ; preds = %normal-dest1019
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 447), align 8
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest625 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag62:                                            ; preds = %tag230
  br i1 %or.cond2238, label %header-check-br1669, label %tag356

tag63:                                            ; preds = %header-check-br1597, %header-check-br1597, %header-check-br1597, %header-check-br1597
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest649 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag68:                                            ; preds = %header-check-br702, %header-check-br702, %header-check-br702, %header-check-br702
  %47 = ptrtoint {}* %73 to i64
  %single-float-tag-only686 = and i64 %47, 7
  %48 = icmp eq i64 %single-float-tag-only686, 6
  br i1 %48, label %tag277, label %tag225

tag79:                                            ; preds = %tag277
  %49 = ptrtoint {}* %.in2032 to i64
  %single-float-tag-only724 = and i64 %49, 7
  %fixnum-tag-only18012039 = and i64 %49, 3
  %fixnump-test1802 = icmp ne i64 %fixnum-tag-only18012039, 0
  %test1862 = icmp eq i64 %single-float-tag-only724, 1
  %or.cond2243 = and i1 %fixnump-test1802, %test1862
  br i1 %or.cond2243, label %header-check-br1859, label %tag91

tag86:                                            ; preds = %normal-dest1518
  %50 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest741 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag87:                                            ; preds = %header-check-br1324, %header-check-br1324, %header-check-br1324, %header-check-br1324
  %52 = ptrtoint {}* %211 to i64
  %single-float-tag-only781 = and i64 %52, 7
  %53 = icmp eq i64 %single-float-tag-only781, 6
  br i1 %53, label %tag310, label %tag262

tag90:                                            ; preds = %tag281
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 170), align 16
  %55 = invoke {}* @cc_safe_symbol_value({}* %54)
          to label %normal-dest791 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag91:                                            ; preds = %tag281.tag91_crit_edge, %header-check-br1803, %header-check-br1859, %tag79, %tag274
  %.val2259 = phi {}* [ %.val2259.pre, %tag281.tag91_crit_edge ], [ %.val2257, %tag274 ], [ %.val2257, %tag79 ], [ %.val2257, %header-check-br1859 ], [ %.val2257, %header-check-br1803 ]
  %.val22602294 = phi {}* [ %.val2260, %tag281.tag91_crit_edge ], [ %.val22582292, %tag274 ], [ %.val22582292, %tag79 ], [ %.val22582292, %header-check-br1859 ], [ %.val22582292, %header-check-br1803 ]
  %56 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 367), align 8
  %57 = icmp eq {}* %.in2032, %56
  %G341337.0 = select i1 %57, {}* %.val2259, {}* %.val22602294
  %58 = icmp eq {}* %G341337.0, %.val22602294
  br i1 %58, label %tag98, label %tag43

tag92:                                            ; preds = %header-check-br1331, %header-check-br1331, %header-check-br1331, %header-check-br1331
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest801 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag93:                                            ; preds = %tag131
  %61 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest817 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag97:                                            ; preds = %tag7.tag97_crit_edge, %header-check-br1794, %header-check-br1748, %tag348, %tag335
  %.val22612282 = phi {}* [ %.val22612282.pre, %tag7.tag97_crit_edge ], [ %.val2245, %tag335 ], [ %.val2245, %tag348 ], [ %.val2245, %header-check-br1748 ], [ %.val2245, %header-check-br1794 ]
  %63 = phi {}* [ %17, %tag7.tag97_crit_edge ], [ %359, %tag335 ], [ %359, %tag348 ], [ %359, %header-check-br1748 ], [ %359, %header-check-br1794 ]
  %"%SUBLIST341268.02281" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 434), align 16
  %64 = icmp eq {}* %"%SUBLIST341268.02281", %63
  %object.02283 = select i1 %64, {}* %.val22612282, {}* %63
  %65 = icmp eq {}* %object.02283, %63
  %G341650.02284 = select i1 %65, {}* %.val22612282, {}* %63
  %66 = icmp eq {}* %G341650.02284, %63
  br i1 %66, label %tag206, label %tag149.lr.ph

tag149.lr.ph:                                     ; preds = %tag97
  %67 = ptrtoint {}* %.in2131 to i64
  %single-float-tag-only647 = and i64 %67, 7
  %fixnum-tag-only2129 = and i64 %67, 3
  %fixnump-test = icmp ne i64 %fixnum-tag-only2129, 0
  %test1672 = icmp eq i64 %single-float-tag-only647, 1
  %or.cond2238 = and i1 %fixnump-test, %test1672
  %gep1674 = getelementptr inbounds i8, i8* %360, i64 -9
  %irc-bit-cast1675 = bitcast i8* %gep1674 to i64*
  br label %tag149

tag98:                                            ; preds = %tag91
  %68 = ptrtoint {}* %.in2032 to i64
  %single-float-tag-only844 = and i64 %68, 7
  %fixnum-tag-only4822030 = and i64 %68, 3
  %fixnump-test483 = icmp ne i64 %fixnum-tag-only4822030, 0
  %test698 = icmp eq i64 %single-float-tag-only844, 1
  %or.cond2219 = and i1 %fixnump-test483, %test698
  br i1 %or.cond2219, label %header-check-br695, label %tag332

tag109:                                           ; preds = %tag291
  %fixnum-tag-only8912069 = and i64 %167, 3
  %fixnump-test892 = icmp ne i64 %fixnum-tag-only8912069, 0
  %test666 = icmp eq i64 %single-float-tag-only1700, 1
  %or.cond2218 = and i1 %fixnump-test892, %test666
  br i1 %or.cond2218, label %header-check-br663, label %tag250

tag111:                                           ; preds = %header-check-br1459, %header-check-br1459, %header-check-br1459, %header-check-br1459
  %69 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest896 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag112:                                           ; preds = %header-check-br1188, %header-check-br1188, %header-check-br1188, %header-check-br1188
  %71 = ptrtoint {}* %97 to i64
  %single-float-tag-only910 = and i64 %71, 7
  %72 = icmp eq i64 %single-float-tag-only910, 6
  br i1 %72, label %tag237, label %tag199

tag113:                                           ; preds = %tag346.tag113_crit_edge, %header-check-br837, %header-check-br1331, %tag175, %tag305, %tag136, %tag354
  %.val2255 = phi {}* [ %.val2255.pre, %tag346.tag113_crit_edge ], [ %.val2253, %tag354 ], [ %.val2253, %tag136 ], [ %.val2253, %tag305 ], [ %.val2253, %tag175 ], [ %.val2253, %header-check-br1331 ], [ %.val2253, %header-check-br837 ]
  %.val22562295 = phi {}* [ %.val2256, %tag346.tag113_crit_edge ], [ %439, %tag354 ], [ %439, %tag136 ], [ %439, %tag305 ], [ %439, %tag175 ], [ %439, %header-check-br1331 ], [ %439, %header-check-br837 ]
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %74 = icmp eq {}* %.in2032, %73
  %G341416.0 = select i1 %74, {}* %.val2255, {}* %.val22562295
  %75 = icmp eq {}* %G341416.0, %.val22562295
  br i1 %75, label %tag324, label %tag22

tag116:                                           ; preds = %header-check-br970, %header-check-br970, %header-check-br970, %header-check-br970
  %76 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest928 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag119:                                           ; preds = %tag353
  %78 = icmp eq {}* %"%SUBLIST341268.02285", %197
  br i1 %78, label %tag206, label %tag34

tag125:                                           ; preds = %header-check-br1234, %header-check-br1234, %header-check-br1234, %header-check-br1234
  %79 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest947 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag131:                                           ; preds = %normal-dest1644
  %81 = icmp eq {}* %x1645.0, %445
  %.val2267 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341624.0 = select i1 %81, {}* %.val2267, {}* %445
  %82 = icmp eq {}* %G341624.0, %445
  br i1 %82, label %tag93, label %tag151

tag135:                                           ; preds = %tag324
  %fixnum-tag-only9772047 = and i64 %186, 3
  %fixnump-test978 = icmp ne i64 %fixnum-tag-only9772047, 0
  %test705 = icmp eq i64 %single-float-tag-only1817, 1
  %or.cond2220 = and i1 %fixnump-test978, %test705
  br i1 %or.cond2220, label %header-check-br702, label %tag277

tag136:                                           ; preds = %normal-dest1621
  %83 = ptrtoint {}* %.in2032 to i64
  %single-float-tag-only979 = and i64 %83, 7
  %84 = icmp eq i64 %single-float-tag-only979, 6
  br i1 %84, label %tag113, label %tag354

tag137:                                           ; preds = %tag212
  %85 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %86 = invoke {}* @cc_safe_fdefinition({}* %85)
          to label %normal-dest981 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag140:                                           ; preds = %header-check-br1059, %header-check-br1059, %header-check-br1059, %header-check-br1059
  %87 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest998 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag141:                                           ; preds = %normal-dest607, %normal-dest791
  %89 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 378), align 16
  %90 = invoke {}* @cc_safe_fdefinition({}* %89)
          to label %normal-dest1012 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag143:                                           ; preds = %tag16
  %fixnum-tag-only10322067 = and i64 %21, 3
  %fixnump-test1033 = icmp ne i64 %fixnum-tag-only10322067, 0
  %test878 = icmp eq i64 %single-float-tag-only432, 1
  %or.cond2222 = and i1 %fixnump-test1033, %test878
  br i1 %or.cond2222, label %header-check-br875, label %tag250

tag144:                                           ; preds = %header-check-br663, %header-check-br663, %header-check-br663, %header-check-br663
  %91 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %92 = invoke {}* @cc_safe_fdefinition({}* %91)
          to label %normal-dest1035 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag147:                                           ; preds = %normal-dest, %normal-dest1005
  %.val2274 = phi {}* [ %327, %normal-dest1005 ], [ %.val2244, %normal-dest ]
  %G341733.0 = phi {}* [ %G341733.1, %normal-dest1005 ], [ %.val, %normal-dest ]
  %93 = icmp eq {}* %G341733.0, %.val2274
  br i1 %93, label %tag147.tag310_crit_edge, label %tag166

tag147.tag310_crit_edge:                          ; preds = %tag147
  %.val2273.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag310

tag149:                                           ; preds = %tag149.lr.ph, %tag356
  %G341704.0 = phi {}* [ %.val22612282, %tag149.lr.ph ], [ %.val2261, %tag356 ]
  %94 = phi i1 [ %65, %tag149.lr.ph ], [ %204, %tag356 ]
  %95 = phi {}* [ %63, %tag149.lr.ph ], [ %200, %tag356 ]
  %"%SUBLIST341268.02285" = phi {}* [ %"%SUBLIST341268.02281", %tag149.lr.ph ], [ %"%SUBLIST341268.0", %tag356 ]
  %96 = ptrtoint {}* %"%SUBLIST341268.02285" to i64
  %tag-only10572083 = and i64 %96, 7
  %consp-test1058 = icmp eq i64 %tag-only10572083, 3
  br i1 %consp-test1058, label %tag303, label %tag358

tag151:                                           ; preds = %tag36, %tag148.backedge, %tag131, %tag357, %normal-dest1354, %normal-dest1148, %normal-dest1073, %tag299, %normal-dest505
  %97 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %98 = icmp eq {}* %97, %farg2
  %.val2247 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %.val2248 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341539.0 = select i1 %98, {}* %.val2247, {}* %.val2248
  %99 = icmp eq {}* %G341539.0, %.val2248
  br i1 %99, label %tag195, label %tag360

tag153:                                           ; preds = %header-check-br1218, %header-check-br970, %tag355, %tag5, %tag334, %tag299
  %100 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %101 = invoke {}* @cc_safe_fdefinition({}* %100)
          to label %normal-dest1073 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag156:                                           ; preds = %normal-dest625, %normal-dest1521
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 427), align 8
  %103 = invoke {}* @cc_safe_fdefinition({}* %102)
          to label %normal-dest1086 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag157:                                           ; preds = %header-check-br1794, %header-check-br1794, %header-check-br1794, %header-check-br1794
  %104 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %105 = invoke {}* @cc_safe_fdefinition({}* %104)
          to label %normal-dest1095 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag161:                                           ; preds = %header-check-br1112, %header-check-br1112, %header-check-br1112, %header-check-br1112
  %106 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %107 = invoke {}* @cc_safe_fdefinition({}* %106)
          to label %normal-dest1120 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag162:                                           ; preds = %tag22
  %108 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 378), align 16
  %109 = invoke {}* @cc_safe_fdefinition({}* %108)
          to label %normal-dest1134 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag163:                                           ; preds = %tag7
  %110 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %111 = invoke {}* @cc_safe_fdefinition({}* %110)
          to label %normal-dest1148 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag166:                                           ; preds = %tag147
  %112 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %113 = invoke {}* @cc_safe_fdefinition({}* %112)
          to label %normal-dest1168 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag175:                                           ; preds = %header-check-br837, %header-check-br837, %header-check-br837, %header-check-br837
  %114 = ptrtoint {}* %441 to i64
  %single-float-tag-only1208 = and i64 %114, 7
  %115 = icmp eq i64 %single-float-tag-only1208, 6
  br i1 %115, label %tag113, label %tag305

tag189:                                           ; preds = %normal-dest1584
  %116 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 449), align 8
  %117 = invoke {}* @cc_safe_fdefinition({}* %116)
          to label %normal-dest1265 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag193:                                           ; preds = %tag360
  %118 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %119 = invoke {}* @cc_safe_fdefinition({}* %118)
          to label %normal-dest1281 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag195:                                           ; preds = %tag151
  %120 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only1300 = and i64 %120, 7
  %fixnum-tag-only6372075 = and i64 %120, 3
  %fixnump-test638 = icmp ne i64 %fixnum-tag-only6372075, 0
  %test1191 = icmp eq i64 %single-float-tag-only1300, 1
  %or.cond2228 = and i1 %fixnump-test638, %test1191
  br i1 %or.cond2228, label %header-check-br1188, label %tag237

tag198:                                           ; preds = %tag36
  %121 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %122 = invoke {}* @cc_safe_fdefinition({}* %121)
          to label %normal-dest1309 unwind label %cleanup-lpad.loopexit

tag199:                                           ; preds = %tag112
  %fixnum-tag-only13222077 = and i64 %71, 3
  %fixnump-test1323 = icmp ne i64 %fixnum-tag-only13222077, 0
  %test1237 = icmp eq i64 %single-float-tag-only910, 1
  %or.cond2231 = and i1 %fixnump-test1323, %test1237
  br i1 %or.cond2231, label %header-check-br1234, label %tag237

tag204:                                           ; preds = %header-check-br1452, %header-check-br1452, %header-check-br1452, %header-check-br1452
  %123 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %124 = invoke {}* @cc_safe_fdefinition({}* %123)
          to label %normal-dest1339 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag206:                                           ; preds = %tag356, %tag97, %tag119
  %125 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %126 = invoke {}* @cc_safe_fdefinition({}* %125)
          to label %normal-dest1354 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag210:                                           ; preds = %normal-dest1725
  %127 = add i64 %39, 5
  %128 = inttoptr i64 %127 to {}**
  %129 = load {}*, {}** %128, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag148.backedge

tag212:                                           ; preds = %tag303
  br i1 %94, label %tag137, label %tag230

tag225:                                           ; preds = %tag68
  %fixnum-tag-only14182049 = and i64 %47, 3
  %fixnump-test1419 = icmp ne i64 %fixnum-tag-only14182049, 0
  %test1115 = icmp eq i64 %single-float-tag-only686, 1
  %or.cond2227 = and i1 %fixnump-test1419, %test1115
  br i1 %or.cond2227, label %header-check-br1112, label %tag277

tag229:                                           ; preds = %tag43
  %130 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 443), align 8
  %131 = invoke {}* @cc_safe_fdefinition({}* %130)
          to label %normal-dest1430 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag230:                                           ; preds = %tag212, %normal-dest989, %tag282
  %.val2266 = phi {}* [ %95, %tag282 ], [ %325, %normal-dest989 ], [ %G341704.0, %tag212 ]
  %132 = phi {}* [ %G341704.0, %tag282 ], [ %.val2265.pre, %normal-dest989 ], [ %G341704.0, %tag212 ]
  %.in2135 = phi {}* [ %162, %tag282 ], [ %.in2134, %normal-dest989 ], [ %G341704.0, %tag212 ]
  %133 = bitcast {}* %.in2135 to i8*
  %134 = icmp eq {}* %.in2131, %.in2135
  %G341684.0 = select i1 %134, {}* %132, {}* %.val2266
  %135 = icmp eq {}* %G341684.0, %.val2266
  br i1 %135, label %tag62, label %tag353

tag237:                                           ; preds = %tag360.tag237_crit_edge, %header-check-br1188, %header-check-br1234, %tag112, %tag199, %tag195
  %.val2251 = phi {}* [ %.val2251.pre, %tag360.tag237_crit_edge ], [ %.val2247, %tag195 ], [ %.val2247, %tag199 ], [ %.val2247, %tag112 ], [ %.val2247, %header-check-br1234 ], [ %.val2247, %header-check-br1188 ]
  %.val22522296 = phi {}* [ %.val2252, %tag360.tag237_crit_edge ], [ %.val2248, %tag195 ], [ %.val2248, %tag199 ], [ %.val2248, %tag112 ], [ %.val2248, %header-check-br1234 ], [ %.val2248, %header-check-br1188 ]
  %136 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %137 = icmp eq {}* %136, %farg2
  %G341482.0 = select i1 %137, {}* %.val2251, {}* %.val22522296
  %138 = icmp eq {}* %G341482.0, %.val22522296
  br i1 %138, label %tag16, label %tag311

tag241:                                           ; preds = %header-check-br1803, %header-check-br1803, %header-check-br1803, %header-check-br1803
  %139 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 359), align 8
  %140 = invoke {}* @cc_safe_fdefinition({}* %139)
          to label %normal-dest1489 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag246:                                           ; preds = %tag346
  %141 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 170), align 16
  %142 = invoke {}* @cc_safe_symbol_value({}* %141)
          to label %normal-dest1518 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag249:                                           ; preds = %normal-dest1019
  %143 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 449), align 8
  %144 = invoke {}* @cc_safe_fdefinition({}* %143)
          to label %normal-dest1521 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag250:                                           ; preds = %header-check-br875, %header-check-br663, %tag109, %tag291, %tag16, %tag143, %tag311
  %145 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %146 = invoke {}* @cc_safe_fdefinition({}* %145)
          to label %normal-dest1534 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag251:                                           ; preds = %normal-dest
  %147 = ptrtoint {}* %farg2 to i64
  %single-float-tag-only1542 = and i64 %147, 7
  %148 = icmp eq i64 %single-float-tag-only1542, 6
  br i1 %148, label %tag310, label %tag275

tag262:                                           ; preds = %tag87
  %fixnum-tag-only15652166 = and i64 %52, 3
  %fixnump-test1566 = icmp ne i64 %fixnum-tag-only15652166, 0
  %test1062 = icmp eq i64 %single-float-tag-only781, 1
  %or.cond2225 = and i1 %fixnump-test1566, %test1062
  br i1 %or.cond2225, label %header-check-br1059, label %tag310

tag267:                                           ; preds = %normal-dest764, %normal-dest1518
  %149 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 378), align 16
  %150 = invoke {}* @cc_safe_fdefinition({}* %149)
          to label %normal-dest1577 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag272:                                           ; preds = %tag311
  %151 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %152 = invoke {}* @cc_safe_fdefinition({}* %151)
          to label %normal-dest1614 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag274:                                           ; preds = %header-check-br1859, %header-check-br1859, %header-check-br1859, %header-check-br1859
  %153 = ptrtoint {}* %156 to i64
  %single-float-tag-only1633 = and i64 %153, 7
  %fixnum-tag-only8932041 = and i64 %153, 3
  %fixnump-test894 = icmp ne i64 %fixnum-tag-only8932041, 0
  %test1806 = icmp eq i64 %single-float-tag-only1633, 1
  %or.cond2242 = and i1 %fixnump-test894, %test1806
  br i1 %or.cond2242, label %header-check-br1803, label %tag91

tag275:                                           ; preds = %tag251
  %fixnum-tag-only16342164 = and i64 %147, 3
  %fixnump-test1635 = icmp ne i64 %fixnum-tag-only16342164, 0
  %test1327 = icmp eq i64 %single-float-tag-only1542, 1
  %or.cond2232 = and i1 %fixnump-test1635, %test1327
  br i1 %or.cond2232, label %header-check-br1324, label %tag310

tag276:                                           ; preds = %normal-dest505
  %154 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 380), align 16
  %155 = invoke {}* @cc_safe_fdefinition({}* %154)
          to label %normal-dest1637 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag277:                                           ; preds = %tag22.tag277_crit_edge, %header-check-br1112, %header-check-br702, %tag68, %tag225, %tag135, %tag324
  %.val2257 = phi {}* [ %.val2257.pre, %tag22.tag277_crit_edge ], [ %.val2255, %tag324 ], [ %.val2255, %tag135 ], [ %.val2255, %tag225 ], [ %.val2255, %tag68 ], [ %.val2255, %header-check-br702 ], [ %.val2255, %header-check-br1112 ]
  %.val22582292 = phi {}* [ %.val2258, %tag22.tag277_crit_edge ], [ %.val22562295, %tag324 ], [ %.val22562295, %tag135 ], [ %.val22562295, %tag225 ], [ %.val22562295, %tag68 ], [ %.val22562295, %header-check-br702 ], [ %.val22562295, %header-check-br1112 ]
  %156 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %157 = icmp eq {}* %.in2032, %156
  %G341388.0 = select i1 %157, {}* %.val2257, {}* %.val22582292
  %158 = icmp eq {}* %G341388.0, %.val22582292
  br i1 %158, label %tag79, label %tag281

tag281:                                           ; preds = %tag277, %normal-dest1497
  %.val2260 = phi {}* [ %422, %normal-dest1497 ], [ %.val22582292, %tag277 ]
  %G341379.0 = phi {}* [ %G341379.1, %normal-dest1497 ], [ %.val2257, %tag277 ]
  %159 = icmp eq {}* %G341379.0, %.val2260
  br i1 %159, label %tag281.tag91_crit_edge, label %tag90

tag281.tag91_crit_edge:                           ; preds = %tag281
  %.val2259.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag91

tag282:                                           ; preds = %tag303
  %160 = add i64 %96, -3
  %161 = inttoptr i64 %160 to {}**
  %162 = load {}*, {}** %161, align 8
  br label %tag230

tag286:                                           ; preds = %normal-dest1141
  %163 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 447), align 8
  %164 = invoke {}* @cc_safe_fdefinition({}* %163)
          to label %normal-dest1686 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag287:                                           ; preds = %header-check-br558, %header-check-br558, %header-check-br558, %header-check-br558
  %165 = ptrtoint {}* %384 to i64
  %single-float-tag-only1694 = and i64 %165, 7
  %166 = icmp eq i64 %single-float-tag-only1694, 6
  br i1 %166, label %tag40, label %tag328

tag291:                                           ; preds = %header-check-br875, %header-check-br875, %header-check-br875, %header-check-br875
  %167 = ptrtoint {}* %136 to i64
  %single-float-tag-only1700 = and i64 %167, 7
  %168 = icmp eq i64 %single-float-tag-only1700, 6
  br i1 %168, label %tag250, label %tag109

tag292:                                           ; preds = %normal-dest1141
  %169 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 449), align 8
  %170 = invoke {}* @cc_safe_fdefinition({}* %169)
          to label %normal-dest1702 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag294:                                           ; preds = %normal-dest1742, %tag31
  %ZEIT.0 = phi {}* [ %29, %tag31 ], [ %ZEIT.1, %normal-dest1742 ]
  %171 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %172 = invoke {}* @cc_safe_fdefinition({}* %171)
          to label %normal-dest1718 unwind label %cleanup-lpad.loopexit

tag295:                                           ; preds = %header-check-br695, %header-check-br695, %header-check-br695, %header-check-br695
  %173 = ptrtoint {}* %56 to i64
  %single-float-tag-only1733 = and i64 %173, 7
  %fixnum-tag-only12252033 = and i64 %173, 3
  %fixnump-test1226 = icmp ne i64 %fixnum-tag-only12252033, 0
  %test1462 = icmp eq i64 %single-float-tag-only1733, 1
  %or.cond2235 = and i1 %fixnump-test1226, %test1462
  br i1 %or.cond2235, label %header-check-br1459, label %tag332

tag297:                                           ; preds = %tag53
  %174 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %175 = invoke {}* @cc_safe_fdefinition({}* %174)
          to label %normal-dest1735 unwind label %cleanup-lpad.loopexit

tag299:                                           ; preds = %tag310, %normal-dest936
  %176 = phi {}* [ %312, %normal-dest936 ], [ %.val22742293, %tag310 ]
  %G341549.0 = phi {}* [ %G341549.1, %normal-dest936 ], [ %.val2273, %tag310 ]
  %177 = icmp eq {}* %G341549.0, %176
  br i1 %177, label %tag153, label %tag151

tag303:                                           ; preds = %tag149
  %178 = icmp eq {}* %G341704.0, %95
  br i1 %178, label %tag212, label %tag282

tag305:                                           ; preds = %tag175
  %fixnum-tag-only17612057 = and i64 %114, 3
  %fixnump-test1762 = icmp ne i64 %fixnum-tag-only17612057, 0
  %test1334 = icmp eq i64 %single-float-tag-only1208, 1
  %or.cond2233 = and i1 %fixnump-test1762, %test1334
  br i1 %or.cond2233, label %header-check-br1331, label %tag113

tag309:                                           ; preds = %normal-dest1584
  %179 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 447), align 8
  %180 = invoke {}* @cc_safe_fdefinition({}* %179)
          to label %normal-dest1764 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag310:                                           ; preds = %tag147.tag310_crit_edge, %header-check-br1324, %header-check-br1059, %tag251, %tag275, %tag87, %tag262
  %.val2273 = phi {}* [ %.val2273.pre, %tag147.tag310_crit_edge ], [ %.val, %tag262 ], [ %.val, %tag87 ], [ %.val, %tag275 ], [ %.val, %tag251 ], [ %.val, %header-check-br1059 ], [ %.val, %header-check-br1324 ]
  %.val22742293 = phi {}* [ %.val2274, %tag147.tag310_crit_edge ], [ %.val2244, %tag262 ], [ %.val2244, %tag87 ], [ %.val2244, %tag275 ], [ %.val2244, %tag251 ], [ %.val2244, %header-check-br1059 ], [ %.val2244, %header-check-br1324 ]
  %181 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %182 = icmp eq {}* %181, %farg2
  %G341558.0 = select i1 %182, {}* %.val2273, {}* %.val22742293
  %183 = icmp eq {}* %G341558.0, %.val22742293
  br i1 %183, label %tag5, label %tag299

tag311:                                           ; preds = %tag237, %normal-dest1043
  %184 = phi {}* [ %332, %normal-dest1043 ], [ %.val22522296, %tag237 ]
  %G341473.0 = phi {}* [ %G341473.1, %normal-dest1043 ], [ %.val2251, %tag237 ]
  %185 = icmp eq {}* %G341473.0, %184
  br i1 %185, label %tag250, label %tag272

tag324:                                           ; preds = %tag113
  %186 = ptrtoint {}* %.in2032 to i64
  %single-float-tag-only1817 = and i64 %186, 7
  %187 = icmp eq i64 %single-float-tag-only1817, 6
  br i1 %187, label %tag277, label %tag135

tag326:                                           ; preds = %normal-dest392, %normal-dest1838, %normal-dest1764, %normal-dest1702, %normal-dest1686, %normal-dest1534, %normal-dest1430, %normal-dest1265, %normal-dest1086, %normal-dest542
  %.sink2181 = phi { {}*, i64 } [ %237, %normal-dest542 ], [ %341, %normal-dest1086 ], [ %379, %normal-dest1265 ], [ %410, %normal-dest1430 ], [ %428, %normal-dest1534 ], [ %452, %normal-dest1686 ], [ %453, %normal-dest1702 ], [ %468, %normal-dest1764 ], [ %481, %normal-dest1838 ], [ %227, %normal-dest392 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %.sink2181

tag327:                                           ; preds = %header-check-br1669, %header-check-br1669, %header-check-br1669, %header-check-br1669
  %188 = ptrtoint {}* %.in2135 to i64
  %single-float-tag-only1825 = and i64 %188, 7
  %189 = icmp eq i64 %single-float-tag-only1825, 6
  br i1 %189, label %tag356, label %tag352

tag328:                                           ; preds = %tag287
  %fixnum-tag-only18261948 = and i64 %165, 3
  %fixnump-test1827 = icmp ne i64 %fixnum-tag-only18261948, 0
  %test1600 = icmp eq i64 %single-float-tag-only1694, 1
  %or.cond2237 = and i1 %fixnump-test1827, %test1600
  br i1 %or.cond2237, label %header-check-br1597, label %tag40

tag332:                                           ; preds = %header-check-br695, %header-check-br1459, %tag98, %tag295, %tag43
  %190 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 361), align 8
  %191 = invoke {}* @cc_safe_fdefinition({}* %190)
          to label %normal-dest1838 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag334:                                           ; preds = %tag5
  %fixnum-tag-only18462156 = and i64 %15, 3
  %fixnump-test1847 = icmp ne i64 %fixnum-tag-only18462156, 0
  %test1221 = icmp eq i64 %single-float-tag-only373, 1
  %or.cond2229 = and i1 %fixnump-test1847, %test1221
  br i1 %or.cond2229, label %header-check-br1218, label %tag153

tag335:                                           ; preds = %header-check-br1748, %header-check-br1748, %header-check-br1748, %header-check-br1748
  %192 = ptrtoint {}* %361 to i64
  %single-float-tag-only1848 = and i64 %192, 7
  %fixnum-tag-only11102146 = and i64 %192, 3
  %fixnump-test1111 = icmp ne i64 %fixnum-tag-only11102146, 0
  %test1797 = icmp eq i64 %single-float-tag-only1848, 1
  %or.cond2240 = and i1 %fixnump-test1111, %test1797
  br i1 %or.cond2240, label %header-check-br1794, label %tag97

tag346:                                           ; preds = %normal-dest1621, %normal-dest810
  %.val2256 = phi {}* [ %292, %normal-dest810 ], [ %439, %normal-dest1621 ]
  %G341455.0 = phi {}* [ %G341455.1, %normal-dest810 ], [ %.val2253, %normal-dest1621 ]
  %193 = icmp eq {}* %G341455.0, %.val2256
  br i1 %193, label %tag346.tag113_crit_edge, label %tag246

tag346.tag113_crit_edge:                          ; preds = %tag346
  %.val2255.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag113

tag348:                                           ; preds = %normal-dest1175
  %194 = ptrtoint {}* %.in2131 to i64
  %single-float-tag-only1866 = and i64 %194, 7
  %fixnum-tag-only15742144 = and i64 %194, 3
  %fixnump-test1575 = icmp ne i64 %fixnum-tag-only15742144, 0
  %test1751 = icmp eq i64 %single-float-tag-only1866, 1
  %or.cond2239 = and i1 %fixnump-test1575, %test1751
  br i1 %or.cond2239, label %header-check-br1748, label %tag97

tag349:                                           ; preds = %normal-dest1288, %normal-dest657
  %195 = phi {}* [ %259, %normal-dest657 ], [ %382, %normal-dest1288 ]
  %G341512.0 = phi {}* [ %G341512.1, %normal-dest657 ], [ %.val2249, %normal-dest1288 ]
  %196 = icmp eq {}* %G341512.0, %195
  br i1 %196, label %tag40, label %tag8

tag352:                                           ; preds = %tag327
  %fixnum-tag-only18742132 = and i64 %188, 3
  %fixnump-test1875 = icmp ne i64 %fixnum-tag-only18742132, 0
  %test1455 = icmp eq i64 %single-float-tag-only1825, 1
  %or.cond2234 = and i1 %fixnump-test1875, %test1455
  br i1 %or.cond2234, label %header-check-br1452, label %tag356

tag353:                                           ; preds = %tag230, %normal-dest1347
  %197 = phi {}* [ %406, %normal-dest1347 ], [ %.val2266, %tag230 ]
  %G341675.0 = phi {}* [ %G341675.1, %normal-dest1347 ], [ %132, %tag230 ]
  %198 = icmp eq {}* %G341675.0, %197
  br i1 %198, label %tag353.tag356_crit_edge, label %tag119

tag353.tag356_crit_edge:                          ; preds = %tag353
  %.val2261.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag356

tag354:                                           ; preds = %tag136
  %fixnum-tag-only18762055 = and i64 %83, 3
  %fixnump-test1877 = icmp ne i64 %fixnum-tag-only18762055, 0
  %test840 = icmp eq i64 %single-float-tag-only979, 1
  %or.cond2221 = and i1 %fixnump-test1877, %test840
  br i1 %or.cond2221, label %header-check-br837, label %tag113

tag355:                                           ; preds = %header-check-br1218, %header-check-br1218, %header-check-br1218, %header-check-br1218
  %199 = ptrtoint {}* %181 to i64
  %single-float-tag-only1878 = and i64 %199, 7
  %fixnum-tag-only4652158 = and i64 %199, 3
  %fixnump-test466 = icmp ne i64 %fixnum-tag-only4652158, 0
  %test973 = icmp eq i64 %single-float-tag-only1878, 1
  %or.cond2224 = and i1 %fixnump-test466, %test973
  br i1 %or.cond2224, label %header-check-br970, label %tag153

tag356:                                           ; preds = %tag353.tag356_crit_edge, %header-check-br1452, %header-check-br1669, %tag62, %tag327, %tag352
  %.val2261 = phi {}* [ %.val2261.pre, %tag353.tag356_crit_edge ], [ %132, %tag352 ], [ %132, %tag327 ], [ %132, %tag62 ], [ %132, %header-check-br1669 ], [ %132, %header-check-br1452 ]
  %200 = phi {}* [ %197, %tag353.tag356_crit_edge ], [ %.val2266, %tag352 ], [ %.val2266, %tag327 ], [ %.val2266, %tag62 ], [ %.val2266, %header-check-br1669 ], [ %.val2266, %header-check-br1452 ]
  %201 = add i64 %96, 5
  %202 = inttoptr i64 %201 to {}**
  %"%SUBLIST341268.0" = load {}*, {}** %202, align 8
  %203 = icmp eq {}* %"%SUBLIST341268.0", %200
  %object.0 = select i1 %203, {}* %.val2261, {}* %200
  %204 = icmp eq {}* %object.0, %200
  %G341650.0 = select i1 %204, {}* %.val2261, {}* %200
  %205 = icmp eq {}* %G341650.0, %200
  br i1 %205, label %tag206, label %tag149

tag357:                                           ; preds = %normal-dest824, %tag23
  %206 = phi {}* [ %445, %tag23 ], [ %298, %normal-dest824 ]
  %"%DOLIST-VAR.1" = phi {}* [ %26, %tag23 ], [ %"%DOLIST-VAR.2", %normal-dest824 ]
  %207 = icmp eq {}* %"%DOLIST-VAR.1", %206
  br i1 %207, label %tag151, label %tag53.preheader

tag53.preheader:                                  ; preds = %tag357
  br label %tag53

tag358:                                           ; preds = %tag149
  %208 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %209 = invoke {}* @cc_safe_fdefinition({}* %208)
          to label %normal-dest1880 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag360:                                           ; preds = %tag151, %normal-dest955
  %.val2252 = phi {}* [ %314, %normal-dest955 ], [ %.val2248, %tag151 ]
  %G341530.0 = phi {}* [ %G341530.1, %normal-dest955 ], [ %.val2247, %tag151 ]
  %210 = icmp eq {}* %G341530.0, %.val2252
  br i1 %210, label %tag360.tag237_crit_edge, label %tag193

tag360.tag237_crit_edge:                          ; preds = %tag360
  %.val2251.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag237

cleanup-lpad.loopexit:                            ; preds = %tag198, %normal-dest1309, %tag294, %normal-dest1718, %tag297, %normal-dest1735
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest1339, %tag204, %normal-dest981, %tag137
  %lpad.loopexit2275 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10, %tag358, %normal-dest1838, %tag332, %normal-dest1764, %tag309, %normal-dest1702, %tag292, %normal-dest1686, %tag286, %normal-dest1637, %tag276, %normal-dest1614, %tag272, %normal-dest1880, %normal-dest1577, %tag267, %normal-dest1534, %tag250, %normal-dest1521, %tag249, %tag246, %normal-dest1489, %tag241, %normal-dest1430, %tag229, %normal-dest1354, %tag206, %normal-dest1281, %tag193, %normal-dest1265, %tag189, %normal-dest1168, %tag166, %normal-dest1148, %tag163, %normal-dest1134, %tag162, %normal-dest1120, %tag161, %normal-dest1095, %tag157, %normal-dest1086, %tag156, %normal-dest1073, %tag153, %normal-dest1035, %tag144, %normal-dest1012, %tag141, %normal-dest998, %tag140, %normal-dest947, %tag125, %normal-dest928, %tag116, %normal-dest896, %tag111, %normal-dest817, %tag93, %normal-dest801, %tag92, %tag90, %normal-dest764, %normal-dest752, %normal-dest745, %normal-dest743, %normal-dest741, %tag86, %normal-dest649, %tag63, %normal-dest625, %tag58, %normal-dest607, %normal-dest595, %normal-dest588, %normal-dest586, %normal-dest584, %tag57, %normal-dest542, %tag40, %normal-dest498, %normal-dest492, %normal-dest485, %tag34, %normal-dest392, %normal-dest383, %normal-dest380, %normal-dest378, %normal-dest376, %tag8
  %lpad.loopexit.split-lp2276 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit2275, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp2276, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %211 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %212 = icmp eq {}* %211, %farg2
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %.val2244 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341742.0 = select i1 %212, {}* %.val, {}* %.val2244
  %213 = icmp eq {}* %G341742.0, %.val2244
  br i1 %213, label %tag251, label %tag147

normal-dest376:                                   ; preds = %tag8
  %214 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %215 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 408), align 16
  %216 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 445), align 8
  %217 = invoke {}* @cc_safe_fdefinition({}* %216)
          to label %normal-dest378 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest378:                                   ; preds = %normal-dest376
  %218 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %219 = invoke {}* @cc_safe_fdefinition({}* %218)
          to label %normal-dest380 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest380:                                   ; preds = %normal-dest378
  %220 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 408), align 16
  %ptrtoint = ptrtoint {}* %219 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %221 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %219, i64 2, {}* %farg0, {}* %220, {}* null, {}* null)
          to label %normal-dest383 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest383:                                   ; preds = %normal-dest380
  %.elt1928 = extractvalue { {}*, i64 } %221, 0
  %.elt1930 = extractvalue { {}*, i64 } %221, 1
  %cond1889 = icmp eq i64 %.elt1930, 0
  %222 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341505.0 = select i1 %cond1889, {}* %222, {}* %.elt1928
  %ptrtoint386 = ptrtoint {}* %217 to i64
  %entry-point-addr-uint387 = add i64 %ptrtoint386, 7
  %entry-point-addr388 = inttoptr i64 %entry-point-addr-uint387 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point389 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr388, align 8
  %223 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point389({}* %217, i64 2, {}* %farg1, {}* %G341505.0, {}* null, {}* null)
          to label %normal-dest392 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest392:                                   ; preds = %normal-dest383
  %.elt1932 = extractvalue { {}*, i64 } %223, 0
  %.elt1934 = extractvalue { {}*, i64 } %223, 1
  %cond1890 = icmp eq i64 %.elt1934, 0
  %224 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341500.0 = select i1 %cond1890, {}* %224, {}* %.elt1932
  %225 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %226 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint398 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint399 = add i64 %ptrtoint398, 7
  %entry-point-addr400 = inttoptr i64 %entry-point-addr-uint399 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point401 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr400, align 8
  %227 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point401({}* %20, i64 7, {}* %farg0, {}* %214, {}* %farg0, {}* %215, {}* %G341500.0, {}* %225, {}* %226)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest485:                                   ; preds = %tag34
  %228 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 437), align 8
  %ptrtoint486 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint487 = add i64 %ptrtoint486, 7
  %entry-point-addr488 = inttoptr i64 %entry-point-addr-uint487 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point489 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr488, align 8
  %229 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point489({}* %31, i64 5, {}* %farg0, {}* %228, {}* %farg0, {}* %farg3, {}* %farg1)
          to label %normal-dest492 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest492:                                   ; preds = %normal-dest485
  %230 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 378), align 16
  %231 = invoke {}* @cc_safe_fdefinition({}* %230)
          to label %normal-dest498 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest498:                                   ; preds = %normal-dest492
  %ptrtoint499 = ptrtoint {}* %231 to i64
  %entry-point-addr-uint500 = add i64 %ptrtoint499, 7
  %entry-point-addr501 = inttoptr i64 %entry-point-addr-uint500 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point502 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr501, align 8
  %232 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point502({}* %231, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest505 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest505:                                   ; preds = %normal-dest498
  %.elt2094 = extractvalue { {}*, i64 } %232, 0
  %.elt2096 = extractvalue { {}*, i64 } %232, 1
  %cond1906 = icmp eq i64 %.elt2096, 0
  %233 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341635.0 = select i1 %cond1906, {}* %233, {}* %.elt2094
  %234 = icmp eq {}* %G341635.0, %233
  br i1 %234, label %tag151, label %tag276

normal-dest542:                                   ; preds = %tag40
  %235 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 451), align 8
  %236 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 452), align 16
  %ptrtoint543 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint544 = add i64 %ptrtoint543, 7
  %entry-point-addr545 = inttoptr i64 %entry-point-addr-uint544 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point546 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr545, align 8
  %237 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point546({}* %36, i64 6, {}* %235, {}* %236, {}* %farg0, {}* %farg2, {}* %farg3, {}* %farg1)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br558:                               ; preds = %tag2
  %gep563 = getelementptr inbounds i8, i8* %383, i64 -9
  %irc-bit-cast564 = bitcast i8* %gep563 to i64*
  %238 = load i64, i64* %irc-bit-cast564, align 8
  %239 = add i64 %238, -1309
  %240 = lshr i64 %239, 3
  %241 = shl i64 %239, 61
  %242 = or i64 %240, %241
  switch i64 %242, label %tag40 [
    i64 2, label %tag287
    i64 4, label %tag287
    i64 5, label %tag287
    i64 0, label %tag287
  ]

normal-dest584:                                   ; preds = %tag57
  %243 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %244 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 392), align 16
  %245 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 445), align 8
  %246 = invoke {}* @cc_safe_fdefinition({}* %245)
          to label %normal-dest586 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest586:                                   ; preds = %normal-dest584
  %247 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %248 = invoke {}* @cc_safe_fdefinition({}* %247)
          to label %normal-dest588 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest588:                                   ; preds = %normal-dest586
  %249 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 392), align 16
  %ptrtoint589 = ptrtoint {}* %248 to i64
  %entry-point-addr-uint590 = add i64 %ptrtoint589, 7
  %entry-point-addr591 = inttoptr i64 %entry-point-addr-uint590 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point592 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr591, align 8
  %250 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point592({}* %248, i64 2, {}* %farg0, {}* %249, {}* null, {}* null)
          to label %normal-dest595 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest595:                                   ; preds = %normal-dest588
  %.elt1995 = extractvalue { {}*, i64 } %250, 0
  %.elt1997 = extractvalue { {}*, i64 } %250, 1
  %cond1897 = icmp eq i64 %.elt1997, 0
  %251 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341369.0 = select i1 %cond1897, {}* %251, {}* %.elt1995
  %ptrtoint601 = ptrtoint {}* %246 to i64
  %entry-point-addr-uint602 = add i64 %ptrtoint601, 7
  %entry-point-addr603 = inttoptr i64 %entry-point-addr-uint602 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point604 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr603, align 8
  %252 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point604({}* %246, i64 2, {}* %farg1, {}* %G341369.0, {}* null, {}* null)
          to label %normal-dest607 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest607:                                   ; preds = %normal-dest595
  %.elt1999 = extractvalue { {}*, i64 } %252, 0
  %.elt2001 = extractvalue { {}*, i64 } %252, 1
  %cond1898 = icmp eq i64 %.elt2001, 0
  %253 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341364.0 = select i1 %cond1898, {}* %253, {}* %.elt1999
  %254 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %255 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint613 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint614 = add i64 %ptrtoint613, 7
  %entry-point-addr615 = inttoptr i64 %entry-point-addr-uint614 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point616 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr615, align 8
  %256 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point616({}* %42, i64 7, {}* %farg0, {}* %243, {}* %farg0, {}* %244, {}* %G341364.0, {}* %254, {}* %255)
          to label %tag141 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest625:                                   ; preds = %tag58
  %ptrtoint626 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint627 = add i64 %ptrtoint626, 7
  %entry-point-addr628 = inttoptr i64 %entry-point-addr-uint627 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point629 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr628, align 8
  %257 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point629({}* %44, i64 2, {}* %farg0, {}* %farg3, {}* null, {}* null)
          to label %tag156 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest649:                                   ; preds = %tag63
  %ptrtoint651 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint652 = add i64 %ptrtoint651, 7
  %entry-point-addr653 = inttoptr i64 %entry-point-addr-uint652 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point654 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr653, align 8
  %258 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point654({}* %46, i64 2, {}* nonnull %.in, {}* nonnull %384, {}* null, {}* null)
          to label %normal-dest657 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest657:                                   ; preds = %normal-dest649
  %.elt1951 = extractvalue { {}*, i64 } %258, 0
  %.elt1953 = extractvalue { {}*, i64 } %258, 1
  %cond1891 = icmp eq i64 %.elt1953, 0
  %259 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341512.1 = select i1 %cond1891, {}* %259, {}* %.elt1951
  br label %tag349

header-check-br663:                               ; preds = %tag109
  %irc-bit-cast667 = bitcast {}* %136 to i8*
  %gep668 = getelementptr inbounds i8, i8* %irc-bit-cast667, i64 -9
  %irc-bit-cast669 = bitcast i8* %gep668 to i64*
  %260 = load i64, i64* %irc-bit-cast669, align 8
  %261 = add i64 %260, -1309
  %262 = lshr i64 %261, 3
  %263 = shl i64 %261, 61
  %264 = or i64 %262, %263
  switch i64 %264, label %tag250 [
    i64 2, label %tag144
    i64 4, label %tag144
    i64 5, label %tag144
    i64 0, label %tag144
  ]

header-check-br695:                               ; preds = %tag98
  %gep700 = getelementptr inbounds i8, i8* %440, i64 -9
  %irc-bit-cast701 = bitcast i8* %gep700 to i64*
  %265 = load i64, i64* %irc-bit-cast701, align 8
  %266 = add i64 %265, -1309
  %267 = lshr i64 %266, 3
  %268 = shl i64 %266, 61
  %269 = or i64 %267, %268
  switch i64 %269, label %tag332 [
    i64 2, label %tag295
    i64 4, label %tag295
    i64 5, label %tag295
    i64 0, label %tag295
  ]

header-check-br702:                               ; preds = %tag135
  %gep707 = getelementptr inbounds i8, i8* %440, i64 -9
  %irc-bit-cast708 = bitcast i8* %gep707 to i64*
  %270 = load i64, i64* %irc-bit-cast708, align 8
  %271 = add i64 %270, -1309
  %272 = lshr i64 %271, 3
  %273 = shl i64 %271, 61
  %274 = or i64 %272, %273
  switch i64 %274, label %tag277 [
    i64 2, label %tag68
    i64 4, label %tag68
    i64 5, label %tag68
    i64 0, label %tag68
  ]

normal-dest741:                                   ; preds = %tag86
  %275 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %276 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 404), align 16
  %277 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 445), align 8
  %278 = invoke {}* @cc_safe_fdefinition({}* %277)
          to label %normal-dest743 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest743:                                   ; preds = %normal-dest741
  %279 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %280 = invoke {}* @cc_safe_fdefinition({}* %279)
          to label %normal-dest745 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest745:                                   ; preds = %normal-dest743
  %281 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 404), align 16
  %ptrtoint746 = ptrtoint {}* %280 to i64
  %entry-point-addr-uint747 = add i64 %ptrtoint746, 7
  %entry-point-addr748 = inttoptr i64 %entry-point-addr-uint747 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point749 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr748, align 8
  %282 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point749({}* %280, i64 2, {}* %farg0, {}* %281, {}* null, {}* null)
          to label %normal-dest752 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest752:                                   ; preds = %normal-dest745
  %.elt1959 = extractvalue { {}*, i64 } %282, 0
  %.elt1961 = extractvalue { {}*, i64 } %282, 1
  %cond1893 = icmp eq i64 %.elt1961, 0
  %283 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341445.0 = select i1 %cond1893, {}* %283, {}* %.elt1959
  %ptrtoint758 = ptrtoint {}* %278 to i64
  %entry-point-addr-uint759 = add i64 %ptrtoint758, 7
  %entry-point-addr760 = inttoptr i64 %entry-point-addr-uint759 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point761 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr760, align 8
  %284 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point761({}* %278, i64 2, {}* %farg1, {}* %G341445.0, {}* null, {}* null)
          to label %normal-dest764 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest764:                                   ; preds = %normal-dest752
  %.elt1963 = extractvalue { {}*, i64 } %284, 0
  %.elt1965 = extractvalue { {}*, i64 } %284, 1
  %cond1894 = icmp eq i64 %.elt1965, 0
  %285 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341440.0 = select i1 %cond1894, {}* %285, {}* %.elt1963
  %286 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %287 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint770 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint771 = add i64 %ptrtoint770, 7
  %entry-point-addr772 = inttoptr i64 %entry-point-addr-uint771 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point773 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr772, align 8
  %288 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point773({}* %51, i64 7, {}* %farg0, {}* %275, {}* %farg0, {}* %276, {}* %G341440.0, {}* %286, {}* %287)
          to label %tag267 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest791:                                   ; preds = %tag90
  %289 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %290 = icmp eq {}* %55, %289
  br i1 %290, label %tag141, label %tag57

normal-dest801:                                   ; preds = %tag92
  %ptrtoint804 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint805 = add i64 %ptrtoint804, 7
  %entry-point-addr806 = inttoptr i64 %entry-point-addr-uint805 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point807 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr806, align 8
  %291 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point807({}* %60, i64 2, {}* nonnull %.in2032, {}* nonnull %441, {}* null, {}* null)
          to label %normal-dest810 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest810:                                   ; preds = %normal-dest801
  %.elt2060 = extractvalue { {}*, i64 } %291, 0
  %.elt2062 = extractvalue { {}*, i64 } %291, 1
  %cond1903 = icmp eq i64 %.elt2062, 0
  %292 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341455.1 = select i1 %cond1903, {}* %292, {}* %.elt2060
  br label %tag346

normal-dest817:                                   ; preds = %tag93
  %293 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %294 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %295 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %296 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint818 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint819 = add i64 %ptrtoint818, 7
  %entry-point-addr820 = inttoptr i64 %entry-point-addr-uint819 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point821 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr820, align 8
  %297 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point821({}* %62, i64 5, {}* %293, {}* %294, {}* %x1645.0, {}* %295, {}* %296)
          to label %normal-dest824 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest824:                                   ; preds = %normal-dest817
  %.elt2117 = extractvalue { {}*, i64 } %297, 0
  %.elt2119 = extractvalue { {}*, i64 } %297, 1
  %cond1910 = icmp eq i64 %.elt2119, 0
  %298 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond1910, {}* %298, {}* %.elt2117
  br label %tag357

header-check-br837:                               ; preds = %tag354
  %gep842 = getelementptr inbounds i8, i8* %440, i64 -9
  %irc-bit-cast843 = bitcast i8* %gep842 to i64*
  %299 = load i64, i64* %irc-bit-cast843, align 8
  %300 = add i64 %299, -1309
  %301 = lshr i64 %300, 3
  %302 = shl i64 %300, 61
  %303 = or i64 %301, %302
  switch i64 %303, label %tag113 [
    i64 2, label %tag175
    i64 4, label %tag175
    i64 5, label %tag175
    i64 0, label %tag175
  ]

header-check-br875:                               ; preds = %tag143
  %irc-bit-cast879 = bitcast {}* %farg2 to i8*
  %gep880 = getelementptr inbounds i8, i8* %irc-bit-cast879, i64 -9
  %irc-bit-cast881 = bitcast i8* %gep880 to i64*
  %304 = load i64, i64* %irc-bit-cast881, align 8
  %305 = add i64 %304, -1309
  %306 = lshr i64 %305, 3
  %307 = shl i64 %305, 61
  %308 = or i64 %306, %307
  switch i64 %308, label %tag250 [
    i64 2, label %tag291
    i64 4, label %tag291
    i64 5, label %tag291
    i64 0, label %tag291
  ]

normal-dest896:                                   ; preds = %tag111
  %ptrtoint897 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint898 = add i64 %ptrtoint897, 7
  %entry-point-addr899 = inttoptr i64 %entry-point-addr-uint898 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point900 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr899, align 8
  %309 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point900({}* %70, i64 2, {}* nonnull %.in2032, {}* nonnull %56, {}* null, {}* null)
          to label %normal-dest903 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest903:                                   ; preds = %normal-dest896
  %.elt2036 = extractvalue { {}*, i64 } %309, 0
  %.elt2038 = extractvalue { {}*, i64 } %309, 1
  %cond1900 = icmp eq i64 %.elt2038, 0
  %310 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341328.1 = select i1 %cond1900, {}* %310, {}* %.elt2036
  br label %tag43

normal-dest928:                                   ; preds = %tag116
  %ptrtoint930 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint931 = add i64 %ptrtoint930, 7
  %entry-point-addr932 = inttoptr i64 %entry-point-addr-uint931 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point933 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr932, align 8
  %311 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point933({}* %77, i64 2, {}* nonnull %farg2, {}* nonnull %181, {}* null, {}* null)
          to label %normal-dest936 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest936:                                   ; preds = %normal-dest928
  %.elt2161 = extractvalue { {}*, i64 } %311, 0
  %.elt2163 = extractvalue { {}*, i64 } %311, 1
  %cond1915 = icmp eq i64 %.elt2163, 0
  %312 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341549.1 = select i1 %cond1915, {}* %312, {}* %.elt2161
  br label %tag299

normal-dest947:                                   ; preds = %tag125
  %ptrtoint949 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint950 = add i64 %ptrtoint949, 7
  %entry-point-addr951 = inttoptr i64 %entry-point-addr-uint950 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point952 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr951, align 8
  %313 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point952({}* %80, i64 2, {}* nonnull %farg2, {}* nonnull %97, {}* null, {}* null)
          to label %normal-dest955 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest955:                                   ; preds = %normal-dest947
  %.elt2080 = extractvalue { {}*, i64 } %313, 0
  %.elt2082 = extractvalue { {}*, i64 } %313, 1
  %cond1905 = icmp eq i64 %.elt2082, 0
  %314 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341530.1 = select i1 %cond1905, {}* %314, {}* %.elt2080
  br label %tag360

header-check-br970:                               ; preds = %tag355
  %irc-bit-cast974 = bitcast {}* %181 to i8*
  %gep975 = getelementptr inbounds i8, i8* %irc-bit-cast974, i64 -9
  %irc-bit-cast976 = bitcast i8* %gep975 to i64*
  %315 = load i64, i64* %irc-bit-cast976, align 8
  %316 = add i64 %315, -1309
  %317 = lshr i64 %316, 3
  %318 = shl i64 %316, 61
  %319 = or i64 %317, %318
  switch i64 %319, label %tag153 [
    i64 2, label %tag116
    i64 4, label %tag116
    i64 5, label %tag116
    i64 0, label %tag116
  ]

normal-dest981:                                   ; preds = %tag137
  %320 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %321 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %322 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %323 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint983 = ptrtoint {}* %86 to i64
  %entry-point-addr-uint984 = add i64 %ptrtoint983, 7
  %entry-point-addr985 = inttoptr i64 %entry-point-addr-uint984 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point986 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr985, align 8
  %324 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point986({}* %86, i64 5, {}* %320, {}* %321, {}* %"%SUBLIST341268.02285", {}* %322, {}* %323)
          to label %normal-dest989 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest989:                                   ; preds = %normal-dest981
  %.elt2141 = extractvalue { {}*, i64 } %324, 0
  %.elt2143 = extractvalue { {}*, i64 } %324, 1
  %cond1913 = icmp eq i64 %.elt2143, 0
  %325 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in2134 = select i1 %cond1913, {}* %325, {}* %.elt2141
  %.val2265.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag230

normal-dest998:                                   ; preds = %tag140
  %ptrtoint999 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint1000 = add i64 %ptrtoint999, 7
  %entry-point-addr1001 = inttoptr i64 %entry-point-addr-uint1000 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1002 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1001, align 8
  %326 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1002({}* %88, i64 2, {}* nonnull %farg2, {}* nonnull %211, {}* null, {}* null)
          to label %normal-dest1005 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1005:                                  ; preds = %normal-dest998
  %.elt2169 = extractvalue { {}*, i64 } %326, 0
  %.elt2171 = extractvalue { {}*, i64 } %326, 1
  %cond1916 = icmp eq i64 %.elt2171, 0
  %327 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341733.1 = select i1 %cond1916, {}* %327, {}* %.elt2169
  br label %tag147

normal-dest1012:                                  ; preds = %tag141
  %ptrtoint1013 = ptrtoint {}* %90 to i64
  %entry-point-addr-uint1014 = add i64 %ptrtoint1013, 7
  %entry-point-addr1015 = inttoptr i64 %entry-point-addr-uint1014 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1016 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1015, align 8
  %328 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1016({}* %90, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest1019 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1019:                                  ; preds = %normal-dest1012
  %.elt2007 = extractvalue { {}*, i64 } %328, 0
  %.elt2009 = extractvalue { {}*, i64 } %328, 1
  %cond1899 = icmp eq i64 %.elt2009, 0
  %329 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341354.0 = select i1 %cond1899, {}* %329, {}* %.elt2007
  %330 = icmp eq {}* %G341354.0, %329
  br i1 %330, label %tag58, label %tag249

normal-dest1035:                                  ; preds = %tag144
  %ptrtoint1037 = ptrtoint {}* %92 to i64
  %entry-point-addr-uint1038 = add i64 %ptrtoint1037, 7
  %entry-point-addr1039 = inttoptr i64 %entry-point-addr-uint1038 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1040 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1039, align 8
  %331 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1040({}* %92, i64 2, {}* nonnull %farg2, {}* nonnull %136, {}* null, {}* null)
          to label %normal-dest1043 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1043:                                  ; preds = %normal-dest1035
  %.elt2072 = extractvalue { {}*, i64 } %331, 0
  %.elt2074 = extractvalue { {}*, i64 } %331, 1
  %cond1904 = icmp eq i64 %.elt2074, 0
  %332 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341473.1 = select i1 %cond1904, {}* %332, {}* %.elt2072
  br label %tag311

header-check-br1059:                              ; preds = %tag262
  %irc-bit-cast1063 = bitcast {}* %211 to i8*
  %gep1064 = getelementptr inbounds i8, i8* %irc-bit-cast1063, i64 -9
  %irc-bit-cast1065 = bitcast i8* %gep1064 to i64*
  %333 = load i64, i64* %irc-bit-cast1065, align 8
  %334 = add i64 %333, -1309
  %335 = lshr i64 %334, 3
  %336 = shl i64 %334, 61
  %337 = or i64 %335, %336
  switch i64 %337, label %tag310 [
    i64 2, label %tag140
    i64 4, label %tag140
    i64 5, label %tag140
    i64 0, label %tag140
  ]

normal-dest1073:                                  ; preds = %tag153
  %338 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 432), align 16
  %339 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 433), align 8
  %ptrtoint1074 = ptrtoint {}* %101 to i64
  %entry-point-addr-uint1075 = add i64 %ptrtoint1074, 7
  %entry-point-addr1076 = inttoptr i64 %entry-point-addr-uint1075 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1077 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1076, align 8
  %340 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1077({}* %101, i64 3, {}* %338, {}* %339, {}* %farg2, {}* null)
          to label %tag151 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1086:                                  ; preds = %tag156
  %ptrtoint1087 = ptrtoint {}* %103 to i64
  %entry-point-addr-uint1088 = add i64 %ptrtoint1087, 7
  %entry-point-addr1089 = inttoptr i64 %entry-point-addr-uint1088 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1090 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1089, align 8
  %341 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1090({}* %103, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1095:                                  ; preds = %tag157
  %ptrtoint1098 = ptrtoint {}* %105 to i64
  %entry-point-addr-uint1099 = add i64 %ptrtoint1098, 7
  %entry-point-addr1100 = inttoptr i64 %entry-point-addr-uint1099 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1101 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1100, align 8
  %342 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1101({}* %105, i64 2, {}* nonnull %.in2131, {}* nonnull %361, {}* null, {}* null)
          to label %normal-dest1104 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1104:                                  ; preds = %normal-dest1095
  %.elt2149 = extractvalue { {}*, i64 } %342, 0
  %.elt2151 = extractvalue { {}*, i64 } %342, 1
  %cond1914 = icmp eq i64 %.elt2151, 0
  %343 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341715.1 = select i1 %cond1914, {}* %343, {}* %.elt2149
  br label %tag7

header-check-br1112:                              ; preds = %tag225
  %irc-bit-cast1116 = bitcast {}* %73 to i8*
  %gep1117 = getelementptr inbounds i8, i8* %irc-bit-cast1116, i64 -9
  %irc-bit-cast1118 = bitcast i8* %gep1117 to i64*
  %344 = load i64, i64* %irc-bit-cast1118, align 8
  %345 = add i64 %344, -1309
  %346 = lshr i64 %345, 3
  %347 = shl i64 %345, 61
  %348 = or i64 %346, %347
  switch i64 %348, label %tag277 [
    i64 2, label %tag161
    i64 4, label %tag161
    i64 5, label %tag161
    i64 0, label %tag161
  ]

normal-dest1120:                                  ; preds = %tag161
  %ptrtoint1121 = ptrtoint {}* %107 to i64
  %entry-point-addr-uint1122 = add i64 %ptrtoint1121, 7
  %entry-point-addr1123 = inttoptr i64 %entry-point-addr-uint1122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1123, align 8
  %349 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1124({}* %107, i64 2, {}* nonnull %.in2032, {}* nonnull %73, {}* null, {}* null)
          to label %normal-dest1127 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1127:                                  ; preds = %normal-dest1120
  %.elt2052 = extractvalue { {}*, i64 } %349, 0
  %.elt2054 = extractvalue { {}*, i64 } %349, 1
  %cond1902 = icmp eq i64 %.elt2054, 0
  %350 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341407.1 = select i1 %cond1902, {}* %350, {}* %.elt2052
  br label %tag22

normal-dest1134:                                  ; preds = %tag162
  %ptrtoint1135 = ptrtoint {}* %109 to i64
  %entry-point-addr-uint1136 = add i64 %ptrtoint1135, 7
  %entry-point-addr1137 = inttoptr i64 %entry-point-addr-uint1136 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1138 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1137, align 8
  %351 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1138({}* %109, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest1141 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1141:                                  ; preds = %normal-dest1134
  %.elt1983 = extractvalue { {}*, i64 } %351, 0
  %.elt1985 = extractvalue { {}*, i64 } %351, 1
  %cond1896 = icmp eq i64 %.elt1985, 0
  %352 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341402.0 = select i1 %cond1896, {}* %352, {}* %.elt1983
  %353 = icmp eq {}* %G341402.0, %352
  br i1 %353, label %tag286, label %tag292

normal-dest1148:                                  ; preds = %tag163
  %354 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 437), align 8
  %355 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %ptrtoint1149 = ptrtoint {}* %111 to i64
  %entry-point-addr-uint1150 = add i64 %ptrtoint1149, 7
  %entry-point-addr1151 = inttoptr i64 %entry-point-addr-uint1150 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1152 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1151, align 8
  %356 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1152({}* %111, i64 5, {}* %farg0, {}* %354, {}* %farg0, {}* %355, {}* %farg3)
          to label %tag151 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1168:                                  ; preds = %tag166
  %357 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 365), align 8
  %ptrtoint1169 = ptrtoint {}* %113 to i64
  %entry-point-addr-uint1170 = add i64 %ptrtoint1169, 7
  %entry-point-addr1171 = inttoptr i64 %entry-point-addr-uint1170 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1172 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1171, align 8
  %358 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1172({}* %113, i64 2, {}* %farg0, {}* %357, {}* null, {}* null)
          to label %normal-dest1175 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1175:                                  ; preds = %normal-dest1168
  %.elt = extractvalue { {}*, i64 } %358, 0
  %.elt1918 = extractvalue { {}*, i64 } %358, 1
  %cond = icmp eq i64 %.elt1918, 0
  %359 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in2131 = select i1 %cond, {}* %359, {}* %.elt
  %360 = bitcast {}* %.in2131 to i8*
  %361 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 367), align 8
  %362 = icmp eq {}* %.in2131, %361
  %.val2245 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341724.0 = select i1 %362, {}* %.val2245, {}* %359
  %363 = icmp eq {}* %G341724.0, %359
  br i1 %363, label %tag348, label %tag7

header-check-br1188:                              ; preds = %tag195
  %irc-bit-cast1192 = bitcast {}* %farg2 to i8*
  %gep1193 = getelementptr inbounds i8, i8* %irc-bit-cast1192, i64 -9
  %irc-bit-cast1194 = bitcast i8* %gep1193 to i64*
  %364 = load i64, i64* %irc-bit-cast1194, align 8
  %365 = add i64 %364, -1309
  %366 = lshr i64 %365, 3
  %367 = shl i64 %365, 61
  %368 = or i64 %366, %367
  switch i64 %368, label %tag237 [
    i64 2, label %tag112
    i64 4, label %tag112
    i64 5, label %tag112
    i64 0, label %tag112
  ]

header-check-br1218:                              ; preds = %tag334
  %irc-bit-cast1222 = bitcast {}* %farg2 to i8*
  %gep1223 = getelementptr inbounds i8, i8* %irc-bit-cast1222, i64 -9
  %irc-bit-cast1224 = bitcast i8* %gep1223 to i64*
  %369 = load i64, i64* %irc-bit-cast1224, align 8
  %370 = add i64 %369, -1309
  %371 = lshr i64 %370, 3
  %372 = shl i64 %370, 61
  %373 = or i64 %371, %372
  switch i64 %373, label %tag153 [
    i64 2, label %tag355
    i64 4, label %tag355
    i64 5, label %tag355
    i64 0, label %tag355
  ]

header-check-br1234:                              ; preds = %tag199
  %irc-bit-cast1238 = bitcast {}* %97 to i8*
  %gep1239 = getelementptr inbounds i8, i8* %irc-bit-cast1238, i64 -9
  %irc-bit-cast1240 = bitcast i8* %gep1239 to i64*
  %374 = load i64, i64* %irc-bit-cast1240, align 8
  %375 = add i64 %374, -1309
  %376 = lshr i64 %375, 3
  %377 = shl i64 %375, 61
  %378 = or i64 %376, %377
  switch i64 %378, label %tag237 [
    i64 2, label %tag125
    i64 4, label %tag125
    i64 5, label %tag125
    i64 0, label %tag125
  ]

normal-dest1265:                                  ; preds = %tag189
  %ptrtoint1266 = ptrtoint {}* %117 to i64
  %entry-point-addr-uint1267 = add i64 %ptrtoint1266, 7
  %entry-point-addr1268 = inttoptr i64 %entry-point-addr-uint1267 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1269 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1268, align 8
  %379 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1269({}* %117, i64 3, {}* %farg0, {}* %farg3, {}* %farg1, {}* null)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1281:                                  ; preds = %tag193
  %380 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 365), align 8
  %ptrtoint1282 = ptrtoint {}* %119 to i64
  %entry-point-addr-uint1283 = add i64 %ptrtoint1282, 7
  %entry-point-addr1284 = inttoptr i64 %entry-point-addr-uint1283 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1285 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1284, align 8
  %381 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1285({}* %119, i64 2, {}* %farg0, {}* %380, {}* null, {}* null)
          to label %normal-dest1288 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1288:                                  ; preds = %normal-dest1281
  %.elt1924 = extractvalue { {}*, i64 } %381, 0
  %.elt1926 = extractvalue { {}*, i64 } %381, 1
  %cond1888 = icmp eq i64 %.elt1926, 0
  %382 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in = select i1 %cond1888, {}* %382, {}* %.elt1924
  %383 = bitcast {}* %.in to i8*
  %384 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %385 = icmp eq {}* %.in, %384
  %.val2249 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341521.0 = select i1 %385, {}* %.val2249, {}* %382
  %386 = icmp eq {}* %G341521.0, %382
  br i1 %386, label %tag2, label %tag349

normal-dest1309:                                  ; preds = %tag198
  %387 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %388 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %389 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %390 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint1310 = ptrtoint {}* %122 to i64
  %entry-point-addr-uint1311 = add i64 %ptrtoint1310, 7
  %entry-point-addr1312 = inttoptr i64 %entry-point-addr-uint1311 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1313 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1312, align 8
  %391 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1313({}* %122, i64 5, {}* %387, {}* %388, {}* %"%DOLIST-VAR.02280", {}* %389, {}* %390)
          to label %normal-dest1316 unwind label %cleanup-lpad.loopexit

normal-dest1316:                                  ; preds = %normal-dest1309
  %.elt2109 = extractvalue { {}*, i64 } %391, 0
  %.elt2111 = extractvalue { {}*, i64 } %391, 1
  %cond1908 = icmp eq i64 %.elt2111, 0
  %392 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.3" = select i1 %cond1908, {}* %392, {}* %.elt2109
  br label %tag148.backedge

tag148.backedge:                                  ; preds = %normal-dest1316, %tag210
  %393 = phi {}* [ %.pre, %tag210 ], [ %392, %normal-dest1316 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %129, %tag210 ], [ %"%DOLIST-VAR.3", %normal-dest1316 ]
  %394 = icmp eq {}* %"%DOLIST-VAR.0.be", %393
  br i1 %394, label %tag151, label %tag53

header-check-br1324:                              ; preds = %tag275
  %irc-bit-cast1328 = bitcast {}* %farg2 to i8*
  %gep1329 = getelementptr inbounds i8, i8* %irc-bit-cast1328, i64 -9
  %irc-bit-cast1330 = bitcast i8* %gep1329 to i64*
  %395 = load i64, i64* %irc-bit-cast1330, align 8
  %396 = add i64 %395, -1309
  %397 = lshr i64 %396, 3
  %398 = shl i64 %396, 61
  %399 = or i64 %397, %398
  switch i64 %399, label %tag310 [
    i64 2, label %tag87
    i64 4, label %tag87
    i64 5, label %tag87
    i64 0, label %tag87
  ]

header-check-br1331:                              ; preds = %tag305
  %irc-bit-cast1335 = bitcast {}* %441 to i8*
  %gep1336 = getelementptr inbounds i8, i8* %irc-bit-cast1335, i64 -9
  %irc-bit-cast1337 = bitcast i8* %gep1336 to i64*
  %400 = load i64, i64* %irc-bit-cast1337, align 8
  %401 = add i64 %400, -1309
  %402 = lshr i64 %401, 3
  %403 = shl i64 %401, 61
  %404 = or i64 %402, %403
  switch i64 %404, label %tag113 [
    i64 2, label %tag92
    i64 4, label %tag92
    i64 5, label %tag92
    i64 0, label %tag92
  ]

normal-dest1339:                                  ; preds = %tag204
  %ptrtoint1341 = ptrtoint {}* %124 to i64
  %entry-point-addr-uint1342 = add i64 %ptrtoint1341, 7
  %entry-point-addr1343 = inttoptr i64 %entry-point-addr-uint1342 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1344 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1343, align 8
  %405 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1344({}* %124, i64 2, {}* nonnull %.in2131, {}* nonnull %.in2135, {}* null, {}* null)
          to label %normal-dest1347 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest1347:                                  ; preds = %normal-dest1339
  %.elt2137 = extractvalue { {}*, i64 } %405, 0
  %.elt2139 = extractvalue { {}*, i64 } %405, 1
  %cond1912 = icmp eq i64 %.elt2139, 0
  %406 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341675.1 = select i1 %cond1912, {}* %406, {}* %.elt2137
  br label %tag353

normal-dest1354:                                  ; preds = %tag206
  %407 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 435), align 8
  %408 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 436), align 16
  %ptrtoint1355 = ptrtoint {}* %126 to i64
  %entry-point-addr-uint1356 = add i64 %ptrtoint1355, 7
  %entry-point-addr1357 = inttoptr i64 %entry-point-addr-uint1356 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1358 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1357, align 8
  %409 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1358({}* %126, i64 3, {}* %407, {}* %408, {}* %farg0, {}* null)
          to label %tag151 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1430:                                  ; preds = %tag229
  %ptrtoint1431 = ptrtoint {}* %131 to i64
  %entry-point-addr-uint1432 = add i64 %ptrtoint1431, 7
  %entry-point-addr1433 = inttoptr i64 %entry-point-addr-uint1432 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1434 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1433, align 8
  %410 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1434({}* %131, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br1452:                              ; preds = %tag352
  %gep1457 = getelementptr inbounds i8, i8* %133, i64 -9
  %irc-bit-cast1458 = bitcast i8* %gep1457 to i64*
  %411 = load i64, i64* %irc-bit-cast1458, align 8
  %412 = add i64 %411, -1309
  %413 = lshr i64 %412, 3
  %414 = shl i64 %412, 61
  %415 = or i64 %413, %414
  switch i64 %415, label %tag356 [
    i64 2, label %tag204
    i64 4, label %tag204
    i64 5, label %tag204
    i64 0, label %tag204
  ]

header-check-br1459:                              ; preds = %tag295
  %irc-bit-cast1463 = bitcast {}* %56 to i8*
  %gep1464 = getelementptr inbounds i8, i8* %irc-bit-cast1463, i64 -9
  %irc-bit-cast1465 = bitcast i8* %gep1464 to i64*
  %416 = load i64, i64* %irc-bit-cast1465, align 8
  %417 = add i64 %416, -1309
  %418 = lshr i64 %417, 3
  %419 = shl i64 %417, 61
  %420 = or i64 %418, %419
  switch i64 %420, label %tag332 [
    i64 2, label %tag111
    i64 4, label %tag111
    i64 5, label %tag111
    i64 0, label %tag111
  ]

normal-dest1489:                                  ; preds = %tag241
  %ptrtoint1491 = ptrtoint {}* %140 to i64
  %entry-point-addr-uint1492 = add i64 %ptrtoint1491, 7
  %entry-point-addr1493 = inttoptr i64 %entry-point-addr-uint1492 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1494 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1493, align 8
  %421 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1494({}* %140, i64 2, {}* nonnull %.in2032, {}* nonnull %156, {}* null, {}* null)
          to label %normal-dest1497 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1497:                                  ; preds = %normal-dest1489
  %.elt2044 = extractvalue { {}*, i64 } %421, 0
  %.elt2046 = extractvalue { {}*, i64 } %421, 1
  %cond1901 = icmp eq i64 %.elt2046, 0
  %422 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341379.1 = select i1 %cond1901, {}* %422, {}* %.elt2044
  br label %tag281

normal-dest1518:                                  ; preds = %tag246
  %423 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %424 = icmp eq {}* %142, %423
  br i1 %424, label %tag267, label %tag86

normal-dest1521:                                  ; preds = %tag249
  %ptrtoint1522 = ptrtoint {}* %144 to i64
  %entry-point-addr-uint1523 = add i64 %ptrtoint1522, 7
  %entry-point-addr1524 = inttoptr i64 %entry-point-addr-uint1523 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1525 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1524, align 8
  %425 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1525({}* %144, i64 3, {}* %farg0, {}* %farg3, {}* %farg1, {}* null)
          to label %tag156 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1534:                                  ; preds = %tag250
  %426 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 439), align 8
  %427 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 440), align 16
  %ptrtoint1535 = ptrtoint {}* %146 to i64
  %entry-point-addr-uint1536 = add i64 %ptrtoint1535, 7
  %entry-point-addr1537 = inttoptr i64 %entry-point-addr-uint1536 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1538 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1537, align 8
  %428 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1538({}* %146, i64 3, {}* %426, {}* %427, {}* %farg2, {}* null)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1577:                                  ; preds = %tag267
  %ptrtoint1578 = ptrtoint {}* %150 to i64
  %entry-point-addr-uint1579 = add i64 %ptrtoint1578, 7
  %entry-point-addr1580 = inttoptr i64 %entry-point-addr-uint1579 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1581 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1580, align 8
  %429 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1581({}* %150, i64 1, {}* %farg1, {}* null, {}* null, {}* null)
          to label %normal-dest1584 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1584:                                  ; preds = %normal-dest1577
  %.elt1971 = extractvalue { {}*, i64 } %429, 0
  %.elt1973 = extractvalue { {}*, i64 } %429, 1
  %cond1895 = icmp eq i64 %.elt1973, 0
  %430 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341430.0 = select i1 %cond1895, {}* %430, {}* %.elt1971
  %431 = icmp eq {}* %G341430.0, %430
  br i1 %431, label %tag309, label %tag189

normal-dest1596:                                  ; preds = %normal-dest1880
  call void @unreachableError()
  unreachable

header-check-br1597:                              ; preds = %tag328
  %irc-bit-cast1601 = bitcast {}* %384 to i8*
  %gep1602 = getelementptr inbounds i8, i8* %irc-bit-cast1601, i64 -9
  %irc-bit-cast1603 = bitcast i8* %gep1602 to i64*
  %432 = load i64, i64* %irc-bit-cast1603, align 8
  %433 = add i64 %432, -1309
  %434 = lshr i64 %433, 3
  %435 = shl i64 %433, 61
  %436 = or i64 %434, %435
  switch i64 %436, label %tag40 [
    i64 2, label %tag63
    i64 4, label %tag63
    i64 5, label %tag63
    i64 0, label %tag63
  ]

normal-dest1614:                                  ; preds = %tag272
  %437 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 365), align 8
  %ptrtoint1615 = ptrtoint {}* %152 to i64
  %entry-point-addr-uint1616 = add i64 %ptrtoint1615, 7
  %entry-point-addr1617 = inttoptr i64 %entry-point-addr-uint1616 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1618 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1617, align 8
  %438 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1618({}* %152, i64 2, {}* %farg0, {}* %437, {}* null, {}* null)
          to label %normal-dest1621 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1621:                                  ; preds = %normal-dest1614
  %.elt1955 = extractvalue { {}*, i64 } %438, 0
  %.elt1957 = extractvalue { {}*, i64 } %438, 1
  %cond1892 = icmp eq i64 %.elt1957, 0
  %439 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in2032 = select i1 %cond1892, {}* %439, {}* %.elt1955
  %440 = bitcast {}* %.in2032 to i8*
  %441 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %442 = icmp eq {}* %.in2032, %441
  %.val2253 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341464.0 = select i1 %442, {}* %.val2253, {}* %439
  %443 = icmp eq {}* %G341464.0, %439
  br i1 %443, label %tag136, label %tag346

normal-dest1637:                                  ; preds = %tag276
  %ptrtoint1638 = ptrtoint {}* %155 to i64
  %entry-point-addr-uint1639 = add i64 %ptrtoint1638, 7
  %entry-point-addr1640 = inttoptr i64 %entry-point-addr-uint1639 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1641 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1640, align 8
  %444 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1641({}* %155, i64 2, {}* %farg1, {}* %farg3, {}* null, {}* null)
          to label %normal-dest1644 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1644:                                  ; preds = %normal-dest1637
  %.elt2098 = extractvalue { {}*, i64 } %444, 0
  %.elt2100 = extractvalue { {}*, i64 } %444, 1
  %cond1907 = icmp eq i64 %.elt2100, 0
  %445 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %x1645.0 = select i1 %cond1907, {}* %445, {}* %.elt2098
  %446 = ptrtoint {}* %x1645.0 to i64
  %tag-only16532101 = and i64 %446, 7
  %consp-test1654 = icmp eq i64 %tag-only16532101, 3
  br i1 %consp-test1654, label %tag23, label %tag131

header-check-br1669:                              ; preds = %tag62
  %447 = load i64, i64* %irc-bit-cast1675, align 8
  %448 = add i64 %447, -1309
  %449 = lshr i64 %448, 3
  %450 = shl i64 %448, 61
  %451 = or i64 %449, %450
  switch i64 %451, label %tag356 [
    i64 2, label %tag327
    i64 4, label %tag327
    i64 5, label %tag327
    i64 0, label %tag327
  ]

normal-dest1686:                                  ; preds = %tag286
  %ptrtoint1687 = ptrtoint {}* %164 to i64
  %entry-point-addr-uint1688 = add i64 %ptrtoint1687, 7
  %entry-point-addr1689 = inttoptr i64 %entry-point-addr-uint1688 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1690 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1689, align 8
  %452 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1690({}* %164, i64 2, {}* %farg0, {}* %farg3, {}* null, {}* null)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1702:                                  ; preds = %tag292
  %ptrtoint1703 = ptrtoint {}* %170 to i64
  %entry-point-addr-uint1704 = add i64 %ptrtoint1703, 7
  %entry-point-addr1705 = inttoptr i64 %entry-point-addr-uint1704 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1706 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1705, align 8
  %453 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1706({}* %170, i64 3, {}* %farg0, {}* %farg3, {}* %farg1, {}* null)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest1718:                                  ; preds = %tag294
  %454 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 437), align 8
  %455 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 382), align 16
  %ptrtoint1719 = ptrtoint {}* %172 to i64
  %entry-point-addr-uint1720 = add i64 %ptrtoint1719, 7
  %entry-point-addr1721 = inttoptr i64 %entry-point-addr-uint1720 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1722 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1721, align 8
  %456 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1722({}* %172, i64 5, {}* %farg0, {}* %454, {}* %farg0, {}* %ZEIT.0, {}* %455)
          to label %normal-dest1725 unwind label %cleanup-lpad.loopexit

normal-dest1725:                                  ; preds = %normal-dest1718
  br i1 %consp-test573, label %tag210, label %tag36

normal-dest1735:                                  ; preds = %tag297
  %457 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %458 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %459 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %460 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint1736 = ptrtoint {}* %175 to i64
  %entry-point-addr-uint1737 = add i64 %ptrtoint1736, 7
  %entry-point-addr1738 = inttoptr i64 %entry-point-addr-uint1737 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1739 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1738, align 8
  %461 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1739({}* %175, i64 5, {}* %457, {}* %458, {}* %"%DOLIST-VAR.02280", {}* %459, {}* %460)
          to label %normal-dest1742 unwind label %cleanup-lpad.loopexit

normal-dest1742:                                  ; preds = %normal-dest1735
  %.elt2113 = extractvalue { {}*, i64 } %461, 0
  %.elt2115 = extractvalue { {}*, i64 } %461, 1
  %cond1909 = icmp eq i64 %.elt2115, 0
  %462 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ZEIT.1 = select i1 %cond1909, {}* %462, {}* %.elt2113
  br label %tag294

header-check-br1748:                              ; preds = %tag348
  %gep1753 = getelementptr inbounds i8, i8* %360, i64 -9
  %irc-bit-cast1754 = bitcast i8* %gep1753 to i64*
  %463 = load i64, i64* %irc-bit-cast1754, align 8
  %464 = add i64 %463, -1309
  %465 = lshr i64 %464, 3
  %466 = shl i64 %464, 61
  %467 = or i64 %465, %466
  switch i64 %467, label %tag97 [
    i64 2, label %tag335
    i64 4, label %tag335
    i64 5, label %tag335
    i64 0, label %tag335
  ]

normal-dest1764:                                  ; preds = %tag309
  %ptrtoint1765 = ptrtoint {}* %180 to i64
  %entry-point-addr-uint1766 = add i64 %ptrtoint1765, 7
  %entry-point-addr1767 = inttoptr i64 %entry-point-addr-uint1766 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1768 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1767, align 8
  %468 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1768({}* %180, i64 2, {}* %farg0, {}* %farg3, {}* null, {}* null)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br1794:                              ; preds = %tag335
  %irc-bit-cast1798 = bitcast {}* %361 to i8*
  %gep1799 = getelementptr inbounds i8, i8* %irc-bit-cast1798, i64 -9
  %irc-bit-cast1800 = bitcast i8* %gep1799 to i64*
  %469 = load i64, i64* %irc-bit-cast1800, align 8
  %470 = add i64 %469, -1309
  %471 = lshr i64 %470, 3
  %472 = shl i64 %470, 61
  %473 = or i64 %471, %472
  switch i64 %473, label %tag97 [
    i64 2, label %tag157
    i64 4, label %tag157
    i64 5, label %tag157
    i64 0, label %tag157
  ]

header-check-br1803:                              ; preds = %tag274
  %irc-bit-cast1807 = bitcast {}* %156 to i8*
  %gep1808 = getelementptr inbounds i8, i8* %irc-bit-cast1807, i64 -9
  %irc-bit-cast1809 = bitcast i8* %gep1808 to i64*
  %474 = load i64, i64* %irc-bit-cast1809, align 8
  %475 = add i64 %474, -1309
  %476 = lshr i64 %475, 3
  %477 = shl i64 %475, 61
  %478 = or i64 %476, %477
  switch i64 %478, label %tag91 [
    i64 2, label %tag241
    i64 4, label %tag241
    i64 5, label %tag241
    i64 0, label %tag241
  ]

normal-dest1838:                                  ; preds = %tag332
  %479 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 441), align 8
  %480 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 442), align 16
  %ptrtoint1839 = ptrtoint {}* %191 to i64
  %entry-point-addr-uint1840 = add i64 %ptrtoint1839, 7
  %entry-point-addr1841 = inttoptr i64 %entry-point-addr-uint1840 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1842 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1841, align 8
  %481 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1842({}* %191, i64 3, {}* %479, {}* %480, {}* %farg0, {}* null)
          to label %tag326 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

header-check-br1859:                              ; preds = %tag79
  %gep1864 = getelementptr inbounds i8, i8* %440, i64 -9
  %irc-bit-cast1865 = bitcast i8* %gep1864 to i64*
  %482 = load i64, i64* %irc-bit-cast1865, align 8
  %483 = add i64 %482, -1309
  %484 = lshr i64 %483, 3
  %485 = shl i64 %483, 61
  %486 = or i64 %484, %485
  switch i64 %486, label %tag91 [
    i64 2, label %tag274
    i64 4, label %tag274
    i64 5, label %tag274
    i64 0, label %tag274
  ]

normal-dest1880:                                  ; preds = %tag358
  %487 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %488 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %489 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %490 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %ptrtoint1590 = ptrtoint {}* %209 to i64
  %entry-point-addr-uint1591 = add i64 %ptrtoint1590, 7
  %entry-point-addr1592 = inttoptr i64 %entry-point-addr-uint1591 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point1593 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr1592, align 8
  %491 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point1593({}* %209, i64 5, {}* %487, {}* %488, {}* %"%SUBLIST341268.02285", {}* %489, {}* %490)
          to label %normal-dest1596 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^394^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !83 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^394^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest67, %normal-dest17, %header-check-br
  %G341772.0 = phi {}* [ %18, %header-check-br ], [ %G341772.1, %normal-dest17 ], [ %G341772.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 396), align 16
  %ptrtoint20 = ptrtoint {}* %G341772.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G341772.0, i64 2, {}* %"closure->SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest60 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %tag3, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag2, %normal-dest13, %maybe-more-tests81, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 396), align 16
  %"closure->SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 15205, i64 394, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br73

normal-dest13:                                    ; preds = %maybe-more-tests81
  %ptrtoint14 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341772.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag2

normal-dest26:                                    ; preds = %tag2
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 468), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 469), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 1576 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 396), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

normal-dest60:                                    ; preds = %tag3
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 467), align 8
  %ptrtoint61 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %14, i64 5, {}* %35, {}* %36, {}* %18, {}* %37, {}* %38)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt = extractvalue { {}*, i64 } %39, 0
  %.elt84 = extractvalue { {}*, i64 } %39, 1
  %cond = icmp eq i64 %.elt84, 0
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341772.2 = select i1 %cond, {}* %40, {}* %.elt
  br label %tag2

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag3

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest13 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !84 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc289 unwind label %cleanup-lpad.loopexit.split-lp

.noexc289:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest54
  %14 = add i64 %61, 5
  %15 = inttoptr i64 %14 to {}**
  %16 = load {}*, {}** %15, align 8
  br label %tag10

tag1:                                             ; preds = %tag1.preheader, %tag34.backedge
  %.val299 = phi {}* [ %24, %tag34.backedge ], [ %26, %tag1.preheader ]
  %"%DOLIST-VAR.1302" = phi {}* [ %"%DOLIST-VAR.1.be", %tag34.backedge ], [ %"%DOLIST-VAR.0", %tag1.preheader ]
  %17 = ptrtoint {}* %"%DOLIST-VAR.1302" to i64
  %tag-only67243 = and i64 %17, 7
  %consp-test68 = icmp eq i64 %tag-only67243, 3
  %.val298 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341872.0 = select i1 %consp-test68, {}* %.val298, {}* %.val299
  %18 = icmp eq {}* %G341872.0, %.val299
  br i1 %18, label %tag13, label %tag32

tag4:                                             ; preds = %normal-dest115, %normal-dest216
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %20 = invoke {}* @cc_safe_symbol_value({}* %19)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit

tag8:                                             ; preds = %tag33
  %21 = add i64 %17, 5
  %22 = inttoptr i64 %21 to {}**
  %23 = load {}*, {}** %22, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag34.backedge

tag34.backedge:                                   ; preds = %tag8, %normal-dest189
  %24 = phi {}* [ %.pre, %tag8 ], [ %105, %normal-dest189 ]
  %"%DOLIST-VAR.1.be" = phi {}* [ %23, %tag8 ], [ %"%DOLIST-VAR.2", %normal-dest189 ]
  %25 = icmp eq {}* %"%DOLIST-VAR.1.be", %24
  br i1 %25, label %tag14, label %tag1

tag10:                                            ; preds = %normal-dest209, %tag
  %26 = phi {}* [ %60, %tag ], [ %111, %normal-dest209 ]
  %"%DOLIST-VAR.0" = phi {}* [ %16, %tag ], [ %"%DOLIST-VAR.3", %normal-dest209 ]
  %27 = icmp eq {}* %"%DOLIST-VAR.0", %26
  br i1 %27, label %tag14, label %tag1.preheader

tag1.preheader:                                   ; preds = %tag10
  br label %tag1

tag13:                                            ; preds = %tag1
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest76 unwind label %cleanup-lpad.loopexit

tag14:                                            ; preds = %tag18, %tag34.backedge, %tag27, %tag10
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 4), align 16
  %31 = invoke {}* @cc_safe_symbol_value({}* %30)
          to label %normal-dest90 unwind label %cleanup-lpad.loopexit.split-lp

tag15:                                            ; preds = %normal-dest216
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest92 unwind label %cleanup-lpad.loopexit

tag17:                                            ; preds = %normal-dest73
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest133 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %tag33
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %37 = icmp eq {}* %"%DOLIST-VAR.1302", %36
  %.val300 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341809.0 = select i1 %37, {}* %.val300, {}* %36
  %38 = icmp eq {}* %G341809.0, %36
  br i1 %38, label %tag26, label %tag14

tag22:                                            ; preds = %normal-dest90, %normal-dest225
  %return-value.sroa.22.0 = phi i64 [ %.elt280, %normal-dest225 ], [ 1, %normal-dest90 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt278, %normal-dest225 ], [ %31, %normal-dest90 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %39 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %40 = insertvalue { {}*, i64 } %39, i64 %return-value.sroa.22.0, 1
  ret { {}*, i64 } %40

tag26:                                            ; preds = %tag18
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest182 unwind label %cleanup-lpad.loopexit

tag27:                                            ; preds = %normal-dest54
  %43 = icmp eq {}* %x.0, %60
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341886.0 = select i1 %43, {}* %.val, {}* %60
  %44 = icmp eq {}* %G341886.0, %60
  br i1 %44, label %tag28, label %tag14

tag28:                                            ; preds = %tag27
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest202 unwind label %cleanup-lpad.loopexit.split-lp

tag29:                                            ; preds = %normal-dest83, %tag32
  %ZEIT.0 = phi {}* [ %53, %tag32 ], [ %ZEIT.1, %normal-dest83 ]
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 172), align 16
  %48 = invoke {}* @cc_safe_symbol_value({}* %47)
          to label %normal-dest216 unwind label %cleanup-lpad.loopexit

tag30:                                            ; preds = %normal-dest90
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 465), align 8
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest218 unwind label %cleanup-lpad.loopexit.split-lp

tag32:                                            ; preds = %tag1
  %51 = add i64 %17, -3
  %52 = inttoptr i64 %51 to {}**
  %53 = load {}*, {}** %52, align 8
  br label %tag29

tag33:                                            ; preds = %normal-dest156, %normal-dest73
  br i1 %consp-test68, label %tag8, label %tag18

cleanup-lpad.loopexit:                            ; preds = %tag4, %tag13, %normal-dest76, %tag15, %normal-dest92, %normal-dest94, %normal-dest96, %normal-dest103, %normal-dest115, %tag17, %normal-dest133, %normal-dest135, %normal-dest137, %normal-dest144, %normal-dest156, %tag26, %normal-dest182, %tag29
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest40, %normal-dest43, %normal-dest47, %tag14, %tag28, %normal-dest202, %tag30, %normal-dest218, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 461), align 8
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest40 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest40:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %55 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %55, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest43 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest43:                                    ; preds = %normal-dest40
  %57 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 380), align 16
  %58 = invoke {}* @cc_safe_fdefinition({}* %57)
          to label %normal-dest47 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest47:                                    ; preds = %normal-dest43
  %ptrtoint48 = ptrtoint {}* %58 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %59 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %58, i64 2, {}* %farg2, {}* %farg1, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest54:                                    ; preds = %normal-dest47
  %.elt239 = extractvalue { {}*, i64 } %59, 0
  %.elt241 = extractvalue { {}*, i64 } %59, 1
  %cond = icmp eq i64 %.elt241, 0
  %60 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %x.0 = select i1 %cond, {}* %60, {}* %.elt239
  %61 = ptrtoint {}* %x.0 to i64
  %tag-only242 = and i64 %61, 7
  %consp-test = icmp eq i64 %tag-only242, 3
  br i1 %consp-test, label %tag, label %tag27

normal-dest73:                                    ; preds = %tag4
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %63 = icmp eq {}* %20, %62
  br i1 %63, label %tag33, label %tag17

normal-dest76:                                    ; preds = %tag13
  %64 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %65 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %66 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %67 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint77 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint78 = add i64 %ptrtoint77, 7
  %entry-point-addr79 = inttoptr i64 %entry-point-addr-uint78 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point80 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr79, align 8
  %68 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point80({}* %29, i64 5, {}* %64, {}* %65, {}* %"%DOLIST-VAR.1302", {}* %66, {}* %67)
          to label %normal-dest83 unwind label %cleanup-lpad.loopexit

normal-dest83:                                    ; preds = %normal-dest76
  %.elt274 = extractvalue { {}*, i64 } %68, 0
  %.elt276 = extractvalue { {}*, i64 } %68, 1
  %cond234 = icmp eq i64 %.elt276, 0
  %69 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ZEIT.1 = select i1 %cond234, {}* %69, {}* %.elt274
  br label %tag29

normal-dest90:                                    ; preds = %tag14
  %70 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %71 = icmp eq {}* %31, %70
  br i1 %71, label %tag22, label %tag30

normal-dest92:                                    ; preds = %tag15
  %72 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %74 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %75 = invoke {}* @cc_safe_fdefinition({}* %74)
          to label %normal-dest94 unwind label %cleanup-lpad.loopexit

normal-dest94:                                    ; preds = %normal-dest92
  %76 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %77 = invoke {}* @cc_safe_fdefinition({}* %76)
          to label %normal-dest96 unwind label %cleanup-lpad.loopexit

normal-dest96:                                    ; preds = %normal-dest94
  %78 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %ptrtoint97 = ptrtoint {}* %77 to i64
  %entry-point-addr-uint98 = add i64 %ptrtoint97, 7
  %entry-point-addr99 = inttoptr i64 %entry-point-addr-uint98 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point100 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr99, align 8
  %79 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point100({}* %77, i64 2, {}* %farg0, {}* %78, {}* null, {}* null)
          to label %normal-dest103 unwind label %cleanup-lpad.loopexit

normal-dest103:                                   ; preds = %normal-dest96
  %.elt245 = extractvalue { {}*, i64 } %79, 0
  %.elt247 = extractvalue { {}*, i64 } %79, 1
  %cond229 = icmp eq i64 %.elt247, 0
  %80 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341846.0 = select i1 %cond229, {}* %80, {}* %.elt245
  %ptrtoint109 = ptrtoint {}* %75 to i64
  %entry-point-addr-uint110 = add i64 %ptrtoint109, 7
  %entry-point-addr111 = inttoptr i64 %entry-point-addr-uint110 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point112 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr111, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point112({}* %75, i64 2, {}* %ZEIT.0, {}* %G341846.0, {}* null, {}* null)
          to label %normal-dest115 unwind label %cleanup-lpad.loopexit

normal-dest115:                                   ; preds = %normal-dest103
  %.elt249 = extractvalue { {}*, i64 } %81, 0
  %.elt251 = extractvalue { {}*, i64 } %81, 1
  %cond230 = icmp eq i64 %.elt251, 0
  %82 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341841.0 = select i1 %cond230, {}* %82, {}* %.elt249
  %83 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %84 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint121 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint122 = add i64 %ptrtoint121, 7
  %entry-point-addr123 = inttoptr i64 %entry-point-addr-uint122 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point124 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr123, align 8
  %85 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point124({}* %33, i64 7, {}* %farg0, {}* %72, {}* %farg0, {}* %73, {}* %G341841.0, {}* %83, {}* %84)
          to label %tag4 unwind label %cleanup-lpad.loopexit

normal-dest133:                                   ; preds = %tag17
  %86 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %87 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %88 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 463), align 8
  %89 = invoke {}* @cc_safe_fdefinition({}* %88)
          to label %normal-dest135 unwind label %cleanup-lpad.loopexit

normal-dest135:                                   ; preds = %normal-dest133
  %90 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %91 = invoke {}* @cc_safe_fdefinition({}* %90)
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit

normal-dest137:                                   ; preds = %normal-dest135
  %92 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint138 = ptrtoint {}* %91 to i64
  %entry-point-addr-uint139 = add i64 %ptrtoint138, 7
  %entry-point-addr140 = inttoptr i64 %entry-point-addr-uint139 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point141 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr140, align 8
  %93 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point141({}* %91, i64 2, {}* %farg0, {}* %92, {}* null, {}* null)
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit

normal-dest144:                                   ; preds = %normal-dest137
  %.elt257 = extractvalue { {}*, i64 } %93, 0
  %.elt259 = extractvalue { {}*, i64 } %93, 1
  %cond231 = icmp eq i64 %.elt259, 0
  %94 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341825.0 = select i1 %cond231, {}* %94, {}* %.elt257
  %ptrtoint150 = ptrtoint {}* %89 to i64
  %entry-point-addr-uint151 = add i64 %ptrtoint150, 7
  %entry-point-addr152 = inttoptr i64 %entry-point-addr-uint151 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point153 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr152, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point153({}* %89, i64 2, {}* %G341825.0, {}* %ZEIT.0, {}* null, {}* null)
          to label %normal-dest156 unwind label %cleanup-lpad.loopexit

normal-dest156:                                   ; preds = %normal-dest144
  %.elt261 = extractvalue { {}*, i64 } %95, 0
  %.elt263 = extractvalue { {}*, i64 } %95, 1
  %cond232 = icmp eq i64 %.elt263, 0
  %96 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341821.0 = select i1 %cond232, {}* %96, {}* %.elt261
  %97 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %98 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint162 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint163 = add i64 %ptrtoint162, 7
  %entry-point-addr164 = inttoptr i64 %entry-point-addr-uint163 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point165 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr164, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point165({}* %35, i64 7, {}* %farg0, {}* %86, {}* %farg0, {}* %87, {}* %G341821.0, {}* %97, {}* %98)
          to label %tag33 unwind label %cleanup-lpad.loopexit

normal-dest182:                                   ; preds = %tag26
  %100 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %101 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %103 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint183 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint184 = add i64 %ptrtoint183, 7
  %entry-point-addr185 = inttoptr i64 %entry-point-addr-uint184 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point186 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr185, align 8
  %104 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point186({}* %42, i64 5, {}* %100, {}* %101, {}* %"%DOLIST-VAR.1302", {}* %102, {}* %103)
          to label %normal-dest189 unwind label %cleanup-lpad.loopexit

normal-dest189:                                   ; preds = %normal-dest182
  %.elt270 = extractvalue { {}*, i64 } %104, 0
  %.elt272 = extractvalue { {}*, i64 } %104, 1
  %cond233 = icmp eq i64 %.elt272, 0
  %105 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond233, {}* %105, {}* %.elt270
  br label %tag34.backedge

normal-dest202:                                   ; preds = %tag28
  %106 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %107 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %108 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %109 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint203 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint204 = add i64 %ptrtoint203, 7
  %entry-point-addr205 = inttoptr i64 %entry-point-addr-uint204 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point206 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr205, align 8
  %110 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point206({}* %46, i64 5, {}* %106, {}* %107, {}* %x.0, {}* %108, {}* %109)
          to label %normal-dest209 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest209:                                   ; preds = %normal-dest202
  %.elt285 = extractvalue { {}*, i64 } %110, 0
  %.elt287 = extractvalue { {}*, i64 } %110, 1
  %cond235 = icmp eq i64 %.elt287, 0
  %111 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.3" = select i1 %cond235, {}* %111, {}* %.elt285
  br label %tag10

normal-dest216:                                   ; preds = %tag29
  %112 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %113 = icmp eq {}* %48, %112
  br i1 %113, label %tag4, label %tag15

normal-dest218:                                   ; preds = %tag30
  %ptrtoint219 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint220 = add i64 %ptrtoint219, 7
  %entry-point-addr221 = inttoptr i64 %entry-point-addr-uint220 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point222 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr221, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point222({}* %50, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest225 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest225:                                   ; preds = %normal-dest218
  %.elt278 = extractvalue { {}*, i64 } %114, 0
  %.elt280 = extractvalue { {}*, i64 } %114, 1
  br label %tag22
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^412^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !85 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^412^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G341922.0 = phi {}* [ %18, %header-check-br ], [ %G341922.1, %normal-dest17 ], [ %G341922.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 449), align 8
  %ptrtoint20 = ptrtoint {}* %G341922.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G341922.0, i64 2, {}* %"closure->SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN", {}* %11, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %maybe-more-tests67, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 449), align 8
  %"closure->SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 16049, i64 412, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %maybe-more-tests67
  %ptrtoint14 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341922.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 476), align 16
  %ptrtoint33 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %24, i64 2, {}* %"closure->SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN", {}* %25, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 477), align 8
  %ptrtoint46 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %28, i64 2, {}* %"closure->SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN", {}* %29, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %31, {}* inttoptr (i64 1648 to {}*))
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 449), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %33 = insertvalue { {}*, i64 } undef, {}* %32, 0
  %34 = insertvalue { {}*, i64 } %33, i64 1, 1
  ret { {}*, i64 } %34

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 475), align 8
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341922.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !86 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 3
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 3
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 3, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc479 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc479:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest311
  %14 = add i64 %150, 5
  %15 = inttoptr i64 %14 to {}**
  %16 = load {}*, {}** %15, align 8
  br label %tag7

tag2:                                             ; preds = %normal-dest265, %normal-dest380
  br i1 %consp-test193, label %tag28, label %tag25

tag3:                                             ; preds = %tag3.preheader, %tag22.backedge
  %.val500 = phi {}* [ %49, %tag22.backedge ], [ %21, %tag3.preheader ]
  %"%DOLIST-VAR.1506" = phi {}* [ %"%DOLIST-VAR.1.be", %tag22.backedge ], [ %"%DOLIST-VAR.0", %tag3.preheader ]
  %17 = ptrtoint {}* %"%DOLIST-VAR.1506" to i64
  %tag-only104439 = and i64 %17, 7
  %consp-test105 = icmp eq i64 %tag-only104439, 3
  %.val499 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341992.0 = select i1 %consp-test105, {}* %.val499, {}* %.val500
  %18 = icmp eq {}* %G341992.0, %.val500
  br i1 %18, label %tag54, label %tag20

tag4:                                             ; preds = %normal-dest85
  %19 = icmp eq {}* %x.0, %90
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342106.0 = select i1 %19, {}* %.val, {}* %90
  %20 = icmp eq {}* %G342106.0, %90
  br i1 %20, label %tag17, label %tag56

tag7:                                             ; preds = %normal-dest170, %tag
  %21 = phi {}* [ %149, %tag ], [ %112, %normal-dest170 ]
  %"%DOLIST-VAR.0" = phi {}* [ %16, %tag ], [ %"%DOLIST-VAR.2", %normal-dest170 ]
  %22 = icmp eq {}* %"%DOLIST-VAR.0", %21
  br i1 %22, label %tag49, label %tag3.preheader

tag3.preheader:                                   ; preds = %tag7
  br label %tag3

tag13:                                            ; preds = %tag25
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %24 = invoke {}* @cc_safe_fdefinition({}* %23)
          to label %normal-dest119 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag15:                                            ; preds = %normal-dest282
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 465), align 8
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest133 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag17:                                            ; preds = %tag4
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest142 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag20:                                            ; preds = %tag3
  %29 = add i64 %17, -3
  %30 = inttoptr i64 %29 to {}**
  %31 = load {}*, {}** %30, align 8
  br label %tag62

tag21:                                            ; preds = %tag51
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest163 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag23:                                            ; preds = %normal-dest229, %normal-dest373
  br i1 %consp-test105, label %tag34, label %tag40

tag24:                                            ; preds = %normal-dest149, %tag39
  %34 = phi {}* [ %90, %tag39 ], [ %106, %normal-dest149 ]
  %"%DOLIST-VAR93.0" = phi {}* [ %55, %tag39 ], [ %"%DOLIST-VAR93.3", %normal-dest149 ]
  %35 = icmp eq {}* %"%DOLIST-VAR93.0", %34
  br i1 %35, label %tag56, label %tag30.preheader

tag30.preheader:                                  ; preds = %tag24
  br label %tag30

tag25:                                            ; preds = %tag2
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %37 = icmp eq {}* %"%DOLIST-VAR93.1507", %36
  %.val495 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342029.0 = select i1 %37, {}* %.val495, {}* %36
  %38 = icmp eq {}* %G342029.0, %36
  br i1 %38, label %tag13, label %tag56

tag28:                                            ; preds = %tag2
  %39 = add i64 %44, 5
  %40 = inttoptr i64 %39 to {}**
  %41 = load {}*, {}** %40, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag50.backedge

tag29:                                            ; preds = %normal-dest282, %normal-dest140
  %return-value.sroa.33.0 = phi i64 [ %.elt460, %normal-dest140 ], [ 1, %normal-dest282 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt458, %normal-dest140 ], [ %66, %normal-dest282 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %43 = insertvalue { {}*, i64 } %42, i64 %return-value.sroa.33.0, 1
  ret { {}*, i64 } %43

tag30:                                            ; preds = %tag30.preheader, %tag50.backedge
  %.val494 = phi {}* [ %98, %tag50.backedge ], [ %34, %tag30.preheader ]
  %"%DOLIST-VAR93.1507" = phi {}* [ %"%DOLIST-VAR93.1.be", %tag50.backedge ], [ %"%DOLIST-VAR93.0", %tag30.preheader ]
  %44 = ptrtoint {}* %"%DOLIST-VAR93.1507" to i64
  %tag-only192400 = and i64 %44, 7
  %consp-test193 = icmp eq i64 %tag-only192400, 3
  %.val493 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342092.0 = select i1 %consp-test193, {}* %.val493, {}* %.val494
  %45 = icmp eq {}* %G342092.0, %.val494
  br i1 %45, label %tag37, label %tag63

tag34:                                            ; preds = %tag23
  %46 = add i64 %17, 5
  %47 = inttoptr i64 %46 to {}**
  %48 = load {}*, {}** %47, align 8
  %.pre508 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag22.backedge

tag22.backedge:                                   ; preds = %tag34, %normal-dest222
  %49 = phi {}* [ %.pre508, %tag34 ], [ %124, %normal-dest222 ]
  %"%DOLIST-VAR.1.be" = phi {}* [ %48, %tag34 ], [ %"%DOLIST-VAR.3", %normal-dest222 ]
  %50 = icmp eq {}* %"%DOLIST-VAR.1.be", %49
  br i1 %50, label %tag49, label %tag3

tag37:                                            ; preds = %tag30
  %51 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %52 = invoke {}* @cc_safe_fdefinition({}* %51)
          to label %normal-dest195 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag39:                                            ; preds = %normal-dest85
  %53 = add i64 %91, 5
  %54 = inttoptr i64 %53 to {}**
  %55 = load {}*, {}** %54, align 8
  br label %tag24

tag40:                                            ; preds = %tag23
  %56 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %57 = icmp eq {}* %"%DOLIST-VAR.1506", %56
  %.val501 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G341959.0 = select i1 %57, {}* %.val501, {}* %56
  %58 = icmp eq {}* %G341959.0, %56
  br i1 %58, label %tag43, label %tag49

tag43:                                            ; preds = %tag40
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %60 = invoke {}* @cc_safe_fdefinition({}* %59)
          to label %normal-dest215 unwind label %cleanup-lpad.loopexit

tag46:                                            ; preds = %normal-dest373
  %61 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 461), align 8
  %62 = invoke {}* @cc_safe_fdefinition({}* %61)
          to label %normal-dest229 unwind label %cleanup-lpad.loopexit

tag47:                                            ; preds = %normal-dest380
  %63 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %64 = invoke {}* @cc_safe_fdefinition({}* %63)
          to label %normal-dest242 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag49:                                            ; preds = %tag22.backedge, %tag40, %tag51, %tag7
  %65 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 4), align 16
  %66 = invoke {}* @cc_safe_symbol_value({}* %65)
          to label %normal-dest282 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag51:                                            ; preds = %normal-dest311
  %67 = icmp eq {}* %x312.0, %149
  %.val497 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342006.0 = select i1 %67, {}* %.val497, {}* %149
  %68 = icmp eq {}* %G342006.0, %149
  br i1 %68, label %tag21, label %tag49

tag54:                                            ; preds = %tag3
  %69 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest290 unwind label %cleanup-lpad.loopexit

tag56:                                            ; preds = %tag25, %tag50.backedge, %tag4, %tag24
  %71 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 380), align 16
  %72 = invoke {}* @cc_safe_fdefinition({}* %71)
          to label %normal-dest304 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag60:                                            ; preds = %normal-dest202, %tag63
  %ZEIT180.0 = phi {}* [ %81, %tag63 ], [ %ZEIT180.1, %normal-dest202 ]
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 172), align 16
  %74 = invoke {}* @cc_safe_symbol_value({}* %73)
          to label %normal-dest323 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag61:                                            ; preds = %normal-dest323
  %75 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %76 = invoke {}* @cc_safe_fdefinition({}* %75)
          to label %normal-dest325 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag62:                                            ; preds = %normal-dest297, %tag20
  %ZEIT.0 = phi {}* [ %31, %tag20 ], [ %ZEIT.1, %normal-dest297 ]
  %77 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %78 = invoke {}* @cc_safe_fdefinition({}* %77)
          to label %normal-dest366 unwind label %cleanup-lpad.loopexit

tag63:                                            ; preds = %tag30
  %79 = add i64 %44, -3
  %80 = inttoptr i64 %79 to {}**
  %81 = load {}*, {}** %80, align 8
  br label %tag60

tag64:                                            ; preds = %normal-dest348, %normal-dest323
  %82 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %83 = invoke {}* @cc_safe_symbol_value({}* %82)
          to label %normal-dest380 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

cleanup-lpad.loopexit:                            ; preds = %tag43, %normal-dest215, %tag46, %normal-dest229, %tag54, %normal-dest290, %tag62, %normal-dest366
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %tag64, %normal-dest348, %normal-dest336, %normal-dest329, %normal-dest327, %normal-dest325, %tag61, %tag60, %normal-dest265, %normal-dest253, %normal-dest246, %normal-dest244, %normal-dest242, %tag47, %normal-dest195, %tag37, %normal-dest119, %tag13
  %lpad.loopexit503 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %13, %10, %normal-dest304, %tag56, %tag49, %normal-dest163, %tag21, %normal-dest142, %tag17, %normal-dest133, %tag15, %normal-dest78, %normal-dest74, %normal-dest71, %normal-dest
  %lpad.loopexit.split-lp504 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit503, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp504, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %84 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 471), align 8
  %85 = invoke {}* @cc_safe_fdefinition({}* %84)
          to label %normal-dest71 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest71:                                    ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %85 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %85, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest74 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest74:                                    ; preds = %normal-dest71
  %87 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 380), align 16
  %88 = invoke {}* @cc_safe_fdefinition({}* %87)
          to label %normal-dest78 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest78:                                    ; preds = %normal-dest74
  %ptrtoint79 = ptrtoint {}* %88 to i64
  %entry-point-addr-uint80 = add i64 %ptrtoint79, 7
  %entry-point-addr81 = inttoptr i64 %entry-point-addr-uint80 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point82 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr81, align 8
  %89 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point82({}* %88, i64 2, {}* %farg2, {}* %farg1, {}* null, {}* null)
          to label %normal-dest85 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest85:                                    ; preds = %normal-dest78
  %.elt396 = extractvalue { {}*, i64 } %89, 0
  %.elt398 = extractvalue { {}*, i64 } %89, 1
  %cond = icmp eq i64 %.elt398, 0
  %90 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %x.0 = select i1 %cond, {}* %90, {}* %.elt396
  %91 = ptrtoint {}* %x.0 to i64
  %tag-only399 = and i64 %91, 7
  %consp-test = icmp eq i64 %tag-only399, 3
  br i1 %consp-test, label %tag39, label %tag4

normal-dest119:                                   ; preds = %tag13
  %92 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %93 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %94 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %95 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint120 = ptrtoint {}* %24 to i64
  %entry-point-addr-uint121 = add i64 %ptrtoint120, 7
  %entry-point-addr122 = inttoptr i64 %entry-point-addr-uint121 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point123 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr122, align 8
  %96 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point123({}* %24, i64 5, {}* %92, {}* %93, {}* %"%DOLIST-VAR93.1507", {}* %94, {}* %95)
          to label %normal-dest126 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest126:                                   ; preds = %normal-dest119
  %.elt427 = extractvalue { {}*, i64 } %96, 0
  %.elt429 = extractvalue { {}*, i64 } %96, 1
  %cond385 = icmp eq i64 %.elt429, 0
  %97 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR93.2" = select i1 %cond385, {}* %97, {}* %.elt427
  br label %tag50.backedge

tag50.backedge:                                   ; preds = %normal-dest126, %tag28
  %98 = phi {}* [ %.pre, %tag28 ], [ %97, %normal-dest126 ]
  %"%DOLIST-VAR93.1.be" = phi {}* [ %41, %tag28 ], [ %"%DOLIST-VAR93.2", %normal-dest126 ]
  %99 = icmp eq {}* %"%DOLIST-VAR93.1.be", %98
  br i1 %99, label %tag56, label %tag30

normal-dest133:                                   ; preds = %tag15
  %ptrtoint134 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint135 = add i64 %ptrtoint134, 7
  %entry-point-addr136 = inttoptr i64 %entry-point-addr-uint135 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point137 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr136, align 8
  %100 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point137({}* %26, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest140 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest140:                                   ; preds = %normal-dest133
  %.elt458 = extractvalue { {}*, i64 } %100, 0
  %.elt460 = extractvalue { {}*, i64 } %100, 1
  br label %tag29

normal-dest142:                                   ; preds = %tag17
  %101 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %103 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %104 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint143 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint144 = add i64 %ptrtoint143, 7
  %entry-point-addr145 = inttoptr i64 %entry-point-addr-uint144 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point146 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr145, align 8
  %105 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point146({}* %28, i64 5, {}* %101, {}* %102, {}* %x.0, {}* %103, {}* %104)
          to label %normal-dest149 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest149:                                   ; preds = %normal-dest142
  %.elt469 = extractvalue { {}*, i64 } %105, 0
  %.elt471 = extractvalue { {}*, i64 } %105, 1
  %cond392 = icmp eq i64 %.elt471, 0
  %106 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR93.3" = select i1 %cond392, {}* %106, {}* %.elt469
  br label %tag24

normal-dest163:                                   ; preds = %tag21
  %107 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %108 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %109 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %110 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint164 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint165 = add i64 %ptrtoint164, 7
  %entry-point-addr166 = inttoptr i64 %entry-point-addr-uint165 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point167 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr166, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point167({}* %33, i64 5, {}* %107, {}* %108, {}* %x312.0, {}* %109, {}* %110)
          to label %normal-dest170 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest170:                                   ; preds = %normal-dest163
  %.elt465 = extractvalue { {}*, i64 } %111, 0
  %.elt467 = extractvalue { {}*, i64 } %111, 1
  %cond391 = icmp eq i64 %.elt467, 0
  %112 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond391, {}* %112, {}* %.elt465
  br label %tag7

normal-dest195:                                   ; preds = %tag37
  %113 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %114 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %115 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %116 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint196 = ptrtoint {}* %52 to i64
  %entry-point-addr-uint197 = add i64 %ptrtoint196, 7
  %entry-point-addr198 = inttoptr i64 %entry-point-addr-uint197 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point199 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr198, align 8
  %117 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point199({}* %52, i64 5, {}* %113, {}* %114, {}* %"%DOLIST-VAR93.1507", {}* %115, {}* %116)
          to label %normal-dest202 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest202:                                   ; preds = %normal-dest195
  %.elt431 = extractvalue { {}*, i64 } %117, 0
  %.elt433 = extractvalue { {}*, i64 } %117, 1
  %cond386 = icmp eq i64 %.elt433, 0
  %118 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ZEIT180.1 = select i1 %cond386, {}* %118, {}* %.elt431
  br label %tag60

normal-dest215:                                   ; preds = %tag43
  %119 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %120 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %121 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %122 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint216 = ptrtoint {}* %60 to i64
  %entry-point-addr-uint217 = add i64 %ptrtoint216, 7
  %entry-point-addr218 = inttoptr i64 %entry-point-addr-uint217 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point219 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr218, align 8
  %123 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point219({}* %60, i64 5, {}* %119, {}* %120, {}* %"%DOLIST-VAR.1506", {}* %121, {}* %122)
          to label %normal-dest222 unwind label %cleanup-lpad.loopexit

normal-dest222:                                   ; preds = %normal-dest215
  %.elt450 = extractvalue { {}*, i64 } %123, 0
  %.elt452 = extractvalue { {}*, i64 } %123, 1
  %cond389 = icmp eq i64 %.elt452, 0
  %124 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.3" = select i1 %cond389, {}* %124, {}* %.elt450
  br label %tag22.backedge

normal-dest229:                                   ; preds = %tag46
  %ptrtoint230 = ptrtoint {}* %62 to i64
  %entry-point-addr-uint231 = add i64 %ptrtoint230, 7
  %entry-point-addr232 = inttoptr i64 %entry-point-addr-uint231 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point233 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr232, align 8
  %125 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point233({}* %62, i64 2, {}* %farg0, {}* %ZEIT.0, {}* null, {}* null)
          to label %tag23 unwind label %cleanup-lpad.loopexit

normal-dest242:                                   ; preds = %tag47
  %126 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %127 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %128 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 473), align 8
  %129 = invoke {}* @cc_safe_fdefinition({}* %128)
          to label %normal-dest244 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest244:                                   ; preds = %normal-dest242
  %130 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %131 = invoke {}* @cc_safe_fdefinition({}* %130)
          to label %normal-dest246 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest246:                                   ; preds = %normal-dest244
  %132 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint247 = ptrtoint {}* %131 to i64
  %entry-point-addr-uint248 = add i64 %ptrtoint247, 7
  %entry-point-addr249 = inttoptr i64 %entry-point-addr-uint248 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point250 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr249, align 8
  %133 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point250({}* %131, i64 2, {}* %farg0, {}* %132, {}* null, {}* null)
          to label %normal-dest253 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest253:                                   ; preds = %normal-dest246
  %.elt414 = extractvalue { {}*, i64 } %133, 0
  %.elt416 = extractvalue { {}*, i64 } %133, 1
  %cond383 = icmp eq i64 %.elt416, 0
  %134 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342045.0 = select i1 %cond383, {}* %134, {}* %.elt414
  %ptrtoint259 = ptrtoint {}* %129 to i64
  %entry-point-addr-uint260 = add i64 %ptrtoint259, 7
  %entry-point-addr261 = inttoptr i64 %entry-point-addr-uint260 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point262 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr261, align 8
  %135 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point262({}* %129, i64 2, {}* %G342045.0, {}* %ZEIT180.0, {}* null, {}* null)
          to label %normal-dest265 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest265:                                   ; preds = %normal-dest253
  %.elt418 = extractvalue { {}*, i64 } %135, 0
  %.elt420 = extractvalue { {}*, i64 } %135, 1
  %cond384 = icmp eq i64 %.elt420, 0
  %136 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342041.0 = select i1 %cond384, {}* %136, {}* %.elt418
  %137 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %138 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint271 = ptrtoint {}* %64 to i64
  %entry-point-addr-uint272 = add i64 %ptrtoint271, 7
  %entry-point-addr273 = inttoptr i64 %entry-point-addr-uint272 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point274 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr273, align 8
  %139 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point274({}* %64, i64 7, {}* %farg0, {}* %126, {}* %farg0, {}* %127, {}* %G342041.0, {}* %137, {}* %138)
          to label %tag2 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest282:                                   ; preds = %tag49
  %140 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %141 = icmp eq {}* %66, %140
  br i1 %141, label %tag29, label %tag15

normal-dest290:                                   ; preds = %tag54
  %142 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %143 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %144 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %145 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint291 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint292 = add i64 %ptrtoint291, 7
  %entry-point-addr293 = inttoptr i64 %entry-point-addr-uint292 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point294 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr293, align 8
  %146 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point294({}* %70, i64 5, {}* %142, {}* %143, {}* %"%DOLIST-VAR.1506", {}* %144, {}* %145)
          to label %normal-dest297 unwind label %cleanup-lpad.loopexit

normal-dest297:                                   ; preds = %normal-dest290
  %.elt454 = extractvalue { {}*, i64 } %146, 0
  %.elt456 = extractvalue { {}*, i64 } %146, 1
  %cond390 = icmp eq i64 %.elt456, 0
  %147 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ZEIT.1 = select i1 %cond390, {}* %147, {}* %.elt454
  br label %tag62

normal-dest304:                                   ; preds = %tag56
  %ptrtoint305 = ptrtoint {}* %72 to i64
  %entry-point-addr-uint306 = add i64 %ptrtoint305, 7
  %entry-point-addr307 = inttoptr i64 %entry-point-addr-uint306 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point308 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr307, align 8
  %148 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point308({}* %72, i64 2, {}* %farg2, {}* %farg1, {}* null, {}* null)
          to label %normal-dest311 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest311:                                   ; preds = %normal-dest304
  %.elt435 = extractvalue { {}*, i64 } %148, 0
  %.elt437 = extractvalue { {}*, i64 } %148, 1
  %cond387 = icmp eq i64 %.elt437, 0
  %149 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %x312.0 = select i1 %cond387, {}* %149, {}* %.elt435
  %150 = ptrtoint {}* %x312.0 to i64
  %tag-only320438 = and i64 %150, 7
  %consp-test321 = icmp eq i64 %tag-only320438, 3
  br i1 %consp-test321, label %tag, label %tag51

normal-dest323:                                   ; preds = %tag60
  %151 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %152 = icmp eq {}* %74, %151
  br i1 %152, label %tag64, label %tag61

normal-dest325:                                   ; preds = %tag61
  %153 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %154 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %155 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 445), align 8
  %156 = invoke {}* @cc_safe_fdefinition({}* %155)
          to label %normal-dest327 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest327:                                   ; preds = %normal-dest325
  %157 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %158 = invoke {}* @cc_safe_fdefinition({}* %157)
          to label %normal-dest329 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest329:                                   ; preds = %normal-dest327
  %159 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %ptrtoint330 = ptrtoint {}* %158 to i64
  %entry-point-addr-uint331 = add i64 %ptrtoint330, 7
  %entry-point-addr332 = inttoptr i64 %entry-point-addr-uint331 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point333 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr332, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point333({}* %158, i64 2, {}* %farg0, {}* %159, {}* null, {}* null)
          to label %normal-dest336 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest336:                                   ; preds = %normal-dest329
  %.elt402 = extractvalue { {}*, i64 } %160, 0
  %.elt404 = extractvalue { {}*, i64 } %160, 1
  %cond381 = icmp eq i64 %.elt404, 0
  %161 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342066.0 = select i1 %cond381, {}* %161, {}* %.elt402
  %ptrtoint342 = ptrtoint {}* %156 to i64
  %entry-point-addr-uint343 = add i64 %ptrtoint342, 7
  %entry-point-addr344 = inttoptr i64 %entry-point-addr-uint343 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point345 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr344, align 8
  %162 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point345({}* %156, i64 2, {}* %ZEIT180.0, {}* %G342066.0, {}* null, {}* null)
          to label %normal-dest348 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest348:                                   ; preds = %normal-dest336
  %.elt406 = extractvalue { {}*, i64 } %162, 0
  %.elt408 = extractvalue { {}*, i64 } %162, 1
  %cond382 = icmp eq i64 %.elt408, 0
  %163 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342061.0 = select i1 %cond382, {}* %163, {}* %.elt406
  %164 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %165 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint354 = ptrtoint {}* %76 to i64
  %entry-point-addr-uint355 = add i64 %ptrtoint354, 7
  %entry-point-addr356 = inttoptr i64 %entry-point-addr-uint355 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point357 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr356, align 8
  %166 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point357({}* %76, i64 7, {}* %farg0, {}* %153, {}* %farg0, {}* %154, {}* %G342061.0, {}* %164, {}* %165)
          to label %tag64 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest366:                                   ; preds = %tag62
  %ptrtoint367 = ptrtoint {}* %78 to i64
  %entry-point-addr-uint368 = add i64 %ptrtoint367, 7
  %entry-point-addr369 = inttoptr i64 %entry-point-addr-uint368 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point370 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr369, align 8
  %167 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point370({}* %78, i64 2, {}* %farg0, {}* %ZEIT.0, {}* null, {}* null)
          to label %normal-dest373 unwind label %cleanup-lpad.loopexit

normal-dest373:                                   ; preds = %normal-dest366
  %.elt441 = extractvalue { {}*, i64 } %167, 0
  %.elt443 = extractvalue { {}*, i64 } %167, 1
  %cond388 = icmp eq i64 %.elt443, 0
  %168 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G341970.0 = select i1 %cond388, {}* %168, {}* %.elt441
  %169 = icmp eq {}* %G341970.0, %168
  br i1 %169, label %tag23, label %tag46

normal-dest380:                                   ; preds = %tag64
  %170 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %171 = icmp eq {}* %83, %170
  br i1 %171, label %tag2, label %tag47
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^433^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !87 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^433^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G342138.0 = phi {}* [ %18, %header-check-br ], [ %G342138.1, %normal-dest26 ], [ %G342138.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 394), align 16
  %ptrtoint29 = ptrtoint {}* %G342138.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G342138.0, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_MERKEN", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 394), align 16
  %"closure->SCH=EINZEL_BEHANDLUNG_MERKEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 17093, i64 433, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 479), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342138.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 480), align 16
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_MERKEN", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 481), align 8
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_MERKEN", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 1732 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 394), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342138.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !88 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc34 unwind label %cleanup-lpad

.noexc34:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest13, %normal-dest22
  %return-value.sroa.4.0 = phi i64 [ %.elt30, %normal-dest22 ], [ 1, %normal-dest13 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt28, %normal-dest22 ], [ %23, %normal-dest13 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %15 = insertvalue { {}*, i64 } %14, i64 %return-value.sroa.4.0, 1
  ret { {}*, i64 } %15

tag1:                                             ; preds = %normal-dest13
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 465), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest15 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest15, %tag1, %normal-dest10, %normal-dest7, %normal-dest
  %18 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %18

normal-dest:                                      ; preds = %11
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 461), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %20 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %20, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 4), align 16
  %23 = invoke {}* @cc_safe_symbol_value({}* %22)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %25 = icmp eq {}* %23, %24
  br i1 %25, label %tag, label %tag1

normal-dest15:                                    ; preds = %tag1
  %ptrtoint16 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint17 = add i64 %ptrtoint16, 7
  %entry-point-addr18 = inttoptr i64 %entry-point-addr-uint17 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point19 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr18, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point19({}* %17, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %normal-dest15
  %.elt28 = extractvalue { {}*, i64 } %26, 0
  %.elt30 = extractvalue { {}*, i64 } %26, 1
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^438^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !89 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^438^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest76, %normal-dest63, %header-check-br
  %G342184.0 = phi {}* [ %18, %header-check-br ], [ %G342184.1, %normal-dest63 ], [ %G342184.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 461), align 8
  %ptrtoint13 = ptrtoint {}* %G342184.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G342184.0, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_MERKEN_0", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest10, %header-check-br46
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest56 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests54, %normal-dest56, %tag3, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 461), align 8
  %"closure->SCH=EINZEL_BEHANDLUNG_MERKEN_0" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 17247, i64 438, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag3

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br46

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 484), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_MERKEN_0", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 485), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_MERKEN_0", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1752 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 461), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

header-check-br46:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %33 = icmp ult i64 %.off106, 5
  br i1 %33, label %maybe-more-tests54, label %tag3

maybe-more-tests54:                               ; preds = %header-check-br46
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest56:                                    ; preds = %tag3
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 483), align 8
  %ptrtoint57 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint58 = add i64 %ptrtoint57, 7
  %entry-point-addr59 = inttoptr i64 %entry-point-addr-uint58 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point60 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr59, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point60({}* %14, i64 5, {}* %36, {}* %37, {}* %18, {}* %38, {}* %39)
          to label %normal-dest63 unwind label %cleanup-lpad

normal-dest63:                                    ; preds = %normal-dest56
  %.elt = extractvalue { {}*, i64 } %40, 0
  %.elt84 = extractvalue { {}*, i64 } %40, 1
  %cond = icmp eq i64 %.elt84, 0
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342184.1 = select i1 %cond, {}* %41, {}* %.elt
  br label %tag

normal-dest69:                                    ; preds = %maybe-more-tests54
  %ptrtoint70 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %35, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342184.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !90 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc112 unwind label %cleanup-lpad

.noexc112:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest9
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest10 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest46, %normal-dest83
  %return-value.sroa.12.0 = phi i64 [ %.elt108, %normal-dest83 ], [ 1, %normal-dest46 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt106, %normal-dest83 ], [ %19, %normal-dest46 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %16 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %17 = insertvalue { {}*, i64 } %16, i64 %return-value.sroa.12.0, 1
  ret { {}*, i64 } %17

tag3:                                             ; preds = %normal-dest26, %normal-dest9
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %19 = invoke {}* @cc_safe_symbol_value({}* %18)
          to label %normal-dest46 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest46
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %21 = invoke {}* @cc_safe_fdefinition({}* %20)
          to label %normal-dest48 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest71, %normal-dest59, %normal-dest52, %normal-dest50, %normal-dest48, %tag4, %tag3, %normal-dest26, %normal-dest17, %normal-dest14, %normal-dest12, %normal-dest10, %tag, %normal-dest
  %22 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %22

normal-dest:                                      ; preds = %11
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 172), align 16
  %24 = invoke {}* @cc_safe_symbol_value({}* %23)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %26 = icmp eq {}* %24, %25
  br i1 %26, label %tag3, label %tag

normal-dest10:                                    ; preds = %tag
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %30 = invoke {}* @cc_safe_fdefinition({}* %29)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest10
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest12
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %ptrtoint = ptrtoint {}* %32 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %32, i64 2, {}* %farg0, {}* %33, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest14
  %.elt = extractvalue { {}*, i64 } %34, 0
  %.elt88 = extractvalue { {}*, i64 } %34, 1
  %cond = icmp eq i64 %.elt88, 0
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342233.0 = select i1 %cond, {}* %35, {}* %.elt
  %ptrtoint20 = ptrtoint {}* %30 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %36 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %30, i64 2, {}* %farg1, {}* %G342233.0, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest17
  %.elt90 = extractvalue { {}*, i64 } %36, 0
  %.elt92 = extractvalue { {}*, i64 } %36, 1
  %cond84 = icmp eq i64 %.elt92, 0
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342228.0 = select i1 %cond84, {}* %37, {}* %.elt90
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint32 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint33 = add i64 %ptrtoint32, 7
  %entry-point-addr34 = inttoptr i64 %entry-point-addr-uint33 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point35 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr34, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point35({}* %15, i64 7, {}* %farg0, {}* %27, {}* %farg0, {}* %28, {}* %G342228.0, {}* %38, {}* %39)
          to label %tag3 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %tag3
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %42 = icmp eq {}* %19, %41
  br i1 %42, label %tag2, label %tag4

normal-dest48:                                    ; preds = %tag4
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %44 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 463), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest48
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest50
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint53 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint54 = add i64 %ptrtoint53, 7
  %entry-point-addr55 = inttoptr i64 %entry-point-addr-uint54 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point56 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr55, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point56({}* %48, i64 2, {}* %farg0, {}* %49, {}* null, {}* null)
          to label %normal-dest59 unwind label %cleanup-lpad

normal-dest59:                                    ; preds = %normal-dest52
  %.elt98 = extractvalue { {}*, i64 } %50, 0
  %.elt100 = extractvalue { {}*, i64 } %50, 1
  %cond85 = icmp eq i64 %.elt100, 0
  %51 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342212.0 = select i1 %cond85, {}* %51, {}* %.elt98
  %ptrtoint65 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint66 = add i64 %ptrtoint65, 7
  %entry-point-addr67 = inttoptr i64 %entry-point-addr-uint66 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point68 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr67, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point68({}* %46, i64 2, {}* %G342212.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest71 unwind label %cleanup-lpad

normal-dest71:                                    ; preds = %normal-dest59
  %.elt102 = extractvalue { {}*, i64 } %52, 0
  %.elt104 = extractvalue { {}*, i64 } %52, 1
  %cond86 = icmp eq i64 %.elt104, 0
  %53 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342208.0 = select i1 %cond86, {}* %53, {}* %.elt102
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %55 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint77 = ptrtoint {}* %21 to i64
  %entry-point-addr-uint78 = add i64 %ptrtoint77, 7
  %entry-point-addr79 = inttoptr i64 %entry-point-addr-uint78 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point80 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr79, align 8
  %56 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point80({}* %21, i64 7, {}* %farg0, {}* %43, {}* %farg0, {}* %44, {}* %G342208.0, {}* %54, {}* %55)
          to label %normal-dest83 unwind label %cleanup-lpad

normal-dest83:                                    ; preds = %normal-dest71
  %.elt106 = extractvalue { {}*, i64 } %56, 0
  %.elt108 = extractvalue { {}*, i64 } %56, 1
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^452^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !91 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^452^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br59
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest76, %normal-dest17, %header-check-br
  %G342260.0 = phi {}* [ %18, %header-check-br ], [ %G342260.1, %normal-dest17 ], [ %G342260.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 447), align 8
  %ptrtoint20 = ptrtoint {}* %G342260.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G342260.0, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_VERGESSEN", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests67, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 447), align 8
  %"closure->SCH=EINZEL_BEHANDLUNG_VERGESSEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 17816, i64 452, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 487), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342260.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 488), align 16
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_VERGESSEN", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 489), align 8
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_VERGESSEN", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %35, {}* inttoptr (i64 1808 to {}*))
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 447), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %39 = icmp ult i64 %.off106, 5
  br i1 %39, label %maybe-more-tests67, label %tag

maybe-more-tests67:                               ; preds = %header-check-br59
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %maybe-more-tests67
  %ptrtoint70 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %41, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342260.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !92 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc34 unwind label %cleanup-lpad

.noexc34:                                         ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest13, %normal-dest24
  %return-value.sroa.4.0 = phi i64 [ %.elt30, %normal-dest24 ], [ 1, %normal-dest13 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt28, %normal-dest24 ], [ %23, %normal-dest13 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %15 = insertvalue { {}*, i64 } %14, i64 %return-value.sroa.4.0, 1
  ret { {}*, i64 } %15

tag2:                                             ; preds = %normal-dest13
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 465), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest17 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest17, %tag2, %normal-dest10, %normal-dest7, %normal-dest
  %18 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %18

normal-dest:                                      ; preds = %11
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 471), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest
  %ptrtoint = ptrtoint {}* %20 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %20, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 4), align 16
  %23 = invoke {}* @cc_safe_symbol_value({}* %22)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %25 = icmp eq {}* %23, %24
  br i1 %25, label %tag, label %tag2

normal-dest17:                                    ; preds = %tag2
  %ptrtoint18 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint19 = add i64 %ptrtoint18, 7
  %entry-point-addr20 = inttoptr i64 %entry-point-addr-uint19 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point21 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr20, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point21({}* %17, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest17
  %.elt28 = extractvalue { {}*, i64 } %26, 0
  %.elt30 = extractvalue { {}*, i64 } %26, 1
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^457^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !93 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^457^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest26, %header-check-br
  %G342306.0 = phi {}* [ %18, %header-check-br ], [ %G342306.1, %normal-dest26 ], [ %G342306.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 471), align 8
  %ptrtoint43 = ptrtoint {}* %G342306.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G342306.0, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_VERGESSEN_0", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %maybe-more-tests21, %normal-dest22, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 471), align 8
  %"closure->SCH=EINZEL_BEHANDLUNG_VERGESSEN_0" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 17976, i64 457, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag1

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag1
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 491), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342306.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag4

normal-dest30:                                    ; preds = %maybe-more-tests21
  %ptrtoint31 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt101 = extractvalue { {}*, i64 } %30, 0
  %.elt103 = extractvalue { {}*, i64 } %30, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342306.2 = select i1 %cond82, {}* %31, {}* %.elt101
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 492), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_VERGESSEN_0", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 493), align 8
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=EINZEL_BEHANDLUNG_VERGESSEN_0", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1828 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 471), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !94 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc150 unwind label %cleanup-lpad

.noexc150:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %normal-dest96, %normal-dest110
  %return-value.sroa.15.0 = phi i64 [ %.elt146, %normal-dest110 ], [ 1, %normal-dest96 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt144, %normal-dest110 ], [ %62, %normal-dest96 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %14 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %15 = insertvalue { {}*, i64 } %14, i64 %return-value.sroa.15.0, 1
  ret { {}*, i64 } %15

tag1:                                             ; preds = %normal-dest87
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest12 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest11
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 372), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest46 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest69, %normal-dest11
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 174), align 16
  %21 = invoke {}* @cc_safe_symbol_value({}* %20)
          to label %normal-dest87 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest28, %normal-dest87
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest89 unwind label %cleanup-lpad

tag5:                                             ; preds = %normal-dest96
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 461), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest103 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %13, %10, %normal-dest103, %tag5, %normal-dest89, %tag4, %tag3, %normal-dest69, %normal-dest57, %normal-dest50, %normal-dest48, %normal-dest46, %tag2, %normal-dest28, %normal-dest19, %normal-dest16, %normal-dest14, %normal-dest12, %tag1, %normal-dest
  %26 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %26

normal-dest:                                      ; preds = %11
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 172), align 16
  %28 = invoke {}* @cc_safe_symbol_value({}* %27)
          to label %normal-dest11 unwind label %cleanup-lpad

normal-dest11:                                    ; preds = %normal-dest
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %30 = icmp eq {}* %28, %29
  br i1 %30, label %tag3, label %tag2

normal-dest12:                                    ; preds = %tag1
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 473), align 8
  %34 = invoke {}* @cc_safe_fdefinition({}* %33)
          to label %normal-dest14 unwind label %cleanup-lpad

normal-dest14:                                    ; preds = %normal-dest12
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest16 unwind label %cleanup-lpad

normal-dest16:                                    ; preds = %normal-dest14
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint = ptrtoint {}* %36 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %38 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %36, i64 2, {}* %farg0, {}* %37, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %.elt128 = extractvalue { {}*, i64 } %38, 0
  %.elt130 = extractvalue { {}*, i64 } %38, 1
  %cond114 = icmp eq i64 %.elt130, 0
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342344.0 = select i1 %cond114, {}* %39, {}* %.elt128
  %ptrtoint22 = ptrtoint {}* %34 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %34, i64 2, {}* %G342344.0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest19
  %.elt132 = extractvalue { {}*, i64 } %40, 0
  %.elt134 = extractvalue { {}*, i64 } %40, 1
  %cond115 = icmp eq i64 %.elt134, 0
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342340.0 = select i1 %cond115, {}* %41, {}* %.elt132
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint34 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %17, i64 7, {}* %farg0, {}* %31, {}* %farg0, {}* %32, {}* %G342340.0, {}* %42, {}* %43)
          to label %tag4 unwind label %cleanup-lpad

normal-dest46:                                    ; preds = %tag2
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 390), align 16
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 445), align 8
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest46
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest50 unwind label %cleanup-lpad

normal-dest50:                                    ; preds = %normal-dest48
  %51 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 81), align 8
  %ptrtoint51 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint52 = add i64 %ptrtoint51, 7
  %entry-point-addr53 = inttoptr i64 %entry-point-addr-uint52 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point54 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr53, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point54({}* %50, i64 2, {}* %farg0, {}* %51, {}* null, {}* null)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest50
  %.elt = extractvalue { {}*, i64 } %52, 0
  %.elt118 = extractvalue { {}*, i64 } %52, 1
  %cond = icmp eq i64 %.elt118, 0
  %53 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342365.0 = select i1 %cond, {}* %53, {}* %.elt
  %ptrtoint63 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint64 = add i64 %ptrtoint63, 7
  %entry-point-addr65 = inttoptr i64 %entry-point-addr-uint64 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point66 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr65, align 8
  %54 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point66({}* %48, i64 2, {}* %farg1, {}* %G342365.0, {}* null, {}* null)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %normal-dest57
  %.elt120 = extractvalue { {}*, i64 } %54, 0
  %.elt122 = extractvalue { {}*, i64 } %54, 1
  %cond113 = icmp eq i64 %.elt122, 0
  %55 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342360.0 = select i1 %cond113, {}* %55, {}* %.elt120
  %56 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 24), align 16
  %57 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 376), align 16
  %ptrtoint75 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint76 = add i64 %ptrtoint75, 7
  %entry-point-addr77 = inttoptr i64 %entry-point-addr-uint76 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point78 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr77, align 8
  %58 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point78({}* %19, i64 7, {}* %farg0, {}* %45, {}* %farg0, {}* %46, {}* %G342360.0, {}* %56, {}* %57)
          to label %tag3 unwind label %cleanup-lpad

normal-dest87:                                    ; preds = %tag3
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %60 = icmp eq {}* %21, %59
  br i1 %60, label %tag4, label %tag1

normal-dest89:                                    ; preds = %tag4
  %ptrtoint90 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint91 = add i64 %ptrtoint90, 7
  %entry-point-addr92 = inttoptr i64 %entry-point-addr-uint91 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point93 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr92, align 8
  %61 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point93({}* %23, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest96 unwind label %cleanup-lpad

normal-dest96:                                    ; preds = %normal-dest89
  %.elt140 = extractvalue { {}*, i64 } %61, 0
  %.elt142 = extractvalue { {}*, i64 } %61, 1
  %cond116 = icmp eq i64 %.elt142, 0
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342329.0 = select i1 %cond116, {}* %62, {}* %.elt140
  %63 = icmp eq {}* %G342329.0, %62
  br i1 %63, label %tag, label %tag5

normal-dest103:                                   ; preds = %tag5
  %ptrtoint104 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint105 = add i64 %ptrtoint104, 7
  %entry-point-addr106 = inttoptr i64 %entry-point-addr-uint105 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point107 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr106, align 8
  %64 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point107({}* %25, i64 2, {}* %farg0, {}* %farg1, {}* null, {}* null)
          to label %normal-dest110 unwind label %cleanup-lpad

normal-dest110:                                   ; preds = %normal-dest103
  %.elt144 = extractvalue { {}*, i64 } %64, 0
  %.elt146 = extractvalue { {}*, i64 } %64, 1
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^473^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !95 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^473^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest76, %normal-dest54, %header-check-br
  %G342396.0 = phi {}* [ %18, %header-check-br ], [ %G342396.1, %normal-dest54 ], [ %G342396.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 497), align 8
  %ptrtoint13 = ptrtoint {}* %G342396.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G342396.0, i64 2, {}* %"closure->KONSISTENZ_TEST_OBJEKTE_2", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br59
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest47, %maybe-more-tests67, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag1, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 497), align 8
  %"closure->KONSISTENZ_TEST_OBJEKTE_2" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"KONSISTENZ_TEST_OBJEKTE_2^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KONSISTENZ_TEST_OBJEKTE_2^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 18624, i64 473, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br59

normal-dest16:                                    ; preds = %tag1
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->KONSISTENZ_TEST_OBJEKTE_2", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 499), align 8
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->KONSISTENZ_TEST_OBJEKTE_2", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 1912 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 497), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %maybe-more-tests67
  %ptrtoint48 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %37, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt101 = extractvalue { {}*, i64 } %33, 0
  %.elt103 = extractvalue { {}*, i64 } %33, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342396.1 = select i1 %cond82, {}* %34, {}* %.elt101
  br label %tag1

header-check-br59:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %35 = icmp ult i64 %.off106, 5
  br i1 %35, label %maybe-more-tests67, label %tag4

maybe-more-tests67:                               ; preds = %header-check-br59
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 496), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342396.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag1
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"KONSISTENZ_TEST_OBJEKTE_2^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !96 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"KONSISTENZ_TEST_OBJEKTE_2^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag1:                                             ; preds = %tag41
  %11 = add i64 %47, -3
  %12 = inttoptr i64 %11 to {}**
  %13 = load {}*, {}** %12, align 8
  br label %tag31

tag2:                                             ; preds = %normal-dest65, %tag9
  %B.0 = phi {}* [ %23, %tag9 ], [ %B.1, %normal-dest65 ]
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 465), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest46 unwind label %cleanup-lpad.loopexit

tag3:                                             ; preds = %tag21, %tag38.backedge, %normal-dest
  %16 = phi {}* [ %49, %normal-dest ], [ %.val212, %tag21 ], [ %27, %tag38.backedge ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %17 = insertvalue { {}*, i64 } undef, {}* %16, 0
  %18 = insertvalue { {}*, i64 } %17, i64 1, 1
  ret { {}*, i64 } %18

tag5:                                             ; preds = %tag19
  %19 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %20 = invoke {}* @cc_safe_fdefinition({}* %19)
          to label %normal-dest57 unwind label %cleanup-lpad.loopexit

tag9:                                             ; preds = %tag19
  %21 = add i64 %29, -3
  %22 = inttoptr i64 %21 to {}**
  %23 = load {}*, {}** %22, align 8
  br label %tag2

tag13:                                            ; preds = %tag26
  %24 = add i64 %47, 5
  %25 = inttoptr i64 %24 to {}**
  %26 = load {}*, {}** %25, align 8
  br label %tag38.backedge

tag38.backedge:                                   ; preds = %tag13, %normal-dest139
  %27 = phi {}* [ %.val212, %tag13 ], [ %75, %normal-dest139 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %26, %tag13 ], [ %"%DOLIST-VAR.1", %normal-dest139 ]
  %28 = icmp eq {}* %"%DOLIST-VAR.0.be", %27
  br i1 %28, label %tag3, label %tag41

tag19:                                            ; preds = %tag19.preheader, %tag6.backedge
  %.val208 = phi {}* [ %65, %tag6.backedge ], [ %68, %tag19.preheader ]
  %"%DOLIST-VAR52.0217" = phi {}* [ %"%DOLIST-VAR52.0.be", %tag6.backedge ], [ %"%DOLIST-VAR52.2", %tag19.preheader ]
  %29 = ptrtoint {}* %"%DOLIST-VAR52.0217" to i64
  %tag-only80173 = and i64 %29, 7
  %consp-test81 = icmp eq i64 %tag-only80173, 3
  %.val207 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342472.0 = select i1 %consp-test81, {}* %.val207, {}* %.val208
  %30 = icmp eq {}* %G342472.0, %.val208
  br i1 %30, label %tag5, label %tag9

tag20:                                            ; preds = %tag30
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest83 unwind label %cleanup-lpad.loopexit

tag21:                                            ; preds = %tag26
  %33 = icmp eq {}* %"%DOLIST-VAR.0218", %.val212
  %.val211 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342427.0 = select i1 %33, {}* %.val211, {}* %.val212
  %34 = icmp eq {}* %G342427.0, %.val212
  br i1 %34, label %tag36, label %tag3

tag23:                                            ; preds = %normal-dest49
  %35 = add i64 %29, 5
  %36 = inttoptr i64 %35 to {}**
  %37 = load {}*, {}** %36, align 8
  %.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag6.backedge

tag26:                                            ; preds = %tag30, %tag6.backedge, %normal-dest125
  %.val212 = phi {}* [ %68, %normal-dest125 ], [ %65, %tag6.backedge ], [ %38, %tag30 ]
  br i1 %consp-test165, label %tag13, label %tag21

tag30:                                            ; preds = %normal-dest49
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %39 = icmp eq {}* %"%DOLIST-VAR52.0217", %38
  %.val209 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342446.0 = select i1 %39, {}* %.val209, {}* %38
  %40 = icmp eq {}* %G342446.0, %38
  br i1 %40, label %tag20, label %tag26

tag31:                                            ; preds = %normal-dest153, %tag1
  %K.0 = phi {}* [ %13, %tag1 ], [ %K.1, %normal-dest153 ]
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest118 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag36:                                            ; preds = %tag21
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %44 = invoke {}* @cc_safe_fdefinition({}* %43)
          to label %normal-dest132 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag40:                                            ; preds = %tag41
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %46 = invoke {}* @cc_safe_fdefinition({}* %45)
          to label %normal-dest146 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

tag41:                                            ; preds = %tag41.preheader, %tag38.backedge
  %.val206 = phi {}* [ %27, %tag38.backedge ], [ %50, %tag41.preheader ]
  %"%DOLIST-VAR.0218" = phi {}* [ %"%DOLIST-VAR.0.be", %tag38.backedge ], [ %49, %tag41.preheader ]
  %47 = ptrtoint {}* %"%DOLIST-VAR.0218" to i64
  %tag-only164170 = and i64 %47, 7
  %consp-test165 = icmp eq i64 %tag-only164170, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342495.0 = select i1 %consp-test165, {}* %.val, {}* %.val206
  %48 = icmp eq {}* %G342495.0, %.val206
  br i1 %48, label %tag40, label %tag1

cleanup-lpad.loopexit:                            ; preds = %tag2, %normal-dest46, %tag5, %normal-dest57, %tag20, %normal-dest83
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit:          ; preds = %normal-dest146, %tag40, %normal-dest132, %tag36, %normal-dest118, %tag31
  %lpad.loopexit213 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10
  %lpad.loopexit.split-lp214 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit213, %cleanup-lpad.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp214, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 495), align 8
  %50 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %51 = icmp eq {}* %49, %50
  br i1 %51, label %tag3, label %tag41.preheader

tag41.preheader:                                  ; preds = %normal-dest
  br label %tag41

normal-dest46:                                    ; preds = %tag2
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %52 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 1, {}* %B.0, {}* null, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad.loopexit

normal-dest49:                                    ; preds = %normal-dest46
  br i1 %consp-test81, label %tag23, label %tag30

normal-dest57:                                    ; preds = %tag5
  %53 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %55 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %56 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint59 = ptrtoint {}* %20 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %57 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %20, i64 5, {}* %53, {}* %54, {}* %"%DOLIST-VAR52.0217", {}* %55, {}* %56)
          to label %normal-dest65 unwind label %cleanup-lpad.loopexit

normal-dest65:                                    ; preds = %normal-dest57
  %.elt184 = extractvalue { {}*, i64 } %57, 0
  %.elt186 = extractvalue { {}*, i64 } %57, 1
  %cond167 = icmp eq i64 %.elt186, 0
  %58 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %B.1 = select i1 %cond167, {}* %58, {}* %.elt184
  br label %tag2

normal-dest83:                                    ; preds = %tag20
  %59 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %60 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %61 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %62 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint84 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint85 = add i64 %ptrtoint84, 7
  %entry-point-addr86 = inttoptr i64 %entry-point-addr-uint85 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point87 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr86, align 8
  %63 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point87({}* %32, i64 5, {}* %59, {}* %60, {}* %"%DOLIST-VAR52.0217", {}* %61, {}* %62)
          to label %normal-dest90 unwind label %cleanup-lpad.loopexit

normal-dest90:                                    ; preds = %normal-dest83
  %.elt180 = extractvalue { {}*, i64 } %63, 0
  %.elt182 = extractvalue { {}*, i64 } %63, 1
  %cond166 = icmp eq i64 %.elt182, 0
  %64 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR52.1" = select i1 %cond166, {}* %64, {}* %.elt180
  br label %tag6.backedge

tag6.backedge:                                    ; preds = %normal-dest90, %tag23
  %65 = phi {}* [ %.pre, %tag23 ], [ %64, %normal-dest90 ]
  %"%DOLIST-VAR52.0.be" = phi {}* [ %37, %tag23 ], [ %"%DOLIST-VAR52.1", %normal-dest90 ]
  %66 = icmp eq {}* %"%DOLIST-VAR52.0.be", %65
  br i1 %66, label %tag26, label %tag19

normal-dest118:                                   ; preds = %tag31
  %ptrtoint119 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint120 = add i64 %ptrtoint119, 7
  %entry-point-addr121 = inttoptr i64 %entry-point-addr-uint120 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point122 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr121, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point122({}* %42, i64 1, {}* %K.0, {}* null, {}* null, {}* null)
          to label %normal-dest125 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest125:                                   ; preds = %normal-dest118
  %.elt = extractvalue { {}*, i64 } %67, 0
  %.elt172 = extractvalue { {}*, i64 } %67, 1
  %cond = icmp eq i64 %.elt172, 0
  %68 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR52.2" = select i1 %cond, {}* %68, {}* %.elt
  %69 = icmp eq {}* %"%DOLIST-VAR52.2", %68
  br i1 %69, label %tag26, label %tag19.preheader

tag19.preheader:                                  ; preds = %normal-dest125
  br label %tag19

normal-dest132:                                   ; preds = %tag36
  %70 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %71 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %72 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint133 = ptrtoint {}* %44 to i64
  %entry-point-addr-uint134 = add i64 %ptrtoint133, 7
  %entry-point-addr135 = inttoptr i64 %entry-point-addr-uint134 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point136 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr135, align 8
  %74 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point136({}* %44, i64 5, {}* %70, {}* %71, {}* %"%DOLIST-VAR.0218", {}* %72, {}* %73)
          to label %normal-dest139 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest139:                                   ; preds = %normal-dest132
  %.elt189 = extractvalue { {}*, i64 } %74, 0
  %.elt191 = extractvalue { {}*, i64 } %74, 1
  %cond168 = icmp eq i64 %.elt191, 0
  %75 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond168, {}* %75, {}* %.elt189
  br label %tag38.backedge

normal-dest146:                                   ; preds = %tag40
  %76 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %77 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %78 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %79 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint147 = ptrtoint {}* %46 to i64
  %entry-point-addr-uint148 = add i64 %ptrtoint147, 7
  %entry-point-addr149 = inttoptr i64 %entry-point-addr-uint148 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point150 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr149, align 8
  %80 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point150({}* %46, i64 5, {}* %76, {}* %77, {}* %"%DOLIST-VAR.0218", {}* %78, {}* %79)
          to label %normal-dest153 unwind label %cleanup-lpad.loopexit.split-lp.loopexit

normal-dest153:                                   ; preds = %normal-dest146
  %.elt193 = extractvalue { {}*, i64 } %80, 0
  %.elt195 = extractvalue { {}*, i64 } %80, 1
  %cond169 = icmp eq i64 %.elt195, 0
  %81 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %K.1 = select i1 %cond169, {}* %81, {}* %.elt193
  br label %tag31
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^487^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !97 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^487^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G342516.0 = phi {}* [ %18, %header-check-br ], [ %G342516.1, %normal-dest26 ], [ %G342516.2, %normal-dest76 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 501), align 8
  %ptrtoint29 = ptrtoint {}* %G342516.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G342516.0, i64 2, {}* %"closure->SCH=HARDCOREBERECHNE", {}* %11, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest10, %header-check-br13
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest69 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %tag4, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag2, %normal-dest22, %maybe-more-tests21, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 501), align 8
  %"closure->SCH=HARDCOREBERECHNE" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 18839, i64 487, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag4

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag2, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag4

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %maybe-more-tests21
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt101 = extractvalue { {}*, i64 } %24, 0
  %.elt103 = extractvalue { {}*, i64 } %24, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342516.1 = select i1 %cond82, {}* %25, {}* %.elt101
  br label %tag2

normal-dest35:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 503), align 8
  %ptrtoint42 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %29 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %27, i64 2, {}* %"closure->SCH=HARDCOREBERECHNE", {}* %28, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 506), align 16
  %ptrtoint55 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %31, i64 2, {}* %"closure->SCH=HARDCOREBERECHNE", {}* %32, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %34, {}* inttoptr (i64 1948 to {}*))
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 501), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %36 = insertvalue { {}*, i64 } undef, {}* %35, 0
  %37 = insertvalue { {}*, i64 } %36, i64 1, 1
  ret { {}*, i64 } %37

normal-dest69:                                    ; preds = %tag4
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 500), align 16
  %ptrtoint70 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %14, i64 5, {}* %38, {}* %39, {}* %18, {}* %40, {}* %41)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt = extractvalue { {}*, i64 } %42, 0
  %.elt84 = extractvalue { {}*, i64 } %42, 1
  %cond = icmp eq i64 %.elt84, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342516.2 = select i1 %cond, {}* %43, {}* %.elt
  br label %tag2
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !98 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc51 unwind label %cleanup-lpad

.noexc51:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest24, %normal-dest15, %normal-dest12, %normal-dest10, %normal-dest8, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = invoke {}* @cc_makeCell()
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  call void @cc_writeCell({}* %12, {}* %farg0)
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 200), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %15 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 338), align 16
  %16 = invoke {}* @cc_safe_fdefinition({}* %15)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest6
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 311), align 8
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %17, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.3", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.3^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 18839, i64 487, i64 0, i64 1, {}* %12)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest8
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest10
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %20, {}* null, {}* null, {}* null)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest12
  %.elt = extractvalue { {}*, i64 } %21, 0
  %.elt39 = extractvalue { {}*, i64 } %21, 1
  %cond = icmp eq i64 %.elt39, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342538.0 = select i1 %cond, {}* %22, {}* %.elt
  %ptrtoint18 = ptrtoint {}* %16 to i64
  %entry-point-addr-uint19 = add i64 %ptrtoint18, 7
  %entry-point-addr20 = inttoptr i64 %entry-point-addr-uint19 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point21 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr20, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point21({}* %16, i64 2, {}* %"closure->LAMBDA", {}* %G342538.0, {}* null, {}* null)
          to label %normal-dest24 unwind label %cleanup-lpad

normal-dest24:                                    ; preds = %normal-dest15
  %.elt41 = extractvalue { {}*, i64 } %23, 0
  %.elt43 = extractvalue { {}*, i64 } %23, 1
  %cond37 = icmp eq i64 %.elt43, 0
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342535.0 = select i1 %cond37, {}* %24, {}* %.elt41
  %ptrtoint30 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint31 = add i64 %ptrtoint30, 7
  %entry-point-addr32 = inttoptr i64 %entry-point-addr-uint31 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point33 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr32, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point33({}* %14, i64 1, {}* %G342535.0, {}* null, {}* null, {}* null)
          to label %normal-dest36 unwind label %cleanup-lpad

normal-dest36:                                    ; preds = %normal-dest24
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %25
}

declare {}* @cc_makeCell() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @cc_writeCell({}*, {}*) local_unnamed_addr #1

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.3"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !99 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.3^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.3^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !100
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %20 = add i64 %17, -3
  %21 = inttoptr i64 %20 to {}**
  %22 = load {}*, {}** %21, align 8, !tbaa !100
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 2, {}* %22, {}* %farg0, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %23
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^493^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !102 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^493^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G342573.0 = phi {}* [ %18, %header-check-br ], [ %G342573.1, %normal-dest17 ], [ %G342573.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 516), align 16
  %ptrtoint43 = ptrtoint {}* %G342573.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G342573.0, i64 2, {}* %"closure->SCH=ALLE_LEHRER_TAGE_TEST", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %maybe-more-tests28, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 516), align 16
  %"closure->SCH=ALLE_LEHRER_TAGE_TEST" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=ALLE_LEHRER_TAGE_TEST^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=ALLE_LEHRER_TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 19005, i64 493, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 515), align 8
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt84 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt84, 0
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342573.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %27 = icmp ult i64 %.off106, 5
  br i1 %27, label %maybe-more-tests28, label %tag

maybe-more-tests28:                               ; preds = %header-check-br20
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %maybe-more-tests28
  %ptrtoint31 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %29, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt101 = extractvalue { {}*, i64 } %30, 0
  %.elt103 = extractvalue { {}*, i64 } %30, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342573.2 = select i1 %cond82, {}* %31, {}* %.elt101
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=ALLE_LEHRER_TAGE_TEST", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 518), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=ALLE_LEHRER_TAGE_TEST", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 1972 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 516), align 16
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=ALLE_LEHRER_TAGE_TEST^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !103 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=ALLE_LEHRER_TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %tag3
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest80 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag3:                                             ; preds = %tag4
  %13 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %15, i64 4)
  %result = extractvalue { i64, i1 } %13, 0
  %overflow = extractvalue { i64, i1 } %13, 1
  %14 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag2, label %tag18.outer.backedge

tag18.outer.backedge:                             ; preds = %tag3, %normal-dest87, %normal-dest110
  %LENGTH.0.ph.be = phi {}* [ %LENGTH.2, %normal-dest110 ], [ %LENGTH.1, %normal-dest87 ], [ %14, %tag3 ]
  br label %tag18.outer

tag4:                                             ; preds = %tag59
  %15 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only93317 = and i64 %15, 3
  %fixnump-test94 = icmp eq i64 %fixnum-tag-only93317, 0
  br i1 %fixnump-test94, label %tag3, label %tag8

tag5:                                             ; preds = %normal-dest76
  %test = icmp eq i64 %tag-only314, 1
  br i1 %test, label %header-check-br, label %tag57

tag8:                                             ; preds = %tag4
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 70), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest103 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

tag9:                                             ; preds = %normal-dest262, %tag32
  %L.0 = phi {}* [ %45, %tag32 ], [ %L.1, %normal-dest262 ]
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 511), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest117 unwind label %cleanup-lpad.loopexit

tag18:                                            ; preds = %normal-dest194, %tag18.outer
  br i1 %consp-test156, label %tag46, label %tag23

tag19:                                            ; preds = %tag43
  %20 = add i64 %70, 7
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %"tag fixnum" = shl nuw i64 %22, 2
  %23 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag26

tag20:                                            ; preds = %tag33
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest158 unwind label %cleanup-lpad.loopexit

tag22:                                            ; preds = %tag43
  %26 = icmp eq {}* %.in, %.val389
  %.val388 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342646.0 = select i1 %26, {}* %.val388, {}* %.val389
  %27 = icmp eq {}* %G342646.0, %.val389
  br i1 %27, label %tag31, label %tag26

tag23:                                            ; preds = %tag18
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %29 = icmp eq {}* %SEQUENCE.0.ph, %28
  %.val378 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342699.0 = select i1 %29, {}* %.val378, {}* %28
  %30 = icmp eq {}* %G342699.0, %28
  br i1 %30, label %tag36, label %tag59

tag26:                                            ; preds = %tag47, %normal-dest214, %tag22, %tag19
  %G342555.0 = phi {}* [ %23, %tag19 ], [ null, %tag22 ], [ %G342555.1, %normal-dest214 ], [ %LENGTH.0.ph, %tag47 ]
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest178 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag28:                                            ; preds = %normal-dest137
  %33 = add i64 %51, 5
  %34 = inttoptr i64 %33 to {}**
  %35 = load {}*, {}** %34, align 8
  %.pre404 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag34.backedge

tag29:                                            ; preds = %tag33, %tag34.backedge, %normal-dest185
  %36 = phi {}* [ %92, %normal-dest185 ], [ %88, %tag34.backedge ], [ %46, %tag33 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %37 = insertvalue { {}*, i64 } undef, {}* %36, 0
  %38 = insertvalue { {}*, i64 } %37, i64 1, 1
  ret { {}*, i64 } %38

tag30:                                            ; preds = %tag47
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest194 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag31:                                            ; preds = %tag22
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %42 = invoke {}* @cc_safe_fdefinition({}* %41)
          to label %normal-dest207 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

tag32:                                            ; preds = %tag39
  %43 = add i64 %51, -3
  %44 = inttoptr i64 %43 to {}**
  %45 = load {}*, {}** %44, align 8
  br label %tag9

tag33:                                            ; preds = %normal-dest137
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %47 = icmp eq {}* %"%DOLIST-VAR.0399", %46
  %.val386 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342604.0 = select i1 %47, {}* %.val386, {}* %46
  %48 = icmp eq {}* %G342604.0, %46
  br i1 %48, label %tag20, label %tag29

tag36:                                            ; preds = %tag23
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %50 = invoke {}* @cc_safe_fdefinition({}* %49)
          to label %normal-dest227 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

tag39:                                            ; preds = %tag39.preheader, %tag34.backedge
  %.val385 = phi {}* [ %88, %tag34.backedge ], [ %92, %tag39.preheader ]
  %"%DOLIST-VAR.0399" = phi {}* [ %"%DOLIST-VAR.0.be", %tag34.backedge ], [ %"%DOLIST-VAR.2", %tag39.preheader ]
  %51 = ptrtoint {}* %"%DOLIST-VAR.0399" to i64
  %tag-only245330 = and i64 %51, 7
  %consp-test246 = icmp eq i64 %tag-only245330, 3
  %.val384 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342634.0 = select i1 %consp-test246, {}* %.val384, {}* %.val385
  %52 = icmp eq {}* %G342634.0, %.val385
  br i1 %52, label %tag51, label %tag32

tag43:                                            ; preds = %header-check-br, %normal-dest297, %tag57
  %.val389 = phi {}* [ %.pre, %tag57 ], [ %115, %normal-dest297 ], [ %68, %header-check-br ]
  %G342650.0.in = phi {}** [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), %tag57 ], [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), %normal-dest297 ], [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), %header-check-br ]
  %G342650.0 = load {}*, {}** %G342650.0.in, align 8
  %53 = icmp eq {}* %G342650.0, %.val389
  br i1 %53, label %tag22, label %tag19

tag18.outer:                                      ; preds = %tag18.outer.backedge, %tag18.outer.preheader
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag18.outer.preheader ], [ %LENGTH.0.ph.be, %tag18.outer.backedge ]
  %SEQUENCE.0.ph = phi {}* [ %.in, %tag18.outer.preheader ], [ %G2095854.0, %tag18.outer.backedge ]
  %54 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only155315 = and i64 %54, 7
  %consp-test156 = icmp eq i64 %tag-only155315, 3
  %55 = add i64 %54, 5
  %56 = inttoptr i64 %55 to {}**
  br label %tag18

tag46:                                            ; preds = %tag18
  %57 = load {}*, {}** %56, align 8
  %.val381.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag59

tag47:                                            ; preds = %tag59
  %58 = icmp eq {}* %G2095854.0, %.val383
  %G342658.0 = select i1 %58, {}* %.val380, {}* %.val383
  %59 = icmp eq {}* %G342658.0, %.val383
  br i1 %59, label %tag30, label %tag26

tag51:                                            ; preds = %tag39
  %60 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %61 = invoke {}* @cc_safe_fdefinition({}* %60)
          to label %normal-dest255 unwind label %cleanup-lpad.loopexit

tag57:                                            ; preds = %tag5, %normal-dest297, %header-check-br273
  %.pre = phi {}* [ %68, %tag5 ], [ %115, %normal-dest297 ], [ %68, %header-check-br273 ]
  br label %tag43

tag59:                                            ; preds = %tag23, %normal-dest234, %tag46
  %.val383 = phi {}* [ %.val381.pre, %tag46 ], [ %104, %normal-dest234 ], [ %28, %tag23 ]
  %G2095854.0 = phi {}* [ %57, %tag46 ], [ %G2095854.1, %normal-dest234 ], [ %28, %tag23 ]
  %62 = ptrtoint {}* %G2095854.0 to i64
  %tag-only271316 = and i64 %62, 7
  %consp-test272 = icmp eq i64 %tag-only271316, 3
  %.val380 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342687.0 = select i1 %consp-test272, {}* %.val380, {}* %.val383
  %63 = icmp eq {}* %G342687.0, %.val383
  br i1 %63, label %tag47, label %tag4

cleanup-lpad.loopexit:                            ; preds = %tag9, %normal-dest117, %normal-dest124, %normal-dest130, %tag20, %normal-dest158, %tag51, %normal-dest255
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit: ; preds = %tag30, %normal-dest194, %tag36, %normal-dest227
  %lpad.loopexit394 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %tag2, %normal-dest80, %tag8, %normal-dest103
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp.loopexit.split-lp: ; preds = %10, %normal-dest290, %maybe-more-tests281, %normal-dest207, %tag31, %normal-dest178, %tag26, %normal-dest73, %normal-dest
  %lpad.loopexit.split-lp392 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.split-lp.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit, %cleanup-lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %cleanup-lpad.loopexit ], [ %lpad.loopexit.split-lp392, %cleanup-lpad.loopexit.split-lp.loopexit.split-lp ], [ %lpad.loopexit394, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit ], [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %entry
  %64 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %65 = invoke {}* @cc_safe_fdefinition({}* %64)
          to label %normal-dest73 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest73:                                    ; preds = %normal-dest
  %66 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 398), align 16
  %ptrtoint = ptrtoint {}* %65 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %67 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %65, i64 1, {}* %66, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest76:                                    ; preds = %normal-dest73
  %.elt = extractvalue { {}*, i64 } %67, 0
  %.elt313 = extractvalue { {}*, i64 } %67, 1
  %cond = icmp eq i64 %.elt313, 0
  %68 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in = select i1 %cond, {}* %68, {}* %.elt
  %69 = bitcast {}* %.in to i8*
  %70 = ptrtoint {}* %.in to i64
  %tag-only314 = and i64 %70, 7
  %consp-test = icmp eq i64 %tag-only314, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342706.0 = select i1 %consp-test, {}* %.val, {}* %68
  %71 = icmp eq {}* %G342706.0, %68
  br i1 %71, label %tag5, label %tag18.outer.preheader

tag18.outer.preheader:                            ; preds = %normal-dest76
  br label %tag18.outer

normal-dest80:                                    ; preds = %tag2
  %ptrtoint81 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint82 = add i64 %ptrtoint81, 7
  %entry-point-addr83 = inttoptr i64 %entry-point-addr-uint82 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point84 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr83, align 8
  %72 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point84({}* %12, i64 1, {}* %14, {}* null, {}* null, {}* null)
          to label %normal-dest87 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest87:                                    ; preds = %normal-dest80
  %.elt323 = extractvalue { {}*, i64 } %72, 0
  %.elt325 = extractvalue { {}*, i64 } %72, 1
  %cond305 = icmp eq i64 %.elt325, 0
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.1 = select i1 %cond305, {}* %73, {}* %.elt323
  br label %tag18.outer.backedge

header-check-br:                                  ; preds = %tag5
  %gep = getelementptr inbounds i8, i8* %69, i64 -9
  %irc-bit-cast98 = bitcast i8* %gep to i64*
  %74 = load i64, i64* %irc-bit-cast98, align 8
  %.off = add i64 %74, -1081
  %75 = icmp ult i64 %.off, 69
  br i1 %75, label %tag43, label %header-check-br273

normal-dest103:                                   ; preds = %tag8
  %ptrtoint104 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint105 = add i64 %ptrtoint104, 7
  %entry-point-addr106 = inttoptr i64 %entry-point-addr-uint105 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point107 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr106, align 8
  %76 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point107({}* %17, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest110 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit.split-lp

normal-dest110:                                   ; preds = %normal-dest103
  %.elt319 = extractvalue { {}*, i64 } %76, 0
  %.elt321 = extractvalue { {}*, i64 } %76, 1
  %cond304 = icmp eq i64 %.elt321, 0
  %77 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.2 = select i1 %cond304, {}* %77, {}* %.elt319
  br label %tag18.outer.backedge

normal-dest117:                                   ; preds = %tag9
  %ptrtoint118 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint119 = add i64 %ptrtoint118, 7
  %entry-point-addr120 = inttoptr i64 %entry-point-addr-uint119 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point121 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr120, align 8
  %78 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point121({}* %19, i64 1, {}* %L.0, {}* null, {}* null, {}* null)
          to label %normal-dest124 unwind label %cleanup-lpad.loopexit

normal-dest124:                                   ; preds = %normal-dest117
  %79 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 513), align 8
  %80 = invoke {}* @cc_safe_fdefinition({}* %79)
          to label %normal-dest130 unwind label %cleanup-lpad.loopexit

normal-dest130:                                   ; preds = %normal-dest124
  %ptrtoint131 = ptrtoint {}* %80 to i64
  %entry-point-addr-uint132 = add i64 %ptrtoint131, 7
  %entry-point-addr133 = inttoptr i64 %entry-point-addr-uint132 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point134 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr133, align 8
  %81 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point134({}* %80, i64 2, {}* %L.0, {}* %G342555.0, {}* null, {}* null)
          to label %normal-dest137 unwind label %cleanup-lpad.loopexit

normal-dest137:                                   ; preds = %normal-dest130
  br i1 %consp-test246, label %tag28, label %tag33

normal-dest158:                                   ; preds = %tag20
  %82 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %83 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %84 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %85 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint159 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint160 = add i64 %ptrtoint159, 7
  %entry-point-addr161 = inttoptr i64 %entry-point-addr-uint160 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point162 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr161, align 8
  %86 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point162({}* %25, i64 5, {}* %82, {}* %83, {}* %"%DOLIST-VAR.0399", {}* %84, {}* %85)
          to label %normal-dest165 unwind label %cleanup-lpad.loopexit

normal-dest165:                                   ; preds = %normal-dest158
  %.elt341 = extractvalue { {}*, i64 } %86, 0
  %.elt343 = extractvalue { {}*, i64 } %86, 1
  %cond307 = icmp eq i64 %.elt343, 0
  %87 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.1" = select i1 %cond307, {}* %87, {}* %.elt341
  br label %tag34.backedge

tag34.backedge:                                   ; preds = %normal-dest165, %tag28
  %88 = phi {}* [ %.pre404, %tag28 ], [ %87, %normal-dest165 ]
  %"%DOLIST-VAR.0.be" = phi {}* [ %35, %tag28 ], [ %"%DOLIST-VAR.1", %normal-dest165 ]
  %89 = icmp eq {}* %"%DOLIST-VAR.0.be", %88
  br i1 %89, label %tag29, label %tag39

normal-dest178:                                   ; preds = %tag26
  %90 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %ptrtoint179 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint180 = add i64 %ptrtoint179, 7
  %entry-point-addr181 = inttoptr i64 %entry-point-addr-uint180 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point182 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr181, align 8
  %91 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point182({}* %32, i64 1, {}* %90, {}* null, {}* null, {}* null)
          to label %normal-dest185 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest185:                                   ; preds = %normal-dest178
  %.elt327 = extractvalue { {}*, i64 } %91, 0
  %.elt329 = extractvalue { {}*, i64 } %91, 1
  %cond306 = icmp eq i64 %.elt329, 0
  %92 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %"%DOLIST-VAR.2" = select i1 %cond306, {}* %92, {}* %.elt327
  %93 = icmp eq {}* %"%DOLIST-VAR.2", %92
  br i1 %93, label %tag29, label %tag39.preheader

tag39.preheader:                                  ; preds = %normal-dest185
  br label %tag39

normal-dest194:                                   ; preds = %tag30
  %94 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 510), align 16
  %ptrtoint195 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint196 = add i64 %ptrtoint195, 7
  %entry-point-addr197 = inttoptr i64 %entry-point-addr-uint196 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point198 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr197, align 8
  %95 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point198({}* %40, i64 2, {}* %G2095854.0, {}* %94, {}* null, {}* null)
          to label %tag18 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest207:                                   ; preds = %tag31
  %96 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 509), align 8
  %ptrtoint208 = ptrtoint {}* %42 to i64
  %entry-point-addr-uint209 = add i64 %ptrtoint208, 7
  %entry-point-addr210 = inttoptr i64 %entry-point-addr-uint209 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point211 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr210, align 8
  %97 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point211({}* %42, i64 2, {}* %.in, {}* %96, {}* null, {}* null)
          to label %normal-dest214 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest214:                                   ; preds = %normal-dest207
  %.elt360 = extractvalue { {}*, i64 } %97, 0
  %.elt362 = extractvalue { {}*, i64 } %97, 1
  %cond310 = icmp eq i64 %.elt362, 0
  %98 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342555.1 = select i1 %cond310, {}* %98, {}* %.elt360
  br label %tag26

normal-dest227:                                   ; preds = %tag36
  %99 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %100 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %101 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint228 = ptrtoint {}* %50 to i64
  %entry-point-addr-uint229 = add i64 %ptrtoint228, 7
  %entry-point-addr230 = inttoptr i64 %entry-point-addr-uint229 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point231 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr230, align 8
  %103 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point231({}* %50, i64 5, {}* %99, {}* %100, {}* %SEQUENCE.0.ph, {}* %101, {}* %102)
          to label %normal-dest234 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.loopexit

normal-dest234:                                   ; preds = %normal-dest227
  %.elt356 = extractvalue { {}*, i64 } %103, 0
  %.elt358 = extractvalue { {}*, i64 } %103, 1
  %cond309 = icmp eq i64 %.elt358, 0
  %104 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G2095854.1 = select i1 %cond309, {}* %104, {}* %.elt356
  br label %tag59

normal-dest255:                                   ; preds = %tag51
  %105 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %106 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %107 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %108 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint256 = ptrtoint {}* %61 to i64
  %entry-point-addr-uint257 = add i64 %ptrtoint256, 7
  %entry-point-addr258 = inttoptr i64 %entry-point-addr-uint257 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point259 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr258, align 8
  %109 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point259({}* %61, i64 5, {}* %105, {}* %106, {}* %"%DOLIST-VAR.0399", {}* %107, {}* %108)
          to label %normal-dest262 unwind label %cleanup-lpad.loopexit

normal-dest262:                                   ; preds = %normal-dest255
  %.elt345 = extractvalue { {}*, i64 } %109, 0
  %.elt347 = extractvalue { {}*, i64 } %109, 1
  %cond308 = icmp eq i64 %.elt347, 0
  %110 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %L.1 = select i1 %cond308, {}* %110, {}* %.elt345
  br label %tag9

header-check-br273:                               ; preds = %header-check-br
  %.off390 = add i64 %74, -1153
  %111 = icmp ult i64 %.off390, 149
  br i1 %111, label %maybe-more-tests281, label %tag57

maybe-more-tests281:                              ; preds = %header-check-br273
  %112 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 109), align 8
  %113 = invoke {}* @cc_safe_fdefinition({}* %112)
          to label %normal-dest290 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest290:                                   ; preds = %maybe-more-tests281
  %ptrtoint291 = ptrtoint {}* %113 to i64
  %entry-point-addr-uint292 = add i64 %ptrtoint291, 7
  %entry-point-addr293 = inttoptr i64 %entry-point-addr-uint292 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point294 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr293, align 8
  %114 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point294({}* %113, i64 1, {}* nonnull %.in, {}* null, {}* null, {}* null)
          to label %normal-dest297 unwind label %cleanup-lpad.loopexit.split-lp.loopexit.split-lp

normal-dest297:                                   ; preds = %normal-dest290
  %.elt364 = extractvalue { {}*, i64 } %114, 0
  %.elt366 = extractvalue { {}*, i64 } %114, 1
  %cond311 = icmp eq i64 %.elt366, 0
  %115 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342713.0 = select i1 %cond311, {}* %115, {}* %.elt364
  %116 = icmp eq {}* %G342713.0, inttoptr (i64 4 to {}*)
  br i1 %116, label %tag43, label %tag57
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^499^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !104 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^499^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag4:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G342744.0 = phi {}* [ %18, %header-check-br ], [ %G342744.1, %normal-dest17 ], [ %G342744.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 513), align 8
  %ptrtoint43 = ptrtoint {}* %G342744.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G342744.0, i64 2, {}* %"closure->SCH=ANZAHL_TAGE_TEST", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest81, %normal-dest75, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag4, %normal-dest30, %maybe-more-tests28, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 513), align 8
  %"closure->SCH=ANZAHL_TAGE_TEST" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 19202, i64 499, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag4, label %header-check-br20

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 528), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt97 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt97, 0
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342744.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag4

header-check-br20:                                ; preds = %header-check-br
  %.off123 = add i64 %19, -1001
  %27 = icmp ult i64 %.off123, 5
  br i1 %27, label %maybe-more-tests28, label %tag

maybe-more-tests28:                               ; preds = %header-check-br20
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest30 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %maybe-more-tests28
  %ptrtoint31 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %29, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt118 = extractvalue { {}*, i64 } %30, 0
  %.elt120 = extractvalue { {}*, i64 } %30, 1
  %cond95 = icmp eq i64 %.elt120, 0
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342744.2 = select i1 %cond95, {}* %31, {}* %.elt118
  br label %tag4

normal-dest49:                                    ; preds = %tag4
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 529), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=ANZAHL_TAGE_TEST", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 532), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=ANZAHL_TAGE_TEST", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 271), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest81 unwind label %cleanup-lpad

normal-dest81:                                    ; preds = %normal-dest75
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 513), align 8
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  %44 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 533), align 8
  %ptrtoint82 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint83 = add i64 %ptrtoint82, 7
  %entry-point-addr84 = inttoptr i64 %entry-point-addr-uint83 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point85 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr84, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point85({}* %41, i64 3, {}* %42, {}* %43, {}* %44, {}* null)
          to label %normal-dest88 unwind label %cleanup-lpad

normal-dest88:                                    ; preds = %normal-dest81
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %46, {}* inttoptr (i64 1996 to {}*))
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 513), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %48 = insertvalue { {}*, i64 } undef, {}* %47, 0
  %49 = insertvalue { {}*, i64 } %48, i64 1, 1
  ret { {}*, i64 } %49
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !105 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp ult i64 %nargs, 2
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad.loopexit.split-lp

.noexc:                                           ; preds = %10
  unreachable

; <label>:11:                                     ; preds = %entry
  %12 = icmp eq i64 %nargs, 2
  br i1 %12, label %normal-dest, label %13

; <label>:13:                                     ; preds = %11
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 2, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc637 unwind label %cleanup-lpad.loopexit.split-lp

.noexc637:                                        ; preds = %13
  unreachable

tag:                                              ; preds = %tag38
  %14 = load {}*, {}** %62, align 8
  %.val663.pre = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag32

tag2:                                             ; preds = %header-check-br254
  %15 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest144 unwind label %cleanup-lpad.loopexit.split-lp

tag6:                                             ; preds = %header-check-br238
  %16 = invoke double @from_object_double({}* nonnull %farg1)
          to label %normal-dest155 unwind label %cleanup-lpad.loopexit.split-lp

tag7:                                             ; preds = %tag90
  %17 = ptrtoint {}* %G342722.0 to i64
  %fixnum-tag-only606 = and i64 %17, 3
  %fixnump-test = icmp eq i64 %fixnum-tag-only606, 0
  br i1 %fixnump-test, label %tag22, label %tag58

tag9:                                             ; preds = %tag115, %header-check-br247, %tag88, %tag67, %header-check-br238
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 327), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest169 unwind label %cleanup-lpad.loopexit.split-lp

tag10:                                            ; preds = %header-check-br447, %normal-dest224, %tag62
  %.val671 = phi {}* [ %.pre, %tag62 ], [ %118, %normal-dest224 ], [ %134, %header-check-br447 ]
  %G342828.0.in = phi {}** [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), %tag62 ], [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), %normal-dest224 ], [ getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), %header-check-br447 ]
  %G342828.0 = load {}*, {}** %G342828.0.in, align 8
  %20 = icmp eq {}* %G342828.0, %.val671
  br i1 %20, label %tag108, label %tag91

tag12:                                            ; preds = %tag32
  %21 = ptrtoint {}* %LENGTH.0.ph to i64
  %fixnum-tag-only185575 = and i64 %21, 3
  %fixnump-test186 = icmp eq i64 %fixnum-tag-only185575, 0
  br i1 %fixnump-test186, label %tag74, label %tag79

tag13:                                            ; preds = %tag32
  %22 = icmp eq {}* %G2095854.0, %.val665
  %G342836.0 = select i1 %22, {}* %.val662, {}* %.val665
  %23 = icmp eq {}* %G342836.0, %.val665
  br i1 %23, label %tag103, label %tag94

tag15:                                            ; preds = %normal-dest373, %tag112, %tag81, %tag77, %tag69, %tag57, %tag45
  %object.0 = phi {}* [ %73, %tag81 ], [ %93, %tag112 ], [ %58, %tag69 ], [ %44, %tag45 ], [ %49, %tag57 ], [ %66, %tag77 ], [ %object.1, %normal-dest373 ]
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %25 = icmp eq {}* %object.0, %24
  %.val668 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342767.0 = select i1 %25, {}* %.val668, {}* %24
  %26 = icmp eq {}* %G342767.0, %24
  br i1 %26, label %tag80, label %tag64

tag16:                                            ; preds = %tag66
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest188 unwind label %cleanup-lpad.loopexit.split-lp

tag17:                                            ; preds = %tag106
  %29 = icmp eq i64 %tag-only, 6
  br i1 %29, label %tag71, label %tag34

tag18:                                            ; preds = %tag74
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest202 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag22:                                            ; preds = %tag7
  %32 = icmp eq {}* %G342722.0, %G342723.0
  br i1 %32, label %tag81, label %tag112

tag25:                                            ; preds = %switch.early.test, %switch.early.test, %header-check-br379, %header-check-br, %header-check-br, %tag105
  %33 = ptrtoint {}* %farg1 to i64
  %fixnum-tag-only245563 = and i64 %33, 3
  %fixnump-test246 = icmp eq i64 %fixnum-tag-only245563, 0
  br i1 %fixnump-test246, label %tag95, label %tag106

tag30:                                            ; preds = %tag67
  %34 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %33, i64 %ptrtoint471)
  %result = extractvalue { i64, i1 } %34, 0
  %overflow = extractvalue { i64, i1 } %34, 1
  %35 = inttoptr i64 %result to {}*
  br i1 %overflow, label %tag56, label %tag90

tag31:                                            ; preds = %switch.early.test, %tag105
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest263 unwind label %cleanup-lpad.loopexit.split-lp

tag32:                                            ; preds = %tag107, %normal-dest487, %tag
  %.val665 = phi {}* [ %.val663.pre, %tag ], [ %172, %normal-dest487 ], [ %86, %tag107 ]
  %G2095854.0 = phi {}* [ %14, %tag ], [ %G2095854.1, %normal-dest487 ], [ %86, %tag107 ]
  %38 = ptrtoint {}* %G2095854.0 to i64
  %tag-only264574 = and i64 %38, 7
  %consp-test = icmp eq i64 %tag-only264574, 3
  %.val662 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342865.0 = select i1 %consp-test, {}* %.val662, {}* %.val665
  %39 = icmp eq {}* %G342865.0, %.val665
  br i1 %39, label %tag13, label %tag12

tag34:                                            ; preds = %tag106, %header-check-br340, %tag95, %header-check-br254, %tag17
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 327), align 8
  %41 = invoke {}* @cc_safe_fdefinition({}* %40)
          to label %normal-dest266 unwind label %cleanup-lpad.loopexit.split-lp

tag36:                                            ; preds = %normal-dest403, %normal-dest273, %normal-dest195, %normal-dest145, %tag66
  %G342722.0 = phi {}* [ %57, %tag66 ], [ %107, %normal-dest145 ], [ %G342722.1, %normal-dest195 ], [ %G342722.2, %normal-dest273 ], [ %156, %normal-dest403 ]
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 501), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest283 unwind label %cleanup-lpad.loopexit.split-lp

tag38:                                            ; preds = %normal-dest515, %tag38.outer
  br i1 %consp-test303, label %tag, label %tag107

tag45:                                            ; preds = %normal-dest408
  %44 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag15

tag47:                                            ; preds = %tag94
  %45 = icmp eq i64 %tag-only472, 6
  %fixnum-tag-only445584 = and i64 %ptrtoint471, 3
  %fixnump-test446 = icmp eq i64 %fixnum-tag-only445584, 0
  %or.cond656 = or i1 %45, %fixnump-test446
  br i1 %or.cond656, label %tag89, label %tag111

tag53:                                            ; preds = %tag90
  %trunc667 = trunc i64 %75 to i3
  switch i3 %trunc667, label %tag58 [
    i3 -2, label %tag63
    i3 1, label %header-check-br308
  ]

tag54:                                            ; preds = %tag88
  %46 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest348 unwind label %cleanup-lpad.loopexit.split-lp

tag56:                                            ; preds = %tag30
  %47 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 68), align 16
  %48 = invoke {}* @cc_safe_fdefinition({}* %47)
          to label %normal-dest352 unwind label %cleanup-lpad.loopexit.split-lp

tag57:                                            ; preds = %normal-dest528
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag15

tag58:                                            ; preds = %tag53, %header-check-br507, %tag101, %tag63, %header-check-br308, %tag7
  %50 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 523), align 8
  %51 = invoke {}* @cc_safe_fdefinition({}* %50)
          to label %normal-dest366 unwind label %cleanup-lpad.loopexit.split-lp

tag62:                                            ; preds = %tag87, %header-check-br315, %normal-dest224
  %.pre = phi {}* [ %134, %tag87 ], [ %134, %header-check-br315 ], [ %118, %normal-dest224 ]
  br label %tag10

tag63:                                            ; preds = %tag53
  %52 = ptrtoint {}* %G342722.0 to i64
  %single-float-tag-only386 = and i64 %52, 7
  %53 = icmp eq i64 %single-float-tag-only386, 6
  br i1 %53, label %tag76, label %tag58

tag64:                                            ; preds = %tag15
  %54 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 525), align 8
  %55 = invoke {}* @cc_safe_fdefinition({}* %54)
          to label %normal-dest388 unwind label %cleanup-lpad.loopexit.split-lp

tag66:                                            ; preds = %tag95
  %56 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %33, i64 %ptrtoint140)
  %result398 = extractvalue { i64, i1 } %56, 0
  %overflow399 = extractvalue { i64, i1 } %56, 1
  %57 = inttoptr i64 %result398 to {}*
  br i1 %overflow399, label %tag16, label %tag36

tag67:                                            ; preds = %tag89
  %fixnum-tag-only400607 = and i64 %ptrtoint471, 3
  %fixnump-test401 = icmp eq i64 %fixnum-tag-only400607, 0
  br i1 %fixnump-test401, label %tag30, label %tag9

tag69:                                            ; preds = %normal-dest408
  %58 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag15

tag71:                                            ; preds = %tag17
  %59 = invoke float @from_object_float({}* %farg1)
          to label %normal-dest402 unwind label %cleanup-lpad.loopexit.split-lp

tag38.outer:                                      ; preds = %tag38.outer.backedge, %tag38.outer.preheader
  %SEQUENCE.0.ph = phi {}* [ %.in624, %tag38.outer.preheader ], [ %G2095854.0, %tag38.outer.backedge ]
  %LENGTH.0.ph = phi {}* [ inttoptr (i64 4 to {}*), %tag38.outer.preheader ], [ %LENGTH.0.ph.be, %tag38.outer.backedge ]
  %60 = ptrtoint {}* %SEQUENCE.0.ph to i64
  %tag-only302573 = and i64 %60, 7
  %consp-test303 = icmp eq i64 %tag-only302573, 3
  %61 = add i64 %60, 5
  %62 = inttoptr i64 %61 to {}**
  br label %tag38

tag74:                                            ; preds = %tag12
  %63 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %21, i64 4)
  %result396 = extractvalue { i64, i1 } %63, 0
  %overflow397 = extractvalue { i64, i1 } %63, 1
  %64 = inttoptr i64 %result396 to {}*
  br i1 %overflow397, label %tag18, label %tag38.outer.backedge

tag38.outer.backedge:                             ; preds = %tag74, %normal-dest210, %normal-dest431
  %LENGTH.0.ph.be = phi {}* [ %64, %tag74 ], [ %LENGTH.1, %normal-dest210 ], [ %LENGTH.2, %normal-dest431 ]
  br label %tag38.outer

tag76:                                            ; preds = %tag63
  %65 = invoke float @from_object_float({}* %G342723.0)
          to label %normal-dest407 unwind label %cleanup-lpad.loopexit.split-lp

tag77:                                            ; preds = %normal-dest528
  %66 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag15

tag78:                                            ; preds = %tag108
  %67 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %68 = invoke {}* @cc_safe_fdefinition({}* %67)
          to label %normal-dest410 unwind label %cleanup-lpad.loopexit.split-lp

tag79:                                            ; preds = %tag12
  %69 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 70), align 16
  %70 = invoke {}* @cc_safe_fdefinition({}* %69)
          to label %normal-dest424 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

tag80:                                            ; preds = %tag15, %normal-dest395
  %return-value.sroa.32.0 = phi i64 [ %.elt602, %normal-dest395 ], [ 1, %tag15 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt600, %normal-dest395 ], [ %24, %tag15 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %71 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %72 = insertvalue { {}*, i64 } %71, i64 %return-value.sroa.32.0, 1
  ret { {}*, i64 } %72

tag81:                                            ; preds = %tag22
  %73 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  br label %tag15

tag87:                                            ; preds = %normal-dest290
  %test450 = icmp eq i64 %tag-only296572, 1
  br i1 %test450, label %header-check-br447, label %tag62

tag88:                                            ; preds = %tag115
  %74 = icmp eq i64 %tag-only472, 6
  br i1 %74, label %tag54, label %tag9

tag89:                                            ; preds = %switch.early.test702, %switch.early.test702, %header-check-br493, %header-check-br470, %header-check-br470, %tag47
  br i1 %fixnump-test246, label %tag67, label %tag115

tag90:                                            ; preds = %normal-dest359, %normal-dest349, %normal-dest176, %normal-dest157, %tag30
  %G342723.0 = phi {}* [ %35, %tag30 ], [ %110, %normal-dest157 ], [ %G342723.1, %normal-dest176 ], [ %147, %normal-dest349 ], [ %G342723.2, %normal-dest359 ]
  %75 = ptrtoint {}* %G342723.0 to i64
  %fixnum-tag-only461594 = and i64 %75, 3
  %fixnump-test462 = icmp eq i64 %fixnum-tag-only461594, 0
  br i1 %fixnump-test462, label %tag7, label %tag53

tag91:                                            ; preds = %tag10
  %76 = add i64 %136, 7
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %"tag fixnum" = shl nuw i64 %78, 2
  %79 = inttoptr i64 %"tag fixnum" to {}*
  br label %tag94

tag94:                                            ; preds = %tag13, %normal-dest417, %tag108, %tag91
  %y324.0 = phi {}* [ %79, %tag91 ], [ null, %tag108 ], [ %y324.1, %normal-dest417 ], [ %LENGTH.0.ph, %tag13 ]
  %ptrtoint471 = ptrtoint {}* %y324.0 to i64
  %tag-only472 = and i64 %ptrtoint471, 7
  %test473 = icmp eq i64 %tag-only472, 1
  br i1 %test473, label %header-check-br470, label %tag47

tag95:                                            ; preds = %tag25
  %fixnum-tag-only477629 = and i64 %ptrtoint140, 3
  %fixnump-test478 = icmp eq i64 %fixnum-tag-only477629, 0
  br i1 %fixnump-test478, label %tag66, label %tag34

tag96:                                            ; preds = %tag107
  %80 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %81 = invoke {}* @cc_safe_fdefinition({}* %80)
          to label %normal-dest480 unwind label %cleanup-lpad.loopexit.loopexit

tag101:                                           ; preds = %header-check-br308
  %ptrtoint508 = ptrtoint {}* %G342722.0 to i64
  %tag-only509 = and i64 %ptrtoint508, 7
  %test510 = icmp eq i64 %tag-only509, 1
  br i1 %test510, label %header-check-br507, label %tag58

tag103:                                           ; preds = %tag13
  %82 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 48), align 16
  %83 = invoke {}* @cc_safe_fdefinition({}* %82)
          to label %normal-dest515 unwind label %cleanup-lpad.loopexit.loopexit

tag104:                                           ; preds = %header-check-br507
  %84 = invoke double @from_object_double({}* nonnull %G342723.0)
          to label %normal-dest527 unwind label %cleanup-lpad.loopexit.split-lp

tag105:                                           ; preds = %normal-dest134
  %85 = icmp eq i64 %tag-only, 6
  %fixnum-tag-only279558 = and i64 %ptrtoint140, 3
  %fixnump-test280 = icmp eq i64 %fixnum-tag-only279558, 0
  %or.cond652 = or i1 %85, %fixnump-test280
  br i1 %or.cond652, label %tag25, label %tag31

tag106:                                           ; preds = %tag25
  %trunc = trunc i64 %33 to i3
  switch i3 %trunc, label %tag34 [
    i3 -2, label %tag17
    i3 1, label %header-check-br340
  ]

tag107:                                           ; preds = %tag38
  %86 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %87 = icmp eq {}* %SEQUENCE.0.ph, %86
  %.val660 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342877.0 = select i1 %87, {}* %.val660, {}* %86
  %88 = icmp eq {}* %G342877.0, %86
  br i1 %88, label %tag96, label %tag32

tag108:                                           ; preds = %tag10
  %89 = icmp eq {}* %.in624, %.val671
  %.val670 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342824.0 = select i1 %89, {}* %.val670, {}* %.val671
  %90 = icmp eq {}* %G342824.0, %.val671
  br i1 %90, label %tag78, label %tag94

tag111:                                           ; preds = %switch.early.test702, %tag47
  %91 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %92 = invoke {}* @cc_safe_fdefinition({}* %91)
          to label %normal-dest538 unwind label %cleanup-lpad.loopexit.split-lp

tag112:                                           ; preds = %tag22
  %93 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  br label %tag15

tag115:                                           ; preds = %tag89
  %trunc666 = trunc i64 %33 to i3
  switch i3 %trunc666, label %tag9 [
    i3 -2, label %tag88
    i3 1, label %header-check-br247
  ]

cleanup-lpad.loopexit.loopexit:                   ; preds = %normal-dest515, %tag103, %normal-dest480, %tag96
  %lpad.loopexit673 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.loopexit.split-lp:          ; preds = %normal-dest424, %tag79, %normal-dest202, %tag18
  %lpad.loopexit.split-lp674 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad.loopexit.split-lp:                   ; preds = %normal-dest, %normal-dest120, %normal-dest122, %normal-dest125, %tag2, %normal-dest144, %normal-dest145, %normal-dest263, %tag6, %normal-dest155, %normal-dest157, %tag9, %normal-dest169, %tag16, %normal-dest188, %maybe-more-tests, %normal-dest217, %tag31, %tag34, %normal-dest266, %tag36, %normal-dest283, %normal-dest538, %tag54, %normal-dest348, %normal-dest349, %tag56, %normal-dest352, %tag58, %normal-dest366, %tag64, %normal-dest388, %tag71, %normal-dest402, %normal-dest403, %tag76, %normal-dest407, %tag78, %normal-dest410, %tag104, %normal-dest527, %tag111, %10, %13
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %cleanup-lpad

cleanup-lpad:                                     ; preds = %cleanup-lpad.loopexit.loopexit, %cleanup-lpad.loopexit.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit.split-lp, %cleanup-lpad.loopexit.split-lp ], [ %lpad.loopexit673, %cleanup-lpad.loopexit.loopexit ], [ %lpad.loopexit.split-lp674, %cleanup-lpad.loopexit.loopexit.split-lp ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %lpad.phi

normal-dest:                                      ; preds = %11
  %94 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 519), align 8
  %95 = invoke {}* @cc_safe_fdefinition({}* %94)
          to label %normal-dest120 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest120:                                   ; preds = %normal-dest
  %96 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %97 = invoke {}* @cc_safe_fdefinition({}* %96)
          to label %normal-dest122 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest122:                                   ; preds = %normal-dest120
  %98 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint = ptrtoint {}* %97 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %99 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %97, i64 2, {}* %farg0, {}* %98, {}* null, {}* null)
          to label %normal-dest125 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest125:                                   ; preds = %normal-dest122
  %.elt = extractvalue { {}*, i64 } %99, 0
  %.elt553 = extractvalue { {}*, i64 } %99, 1
  %cond = icmp eq i64 %.elt553, 0
  %100 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342917.0 = select i1 %cond, {}* %100, {}* %.elt
  %ptrtoint128 = ptrtoint {}* %95 to i64
  %entry-point-addr-uint129 = add i64 %ptrtoint128, 7
  %entry-point-addr130 = inttoptr i64 %entry-point-addr-uint129 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point131 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr130, align 8
  %101 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point131({}* %95, i64 1, {}* %G342917.0, {}* null, {}* null, {}* null)
          to label %normal-dest134 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest134:                                   ; preds = %normal-dest125
  %.elt555 = extractvalue { {}*, i64 } %101, 0
  %.elt557 = extractvalue { {}*, i64 } %101, 1
  %cond540 = icmp eq i64 %.elt557, 0
  %102 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in = select i1 %cond540, {}* %102, {}* %.elt555
  %103 = bitcast {}* %.in to i8*
  %ptrtoint140 = ptrtoint {}* %.in to i64
  %tag-only = and i64 %ptrtoint140, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag105

header-check-br:                                  ; preds = %normal-dest134
  %gep = getelementptr inbounds i8, i8* %103, i64 -9
  %irc-bit-cast142 = bitcast i8* %gep to i64*
  %104 = load i64, i64* %irc-bit-cast142, align 8
  switch i64 %104, label %header-check-br379 [
    i64 1325, label %tag25
    i64 1341, label %tag25
  ]

normal-dest144:                                   ; preds = %tag2
  %105 = invoke double @from_object_double({}* nonnull %.in)
          to label %normal-dest145 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest145:                                   ; preds = %normal-dest144
  %106 = fsub double %15, %105
  %107 = invoke {}* @to_object_double(double %106)
          to label %tag36 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest153:                                   ; preds = %normal-dest263
  call void @unreachableError()
  unreachable

normal-dest155:                                   ; preds = %tag6
  %108 = invoke double @from_object_double({}* nonnull %y324.0)
          to label %normal-dest157 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest157:                                   ; preds = %normal-dest155
  %109 = fsub double %16, %108
  %110 = invoke {}* @to_object_double(double %109)
          to label %tag90 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest169:                                   ; preds = %tag9
  %ptrtoint170 = ptrtoint {}* %19 to i64
  %entry-point-addr-uint171 = add i64 %ptrtoint170, 7
  %entry-point-addr172 = inttoptr i64 %entry-point-addr-uint171 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point173 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr172, align 8
  %111 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point173({}* %19, i64 2, {}* %farg1, {}* %y324.0, {}* null, {}* null)
          to label %normal-dest176 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest176:                                   ; preds = %normal-dest169
  %.elt591 = extractvalue { {}*, i64 } %111, 0
  %.elt593 = extractvalue { {}*, i64 } %111, 1
  %cond545 = icmp eq i64 %.elt593, 0
  %112 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342723.1 = select i1 %cond545, {}* %112, {}* %.elt591
  br label %tag90

normal-dest188:                                   ; preds = %tag16
  %ptrtoint189 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint190 = add i64 %ptrtoint189, 7
  %entry-point-addr191 = inttoptr i64 %entry-point-addr-uint190 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point192 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr191, align 8
  %113 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point192({}* %28, i64 1, {}* %57, {}* null, {}* null, {}* null)
          to label %normal-dest195 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest195:                                   ; preds = %normal-dest188
  %.elt631 = extractvalue { {}*, i64 } %113, 0
  %.elt633 = extractvalue { {}*, i64 } %113, 1
  %cond551 = icmp eq i64 %.elt633, 0
  %114 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342722.1 = select i1 %cond551, {}* %114, {}* %.elt631
  br label %tag36

normal-dest202:                                   ; preds = %tag18
  %ptrtoint204 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint205 = add i64 %ptrtoint204, 7
  %entry-point-addr206 = inttoptr i64 %entry-point-addr-uint205 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point207 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr206, align 8
  %115 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point207({}* %31, i64 1, {}* %64, {}* null, {}* null, {}* null)
          to label %normal-dest210 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest210:                                   ; preds = %normal-dest202
  %.elt581 = extractvalue { {}*, i64 } %115, 0
  %.elt583 = extractvalue { {}*, i64 } %115, 1
  %cond544 = icmp eq i64 %.elt583, 0
  %116 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.1 = select i1 %cond544, {}* %116, {}* %.elt581
  br label %tag38.outer.backedge

normal-dest217:                                   ; preds = %maybe-more-tests
  %ptrtoint218 = ptrtoint {}* %142 to i64
  %entry-point-addr-uint219 = add i64 %ptrtoint218, 7
  %entry-point-addr220 = inttoptr i64 %entry-point-addr-uint219 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point221 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr220, align 8
  %117 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point221({}* %142, i64 1, {}* nonnull %.in624, {}* null, {}* null, {}* null)
          to label %normal-dest224 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest224:                                   ; preds = %normal-dest217
  %.elt626 = extractvalue { {}*, i64 } %117, 0
  %.elt628 = extractvalue { {}*, i64 } %117, 1
  %cond550 = icmp eq i64 %.elt628, 0
  %118 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342926.0 = select i1 %cond550, {}* %118, {}* %.elt626
  %119 = icmp eq {}* %G342926.0, inttoptr (i64 4 to {}*)
  br i1 %119, label %tag10, label %tag62

header-check-br238:                               ; preds = %header-check-br247
  %irc-bit-cast242 = bitcast {}* %y324.0 to i8*
  %gep243 = getelementptr inbounds i8, i8* %irc-bit-cast242, i64 -9
  %irc-bit-cast244 = bitcast i8* %gep243 to i64*
  %120 = load i64, i64* %irc-bit-cast244, align 8
  %121 = icmp eq i64 %120, 1325
  br i1 %121, label %tag6, label %tag9

header-check-br247:                               ; preds = %tag115
  %irc-bit-cast251 = bitcast {}* %farg1 to i8*
  %gep252 = getelementptr inbounds i8, i8* %irc-bit-cast251, i64 -9
  %irc-bit-cast253 = bitcast i8* %gep252 to i64*
  %122 = load i64, i64* %irc-bit-cast253, align 8
  %123 = icmp ne i64 %122, 1325
  %test473.not = xor i1 %test473, true
  %brmerge = or i1 %123, %test473.not
  br i1 %brmerge, label %tag9, label %header-check-br238

header-check-br254:                               ; preds = %header-check-br340
  %gep259 = getelementptr inbounds i8, i8* %103, i64 -9
  %irc-bit-cast260 = bitcast i8* %gep259 to i64*
  %124 = load i64, i64* %irc-bit-cast260, align 8
  %125 = icmp eq i64 %124, 1325
  br i1 %125, label %tag2, label %tag34

normal-dest263:                                   ; preds = %tag31
  %126 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %127 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %128 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %129 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 334), align 16
  %ptrtoint147 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint148 = add i64 %ptrtoint147, 7
  %entry-point-addr149 = inttoptr i64 %entry-point-addr-uint148 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point150 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr149, align 8
  %130 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point150({}* %37, i64 5, {}* %126, {}* %127, {}* %.in, {}* %128, {}* %129)
          to label %normal-dest153 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest266:                                   ; preds = %tag34
  %ptrtoint267 = ptrtoint {}* %41 to i64
  %entry-point-addr-uint268 = add i64 %ptrtoint267, 7
  %entry-point-addr269 = inttoptr i64 %entry-point-addr-uint268 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point270 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr269, align 8
  %131 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point270({}* %41, i64 2, {}* %farg1, {}* %.in, {}* null, {}* null)
          to label %normal-dest273 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest273:                                   ; preds = %normal-dest266
  %.elt565 = extractvalue { {}*, i64 } %131, 0
  %.elt567 = extractvalue { {}*, i64 } %131, 1
  %cond541 = icmp eq i64 %.elt567, 0
  %132 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342722.2 = select i1 %cond541, {}* %132, {}* %.elt565
  br label %tag36

normal-dest283:                                   ; preds = %tag36
  %ptrtoint284 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint285 = add i64 %ptrtoint284, 7
  %entry-point-addr286 = inttoptr i64 %entry-point-addr-uint285 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point287 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr286, align 8
  %133 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point287({}* %43, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest290 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest290:                                   ; preds = %normal-dest283
  %.elt569 = extractvalue { {}*, i64 } %133, 0
  %.elt571 = extractvalue { {}*, i64 } %133, 1
  %cond542 = icmp eq i64 %.elt571, 0
  %134 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %.in624 = select i1 %cond542, {}* %134, {}* %.elt569
  %135 = bitcast {}* %.in624 to i8*
  %136 = ptrtoint {}* %.in624 to i64
  %tag-only296572 = and i64 %136, 7
  %consp-test297 = icmp eq i64 %tag-only296572, 3
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %G342884.0 = select i1 %consp-test297, {}* %.val, {}* %134
  %137 = icmp eq {}* %G342884.0, %134
  br i1 %137, label %tag87, label %tag38.outer.preheader

tag38.outer.preheader:                            ; preds = %normal-dest290
  br label %tag38.outer

header-check-br308:                               ; preds = %tag53
  %irc-bit-cast312 = bitcast {}* %G342723.0 to i8*
  %gep313 = getelementptr inbounds i8, i8* %irc-bit-cast312, i64 -9
  %irc-bit-cast314 = bitcast i8* %gep313 to i64*
  %138 = load i64, i64* %irc-bit-cast314, align 8
  %139 = icmp eq i64 %138, 1325
  br i1 %139, label %tag101, label %tag58

header-check-br315:                               ; preds = %header-check-br447
  %.off672 = add i64 %164, -1153
  %140 = icmp ult i64 %.off672, 149
  br i1 %140, label %maybe-more-tests, label %tag62

maybe-more-tests:                                 ; preds = %header-check-br315
  %141 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 109), align 8
  %142 = invoke {}* @cc_safe_fdefinition({}* %141)
          to label %normal-dest217 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest339:                                   ; preds = %normal-dest538
  call void @unreachableError()
  unreachable

header-check-br340:                               ; preds = %tag106
  %irc-bit-cast344 = bitcast {}* %farg1 to i8*
  %gep345 = getelementptr inbounds i8, i8* %irc-bit-cast344, i64 -9
  %irc-bit-cast346 = bitcast i8* %gep345 to i64*
  %143 = load i64, i64* %irc-bit-cast346, align 8
  %144 = icmp ne i64 %143, 1325
  %test.not = xor i1 %test, true
  %brmerge651 = or i1 %144, %test.not
  br i1 %brmerge651, label %tag34, label %header-check-br254

normal-dest348:                                   ; preds = %tag54
  %145 = invoke float @from_object_float({}* %y324.0)
          to label %normal-dest349 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest349:                                   ; preds = %normal-dest348
  %146 = fsub float %46, %145
  %147 = invoke {}* @to_object_float(float %146)
          to label %tag90 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest352:                                   ; preds = %tag56
  %ptrtoint353 = ptrtoint {}* %48 to i64
  %entry-point-addr-uint354 = add i64 %ptrtoint353, 7
  %entry-point-addr355 = inttoptr i64 %entry-point-addr-uint354 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point356 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr355, align 8
  %148 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point356({}* %48, i64 1, {}* %35, {}* null, {}* null, {}* null)
          to label %normal-dest359 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest359:                                   ; preds = %normal-dest352
  %.elt609 = extractvalue { {}*, i64 } %148, 0
  %.elt611 = extractvalue { {}*, i64 } %148, 1
  %cond547 = icmp eq i64 %.elt611, 0
  %149 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342723.2 = select i1 %cond547, {}* %149, {}* %.elt609
  br label %tag90

normal-dest366:                                   ; preds = %tag58
  %ptrtoint367 = ptrtoint {}* %51 to i64
  %entry-point-addr-uint368 = add i64 %ptrtoint367, 7
  %entry-point-addr369 = inttoptr i64 %entry-point-addr-uint368 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point370 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr369, align 8
  %150 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point370({}* %51, i64 2, {}* %G342723.0, {}* %G342722.0, {}* null, {}* null)
          to label %normal-dest373 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest373:                                   ; preds = %normal-dest366
  %.elt596 = extractvalue { {}*, i64 } %150, 0
  %.elt598 = extractvalue { {}*, i64 } %150, 1
  %cond546 = icmp eq i64 %.elt598, 0
  %151 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %object.1 = select i1 %cond546, {}* %151, {}* %.elt596
  br label %tag15

header-check-br379:                               ; preds = %header-check-br
  %.old = and i64 %ptrtoint140, 3
  %fixnump-test280.old = icmp eq i64 %.old, 0
  br i1 %fixnump-test280.old, label %tag25, label %switch.early.test

switch.early.test:                                ; preds = %header-check-br379
  switch i64 %104, label %tag31 [
    i64 1349, label %tag25
    i64 1309, label %tag25
  ]

normal-dest388:                                   ; preds = %tag64
  %152 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 527), align 8
  %ptrtoint389 = ptrtoint {}* %55 to i64
  %entry-point-addr-uint390 = add i64 %ptrtoint389, 7
  %entry-point-addr391 = inttoptr i64 %entry-point-addr-uint390 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point392 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr391, align 8
  %153 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point392({}* %55, i64 2, {}* %152, {}* %farg0, {}* null, {}* null)
          to label %normal-dest395 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest395:                                   ; preds = %normal-dest388
  %.elt600 = extractvalue { {}*, i64 } %153, 0
  %.elt602 = extractvalue { {}*, i64 } %153, 1
  br label %tag80

normal-dest402:                                   ; preds = %tag71
  %154 = invoke float @from_object_float({}* %.in)
          to label %normal-dest403 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest403:                                   ; preds = %normal-dest402
  %155 = fsub float %59, %154
  %156 = invoke {}* @to_object_float(float %155)
          to label %tag36 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest407:                                   ; preds = %tag76
  %157 = invoke float @from_object_float({}* %G342722.0)
          to label %normal-dest408 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest408:                                   ; preds = %normal-dest407
  %158 = fcmp oeq float %65, %157
  br i1 %158, label %tag69, label %tag45

normal-dest410:                                   ; preds = %tag78
  %159 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 521), align 8
  %ptrtoint411 = ptrtoint {}* %68 to i64
  %entry-point-addr-uint412 = add i64 %ptrtoint411, 7
  %entry-point-addr413 = inttoptr i64 %entry-point-addr-uint412 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point414 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr413, align 8
  %160 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point414({}* %68, i64 2, {}* %.in624, {}* %159, {}* null, {}* null)
          to label %normal-dest417 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest417:                                   ; preds = %normal-dest410
  %.elt621 = extractvalue { {}*, i64 } %160, 0
  %.elt623 = extractvalue { {}*, i64 } %160, 1
  %cond549 = icmp eq i64 %.elt623, 0
  %161 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %y324.1 = select i1 %cond549, {}* %161, {}* %.elt621
  br label %tag94

normal-dest424:                                   ; preds = %tag79
  %ptrtoint425 = ptrtoint {}* %70 to i64
  %entry-point-addr-uint426 = add i64 %ptrtoint425, 7
  %entry-point-addr427 = inttoptr i64 %entry-point-addr-uint426 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point428 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr427, align 8
  %162 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point428({}* %70, i64 2, {}* %LENGTH.0.ph, {}* inttoptr (i64 4 to {}*), {}* null, {}* null)
          to label %normal-dest431 unwind label %cleanup-lpad.loopexit.loopexit.split-lp

normal-dest431:                                   ; preds = %normal-dest424
  %.elt577 = extractvalue { {}*, i64 } %162, 0
  %.elt579 = extractvalue { {}*, i64 } %162, 1
  %cond543 = icmp eq i64 %.elt579, 0
  %163 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %LENGTH.2 = select i1 %cond543, {}* %163, {}* %.elt577
  br label %tag38.outer.backedge

header-check-br447:                               ; preds = %tag87
  %gep452 = getelementptr inbounds i8, i8* %135, i64 -9
  %irc-bit-cast453 = bitcast i8* %gep452 to i64*
  %164 = load i64, i64* %irc-bit-cast453, align 8
  %.off = add i64 %164, -1081
  %165 = icmp ult i64 %.off, 69
  br i1 %165, label %tag10, label %header-check-br315

header-check-br470:                               ; preds = %tag94
  %irc-bit-cast474 = bitcast {}* %y324.0 to i8*
  %gep475 = getelementptr inbounds i8, i8* %irc-bit-cast474, i64 -9
  %irc-bit-cast476 = bitcast i8* %gep475 to i64*
  %166 = load i64, i64* %irc-bit-cast476, align 8
  switch i64 %166, label %header-check-br493 [
    i64 1325, label %tag89
    i64 1341, label %tag89
  ]

normal-dest480:                                   ; preds = %tag96
  %167 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %168 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %169 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %170 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 59), align 8
  %ptrtoint481 = ptrtoint {}* %81 to i64
  %entry-point-addr-uint482 = add i64 %ptrtoint481, 7
  %entry-point-addr483 = inttoptr i64 %entry-point-addr-uint482 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point484 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr483, align 8
  %171 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point484({}* %81, i64 5, {}* %167, {}* %168, {}* %SEQUENCE.0.ph, {}* %169, {}* %170)
          to label %normal-dest487 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest487:                                   ; preds = %normal-dest480
  %.elt617 = extractvalue { {}*, i64 } %171, 0
  %.elt619 = extractvalue { {}*, i64 } %171, 1
  %cond548 = icmp eq i64 %.elt619, 0
  %172 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G2095854.1 = select i1 %cond548, {}* %172, {}* %.elt617
  br label %tag32

header-check-br493:                               ; preds = %header-check-br470
  %.old655 = and i64 %ptrtoint471, 3
  %fixnump-test446.old = icmp eq i64 %.old655, 0
  br i1 %fixnump-test446.old, label %tag89, label %switch.early.test702

switch.early.test702:                             ; preds = %header-check-br493
  switch i64 %166, label %tag111 [
    i64 1349, label %tag89
    i64 1309, label %tag89
  ]

header-check-br507:                               ; preds = %tag101
  %irc-bit-cast511 = bitcast {}* %G342722.0 to i8*
  %gep512 = getelementptr inbounds i8, i8* %irc-bit-cast511, i64 -9
  %irc-bit-cast513 = bitcast i8* %gep512 to i64*
  %173 = load i64, i64* %irc-bit-cast513, align 8
  %174 = icmp eq i64 %173, 1325
  br i1 %174, label %tag104, label %tag58

normal-dest515:                                   ; preds = %tag103
  %175 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 522), align 16
  %ptrtoint516 = ptrtoint {}* %83 to i64
  %entry-point-addr-uint517 = add i64 %ptrtoint516, 7
  %entry-point-addr518 = inttoptr i64 %entry-point-addr-uint517 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point519 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr518, align 8
  %176 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point519({}* %83, i64 2, {}* %G2095854.0, {}* %175, {}* null, {}* null)
          to label %tag38 unwind label %cleanup-lpad.loopexit.loopexit

normal-dest527:                                   ; preds = %tag104
  %177 = invoke double @from_object_double({}* nonnull %G342722.0)
          to label %normal-dest528 unwind label %cleanup-lpad.loopexit.split-lp

normal-dest528:                                   ; preds = %normal-dest527
  %178 = fcmp oeq double %84, %177
  br i1 %178, label %tag57, label %tag77

normal-dest538:                                   ; preds = %tag111
  %179 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %180 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %181 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %182 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 334), align 16
  %ptrtoint333 = ptrtoint {}* %92 to i64
  %entry-point-addr-uint334 = add i64 %ptrtoint333, 7
  %entry-point-addr335 = inttoptr i64 %entry-point-addr-uint334 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point336 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr335, align 8
  %183 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point336({}* %92, i64 5, {}* %179, {}* %180, {}* %y324.0, {}* %181, {}* %182)
          to label %normal-dest339 unwind label %cleanup-lpad.loopexit.split-lp
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^509^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !106 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^509^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest10, %header-check-br86
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest13 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest80, %normal-dest17, %header-check-br
  %G342972.0 = phi {}* [ %18, %header-check-br ], [ %G342972.1, %normal-dest17 ], [ %G342972.2, %normal-dest80 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 511), align 8
  %ptrtoint20 = ptrtoint {}* %G342972.0 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %G342972.0, i64 2, {}* %"closure->SCH=TAGE_TEST", {}* %13, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest73, %maybe-more-tests94, %normal-dest58, %normal-dest52, %normal-dest45, %normal-dest39, %normal-dest32, %normal-dest26, %tag1, %normal-dest13, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 511), align 8
  %"closure->SCH=TAGE_TEST" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=TAGE_TEST^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 19678, i64 509, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag1, label %header-check-br86

normal-dest13:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 538), align 16
  %ptrtoint14 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %25 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %21, {}* %22, {}* %18, {}* %23, {}* %24)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt = extractvalue { {}*, i64 } %25, 0
  %.elt97 = extractvalue { {}*, i64 } %25, 1
  %cond = icmp eq i64 %.elt97, 0
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342972.1 = select i1 %cond, {}* %26, {}* %.elt
  br label %tag1

normal-dest26:                                    ; preds = %tag1
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %28 = invoke {}* @cc_safe_fdefinition({}* %27)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 539), align 8
  %ptrtoint33 = ptrtoint {}* %28 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %28, i64 2, {}* %"closure->SCH=TAGE_TEST", {}* %29, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %32 = invoke {}* @cc_safe_fdefinition({}* %31)
          to label %normal-dest45 unwind label %cleanup-lpad

normal-dest45:                                    ; preds = %normal-dest39
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 540), align 16
  %ptrtoint46 = ptrtoint {}* %32 to i64
  %entry-point-addr-uint47 = add i64 %ptrtoint46, 7
  %entry-point-addr48 = inttoptr i64 %entry-point-addr-uint47 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point49 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr48, align 8
  %34 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point49({}* %32, i64 2, {}* %"closure->SCH=TAGE_TEST", {}* %33, {}* null, {}* null)
          to label %normal-dest52 unwind label %cleanup-lpad

normal-dest52:                                    ; preds = %normal-dest45
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 271), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest58 unwind label %cleanup-lpad

normal-dest58:                                    ; preds = %normal-dest52
  %37 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 511), align 8
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 541), align 8
  %ptrtoint59 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint60 = add i64 %ptrtoint59, 7
  %entry-point-addr61 = inttoptr i64 %entry-point-addr-uint60 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point62 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr61, align 8
  %40 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point62({}* %36, i64 3, {}* %37, {}* %38, {}* %39, {}* null)
          to label %normal-dest65 unwind label %cleanup-lpad

normal-dest65:                                    ; preds = %normal-dest58
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %41, {}* inttoptr (i64 2036 to {}*))
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 511), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %43 = insertvalue { {}*, i64 } undef, {}* %42, 0
  %44 = insertvalue { {}*, i64 } %43, i64 1, 1
  ret { {}*, i64 } %44

normal-dest73:                                    ; preds = %maybe-more-tests94
  %ptrtoint74 = ptrtoint {}* %49 to i64
  %entry-point-addr-uint75 = add i64 %ptrtoint74, 7
  %entry-point-addr76 = inttoptr i64 %entry-point-addr-uint75 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point77 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr76, align 8
  %45 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point77({}* %49, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest80 unwind label %cleanup-lpad

normal-dest80:                                    ; preds = %normal-dest73
  %.elt118 = extractvalue { {}*, i64 } %45, 0
  %.elt120 = extractvalue { {}*, i64 } %45, 1
  %cond95 = icmp eq i64 %.elt120, 0
  %46 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342972.2 = select i1 %cond95, {}* %46, {}* %.elt118
  br label %tag1

header-check-br86:                                ; preds = %header-check-br
  %.off123 = add i64 %19, -1001
  %47 = icmp ult i64 %.off123, 5
  br i1 %47, label %maybe-more-tests94, label %tag

maybe-more-tests94:                               ; preds = %header-check-br86
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %49 = invoke {}* @cc_safe_fdefinition({}* %48)
          to label %normal-dest73 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=TAGE_TEST^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !107 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=TAGE_TEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc152 unwind label %cleanup-lpad

.noexc152:                                        ; preds = %10
  unreachable

tag1:                                             ; preds = %normal-dest68
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 535), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest77 unwind label %cleanup-lpad

tag2:                                             ; preds = %normal-dest98, %normal-dest84, %normal-dest68
  %.in = phi {}* [ %42, %normal-dest68 ], [ %45, %normal-dest84 ], [ %48, %normal-dest98 ]
  %G342994.0 = phi {}* [ %G342949.0, %normal-dest68 ], [ %G342951.0, %normal-dest84 ], [ %G342994.1, %normal-dest98 ]
  %13 = icmp eq {}* %G342994.0, %.in
  br i1 %13, label %tag7, label %tag6

tag4:                                             ; preds = %normal-dest84
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 535), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest91 unwind label %cleanup-lpad

tag6:                                             ; preds = %tag2
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 525), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest105 unwind label %cleanup-lpad

tag7:                                             ; preds = %tag2, %normal-dest112
  %return-value.sroa.17.0 = phi i64 [ %.elt140, %normal-dest112 ], [ 1, %tag2 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt138, %normal-dest112 ], [ %.in, %tag2 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %18 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %19 = insertvalue { {}*, i64 } %18, i64 %return-value.sroa.17.0, 1
  ret { {}*, i64 } %19

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest105, %tag6, %normal-dest91, %tag4, %normal-dest77, %tag1, %normal-dest61, %normal-dest54, %normal-dest47, %normal-dest40, %normal-dest28, %normal-dest21, %normal-dest19, %normal-dest15, %normal-dest12, %normal-dest
  %20 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %20

normal-dest:                                      ; preds = %entry
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest12 unwind label %cleanup-lpad

normal-dest12:                                    ; preds = %normal-dest
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 400), align 16
  %ptrtoint = ptrtoint {}* %22 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %22, i64 2, {}* %farg0, {}* %23, {}* null, {}* null)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest12
  %.elt = extractvalue { {}*, i64 } %24, 0
  %.elt120 = extractvalue { {}*, i64 } %24, 1
  %cond = icmp eq i64 %.elt120, 0
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342945.0 = select i1 %cond, {}* %25, {}* %.elt
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 202), align 16
  %27 = invoke {}* @cc_safe_fdefinition({}* %26)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest15
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %29 = invoke {}* @cc_safe_fdefinition({}* %28)
          to label %normal-dest21 unwind label %cleanup-lpad

normal-dest21:                                    ; preds = %normal-dest19
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint22 = ptrtoint {}* %29 to i64
  %entry-point-addr-uint23 = add i64 %ptrtoint22, 7
  %entry-point-addr24 = inttoptr i64 %entry-point-addr-uint23 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point25 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr24, align 8
  %31 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point25({}* %29, i64 2, {}* %farg0, {}* %30, {}* null, {}* null)
          to label %normal-dest28 unwind label %cleanup-lpad

normal-dest28:                                    ; preds = %normal-dest21
  %.elt122 = extractvalue { {}*, i64 } %31, 0
  %.elt124 = extractvalue { {}*, i64 } %31, 1
  %cond113 = icmp eq i64 %.elt124, 0
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343016.0 = select i1 %cond113, {}* %32, {}* %.elt122
  %ptrtoint34 = ptrtoint {}* %27 to i64
  %entry-point-addr-uint35 = add i64 %ptrtoint34, 7
  %entry-point-addr36 = inttoptr i64 %entry-point-addr-uint35 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point37 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr36, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point37({}* %27, i64 1, {}* %G343016.0, {}* null, {}* null, {}* null)
          to label %normal-dest40 unwind label %cleanup-lpad

normal-dest40:                                    ; preds = %normal-dest28
  %.elt126 = extractvalue { {}*, i64 } %33, 0
  %.elt128 = extractvalue { {}*, i64 } %33, 1
  %cond114 = icmp eq i64 %.elt128, 0
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342946.0 = select i1 %cond114, {}* %34, {}* %.elt126
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 501), align 8
  %36 = invoke {}* @cc_safe_fdefinition({}* %35)
          to label %normal-dest47 unwind label %cleanup-lpad

normal-dest47:                                    ; preds = %normal-dest40
  %ptrtoint48 = ptrtoint {}* %36 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %36, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt130 = extractvalue { {}*, i64 } %37, 0
  %.elt132 = extractvalue { {}*, i64 } %37, 1
  %cond115 = icmp eq i64 %.elt132, 0
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342947.0 = select i1 %cond115, {}* %38, {}* %.elt130
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 535), align 8
  %40 = invoke {}* @cc_safe_fdefinition({}* %39)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %ptrtoint62 = ptrtoint {}* %40 to i64
  %entry-point-addr-uint63 = add i64 %ptrtoint62, 7
  %entry-point-addr64 = inttoptr i64 %entry-point-addr-uint63 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point65 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr64, align 8
  %41 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point65({}* %40, i64 2, {}* %G342945.0, {}* %G342946.0, {}* null, {}* null)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest61
  %.elt134 = extractvalue { {}*, i64 } %41, 0
  %.elt136 = extractvalue { {}*, i64 } %41, 1
  %cond116 = icmp eq i64 %.elt136, 0
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342949.0 = select i1 %cond116, {}* %42, {}* %.elt134
  %43 = icmp eq {}* %G342949.0, %42
  br i1 %43, label %tag1, label %tag2

normal-dest77:                                    ; preds = %tag1
  %ptrtoint78 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint79 = add i64 %ptrtoint78, 7
  %entry-point-addr80 = inttoptr i64 %entry-point-addr-uint79 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point81 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr80, align 8
  %44 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point81({}* %12, i64 2, {}* %G342945.0, {}* %G342947.0, {}* null, {}* null)
          to label %normal-dest84 unwind label %cleanup-lpad

normal-dest84:                                    ; preds = %normal-dest77
  %.elt145 = extractvalue { {}*, i64 } %44, 0
  %.elt147 = extractvalue { {}*, i64 } %44, 1
  %cond117 = icmp eq i64 %.elt147, 0
  %45 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342951.0 = select i1 %cond117, {}* %45, {}* %.elt145
  %46 = icmp eq {}* %G342951.0, %45
  br i1 %46, label %tag4, label %tag2

normal-dest91:                                    ; preds = %tag4
  %ptrtoint92 = ptrtoint {}* %15 to i64
  %entry-point-addr-uint93 = add i64 %ptrtoint92, 7
  %entry-point-addr94 = inttoptr i64 %entry-point-addr-uint93 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point95 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr94, align 8
  %47 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point95({}* %15, i64 2, {}* %G342946.0, {}* %G342947.0, {}* null, {}* null)
          to label %normal-dest98 unwind label %cleanup-lpad

normal-dest98:                                    ; preds = %normal-dest91
  %.elt149 = extractvalue { {}*, i64 } %47, 0
  %.elt151 = extractvalue { {}*, i64 } %47, 1
  %cond118 = icmp eq i64 %.elt151, 0
  %48 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G342994.1 = select i1 %cond118, {}* %48, {}* %.elt149
  br label %tag2

normal-dest105:                                   ; preds = %tag6
  %49 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 537), align 8
  %ptrtoint106 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint107 = add i64 %ptrtoint106, 7
  %entry-point-addr108 = inttoptr i64 %entry-point-addr-uint107 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point109 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr108, align 8
  %50 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point109({}* %17, i64 1, {}* %49, {}* null, {}* null, {}* null)
          to label %normal-dest112 unwind label %cleanup-lpad

normal-dest112:                                   ; preds = %normal-dest105
  %.elt138 = extractvalue { {}*, i64 } %50, 0
  %.elt140 = extractvalue { {}*, i64 } %50, 1
  br label %tag7
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^520^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !108 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^520^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br20
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest30 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest37, %normal-dest17, %header-check-br
  %G343043.0 = phi {}* [ %18, %header-check-br ], [ %G343043.1, %normal-dest17 ], [ %G343043.2, %normal-dest37 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 465), align 8
  %ptrtoint43 = ptrtoint {}* %G343043.0 to i64
  %entry-point-addr-uint44 = add i64 %ptrtoint43, 7
  %entry-point-addr45 = inttoptr i64 %entry-point-addr-uint44 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point46 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr45, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point46({}* %G343043.0, i64 2, {}* %"closure->SCH=KONSISTENZTEST", {}* %13, {}* null, {}* null)
          to label %normal-dest49 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest68, %normal-dest62, %normal-dest55, %normal-dest49, %tag3, %normal-dest30, %tag2, %normal-dest13, %maybe-more-tests28, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 465), align 8
  %"closure->SCH=KONSISTENZTEST" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 20237, i64 520, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br20

normal-dest13:                                    ; preds = %maybe-more-tests28
  %ptrtoint14 = ptrtoint {}* %25 to i64
  %entry-point-addr-uint = add i64 %ptrtoint14, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %25, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest17 unwind label %cleanup-lpad

normal-dest17:                                    ; preds = %normal-dest13
  %.elt101 = extractvalue { {}*, i64 } %21, 0
  %.elt103 = extractvalue { {}*, i64 } %21, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343043.1 = select i1 %cond82, {}* %22, {}* %.elt101
  br label %tag3

header-check-br20:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %23 = icmp ult i64 %.off106, 5
  br i1 %23, label %maybe-more-tests28, label %tag2

maybe-more-tests28:                               ; preds = %header-check-br20
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %25 = invoke {}* @cc_safe_fdefinition({}* %24)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest30:                                    ; preds = %tag2
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %28 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 548), align 16
  %ptrtoint31 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint32 = add i64 %ptrtoint31, 7
  %entry-point-addr33 = inttoptr i64 %entry-point-addr-uint32 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point34 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr33, align 8
  %30 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point34({}* %12, i64 5, {}* %26, {}* %27, {}* %18, {}* %28, {}* %29)
          to label %normal-dest37 unwind label %cleanup-lpad

normal-dest37:                                    ; preds = %normal-dest30
  %.elt = extractvalue { {}*, i64 } %30, 0
  %.elt84 = extractvalue { {}*, i64 } %30, 1
  %cond = icmp eq i64 %.elt84, 0
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343043.2 = select i1 %cond, {}* %31, {}* %.elt
  br label %tag3

normal-dest49:                                    ; preds = %tag3
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %33 = invoke {}* @cc_safe_fdefinition({}* %32)
          to label %normal-dest55 unwind label %cleanup-lpad

normal-dest55:                                    ; preds = %normal-dest49
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 549), align 8
  %ptrtoint56 = ptrtoint {}* %33 to i64
  %entry-point-addr-uint57 = add i64 %ptrtoint56, 7
  %entry-point-addr58 = inttoptr i64 %entry-point-addr-uint57 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point59 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr58, align 8
  %35 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point59({}* %33, i64 2, {}* %"closure->SCH=KONSISTENZTEST", {}* %34, {}* null, {}* null)
          to label %normal-dest62 unwind label %cleanup-lpad

normal-dest62:                                    ; preds = %normal-dest55
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %37 = invoke {}* @cc_safe_fdefinition({}* %36)
          to label %normal-dest68 unwind label %cleanup-lpad

normal-dest68:                                    ; preds = %normal-dest62
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 552), align 16
  %ptrtoint69 = ptrtoint {}* %37 to i64
  %entry-point-addr-uint70 = add i64 %ptrtoint69, 7
  %entry-point-addr71 = inttoptr i64 %entry-point-addr-uint70 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point72 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr71, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point72({}* %37, i64 2, {}* %"closure->SCH=KONSISTENZTEST", {}* %38, {}* null, {}* null)
          to label %normal-dest75 unwind label %cleanup-lpad

normal-dest75:                                    ; preds = %normal-dest68
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %40, {}* inttoptr (i64 2080 to {}*))
  %41 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 465), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %42 = insertvalue { {}*, i64 } undef, {}* %41, 0
  %43 = insertvalue { {}*, i64 } %42, i64 1, 1
  ret { {}*, i64 } %43
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !109 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc79 unwind label %cleanup-lpad

.noexc79:                                         ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest41, %normal-dest57
  %return-value.sroa.9.0 = phi i64 [ %.elt75, %normal-dest57 ], [ 1, %normal-dest41 ]
  %return-value.sroa.0.0.in = phi {}* [ %.elt73, %normal-dest57 ], [ %27, %normal-dest41 ]
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %11 = insertvalue { {}*, i64 } undef, {}* %return-value.sroa.0.0.in, 0
  %12 = insertvalue { {}*, i64 } %11, i64 %return-value.sroa.9.0, 1
  ret { {}*, i64 } %12

tag2:                                             ; preds = %normal-dest41
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 525), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest50 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest50, %tag2, %normal-dest29, %normal-dest22, %normal-dest18, %normal-dest15, %normal-dest13, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 535), align 8
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 543), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest15 unwind label %cleanup-lpad

normal-dest15:                                    ; preds = %normal-dest13
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %20 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest18 unwind label %cleanup-lpad

normal-dest18:                                    ; preds = %normal-dest15
  %.elt = extractvalue { {}*, i64 } %20, 0
  %.elt63 = extractvalue { {}*, i64 } %20, 1
  %cond = icmp eq i64 %.elt63, 0
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343076.0 = select i1 %cond, {}* %21, {}* %.elt
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 545), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %normal-dest18
  %ptrtoint23 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint24 = add i64 %ptrtoint23, 7
  %entry-point-addr25 = inttoptr i64 %entry-point-addr-uint24 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point26 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr25, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point26({}* %23, i64 1, {}* %farg0, {}* null, {}* null, {}* null)
          to label %normal-dest29 unwind label %cleanup-lpad

normal-dest29:                                    ; preds = %normal-dest22
  %.elt65 = extractvalue { {}*, i64 } %24, 0
  %.elt67 = extractvalue { {}*, i64 } %24, 1
  %cond60 = icmp eq i64 %.elt67, 0
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343077.0 = select i1 %cond60, {}* %25, {}* %.elt65
  %ptrtoint35 = ptrtoint {}* %17 to i64
  %entry-point-addr-uint36 = add i64 %ptrtoint35, 7
  %entry-point-addr37 = inttoptr i64 %entry-point-addr-uint36 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point38 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr37, align 8
  %26 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point38({}* %17, i64 2, {}* %G343076.0, {}* %G343077.0, {}* null, {}* null)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest29
  %.elt69 = extractvalue { {}*, i64 } %26, 0
  %.elt71 = extractvalue { {}*, i64 } %26, 1
  %cond61 = icmp eq i64 %.elt71, 0
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %x.0 = select i1 %cond61, {}* %27, {}* %.elt69
  %28 = icmp eq {}* %x.0, %27
  %.val = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  %object.0 = select i1 %28, {}* %.val, {}* %27
  %29 = icmp eq {}* %object.0, %27
  %G343066.0 = select i1 %29, {}* %.val, {}* %27
  %30 = icmp eq {}* %G343066.0, %27
  br i1 %30, label %tag, label %tag2

normal-dest50:                                    ; preds = %tag2
  %31 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 547), align 8
  %ptrtoint51 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint52 = add i64 %ptrtoint51, 7
  %entry-point-addr53 = inttoptr i64 %entry-point-addr-uint52 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point54 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr53, align 8
  %32 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point54({}* %14, i64 2, {}* %31, {}* %farg0, {}* null, {}* null)
          to label %normal-dest57 unwind label %cleanup-lpad

normal-dest57:                                    ; preds = %normal-dest50
  %.elt73 = extractvalue { {}*, i64 } %32, 0
  %.elt75 = extractvalue { {}*, i64 } %32, 1
  br label %tag
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^526^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !110 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^526^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag:                                              ; preds = %normal-dest67, %normal-dest54, %header-check-br
  %G343102.0 = phi {}* [ %18, %header-check-br ], [ %G343102.1, %normal-dest54 ], [ %G343102.2, %normal-dest67 ]
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 545), align 8
  %ptrtoint13 = ptrtoint {}* %G343102.0 to i64
  %entry-point-addr-uint = add i64 %ptrtoint13, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %12 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %G343102.0, i64 2, {}* %"closure->SCH=BELGETE_AUS_ZEITEN", {}* %11, {}* null, {}* null)
          to label %normal-dest16 unwind label %cleanup-lpad

tag1:                                             ; preds = %normal-dest10, %header-check-br73
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest47 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest60, %maybe-more-tests81, %normal-dest47, %tag1, %normal-dest32, %normal-dest26, %normal-dest19, %normal-dest16, %tag, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 545), align 8
  %"closure->SCH=BELGETE_AUS_ZEITEN" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 20453, i64 526, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag1

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag, label %header-check-br73

normal-dest16:                                    ; preds = %tag
  %21 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %22 = invoke {}* @cc_safe_fdefinition({}* %21)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest16
  %23 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 555), align 8
  %ptrtoint20 = ptrtoint {}* %22 to i64
  %entry-point-addr-uint21 = add i64 %ptrtoint20, 7
  %entry-point-addr22 = inttoptr i64 %entry-point-addr-uint21 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point23 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr22, align 8
  %24 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point23({}* %22, i64 2, {}* %"closure->SCH=BELGETE_AUS_ZEITEN", {}* %23, {}* null, {}* null)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest19
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %26 = invoke {}* @cc_safe_fdefinition({}* %25)
          to label %normal-dest32 unwind label %cleanup-lpad

normal-dest32:                                    ; preds = %normal-dest26
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 556), align 16
  %ptrtoint33 = ptrtoint {}* %26 to i64
  %entry-point-addr-uint34 = add i64 %ptrtoint33, 7
  %entry-point-addr35 = inttoptr i64 %entry-point-addr-uint34 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point36 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr35, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point36({}* %26, i64 2, {}* %"closure->SCH=BELGETE_AUS_ZEITEN", {}* %27, {}* null, {}* null)
          to label %normal-dest39 unwind label %cleanup-lpad

normal-dest39:                                    ; preds = %normal-dest32
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %29, {}* inttoptr (i64 2104 to {}*))
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 545), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %31 = insertvalue { {}*, i64 } undef, {}* %30, 0
  %32 = insertvalue { {}*, i64 } %31, i64 1, 1
  ret { {}*, i64 } %32

normal-dest47:                                    ; preds = %tag1
  %33 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %35 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 554), align 16
  %ptrtoint48 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint49 = add i64 %ptrtoint48, 7
  %entry-point-addr50 = inttoptr i64 %entry-point-addr-uint49 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point51 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr50, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point51({}* %14, i64 5, {}* %33, {}* %34, {}* %18, {}* %35, {}* %36)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest47
  %.elt = extractvalue { {}*, i64 } %37, 0
  %.elt84 = extractvalue { {}*, i64 } %37, 1
  %cond = icmp eq i64 %.elt84, 0
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343102.1 = select i1 %cond, {}* %38, {}* %.elt
  br label %tag

normal-dest60:                                    ; preds = %maybe-more-tests81
  %ptrtoint61 = ptrtoint {}* %43 to i64
  %entry-point-addr-uint62 = add i64 %ptrtoint61, 7
  %entry-point-addr63 = inttoptr i64 %entry-point-addr-uint62 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point64 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr63, align 8
  %39 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point64({}* %43, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest67 unwind label %cleanup-lpad

normal-dest67:                                    ; preds = %normal-dest60
  %.elt101 = extractvalue { {}*, i64 } %39, 0
  %.elt103 = extractvalue { {}*, i64 } %39, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %40 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343102.2 = select i1 %cond82, {}* %40, {}* %.elt101
  br label %tag

header-check-br73:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %41 = icmp ult i64 %.off106, 5
  br i1 %41, label %maybe-more-tests81, label %tag1

maybe-more-tests81:                               ; preds = %header-check-br73
  %42 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %43 = invoke {}* @cc_safe_fdefinition({}* %42)
          to label %normal-dest60 unwind label %cleanup-lpad
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !111 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc32 unwind label %cleanup-lpad

.noexc32:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest13, %normal-dest10, %normal-dest8, %normal-dest6, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = invoke {}* @cc_makeCell()
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  call void @cc_writeCell({}* %12, {}* %farg0)
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 338), align 16
  %14 = invoke {}* @cc_safe_fdefinition({}* %13)
          to label %normal-dest6 unwind label %cleanup-lpad

normal-dest6:                                     ; preds = %normal-dest5
  %15 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 311), align 8
  %"closure->LAMBDA" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %15, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"LAMBDA^COMMON-LISP^FN^^.4", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 20453, i64 526, i64 0, i64 1, {}* %12)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest6
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 38), align 16
  %17 = invoke {}* @cc_safe_fdefinition({}* %16)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest8
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  %ptrtoint = ptrtoint {}* %17 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %17, i64 1, {}* %18, {}* null, {}* null, {}* null)
          to label %normal-dest13 unwind label %cleanup-lpad

normal-dest13:                                    ; preds = %normal-dest10
  %.elt = extractvalue { {}*, i64 } %19, 0
  %.elt24 = extractvalue { {}*, i64 } %19, 1
  %cond = icmp eq i64 %.elt24, 0
  %20 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343122.0 = select i1 %cond, {}* %20, {}* %.elt
  %ptrtoint16 = ptrtoint {}* %14 to i64
  %entry-point-addr-uint17 = add i64 %ptrtoint16, 7
  %entry-point-addr18 = inttoptr i64 %entry-point-addr-uint17 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point19 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr18, align 8
  %21 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point19({}* %14, i64 2, {}* %"closure->LAMBDA", {}* %G343122.0, {}* null, {}* null)
          to label %normal-dest22 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %normal-dest13
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %21
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"LAMBDA^COMMON-LISP^FN^^.4"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !112 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"LAMBDA^COMMON-LISP^FN^^.4^DESC" to %0*)) #6
          to label %.noexc14 unwind label %cleanup-lpad

.noexc14:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = ptrtoint {}* %closure-ptr to i64
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %1*
  %15 = getelementptr inbounds %1, %1* %14, i64 0, i32 4, i32 1, i64 0, i32 0
  %16 = bitcast %"class.core::T_O"** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !100
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %19 = invoke {}* @cc_safe_fdefinition({}* %18)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %20 = add i64 %17, -3
  %21 = inttoptr i64 %20 to {}**
  %22 = load {}*, {}** %21, align 8, !tbaa !100
  %ptrtoint = ptrtoint {}* %19 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %23 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %19, i64 2, {}* %22, {}* %farg0, {}* null, {}* null)
          to label %normal-dest8 unwind label %cleanup-lpad

normal-dest8:                                     ; preds = %normal-dest5
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %23
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"zeitbitanwendung.lisp^532^TOP-COMPILE-FILE"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !113 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  %9 = icmp eq i64 %nargs, 0
  br i1 %9, label %normal-dest, label %10

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 0, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"zeitbitanwendung.lisp^532^TOP-COMPILE-FILE^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %10
  unreachable

tag2:                                             ; preds = %normal-dest10, %header-check-br13
  %11 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 51), align 8
  %12 = invoke {}* @cc_safe_fdefinition({}* %11)
          to label %normal-dest22 unwind label %cleanup-lpad

tag3:                                             ; preds = %normal-dest76, %normal-dest26, %header-check-br
  %G343153.0 = phi {}* [ %18, %header-check-br ], [ %G343153.1, %normal-dest26 ], [ %G343153.2, %normal-dest76 ]
  %13 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 543), align 8
  %ptrtoint29 = ptrtoint {}* %G343153.0 to i64
  %entry-point-addr-uint30 = add i64 %ptrtoint29, 7
  %entry-point-addr31 = inttoptr i64 %entry-point-addr-uint30 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point32 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr31, align 8
  %14 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point32({}* %G343153.0, i64 2, {}* %"closure->SCH=BELGETE_AUS_ADT", {}* %13, {}* null, {}* null)
          to label %normal-dest35 unwind label %cleanup-lpad

cleanup-lpad:                                     ; preds = %10, %normal-dest69, %maybe-more-tests21, %normal-dest54, %normal-dest48, %normal-dest41, %normal-dest35, %tag3, %normal-dest22, %tag2, %normal-dest9, %normal-dest
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %15

normal-dest:                                      ; preds = %entry
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 543), align 8
  %"closure->SCH=BELGETE_AUS_ADT" = invoke {}* ({}*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*, i32*, i64, i64, i64, i64, ...) @cc_enclose({}* %16, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^", i8* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^^DESC" to i8*), i32* nonnull @source-file-info-handle, i64 20581, i64 532, i64 0, i64 0)
          to label %normal-dest9 unwind label %cleanup-lpad

normal-dest9:                                     ; preds = %normal-dest
  %17 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 85), align 8
  %18 = invoke {}* @cc_safe_setfdefinition({}* %17)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest9
  %ptrtoint = ptrtoint {}* %18 to i64
  %tag-only = and i64 %ptrtoint, 7
  %test = icmp eq i64 %tag-only, 1
  br i1 %test, label %header-check-br, label %tag2

header-check-br:                                  ; preds = %normal-dest10
  %irc-bit-cast11 = bitcast {}* %18 to i8*
  %gep = getelementptr inbounds i8, i8* %irc-bit-cast11, i64 -9
  %irc-bit-cast12 = bitcast i8* %gep to i64*
  %19 = load i64, i64* %irc-bit-cast12, align 8
  %.off = add i64 %19, -913
  %20 = icmp ult i64 %.off, 85
  br i1 %20, label %tag3, label %header-check-br13

header-check-br13:                                ; preds = %header-check-br
  %.off106 = add i64 %19, -1001
  %21 = icmp ult i64 %.off106, 5
  br i1 %21, label %maybe-more-tests21, label %tag2

maybe-more-tests21:                               ; preds = %header-check-br13
  %22 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 91), align 8
  %23 = invoke {}* @cc_safe_fdefinition({}* %22)
          to label %normal-dest69 unwind label %cleanup-lpad

normal-dest22:                                    ; preds = %tag2
  %24 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 53), align 8
  %25 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 55), align 8
  %26 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 57), align 8
  %27 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 559), align 8
  %ptrtoint23 = ptrtoint {}* %12 to i64
  %entry-point-addr-uint = add i64 %ptrtoint23, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %28 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %12, i64 5, {}* %24, {}* %25, {}* %18, {}* %26, {}* %27)
          to label %normal-dest26 unwind label %cleanup-lpad

normal-dest26:                                    ; preds = %normal-dest22
  %.elt = extractvalue { {}*, i64 } %28, 0
  %.elt84 = extractvalue { {}*, i64 } %28, 1
  %cond = icmp eq i64 %.elt84, 0
  %29 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343153.1 = select i1 %cond, {}* %29, {}* %.elt
  br label %tag3

normal-dest35:                                    ; preds = %tag3
  %30 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 98), align 16
  %31 = invoke {}* @cc_safe_fdefinition({}* %30)
          to label %normal-dest41 unwind label %cleanup-lpad

normal-dest41:                                    ; preds = %normal-dest35
  %32 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 560), align 16
  %ptrtoint42 = ptrtoint {}* %31 to i64
  %entry-point-addr-uint43 = add i64 %ptrtoint42, 7
  %entry-point-addr44 = inttoptr i64 %entry-point-addr-uint43 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point45 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr44, align 8
  %33 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point45({}* %31, i64 2, {}* %"closure->SCH=BELGETE_AUS_ADT", {}* %32, {}* null, {}* null)
          to label %normal-dest48 unwind label %cleanup-lpad

normal-dest48:                                    ; preds = %normal-dest41
  %34 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 100), align 16
  %35 = invoke {}* @cc_safe_fdefinition({}* %34)
          to label %normal-dest54 unwind label %cleanup-lpad

normal-dest54:                                    ; preds = %normal-dest48
  %36 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 561), align 8
  %ptrtoint55 = ptrtoint {}* %35 to i64
  %entry-point-addr-uint56 = add i64 %ptrtoint55, 7
  %entry-point-addr57 = inttoptr i64 %entry-point-addr-uint56 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point58 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr57, align 8
  %37 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point58({}* %35, i64 2, {}* %"closure->SCH=BELGETE_AUS_ADT", {}* %36, {}* null, {}* null)
          to label %normal-dest61 unwind label %cleanup-lpad

normal-dest61:                                    ; preds = %normal-dest54
  %38 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 105), align 8
  call void @cc_setSymbolValue({}* %38, {}* inttoptr (i64 2128 to {}*))
  %39 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 543), align 8
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  %40 = insertvalue { {}*, i64 } undef, {}* %39, 0
  %41 = insertvalue { {}*, i64 } %40, i64 1, 1
  ret { {}*, i64 } %41

normal-dest69:                                    ; preds = %maybe-more-tests21
  %ptrtoint70 = ptrtoint {}* %23 to i64
  %entry-point-addr-uint71 = add i64 %ptrtoint70, 7
  %entry-point-addr72 = inttoptr i64 %entry-point-addr-uint71 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point73 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr72, align 8
  %42 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point73({}* %23, i64 1, {}* nonnull %18, {}* null, {}* null, {}* null)
          to label %normal-dest76 unwind label %cleanup-lpad

normal-dest76:                                    ; preds = %normal-dest69
  %.elt101 = extractvalue { {}*, i64 } %42, 0
  %.elt103 = extractvalue { {}*, i64 } %42, 1
  %cond82 = icmp eq i64 %.elt103, 0
  %43 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343153.2 = select i1 %cond82, {}* %43, {}* %.elt101
  br label %tag3
}

; Function Attrs: ssp uwtable
define internal { {}*, i64 } @"SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^"({}* %closure-ptr, i64 %nargs, {}* %farg0, {}* %farg1, {}* %farg2, {}* %farg3, ...) #2 personality i32 (...)* @__gxx_personality_v0 !dbg !114 {
entry:
  %vaslist = alloca { { i32, i32, i8*, i8* }, i64 }, align 8
  %register-save-area = alloca [6 x i8*], align 8
  %invocation-history-frame = alloca <{ i8*, { i32, i32, i8*, i8* }, i64 }>, align 8
  %vaslist-tagged-uint = ptrtoint { { i32, i32, i8*, i8* }, i64 }* %vaslist to i64
  %"va-list*" = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0
  %"remaining-nargs*-uint" = add i64 %vaslist-tagged-uint, 24
  %"remaining-nargs*" = inttoptr i64 %"remaining-nargs*-uint" to i64*
  %0 = bitcast [6 x i8*]* %register-save-area to {}**
  store {}* %closure-ptr, {}** %0, align 8
  %inttoptr = inttoptr i64 %nargs to i8*
  %addr1 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 1
  store i8* %inttoptr, i8** %addr1, align 8
  %addr2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 2
  %1 = bitcast i8** %addr2 to {}**
  store {}* %farg0, {}** %1, align 8
  %addr3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 3
  %2 = bitcast i8** %addr3 to {}**
  store {}* %farg1, {}** %2, align 8
  %addr4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 4
  %3 = bitcast i8** %addr4 to {}**
  store {}* %farg2, {}** %3, align 8
  %addr5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 5
  %4 = bitcast i8** %addr5 to {}**
  store {}* %farg3, {}** %4, align 8
  %irc-bit-cast = bitcast { { i32, i32, i8*, i8* }, i64 }* %vaslist to i8*
  call void @llvm.va_start(i8* nonnull %irc-bit-cast)
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %register-save-area, i64 0, i64 0
  %6 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 3
  %7 = bitcast i8** %6 to i8***
  store i8** %5, i8*** %7, align 8, !tbaa !14
  %8 = getelementptr inbounds { { i32, i32, i8*, i8* }, i64 }, { { i32, i32, i8*, i8* }, i64 }* %vaslist, i64 0, i32 0, i32 0
  store i32 16, i32* %8, align 8, !tbaa !20
  store i64 %nargs, i64* %"remaining-nargs*", align 8, !tbaa !21
  call void @cc_push_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame, { i32, i32, i8*, i8* }* nonnull %"va-list*", i64 %nargs)
  switch i64 %nargs, label %10 [
    i64 0, label %9
    i64 1, label %normal-dest
  ]

; <label>:9:                                      ; preds = %entry
  invoke void @cc_error_too_few_arguments(i64 0, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc unwind label %cleanup-lpad

.noexc:                                           ; preds = %9
  unreachable

; <label>:10:                                     ; preds = %entry
  invoke void @cc_error_too_many_arguments(i64 %nargs, i64 1, %0* bitcast ({ { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { i8*, i8*, i64 }*, i32*, i64, i64, i64, i64, i64, i64 }* @"SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^^DESC" to %0*)) #6
          to label %.noexc29 unwind label %cleanup-lpad

.noexc29:                                         ; preds = %10
  unreachable

cleanup-lpad:                                     ; preds = %10, %9, %normal-dest10, %normal-dest7, %normal-dest5, %normal-dest
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  resume { i8*, i32 } %11

normal-dest:                                      ; preds = %entry
  %12 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 112), align 16
  %13 = invoke {}* @cc_safe_fdefinition({}* %12)
          to label %normal-dest5 unwind label %cleanup-lpad

normal-dest5:                                     ; preds = %normal-dest
  %14 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 79), align 8
  %15 = invoke {}* @cc_safe_fdefinition({}* %14)
          to label %normal-dest7 unwind label %cleanup-lpad

normal-dest7:                                     ; preds = %normal-dest5
  %16 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 20), align 16
  %ptrtoint = ptrtoint {}* %15 to i64
  %entry-point-addr-uint = add i64 %ptrtoint, 7
  %entry-point-addr = inttoptr i64 %entry-point-addr-uint to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr, align 8
  %17 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point({}* %15, i64 2, {}* %farg0, {}* %16, {}* null, {}* null)
          to label %normal-dest10 unwind label %cleanup-lpad

normal-dest10:                                    ; preds = %normal-dest7
  %.elt = extractvalue { {}*, i64 } %17, 0
  %.elt21 = extractvalue { {}*, i64 } %17, 1
  %cond = icmp eq i64 %.elt21, 0
  %18 = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 12), align 16
  %G343172.0 = select i1 %cond, {}* %18, {}* %.elt
  %ptrtoint13 = ptrtoint {}* %13 to i64
  %entry-point-addr-uint14 = add i64 %ptrtoint13, 7
  %entry-point-addr15 = inttoptr i64 %entry-point-addr-uint14 to { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)**
  %entry-point16 = load { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)** %entry-point-addr15, align 8
  %19 = invoke { {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...) %entry-point16({}* %13, i64 1, {}* %G343172.0, {}* null, {}* null, {}* null)
          to label %normal-dest19 unwind label %cleanup-lpad

normal-dest19:                                    ; preds = %normal-dest10
  call void @cc_pop_InvocationHistoryFrame({}* %closure-ptr, <{ i8*, { i32, i32, i8*, i8* }, i64 }>* nonnull %invocation-history-frame)
  ret { {}*, i64 } %19
}

; Function Attrs: uwtable
define internal void @RUN-ALL.5() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !115 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-*MAKE-SPECIAL", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CORE, i64 0, i64 0))
  %"CONTAB[3]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 3), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 2, {}* %"CONTAB[3]*")
  %"CONTAB[1]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 1), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 0, {}* %"CONTAB[1]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-SCH_ZEITADT_TESTEN, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-COMMON-LISP-USER, i64 0, i64 0))
  %"CONTAB[7]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 7), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 6, {}* %"CONTAB[7]*")
  %"CONTAB[5]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 5), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 4, {}* %"CONTAB[5]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-BOUNDP, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-COMMON-LISP, i64 0, i64 0))
  %"CONTAB[11]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 11), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 10, {}* %"CONTAB[11]*")
  %"CONTAB[9]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 9), align 8
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 8, {}* %"CONTAB[9]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_nil({ i8*, i8*, i64 }* nonnull @constants-table, i64 12)
  tail call void @ltvc_make_t({ i8*, i8*, i64 }* nonnull @constants-table, i64 13)
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TOP-LEVEL, i64 0, i64 0))
  %"CONTAB[15]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 15), align 8
  %"CONTAB[2]*1" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 14, {}* %"CONTAB[15]*", {}* %"CONTAB[2]*1")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^2^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-zeitbitanwendung.lisp^2^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 17, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-YAS=HAT_OBJEKT_SLOT_P", i64 0, i64 0))
  %"CONTAB[17]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 17), align 8
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 16, {}* %"CONTAB[17]*", {}* %"CONTAB[6]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-KLASSE, i64 0, i64 0))
  %"CONTAB[19]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 19), align 8
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 18, {}* %"CONTAB[19]*", {}* %"CONTAB[6]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 21, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-BELEGTE_ZEITEN_ADT, i64 0, i64 0))
  %"CONTAB[21]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 21), align 8
  %"CONTAB[6]*4" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 20, {}* %"CONTAB[21]*", {}* %"CONTAB[6]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-YAS=NEUER_SLOT", i64 0, i64 0))
  %"CONTAB[23]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 23), align 8
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 22, {}* %"CONTAB[23]*", {}* %"CONTAB[6]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-INFORMANT, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-KEYWORD, i64 0, i64 0))
  %"CONTAB[27]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 27), align 8
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 26, {}* %"CONTAB[27]*")
  %"CONTAB[25]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 25), align 8
  %"CONTAB[26]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 26), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 24, {}* %"CONTAB[25]*", {}* %"CONTAB[26]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-EINGABE, i64 0, i64 0))
  %"CONTAB[29]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 29), align 8
  %"CONTAB[6]*6" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 28, {}* %"CONTAB[29]*", {}* %"CONTAB[6]*6")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^5^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-zeitbitanwendung.lisp^5^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LEHRER, i64 0, i64 0))
  %"CONTAB[31]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 31), align 8
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 30, {}* %"CONTAB[31]*", {}* %"CONTAB[6]*7")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^7^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-zeitbitanwendung.lisp^7^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-RAUM, i64 0, i64 0))
  %"CONTAB[33]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 33), align 8
  %"CONTAB[6]*8" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 32, {}* %"CONTAB[33]*", {}* %"CONTAB[6]*8")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^9^TOP-COMPILE-FILE", i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"str-zeitbitanwendung.lisp^9^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-BLOCKUNG, i64 0, i64 0))
  %"CONTAB[35]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 35), align 8
  %"CONTAB[6]*9" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 34, {}* %"CONTAB[35]*", {}* %"CONTAB[6]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 37, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str-STATISCH_AUSGESCHLOSSENE_ZEITEN_ZEITADT, i64 0, i64 0))
  %"CONTAB[37]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 37), align 8
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 36, {}* %"CONTAB[37]*", {}* %"CONTAB[6]*10")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^11^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^11^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"str-YAS=ALLE", i64 0, i64 0))
  %"CONTAB[39]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 39), align 8
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 38, {}* %"CONTAB[39]*", {}* %"CONTAB[6]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-ZEIT, i64 0, i64 0))
  %"CONTAB[41]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 41), align 8
  %"CONTAB[6]*12" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 40, {}* %"CONTAB[41]*", {}* %"CONTAB[6]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-CONS, i64 0, i64 0))
  %"CONTAB[43]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 43), align 8
  %"CONTAB[10]*13" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 42, {}* %"CONTAB[43]*", {}* %"CONTAB[10]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-VECTOR, i64 0, i64 0))
  %"CONTAB[45]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 45), align 8
  %"CONTAB[10]*14" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 44, {}* %"CONTAB[45]*", {}* %"CONTAB[10]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-NULL, i64 0, i64 0))
  %"CONTAB[47]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 47), align 8
  %"CONTAB[10]*15" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 46, {}* %"CONTAB[47]*", {}* %"CONTAB[10]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 49, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-ETYPECASE-ERROR, i64 0, i64 0))
  %"CONTAB[49]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 49), align 8
  %"CONTAB[2]*16" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 48, {}* %"CONTAB[49]*", {}* %"CONTAB[2]*16")
  %"CONTAB[42]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[44]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 44), align 16
  %"CONTAB[46]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 50, i64 3, {}* %"CONTAB[42]*", {}* %"CONTAB[44]*", {}* %"CONTAB[46]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ERROR, i64 0, i64 0))
  %"CONTAB[52]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 52), align 16
  %"CONTAB[10]*17" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 51, {}* %"CONTAB[52]*", {}* %"CONTAB[10]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 54, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-TYPE-ERROR, i64 0, i64 0))
  %"CONTAB[54]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 54), align 16
  %"CONTAB[10]*18" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 53, {}* %"CONTAB[54]*", {}* %"CONTAB[10]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-DATUM, i64 0, i64 0))
  %"CONTAB[56]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 56), align 16
  %"CONTAB[26]*19" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 26), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 55, {}* %"CONTAB[56]*", {}* %"CONTAB[26]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 58, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-EXPECTED-TYPE, i64 0, i64 0))
  %"CONTAB[58]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 58), align 16
  %"CONTAB[26]*20" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 26), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 57, {}* %"CONTAB[58]*", {}* %"CONTAB[26]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-LIST, i64 0, i64 0))
  %"CONTAB[60]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 60), align 16
  %"CONTAB[10]*21" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 59, {}* %"CONTAB[60]*", {}* %"CONTAB[10]*21")
  %"CONTAB[42]*22" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[46]*23" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 61, i64 2, {}* %"CONTAB[42]*22", {}* %"CONTAB[46]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 63, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-FIXNUM, i64 0, i64 0))
  %"CONTAB[63]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 63), align 8
  %"CONTAB[10]*24" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 62, {}* %"CONTAB[63]*", {}* %"CONTAB[10]*24")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 65, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-SINGLE-FLOAT, i64 0, i64 0))
  %"CONTAB[65]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 65), align 8
  %"CONTAB[10]*25" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 64, {}* %"CONTAB[65]*", {}* %"CONTAB[10]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 67, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-DOUBLE-FLOAT, i64 0, i64 0))
  %"CONTAB[67]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 67), align 8
  %"CONTAB[10]*26" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 66, {}* %"CONTAB[67]*", {}* %"CONTAB[10]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 69, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str-CONVERT-OVERFLOW-RESULT-TO-BIGNUM, i64 0, i64 0))
  %"CONTAB[69]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 69), align 8
  %"CONTAB[2]*27" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 68, {}* %"CONTAB[69]*", {}* %"CONTAB[2]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 71, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-+", i64 0, i64 0))
  %"CONTAB[71]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 71), align 8
  %"CONTAB[2]*28" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 70, {}* %"CONTAB[71]*", {}* %"CONTAB[2]*28")
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 72, i64 3, {}* %"CONTAB[18]*", {}* %"CONTAB[30]*", {}* %"CONTAB[32]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 74, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-YAS=SCHREIBE_WERT", i64 0, i64 0))
  %"CONTAB[74]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 74), align 16
  %"CONTAB[6]*29" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 73, {}* %"CONTAB[74]*", {}* %"CONTAB[6]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 76, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-SCH=MERKE_ZEITEN", i64 0, i64 0))
  %"CONTAB[76]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 76), align 16
  %"CONTAB[6]*30" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 75, {}* %"CONTAB[76]*", {}* %"CONTAB[6]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 78, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"str-SCH=ERZEUGE_LEEREN_ZEITEN_ADT", i64 0, i64 0))
  %"CONTAB[78]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 78), align 16
  %"CONTAB[6]*31" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 77, {}* %"CONTAB[78]*", {}* %"CONTAB[6]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 80, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-YAS=LESE_WERT", i64 0, i64 0))
  %"CONTAB[80]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 80), align 16
  %"CONTAB[6]*32" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 79, {}* %"CONTAB[80]*", {}* %"CONTAB[6]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 82, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-BELEGTE_ZEITEN, i64 0, i64 0))
  %"CONTAB[82]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 82), align 16
  %"CONTAB[6]*33" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 81, {}* %"CONTAB[82]*", {}* %"CONTAB[6]*33")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 84, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-VORSCHLAG, i64 0, i64 0))
  %"CONTAB[84]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 84), align 16
  %"CONTAB[6]*34" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 83, {}* %"CONTAB[84]*", {}* %"CONTAB[6]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 86, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-FDEFINITION, i64 0, i64 0))
  %"CONTAB[86]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 86), align 16
  %"CONTAB[10]*35" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 85, {}* %"CONTAB[86]*", {}* %"CONTAB[10]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-FUNCTION, i64 0, i64 0))
  %"CONTAB[88]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 88), align 16
  %"CONTAB[10]*36" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 87, {}* %"CONTAB[88]*", {}* %"CONTAB[10]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 90, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SYMBOL, i64 0, i64 0))
  %"CONTAB[90]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 90), align 16
  %"CONTAB[10]*37" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 89, {}* %"CONTAB[90]*", {}* %"CONTAB[10]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 92, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SYMBOL-FUNCTION, i64 0, i64 0))
  %"CONTAB[92]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 92), align 16
  %"CONTAB[10]*38" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 91, {}* %"CONTAB[92]*", {}* %"CONTAB[10]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 95, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-OR, i64 0, i64 0))
  %"CONTAB[95]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 95), align 8
  %"CONTAB[10]*39" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 94, {}* %"CONTAB[95]*", {}* %"CONTAB[10]*39")
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 93, i64 3, {}* %"CONTAB[94]*", {}* %"CONTAB[89]*", {}* %"CONTAB[87]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-V2, i64 0, i64 0))
  %"CONTAB[97]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 97), align 8
  %"CONTAB[6]*40" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 96, {}* %"CONTAB[97]*", {}* %"CONTAB[6]*40")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 99, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SETF-LAMBDA-LIST, i64 0, i64 0))
  %"CONTAB[99]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 99), align 8
  %"CONTAB[2]*41" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 98, {}* %"CONTAB[99]*", {}* %"CONTAB[2]*41")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 101, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-SET-SOURCE-INFO, i64 0, i64 0))
  %"CONTAB[101]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 101), align 8
  %"CONTAB[2]*42" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 100, {}* %"CONTAB[101]*", {}* %"CONTAB[2]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 104, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str-CURRENT-SOURCE-FILE, i64 0, i64 0))
  %"CONTAB[104]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 104), align 16
  %"CONTAB[2]*43" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 103, {}* %"CONTAB[104]*", {}* %"CONTAB[2]*43")
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 102, i64 4, {}* %"CONTAB[103]*", {}* inttoptr (i64 2528 to {}*), {}* inttoptr (i64 56 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 106, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"str-*CURRENT-FORM-LINENO*", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 108, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-COMPILER, i64 0, i64 0))
  %"CONTAB[108]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 108), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 107, {}* %"CONTAB[108]*")
  %"CONTAB[106]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 106), align 16
  %"CONTAB[107]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 107), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 105, {}* %"CONTAB[106]*", {}* %"CONTAB[107]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 110, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-ARRAY-RANK, i64 0, i64 0))
  %"CONTAB[110]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 110), align 16
  %"CONTAB[10]*44" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 109, {}* %"CONTAB[110]*", {}* %"CONTAB[10]*44")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^14^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^14^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[18]*45" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %"CONTAB[30]*46" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %"CONTAB[32]*47" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 111, i64 3, {}* %"CONTAB[18]*45", {}* %"CONTAB[30]*46", {}* %"CONTAB[32]*47")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 113, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-SCH=KORREKTE_ZEITLISTE_1", i64 0, i64 0))
  %"CONTAB[113]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 113), align 8
  %"CONTAB[6]*48" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 112, {}* %"CONTAB[113]*", {}* %"CONTAB[6]*48")
  %"CONTAB[94]*49" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*50" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*51" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 114, i64 3, {}* %"CONTAB[94]*49", {}* %"CONTAB[89]*50", {}* %"CONTAB[87]*51")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-V21, i64 0, i64 0))
  %"CONTAB[116]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 116), align 16
  %"CONTAB[6]*52" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 115, {}* %"CONTAB[116]*", {}* %"CONTAB[6]*52")
  %"CONTAB[103]*53" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 117, i64 4, {}* %"CONTAB[103]*53", {}* inttoptr (i64 4436 to {}*), {}* inttoptr (i64 100 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^25^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^25^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[42]*54" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[44]*55" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 44), align 16
  %"CONTAB[46]*56" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 118, i64 3, {}* %"CONTAB[42]*54", {}* %"CONTAB[44]*55", {}* %"CONTAB[46]*56")
  %"CONTAB[42]*57" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[46]*58" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 119, i64 2, {}* %"CONTAB[42]*57", {}* %"CONTAB[46]*58")
  %"CONTAB[18]*59" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %"CONTAB[30]*60" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %"CONTAB[32]*61" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 120, i64 3, {}* %"CONTAB[18]*59", {}* %"CONTAB[30]*60", {}* %"CONTAB[32]*61")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 122, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-ARRAY, i64 0, i64 0))
  %"CONTAB[122]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 122), align 16
  %"CONTAB[10]*62" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 121, {}* %"CONTAB[122]*", {}* %"CONTAB[10]*62")
  %"CONTAB[94]*63" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*64" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*65" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 123, i64 3, {}* %"CONTAB[94]*63", {}* %"CONTAB[89]*64", {}* %"CONTAB[87]*65")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 125, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"str-SCH=ERZEUGE_LEEREN_ZEITADT", i64 0, i64 0))
  %"CONTAB[125]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 125), align 8
  %"CONTAB[6]*66" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 124, {}* %"CONTAB[125]*", {}* %"CONTAB[6]*66")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 128, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-&OPTIONAL", i64 0, i64 0))
  %"CONTAB[128]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 128), align 16
  %"CONTAB[10]*67" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 127, {}* %"CONTAB[128]*", {}* %"CONTAB[10]*67")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 131, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-TESTEN, i64 0, i64 0))
  %"CONTAB[131]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 131), align 8
  %"CONTAB[6]*68" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 130, {}* %"CONTAB[131]*", {}* %"CONTAB[6]*68")
  %"CONTAB[130]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 130), align 16
  %"CONTAB[13]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 129, i64 2, {}* %"CONTAB[130]*", {}* %"CONTAB[13]*")
  %"CONTAB[127]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 127), align 8
  %"CONTAB[129]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 129), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 126, i64 2, {}* %"CONTAB[127]*", {}* %"CONTAB[129]*")
  %"CONTAB[103]*69" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 132, i64 4, {}* %"CONTAB[103]*69", {}* inttoptr (i64 5956 to {}*), {}* inttoptr (i64 140 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[130]*70" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 130), align 16
  %"CONTAB[13]*71" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 13), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 134, i64 2, {}* %"CONTAB[130]*70", {}* %"CONTAB[13]*71")
  %"CONTAB[127]*72" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 127), align 8
  %"CONTAB[134]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 134), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 133, i64 2, {}* %"CONTAB[127]*72", {}* %"CONTAB[134]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^35^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^35^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 136, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"str-SCH=BERECHNE_STATISCH_AUSGESCHLOSSENE_ZEITEN_2", i64 0, i64 0))
  %"CONTAB[136]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 136), align 16
  %"CONTAB[6]*73" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 135, {}* %"CONTAB[136]*", {}* %"CONTAB[6]*73")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 138, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-BETEILIGTE_OBJEKTE, i64 0, i64 0))
  %"CONTAB[138]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 138), align 16
  %"CONTAB[6]*74" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 137, {}* %"CONTAB[138]*", {}* %"CONTAB[6]*74")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 140, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-APPEND, i64 0, i64 0))
  %"CONTAB[140]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 140), align 16
  %"CONTAB[10]*75" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 139, {}* %"CONTAB[140]*", {}* %"CONTAB[10]*75")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 142, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str-SCH-KLASSEN_EINER_BLOCKUNG_DYNAMISCH, i64 0, i64 0))
  %"CONTAB[142]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 142), align 16
  %"CONTAB[6]*76" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 141, {}* %"CONTAB[142]*", {}* %"CONTAB[6]*76")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 144, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str-SCH-LEHRER_EINER_BLOCKUNG_DYNAMISCH, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind
declare void @ltvc_make_base_string({ i8*, i8*, i64 }*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_package({ i8*, i8*, i64 }*, i64, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_symbol({ i8*, i8*, i64 }*, i64, {}*, {}*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_nil({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @ltvc_make_t({ i8*, i8*, i64 }*, i64) local_unnamed_addr #1

declare void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @ltvc_make_list({ i8*, i8*, i64 }*, i64, i64, ...) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @RUN-ALL.6() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !116 {
entry:
  %"CONTAB[144]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 144), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 143, {}* %"CONTAB[144]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 146, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str-SCH-RAEUME_EINER_BLOCKUNG_DYNAMISCH, i64 0, i64 0))
  %"CONTAB[146]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 146), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 145, {}* %"CONTAB[146]*", {}* %"CONTAB[6]*1")
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 147, i64 3, {}* %"CONTAB[94]*", {}* %"CONTAB[89]*", {}* %"CONTAB[87]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 149, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-V3, i64 0, i64 0))
  %"CONTAB[149]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 149), align 8
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 148, {}* %"CONTAB[149]*", {}* %"CONTAB[6]*2")
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 150, i64 4, {}* %"CONTAB[103]*", {}* inttoptr (i64 7904 to {}*), {}* inttoptr (i64 180 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^45^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^45^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 152, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str-STATISCH_AUSGESCHLOSSENE_ZEITEN, i64 0, i64 0))
  %"CONTAB[152]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 152), align 16
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 151, {}* %"CONTAB[152]*", {}* %"CONTAB[6]*3")
  %"CONTAB[94]*4" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*5" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*6" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 153, i64 3, {}* %"CONTAB[94]*4", {}* %"CONTAB[89]*5", {}* %"CONTAB[87]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 155, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-V31, i64 0, i64 0))
  %"CONTAB[155]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 155), align 8
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 154, {}* %"CONTAB[155]*", {}* %"CONTAB[6]*7")
  %"CONTAB[103]*8" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 156, i64 4, {}* %"CONTAB[103]*8", {}* inttoptr (i64 10796 to {}*), {}* inttoptr (i64 240 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^60^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^60^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 158, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-B=MENGEN-GLEICH-P", i64 0, i64 0))
  %"CONTAB[158]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 158), align 16
  %"CONTAB[6]*9" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 157, {}* %"CONTAB[158]*", {}* %"CONTAB[6]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-PRINT, i64 0, i64 0))
  %"CONTAB[160]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 160), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 159, {}* %"CONTAB[160]*", {}* %"CONTAB[10]*")
  %"CONTAB[94]*10" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*11" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*12" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 161, i64 3, {}* %"CONTAB[94]*10", {}* %"CONTAB[89]*11", {}* %"CONTAB[87]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 163, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-KONSISTENZ_TEST_BLOCKUNG, i64 0, i64 0))
  %"CONTAB[163]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 163), align 8
  %"CONTAB[6]*13" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 162, {}* %"CONTAB[163]*", {}* %"CONTAB[6]*13")
  %"CONTAB[103]*14" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 164, i64 4, {}* %"CONTAB[103]*14", {}* inttoptr (i64 12392 to {}*), {}* inttoptr (i64 284 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^71^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^71^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 165, i64 3, {}* %"CONTAB[18]*", {}* %"CONTAB[30]*", {}* %"CONTAB[32]*")
  %"CONTAB[94]*15" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*16" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*17" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 166, i64 3, {}* %"CONTAB[94]*15", {}* %"CONTAB[89]*16", {}* %"CONTAB[87]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 168, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str-KONSISTENZ_TEST_OBJEKTE, i64 0, i64 0))
  %"CONTAB[168]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 168), align 16
  %"CONTAB[6]*18" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 167, {}* %"CONTAB[168]*", {}* %"CONTAB[6]*18")
  %"CONTAB[103]*19" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 169, i64 4, {}* %"CONTAB[103]*19", {}* inttoptr (i64 13504 to {}*), {}* inttoptr (i64 312 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^78^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^78^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 171, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-SCH_GESESETZE_MERKEN, i64 0, i64 0))
  %"CONTAB[171]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 171), align 8
  %"CONTAB[6]*20" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 170, {}* %"CONTAB[171]*", {}* %"CONTAB[6]*20")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^89^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^89^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 173, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str-SCH_ZEITLISTEN-BENUTZEN, i64 0, i64 0))
  %"CONTAB[173]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 173), align 8
  %"CONTAB[6]*21" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 172, {}* %"CONTAB[173]*", {}* %"CONTAB[6]*21")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^91^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^91^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 175, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str-SCH_ZEITADTS-BENUTZEN, i64 0, i64 0))
  %"CONTAB[175]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 175), align 8
  %"CONTAB[6]*22" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 174, {}* %"CONTAB[175]*", {}* %"CONTAB[6]*22")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^92^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^92^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 177, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN_ALT", i64 0, i64 0))
  %"CONTAB[177]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 177), align 8
  %"CONTAB[6]*23" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 176, {}* %"CONTAB[177]*", {}* %"CONTAB[6]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 179, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN_NEU", i64 0, i64 0))
  %"CONTAB[179]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 179), align 8
  %"CONTAB[6]*24" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 178, {}* %"CONTAB[179]*", {}* %"CONTAB[6]*24")
  %"CONTAB[94]*25" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*26" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*27" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 180, i64 3, {}* %"CONTAB[94]*25", {}* %"CONTAB[89]*26", {}* %"CONTAB[87]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 182, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"str-SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN", i64 0, i64 0))
  %"CONTAB[182]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 182), align 16
  %"CONTAB[6]*28" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 181, {}* %"CONTAB[182]*", {}* %"CONTAB[6]*28")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 185, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-BLOCKUNG_EINHEIT, i64 0, i64 0))
  %"CONTAB[185]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 185), align 8
  %"CONTAB[6]*29" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 184, {}* %"CONTAB[185]*", {}* %"CONTAB[6]*29")
  %"CONTAB[184]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 184), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 183, i64 1, {}* %"CONTAB[184]*")
  %"CONTAB[103]*30" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 186, i64 4, {}* %"CONTAB[103]*30", {}* inttoptr (i64 16052 to {}*), {}* inttoptr (i64 392 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[184]*31" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 184), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 187, i64 1, {}* %"CONTAB[184]*31")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^94^TOP-COMPILE-FILE", i8* getelementptr inbounds ([42 x i8], [42 x i8]* @"str-zeitbitanwendung.lisp^94^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 189, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @"str-SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER_ALT", i64 0, i64 0))
  %"CONTAB[189]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 189), align 8
  %"CONTAB[6]*32" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 188, {}* %"CONTAB[189]*", {}* %"CONTAB[6]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 191, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @"str-SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER_NEU", i64 0, i64 0))
  %"CONTAB[191]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 191), align 8
  %"CONTAB[6]*33" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 190, {}* %"CONTAB[191]*", {}* %"CONTAB[6]*33")
  %"CONTAB[94]*34" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*35" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*36" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 192, i64 3, {}* %"CONTAB[94]*34", {}* %"CONTAB[89]*35", {}* %"CONTAB[87]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 194, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @"str-SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER", i64 0, i64 0))
  %"CONTAB[194]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 194), align 16
  %"CONTAB[6]*37" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 193, {}* %"CONTAB[194]*", {}* %"CONTAB[6]*37")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 197, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str-AUSNAHMEBLOCKUNGEINHEIT, i64 0, i64 0))
  %"CONTAB[197]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 197), align 8
  %"CONTAB[6]*38" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 196, {}* %"CONTAB[197]*", {}* %"CONTAB[6]*38")
  %"CONTAB[34]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 34), align 16
  %"CONTAB[196]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 196), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 195, i64 2, {}* %"CONTAB[34]*", {}* %"CONTAB[196]*")
  %"CONTAB[103]*39" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 198, i64 4, {}* %"CONTAB[103]*39", {}* inttoptr (i64 16932 to {}*), {}* inttoptr (i64 416 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[34]*40" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 34), align 16
  %"CONTAB[196]*41" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 196), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 199, i64 2, {}* %"CONTAB[34]*40", {}* %"CONTAB[196]*41")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^104^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^104^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 201, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-SCH=BERECHNE_TAGE", i64 0, i64 0))
  %"CONTAB[201]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 201), align 8
  %"CONTAB[6]*42" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 200, {}* %"CONTAB[201]*", {}* %"CONTAB[6]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 203, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-SCH=BERECHNE_TAGE_2", i64 0, i64 0))
  %"CONTAB[203]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 203), align 8
  %"CONTAB[6]*43" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 202, {}* %"CONTAB[203]*", {}* %"CONTAB[6]*43")
  %"CONTAB[94]*44" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*45" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*46" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 204, i64 3, {}* %"CONTAB[94]*44", {}* %"CONTAB[89]*45", {}* %"CONTAB[87]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 206, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-SCH=BERECHNE_BELEGTE_TAGE", i64 0, i64 0))
  %"CONTAB[206]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 206), align 16
  %"CONTAB[6]*47" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 205, {}* %"CONTAB[206]*", {}* %"CONTAB[6]*47")
  %"CONTAB[30]*48" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 207, i64 1, {}* %"CONTAB[30]*48")
  %"CONTAB[103]*49" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 208, i64 4, {}* %"CONTAB[103]*49", {}* inttoptr (i64 18224 to {}*), {}* inttoptr (i64 436 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[30]*50" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 209, i64 1, {}* %"CONTAB[30]*50")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^109^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^109^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.7() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !117 {
entry:
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 211, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"str-SCH=BE_STATISCHER_SCHLUESSEL_ALT", i64 0, i64 0))
  %"CONTAB[211]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 211), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 210, {}* %"CONTAB[211]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 213, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"str-SCH=BE_STATISCHER_SCHLUESSEL_NEU", i64 0, i64 0))
  %"CONTAB[213]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 213), align 8
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 212, {}* %"CONTAB[213]*", {}* %"CONTAB[6]*1")
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 214, i64 3, {}* %"CONTAB[94]*", {}* %"CONTAB[89]*", {}* %"CONTAB[87]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 216, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-SCH=BE_STATISCHER_SCHLUESSEL", i64 0, i64 0))
  %"CONTAB[216]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 216), align 16
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 215, {}* %"CONTAB[216]*", {}* %"CONTAB[6]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 219, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str-BE, i64 0, i64 0))
  %"CONTAB[219]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 219), align 8
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 218, {}* %"CONTAB[219]*", {}* %"CONTAB[6]*3")
  %"CONTAB[218]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 217, i64 1, {}* %"CONTAB[218]*")
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 220, i64 4, {}* %"CONTAB[103]*", {}* inttoptr (i64 18996 to {}*), {}* inttoptr (i64 460 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[218]*4" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 221, i64 1, {}* %"CONTAB[218]*4")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^115^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^115^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 223, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-SCH=BE_PRIOS_ALT", i64 0, i64 0))
  %"CONTAB[223]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 223), align 8
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 222, {}* %"CONTAB[223]*", {}* %"CONTAB[6]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 225, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-SCH=BE_PRIOS_NEU", i64 0, i64 0))
  %"CONTAB[225]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 225), align 8
  %"CONTAB[6]*6" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 224, {}* %"CONTAB[225]*", {}* %"CONTAB[6]*6")
  %"CONTAB[94]*7" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*8" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*9" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 226, i64 3, {}* %"CONTAB[94]*7", {}* %"CONTAB[89]*8", {}* %"CONTAB[87]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 228, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"str-SCH=BE_PRIOS", i64 0, i64 0))
  %"CONTAB[228]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 228), align 16
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 227, {}* %"CONTAB[228]*", {}* %"CONTAB[6]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 231, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-PAAR, i64 0, i64 0))
  %"CONTAB[231]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 231), align 8
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 230, {}* %"CONTAB[231]*", {}* %"CONTAB[6]*11")
  %"CONTAB[230]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 230), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 229, i64 1, {}* %"CONTAB[230]*")
  %"CONTAB[103]*12" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 232, i64 4, {}* %"CONTAB[103]*12", {}* inttoptr (i64 19640 to {}*), {}* inttoptr (i64 480 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[230]*13" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 230), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 233, i64 1, {}* %"CONTAB[230]*13")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^120^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^120^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 235, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-SCH=DRINGLICHKEIT", i64 0, i64 0))
  %"CONTAB[235]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 235), align 8
  %"CONTAB[6]*14" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 234, {}* %"CONTAB[235]*", {}* %"CONTAB[6]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 237, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-SCH=DRINGLICHKEIT_2", i64 0, i64 0))
  %"CONTAB[237]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 237), align 8
  %"CONTAB[6]*15" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 236, {}* %"CONTAB[237]*", {}* %"CONTAB[6]*15")
  %"CONTAB[94]*16" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*17" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*18" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 238, i64 3, {}* %"CONTAB[94]*16", {}* %"CONTAB[89]*17", {}* %"CONTAB[87]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 240, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"str-SCH=DRINGLICHKEIT_PRIORITAETEN", i64 0, i64 0))
  %"CONTAB[240]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 240), align 16
  %"CONTAB[6]*19" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 239, {}* %"CONTAB[240]*", {}* %"CONTAB[6]*19")
  %"CONTAB[230]*20" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 230), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 241, i64 1, {}* %"CONTAB[230]*20")
  %"CONTAB[103]*21" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 242, i64 4, {}* %"CONTAB[103]*21", {}* inttoptr (i64 20116 to {}*), {}* inttoptr (i64 500 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[230]*22" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 230), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 243, i64 1, {}* %"CONTAB[230]*22")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^125^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^125^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 245, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"str-SCH=BEREITE_ALLES_VOR_2_ALT", i64 0, i64 0))
  %"CONTAB[245]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 245), align 8
  %"CONTAB[6]*23" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 244, {}* %"CONTAB[245]*", {}* %"CONTAB[6]*23")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 247, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"str-SCH=BEREITE_ALLES_VOR_2_NEU", i64 0, i64 0))
  %"CONTAB[247]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 247), align 8
  %"CONTAB[6]*24" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 246, {}* %"CONTAB[247]*", {}* %"CONTAB[6]*24")
  %"CONTAB[94]*25" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*26" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*27" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 248, i64 3, {}* %"CONTAB[94]*25", {}* %"CONTAB[89]*26", {}* %"CONTAB[87]*27")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 250, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"str-SCH=BEREITE_ALLES_VOR_2", i64 0, i64 0))
  %"CONTAB[250]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 250), align 16
  %"CONTAB[6]*28" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 249, {}* %"CONTAB[250]*", {}* %"CONTAB[6]*28")
  %"CONTAB[103]*29" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 251, i64 4, {}* %"CONTAB[103]*29", {}* inttoptr (i64 20752 to {}*), {}* inttoptr (i64 524 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^131^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^131^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 253, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"str-SCH=VOR_JEDEM_VORSCHLAG_ALT", i64 0, i64 0))
  %"CONTAB[253]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 253), align 8
  %"CONTAB[6]*30" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 252, {}* %"CONTAB[253]*", {}* %"CONTAB[6]*30")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 255, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"str-SCH=VOR_JEDEM_VORSCHLAG_NEU", i64 0, i64 0))
  %"CONTAB[255]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 255), align 8
  %"CONTAB[6]*31" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 254, {}* %"CONTAB[255]*", {}* %"CONTAB[6]*31")
  %"CONTAB[94]*32" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*33" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*34" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 256, i64 3, {}* %"CONTAB[94]*32", {}* %"CONTAB[89]*33", {}* %"CONTAB[87]*34")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 258, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"str-SCH=VOR_JEDEM_VORSCHLAG", i64 0, i64 0))
  %"CONTAB[258]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 258), align 16
  %"CONTAB[6]*35" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 257, {}* %"CONTAB[258]*", {}* %"CONTAB[6]*35")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 261, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str-ATTRIBUT, i64 0, i64 0))
  %"CONTAB[261]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 261), align 8
  %"CONTAB[6]*36" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 260, {}* %"CONTAB[261]*", {}* %"CONTAB[6]*36")
  %"CONTAB[218]*37" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  %"CONTAB[260]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 260), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 259, i64 2, {}* %"CONTAB[218]*37", {}* %"CONTAB[260]*")
  %"CONTAB[103]*38" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 262, i64 4, {}* %"CONTAB[103]*38", {}* inttoptr (i64 21304 to {}*), {}* inttoptr (i64 544 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[218]*39" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  %"CONTAB[260]*40" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 260), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 263, i64 2, {}* %"CONTAB[218]*39", {}* %"CONTAB[260]*40")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^136^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^136^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 265, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-NAECHSTE_ZEIT, i64 0, i64 0))
  %"CONTAB[265]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 265), align 8
  %"CONTAB[6]*41" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 264, {}* %"CONTAB[265]*", {}* %"CONTAB[6]*41")
  %"CONTAB[94]*42" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*43" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*44" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 266, i64 3, {}* %"CONTAB[94]*42", {}* %"CONTAB[89]*43", {}* %"CONTAB[87]*44")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 268, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"str-SCH=NAECHSTE_ZEIT", i64 0, i64 0))
  %"CONTAB[268]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 268), align 16
  %"CONTAB[6]*45" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 267, {}* %"CONTAB[268]*", {}* %"CONTAB[6]*45")
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 269, i64 1, {}* %"CONTAB[40]*")
  %"CONTAB[103]*46" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 270, i64 4, {}* %"CONTAB[103]*46", {}* inttoptr (i64 22208 to {}*), {}* inttoptr (i64 568 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 272, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-SET-DOCUMENTATION, i64 0, i64 0))
  %"CONTAB[272]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 272), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 271, {}* %"CONTAB[272]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 273, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"str-eingabe Tag-_X ausgabe Tag-_X+1 falls vorhanden", i64 0, i64 0))
  %"CONTAB[40]*47" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 274, i64 1, {}* %"CONTAB[40]*47")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^141^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^141^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 276, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-VORHERIGE_ZEIT, i64 0, i64 0))
  %"CONTAB[276]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 276), align 16
  %"CONTAB[6]*48" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 275, {}* %"CONTAB[276]*", {}* %"CONTAB[6]*48")
  %"CONTAB[94]*49" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*50" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*51" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 277, i64 3, {}* %"CONTAB[94]*49", {}* %"CONTAB[89]*50", {}* %"CONTAB[87]*51")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 279, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-SCH=VORHERIGE_ZEIT", i64 0, i64 0))
  %"CONTAB[279]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 279), align 8
  %"CONTAB[6]*52" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 278, {}* %"CONTAB[279]*", {}* %"CONTAB[6]*52")
  %"CONTAB[40]*53" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 280, i64 1, {}* %"CONTAB[40]*53")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.8() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !118 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.6)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.7)
  ret void
}

declare void @cc_invoke_sub_run_all_function(void ()*) local_unnamed_addr #3

; Function Attrs: uwtable
define internal void @RUN-ALL.9() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !119 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.5)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.8)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.10() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !120 {
entry:
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 281, i64 4, {}* %"CONTAB[103]*", {}* inttoptr (i64 22676 to {}*), {}* inttoptr (i64 584 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 282, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"str-eingabe Tag-_X ausgabe Tag-_X-1 falls vorhanden", i64 0, i64 0))
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 283, i64 1, {}* %"CONTAB[40]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^146^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^146^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 285, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-BLOCKUNG_EINHEITEN, i64 0, i64 0))
  %"CONTAB[285]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 285), align 8
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 284, {}* %"CONTAB[285]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 287, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-MAKE-SEQ-ITERATOR, i64 0, i64 0))
  %"CONTAB[287]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 287), align 8
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 286, {}* %"CONTAB[287]*", {}* %"CONTAB[2]*")
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 288, i64 3, {}* %"CONTAB[94]*", {}* %"CONTAB[89]*", {}* %"CONTAB[87]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 290, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SEQ-ITERATOR-REF, i64 0, i64 0))
  %"CONTAB[290]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 290), align 16
  %"CONTAB[2]*1" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 289, {}* %"CONTAB[290]*", {}* %"CONTAB[2]*1")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 292, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-SEQ-ITERATOR-NEXT, i64 0, i64 0))
  %"CONTAB[292]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 292), align 16
  %"CONTAB[2]*2" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 291, {}* %"CONTAB[292]*", {}* %"CONTAB[2]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 294, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str-SEQ-ITERATOR-ENDP, i64 0, i64 0))
  %"CONTAB[294]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 294), align 16
  %"CONTAB[2]*3" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 293, {}* %"CONTAB[294]*", {}* %"CONTAB[2]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 296, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-SCH=ALLE_LUECKEN_DES_LEHRERS", i64 0, i64 0))
  %"CONTAB[296]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 296), align 16
  %"CONTAB[6]*4" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 295, {}* %"CONTAB[296]*", {}* %"CONTAB[6]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 298, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-CWR=MELDE_CONSTRAINT", i64 0, i64 0))
  %"CONTAB[298]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 298), align 16
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 297, {}* %"CONTAB[298]*", {}* %"CONTAB[6]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 300, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-C_KLASSE_MAX_HOHLSTUNDEN, i64 0, i64 0))
  %"CONTAB[300]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 300), align 16
  %"CONTAB[6]*6" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 299, {}* %"CONTAB[300]*", {}* %"CONTAB[6]*6")
  %"CONTAB[42]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[44]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 44), align 16
  %"CONTAB[46]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 301, i64 3, {}* %"CONTAB[42]*", {}* %"CONTAB[44]*", {}* %"CONTAB[46]*")
  %"CONTAB[42]*7" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[46]*8" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 302, i64 2, {}* %"CONTAB[42]*7", {}* %"CONTAB[46]*8")
  %"CONTAB[94]*9" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*10" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*11" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 303, i64 3, {}* %"CONTAB[94]*9", {}* %"CONTAB[89]*10", {}* %"CONTAB[87]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 305, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"str-SCH=KLASSEN_LUECKEN_TEST", i64 0, i64 0))
  %"CONTAB[305]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 305), align 8
  %"CONTAB[6]*12" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 304, {}* %"CONTAB[305]*", {}* %"CONTAB[6]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 308, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-SELBST, i64 0, i64 0))
  %"CONTAB[308]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 308), align 16
  %"CONTAB[6]*13" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 307, {}* %"CONTAB[308]*", {}* %"CONTAB[6]*13")
  %"CONTAB[307]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 307), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 306, i64 1, {}* %"CONTAB[307]*")
  %"CONTAB[103]*14" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 309, i64 4, {}* %"CONTAB[103]*14", {}* inttoptr (i64 23276 to {}*), {}* inttoptr (i64 608 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[307]*15" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 307), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 310, i64 1, {}* %"CONTAB[307]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 312, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-LAMBDA, i64 0, i64 0))
  %"CONTAB[312]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 312), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 311, {}* %"CONTAB[312]*", {}* %"CONTAB[10]*")
  %"CONTAB[218]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 313, i64 1, {}* %"CONTAB[218]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^150^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^150^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 315, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str-MAX_ANZAHL_HOHLSTUNDEN, i64 0, i64 0))
  %"CONTAB[315]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 315), align 8
  %"CONTAB[6]*16" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 314, {}* %"CONTAB[315]*", {}* %"CONTAB[6]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 317, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-UNTERRICHT_EINHEITEN, i64 0, i64 0))
  %"CONTAB[317]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 317), align 8
  %"CONTAB[6]*17" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 316, {}* %"CONTAB[317]*", {}* %"CONTAB[6]*17")
  %"CONTAB[94]*18" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*19" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*20" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 318, i64 3, {}* %"CONTAB[94]*18", {}* %"CONTAB[89]*19", {}* %"CONTAB[87]*20")
  %"CONTAB[42]*21" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[44]*22" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 44), align 16
  %"CONTAB[46]*23" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 319, i64 3, {}* %"CONTAB[42]*21", {}* %"CONTAB[44]*22", {}* %"CONTAB[46]*23")
  %"CONTAB[42]*24" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[46]*25" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 320, i64 2, {}* %"CONTAB[42]*24", {}* %"CONTAB[46]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 322, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG->", i64 0, i64 0))
  %"CONTAB[322]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 322), align 16
  %"CONTAB[2]*26" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 321, {}* %"CONTAB[322]*", {}* %"CONTAB[2]*26")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 324, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str-C_LEHRER_MAX_HOHLSTUNDEN_LEHRER, i64 0, i64 0))
  %"CONTAB[324]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 324), align 16
  %"CONTAB[6]*27" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 323, {}* %"CONTAB[324]*", {}* %"CONTAB[6]*27")
  %"CONTAB[42]*28" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[44]*29" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 44), align 16
  %"CONTAB[46]*30" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 325, i64 3, {}* %"CONTAB[42]*28", {}* %"CONTAB[44]*29", {}* %"CONTAB[46]*30")
  %"CONTAB[42]*31" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[46]*32" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 326, i64 2, {}* %"CONTAB[42]*31", {}* %"CONTAB[46]*32")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 328, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str-TWO-ARG--, i64 0, i64 0))
  %"CONTAB[328]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 328), align 16
  %"CONTAB[2]*33" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 327, {}* %"CONTAB[328]*", {}* %"CONTAB[2]*33")
  %"CONTAB[94]*34" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*35" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*36" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 329, i64 3, {}* %"CONTAB[94]*34", {}* %"CONTAB[89]*35", {}* %"CONTAB[87]*36")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 331, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"str-SCH=LEHRER_LUECKEN_TEST", i64 0, i64 0))
  %"CONTAB[331]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 331), align 8
  %"CONTAB[6]*37" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 330, {}* %"CONTAB[331]*", {}* %"CONTAB[6]*37")
  %"CONTAB[307]*38" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 307), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 332, i64 1, {}* %"CONTAB[307]*38")
  %"CONTAB[103]*39" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 333, i64 4, {}* %"CONTAB[103]*39", {}* inttoptr (i64 24852 to {}*), {}* inttoptr (i64 644 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 335, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-NUMBER, i64 0, i64 0))
  %"CONTAB[335]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 335), align 8
  %"CONTAB[10]*40" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 334, {}* %"CONTAB[335]*", {}* %"CONTAB[10]*40")
  %"CONTAB[307]*41" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 307), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 336, i64 1, {}* %"CONTAB[307]*41")
  %"CONTAB[218]*42" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 337, i64 1, {}* %"CONTAB[218]*42")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^161^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^161^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 339, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-REMOVE-IF-NOT, i64 0, i64 0))
  %"CONTAB[339]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 339), align 8
  %"CONTAB[10]*43" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 338, {}* %"CONTAB[339]*", {}* %"CONTAB[10]*43")
  %"CONTAB[94]*44" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*45" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*46" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 340, i64 3, {}* %"CONTAB[94]*44", {}* %"CONTAB[89]*45", {}* %"CONTAB[87]*46")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 342, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str-SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE", i64 0, i64 0))
  %"CONTAB[342]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 342), align 16
  %"CONTAB[6]*47" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 341, {}* %"CONTAB[342]*", {}* %"CONTAB[6]*47")
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 343, i64 1, {}* %"CONTAB[18]*")
  %"CONTAB[103]*48" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 344, i64 4, {}* %"CONTAB[103]*48", {}* inttoptr (i64 26984 to {}*), {}* inttoptr (i64 688 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[18]*49" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 345, i64 1, {}* %"CONTAB[18]*49")
  %"CONTAB[218]*50" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 346, i64 1, {}* %"CONTAB[218]*50")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^172^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^172^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 348, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-SET-DIFFERENCE, i64 0, i64 0))
  %"CONTAB[348]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 348), align 16
  %"CONTAB[10]*51" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 347, {}* %"CONTAB[348]*", {}* %"CONTAB[10]*51")
  %"CONTAB[94]*52" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*53" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*54" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 349, i64 3, {}* %"CONTAB[94]*52", {}* %"CONTAB[89]*53", {}* %"CONTAB[87]*54")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 351, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str-SCH=FREIE_BLOCKUNGEN_DER_KLASSE", i64 0, i64 0))
  %"CONTAB[351]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 351), align 8
  %"CONTAB[6]*55" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 350, {}* %"CONTAB[351]*", {}* %"CONTAB[6]*55")
  %"CONTAB[18]*56" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 352, i64 1, {}* %"CONTAB[18]*56")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.11() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !121 {
entry:
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 353, i64 4, {}* %"CONTAB[103]*", {}* inttoptr (i64 27764 to {}*), {}* inttoptr (i64 712 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 354, i64 1, {}* %"CONTAB[18]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^178^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^178^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 356, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str-EQ-INCOMPARABLE, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 358, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str-CLASP-CLEAVIR, i64 0, i64 0))
  %"CONTAB[358]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 358), align 16
  tail call void @ltvc_make_package({ i8*, i8*, i64 }* nonnull @constants-table, i64 357, {}* %"CONTAB[358]*")
  %"CONTAB[356]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 356), align 16
  %"CONTAB[357]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 357), align 8
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 355, {}* %"CONTAB[356]*", {}* %"CONTAB[357]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 360, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-EQL-UNDERLYING, i64 0, i64 0))
  %"CONTAB[360]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 360), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 359, {}* %"CONTAB[360]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 362, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-CERROR, i64 0, i64 0))
  %"CONTAB[362]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 362), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 361, {}* %"CONTAB[362]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 363, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 364, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-slot ~A kann nicht behandelt werden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 366, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-INSTANZ_VON, i64 0, i64 0))
  %"CONTAB[366]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 366), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 365, {}* %"CONTAB[366]*", {}* %"CONTAB[6]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 368, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-UNTERRICHT_EINHEIT, i64 0, i64 0))
  %"CONTAB[368]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 368), align 16
  %"CONTAB[6]*1" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 367, {}* %"CONTAB[368]*", {}* %"CONTAB[6]*1")
  %"CONTAB[18]*2" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 369, i64 3, {}* %"CONTAB[18]*2", {}* %"CONTAB[32]*", {}* %"CONTAB[30]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 370, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 371, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-Objekt ~A kann nicht behandelt werden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 373, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"str-YAS=TUE_METHODE", i64 0, i64 0))
  %"CONTAB[373]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 373), align 8
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 372, {}* %"CONTAB[373]*", {}* %"CONTAB[6]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 375, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-WERT_SETZEN, i64 0, i64 0))
  %"CONTAB[375]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 375), align 8
  %"CONTAB[6]*4" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 374, {}* %"CONTAB[375]*", {}* %"CONTAB[6]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 377, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str-PROPAGIERT, i64 0, i64 0))
  %"CONTAB[377]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 377), align 8
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 376, {}* %"CONTAB[377]*", {}* %"CONTAB[6]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 379, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"str-SCH=BLOCKUNG_MEHRFACH_P", i64 0, i64 0))
  %"CONTAB[379]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 379), align 8
  %"CONTAB[6]*6" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 378, {}* %"CONTAB[379]*", {}* %"CONTAB[6]*6")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 381, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"str-SCH=ALLE_ZEITEN_EINER_BLOCKUNG_EINHEIT", i64 0, i64 0))
  %"CONTAB[381]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 381), align 8
  %"CONTAB[6]*7" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 380, {}* %"CONTAB[381]*", {}* %"CONTAB[6]*7")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 383, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-MEHRSTUENDIG, i64 0, i64 0))
  %"CONTAB[383]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 383), align 8
  %"CONTAB[6]*8" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 382, {}* %"CONTAB[383]*", {}* %"CONTAB[6]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 384, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 385, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-slot ~A kann nicht behandelt werden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 386, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 387, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-Objekt ~A kann nicht behandelt werden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 389, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str-SCH-SETZE-RAUM, i64 0, i64 0))
  %"CONTAB[389]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 389), align 8
  %"CONTAB[6]*9" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 388, {}* %"CONTAB[389]*", {}* %"CONTAB[6]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 391, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str-WERT_SETZEN_OHNE_SPEICHERN, i64 0, i64 0))
  %"CONTAB[391]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 391), align 8
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 390, {}* %"CONTAB[391]*", {}* %"CONTAB[6]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 393, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str-VERGEBENE_UNTERRICHT_EINHEITEN, i64 0, i64 0))
  %"CONTAB[393]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 393), align 8
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 392, {}* %"CONTAB[393]*", {}* %"CONTAB[6]*11")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 395, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"str-SCH=EINZEL_BEHANDLUNG_MERKEN", i64 0, i64 0))
  %"CONTAB[395]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 395), align 8
  %"CONTAB[6]*12" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 394, {}* %"CONTAB[395]*", {}* %"CONTAB[6]*12")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 397, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @"str-SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN", i64 0, i64 0))
  %"CONTAB[397]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 397), align 8
  %"CONTAB[6]*13" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 396, {}* %"CONTAB[397]*", {}* %"CONTAB[6]*13")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 399, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-TAG, i64 0, i64 0))
  %"CONTAB[399]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 399), align 8
  %"CONTAB[6]*14" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 398, {}* %"CONTAB[399]*", {}* %"CONTAB[6]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 401, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str-BELEGTE_TAGE, i64 0, i64 0))
  %"CONTAB[401]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 401), align 8
  %"CONTAB[6]*15" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 400, {}* %"CONTAB[401]*", {}* %"CONTAB[6]*15")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 403, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str-SCH-NEUEN-TAG-MERKEN, i64 0, i64 0))
  %"CONTAB[403]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 403), align 8
  %"CONTAB[6]*16" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 402, {}* %"CONTAB[403]*", {}* %"CONTAB[6]*16")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 405, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str-GESETZTE_BLOCKUNG_EINHEITEN, i64 0, i64 0))
  %"CONTAB[405]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 405), align 8
  %"CONTAB[6]*17" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 404, {}* %"CONTAB[405]*", {}* %"CONTAB[6]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 406, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 407, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str- ich ~a brauche ~A ~A von ~A nicht", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 409, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str-GESETZTE_UNTERRICHT_EINHEITEN, i64 0, i64 0))
  %"CONTAB[409]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 409), align 8
  %"CONTAB[6]*18" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 408, {}* %"CONTAB[409]*", {}* %"CONTAB[6]*18")
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 410, i64 3, {}* %"CONTAB[94]*", {}* %"CONTAB[89]*", {}* %"CONTAB[87]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 412, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str-SCHULE_PARAMETER_BEKANNT, i64 0, i64 0))
  %"CONTAB[412]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 412), align 16
  %"CONTAB[6]*19" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 411, {}* %"CONTAB[412]*", {}* %"CONTAB[6]*19")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 415, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-ICH, i64 0, i64 0))
  %"CONTAB[415]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 415), align 8
  %"CONTAB[6]*20" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 414, {}* %"CONTAB[415]*", {}* %"CONTAB[6]*20")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 417, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str-VON_WEM, i64 0, i64 0))
  %"CONTAB[417]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 417), align 8
  %"CONTAB[6]*21" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 416, {}* %"CONTAB[417]*", {}* %"CONTAB[6]*21")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 419, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str-WERT, i64 0, i64 0))
  %"CONTAB[419]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 419), align 8
  %"CONTAB[6]*22" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 418, {}* %"CONTAB[419]*", {}* %"CONTAB[6]*22")
  %"CONTAB[414]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[416]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 416), align 16
  %"CONTAB[260]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 260), align 16
  %"CONTAB[418]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 413, i64 4, {}* %"CONTAB[414]*", {}* %"CONTAB[416]*", {}* %"CONTAB[260]*", {}* %"CONTAB[418]*")
  %"CONTAB[103]*23" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 420, i64 4, {}* %"CONTAB[103]*23", {}* inttoptr (i64 31204 to {}*), {}* inttoptr (i64 852 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*24" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[416]*25" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 416), align 16
  %"CONTAB[260]*26" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 260), align 16
  %"CONTAB[418]*27" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 421, i64 4, {}* %"CONTAB[414]*24", {}* %"CONTAB[416]*25", {}* %"CONTAB[260]*26", {}* %"CONTAB[418]*27")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^184^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^184^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[94]*28" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*29" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*30" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 422, i64 3, {}* %"CONTAB[94]*28", {}* %"CONTAB[89]*29", {}* %"CONTAB[87]*30")
  %"CONTAB[414]*31" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[398]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 398), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 423, i64 2, {}* %"CONTAB[414]*31", {}* %"CONTAB[398]*")
  %"CONTAB[103]*32" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 424, i64 4, {}* %"CONTAB[103]*32", {}* inttoptr (i64 47420 to {}*), {}* inttoptr (i64 1244 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*33" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[398]*34" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 398), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 425, i64 2, {}* %"CONTAB[414]*33", {}* %"CONTAB[398]*34")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^311^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^311^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.12() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !122 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.10)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.11)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.13() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !123 {
entry:
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 426, i64 3, {}* %"CONTAB[94]*", {}* %"CONTAB[89]*", {}* %"CONTAB[87]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 428, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str-SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN, i64 0, i64 0))
  %"CONTAB[428]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 428), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 427, {}* %"CONTAB[428]*", {}* %"CONTAB[6]*")
  %"CONTAB[414]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 429, i64 1, {}* %"CONTAB[414]*")
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 430, i64 4, {}* %"CONTAB[103]*", {}* inttoptr (i64 47724 to {}*), {}* inttoptr (i64 1260 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*1" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 431, i64 1, {}* %"CONTAB[414]*1")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^315^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^315^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 432, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 433, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-slot ~A kann nicht behandelt werden", i64 0, i64 0))
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 434, i64 3, {}* %"CONTAB[18]*", {}* %"CONTAB[30]*", {}* %"CONTAB[32]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 435, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 436, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-Objekt ~A kann nicht behandelt werden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 438, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str-WERT_ZURUECKZIEHEN, i64 0, i64 0))
  %"CONTAB[438]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 438), align 16
  %"CONTAB[6]*2" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 437, {}* %"CONTAB[438]*", {}* %"CONTAB[6]*2")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 439, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 440, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"str-slot ~A kann nicht behandelt werden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 441, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 442, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @"str-Objekt ~A kann nicht behandelt werden", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 444, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SCH-LOESCHE-RAUM, i64 0, i64 0))
  %"CONTAB[444]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 444), align 16
  %"CONTAB[6]*3" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 443, {}* %"CONTAB[444]*", {}* %"CONTAB[6]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 446, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-DELETE, i64 0, i64 0))
  %"CONTAB[446]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 446), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 445, {}* %"CONTAB[446]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 448, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"str-SCH=EINZEL_BEHANDLUNG_VERGESSEN", i64 0, i64 0))
  %"CONTAB[448]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 448), align 16
  %"CONTAB[6]*4" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 447, {}* %"CONTAB[448]*", {}* %"CONTAB[6]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 450, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @"str-SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN", i64 0, i64 0))
  %"CONTAB[450]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 450), align 16
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 449, {}* %"CONTAB[450]*", {}* %"CONTAB[6]*5")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 451, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str-, i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 452, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @"str- ich ~a brauche ~A ~A von ~A nicht", i64 0, i64 0))
  %"CONTAB[94]*6" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*7" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*8" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 453, i64 3, {}* %"CONTAB[94]*6", {}* %"CONTAB[89]*7", {}* %"CONTAB[87]*8")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 455, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str-SCHULE_PARAMETER_UNBEKANNT, i64 0, i64 0))
  %"CONTAB[455]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 455), align 8
  %"CONTAB[6]*9" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 454, {}* %"CONTAB[455]*", {}* %"CONTAB[6]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 458, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str-WAS, i64 0, i64 0))
  %"CONTAB[458]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 458), align 16
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 457, {}* %"CONTAB[458]*", {}* %"CONTAB[6]*10")
  %"CONTAB[414]*11" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[416]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 416), align 16
  %"CONTAB[457]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 457), align 8
  %"CONTAB[418]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 456, i64 4, {}* %"CONTAB[414]*11", {}* %"CONTAB[416]*", {}* %"CONTAB[457]*", {}* %"CONTAB[418]*")
  %"CONTAB[103]*12" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 459, i64 4, {}* %"CONTAB[103]*12", {}* inttoptr (i64 48064 to {}*), {}* inttoptr (i64 1276 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*13" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[416]*14" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 416), align 16
  %"CONTAB[457]*15" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 457), align 8
  %"CONTAB[418]*16" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 460, i64 4, {}* %"CONTAB[414]*13", {}* %"CONTAB[416]*14", {}* %"CONTAB[457]*15", {}* %"CONTAB[418]*16")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^319^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^319^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 462, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"str-SCH=EINZEL_BEHANDLUNG_MERKEN_0", i64 0, i64 0))
  %"CONTAB[462]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 462), align 16
  %"CONTAB[6]*17" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 461, {}* %"CONTAB[462]*", {}* %"CONTAB[6]*17")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 464, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"str-SCH=MERKE_ZEIT", i64 0, i64 0))
  %"CONTAB[464]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 464), align 16
  %"CONTAB[6]*18" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 463, {}* %"CONTAB[464]*", {}* %"CONTAB[6]*18")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 466, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"str-SCH=KONSISTENZTEST", i64 0, i64 0))
  %"CONTAB[466]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 466), align 16
  %"CONTAB[6]*19" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 465, {}* %"CONTAB[466]*", {}* %"CONTAB[6]*19")
  %"CONTAB[94]*20" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*21" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*22" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 467, i64 3, {}* %"CONTAB[94]*20", {}* %"CONTAB[89]*21", {}* %"CONTAB[87]*22")
  %"CONTAB[414]*23" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*24" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  %"CONTAB[218]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 468, i64 3, {}* %"CONTAB[414]*23", {}* %"CONTAB[418]*24", {}* %"CONTAB[218]*")
  %"CONTAB[103]*25" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 469, i64 4, {}* %"CONTAB[103]*25", {}* inttoptr (i64 60824 to {}*), {}* inttoptr (i64 1576 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*26" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*27" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  %"CONTAB[218]*28" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 470, i64 3, {}* %"CONTAB[414]*26", {}* %"CONTAB[418]*27", {}* %"CONTAB[218]*28")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^394^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^394^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 472, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"str-SCH=EINZEL_BEHANDLUNG_VERGESSEN_0", i64 0, i64 0))
  %"CONTAB[472]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 472), align 16
  %"CONTAB[6]*29" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 471, {}* %"CONTAB[472]*", {}* %"CONTAB[6]*29")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 474, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"str-SCH=LOESCHE_ZEIT", i64 0, i64 0))
  %"CONTAB[474]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 474), align 16
  %"CONTAB[6]*30" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 473, {}* %"CONTAB[474]*", {}* %"CONTAB[6]*30")
  %"CONTAB[94]*31" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*32" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*33" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 475, i64 3, {}* %"CONTAB[94]*31", {}* %"CONTAB[89]*32", {}* %"CONTAB[87]*33")
  %"CONTAB[414]*34" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*35" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  %"CONTAB[218]*36" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 476, i64 3, {}* %"CONTAB[414]*34", {}* %"CONTAB[418]*35", {}* %"CONTAB[218]*36")
  %"CONTAB[103]*37" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 477, i64 4, {}* %"CONTAB[103]*37", {}* inttoptr (i64 64200 to {}*), {}* inttoptr (i64 1648 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*38" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*39" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  %"CONTAB[218]*40" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 218), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 478, i64 3, {}* %"CONTAB[414]*38", {}* %"CONTAB[418]*39", {}* %"CONTAB[218]*40")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^412^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^412^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[94]*41" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*42" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*43" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 479, i64 3, {}* %"CONTAB[94]*41", {}* %"CONTAB[89]*42", {}* %"CONTAB[87]*43")
  %"CONTAB[414]*44" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*45" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 480, i64 2, {}* %"CONTAB[414]*44", {}* %"CONTAB[418]*45")
  %"CONTAB[103]*46" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 481, i64 4, {}* %"CONTAB[103]*46", {}* inttoptr (i64 68376 to {}*), {}* inttoptr (i64 1732 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*47" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*48" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 482, i64 2, {}* %"CONTAB[414]*47", {}* %"CONTAB[418]*48")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^433^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^433^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[94]*49" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*50" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*51" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 483, i64 3, {}* %"CONTAB[94]*49", {}* %"CONTAB[89]*50", {}* %"CONTAB[87]*51")
  %"CONTAB[414]*52" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*53" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 484, i64 2, {}* %"CONTAB[414]*52", {}* %"CONTAB[418]*53")
  %"CONTAB[103]*54" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 485, i64 4, {}* %"CONTAB[103]*54", {}* inttoptr (i64 68992 to {}*), {}* inttoptr (i64 1752 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*55" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*56" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 486, i64 2, {}* %"CONTAB[414]*55", {}* %"CONTAB[418]*56")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^438^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^438^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[94]*57" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*58" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*59" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 487, i64 3, {}* %"CONTAB[94]*57", {}* %"CONTAB[89]*58", {}* %"CONTAB[87]*59")
  %"CONTAB[414]*60" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*61" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 488, i64 2, {}* %"CONTAB[414]*60", {}* %"CONTAB[418]*61")
  %"CONTAB[103]*62" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 489, i64 4, {}* %"CONTAB[103]*62", {}* inttoptr (i64 71268 to {}*), {}* inttoptr (i64 1808 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*63" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*64" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 490, i64 2, {}* %"CONTAB[414]*63", {}* %"CONTAB[418]*64")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^452^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^452^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[94]*65" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*66" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*67" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 491, i64 3, {}* %"CONTAB[94]*65", {}* %"CONTAB[89]*66", {}* %"CONTAB[87]*67")
  %"CONTAB[414]*68" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*69" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 492, i64 2, {}* %"CONTAB[414]*68", {}* %"CONTAB[418]*69")
  %"CONTAB[103]*70" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 493, i64 4, {}* %"CONTAB[103]*70", {}* inttoptr (i64 71908 to {}*), {}* inttoptr (i64 1828 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[414]*71" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 414), align 16
  %"CONTAB[418]*72" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 418), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 494, i64 2, {}* %"CONTAB[414]*71", {}* %"CONTAB[418]*72")
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.14() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !124 {
entry:
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^457^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^457^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[18]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 18), align 16
  %"CONTAB[30]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %"CONTAB[32]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 32), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 495, i64 3, {}* %"CONTAB[18]*", {}* %"CONTAB[30]*", {}* %"CONTAB[32]*")
  %"CONTAB[94]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 496, i64 3, {}* %"CONTAB[94]*", {}* %"CONTAB[89]*", {}* %"CONTAB[87]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 498, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str-KONSISTENZ_TEST_OBJEKTE_2, i64 0, i64 0))
  %"CONTAB[498]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 498), align 16
  %"CONTAB[6]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 497, {}* %"CONTAB[498]*", {}* %"CONTAB[6]*")
  %"CONTAB[103]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 499, i64 4, {}* %"CONTAB[103]*", {}* inttoptr (i64 74556 to {}*), {}* inttoptr (i64 1912 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^473^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^473^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[94]*1" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*2" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*3" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 500, i64 3, {}* %"CONTAB[94]*1", {}* %"CONTAB[89]*2", {}* %"CONTAB[87]*3")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 502, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-SCH=HARDCOREBERECHNE", i64 0, i64 0))
  %"CONTAB[502]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 502), align 16
  %"CONTAB[6]*4" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 501, {}* %"CONTAB[502]*", {}* %"CONTAB[6]*4")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 505, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str-L, i64 0, i64 0))
  %"CONTAB[505]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 505), align 8
  %"CONTAB[6]*5" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 504, {}* %"CONTAB[505]*", {}* %"CONTAB[6]*5")
  %"CONTAB[504]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 504), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 503, i64 1, {}* %"CONTAB[504]*")
  %"CONTAB[103]*6" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 506, i64 4, {}* %"CONTAB[103]*6", {}* inttoptr (i64 75360 to {}*), {}* inttoptr (i64 1948 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[504]*7" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 504), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 507, i64 1, {}* %"CONTAB[504]*7")
  %"CONTAB[40]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 508, i64 1, {}* %"CONTAB[40]*")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^487^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^487^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[42]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[44]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 44), align 16
  %"CONTAB[46]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 509, i64 3, {}* %"CONTAB[42]*", {}* %"CONTAB[44]*", {}* %"CONTAB[46]*")
  %"CONTAB[42]*8" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[46]*9" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 510, i64 2, {}* %"CONTAB[42]*8", {}* %"CONTAB[46]*9")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 512, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-SCH=TAGE_TEST", i64 0, i64 0))
  %"CONTAB[512]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 512), align 16
  %"CONTAB[6]*10" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 511, {}* %"CONTAB[512]*", {}* %"CONTAB[6]*10")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 514, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"str-SCH=ANZAHL_TAGE_TEST", i64 0, i64 0))
  %"CONTAB[514]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 514), align 16
  %"CONTAB[6]*11" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 513, {}* %"CONTAB[514]*", {}* %"CONTAB[6]*11")
  %"CONTAB[94]*12" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*13" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*14" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 515, i64 3, {}* %"CONTAB[94]*12", {}* %"CONTAB[89]*13", {}* %"CONTAB[87]*14")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 517, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"str-SCH=ALLE_LEHRER_TAGE_TEST", i64 0, i64 0))
  %"CONTAB[517]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 517), align 8
  %"CONTAB[6]*15" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 516, {}* %"CONTAB[517]*", {}* %"CONTAB[6]*15")
  %"CONTAB[103]*16" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 518, i64 4, {}* %"CONTAB[103]*16", {}* inttoptr (i64 76024 to {}*), {}* inttoptr (i64 1972 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^493^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^493^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 520, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"str-SCH=BERECHNE_ANZAHL_TAGE_AUS_ZEITADT", i64 0, i64 0))
  %"CONTAB[520]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 520), align 16
  %"CONTAB[6]*17" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 519, {}* %"CONTAB[520]*", {}* %"CONTAB[6]*17")
  %"CONTAB[42]*18" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[44]*19" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 44), align 16
  %"CONTAB[46]*20" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 521, i64 3, {}* %"CONTAB[42]*18", {}* %"CONTAB[44]*19", {}* %"CONTAB[46]*20")
  %"CONTAB[42]*21" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 42), align 16
  %"CONTAB[46]*22" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 46), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 522, i64 2, {}* %"CONTAB[42]*21", {}* %"CONTAB[46]*22")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 524, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"str-TWO-ARG-=", i64 0, i64 0))
  %"CONTAB[524]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 524), align 16
  %"CONTAB[2]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 2), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 523, {}* %"CONTAB[524]*", {}* %"CONTAB[2]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 526, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str-BREAK, i64 0, i64 0))
  %"CONTAB[526]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 526), align 16
  %"CONTAB[10]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 525, {}* %"CONTAB[526]*", {}* %"CONTAB[10]*")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 527, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-Bei Lherer ~A", i64 0, i64 0))
  %"CONTAB[94]*23" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*24" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*25" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 528, i64 3, {}* %"CONTAB[94]*23", {}* %"CONTAB[89]*24", {}* %"CONTAB[87]*25")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 531, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str-ANZAHL_TAGE, i64 0, i64 0))
  %"CONTAB[531]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 531), align 8
  %"CONTAB[6]*26" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 530, {}* %"CONTAB[531]*", {}* %"CONTAB[6]*26")
  %"CONTAB[30]*27" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %"CONTAB[530]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 530), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 529, i64 2, {}* %"CONTAB[30]*27", {}* %"CONTAB[530]*")
  %"CONTAB[103]*28" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 532, i64 4, {}* %"CONTAB[103]*28", {}* inttoptr (i64 76812 to {}*), {}* inttoptr (i64 1996 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 533, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @"str-test anzahl_freie_tage  aus adt = rechnung aus zeiten", i64 0, i64 0))
  %"CONTAB[30]*29" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  %"CONTAB[530]*30" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 530), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 534, i64 2, {}* %"CONTAB[30]*29", {}* %"CONTAB[530]*30")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^499^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^499^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 536, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str-SET-EXCLUSIVE-OR, i64 0, i64 0))
  %"CONTAB[536]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 536), align 16
  %"CONTAB[10]*31" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 10), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 535, {}* %"CONTAB[536]*", {}* %"CONTAB[10]*31")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 537, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"str-Bei Lehrer ~a", i64 0, i64 0))
  %"CONTAB[94]*32" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*33" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*34" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 538, i64 3, {}* %"CONTAB[94]*32", {}* %"CONTAB[89]*33", {}* %"CONTAB[87]*34")
  %"CONTAB[30]*35" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 539, i64 1, {}* %"CONTAB[30]*35")
  %"CONTAB[103]*36" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 540, i64 4, {}* %"CONTAB[103]*36", {}* inttoptr (i64 78716 to {}*), {}* inttoptr (i64 2036 to {}*), {}* inttoptr (i64 4 to {}*))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 541, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @"str-test belegte_tage = tage=aus=adt = tage aus belegte_zeiten", i64 0, i64 0))
  %"CONTAB[30]*37" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 30), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 542, i64 1, {}* %"CONTAB[30]*37")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^509^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^509^TOP-COMPILE-FILE", i64 0, i64 0))
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 544, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-SCH=BELGETE_AUS_ADT", i64 0, i64 0))
  %"CONTAB[544]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 544), align 16
  %"CONTAB[6]*38" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 543, {}* %"CONTAB[544]*", {}* %"CONTAB[6]*38")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 546, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"str-SCH=BELGETE_AUS_ZEITEN", i64 0, i64 0))
  %"CONTAB[546]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 546), align 16
  %"CONTAB[6]*39" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 545, {}* %"CONTAB[546]*", {}* %"CONTAB[6]*39")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 547, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"str-Inkonsistenz bei ~A", i64 0, i64 0))
  %"CONTAB[94]*40" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*41" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*42" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 548, i64 3, {}* %"CONTAB[94]*40", {}* %"CONTAB[89]*41", {}* %"CONTAB[87]*42")
  tail call void @ltvc_make_base_string({ i8*, i8*, i64 }* nonnull @constants-table, i64 551, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str-OBJEKT, i64 0, i64 0))
  %"CONTAB[551]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 551), align 8
  %"CONTAB[6]*43" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 6), align 16
  tail call void @ltvc_make_symbol({ i8*, i8*, i64 }* nonnull @constants-table, i64 550, {}* %"CONTAB[551]*", {}* %"CONTAB[6]*43")
  %"CONTAB[550]*" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 550), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 549, i64 1, {}* %"CONTAB[550]*")
  %"CONTAB[103]*44" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 552, i64 4, {}* %"CONTAB[103]*44", {}* inttoptr (i64 80952 to {}*), {}* inttoptr (i64 2080 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[550]*45" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 550), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 553, i64 1, {}* %"CONTAB[550]*45")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^520^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^520^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[94]*46" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*47" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*48" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 554, i64 3, {}* %"CONTAB[94]*46", {}* %"CONTAB[89]*47", {}* %"CONTAB[87]*48")
  %"CONTAB[550]*49" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 550), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 555, i64 1, {}* %"CONTAB[550]*49")
  %"CONTAB[103]*50" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 556, i64 4, {}* %"CONTAB[103]*50", {}* inttoptr (i64 81816 to {}*), {}* inttoptr (i64 2104 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[550]*51" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 550), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 557, i64 1, {}* %"CONTAB[550]*51")
  %"CONTAB[40]*52" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 40), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 558, i64 1, {}* %"CONTAB[40]*52")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^526^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^526^TOP-COMPILE-FILE", i64 0, i64 0))
  %"CONTAB[94]*53" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 94), align 16
  %"CONTAB[89]*54" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 89), align 8
  %"CONTAB[87]*55" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 87), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 559, i64 3, {}* %"CONTAB[94]*53", {}* %"CONTAB[89]*54", {}* %"CONTAB[87]*55")
  %"CONTAB[550]*56" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 550), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 560, i64 1, {}* %"CONTAB[550]*56")
  %"CONTAB[103]*57" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 103), align 8
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 561, i64 4, {}* %"CONTAB[103]*57", {}* inttoptr (i64 82328 to {}*), {}* inttoptr (i64 2128 to {}*), {}* inttoptr (i64 4 to {}*))
  %"CONTAB[550]*58" = load {}*, {}** getelementptr inbounds ([563 x {}*], [563 x {}*]* @CONTAB5442, i64 0, i64 550), align 16
  tail call void ({ i8*, i8*, i64 }*, i64, i64, ...) @ltvc_make_list({ i8*, i8*, i64 }* nonnull @constants-table, i64 562, i64 1, {}* %"CONTAB[550]*58")
  tail call void @ltvc_toplevel_funcall({ {}*, i64 } ({}*, i64, {}*, {}*, {}*, {}*, ...)* nonnull @"zeitbitanwendung.lisp^532^TOP-COMPILE-FILE", i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"str-zeitbitanwendung.lisp^532^TOP-COMPILE-FILE", i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.15() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !125 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.13)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.14)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.16() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !126 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.12)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.15)
  ret void
}

; Function Attrs: uwtable
define internal void @RUN-ALL.17() #0 personality i32 (...)* @__gxx_personality_v0 !dbg !127 {
entry:
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.9)
  tail call void @cc_invoke_sub_run_all_function(void ()* nonnull @RUN-ALL.16)
  ret void
}

; Function Attrs: nounwind
declare void @cc_initialize_gcroots_in_module({ i8*, i8*, i64 }*, {}**, i64, {}*) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @CLASP-CTOR() #0 personality i32 (...)* @__gxx_personality_v0 {
entry:
  tail call void @cc_register_startup_function(void ()* nonnull @RUN-ALL)
  ret void
}

declare void @cc_register_startup_function(void ()*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @cc_error_too_few_arguments(i64, i64, %0*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @cc_error_too_many_arguments(i64, i64, %0*) local_unnamed_addr #5

attributes #0 = { uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #1 = { nounwind "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #2 = { ssp uwtable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #3 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #4 = { nounwind readnone speculatable "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn }

!llvm.ident = !{!0, !1}
!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5, !6, !7, !8}

!0 = !{!"Clasp"}
!1 = !{!"clang version 5.0.1 (tags/RELEASE_501/final)"}
!2 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !3, producer: "clasp Common Lisp compiler", isOptimized: false, flags: "-v", runtimeVersion: 1, splitDebugFilename: "the-split-name.log", emissionKind: LineTablesOnly, enums: !4)
!3 = !DIFile(filename: "zeitbitanwendung.lisp", directory: "/Users/karstenpoeck/lisp/coke/helpers/schule")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"PIC Level", i32 2}
!9 = distinct !DISubprogram(name: "RUN-ALL", linkageName: "RUN-ALL", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed_fixed)
!13 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^2^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^2^TOP-COMPILE-FILE", scope: !3, file: !3, line: 2, type: !10, isLocal: false, isDefinition: true, scopeLine: 2, isOptimized: false, unit: !2, variables: !4)
!14 = !{!15, !19, i64 16}
!15 = !{!"_ZTS13__va_list_tag", !16, i64 0, !16, i64 4, !19, i64 8, !19, i64 16}
!16 = !{!"int", !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C++ TBAA"}
!19 = !{!"any pointer", !17, i64 0}
!20 = !{!15, !16, i64 0}
!21 = !{!22, !22, i64 0}
!22 = !{!"long", !17, i64 0}
!23 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^5^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^5^TOP-COMPILE-FILE", scope: !3, file: !3, line: 5, type: !10, isLocal: false, isDefinition: true, scopeLine: 5, isOptimized: false, unit: !2, variables: !4)
!24 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^7^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^7^TOP-COMPILE-FILE", scope: !3, file: !3, line: 7, type: !10, isLocal: false, isDefinition: true, scopeLine: 7, isOptimized: false, unit: !2, variables: !4)
!25 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^9^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^9^TOP-COMPILE-FILE", scope: !3, file: !3, line: 9, type: !10, isLocal: false, isDefinition: true, scopeLine: 9, isOptimized: false, unit: !2, variables: !4)
!26 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^11^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^11^TOP-COMPILE-FILE", scope: !3, file: !3, line: 11, type: !10, isLocal: false, isDefinition: true, scopeLine: 11, isOptimized: false, unit: !2, variables: !4)
!27 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^14^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^14^TOP-COMPILE-FILE", scope: !3, file: !3, line: 14, type: !10, isLocal: false, isDefinition: true, scopeLine: 14, isOptimized: false, unit: !2, variables: !4)
!28 = distinct !DISubprogram(name: "V2^COMMON-LISP-USER^FN^^", linkageName: "V2^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 14, type: !10, isLocal: false, isDefinition: true, scopeLine: 14, isOptimized: false, unit: !2, variables: !4)
!29 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^25^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^25^TOP-COMPILE-FILE", scope: !3, file: !3, line: 25, type: !10, isLocal: false, isDefinition: true, scopeLine: 25, isOptimized: false, unit: !2, variables: !4)
!30 = distinct !DISubprogram(name: "V21^COMMON-LISP-USER^FN^^", linkageName: "V21^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 25, type: !10, isLocal: false, isDefinition: true, scopeLine: 25, isOptimized: false, unit: !2, variables: !4)
!31 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^35^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^35^TOP-COMPILE-FILE", scope: !3, file: !3, line: 35, type: !10, isLocal: false, isDefinition: true, scopeLine: 35, isOptimized: false, unit: !2, variables: !4)
!32 = distinct !DISubprogram(name: "SCH=ERZEUGE_LEEREN_ZEITADT^COMMON-LISP-USER^FN^^", linkageName: "SCH=ERZEUGE_LEEREN_ZEITADT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 35, type: !10, isLocal: false, isDefinition: true, scopeLine: 35, isOptimized: false, unit: !2, variables: !4)
!33 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^45^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^45^TOP-COMPILE-FILE", scope: !3, file: !3, line: 45, type: !10, isLocal: false, isDefinition: true, scopeLine: 45, isOptimized: false, unit: !2, variables: !4)
!34 = distinct !DISubprogram(name: "V3^COMMON-LISP-USER^FN^^", linkageName: "V3^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 45, type: !10, isLocal: false, isDefinition: true, scopeLine: 45, isOptimized: false, unit: !2, variables: !4)
!35 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^60^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^60^TOP-COMPILE-FILE", scope: !3, file: !3, line: 60, type: !10, isLocal: false, isDefinition: true, scopeLine: 60, isOptimized: false, unit: !2, variables: !4)
!36 = distinct !DISubprogram(name: "V31^COMMON-LISP-USER^FN^^", linkageName: "V31^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 60, type: !10, isLocal: false, isDefinition: true, scopeLine: 60, isOptimized: false, unit: !2, variables: !4)
!37 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^71^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^71^TOP-COMPILE-FILE", scope: !3, file: !3, line: 71, type: !10, isLocal: false, isDefinition: true, scopeLine: 71, isOptimized: false, unit: !2, variables: !4)
!38 = distinct !DISubprogram(name: "KONSISTENZ_TEST_BLOCKUNG^COMMON-LISP-USER^FN^^", linkageName: "KONSISTENZ_TEST_BLOCKUNG^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 71, type: !10, isLocal: false, isDefinition: true, scopeLine: 71, isOptimized: false, unit: !2, variables: !4)
!39 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^78^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^78^TOP-COMPILE-FILE", scope: !3, file: !3, line: 78, type: !10, isLocal: false, isDefinition: true, scopeLine: 78, isOptimized: false, unit: !2, variables: !4)
!40 = distinct !DISubprogram(name: "KONSISTENZ_TEST_OBJEKTE^COMMON-LISP-USER^FN^^", linkageName: "KONSISTENZ_TEST_OBJEKTE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 78, type: !10, isLocal: false, isDefinition: true, scopeLine: 78, isOptimized: false, unit: !2, variables: !4)
!41 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^89^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^89^TOP-COMPILE-FILE", scope: !3, file: !3, line: 89, type: !10, isLocal: false, isDefinition: true, scopeLine: 89, isOptimized: false, unit: !2, variables: !4)
!42 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^91^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^91^TOP-COMPILE-FILE", scope: !3, file: !3, line: 91, type: !10, isLocal: false, isDefinition: true, scopeLine: 91, isOptimized: false, unit: !2, variables: !4)
!43 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^92^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^92^TOP-COMPILE-FILE", scope: !3, file: !3, line: 92, type: !10, isLocal: false, isDefinition: true, scopeLine: 92, isOptimized: false, unit: !2, variables: !4)
!44 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^94^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^94^TOP-COMPILE-FILE", scope: !3, file: !3, line: 94, type: !10, isLocal: false, isDefinition: true, scopeLine: 94, isOptimized: false, unit: !2, variables: !4)
!45 = distinct !DISubprogram(name: "SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^", linkageName: "SCH=VERTAUSCHUNGS_SCHWIERIGKEITEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 94, type: !10, isLocal: false, isDefinition: true, scopeLine: 94, isOptimized: false, unit: !2, variables: !4)
!46 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^104^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^104^TOP-COMPILE-FILE", scope: !3, file: !3, line: 104, type: !10, isLocal: false, isDefinition: true, scopeLine: 104, isOptimized: false, unit: !2, variables: !4)
!47 = distinct !DISubprogram(name: "SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^", linkageName: "SCH=BERECHNE_DYNAMISCH_AUSGESCHLOSSENE_ZEITEN_AUSSER^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 104, type: !10, isLocal: false, isDefinition: true, scopeLine: 104, isOptimized: false, unit: !2, variables: !4)
!48 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^109^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^109^TOP-COMPILE-FILE", scope: !3, file: !3, line: 109, type: !10, isLocal: false, isDefinition: true, scopeLine: 109, isOptimized: false, unit: !2, variables: !4)
!49 = distinct !DISubprogram(name: "SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^", linkageName: "SCH=BERECHNE_BELEGTE_TAGE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 109, type: !10, isLocal: false, isDefinition: true, scopeLine: 109, isOptimized: false, unit: !2, variables: !4)
!50 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^115^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^115^TOP-COMPILE-FILE", scope: !3, file: !3, line: 115, type: !10, isLocal: false, isDefinition: true, scopeLine: 115, isOptimized: false, unit: !2, variables: !4)
!51 = distinct !DISubprogram(name: "SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^", linkageName: "SCH=BE_STATISCHER_SCHLUESSEL^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 115, type: !10, isLocal: false, isDefinition: true, scopeLine: 115, isOptimized: false, unit: !2, variables: !4)
!52 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^120^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^120^TOP-COMPILE-FILE", scope: !3, file: !3, line: 120, type: !10, isLocal: false, isDefinition: true, scopeLine: 120, isOptimized: false, unit: !2, variables: !4)
!53 = distinct !DISubprogram(name: "SCH=BE_PRIOS^COMMON-LISP-USER^FN^^", linkageName: "SCH=BE_PRIOS^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 120, type: !10, isLocal: false, isDefinition: true, scopeLine: 120, isOptimized: false, unit: !2, variables: !4)
!54 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^125^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^125^TOP-COMPILE-FILE", scope: !3, file: !3, line: 125, type: !10, isLocal: false, isDefinition: true, scopeLine: 125, isOptimized: false, unit: !2, variables: !4)
!55 = distinct !DISubprogram(name: "SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^", linkageName: "SCH=DRINGLICHKEIT_PRIORITAETEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 125, type: !10, isLocal: false, isDefinition: true, scopeLine: 125, isOptimized: false, unit: !2, variables: !4)
!56 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^131^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^131^TOP-COMPILE-FILE", scope: !3, file: !3, line: 131, type: !10, isLocal: false, isDefinition: true, scopeLine: 131, isOptimized: false, unit: !2, variables: !4)
!57 = distinct !DISubprogram(name: "SCH=BEREITE_ALLES_VOR_2^COMMON-LISP-USER^FN^^", linkageName: "SCH=BEREITE_ALLES_VOR_2^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 131, type: !10, isLocal: false, isDefinition: true, scopeLine: 131, isOptimized: false, unit: !2, variables: !4)
!58 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^136^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^136^TOP-COMPILE-FILE", scope: !3, file: !3, line: 136, type: !10, isLocal: false, isDefinition: true, scopeLine: 136, isOptimized: false, unit: !2, variables: !4)
!59 = distinct !DISubprogram(name: "SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^", linkageName: "SCH=VOR_JEDEM_VORSCHLAG^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 136, type: !10, isLocal: false, isDefinition: true, scopeLine: 136, isOptimized: false, unit: !2, variables: !4)
!60 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^141^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^141^TOP-COMPILE-FILE", scope: !3, file: !3, line: 141, type: !10, isLocal: false, isDefinition: true, scopeLine: 141, isOptimized: false, unit: !2, variables: !4)
!61 = distinct !DISubprogram(name: "SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^", linkageName: "SCH=NAECHSTE_ZEIT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 141, type: !10, isLocal: false, isDefinition: true, scopeLine: 141, isOptimized: false, unit: !2, variables: !4)
!62 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^146^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^146^TOP-COMPILE-FILE", scope: !3, file: !3, line: 146, type: !10, isLocal: false, isDefinition: true, scopeLine: 146, isOptimized: false, unit: !2, variables: !4)
!63 = distinct !DISubprogram(name: "SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^", linkageName: "SCH=VORHERIGE_ZEIT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 146, type: !10, isLocal: false, isDefinition: true, scopeLine: 146, isOptimized: false, unit: !2, variables: !4)
!64 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^150^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^150^TOP-COMPILE-FILE", scope: !3, file: !3, line: 150, type: !10, isLocal: false, isDefinition: true, scopeLine: 150, isOptimized: false, unit: !2, variables: !4)
!65 = distinct !DISubprogram(name: "SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^", linkageName: "SCH=KLASSEN_LUECKEN_TEST^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 150, type: !10, isLocal: false, isDefinition: true, scopeLine: 150, isOptimized: false, unit: !2, variables: !4)
!66 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 150, type: !10, isLocal: false, isDefinition: true, scopeLine: 150, isOptimized: false, unit: !2, variables: !4)
!67 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^161^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^161^TOP-COMPILE-FILE", scope: !3, file: !3, line: 161, type: !10, isLocal: false, isDefinition: true, scopeLine: 161, isOptimized: false, unit: !2, variables: !4)
!68 = distinct !DISubprogram(name: "SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^", linkageName: "SCH=LEHRER_LUECKEN_TEST^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 161, type: !10, isLocal: false, isDefinition: true, scopeLine: 161, isOptimized: false, unit: !2, variables: !4)
!69 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 161, type: !10, isLocal: false, isDefinition: true, scopeLine: 161, isOptimized: false, unit: !2, variables: !4)
!70 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^172^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^172^TOP-COMPILE-FILE", scope: !3, file: !3, line: 172, type: !10, isLocal: false, isDefinition: true, scopeLine: 172, isOptimized: false, unit: !2, variables: !4)
!71 = distinct !DISubprogram(name: "SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^", linkageName: "SCH=GESETZTE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 172, type: !10, isLocal: false, isDefinition: true, scopeLine: 172, isOptimized: false, unit: !2, variables: !4)
!72 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 172, type: !10, isLocal: false, isDefinition: true, scopeLine: 172, isOptimized: false, unit: !2, variables: !4)
!73 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^178^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^178^TOP-COMPILE-FILE", scope: !3, file: !3, line: 178, type: !10, isLocal: false, isDefinition: true, scopeLine: 178, isOptimized: false, unit: !2, variables: !4)
!74 = distinct !DISubprogram(name: "SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^", linkageName: "SCH=FREIE_BLOCKUNGEN_DER_KLASSE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 178, type: !10, isLocal: false, isDefinition: true, scopeLine: 178, isOptimized: false, unit: !2, variables: !4)
!75 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^184^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^184^TOP-COMPILE-FILE", scope: !3, file: !3, line: 184, type: !10, isLocal: false, isDefinition: true, scopeLine: 184, isOptimized: false, unit: !2, variables: !4)
!76 = distinct !DISubprogram(name: "SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^", linkageName: "SCHULE_PARAMETER_BEKANNT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 184, type: !10, isLocal: false, isDefinition: true, scopeLine: 184, isOptimized: false, unit: !2, variables: !4)
!77 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^311^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^311^TOP-COMPILE-FILE", scope: !3, file: !3, line: 311, type: !10, isLocal: false, isDefinition: true, scopeLine: 311, isOptimized: false, unit: !2, variables: !4)
!78 = distinct !DISubprogram(name: "SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^", linkageName: "SCH-NEUEN-TAG-MERKEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 311, type: !10, isLocal: false, isDefinition: true, scopeLine: 311, isOptimized: false, unit: !2, variables: !4)
!79 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^315^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^315^TOP-COMPILE-FILE", scope: !3, file: !3, line: 315, type: !10, isLocal: false, isDefinition: true, scopeLine: 315, isOptimized: false, unit: !2, variables: !4)
!80 = distinct !DISubprogram(name: "SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^", linkageName: "SCH-LEHRER-BELEGTE-TAGE-NEU-BERECHNEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 315, type: !10, isLocal: false, isDefinition: true, scopeLine: 315, isOptimized: false, unit: !2, variables: !4)
!81 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^319^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^319^TOP-COMPILE-FILE", scope: !3, file: !3, line: 319, type: !10, isLocal: false, isDefinition: true, scopeLine: 319, isOptimized: false, unit: !2, variables: !4)
!82 = distinct !DISubprogram(name: "SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^", linkageName: "SCHULE_PARAMETER_UNBEKANNT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 319, type: !10, isLocal: false, isDefinition: true, scopeLine: 319, isOptimized: false, unit: !2, variables: !4)
!83 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^394^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^394^TOP-COMPILE-FILE", scope: !3, file: !3, line: 394, type: !10, isLocal: false, isDefinition: true, scopeLine: 394, isOptimized: false, unit: !2, variables: !4)
!84 = distinct !DISubprogram(name: "SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^", linkageName: "SCH=EINZEL&MEHRFACH_BEHANDLUNG_MERKEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 394, type: !10, isLocal: false, isDefinition: true, scopeLine: 394, isOptimized: false, unit: !2, variables: !4)
!85 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^412^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^412^TOP-COMPILE-FILE", scope: !3, file: !3, line: 412, type: !10, isLocal: false, isDefinition: true, scopeLine: 412, isOptimized: false, unit: !2, variables: !4)
!86 = distinct !DISubprogram(name: "SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^", linkageName: "SCH=EINZEL&MEHRFACH_BEHANDLUNG_VERGESSEN_OHNE_SPEICHERN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 412, type: !10, isLocal: false, isDefinition: true, scopeLine: 412, isOptimized: false, unit: !2, variables: !4)
!87 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^433^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^433^TOP-COMPILE-FILE", scope: !3, file: !3, line: 433, type: !10, isLocal: false, isDefinition: true, scopeLine: 433, isOptimized: false, unit: !2, variables: !4)
!88 = distinct !DISubprogram(name: "SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^", linkageName: "SCH=EINZEL_BEHANDLUNG_MERKEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 433, type: !10, isLocal: false, isDefinition: true, scopeLine: 433, isOptimized: false, unit: !2, variables: !4)
!89 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^438^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^438^TOP-COMPILE-FILE", scope: !3, file: !3, line: 438, type: !10, isLocal: false, isDefinition: true, scopeLine: 438, isOptimized: false, unit: !2, variables: !4)
!90 = distinct !DISubprogram(name: "SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^", linkageName: "SCH=EINZEL_BEHANDLUNG_MERKEN_0^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 438, type: !10, isLocal: false, isDefinition: true, scopeLine: 438, isOptimized: false, unit: !2, variables: !4)
!91 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^452^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^452^TOP-COMPILE-FILE", scope: !3, file: !3, line: 452, type: !10, isLocal: false, isDefinition: true, scopeLine: 452, isOptimized: false, unit: !2, variables: !4)
!92 = distinct !DISubprogram(name: "SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^", linkageName: "SCH=EINZEL_BEHANDLUNG_VERGESSEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 452, type: !10, isLocal: false, isDefinition: true, scopeLine: 452, isOptimized: false, unit: !2, variables: !4)
!93 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^457^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^457^TOP-COMPILE-FILE", scope: !3, file: !3, line: 457, type: !10, isLocal: false, isDefinition: true, scopeLine: 457, isOptimized: false, unit: !2, variables: !4)
!94 = distinct !DISubprogram(name: "SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^", linkageName: "SCH=EINZEL_BEHANDLUNG_VERGESSEN_0^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 457, type: !10, isLocal: false, isDefinition: true, scopeLine: 457, isOptimized: false, unit: !2, variables: !4)
!95 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^473^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^473^TOP-COMPILE-FILE", scope: !3, file: !3, line: 473, type: !10, isLocal: false, isDefinition: true, scopeLine: 473, isOptimized: false, unit: !2, variables: !4)
!96 = distinct !DISubprogram(name: "KONSISTENZ_TEST_OBJEKTE_2^COMMON-LISP-USER^FN^^", linkageName: "KONSISTENZ_TEST_OBJEKTE_2^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 473, type: !10, isLocal: false, isDefinition: true, scopeLine: 473, isOptimized: false, unit: !2, variables: !4)
!97 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^487^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^487^TOP-COMPILE-FILE", scope: !3, file: !3, line: 487, type: !10, isLocal: false, isDefinition: true, scopeLine: 487, isOptimized: false, unit: !2, variables: !4)
!98 = distinct !DISubprogram(name: "SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^", linkageName: "SCH=HARDCOREBERECHNE^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 487, type: !10, isLocal: false, isDefinition: true, scopeLine: 487, isOptimized: false, unit: !2, variables: !4)
!99 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 487, type: !10, isLocal: false, isDefinition: true, scopeLine: 487, isOptimized: false, unit: !2, variables: !4)
!100 = !{!101, !19, i64 0}
!101 = !{!"_ZTSN7gctools9smart_ptrIN4core3T_OEEE", !19, i64 0}
!102 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^493^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^493^TOP-COMPILE-FILE", scope: !3, file: !3, line: 493, type: !10, isLocal: false, isDefinition: true, scopeLine: 493, isOptimized: false, unit: !2, variables: !4)
!103 = distinct !DISubprogram(name: "SCH=ALLE_LEHRER_TAGE_TEST^COMMON-LISP-USER^FN^^", linkageName: "SCH=ALLE_LEHRER_TAGE_TEST^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 493, type: !10, isLocal: false, isDefinition: true, scopeLine: 493, isOptimized: false, unit: !2, variables: !4)
!104 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^499^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^499^TOP-COMPILE-FILE", scope: !3, file: !3, line: 499, type: !10, isLocal: false, isDefinition: true, scopeLine: 499, isOptimized: false, unit: !2, variables: !4)
!105 = distinct !DISubprogram(name: "SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^", linkageName: "SCH=ANZAHL_TAGE_TEST^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 499, type: !10, isLocal: false, isDefinition: true, scopeLine: 499, isOptimized: false, unit: !2, variables: !4)
!106 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^509^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^509^TOP-COMPILE-FILE", scope: !3, file: !3, line: 509, type: !10, isLocal: false, isDefinition: true, scopeLine: 509, isOptimized: false, unit: !2, variables: !4)
!107 = distinct !DISubprogram(name: "SCH=TAGE_TEST^COMMON-LISP-USER^FN^^", linkageName: "SCH=TAGE_TEST^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 509, type: !10, isLocal: false, isDefinition: true, scopeLine: 509, isOptimized: false, unit: !2, variables: !4)
!108 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^520^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^520^TOP-COMPILE-FILE", scope: !3, file: !3, line: 520, type: !10, isLocal: false, isDefinition: true, scopeLine: 520, isOptimized: false, unit: !2, variables: !4)
!109 = distinct !DISubprogram(name: "SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^", linkageName: "SCH=KONSISTENZTEST^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 520, type: !10, isLocal: false, isDefinition: true, scopeLine: 520, isOptimized: false, unit: !2, variables: !4)
!110 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^526^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^526^TOP-COMPILE-FILE", scope: !3, file: !3, line: 526, type: !10, isLocal: false, isDefinition: true, scopeLine: 526, isOptimized: false, unit: !2, variables: !4)
!111 = distinct !DISubprogram(name: "SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^", linkageName: "SCH=BELGETE_AUS_ZEITEN^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 526, type: !10, isLocal: false, isDefinition: true, scopeLine: 526, isOptimized: false, unit: !2, variables: !4)
!112 = distinct !DISubprogram(name: "LAMBDA^COMMON-LISP^FN^^", linkageName: "LAMBDA^COMMON-LISP^FN^^", scope: !3, file: !3, line: 526, type: !10, isLocal: false, isDefinition: true, scopeLine: 526, isOptimized: false, unit: !2, variables: !4)
!113 = distinct !DISubprogram(name: "zeitbitanwendung.lisp^532^TOP-COMPILE-FILE", linkageName: "zeitbitanwendung.lisp^532^TOP-COMPILE-FILE", scope: !3, file: !3, line: 532, type: !10, isLocal: false, isDefinition: true, scopeLine: 532, isOptimized: false, unit: !2, variables: !4)
!114 = distinct !DISubprogram(name: "SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^", linkageName: "SCH=BELGETE_AUS_ADT^COMMON-LISP-USER^FN^^", scope: !3, file: !3, line: 532, type: !10, isLocal: false, isDefinition: true, scopeLine: 532, isOptimized: false, unit: !2, variables: !4)
!115 = distinct !DISubprogram(name: "RUN-ALL.5", linkageName: "RUN-ALL.5", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!116 = distinct !DISubprogram(name: "RUN-ALL.6", linkageName: "RUN-ALL.6", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!117 = distinct !DISubprogram(name: "RUN-ALL.7", linkageName: "RUN-ALL.7", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!118 = distinct !DISubprogram(name: "RUN-ALL.8", linkageName: "RUN-ALL.8", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!119 = distinct !DISubprogram(name: "RUN-ALL.9", linkageName: "RUN-ALL.9", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!120 = distinct !DISubprogram(name: "RUN-ALL.10", linkageName: "RUN-ALL.10", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!121 = distinct !DISubprogram(name: "RUN-ALL.11", linkageName: "RUN-ALL.11", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!122 = distinct !DISubprogram(name: "RUN-ALL.12", linkageName: "RUN-ALL.12", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!123 = distinct !DISubprogram(name: "RUN-ALL.13", linkageName: "RUN-ALL.13", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!124 = distinct !DISubprogram(name: "RUN-ALL.14", linkageName: "RUN-ALL.14", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!125 = distinct !DISubprogram(name: "RUN-ALL.15", linkageName: "RUN-ALL.15", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!126 = distinct !DISubprogram(name: "RUN-ALL.16", linkageName: "RUN-ALL.16", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
!127 = distinct !DISubprogram(name: "RUN-ALL.17", linkageName: "RUN-ALL.17", scope: !3, file: !3, type: !10, isLocal: false, isDefinition: true, isOptimized: false, unit: !2, variables: !4)
